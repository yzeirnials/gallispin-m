
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8cb6248 prev 0x55f4c8cad9b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8cb6340 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55f4c8cb63d0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55f4c8cb6448 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55f4c8cb6508 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55f4c8cb65d0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55f4c8cb6748 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55f4c8cb6680 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55f4c8cb67f0 <col:24>
| `-OptimizeNoneAttr 0x55f4c8cb6848 <col:34>
|-CXXMethodDecl 0x55f4c8cb6890 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55f4c8cb6b48 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55f4c8cb6940 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f4c8cb69b8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55f4c8cb6a38 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55f4c8cb6c10 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55f4c8cb6c48 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55f4c8cb6cb0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55f4c8cb6d38 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55f4c8cb7058 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55f4c8cb6df0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f4c8cb6e68 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55f4c8cb6ee0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55f4c8cb6f60 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55f4c8cb7170 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55f4c8c25718 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f4c8c25718
| `-ParmVarDecl 0x55f4c8c25828 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55f4c8c258c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f4c8c258c8
| `-ParmVarDecl 0x55f4c8c259d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55f4c8e069c0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8ca9200 prev 0x55f4c8ca8f80 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8ca92f8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55f4c8ca9388 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55f4c8ca93e8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55f4c8ca94d8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55f4c8ca95d8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55f4c8ca97a8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55f4c8ca9658 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55f4c8ca96d0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55f4c8ca9938 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55f4c8ca9870 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55f4c8ca99e0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8ca9b18 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55f4c8ca9a50 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55f4c8ca9cb8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55f4c8ca9bf8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55f4c8ca9e58 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55f4c8ca9d98 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55f4c8ca9f00 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55f4c8caa000 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55f4c8caa0e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8ca9fe0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55f4c8ca9fc0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55f4c8caa090 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55f4c8caa0f8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8caa070 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55f4c8caa050 <col:44> 'int' 2
|-CXXMethodDecl 0x55f4c8caa240 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55f4c8caa128 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f4c8caa1a8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55f4c8caa398 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55f4c8caa308 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55f4c8caa5d8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55f4c8caa458 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55f4c8caa4d0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55f4c8caa688 <col:20>
| `-OptimizeNoneAttr 0x55f4c8caa6e0 <col:30>
|-CXXMethodDecl 0x55f4c8caa7e8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55f4c8caa720 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55f4c8caa890 <col:20>
| `-OptimizeNoneAttr 0x55f4c8caa8e8 <col:30>
|-CXXMethodDecl 0x55f4c8caa938 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55f4c8caaa00 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55f4c8caab18 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55f4c8caabe0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55f4c8caac68 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55f4c8caacf0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55f4c8caad78 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55f4c8caae08 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55f4c8caaec8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55f4c8caaf50 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55f4c8caafd8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55f4c8cab060 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55f4c8cab0e8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55f4c8cab170 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55f4c8cab200 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55f4c8cab2c0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55f4c8cab350 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55f4c8cab4a0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55f4c8cab408 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55f4c8cab630 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55f4c8cab560 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55f4c8cab8d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55f4c8cab6e8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55f4c8cab768 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55f4c8cab7e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55f4c8cab988 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55f4c8caba90 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8cabd20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8caba70 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8caba50 <col:33> 'int' 0
| |-EnumConstantDecl 0x55f4c8cabb20 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8cabd38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cabb00 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55f4c8cabae0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55f4c8cabbb0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8cabd50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cabb90 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55f4c8cabb70 <col:38> 'int' 90
| |-EnumConstantDecl 0x55f4c8cabc40 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8cabd68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cabc20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55f4c8cabc00 <col:35> 'int' 100
| `-EnumConstantDecl 0x55f4c8cabcd0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f4c8cabd80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8cabcb0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55f4c8cabc90 <col:32> 'int' 2000
|-CXXMethodDecl 0x55f4c8cabdc0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55f4c8cac200 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f4c8cac070 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f4c8cac0e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cac2d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55f4c8cac450 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55f4c8cac380 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cac658 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f4c8cac508 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55f4c8cac580 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cac758 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55f4c8cac7f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55f4c8cac8c0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f4c8cac950 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55f4c8cacb80 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cac930 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55f4c8cac910 <col:36> 'int' EnumConstant 0x55f4c8cac8c0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f4c8cac9a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f4c8cac9f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f4c8caca40 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f4c8caca90 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f4c8cacae0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55f4c8cacb30 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55f4c8cacc68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55f4c8cacba8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55f4c8cacd30 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55f4c8cacdf0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55f4c8caceb0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55f4c8cacf70 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55f4c8cad088 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55f4c8cad150 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55f4c8cad2d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55f4c8cad200 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55f4c8cad3f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f4c8cad5f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55f4c8cad4a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55f4c8cad528 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55f4c8cb9f58 <col:54, line:127:5>
|   |-ParenExpr 0x55f4c8cb9e08 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55f4c8cb9dd8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8cb9ac8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f4c8cb9aa0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55f4c8cb9a88 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55f4c8cb9a70 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55f4c8cb9a40 <col:31> 'Router *' lvalue ->_router 0x55f4c8cb7920
|   |   |         `-CXXThisExpr 0x55f4c8cb9a30 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f4c8cb9b28 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8cb9b08 <col:48> 'int' 0
|   |   `-CallExpr 0x55f4c8cb9d38 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8cb9d20 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8cb9d00 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8cb9d78 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8cb9b98 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55f4c8cb9d90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8cb9bb8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55f4c8cb9da8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8cb9bf0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55f4c8cb9dc0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8cb9ce8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8cb9cd0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8cb9c88 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55f4c8cb9ea0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55f4c8cb9e38 <col:9> 'Router *' lvalue ->_router 0x55f4c8cb7920
|   | | `-CXXThisExpr 0x55f4c8cb9e28 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8cb9e88 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f4c8cb9e68 <col:19> 'Router *' lvalue ParmVar 0x55f4c8cad4a8 'r' 'Router *'
|   `-BinaryOperator 0x55f4c8cb9f38 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55f4c8cb9ed0 <col:9> 'int' lvalue ->_eindex 0x55f4c8cb7988
|     | `-CXXThisExpr 0x55f4c8cb9ec0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55f4c8cb9f20 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8cb9f00 <col:19> 'int' lvalue ParmVar 0x55f4c8cad528 'eindex' 'int'
|-CXXMethodDecl 0x55f4c8cad780 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55f4c8cad6b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55f4c8cad850 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55f4c8cad918 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55f4c8cad9b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55f4c8cadc08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55f4c8cada80 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55f4c8cadb00 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55f4c8cadcb8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8cadd10 <col:30>
|-CXXMethodDecl 0x55f4c8cade18 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f4c8cadd50 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55f4c8cadec0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8cadf18 <col:30>
|-CXXMethodDecl 0x55f4c8cadfe8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f4c8cadf58 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55f4c8cae090 <col:20>
| `-OptimizeNoneAttr 0x55f4c8cae0e8 <col:30>
|-CXXMethodDecl 0x55f4c8cae278 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55f4c8cae120 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55f4c8cae1a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55f4c8cae408 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f4c8cae340 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f4c8cae558 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f4c8cae4c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f4c8cae6a8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f4c8cae618 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f4c8cae7f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f4c8cae768 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f4c8caeab8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55f4c8cae8b0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55f4c8cae930 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55f4c8cae9d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55f4c8caebf0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55f4c8caecb0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55f4c8caef80 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f4c8caee30 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55f4c8caeea8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8caf0a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55f4c8caf280 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55f4c8caf160 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55f4c8caf1e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55f4c8caf468 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55f4c8caf348 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55f4c8caf3c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55f4c8caf7d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f4c8caf528 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f4c8caf5a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f4c8caf620 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f4c8cb9540 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f4c8cb9520 <col:106> 'int' 0
| `-ParmVarDecl 0x55f4c8caf698 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f4c8cb9578 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f4c8cb9558 <col:126> 'int' 0
|-CXXMethodDecl 0x55f4c8cafb58 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f4c8caf8a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f4c8caf920 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f4c8caf9a0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55f4c8cafa18 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f4c8cb95b0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f4c8cb9590 <col:114> 'int' 0
|-CXXMethodDecl 0x55f4c8cafee8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f4c8cafc30 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55f4c8cafca8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f4c8cafd28 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55f4c8cb95c8 <col:96> 'int' 0
| `-ParmVarDecl 0x55f4c8cafda0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f4c8cb9608 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f4c8cb95e8 <col:116> 'int' 0
|-CXXMethodDecl 0x55f4c8cb0268 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f4c8caffb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f4c8cb0030 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb00b0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f4c8cb9640 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f4c8cb9620 <col:109> 'int' 0
| `-ParmVarDecl 0x55f4c8cb0128 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f4c8cb9678 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f4c8cb9658 <col:129> 'int' 0
|-CXXMethodDecl 0x55f4c8cb05e8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f4c8cb0338 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f4c8cb03b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb0430 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55f4c8cb04a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f4c8cb96b0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f4c8cb9690 <col:117> 'int' 0
|-CXXMethodDecl 0x55f4c8cb0978 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f4c8cb06c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb0738 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb07b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55f4c8cb96c8 <col:99> 'int' 0
| `-ParmVarDecl 0x55f4c8cb0830 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f4c8cb9708 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f4c8cb96e8 <col:119> 'int' 0
|-CXXMethodDecl 0x55f4c8cb0d98 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55f4c8cb0a48 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f4c8cb0ac8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f4c8cb0b40 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb0bc0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f4c8cb9740 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f4c8cb9720 <col:108> 'int' 0
| `-ParmVarDecl 0x55f4c8cb0c40 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55f4c8cb9778 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55f4c8cb9758 <col:141> 'int' 0
|-CXXMethodDecl 0x55f4c8cb11b8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f4c8cb0e70 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f4c8cb0ef0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f4c8cb0f68 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb0fe8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55f4c8cb1068 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f4c8cb9790 <col:121> 'int' 0
|-CXXMethodDecl 0x55f4c8cb15e8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f4c8cb1298 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb1318 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55f4c8cb1390 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb1410 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55f4c8cb97b0 <col:98> 'int' 0
| `-ParmVarDecl 0x55f4c8cb1490 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f4c8cb97d0 <col:123> 'int' 0
|-CXXMethodDecl 0x55f4c8cb18b0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55f4c8cb16c0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f4c8cb1740 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55f4c8cb17c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55f4c8cb97f0 <col:80> 'int' 0
|-EnumDecl 0x55f4c8cb1968 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55f4c8cb1a70 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f4c8cb1d00 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cb1a50 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55f4c8cb1a30 <col:42> 'int' 1
| |-EnumConstantDecl 0x55f4c8cb1b00 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f4c8cb1d18 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cb1ae0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55f4c8cb1ac0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f4c8cb1b90 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f4c8cb1d30 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cb1b70 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55f4c8cb1b50 <col:44> 'int' 4
| |-EnumConstantDecl 0x55f4c8cb1c20 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f4c8cb1d48 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8cb1c00 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55f4c8cb1be0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55f4c8cb1cb0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55f4c8cb1d60 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8cb1c90 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55f4c8cb1c70 <col:34> 'int' 6
|-CXXMethodDecl 0x55f4c8cb2018 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55f4c8cb1d88 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55f4c8cb1e28 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f4c8cb1ea8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55f4c8cb1f20 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55f4c8cb98a8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f4c8cb9890 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f4c8cb9878 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f4c8cb9858 <col:98, col:105> 'String' (CXXTemporary 0x55f4c8cb9858)
|           `-CXXTemporaryObjectExpr 0x55f4c8cb9820 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55f4c8cb22b8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55f4c8cb20e8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f4c8cb2160 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f4c8cb21d8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f4c8cb9958 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f4c8cb9940 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f4c8cb9928 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f4c8cb9908 <col:94, col:101> 'String' (CXXTemporary 0x55f4c8cb9908)
| |         `-CXXTemporaryObjectExpr 0x55f4c8cb98d0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55f4c8cba140 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55f4c8cba0b8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55f4c8cba088 <col:9> '<bound member function type>' ->add_task_handlers 0x55f4c8cb2018
|     | `-CXXThisExpr 0x55f4c8cba078 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f4c8cba0f8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8cb9ff8 <col:27> 'Task *' lvalue ParmVar 0x55f4c8cb20e8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f4c8cba110 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8cba018 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55f4c8cb2160 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55f4c8cba128 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f4c8cba038 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f4c8cb1cb0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f4c8cba058 <col:62> 'const String' lvalue ParmVar 0x55f4c8cb21d8 'prefix' 'const String &'
|-CXXMethodDecl 0x55f4c8cb24c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55f4c8cb2380 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f4c8cb23f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f4c8cb9a08 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f4c8cb99f0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f4c8cb99d8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f4c8cb99b8 <col:70, col:77> 'String' (CXXTemporary 0x55f4c8cb99b8)
| |         `-CXXTemporaryObjectExpr 0x55f4c8cb9980 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55f4c8cba318 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55f4c8cba290 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55f4c8cba260 <col:9> '<bound member function type>' ->add_task_handlers 0x55f4c8cb2018
|     | `-CXXThisExpr 0x55f4c8cba250 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f4c8cba2d0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8cba1d0 <col:27> 'Task *' lvalue ParmVar 0x55f4c8cb2380 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f4c8cba2e8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55f4c8cba1f0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55f4c8cba300 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f4c8cba210 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f4c8cb1cb0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f4c8cba230 <col:57> 'const String' lvalue ParmVar 0x55f4c8cb23f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55f4c8cb27a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55f4c8cb2590 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb2610 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb2688 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55f4c8cb2a58 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55f4c8cb2878 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb28f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb2978 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55f4c8cb2d98 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f4c8cb2b28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb2c00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb2c78 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55f4c8cb3048 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55f4c8cb2e68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb2ee8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb2f68 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55f4c8cb32f8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55f4c8cb3118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb3198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb3218 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55f4c8cb35a8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55f4c8cb33c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb3448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb34c0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55f4c8cb3858 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55f4c8cb3678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb36f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb3778 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55f4c8cb3b08 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55f4c8cb3928 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb39a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb3a28 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55f4c8cb3de8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55f4c8cb3bd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb3c58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb3d00 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55f4c8cb40c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55f4c8cb3eb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb3f38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb3fe0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55f4c8cb4330 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f4c8cb4198 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb4218 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f4c8cb4290 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55f4c8cb45d8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55f4c8cb4400 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb4480 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f4c8cb44f8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55f4c8cb4888 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55f4c8cb46a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb4728 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb47a8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55f4c8cb4b38 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55f4c8cb4958 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb49d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb4a50 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55f4c8cb4de8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55f4c8cb4c08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb4c88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb4d00 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55f4c8cb50b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55f4c8cb4eb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb4f38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f4c8cb4fd8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55f4c8cb53e8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55f4c8cb5188 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb5208 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55f4c8cb5280 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55f4c8cb52f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8cb9a20 <col:93> 'bool' false
|-CXXMethodDecl 0x55f4c8cb55d0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f4c8cb54b8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55f4c8cb5538 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55f4c8cb57a8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f4c8cb5690 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55f4c8cb5710 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55f4c8cb5a88 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8cb5868 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55f4c8cb58e0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55f4c8cb5960 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55f4c8cb59d8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cb5d78 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8cb5b58 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55f4c8cb5bd0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55f4c8cb5c50 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55f4c8cb5cc8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cb5fb0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55f4c8cb5e50 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55f4c8cb5ed0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55f4c8cb6198 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55f4c8cb6078 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55f4c8cb60f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55f4c8cb6248 prev 0x55f4c8cad9b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f4c8cb6340 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55f4c8cb63d0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55f4c8cb6448 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55f4c8cb6508 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55f4c8cb65d0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55f4c8cb6748 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55f4c8cb6680 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55f4c8cb67f0 <col:24>
| | `-OptimizeNoneAttr 0x55f4c8cb6848 <col:34>
| |-CXXMethodDecl 0x55f4c8cb6890 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55f4c8cb6b48 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55f4c8cb6940 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f4c8cb69b8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55f4c8cb6a38 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55f4c8cb6c10 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55f4c8cb6c48 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55f4c8cb6cb0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55f4c8cb6d38 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55f4c8cb7058 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55f4c8cb6df0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f4c8cb6e68 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55f4c8cb6ee0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55f4c8cb6f60 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55f4c8cb7170 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55f4c8c25718 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f4c8c25718
| | `-ParmVarDecl 0x55f4c8c25828 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55f4c8c258c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f4c8c258c8
| | `-ParmVarDecl 0x55f4c8c259d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55f4c8e069c0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8cb71e8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55f4c8cb7288 <col:38> "" ""
|-CXXMethodDecl 0x55f4c8cb7318 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55f4c8cb73b8 <col:44> "" ""
|-AccessSpecDecl 0x55f4c8cb7428 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55f4c8cb7450 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55f4c8cb7550 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55f4c8cb75a0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8cb7530 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55f4c8cb7510 <col:27> 'int' 4
|-FieldDecl 0x55f4c8cb7658 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55f4c8cb7808 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55f4c8cb78c0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55f4c8cb7920 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55f4c8cb7988 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55f4c8cb7ad8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55f4c8cb7a18 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55f4c8cb7c88 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55f4c8cb7b98 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55f4c8cb7e68 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55f4c8cb7d48 <col:20> col:23 'int'
| `-ParmVarDecl 0x55f4c8cb7dc8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55f4c8cb8110 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8cb7f30 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f4c8cb7fb0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55f4c8cb8028 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55f4c8cb81c8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55f4c8cb8290 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55f4c8cb82e0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55f4c8cb8330 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55f4c8cb8510 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8cb83c0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55f4c8cb8438 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cb87b8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f4c8cb85d8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55f4c8cb8658 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55f4c8cb86d0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8cb89d8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55f4c8cb8888 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55f4c8cb8908 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55f4c8cb8d10 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55f4c8cb8a98 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55f4c8cb8b18 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55f4c8cb8b90 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55f4c8cb8c10 <col:57> col:60 'int'
|-CXXMethodDecl 0x55f4c8cb8ef8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f4c8cb8de0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f4c8cb8e60 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55f4c8cb9048 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55f4c8cb8fb8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55f4c8cb93c8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55f4c8cb9108 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55f4c8cb9188 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55f4c8cb9200 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55f4c8cb9280 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55f4c8cb94e0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d9da00 prev 0x55f4c8d6ecc0 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 referenced class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8d9daf8 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55f4c8d9db88 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f4c8d9dbe8 <line:187:5, col:18> col:5 used IPMapper 'void ()'
| `-CompoundStmt 0x55f4c8d9e608 <col:16, col:18>
|-CXXDestructorDecl 0x55f4c8d9dcd8 <line:188:5, col:27> col:13 used ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55f4c8d9e618 <col:25, col:27>
|-CXXMethodDecl 0x55f4c8d9dfa8 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f4c8d9ddd0 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55f4c8d9de48 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55f4c8d9dec0 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d9e360 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55f4c8d9e070 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f4c8d9e0e8 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f4c8d9e160 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55f4c8d9e1d8 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55f4c8d9e258 <col:22, col:26> col:26 mapid 'int'
|-CXXMethodDecl 0x55f4c8d9e488 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55f4c8d9e488
| `-ParmVarDecl 0x55f4c8d9e598 <col:7> col:7 'const IPMapper &'
`-CXXConstructorDecl 0x55f4c8e06768 <col:7> col:7 implicit constexpr IPMapper 'void (const IPMapper &)' inline default noexcept-unevaluated 0x55f4c8e06768
  `-ParmVarDecl 0x55f4c8e06878 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class RoundRobinIPMapper
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class IPMapper (base)
       112 |     (IPMapper vtable pointer)
       120 |   class Vector<class IPRewriterInput> _is
       120 |     class vector_memory<class sized_array_memory<56> > vm_
       120 |       vector_memory<class sized_array_memory<56> >::type * l_
       128 |       vector_memory::size_type n_
       132 |       vector_memory::size_type capacity_
       136 |   int _last_pattern
           | [sizeof=144, dsize=140, align=8,
           |  nvsize=140, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d8efc0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55f4c8d8f198 prev 0x55f4c8d8efc0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f4c8d8f228 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f4c8d8f250 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8d90e20 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55f4c8d90dd0 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55f4c8d8f700 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55f4c8d8f600 'type'
|     `-TemplateSpecializationType 0x55f4c8d8f590 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f4c8d8f470 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55f4c8d8f450 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f4c8d8f430 <col:24> 'unsigned long' 56
|       `-RecordType 0x55f4c8d8f570 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55f4c8d8f490 'char_array'
|-TypedefDecl 0x55f4c8d90ed8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55f4c8d90ea0 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55f4c8d90e80 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55f4c8d90e20 'type'
|     `-ElaboratedType 0x55f4c8d90dd0 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55f4c8d8f700 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55f4c8d8f600 'type'
|         `-TemplateSpecializationType 0x55f4c8d8f590 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f4c8d8f470 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55f4c8d8f450 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f4c8d8f430 <col:24> 'unsigned long' 56
|           `-RecordType 0x55f4c8d8f570 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55f4c8d8f490 'char_array'
|-CXXMethodDecl 0x55f4c8d91058 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55f4c8d90f68 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55f4c8d91148 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f4c8d91228 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55f4c8d914f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55f4c8d91400 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55f4c8d91738 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f4c8d915b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8d91628 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d91908 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f4c8d917f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8d91870 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d91a68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55f4c8d91b38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55f4c8d91d88 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f4c8d91bf8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55f4c8d91c70 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d91fe8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55f4c8d91e58 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55f4c8d91ed0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d921a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55f4c8d920b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d92368 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55f4c8d92270 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d92420 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f4c8d924d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f4c8d92708 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f4c8d92580 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8d925f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f4c8d929a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55f4c8d928b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55f4c8d92a70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55f4c8d92ac0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f4c8d92b10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d8da28 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55f4c8d8dc38 prev 0x55f4c8d8da28 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f4c8d8ef30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55f4c8d8eee0 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55f4c8d8eec0 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55f4c8d8ed70 'type'
|     `-SubstTemplateTypeParmType 0x55f4c8d8eb90 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55f4c8a19ee0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a19e88 'T'
|       `-RecordType 0x55f4c8d8e6e0 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55f4c8d8e600 'sized_array_memory'
|-FieldDecl 0x55f4c8d92b60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55f4c8d92bb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f4c8d92be8 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f4c8a51088 'T'
|   `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|     `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d92ca8 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55f4c8d92c70 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|       `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d92d68 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55f4c8d92d30 'const IPRewriterInput &'
|   `-QualType 0x55f4c8d8dcd1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|         `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d92df8 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55f4c8d92dc0 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|       `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d92eb8 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55f4c8d92e80 'const IPRewriterInput *'
|   `-QualType 0x55f4c8d8dcd1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|         `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d93b10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55f4c8d93ac0 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55f4c8d93aa0 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55f4c8d939d8 'type'
|     `-LValueReferenceType 0x55f4c8d939a0 'const IPRewriterInput &'
|       `-QualType 0x55f4c8d93741 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55f4c8d93740 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55f4c8a229f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f4c8a22998 'T'
|           `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|             `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d93b78 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55f4c8d92d30 'const IPRewriterInput &'
|   `-QualType 0x55f4c8d8dcd1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|         `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d93bd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8d93c38 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55f4c8d92dc0 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|       `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-TypedefDecl 0x55f4c8d93ca0 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55f4c8d92e80 'const IPRewriterInput *'
|   `-QualType 0x55f4c8d8dcd1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f4c8d8dcd0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8d51540 'IPRewriterInput'
|         `-CXXRecord 0x55f4c8d6ee00 'IPRewriterInput'
|-EnumDecl 0x55f4c8d93cf8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f4c8d93df0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f4c8d93dd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f4c8a522a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f4c8a52280 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f4c8a52260 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f4c8d93e78 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55f4c8d94108 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d93f30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8d93fd0 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55f4c8d943c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55f4c8d942b0 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55f4c8d94688 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55f4c8d94570 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55f4c8d949d0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55f4c8d948b0 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55f4c8d94ce0 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55f4c8d94bc0 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55f4c8d96900 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d94e18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8d967c0 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f4c8d96a58 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55f4c8d96b38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d96b90 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d96bd8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55f4c8d96c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d96ce0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d96da8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d96e58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d96eb0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d96ef8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d96fa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d97000 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d97048 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d970f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d97150 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d97198 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d97248 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d972a0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d972c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f4c8d97378 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f4c8d97428 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f4c8d975e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d974d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8d97550 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f4c8d97738 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8d976a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d978e8 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55f4c8d977f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f4c8d979a0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8d979f8 <col:30>
|-CXXMethodDecl 0x55f4c8d97b18 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55f4c8d97a20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f4c8d97bd0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8d97c28 <col:30>
|-CXXMethodDecl 0x55f4c8d97ce0 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8d97c50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d97e28 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f4c8d97d98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d97f58 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55f4c8d98088 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55f4c8d98158 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55f4c8d98228 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55f4c8d98368 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8d982d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d984b0 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f4c8d98420 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d985f8 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f4c8d98568 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f4c8d986b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f4c8d987b0 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f4c8d98720 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f4c8d98868 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f4c8d98928 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55f4c8d98a28 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55f4c8d98bd8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55f4c8d98ae8 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55f4c8d99398 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f4c8d98c90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55f4c8d992f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55f4c8d991f8 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55f4c8d99478 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f4c8d995c8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55f4c8d99538 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f4c8d99680 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f4c8d998c8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d99740 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55f4c8d997b8 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f4c8d99a88 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55f4c8d99998 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55f4c8d99cd8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55f4c8d99b50 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55f4c8d99bc8 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55f4c8d99d98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f4c8d99ff8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55f4c8d99f00 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55f4c8d9a0c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55f4c8e069b0 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8da9040 <../elements/ip/rripmapper.hh:22:1, line:45:1> line:22:7 class RoundRobinIPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-public 'IPMapper'
|-CXXRecordDecl 0x55f4c8da91d8 <col:1, col:7> col:7 implicit referenced class RoundRobinIPMapper
|-AccessSpecDecl 0x55f4c8da9268 <col:62, col:68> col:62 public
|-CXXConstructorDecl 0x55f4c8da92f0 <line:24:5, col:24> col:5 RoundRobinIPMapper 'void ()'
|-CXXDestructorDecl 0x55f4c8da93e0 <line:25:5, col:25> col:5 ~RoundRobinIPMapper 'void ()' noexcept-unevaluated 0x55f4c8da93e0
| `-Overrides: [ 0x55f4c8ca94d8 Element::~Element 'void () noexcept', 0x55f4c8d9dcd8 IPMapper::~IPMapper 'void () noexcept' ]
|-CXXMethodDecl 0x55f4c8da9510 <line:27:5, col:67> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55f4c8caa938 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55f4c8daa710 <col:36, col:67>
|   `-ReturnStmt 0x55f4c8daa700 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f4c8daa6e8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f4c8daa6b8 <col:45> 'const char [19]' lvalue "RoundRobinIPMapper"
|-CXXMethodDecl 0x55f4c8da9660 <line:28:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55f4c8cab630 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55f4c8da95c8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55f4c8da9730 <line:30:5, col:81> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55f4c8cabdc0 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55f4c8daa7b8 <col:33, col:81>
|   `-ReturnStmt 0x55f4c8daa7a8 <col:35, col:58>
|     `-ImplicitCastExpr 0x55f4c8daa790 <col:42, col:58> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55f4c8daa760 <col:42, col:58> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55f4c8d84508 'CONFIGURE_PHASE_MAPPER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55f4c8da9a00 <line:31:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f4c8cac200 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f4c8da98b0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f4c8da9928 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8da9b50 <line:32:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55f4c8cacc68 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55f4c8da9ac0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55f4c8da9d98 <line:34:5, line:35:23> line:34:10 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)'
| |-Overrides: [ 0x55f4c8d9dfa8 IPMapper::notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f4c8da9c08 <col:26, col:42> col:42 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55f4c8da9c80 <col:48, col:65> col:65 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55f4c8da9cf8 <line:35:5, col:19> col:19 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8daa100 <line:36:5, line:38:30> line:36:9 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)'
| |-Overrides: [ 0x55f4c8d9e360 IPMapper::rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' ]
| |-ParmVarDecl 0x55f4c8da9e60 <col:24, col:41> col:41 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f4c8da9ed8 <line:37:10, col:26> col:26 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f4c8da9f50 <col:34, col:44> col:44 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55f4c8da9fc8 <line:38:10, col:18> col:18 p 'Packet *'
| `-ParmVarDecl 0x55f4c8daa048 <col:21, col:25> col:25 mapid 'int'
|-AccessSpecDecl 0x55f4c8daa1c8 <line:40:2, col:9> col:2 private
|-FieldDecl 0x55f4c8daa2a0 <line:42:5, col:29> col:29 _is 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55f4c8daa308 <line:43:5, col:9> col:9 _last_pattern 'int'
|-CXXConstructorDecl 0x55f4c8daa388 <line:22:7> col:7 implicit RoundRobinIPMapper 'void (const RoundRobinIPMapper &)' inline default_delete noexcept-unevaluated 0x55f4c8daa388
| `-ParmVarDecl 0x55f4c8daa498 <col:7> col:7 'const RoundRobinIPMapper &'
`-CXXMethodDecl 0x55f4c8daa538 <col:7> col:7 implicit operator= 'RoundRobinIPMapper &(const RoundRobinIPMapper &)' inline default_delete noexcept-unevaluated 0x55f4c8daa538
  `-ParmVarDecl 0x55f4c8daa648 <col:7> col:7 'const RoundRobinIPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.RoundRobinIPMapper = type <{ %class.Element.base, [4 x i8], %class.IPMapper, %class.Vector, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.RoundRobinIPMapper.base = type <{ %class.Element.base, [4 x i8], %class.IPMapper, %class.Vector, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8a7af50 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f4c8a7b068 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55f4c8a7b108 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55f4c8a7b168 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8a7b1c8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55f4c8a7b278 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8a7b580 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8a7b698 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55f4c8a7b740 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55f4c8a7b7a8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55f4c8a7b838 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55f4c8a7ffd0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f4c8a80408 <col:12>
|-CXXConstructorDecl 0x55f4c8a800d8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8a801e8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f4c8a7b740 'data' 'const char *'
| | `-ImplicitCastExpr 0x55f4c8a83850 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8a83820 <col:12> 'const char *const' lvalue .data 0x55f4c8a7b740
| |     `-DeclRefExpr 0x55f4c8a83800 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a801e8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f4c8a7b7a8 'length' 'int'
| | `-ImplicitCastExpr 0x55f4c8a838e0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8a838b0 <col:12> 'const int' lvalue .length 0x55f4c8a7b7a8
| |     `-DeclRefExpr 0x55f4c8a83890 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a801e8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f4c8a7b838 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55f4c8a83970 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8a83940 <col:12> 'String::memo_t *const' lvalue .memo 0x55f4c8a7b838
| |     `-DeclRefExpr 0x55f4c8a83920 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a801e8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55f4c8a839c8 <col:12>
|-CXXConstructorDecl 0x55f4c8a80288 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f4c8a80288
| `-ParmVarDecl 0x55f4c8a80398 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55f4c8a866f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8a8fd78 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8a8fe88 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55f4c8a903a0 <col:12>
|   |-BinaryOperator 0x55f4c8a901b8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f4c8a90170 <col:12> 'const char *' lvalue ->data 0x55f4c8a7b740
|   | | `-CXXThisExpr 0x55f4c8a90160 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f4c8a901a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55f4c8a90130 <col:12> 'const char *const' lvalue .data 0x55f4c8a7b740
|   |     `-DeclRefExpr 0x55f4c8a90110 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a8fe88 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f4c8a90280 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55f4c8a90238 <col:12> 'int' lvalue ->length 0x55f4c8a7b7a8
|   | | `-CXXThisExpr 0x55f4c8a90228 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f4c8a90268 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55f4c8a901f8 <col:12> 'const int' lvalue .length 0x55f4c8a7b7a8
|   |     `-DeclRefExpr 0x55f4c8a901d8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a8fe88 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f4c8a90348 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55f4c8a90300 <col:12> 'String::memo_t *' lvalue ->memo 0x55f4c8a7b838
|   | | `-CXXThisExpr 0x55f4c8a902f0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f4c8a90330 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55f4c8a902c0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f4c8a7b838
|   |     `-DeclRefExpr 0x55f4c8a902a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a8fe88 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55f4c8a90390 <col:12>
|     `-UnaryOperator 0x55f4c8a90378 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f4c8a90368 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55f4c8a8fef8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f4c8a8fef8
  `-ParmVarDecl 0x55f4c8a90008 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8a714c0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8a715d8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55f4c8a71668 <col:16, col:22> col:16 public
|-TypedefDecl 0x55f4c8a716a8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f4c873afd0 'const char *'
|   `-QualType 0x55f4c873a521 'const char' const
|     `-BuiltinType 0x55f4c873a520 'char'
|-TypedefDecl 0x55f4c8a71730 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55f4c8a71700 'String::const_iterator' sugar
|   |-Typedef 0x55f4c8a716a8 'const_iterator'
|   `-PointerType 0x55f4c873afd0 'const char *'
|     `-QualType 0x55f4c873a521 'const char' const
|       `-BuiltinType 0x55f4c873a520 'char'
|-TypedefDecl 0x55f4c8a718a0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55f4c8a71810 'int (String::*)() const'
|   |-RecordType 0x55f4c8a71550 'String'
|   | `-CXXRecord 0x55f4c8a714c0 'String'
|   `-ParenType 0x55f4c8a717b0 'int () const' sugar
|     `-FunctionProtoType 0x55f4c8a53ee0 'int () const' const cdecl
|       `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8a71908 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55f4c88921d0 'int64_t' sugar
|   |-Typedef 0x55f4c87a3390 'int64_t'
|   `-TypedefType 0x55f4c877c630 '__int64_t' sugar
|     |-Typedef 0x55f4c877c208 '__int64_t'
|     `-BuiltinType 0x55f4c873a5a0 'long'
|-TypedefDecl 0x55f4c8a71970 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55f4c88920f0 'uint64_t' sugar
|   |-Typedef 0x55f4c87a3530 'uint64_t'
|   `-TypedefType 0x55f4c877c6c0 '__uint64_t' sugar
|     |-Typedef 0x55f4c877c278 '__uint64_t'
|     `-BuiltinType 0x55f4c873a640 'unsigned long'
|-TypedefDecl 0x55f4c8a71a00 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55f4c8a719d0 'String::intmax_t' sugar
|   |-Typedef 0x55f4c8a71908 'intmax_t'
|   `-TypedefType 0x55f4c88921d0 'int64_t' sugar
|     |-Typedef 0x55f4c87a3390 'int64_t'
|     `-TypedefType 0x55f4c877c630 '__int64_t' sugar
|       |-Typedef 0x55f4c877c208 '__int64_t'
|       `-BuiltinType 0x55f4c873a5a0 'long'
|-TypedefDecl 0x55f4c8a71a90 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55f4c8a71a60 'String::uintmax_t' sugar
|   |-Typedef 0x55f4c8a71970 'uintmax_t'
|   `-TypedefType 0x55f4c88920f0 'uint64_t' sugar
|     |-Typedef 0x55f4c87a3530 'uint64_t'
|     `-TypedefType 0x55f4c877c6c0 '__uint64_t' sugar
|       |-Typedef 0x55f4c877c278 '__uint64_t'
|       `-BuiltinType 0x55f4c873a640 'unsigned long'
|-CXXConstructorDecl 0x55f4c8a71b50 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55f4c8a71cf8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55f4c8a71c38 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55f4c8a71ea8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55f4c8a71de8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55f4c8a72000 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55f4c8a71f70 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55f4c8a72218 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f4c8a720c8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55f4c8a72148 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55f4c8a72438 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f4c8a722e8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8a72368 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55f4c8a72658 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f4c8a72508 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55f4c8a72588 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55f4c8a72878 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f4c8a72728 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8a727a8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55f4c8a72a08 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55f4c8a72940 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55f4c8a72b88 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55f4c8a72ac8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55f4c8a72d18 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f4c8a72c50 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55f4c8a72e70 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55f4c8a72de0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55f4c8a72ff8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55f4c8a72f38 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55f4c8a73150 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55f4c8a730c0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55f4c8a732d8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55f4c8a73218 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55f4c8a73468 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55f4c8a733a0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55f4c8a735f8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55f4c8a73530 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55f4c8a73788 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55f4c8a736c0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55f4c8a73880 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55f4c8a739a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55f4c8a73b28 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55f4c8a73a60 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55f4c8a73c78 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55f4c8a73be8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55f4c8a73d20 <col:63> "" ""
|-CXXMethodDecl 0x55f4c8a73e68 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55f4c8a73da8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55f4c8a74078 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55f4c8a73f28 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55f4c8a73fa8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55f4c8a74298 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55f4c8a74140 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55f4c8a741c0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55f4c8a74578 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55f4c8a74358 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f4c8a743d8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55f4c8a7faa0 <col:55> 'int' 10
| `-ParmVarDecl 0x55f4c8a74450 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8a7fac0 <col:76> 'bool' true
|-CXXMethodDecl 0x55f4c8a74858 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55f4c8a74640 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f4c8a746c0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f4c8a7fad0 <col:56> 'int' 10
| `-ParmVarDecl 0x55f4c8a74738 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8a7faf0 <col:77> 'bool' true
|-CXXMethodDecl 0x55f4c8a74960 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f4c8a74a28 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f4c8a74af0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55f4c8a74b90 <col:20>
| `-OptimizeNoneAttr 0x55f4c8a74be8 <col:30>
|-CXXConversionDecl 0x55f4c8a74cd8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f4c8a74da8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f4c8a74e68 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f4c8a74f58 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f4c8a75018 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f4c8a75198 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f4c8a750d0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f4c8a752e8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55f4c8a75258 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55f4c8a753d8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f4c8a75498 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f4c8a756e8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55f4c8a75550 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55f4c8a755d0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55f4c8a75948 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55f4c8a757b0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8a75830 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55f4c8a75a18 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8a75c28 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55f4c8a75ad0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55f4c8a75b50 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55f4c8a75e48 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55f4c8a75cf0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55f4c8a75d70 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55f4c8a75fd8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55f4c8a75f10 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55f4c8a760c8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55f4c8a76238 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f4c8a76178 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f4c8a76448 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55f4c8a762f8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f4c8a76378 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f4c8a76660 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55f4c8a76508 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55f4c8a76580 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55f4c8a767f0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55f4c8a76720 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f4c8a76a10 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55f4c8a768b0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55f4c8a76930 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f4c8a76b60 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f4c8a76ad0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55f4c8a76d38 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f4c8a76c20 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f4c8a76ca0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f4c8a76e88 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55f4c8a76df8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55f4c8a780d0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55f4c8a76f40 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55f4c8a77ff0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55f4c8a7fb00 <col:39> 'int' 0
|-CXXMethodDecl 0x55f4c8a782f0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55f4c8a78190 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55f4c8a78210 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55f4c8a7fb20 <col:48> 'int' 0
|-CXXMethodDecl 0x55f4c8a784d0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55f4c8a783b0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55f4c8a78430 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55f4c8a7fb40 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55f4c8a785a0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55f4c8a78660 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55f4c8a78720 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55f4c8a787e0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55f4c8a788a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55f4c8a78a48 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f4c8a78950 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55f4c8a78bc8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55f4c8a78b00 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55f4c8a78d48 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f4c8a78c88 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55f4c8a78ec8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55f4c8a78e00 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55f4c8a79010 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55f4c8a78f80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f4c8a79160 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f4c8a790d0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f4c8a79338 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f4c8a79220 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f4c8a792a0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f4c8a79518 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f4c8a79400 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f4c8a79480 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f4c8a79668 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55f4c8a795d8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f4c8a79878 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f4c8a79728 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f4c8a797a8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f4c8a799d8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55f4c8a79940 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f4c8a79b30 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55f4c8a79a98 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55f4c8a79bd8 <col:57> "" ""
|-CXXMethodDecl 0x55f4c8a79ce8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f4c8a79c58 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55f4c8a79e38 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f4c8a79da8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55f4c8a79fb8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55f4c8a79ef0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55f4c8a7a080 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55f4c8a7a140 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55f4c8a7a200 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55f4c8a7a2a0 <col:49> "" ""
|-CXXMethodDecl 0x55f4c8a7a330 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55f4c8a7a3f0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55f4c8a7a4e0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55f4c8a7a5a8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55f4c8a7a668 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55f4c8a7a728 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f4c8a7a820 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55f4c8a7a8e8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55f4c8a7a9b0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55f4c8a7ab88 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55f4c8a7aa68 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55f4c8a7aae8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55f4c8a7adb0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55f4c8a7ac50 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8a7acd0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55f4c8a7aec0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55f4c8a7af28 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55f4c8a7af50 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f4c8a7b068 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55f4c8a7b108 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55f4c8a7b168 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f4c8a7b1c8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55f4c8a7b278 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55f4c8a7b2e0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55f4c8a7b518 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55f4c8a7b568 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8a7b4f8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55f4c8a7b408 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55f4c8a7b3b0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55f4c8a7b3f0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55f4c8a7b3d0 <col:32> 'int' 8
|-CXXRecordDecl 0x55f4c8a7b580 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f4c8a7b698 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55f4c8a7b740 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55f4c8a7b7a8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55f4c8a7b838 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55f4c8a7ffd0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f4c8a80408 <col:12>
| |-CXXConstructorDecl 0x55f4c8a800d8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f4c8a801e8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f4c8a7b740 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55f4c8a83850 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f4c8a83820 <col:12> 'const char *const' lvalue .data 0x55f4c8a7b740
| | |     `-DeclRefExpr 0x55f4c8a83800 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a801e8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f4c8a7b7a8 'length' 'int'
| | | `-ImplicitCastExpr 0x55f4c8a838e0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f4c8a838b0 <col:12> 'const int' lvalue .length 0x55f4c8a7b7a8
| | |     `-DeclRefExpr 0x55f4c8a83890 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a801e8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f4c8a7b838 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55f4c8a83970 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55f4c8a83940 <col:12> 'String::memo_t *const' lvalue .memo 0x55f4c8a7b838
| | |     `-DeclRefExpr 0x55f4c8a83920 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a801e8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55f4c8a839c8 <col:12>
| |-CXXConstructorDecl 0x55f4c8a80288 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f4c8a80288
| | `-ParmVarDecl 0x55f4c8a80398 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55f4c8a866f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f4c8a8fd78 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f4c8a8fe88 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55f4c8a903a0 <col:12>
| |   |-BinaryOperator 0x55f4c8a901b8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55f4c8a90170 <col:12> 'const char *' lvalue ->data 0x55f4c8a7b740
| |   | | `-CXXThisExpr 0x55f4c8a90160 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f4c8a901a0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f4c8a90130 <col:12> 'const char *const' lvalue .data 0x55f4c8a7b740
| |   |     `-DeclRefExpr 0x55f4c8a90110 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a8fe88 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f4c8a90280 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55f4c8a90238 <col:12> 'int' lvalue ->length 0x55f4c8a7b7a8
| |   | | `-CXXThisExpr 0x55f4c8a90228 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f4c8a90268 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55f4c8a901f8 <col:12> 'const int' lvalue .length 0x55f4c8a7b7a8
| |   |     `-DeclRefExpr 0x55f4c8a901d8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a8fe88 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f4c8a90348 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55f4c8a90300 <col:12> 'String::memo_t *' lvalue ->memo 0x55f4c8a7b838
| |   | | `-CXXThisExpr 0x55f4c8a902f0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f4c8a90330 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f4c8a902c0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f4c8a7b838
| |   |     `-DeclRefExpr 0x55f4c8a902a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f4c8a8fe88 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55f4c8a90390 <col:12>
| |     `-UnaryOperator 0x55f4c8a90378 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f4c8a90368 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55f4c8a8fef8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f4c8a8fef8
|   `-ParmVarDecl 0x55f4c8a90008 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55f4c8a7b8b0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55f4c8a7baf8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55f4c8a7b918 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55f4c8a7b998 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55f4c8a7ba10 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55f4c8a7ff90 <col:79, line:261:5>
|   |-BinaryOperator 0x55f4c8a7fc08 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f4c8a7fba0 <col:2, col:5> 'const char *' lvalue .data 0x55f4c8a7b740
|   | | `-MemberExpr 0x55f4c8a7fb70 <col:2> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|   | |   `-CXXThisExpr 0x55f4c8a7fb60 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8a7fbf0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f4c8a7fbd0 <col:12> 'const char *' lvalue ParmVar 0x55f4c8a7b918 'data' 'const char *'
|   |-BinaryOperator 0x55f4c8a7fcd0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55f4c8a7fc68 <col:2, col:5> 'int' lvalue .length 0x55f4c8a7b7a8
|   | | `-MemberExpr 0x55f4c8a7fc38 <col:2> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|   | |   `-CXXThisExpr 0x55f4c8a7fc28 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8a7fcb8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f4c8a7fc98 <col:14> 'int' lvalue ParmVar 0x55f4c8a7b998 'length' 'int'
|   `-IfStmt 0x55f4c8a7ff78 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55f4c8a7fdf0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f4c8a7fdd8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55f4c8a7fdb8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55f4c8a7fd98 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55f4c8a7fd30 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|     |       | `-MemberExpr 0x55f4c8a7fd00 <col:7> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|     |       |   `-CXXThisExpr 0x55f4c8a7fcf0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55f4c8a7fd80 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f4c8a7fd60 <col:17> 'String::memo_t *' lvalue ParmVar 0x55f4c8a7ba10 'memo' 'String::memo_t *'
|     `-CallExpr 0x55f4c8a7ff50 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55f4c8a7ff38 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8a7fe40 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55f4c89ff7e8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55f4c8a7fea8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f4c8a7b108
|         `-ImplicitCastExpr 0x55f4c8a7fe90 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55f4c8a7fe70 <col:27> 'String::memo_t *' lvalue ParmVar 0x55f4c8a7ba10 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55f4c8a7bda8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55f4c8a7bbc8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55f4c8a7bc48 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55f4c8a7bcc0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55f4c8a7b8b0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55f4c8a80418 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8a805a8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55f4c8a80510 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55f4c8a80480 <col:2> '<bound member function type>' ->assign_memo 0x55f4c8a7baf8
|     | `-ImplicitCastExpr 0x55f4c8a80548 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55f4c8a80470 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55f4c8a80560 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8a804b0 <col:14> 'const char *' lvalue ParmVar 0x55f4c8a7bbc8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55f4c8a80578 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8a804d0 <col:20> 'int' lvalue ParmVar 0x55f4c8a7bc48 'length' 'int'
|     `-ImplicitCastExpr 0x55f4c8a80590 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8a804f0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55f4c8a7bcc0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55f4c8a7bf38 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55f4c8a7be78 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55f4c8a80800 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55f4c8a80780 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55f4c8a805d0 <col:2> '<bound member function type>' ->assign_memo 0x55f4c8a7baf8
|     | `-CXXThisExpr 0x55f4c8a805c0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55f4c8a807b8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55f4c8a80650 <col:14, col:19> 'const char *' lvalue .data 0x55f4c8a7b740
|     |   `-MemberExpr 0x55f4c8a80620 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55f4c8a7b8b0
|     |     `-DeclRefExpr 0x55f4c8a80600 <col:14> 'const String' lvalue ParmVar 0x55f4c8a7be78 'x' 'const String &'
|     |-ImplicitCastExpr 0x55f4c8a807d0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55f4c8a806d0 <col:25, col:30> 'int' lvalue .length 0x55f4c8a7b7a8
|     |   `-MemberExpr 0x55f4c8a806a0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55f4c8a7b8b0
|     |     `-DeclRefExpr 0x55f4c8a80680 <col:25> 'const String' lvalue ParmVar 0x55f4c8a7be78 'x' 'const String &'
|     `-ImplicitCastExpr 0x55f4c8a807e8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55f4c8a80750 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|         `-MemberExpr 0x55f4c8a80720 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55f4c8a7b8b0
|           `-DeclRefExpr 0x55f4c8a80700 <col:38> 'const String' lvalue ParmVar 0x55f4c8a7be78 'x' 'const String &'
|-CXXMethodDecl 0x55f4c8a7e200 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55f4c8a811c0 <col:31, line:278:5>
|   `-IfStmt 0x55f4c8a811a8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55f4c8a808a0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f4c8a80888 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55f4c8a80858 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|     |     `-MemberExpr 0x55f4c8a80828 <col:6> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|     |       `-CXXThisExpr 0x55f4c8a80818 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55f4c8a81180 <col:15, line:277:2>
|       |-ParenExpr 0x55f4c8a80d50 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55f4c8a80d20 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55f4c8a809b0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55f4c8a80998 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55f4c8a80980 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55f4c8a80940 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f4c8a7b108
|       |   |       `-ImplicitCastExpr 0x55f4c8a80928 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55f4c8a808f8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|       |   |           `-MemberExpr 0x55f4c8a808c8 <col:27> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|       |   |             `-CXXThisExpr 0x55f4c8a808b8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55f4c8a80a10 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55f4c8a809f0 <col:54> 'int' 0
|       |   `-CallExpr 0x55f4c8a80c80 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55f4c8a80c68 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f4c8a80be8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55f4c8a80cc0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f4c8a80af8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55f4c8a80cd8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f4c8a80b28 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55f4c8a80cf0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55f4c8a80b60 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55f4c8a80d08 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55f4c8a80bd0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55f4c8a80bb8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55f4c8a80b80 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55f4c8a810a0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55f4c8a80f60 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55f4c8a80f48 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55f4c8a80ec0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55f4c8a01fd0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55f4c8a80e90 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f4c8a7b108
|       | |   `-ImplicitCastExpr 0x55f4c8a80e78 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55f4c8a80e48 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|       | |       `-MemberExpr 0x55f4c8a80e18 <col:40> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|       | |         `-CXXThisExpr 0x55f4c8a80e08 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55f4c8a81060 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55f4c8a81048 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55f4c8a80f88 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55f4c8a7eed8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55f4c8a81088 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55f4c8a80fe8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|       |       `-MemberExpr 0x55f4c8a80fb8 <col:15> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|       |         `-CXXThisExpr 0x55f4c8a80fa8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55f4c8a81160 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55f4c8a810f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f4c8a7b838
|         | `-MemberExpr 0x55f4c8a810c8 <col:6> 'String::rep_t' lvalue ->_r 0x55f4c8a7b8b0
|         |   `-CXXThisExpr 0x55f4c8a810b8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55f4c8a81148 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55f4c8a81128 <col:16> 'int' 0
|-CXXMethodDecl 0x55f4c8a7e498 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55f4c8a7e2b8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f4c8a7e338 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f4c8a7e3b0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55f4c8a7e570 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f4c8a7e7c0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55f4c8a7e628 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f4c8a7e6a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f4c8a7e720 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f4c8a7e9a8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55f4c8a7e890 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55f4c8a7e910 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55f4c8a7eaa8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55f4c8a81298 <col:41, line:286:5>
|   `-ReturnStmt 0x55f4c8a81288 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55f4c8a81258 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55f4c8a81220 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55f4c8a81208 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55f4c8a811e8 <col:46> 'int' 1
|-CXXMethodDecl 0x55f4c8a7ed48 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55f4c8a7eb60 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55f4c8a7ebe0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55f4c8a7ec60 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55f4c8a7eed8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55f4c8a7ee10 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f4c8a7efa8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55f4c8a7f178 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f4c8a7f060 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f4c8a7f0e0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55f4c8a7f238 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55f4c8a7f300 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55f4c8a7f408 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55f4c8a7f480 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55f4c8a7f4f8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55f4c8a7f560 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55f4c8a7f660 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55f4c8a7f6b0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8a7f640 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55f4c8a7f620 <col:22> 'int' 14
|-CXXMethodDecl 0x55f4c8a7f8c8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55f4c8a7f6e0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55f4c8a7f760 <col:38> col:41 'int'
| `-ParmVarDecl 0x55f4c8a7f7e0 <col:43> col:46 'int'
|-FriendDecl 0x55f4c8a7f9d0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55f4c8a7fa60 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8dd3e40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55f4c8dd4018 prev 0x55f4c8dd3e40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f4c8dd40a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f4c8dd40d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8dd5a30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55f4c8dd59e0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55f4c8dd59c0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55f4c8dd42e8 'type'
|     `-SubstTemplateTypeParmType 0x55f4c8dd42b0 'String' sugar
|       |-TemplateTypeParmType 0x55f4c8a41910 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a418c0 'T'
|       `-RecordType 0x55f4c8a71550 'String'
|         `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd5ae8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55f4c8dd5ab0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55f4c8dd5a90 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f4c8dd5a30 'type'
|     `-ElaboratedType 0x55f4c8dd59e0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55f4c8dd59c0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55f4c8dd42e8 'type'
|         `-SubstTemplateTypeParmType 0x55f4c8dd42b0 'String' sugar
|           |-TemplateTypeParmType 0x55f4c8a41910 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f4c8a418c0 'T'
|           `-RecordType 0x55f4c8a71550 'String'
|             `-CXXRecord 0x55f4c8a714c0 'String'
|-CXXMethodDecl 0x55f4c8dd5c68 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55f4c8dd5b78 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55f4c8dd5d58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f4c8dd5e38 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f4c8dd5e38
|-CXXMethodDecl 0x55f4c8dd6108 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f4c8dd6010 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55f4c8dd6348 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f4c8dd61c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8dd6238 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd6518 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f4c8dd6408 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8dd6480 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd6678 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f4c8dd6748 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f4c8dd6998 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f4c8dd6808 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f4c8dd6880 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd6bf8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55f4c8dd6a68 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f4c8dd6ae0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd6db8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f4c8dd6cc8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd6f78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f4c8dd6e80 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd7030 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f4c8dd70e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f4c8dd7318 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f4c8dd7190 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8dd7208 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f4c8dd75b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f4c8dd74c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55f4c8dd7680 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55f4c8dd76d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f4c8dd7720 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8cabe70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55f4c8dd2ae8 prev 0x55f4c8cabe70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f4c8dd3db0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55f4c8dd3d60 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55f4c8dd3d40 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f4c8dd3bf0 'type'
|     `-SubstTemplateTypeParmType 0x55f4c8dd3a80 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55f4c8a1a8e0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55f4c8a1a888 'F'
|       `-RecordType 0x55f4c8dd36e0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55f4c8dd3600 'typed_array_memory'
|-FieldDecl 0x55f4c8dd7770 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55f4c8dd77c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f4c8dd77f8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|   |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f4c8a51088 'T'
|   `-RecordType 0x55f4c8a71550 'String'
|     `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd7888 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55f4c8dd7850 'String &'
|   `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-RecordType 0x55f4c8a71550 'String'
|       `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd7918 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55f4c8dd78e0 'const String &'
|   `-QualType 0x55f4c8dd2b81 'const String' const
|     `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8a71550 'String'
|         `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd79a8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55f4c8dd7970 'String *'
|   `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-RecordType 0x55f4c8a71550 'String'
|       `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd7a38 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55f4c8dd7a00 'const String *'
|   `-QualType 0x55f4c8dd2b81 'const String' const
|     `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8a71550 'String'
|         `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd8690 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55f4c8dd8640 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55f4c8dd8620 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55f4c8dd8558 'type'
|     `-LValueReferenceType 0x55f4c8dd8520 'const String &'
|       `-QualType 0x55f4c8dd82c1 'const String' const
|         `-SubstTemplateTypeParmType 0x55f4c8dd82c0 'String' sugar
|           |-TemplateTypeParmType 0x55f4c8a229f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f4c8a22998 'T'
|           `-RecordType 0x55f4c8a71550 'String'
|             `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd86f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55f4c8dd78e0 'const String &'
|   `-QualType 0x55f4c8dd2b81 'const String' const
|     `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8a71550 'String'
|         `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd8750 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8dd87b8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55f4c8dd7970 'String *'
|   `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-RecordType 0x55f4c8a71550 'String'
|       `-CXXRecord 0x55f4c8a714c0 'String'
|-TypedefDecl 0x55f4c8dd8820 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55f4c8dd7a00 'const String *'
|   `-QualType 0x55f4c8dd2b81 'const String' const
|     `-SubstTemplateTypeParmType 0x55f4c8dd2b80 'String' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-RecordType 0x55f4c8a71550 'String'
|         `-CXXRecord 0x55f4c8a714c0 'String'
|-EnumDecl 0x55f4c8dd8878 <line:134:5> col:5
| `-EnumConstantDecl 0x55f4c8dd8970 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f4c8dd8950 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f4c8a522a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f4c8a52280 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f4c8a52260 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f4c8dd89f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f4c8dd8c88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8dd8ab0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8dd8b50 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55f4c8dd8f18 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55f4c8dd8e00 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55f4c8dd91d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55f4c8dd90c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f4c8ddad60 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55f4c8dd93d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55f4c8ddb070 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55f4c8ddaf50 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f4c8ddb360 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8ddb1a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8ddb220 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f4c8ddb488 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f4c8ddb538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8ddb590 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8ddb5d8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f4c8ddb688 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8ddb6e0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8ddb7a8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8ddb858 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8ddb8b0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8ddb8f8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8ddb9a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8ddba00 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8ddba48 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8ddbaf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8ddbb50 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8ddbb98 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8ddbc48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8ddbca0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8ddbcc8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f4c8ddbd78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f4c8ddbe28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f4c8ddbfe8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8ddbed8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8ddbf50 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f4c8ddc138 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8ddc0a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8ddc2e8 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55f4c8ddc1f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f4c8ddc3a0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8ddc3f8 <col:30>
|-CXXMethodDecl 0x55f4c8ddc518 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55f4c8ddc420 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f4c8ddc5d0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8ddc628 <col:30>
|-CXXMethodDecl 0x55f4c8ddc6e0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8ddc650 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8ddc828 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f4c8ddc798 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8ddc958 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55f4c8ddca58 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55f4c8ddcb28 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55f4c8ddcbf8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55f4c8ddcd38 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8ddcca8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8ddce80 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f4c8ddcdf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8ddcfc8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f4c8ddcf38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f4c8ddd080 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f4c8ddd180 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f4c8ddd0f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f4c8ddd238 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f4c8ddd2f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55f4c8ddd3f8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55f4c8ddd578 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f4c8ddd4b8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55f4c8dddd08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f4c8ddd630 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55f4c8dddc68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55f4c8dddb68 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55f4c8dddde8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f4c8dddf38 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f4c8dddea8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f4c8dddff0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f4c8dde238 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8dde0b0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f4c8dde128 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f4c8dde3c8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55f4c8dde308 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f4c8dde5d8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55f4c8dde490 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f4c8dde508 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f4c8dde698 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f4c8dde8f8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55f4c8dde800 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55f4c8dde9c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f4c8dde9c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8de98b8 prev 0x55f4c8daa8f0 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8de99b0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55f4c8de9a40 <col:22, col:28> col:22 public
|-EnumDecl 0x55f4c8de9a68 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55f4c8de9b88 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9b68 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55f4c8de9b50 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8de9b30 <col:14> 'int' 999
| |-EnumConstantDecl 0x55f4c8de9c30 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9c10 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55f4c8de9bf8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8de9bd8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f4c8de9cc0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9ca0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55f4c8de9c80 <col:17> 'int' 0
| |-EnumConstantDecl 0x55f4c8de9d50 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9d30 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55f4c8de9d10 <col:13> 'int' 1
| |-EnumConstantDecl 0x55f4c8de9de0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9dc0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55f4c8de9da0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55f4c8de9e70 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9e50 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55f4c8de9e30 <col:13> 'int' 3
| |-EnumConstantDecl 0x55f4c8de9f00 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9ee0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55f4c8de9ec0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55f4c8de9f90 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8de9f70 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55f4c8de9f50 <col:14> 'int' 5
| |-EnumConstantDecl 0x55f4c8dea020 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f4c8dea000 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55f4c8de9fe0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55f4c8dea0b0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55f4c8dea090 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55f4c8dea070 <col:13> 'int' 7
|-VarDecl 0x55f4c8dea120 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55f4c8dea1a8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55f4c8dea230 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55f4c8dea2b8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55f4c8dea340 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55f4c8dea3c8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55f4c8dea450 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55f4c8dea4d8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55f4c8dea560 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55f4c8dea5e8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55f4c8dea670 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55f4c8dea770 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8df9b38 '_nerrors' 'int'
| | `-IntegerLiteral 0x55f4c8dfa2c8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55f4c8dfa338 <col:16, line:129:5>
|-CXXDestructorDecl 0x55f4c8dea860 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55f4c8dfa348 <col:29, line:132:5>
|-CXXMethodDecl 0x55f4c8deaa18 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55f4c8dea950 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8deaae0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f4c8deabc8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f4c8dfa3a0 <col:44, line:161:5>
|   `-ReturnStmt 0x55f4c8dfa390 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8dfa378 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8dfa358 <col:9> 'ErrorHandler *' lvalue Var 0x55f4c8df9b98 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8dead38 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55f4c8deac78 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8deae00 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f4c8dfa400 <col:43, line:173:5>
|   `-ReturnStmt 0x55f4c8dfa3f0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8dfa3d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8dfa3b8 <col:9> 'ErrorHandler *' lvalue Var 0x55f4c8df9c10 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55f4c8deaeb8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55f4c8deaf38 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55f4c8deb048 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55f4c8deafb8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df51e0 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55f4c8df5150 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df5338 <line:193:5, col:37> col:9 used warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55f4c8df52a0 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df5490 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55f4c8df53f8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df55e8 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55f4c8df5550 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df5800 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f4c8df56a0 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55f4c8df5720 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df59d8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f4c8df58c0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55f4c8df5940 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df5bf8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f4c8df5a98 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55f4c8df5b18 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df5dd8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f4c8df5cb8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f4c8df5d38 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df5fb8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f4c8df5e98 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f4c8df5f18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df6140 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55f4c8df6078 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55f4c8df6310 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55f4c8df61f8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f4c8df6270 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55f4c8dfa658 <col:57, line:234:5>
|   `-ReturnStmt 0x55f4c8dfa648 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55f4c8dfa630 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f4c8dfa5d8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f4c8dfa5a8 <col:9> '<bound member function type>' ->xmessage 0x55f4c8df6140
|         | `-CXXThisExpr 0x55f4c8dfa598 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55f4c8dfa618 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f4c8dfa600 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f4c8dfa578 <col:18, col:40> 'String' (CXXTemporary 0x55f4c8dfa578)
|               `-CallExpr 0x55f4c8dfa540 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55f4c8dfa528 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55f4c8dfa4a0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f4c8df8368 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55f4c8dfa4c0 <col:31> 'const String' lvalue ParmVar 0x55f4c8df6270 'str' 'const String &'
|                 `-DeclRefExpr 0x55f4c8dfa4e0 <col:36> 'const String' lvalue ParmVar 0x55f4c8df61f8 'anno' 'const String &'
|-CXXMethodDecl 0x55f4c8df6650 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f4c8df63d0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f4c8df6450 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55f4c8df6520 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f4c8dfa8e8 <col:68, line:243:5>
|   `-ReturnStmt 0x55f4c8dfa8d8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55f4c8dfa8c0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f4c8dfa860 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f4c8dfa830 <col:9> '<bound member function type>' ->xmessage 0x55f4c8df6310
|         | `-CXXThisExpr 0x55f4c8dfa820 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f4c8dfa6f8 <col:18> 'const String' lvalue ParmVar 0x55f4c8df63d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f4c8dfa8a8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f4c8dfa890 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f4c8dfa800 <col:24, col:40> 'String' (CXXTemporary 0x55f4c8dfa800)
|               `-CXXMemberCallExpr 0x55f4c8dfa798 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55f4c8dfa728 <col:24> '<bound member function type>' ->vformat 0x55f4c8df7830
|                 | `-CXXThisExpr 0x55f4c8dfa718 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f4c8dfa7c8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f4c8dfa758 <col:32> 'const char *' lvalue ParmVar 0x55f4c8df6450 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f4c8dfa7e0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f4c8dfa778 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f4c8df6520 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f4c8df68f0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55f4c8df6718 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f4c8df6790 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f4c8df6808 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55f4c8dfac28 <col:23, line:254:5>
|   `-ReturnStmt 0x55f4c8dfac18 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55f4c8dfac00 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55f4c8dfaba0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55f4c8dfab70 <col:9> '<bound member function type>' ->xmessage 0x55f4c8df6310
|         | `-CXXThisExpr 0x55f4c8dfab60 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55f4c8dfabe8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55f4c8dfabd0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55f4c8dfab20 <col:18, col:65> 'String' (CXXTemporary 0x55f4c8dfab20)
|         |     `-CallExpr 0x55f4c8dfaab8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55f4c8dfaaa0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55f4c8dfa988 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f4c8df8368 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55f4c8dfa9a8 <col:31> 'const String' lvalue ParmVar 0x55f4c8df6790 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55f4c8dfab00 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55f4c8dfaae8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55f4c8dfaa80 <col:37, col:64> 'String' (CXXTemporary 0x55f4c8dfaa80)
|         |             `-CallExpr 0x55f4c8dfaa50 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55f4c8dfaa38 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55f4c8dfa9c8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55f4c8df89b8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55f4c8dfa9e8 <col:56> 'const String' lvalue ParmVar 0x55f4c8df6718 'landmark' 'const String &'
|         `-DeclRefExpr 0x55f4c8dfab40 <col:68> 'const String' lvalue ParmVar 0x55f4c8df6808 'str' 'const String &'
|-CXXMethodDecl 0x55f4c8df6c70 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f4c8df69b8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f4c8df6a30 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f4c8df6ab0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55f4c8df6b28 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f4c8dfaee0 <col:34, line:267:5>
|   `-ReturnStmt 0x55f4c8dfaed0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55f4c8dfaeb8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55f4c8dfae50 <col:9, col:51> 'int'
|         |-MemberExpr 0x55f4c8dfae20 <col:9> '<bound member function type>' ->xmessage 0x55f4c8df68f0
|         | `-CXXThisExpr 0x55f4c8dfae10 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f4c8dfacc8 <col:18> 'const String' lvalue ParmVar 0x55f4c8df69b8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55f4c8dface8 <col:28> 'const String' lvalue ParmVar 0x55f4c8df6a30 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f4c8dfaea0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f4c8dfae88 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f4c8dfadf0 <col:34, col:50> 'String' (CXXTemporary 0x55f4c8dfadf0)
|               `-CXXMemberCallExpr 0x55f4c8dfad88 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55f4c8dfad18 <col:34> '<bound member function type>' ->vformat 0x55f4c8df7830
|                 | `-CXXThisExpr 0x55f4c8dfad08 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f4c8dfadb8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f4c8dfad48 <col:42> 'const char *' lvalue ParmVar 0x55f4c8df6ab0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f4c8dfadd0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f4c8dfad68 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f4c8df6b28 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f4c8df6d80 <line:286:5, line:288:5> line:286:9 used nerrors 'int () const'
| `-CompoundStmt 0x55f4c8dfaf60 <col:25, line:288:5>
|   `-ReturnStmt 0x55f4c8dfaf50 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8dfaf38 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55f4c8dfaf08 <col:9> 'const int' lvalue ->_nerrors 0x55f4c8df9b38
|         `-CXXThisExpr 0x55f4c8dfaef8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f4c8df6f90 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55f4c8df6e38 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55f4c8df6eb8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df7278 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f4c8df7058 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55f4c8df70d8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55f4c8df7150 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f4c8df7410 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55f4c8df7348 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df7658 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f4c8df74d0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55f4c8df7548 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f4c8dfb1c0 <col:58, line:357:5>
|   `-ReturnStmt 0x55f4c8dfb1b0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55f4c8dfb198 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55f4c8dfb168 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8dfb150 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f4c8dfb130 <col:9, col:29> 'String' (CXXTemporary 0x55f4c8dfb130)
|             `-CallExpr 0x55f4c8dfb0c0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55f4c8dfb0a8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f4c8dfb028 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55f4c8df7278 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55f4c8dfafc8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55f4c8dfb0f8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f4c8dfafe8 <col:21> 'const char *' lvalue ParmVar 0x55f4c8df74d0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55f4c8dfb110 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f4c8dfb008 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f4c8df7548 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f4c8df7830 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55f4c8df7720 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55f4c8df7798 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f4c8df7988 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55f4c8df78f8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55f4c8df7ad0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55f4c8df7a40 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55f4c8df7d70 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55f4c8df7b88 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55f4c8df7c08 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55f4c8df7c80 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55f4c8df7ed0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55f4c8df7e40 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55f4c8dfb2d8 <col:37, line:441:5>
|   `-IfStmt 0x55f4c8dfb2c0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55f4c8dfb248 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55f4c8dfb218 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55f4c8dfb1d8 <col:6> 'int' lvalue ParmVar 0x55f4c8df7e40 'level' 'int'
|     | `-ImplicitCastExpr 0x55f4c8dfb230 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55f4c8dfb1f8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55f4c8de9e70 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55f4c8dfb2a8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55f4c8dfb278 <col:8> 'int' lvalue ->_nerrors 0x55f4c8df9b38
|         `-CXXThisExpr 0x55f4c8dfb268 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f4c8df7f98 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55f4c8dfb370 <col:26, line:448:5>
|   `-BinaryOperator 0x55f4c8dfb350 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55f4c8dfb300 <col:2> 'int' lvalue ->_nerrors 0x55f4c8df9b38
|     | `-CXXThisExpr 0x55f4c8dfb2f0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55f4c8dfb330 <col:13> 'int' 0
|-CXXMethodDecl 0x55f4c8df8160 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55f4c8df8050 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55f4c8df80c8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55f4c8df8368 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55f4c8df8220 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55f4c8df8298 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55f4c8df8618 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55f4c8df8428 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55f4c8df84a8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55f4c8df8528 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55f4c8df86d0 <col:59> 0 0
|-CXXMethodDecl 0x55f4c8df8868 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55f4c8df8748 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55f4c8df87c8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55f4c8dfb9e0 <col:70, line:534:5>
|   |-DeclStmt 0x55f4c8dfb4e0 <line:528:2, col:20>
|   | |-VarDecl 0x55f4c8dfb398 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55f4c8dfb400 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55f4c8dfb438 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55f4c8dfb4a0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55f4c8dfb5b0 <line:529:2, col:23>
|   | `-VarDecl 0x55f4c8dfb510 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55f4c8dfb598 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f4c8dfb578 <col:18> 'const char *' lvalue ParmVar 0x55f4c8df8748 'begin' 'const char *'
|   |-DoStmt 0x55f4c8dfb978 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55f4c8dfb8a8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55f4c8dfb890 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55f4c8dfb870 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55f4c8dfb5c8 <col:6> 'const char *' lvalue Var 0x55f4c8dfb510 'x' 'const char *'
|   | |     `-CallExpr 0x55f4c8dfb7c0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55f4c8dfb7a8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55f4c8dfb760 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55f4c8dfa010 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55f4c8dfb828 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55f4c8dfb810 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55f4c8dfb680 <col:20, col:27> 'String' (CXXTemporary 0x55f4c8dfb680)
|   | |       |     `-CXXTemporaryObjectExpr 0x55f4c8dfb648 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55f4c8dfb840 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f4c8dfb6a0 <col:30> 'const char *' lvalue Var 0x55f4c8dfb510 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55f4c8dfb858 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f4c8dfb6c0 <col:33> 'const char *' lvalue ParmVar 0x55f4c8df87c8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55f4c8dfb700 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f4c8dfb6e0 <col:39> 'String' lvalue Var 0x55f4c8dfb398 'name' 'String'
|   | |       |-UnaryOperator 0x55f4c8dfb738 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f4c8dfb718 <col:46> 'String' lvalue Var 0x55f4c8dfb438 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55f4c8dfb750 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55f4c8dfb960 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55f4c8dfb948 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55f4c8dfb928 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55f4c8dfb8f8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f4c8a74cd8
|   |         `-ImplicitCastExpr 0x55f4c8dfb8e0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55f4c8dfb8c0 <col:11> 'String' lvalue Var 0x55f4c8dfb398 'name' 'String'
|   `-ReturnStmt 0x55f4c8dfb9d0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8dfb9b8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8dfb998 <col:9> 'const char *' lvalue Var 0x55f4c8dfb510 'x' 'const char *'
|-CXXMethodDecl 0x55f4c8df89b8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55f4c8df8928 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55f4c8dfbfe8 <col:55, line:550:5>
|   `-IfStmt 0x55f4c8dfbfc0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55f4c8dfbc20 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55f4c8dfbc08 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f4c8dfbbf0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f4c8dfbbd0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f4c8dfbba0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55f4c8a74cd8
|     | |       `-DeclRefExpr 0x55f4c8dfba40 <col:6> 'const String' lvalue ParmVar 0x55f4c8df8928 'x' 'const String &'
|     | `-BinaryOperator 0x55f4c8dfbb80 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55f4c8dfbb50 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55f4c8dfbb00 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55f4c8dfbae8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55f4c8dfbaa0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55f4c8a8c4e0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55f4c8dfba60 <col:11> 'const String' lvalue ParmVar 0x55f4c8df8928 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55f4c8dfba80 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55f4c8dfbb68 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55f4c8dfbb38 <col:19> 'char' 123
|     |-ReturnStmt 0x55f4c8dfbc90 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55f4c8dfbc60 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55f4c8dfbc40 <col:13> 'const String' lvalue ParmVar 0x55f4c8df8928 'x' 'const String &'
|     `-IfStmt 0x55f4c8dfbf98 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55f4c8dfbd28 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f4c8dfbd10 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f4c8dfbcf0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f4c8dfbcc0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f4c8a74cd8
|       |       `-DeclRefExpr 0x55f4c8dfbca0 <col:11> 'const String' lvalue ParmVar 0x55f4c8df8928 'x' 'const String &'
|       |-ReturnStmt 0x55f4c8dfbeb0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55f4c8dfbe98 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55f4c8dfbe68 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55f4c8dfbe50 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55f4c8dfbe30 <col:13, col:29> 'String' (CXXTemporary 0x55f4c8dfbe30)
|       |         `-CallExpr 0x55f4c8dfbde0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55f4c8dfbdc8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55f4c8dfbd40 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55f4c8df8160 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55f4c8dfbe10 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55f4c8dfbd60 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55f4c8dfbd80 <col:28> 'const String' lvalue ParmVar 0x55f4c8df8928 'x' 'const String &'
|       `-ReturnStmt 0x55f4c8dfbf88 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55f4c8dfbf70 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55f4c8dfbf40 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55f4c8dfbf28 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55f4c8dfbf08 <col:13, col:20> 'String' (CXXTemporary 0x55f4c8dfbf08)
|                 `-CXXTemporaryObjectExpr 0x55f4c8dfbed0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55f4c8df8b80 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55f4c8df8a70 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55f4c8df8ae8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8dfa2b8 <col:71> 'bool' false
|-CXXRecordDecl 0x55f4c8df8c30 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55f4c8df8f28 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55f4c8df8ec0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55f4c8df8e60 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55f4c8df8e20 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55f4c8a71550 'String'
|       | `-CXXRecord 0x55f4c8a714c0 'String'
|       |-BuiltinType 0x55f4c873a580 'int'
|       `-DecayedType 0x55f4c8df64f0 '__va_list_tag *' sugar
|         |-TypedefType 0x55f4c8df64c0 'va_list' sugar
|         | |-Typedef 0x55f4c895b100 'va_list'
|         | `-TypedefType 0x55f4c895b0b0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55f4c8892cc8 '__gnuc_va_list'
|         |   `-TypedefType 0x55f4c8892c30 '__builtin_va_list' sugar
|         |     |-Typedef 0x55f4c877bd38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55f4c877bce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55f4c873b2d0 '__va_list_tag'
|         |         `-CXXRecord 0x55f4c873b238 '__va_list_tag'
|         `-PointerType 0x55f4c8961200 '__va_list_tag *'
|           `-RecordType 0x55f4c873b2d0 '__va_list_tag'
|             `-CXXRecord 0x55f4c873b238 '__va_list_tag'
|-EnumDecl 0x55f4c8df8f80 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55f4c8df9080 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df95e0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df9060 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55f4c8df9040 <col:16> 'int' 1
| |-EnumConstantDecl 0x55f4c8df9110 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df95f8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df90f0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55f4c8df90d0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55f4c8df91a0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df9610 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df9180 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55f4c8df9160 <col:22> 'int' 4
| |-EnumConstantDecl 0x55f4c8df9230 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df9628 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df9210 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55f4c8df91f0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55f4c8df92c0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df9640 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df92a0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55f4c8df9280 <col:22> 'int' 16
| |-EnumConstantDecl 0x55f4c8df9350 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df9658 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df9330 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f4c8df9310 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f4c8df93e0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df9670 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df93c0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55f4c8df93a0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55f4c8df9470 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df9688 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df9450 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55f4c8df9430 <col:14> 'int' 128
| |-EnumConstantDecl 0x55f4c8df9500 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f4c8df96a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8df94e0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55f4c8df94c0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55f4c8df9590 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55f4c8df96b8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8df9570 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55f4c8df9550 <col:12> 'int' 1024
|-CXXMethodDecl 0x55f4c8df98c8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55f4c8df96e0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55f4c8df9780 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55f4c8df9a50 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55f4c8df9988 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55f4c8df9af8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55f4c8df9b38 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55f4c8df9b98 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55f4c8df9c10 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55f4c8dfa010 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55f4c8df9c88 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55f4c8df9d08 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55f4c8df9d88 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55f4c8df9e00 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55f4c8df9e78 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55f4c8df9ef0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55f4c8dfa138 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55f4c8dfa138
| `-ParmVarDecl 0x55f4c8dfa248 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55f4c8dfc348 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55f4c8dfc348
  `-ParmVarDecl 0x55f4c8dfc458 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d52ea8 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55f4c8d864a8 prev 0x55f4c8d52ea8 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55f4c8d86538 <col:31, col:37> col:31 public
|-TypedefDecl 0x55f4c8d86630 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55f4c8d865e0 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55f4c8d865c0 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55f4c8d549f0 'key_type'
|     `-RecordType 0x55f4c8d49590 'IPFlowID'
|       `-CXXRecord 0x55f4c8d49500 'IPFlowID'
|-TypedefDecl 0x55f4c8d86700 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55f4c8d866b0 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55f4c8d55430 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55f4c8d54a58 'key_const_reference'
|     `-LValueReferenceType 0x55f4c8d4ba20 'const IPFlowID &'
|       `-QualType 0x55f4c8d49591 'const IPFlowID' const
|         `-RecordType 0x55f4c8d49590 'IPFlowID'
|           `-CXXRecord 0x55f4c8d49500 'IPFlowID'
|-CXXMethodDecl 0x55f4c8d868f0 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55f4c8d867f8 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55f4c8d86af8 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55f4c8d86a08 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55f4c8d86d58 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55f4c8d86c08 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55f4c8d86c80 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55f4c8d8add8 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55f4c8d8add8
| `-ParmVarDecl 0x55f4c8d8aee8 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55f4c8d8af88 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55f4c8d8af88
| `-ParmVarDecl 0x55f4c8d8b098 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55f4c8d8b2a8 <col:7> col:7 implicit ~HashContainer_adapter 'void ()' inline default trivial noexcept-unevaluated 0x55f4c8d8b2a8
|-CXXMethodDecl 0x55f4c8d8b3e8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55f4c8d8b3e8
| `-ParmVarDecl 0x55f4c8d8b4f8 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55f4c8d8b568 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55f4c8d8b568
  `-ParmVarDecl 0x55f4c8d8b678 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8aa5b40 prev 0x55f4c8a1b4c8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8aa5c38 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55f4c8aa5cc8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f4c8aa5d00 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f4c8891c40 'uninitialized_type'
|   `-CXXRecord 0x55f4c8891ba8 'uninitialized_type'
|-CXXConstructorDecl 0x55f4c8aa5dc0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aad728 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8aad6e8 <col:10> 'int' 0
| `-CompoundStmt 0x55f4c8aad770 <col:13, line:22:5>
|-CXXConstructorDecl 0x55f4c8aa5f10 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55f4c8aa5e80 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aad7c0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f4c8aad780 <col:10> 'unsigned int' lvalue ParmVar 0x55f4c8aa5e80 'x' 'unsigned int'
| `-CompoundStmt 0x55f4c8aad808 <col:13, line:27:5>
|-CXXConstructorDecl 0x55f4c8aa6068 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55f4c8aa5fd8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aad870 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55f4c8aad858 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55f4c8aad818 <col:10> 'int' lvalue ParmVar 0x55f4c8aa5fd8 'x' 'int'
| `-CompoundStmt 0x55f4c8aad8b8 <col:13, line:31:5>
|-CXXConstructorDecl 0x55f4c8aa61c0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55f4c8aa6130 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aad920 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55f4c8aad908 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55f4c8aad8c8 <col:10> 'unsigned long' lvalue ParmVar 0x55f4c8aa6130 'x' 'unsigned long'
| `-CompoundStmt 0x55f4c8aad968 <col:13, line:35:5>
|-CXXConstructorDecl 0x55f4c8aa6318 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55f4c8aa6288 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aad9d0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55f4c8aad9b8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55f4c8aad978 <col:10> 'long' lvalue ParmVar 0x55f4c8aa6288 'x' 'long'
| `-CompoundStmt 0x55f4c8aada18 <col:13, line:39:5>
|-CXXConstructorDecl 0x55f4c8aa64d8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55f4c8aa63e8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aada98 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8aada48 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55f4c89d4270
| |     `-DeclRefExpr 0x55f4c8aada28 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55f4c8aa63e8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55f4c8aadae0 <col:20, line:44:5>
|-CXXConstructorDecl 0x55f4c8aab7b0 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55f4c8aa65a0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55f4c8aadc48 <col:51, line:56:5>
|   `-BinaryOperator 0x55f4c8aadc28 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55f4c8aadb00 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55f4c8aad680
|     | `-CXXThisExpr 0x55f4c8aadaf0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55f4c8aadc10 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8aadbf8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55f4c8aadbd8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55f4c8aadba8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55f4c8aadb90 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55f4c8aadb30 <col:47> 'const unsigned char *' lvalue ParmVar 0x55f4c8aa65a0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55f4c8aab900 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55f4c8aab870 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55f4c8aabaa8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55f4c8aab9e8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55f4c8aadcb8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55f4c8aadc90 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f4c8aadc60 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55f4c8aab9e8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55f4c8aabc38 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55f4c8aabb70 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55f4c8aabd28 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55f4c8aaec78 <col:46, line:83:5>
|   `-ReturnStmt 0x55f4c8aaec68 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55f4c8aaec50 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55f4c8aaec20 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8aaead8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55f4c8aae9c0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55f4c8aae8a8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55f4c8aadce0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55f4c8aabe18 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55f4c8aaed28 <col:31, line:88:5>
|   `-ReturnStmt 0x55f4c8aaed18 <line:87:2, col:10>
|     `-UnaryOperator 0x55f4c8aaed00 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55f4c8aaece8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55f4c8aaecd0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55f4c8aaeca0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f4c8aad680
|             `-CXXThisExpr 0x55f4c8aaec90 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55f4c8aabed8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55f4c8aaeda8 <col:34, line:93:5>
|   `-ReturnStmt 0x55f4c8aaed98 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8aaed80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f4c8aaed50 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f4c8aad680
|         `-CXXThisExpr 0x55f4c8aaed40 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55f4c8aabfa8 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55f4c8aaee28 <col:38, line:101:5>
|   `-ReturnStmt 0x55f4c8aaee18 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8aaee00 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f4c8aaedd0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f4c8aad680
|         `-CXXThisExpr 0x55f4c8aaedc0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55f4c8aac078 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55f4c8aaf0f8 <col:38, line:108:5>
|   `-ReturnStmt 0x55f4c8aaf0e8 <line:107:2, col:58>
|     `-BinaryOperator 0x55f4c8aaf0c8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55f4c8aaefe0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55f4c8aaefc0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f4c8aaefa8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f4c8aaee50 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f4c8aad680
|       |   |   `-CXXThisExpr 0x55f4c8aaee40 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55f4c8aaef80 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55f4c8aaef68 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f4c8aaeee8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f4c89e1758 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55f4c8aaeec8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55f4c8aaf0a0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55f4c8aaf088 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f4c8aaf068 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f4c89e1758 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55f4c8aaf048 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55f4c8aac138 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55f4c8aaf368 <col:39, line:112:5>
|   `-ReturnStmt 0x55f4c8aaf358 <line:111:2, col:56>
|     `-BinaryOperator 0x55f4c8aaf338 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55f4c8aaf250 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55f4c8aaf230 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f4c8aaf218 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f4c8aaf120 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f4c8aad680
|       |   |   `-CXXThisExpr 0x55f4c8aaf110 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55f4c8aaf1f0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55f4c8aaf1d8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f4c8aaf1b8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f4c89e1758 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55f4c8aaf198 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55f4c8aaf310 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55f4c8aaf2f8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f4c8aaf2d8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f4c89e1758 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55f4c8aaf2b8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55f4c8aac268 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55f4c8aac370 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55f4c8aac480 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55f4c8aac570 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f4c8aac630 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8aac6f8 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55f4c8aac8f8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55f4c8aac7a8 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55f4c8aac820 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55f4c8aaca78 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55f4c8aac9b8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55f4c8aacbc0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55f4c8aacb30 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55f4c8aacd68 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55f4c8aacc78 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55f4c8aaceb0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55f4c8aace20 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55f4c8aacff8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55f4c8aacf68 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55f4c8aad0c0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55f4c8aad180 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55f4c8aad2f8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55f4c8aad230 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55f4c8aad3c0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55f4c8aad4a8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55f4c8aad550 <col:51> "" ""
|-TypedefDecl 0x55f4c8aad5f0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55f4c8a1b560 'IPAddress'
|   `-CXXRecord 0x55f4c8aa5b40 'IPAddress'
|-AccessSpecDecl 0x55f4c8aad648 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55f4c8aad680 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f4c8aadd28 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8aade38 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8d4bf58 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8d4bf10 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55f4c8aad680
| |     `-DeclRefExpr 0x55f4c8d4bef0 <col:7> 'const IPAddress' lvalue ParmVar 0x55f4c8aade38 '' 'const IPAddress &'
| `-CompoundStmt 0x55f4c8d4bfa0 <col:7>
|-CXXConstructorDecl 0x55f4c8aaded8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8aadfe8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55f4c8aad680 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8aaebc8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8aaeb80 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55f4c8aad680
| |     `-CXXStaticCastExpr 0x55f4c8aaeb50 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8aaeb20 <col:7> 'IPAddress' lvalue ParmVar 0x55f4c8aadfe8 '' 'IPAddress &&'
| `-CompoundStmt 0x55f4c8aaec10 <col:7>
|-CXXDestructorDecl 0x55f4c8aae8d8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8d4c848 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8d4c958 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55f4c8d4ccb0 <col:7>
|   |-BinaryOperator 0x55f4c8d4cc58 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55f4c8d4cc10 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55f4c8aad680
|   | | `-CXXThisExpr 0x55f4c8d4cc00 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55f4c8d4cc40 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55f4c8d4cbd0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55f4c8aad680
|   |     `-DeclRefExpr 0x55f4c8d4cbb0 <col:7> 'const IPAddress' lvalue ParmVar 0x55f4c8d4c958 '' 'const IPAddress &'
|   `-ReturnStmt 0x55f4c8d4cca0 <col:7>
|     `-UnaryOperator 0x55f4c8d4cc88 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f4c8d4cc78 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55f4c8d4c9c8 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55f4c8d4c9c8
  `-ParmVarDecl 0x55f4c8d4cad8 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d49500 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8d49618 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55f4c8d496a8 <col:18, col:24> col:18 public
|-TypedefDecl 0x55f4c8d496e0 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f4c8891c40 'uninitialized_type'
|   `-CXXRecord 0x55f4c8891ba8 'uninitialized_type'
|-CXXConstructorDecl 0x55f4c8d497a0 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d4b6a8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4bc78 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d4b708 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4bce0 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d4b768 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f4c8d4bd70 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8d4bd30 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8d4b7c8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f4c8d4bdf0 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8d4bdb0 <col:42> 'int' 0
| `-CompoundStmt 0x55f4c8d4be50 <col:45, line:19:5>
|-CXXConstructorDecl 0x55f4c8d49b08 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55f4c8d49858 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55f4c8d498d0 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55f4c8d49948 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55f4c8d499c0 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55f4c8d4b6a8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4bfb0 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55f4c8d4bea0 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55f4c8d4be60 <col:11> 'IPAddress' lvalue ParmVar 0x55f4c8d49858 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55f4c8d4b708 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4c060 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55f4c8d4c048 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55f4c8d4c008 <col:26> 'IPAddress' lvalue ParmVar 0x55f4c8d49948 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55f4c8d4b768 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f4c8d4c0f8 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55f4c8d4c0b8 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8d498d0 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55f4c8d4b7c8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f4c8d4c178 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55f4c8d4c138 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8d499c0 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f4c8d4c1d8 <col:63, line:28:5>
|-CXXConstructorDecl 0x55f4c8d49d28 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55f4c8d49be0 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55f4c8d49c58 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8d4bc40 <col:55> 'bool' false
|-CXXConstructorDecl 0x55f4c8d49f38 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55f4c8d49df0 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55f4c8d49e68 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8d4bc50 <col:59> 'bool' false
|-CXXConstructorDecl 0x55f4c8d4a090 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55f4c8d4a000 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55f4c8d4b6a8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4c1e8 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d4b708 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4c238 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55f4c8d4c2f0 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55f4c8d4c2c8 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f4c8d4c298 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55f4c8d4a000 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55f4c8d4a248 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55f4c8d4a1c0 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55f4c8d49590 'IPFlowID'
|   | `-CXXRecord 0x55f4c8d49500 'IPFlowID'
|   `-ParenType 0x55f4c8d4a160 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55f4c8c72280 'IPAddress () const' const cdecl
|       `-RecordType 0x55f4c8a1b560 'IPAddress'
|         `-CXXRecord 0x55f4c8aa5b40 'IPAddress'
|-CXXConversionDecl 0x55f4c8d4a388 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55f4c8d4c5a0 <col:44, line:59:5>
|   `-ReturnStmt 0x55f4c8d4c590 <line:58:2, col:47>
|     `-ConditionalOperator 0x55f4c8d4c560 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55f4c8d4c488 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55f4c8d4c458 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55f4c8d4c3d8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55f4c8d4c3b8 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55f4c8d4c388 <col:9> '<bound member function type>' .operator unsigned int 0x55f4c8aabfa8
|       | |       `-MemberExpr 0x55f4c8d4c318 <col:9> 'const IPAddress' lvalue ->_saddr 0x55f4c8d4b6a8
|       | |         `-CXXThisExpr 0x55f4c8d4c308 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55f4c8d4c470 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55f4c8d4c440 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55f4c8d4c420 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55f4c8d4c3f0 <col:19> '<bound member function type>' .operator unsigned int 0x55f4c8aabfa8
|       |         `-MemberExpr 0x55f4c8d4c358 <col:19> 'const IPAddress' lvalue ->_daddr 0x55f4c8d4b708
|       |           `-CXXThisExpr 0x55f4c8d4c348 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55f4c8d4c510 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55f4c8d4c4e0 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55f4c8d4a4b0 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55f4c8d4c548 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55f4c8d4c528 <col:47> 'int' 0
|-CXXMethodDecl 0x55f4c8d4a4b0 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55f4c8d4c638 <col:29, line:65:5>
|   `-ReturnStmt 0x55f4c8d4c628 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55f4c8d4c5f8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55f4c8d4c5c8 <col:9> 'const IPAddress' lvalue ->_saddr 0x55f4c8d4b6a8
|         `-CXXThisExpr 0x55f4c8d4c5b8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f4c8d4a5c8 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55f4c8d4c6b8 <col:28, line:69:5>
|   `-ReturnStmt 0x55f4c8d4c6a8 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8d4c690 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55f4c8d4c660 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55f4c8d4b768
|         `-CXXThisExpr 0x55f4c8d4c650 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f4c8d4a688 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55f4c8d4c750 <col:29, line:73:5>
|   `-ReturnStmt 0x55f4c8d4c740 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55f4c8d4c710 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55f4c8d4c6e0 <col:9> 'const IPAddress' lvalue ->_daddr 0x55f4c8d4b708
|         `-CXXThisExpr 0x55f4c8d4c6d0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f4c8d4a748 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55f4c8d4c7d0 <col:28, line:77:5>
|   `-ReturnStmt 0x55f4c8d4c7c0 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8d4c7a8 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55f4c8d4c778 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55f4c8d4b7c8
|         `-CXXThisExpr 0x55f4c8d4c768 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f4c8d4a888 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55f4c8d4a7f8 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55f4c8d4cd78 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55f4c8d4cd40 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55f4c8d4cd28 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f4c8d4cb60 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f4c8d4c848 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55f4c8d4c7f8 <col:2> 'IPAddress' lvalue ->_saddr 0x55f4c8d4b6a8
|     | `-CXXThisExpr 0x55f4c8d4c7e8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d4cb48 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55f4c8d4c828 <col:11> 'IPAddress' lvalue ParmVar 0x55f4c8d4a7f8 'a' 'IPAddress'
|-CXXMethodDecl 0x55f4c8d4aa38 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55f4c8d4a940 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f4c8d4ce28 <col:32, line:87:5>
|   `-BinaryOperator 0x55f4c8d4ce08 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55f4c8d4cda0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55f4c8d4b768
|     | `-CXXThisExpr 0x55f4c8d4cd90 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d4cdf0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8d4cdd0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8d4a940 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f4c8d4ab80 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55f4c8d4aaf0 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55f4c8d4cf28 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55f4c8d4cef0 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55f4c8d4ced8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f4c8d4ceb8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f4c8d4c848 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55f4c8d4ce50 <col:2> 'IPAddress' lvalue ->_daddr 0x55f4c8d4b708
|     | `-CXXThisExpr 0x55f4c8d4ce40 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d4cea0 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55f4c8d4ce80 <col:11> 'IPAddress' lvalue ParmVar 0x55f4c8d4aaf0 'a' 'IPAddress'
|-CXXMethodDecl 0x55f4c8d4acc8 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55f4c8d4ac38 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f4c8d4cfd8 <col:32, line:96:5>
|   `-BinaryOperator 0x55f4c8d4cfb8 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55f4c8d4cf50 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55f4c8d4b7c8
|     | `-CXXThisExpr 0x55f4c8d4cf40 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d4cfa0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8d4cf80 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8d4ac38 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f4c8d4af90 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55f4c8d4ad80 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55f4c8d4adf8 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55f4c8d4ae70 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55f4c8d4aee8 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f4c8d4d2f0 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55f4c8d4d0a0 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55f4c8d4d088 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f4c8d4d068 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f4c8d4c848 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55f4c8d4d000 <col:2> 'IPAddress' lvalue ->_saddr 0x55f4c8d4b6a8
|   | | `-CXXThisExpr 0x55f4c8d4cff0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8d4d050 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55f4c8d4d030 <col:11> 'IPAddress' lvalue ParmVar 0x55f4c8d4ad80 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55f4c8d4d188 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55f4c8d4d170 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f4c8d4d150 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f4c8d4c848 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55f4c8d4d0e8 <col:2> 'IPAddress' lvalue ->_daddr 0x55f4c8d4b708
|   | | `-CXXThisExpr 0x55f4c8d4d0d8 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8d4d138 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55f4c8d4d118 <col:11> 'IPAddress' lvalue ParmVar 0x55f4c8d4ae70 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55f4c8d4d238 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55f4c8d4d1d0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55f4c8d4b768
|   | | `-CXXThisExpr 0x55f4c8d4d1c0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8d4d220 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f4c8d4d200 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8d4adf8 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55f4c8d4d2d0 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55f4c8d4d268 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55f4c8d4b7c8
|     | `-CXXThisExpr 0x55f4c8d4d258 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d4d2b8 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8d4d298 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8d4aee8 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f4c8d4b098 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55f4c8d4de28 <col:30, line:115:5>
|   `-ReturnStmt 0x55f4c8d4de18 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55f4c8d4de00 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55f4c8d4ddd0 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8d4d988 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8d4d7f8 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55f4c8d4d768 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f4c8d4d340 <col:18> 'const IPAddress' lvalue ->_daddr 0x55f4c8d4b708
|             |   `-CXXThisExpr 0x55f4c8d4d330 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55f4c8d4d798 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55f4c8d4d380 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55f4c8d4b7c8
|             |   `-CXXThisExpr 0x55f4c8d4d370 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55f4c8d4d7b0 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f4c8d4d3c0 <col:34> 'const IPAddress' lvalue ->_saddr 0x55f4c8d4b6a8
|             |   `-CXXThisExpr 0x55f4c8d4d3b0 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55f4c8d4d7e0 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55f4c8d4d400 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55f4c8d4b768
|                 `-CXXThisExpr 0x55f4c8d4d3f0 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f4c8d4b158 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55f4c8d4b1f8 <col:48> "" ""
|-CXXMethodDecl 0x55f4c8d4b288 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55f4c8d4b348 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55f4c8d4b418 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55f4c8d4b4c0 <col:51> "" ""
|-CXXMethodDecl 0x55f4c8d4b560 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55f4c8d4b600 <col:44> "" ""
|-AccessSpecDecl 0x55f4c8d4b670 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55f4c8d4b6a8 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55f4c8d4b708 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55f4c8d4b768 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55f4c8d4b7c8 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f4c8d4b900 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55f4c8d4b830 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55f4c8d4bbe8 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55f4c8d4bb28 parent 0x55f4c873a488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55f4c8d4b9b8 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55f4c8d4ba58 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55f4c8d4d430 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55f4c8d4d430
| `-ParmVarDecl 0x55f4c8d4d548 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55f4c8d4d5e8 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8d4d6f8 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f4c8d4b6a8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4da78 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55f4c8d4da30 <col:7> 'IPAddress' xvalue ._saddr 0x55f4c8d4b6a8
| |     `-CXXStaticCastExpr 0x55f4c8d4da00 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8d4d9d0 <col:7> 'IPFlowID' lvalue ParmVar 0x55f4c8d4d6f8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f4c8d4b708 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f4c8d4db78 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55f4c8d4db30 <col:7> 'IPAddress' xvalue ._daddr 0x55f4c8d4b708
| |     `-CXXStaticCastExpr 0x55f4c8d4db00 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8d4dad0 <col:7> 'IPFlowID' lvalue ParmVar 0x55f4c8d4d6f8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f4c8d4b768 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f4c8d4dc78 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8d4dc30 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55f4c8d4b768
| |     `-CXXStaticCastExpr 0x55f4c8d4dc00 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8d4dbd0 <col:7> 'IPFlowID' lvalue ParmVar 0x55f4c8d4d6f8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f4c8d4b7c8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f4c8d4dd60 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8d4dd18 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55f4c8d4b7c8
| |     `-CXXStaticCastExpr 0x55f4c8d4dce8 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8d4dcb8 <col:7> 'IPFlowID' lvalue ParmVar 0x55f4c8d4d6f8 '' 'IPFlowID &&'
| `-CompoundStmt 0x55f4c8d4ddc0 <col:7>
|-CXXDestructorDecl 0x55f4c8d4d848 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8d55d70 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8d55e78 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55f4c8d569d8 <col:7>
|   |-CXXMemberCallExpr 0x55f4c8d56668 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55f4c8d56620 <col:7> '<bound member function type>' .operator= 0x55f4c8d4c848
|   | | `-MemberExpr 0x55f4c8d56530 <col:7> 'IPAddress' lvalue ->_saddr 0x55f4c8d4b6a8
|   | |   `-CXXThisExpr 0x55f4c8d56520 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55f4c8d565f0 <col:7> 'const IPAddress' lvalue ._saddr 0x55f4c8d4b6a8
|   |   `-DeclRefExpr 0x55f4c8d565d0 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f4c8d55e78 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55f4c8d567e8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55f4c8d567a0 <col:7> '<bound member function type>' .operator= 0x55f4c8d4c848
|   | | `-MemberExpr 0x55f4c8d566b0 <col:7> 'IPAddress' lvalue ->_daddr 0x55f4c8d4b708
|   | |   `-CXXThisExpr 0x55f4c8d566a0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55f4c8d56770 <col:7> 'const IPAddress' lvalue ._daddr 0x55f4c8d4b708
|   |   `-DeclRefExpr 0x55f4c8d56750 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f4c8d55e78 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55f4c8d568b8 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55f4c8d56870 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55f4c8d4b768
|   | | `-CXXThisExpr 0x55f4c8d56860 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55f4c8d568a0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55f4c8d56830 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55f4c8d4b768
|   |     `-DeclRefExpr 0x55f4c8d56810 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f4c8d55e78 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55f4c8d56980 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55f4c8d56938 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55f4c8d4b7c8
|   | | `-CXXThisExpr 0x55f4c8d56928 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55f4c8d56968 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55f4c8d568f8 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55f4c8d4b7c8
|   |     `-DeclRefExpr 0x55f4c8d568d8 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f4c8d55e78 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55f4c8d569c8 <col:7>
|     `-UnaryOperator 0x55f4c8d569b0 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f4c8d569a0 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55f4c8d55ee8 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55f4c8d55ee8
  `-ParmVarDecl 0x55f4c8d55ff8 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d54830 prev 0x55f4c8d51400 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f4c8d54928 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55f4c8d549b8 <col:25, col:31> col:25 public
|-TypedefDecl 0x55f4c8d549f0 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55f4c8d49590 'IPFlowID'
|   `-CXXRecord 0x55f4c8d49500 'IPFlowID'
|-TypedefDecl 0x55f4c8d54a58 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55f4c8d4ba20 'const IPFlowID &'
|   `-QualType 0x55f4c8d49591 'const IPFlowID' const
|     `-RecordType 0x55f4c8d49590 'IPFlowID'
|       `-CXXRecord 0x55f4c8d49500 'IPFlowID'
|-CXXConstructorDecl 0x55f4c8d54b10 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d55570 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55f4c8d55878 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55f4c8d558d0 <col:23, line:22:5>
|-CXXMethodDecl 0x55f4c8d54dd8 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55f4c8d54bc8 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f4c8d54c40 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c8d54cb8 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55f4c8d56c98 <col:78, line:30:5>
|   |-ParenExpr 0x55f4c8d55cf0 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55f4c8d55cc0 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8d55980 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8d55950 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55f4c8d55920 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55f4c8d558e0 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8d54c40 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55f4c8d55938 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55f4c8d55900 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55f4c8d559e0 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8d559c0 <col:51> 'int' 0
|   |   `-CallExpr 0x55f4c8d55c20 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8d55c08 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8d55be8 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8d55c60 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8d55a50 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55f4c8d55c78 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8d55a80 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55f4c8d55c90 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8d55ab8 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55f4c8d55ca8 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8d55bd0 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8d55bb8 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8d55b58 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55f4c8d56a80 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55f4c8d56a68 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f4c8d564b8 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55f4c8d55d70 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55f4c8d55d20 <col:2> 'IPFlowID' lvalue ->_flowid 0x55f4c8d55570
|   | | `-CXXThisExpr 0x55f4c8d55d10 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55f4c8d55d50 <col:12> 'const IPFlowID' lvalue ParmVar 0x55f4c8d54bc8 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55f4c8d56b30 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55f4c8d56ac8 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55f4c8d55610
|   | | `-CXXThisExpr 0x55f4c8d56ab8 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8d56b18 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f4c8d56af8 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8d54c40 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55f4c8d56be0 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f4c8d56b60 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55f4c8d55670
|   | | `-CXXThisExpr 0x55f4c8d56b50 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8d56bc8 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55f4c8d56bb0 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f4c8d56b90 <col:15> 'bool' lvalue ParmVar 0x55f4c8d54cb8 'direction' 'bool'
|   `-BinaryOperator 0x55f4c8d56c78 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55f4c8d56c10 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55f4c8d556d0
|     | `-CXXThisExpr 0x55f4c8d56c00 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d56c60 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55f4c8d56c40 <col:14> 'int' 0
|-CXXMethodDecl 0x55f4c8d54f08 <line:32:5, line:34:5> line:32:21 flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55f4c8d56d20 <col:36, line:34:5>
|   `-ReturnStmt 0x55f4c8d56d10 <line:33:2, col:9>
|     `-MemberExpr 0x55f4c8d56ce0 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55f4c8d55570
|       `-CXXThisExpr 0x55f4c8d56cd0 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f4c8d54fc8 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55f4c8d55088 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55f4c8d56db8 <col:28, line:39:5>
|   `-ReturnStmt 0x55f4c8d56da8 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8d56d90 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55f4c8d56d78 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55f4c8d56d48 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55f4c8d55670
|           `-CXXThisExpr 0x55f4c8d56d38 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f4c8d55150 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55f4c8d56e50 <col:24, line:43:5>
|   `-ReturnStmt 0x55f4c8d56e40 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8d56e28 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f4c8d56e10 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55f4c8d56de0 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55f4c8d55610
|           `-CXXThisExpr 0x55f4c8d56dd0 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f4c8d55268 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55f4c8d56f58 <col:28, line:47:5>
|   `-ReturnStmt 0x55f4c8d56f48 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55f4c8d56f18 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55f4c8d56ee8 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55f4c8d56e68 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55f4c8d56ed0 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55f4c8d56eb8 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55f4c8d56e88 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55f4c8d55670
|               `-CXXThisExpr 0x55f4c8d56e78 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f4c8d55388 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55f4c8d57060 <col:40, line:50:5>
|   `-ReturnStmt 0x55f4c8d57050 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55f4c8d57020 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55f4c8d56ff0 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55f4c8d56f70 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55f4c8d56fd8 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55f4c8d56fc0 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55f4c8d56f90 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55f4c8d55670
|               `-CXXThisExpr 0x55f4c8d56f80 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f4c8d55498 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55f4c8d570c8 <col:41, line:54:5>
|   `-ReturnStmt 0x55f4c8d570b8 <line:53:2, col:9>
|     `-MemberExpr 0x55f4c8d57088 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55f4c8d55570
|       `-CXXThisExpr 0x55f4c8d57078 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55f4c8d55538 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55f4c8d55570 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55f4c8d55610 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55f4c8d555f0 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55f4c8d555c0 <col:24> 'int' 24
|-FieldDecl 0x55f4c8d55670 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55f4c8d556d0 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
`-FriendDecl 0x55f4c8d55820 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8cdf4b8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8cdf5d8 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55f4c8cdf678 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8cdf6d8 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55f4c8ce27c0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f4c8ce2bf8 <col:8>
|-CXXConstructorDecl 0x55f4c8ce28c8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55f4c8ce28c8
| `-ParmVarDecl 0x55f4c8ce29d8 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55f4c8ce2a78 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8ce2b88 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55f4c8cdf678 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8ce4aa0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8ce4a70 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55f4c8cdf678
| |     `-CXXStaticCastExpr 0x55f4c8ce4a40 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8ce4a10 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55f4c8ce2b88 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55f4c8cdf6d8 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55f4c8ce4b70 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55f4c8ce4b40 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55f4c8cdf6d8
| |     `-CXXStaticCastExpr 0x55f4c8ce4b10 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8ce4ae0 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55f4c8ce2b88 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55f4c8ce4bc0 <col:8>
|-CXXDestructorDecl 0x55f4c8ce4f38 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8d8b718 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55f4c8d8b718
| `-ParmVarDecl 0x55f4c8d8b828 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55f4c8d8b898 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55f4c8d8b898
  `-ParmVarDecl 0x55f4c8d8b9a8 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d8a3f0 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55f4c8d8a688 prev 0x55f4c8d8a3f0 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55f4c8d8a7f0 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55f4c8d8a840 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8d8a890 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55f4c8d8a8e0 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55f4c8d8a930 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55f4c8d8aa88 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55f4c8d8abd8 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55f4c8d8ad28 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55f4c8d8b120 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f4c8d8b120
| `-ParmVarDecl 0x55f4c8d8b238 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55f4c8d8cef0 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f4c8d8cef0
  `-ParmVarDecl 0x55f4c8d8cff8 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d53020 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55f4c8d86328 prev 0x55f4c8d53020 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55f4c8d863b8 <col:23, col:29> col:23 public
|-TypedefDecl 0x55f4c8d86e80 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55f4c8d86e30 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55f4c8d86bb0 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55f4c8d86630 'key_type'
|     `-ElaboratedType 0x55f4c8d865e0 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55f4c8d865c0 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55f4c8d549f0 'key_type'
|         `-RecordType 0x55f4c8d49590 'IPFlowID'
|           `-CXXRecord 0x55f4c8d49500 'IPFlowID'
|-TypedefDecl 0x55f4c8d86f18 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55f4c8d86ee0 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55f4c8ced020 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f4c8cecfc8 'T'
|   `-RecordType 0x55f4c8d51490 'IPRewriterEntry'
|     `-CXXRecord 0x55f4c8d54830 'IPRewriterEntry'
|-TypedefDecl 0x55f4c8d86f70 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55f4c87e1c20 'size_t' sugar
|   |-Typedef 0x55f4c87aabe0 'size_t'
|   `-BuiltinType 0x55f4c873a640 'unsigned long'
|-TypedefDecl 0x55f4c8d86fc8 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55f4c8891f30 'uint32_t' sugar
|   |-Typedef 0x55f4c87a34c8 'uint32_t'
|   `-TypedefType 0x55f4c877c5a0 '__uint32_t' sugar
|     |-Typedef 0x55f4c877c198 '__uint32_t'
|     `-BuiltinType 0x55f4c873a620 'unsigned int'
|-EnumDecl 0x55f4c8d87020 <line:98:5> col:5
| |-EnumConstantDecl 0x55f4c8d87150 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55f4c8d87130 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55f4c8d87108 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55f4c8d870f0 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55f4c8ced670 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55f4c8ced650 <col:42> 'int' 1
| `-EnumConstantDecl 0x55f4c8d871c0 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55f4c8d87210 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8d871a0 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55f4c8ced728 <col:25> 'int' 63
|-CXXConstructorDecl 0x55f4c8d87260 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55f4c8d873c8 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55f4c8d87318 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55f4c8d874b0 <line:114:5, col:20> col:5 ~HashContainer 'void ()' noexcept-unevaluated 0x55f4c8d874b0
|-CXXMethodDecl 0x55f4c8d875a0 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55f4c8d87650 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f4c8d87700 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55f4c8d87898 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55f4c8d877d0 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f4c8d87ab8 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55f4c8d879c8 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d87b70 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55f4c8d87e00 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f4c8d87d60 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55f4c8d87d40 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f4c8d87c40 'HashContainer_const_iterator'
|-TypedefDecl 0x55f4c8d88030 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f4c8d87f90 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55f4c8d87f70 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f4c8d87e78 'HashContainer_iterator'
|-CXXMethodDecl 0x55f4c8d88128 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55f4c8d88278 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55f4c8d88348 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55f4c8d88418 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55f4c8d885b8 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55f4c8d884c8 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f4c8d88768 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55f4c8d88670 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f4c8d88928 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55f4c8d88830 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d88ae8 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55f4c8d889f0 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d88ca8 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55f4c8d88bb0 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d88e68 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55f4c8d88d70 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d88fc0 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55f4c8d88f30 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d891a8 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55f4c8d890b8 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55f4c8d89260 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d892b8 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d894d8 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55f4c8d89348 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55f4c8d893c0 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55f4c8d897a8 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55f4c8d895a8 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55f4c8d89620 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55f4c8d89688 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55f4c8d89978 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55f4c8d89880 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55f4c8d89a30 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d89a88 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d89bb8 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55f4c8d89ac0 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55f4c8d89d78 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55f4c8d89c80 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f4c8d89e30 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55f4c8d8a0f8 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55f4c8d8a008 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55f4c8d8a240 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55f4c8d8a1b0 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f4c8d8a2f8 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55f4c8d8a3a8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55f4c8d8d080 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55f4c8d8d2d8 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55f4c8d8d1c8 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55f4c8d8d678 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55f4c8d8d548 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55f4c8d8d838 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55f4c8d8d988 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d722c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55f4c8d72498 prev 0x55f4c8d722c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f4c8d72528 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f4c8d72550 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8d74120 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55f4c8d740d0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55f4c8d72a00 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55f4c8d72900 'type'
|     `-TemplateSpecializationType 0x55f4c8d72890 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f4c8d72770 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55f4c8d72750 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f4c8d72730 <col:24> 'unsigned long' 8
|       `-RecordType 0x55f4c8d72870 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55f4c8d72790 'char_array'
|-TypedefDecl 0x55f4c8d741d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55f4c8d741a0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55f4c8d74180 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55f4c8d74120 'type'
|     `-ElaboratedType 0x55f4c8d740d0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55f4c8d72a00 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55f4c8d72900 'type'
|         `-TemplateSpecializationType 0x55f4c8d72890 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f4c8d72770 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55f4c8d72750 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f4c8d72730 <col:24> 'unsigned long' 8
|           `-RecordType 0x55f4c8d72870 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55f4c8d72790 'char_array'
|-CXXMethodDecl 0x55f4c8d74358 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55f4c8d74268 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55f4c8d74448 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f4c8d74528 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55f4c8d747f8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f4c8d74700 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55f4c8d74a38 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f4c8d748b0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8d74928 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d74c08 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f4c8d74af8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8d74b70 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d74d68 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f4c8d74e38 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f4c8d75088 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f4c8d74ef8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f4c8d74f70 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d752e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55f4c8d75158 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f4c8d751d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d754a8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f4c8d753b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d75668 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f4c8d75570 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d75720 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f4c8d790f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f4c8d79328 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f4c8d791a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f4c8d79218 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f4c8d795c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f4c8d794d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55f4c8d79690 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55f4c8d796e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f4c8d79730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d70cb0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55f4c8d70eb0 prev 0x55f4c8d70cb0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f4c8d72230 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f4c8d721e0 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55f4c8d721c0 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55f4c8d72070 'type'
|     `-SubstTemplateTypeParmType 0x55f4c8d71e90 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f4c8a19ee0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a19e88 'T'
|       `-RecordType 0x55f4c8d719e0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f4c8d718f8 'sized_array_memory'
|-FieldDecl 0x55f4c8d79780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f4c8d797d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f4c8d79808 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f4c8a51088 'T'
|   `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|     `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|       `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d798c8 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55f4c8d79890 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|       `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|         `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d79988 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55f4c8d79950 'IPRewriterFlow *const &'
|   `-QualType 0x55f4c8d70f41 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|         `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|           `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d79a18 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55f4c8d799e0 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|       `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|         `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d79ad8 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55f4c8d79aa0 'IPRewriterFlow *const *'
|   `-QualType 0x55f4c8d70f41 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|         `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|           `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d7a8c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55f4c8d7a870 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55f4c8d7a850 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55f4c8d7a7e0 'type'
|     `-SubstTemplateTypeParmType 0x55f4c8d7a5a0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f4c8a23120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a230d0 'T'
|       `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|         `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|           `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d7a928 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55f4c8d79950 'IPRewriterFlow *const &'
|   `-QualType 0x55f4c8d70f41 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|         `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|           `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d7a980 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8d7a9e8 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55f4c8d799e0 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f4c8a51088 'T'
|     `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|       `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|         `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-TypedefDecl 0x55f4c8d7aa50 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55f4c8d79aa0 'IPRewriterFlow *const *'
|   `-QualType 0x55f4c8d70f41 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f4c8d70f40 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f4c8a510e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f4c8a51088 'T'
|       `-PointerType 0x55f4c8d551f0 'IPRewriterFlow *'
|         `-RecordType 0x55f4c8d513e0 'IPRewriterFlow'
|           `-CXXRecord 0x55f4c8d570e0 'IPRewriterFlow'
|-EnumDecl 0x55f4c8d7aaa8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f4c8d7aba0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f4c8d7ab80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f4c8a522a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f4c8a52280 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f4c8a52260 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f4c8d7ac28 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55f4c8d7aeb8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d7ace0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8d7ad80 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55f4c8d7b178 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55f4c8d7b060 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55f4c8d7b438 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55f4c8d7b320 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55f4c8d7b780 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55f4c8d7b660 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55f4c8d7ba90 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55f4c8d7b970 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55f4c8d7bd80 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d7bbc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8d7bc40 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f4c8d7bed8 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55f4c8d7bfb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d7c010 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d7c058 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55f4c8d7c108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d7c160 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d7c228 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d7c2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d7c330 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d7c378 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d7c428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d7c480 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d7c4c8 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d7c578 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d7c5d0 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d7c618 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f4c8d7c6c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f4c8d7c720 <col:30> Inherited
|-CXXMethodDecl 0x55f4c8d7c748 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f4c8d7c7f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f4c8d7c8a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f4c8d7ca68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d7c958 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f4c8d7c9d0 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f4c8d7cbb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8d7cb28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d7cd68 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55f4c8d7cc70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f4c8d7ce20 <col:20>
| `-OptimizeNoneAttr 0x55f4c8d7ce78 <col:30>
|-CXXMethodDecl 0x55f4c8d7cf98 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f4c8d7cea0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f4c8d7d050 <col:20>
| `-OptimizeNoneAttr 0x55f4c8d7d0a8 <col:30>
|-CXXMethodDecl 0x55f4c8d7d160 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8d7d0d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d7d2a8 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f4c8d7d218 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d7d3d8 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55f4c8d7d508 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55f4c8d7d5d8 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55f4c8d7d6a8 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55f4c8d7d7e8 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f4c8d7d758 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d7d930 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f4c8d7d8a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f4c8d7da78 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f4c8d7d9e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f4c8d7db30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f4c8d7dc30 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f4c8d7dba0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f4c8d7dce8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f4c8d7dda8 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55f4c8d7dea8 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55f4c8d7e058 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f4c8d7df68 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55f4c8d7e848 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f4c8d7e110 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55f4c8d7e7a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55f4c8d7e6a8 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55f4c8d7e928 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f4c8d7ea78 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f4c8d7e9e8 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f4c8d7eb30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f4c8d7ed78 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f4c8d7ebf0 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55f4c8d7ec68 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f4c8d7ef38 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55f4c8d7ee48 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55f4c8d7f188 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55f4c8d7f000 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55f4c8d7f078 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55f4c8d7f248 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f4c8d7f4a8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55f4c8d7f3b0 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55f4c8d7f578 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55f4c8d80488 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d70768 prev 0x55f4c8d546f0 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8d70860 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55f4c8d708f0 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55f4c8d70950 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d7fe18 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55f4c8d80460 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d7fe78 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55f4c8d80378 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55f4c8d7fed8 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8d80420 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8d803e0 <col:38> 'int' 1
| `-CompoundStmt 0x55f4c8d804d8 <col:41, line:46:5>
|-CXXDestructorDecl 0x55f4c8d70a40 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55f4c8d80918 <col:23, line:49:5>
|   `-ParenExpr 0x55f4c8d808f8 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55f4c8d808c8 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55f4c8d805b0 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55f4c8d80580 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55f4c8d80528 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55f4c8d804f8 <col:23> '<bound member function type>' ->size 0x55f4c8d7f758
|       |   |   `-ImplicitCastExpr 0x55f4c8d80548 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55f4c8d804e8 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55f4c8d80560 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55f4c8d80610 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55f4c8d805f0 <col:44> 'int' 0
|       `-CallExpr 0x55f4c8d80828 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55f4c8d80810 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f4c8d807f0 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55f4c8d80868 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f4c8d80680 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55f4c8d80880 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f4c8d80728 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55f4c8d80898 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55f4c8d80760 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55f4c8d808b0 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55f4c8d807d8 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55f4c8d807c0 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55f4c8d80780 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55f4c8d70b40 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55f4c8d80988 <col:16, line:53:5>
|   `-UnaryOperator 0x55f4c8d80970 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55f4c8d80940 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55f4c8d7fed8
|       `-CXXThisExpr 0x55f4c8d80930 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55f4c8d70c00 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55f4c8d80e50 <col:18, line:58:5>
|   |-ParenExpr 0x55f4c8d80d20 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55f4c8d80cf0 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8d80a60 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8d80a30 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55f4c8d80a00 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55f4c8d809b0 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55f4c8d7fed8
|   |   |   |   `-CXXThisExpr 0x55f4c8d809a0 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55f4c8d80a18 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55f4c8d809e0 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55f4c8d80ac0 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8d80aa0 <col:47> 'int' 0
|   |   `-CallExpr 0x55f4c8d80c50 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8d80c38 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8d80c18 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8d80c90 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8d80b30 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55f4c8d80ca8 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8d80b58 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55f4c8d80cc0 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8d80b90 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55f4c8d80cd8 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8d80c00 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8d80be8 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8d80bb0 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55f4c8d80e38 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55f4c8d80de8 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55f4c8d80db8 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55f4c8d80d80 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55f4c8d80d50 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55f4c8d7fed8
|     | |     `-CXXThisExpr 0x55f4c8d80d40 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55f4c8d80dd0 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55f4c8d80d98 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55f4c8d80e18 <line:57:6, col:13> 'void' Function 0x55f4c888fd28 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55f4c8d80e08 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55f4c8d7f758 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55f4c8d83a50 <col:54, line:62:5>
|   `-ReturnStmt 0x55f4c8d83a40 <line:61:2, col:43>
|     `-BinaryOperator 0x55f4c8d83a20 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55f4c8d80fd0 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55f4c8d80fa0 <col:9, col:19> '<bound member function type>' .size 0x55f4c8d7c748
|       |   `-ArraySubscriptExpr 0x55f4c8d80f80 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55f4c8d80f68 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55f4c8d80e80 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55f4c8d7fe18
|       |     |   `-CXXThisExpr 0x55f4c8d80e70 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55f4c8d80eb0 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55f4c8d810b8 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55f4c8d81088 <col:28, col:38> '<bound member function type>' .size 0x55f4c8d7c748
|           `-ArraySubscriptExpr 0x55f4c8d81068 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55f4c8d81050 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8d81000 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55f4c8d7fe18
|             |   `-CXXThisExpr 0x55f4c8d80ff0 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55f4c8d81030 <col:35> 'int' 1
|-CXXMethodDecl 0x55f4c8d7f848 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55f4c8d83ad0 <col:30, line:65:5>
|   `-ReturnStmt 0x55f4c8d83ac0 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8d83aa8 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55f4c8d83a78 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55f4c8d7fe78
|         `-CXXThisExpr 0x55f4c8d83a68 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55f4c8d7f8e8 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55f4c8d7f910 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55f4c8d7fa10 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55f4c8d7faf0 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d7f9f0 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8d7f9d0 <col:18> 'int' 0
| `-EnumConstantDecl 0x55f4c8d7faa0 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55f4c8d7fb08 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8d7fa80 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55f4c8d7fa60 <col:35> 'int' 1
|-FieldDecl 0x55f4c8d7fe18 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55f4c8d7fe78 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55f4c8d7fed8 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55f4c8d7ff48 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55f4c8d7ffe0 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55f4c8d80048 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55f4c8d80048
| `-ParmVarDecl 0x55f4c8d80158 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55f4c8d801f8 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55f4c8d801f8
  `-ParmVarDecl 0x55f4c8d80308 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.2], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.2], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8c3ecb0 prev 0x55f4c8c36140 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8c3eda8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55f4c8c3ee48 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55f4c8c452e8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f4c8c456c8 <col:11>
|-CXXConstructorDecl 0x55f4c8c453c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8c454a8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f4c8c45e10 <col:11>
|-CXXConstructorDecl 0x55f4c8c45548 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8c45658 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55f4c8c47668 <col:11>
|-CXXDestructorDecl 0x55f4c8c46978 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8946ab8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8946bc8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f4c8947490 <col:11>
|   `-ReturnStmt 0x55f4c8947480 <col:11>
|     `-UnaryOperator 0x55f4c8947468 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f4c8947458 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55f4c8946c38 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f4c8946d48 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55f4c8cd1730 <col:11>
    `-ReturnStmt 0x55f4c8cd1720 <col:11>
      `-UnaryOperator 0x55f4c8cd1708 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f4c8cd16f8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8c33d28 prev 0x55f4c8c33a40 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8c33e20 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55f4c8c33eb0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f4c8c33ee8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55f4c8892010 'int32_t' sugar
|   |-Typedef 0x55f4c87a3328 'int32_t'
|   `-TypedefType 0x55f4c877c510 '__int32_t' sugar
|     |-Typedef 0x55f4c877c128 '__int32_t'
|     `-BuiltinType 0x55f4c873a580 'int'
|-TypedefDecl 0x55f4c8c33f50 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55f4c88921d0 'int64_t' sugar
|   |-Typedef 0x55f4c87a3390 'int64_t'
|   `-TypedefType 0x55f4c877c630 '__int64_t' sugar
|     |-Typedef 0x55f4c877c208 '__int64_t'
|     `-BuiltinType 0x55f4c873a5a0 'long'
|-EnumDecl 0x55f4c8c33fa8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55f4c8c34120 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55f4c8c34100 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55f4c8c340d8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55f4c8c340c0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55f4c8c34090 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55f4c8c34218 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55f4c8c341f8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55f4c8c341d0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55f4c8c341b8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55f4c8c34190 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55f4c8c34170 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55f4c8c34268 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55f4c8c34370 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35e90 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c34350 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55f4c8c34330 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55f4c8c34400 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35ea8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c343e0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f4c8c343c0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55f4c8c34490 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35ec0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c34470 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f4c8c34450 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f4c8c34520 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35ed8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c34500 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f4c8c344e0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55f4c8c345b0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35ef0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c34590 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f4c8c34570 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f4c8c34640 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35f08 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c34620 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f4c8c34600 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55f4c8c346d0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35f20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c346b0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55f4c8c34690 <col:26> 'int' EnumConstant 0x55f4c8c34370 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55f4c8c347a0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f4c8c35f38 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c34780 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55f4c8c34760 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55f4c8c34720 <col:27> 'int' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55f4c8c34740 <col:44> 'int' EnumConstant 0x55f4c8c34640 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55f4c8c35e40 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55f4c8c35f50 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c34850 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55f4c8c34830 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55f4c8c347f0 <col:27> 'int' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55f4c8c34810 <col:44> 'int' EnumConstant 0x55f4c8c34520 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55f4c8c35f68 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55f4c8c36070 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55f4c8c360c0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c36050 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55f4c8c36030 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55f4c8c360e8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f4c8891c40 'uninitialized_type'
|   `-CXXRecord 0x55f4c8891ba8 'uninitialized_type'
|-CXXRecordDecl 0x55f4c8c36140 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55f4c8c36250 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c456d8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c457f8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55f4c8c457b0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55f4c8c45740 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c45730 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f4c8c45770 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f4c8c457e0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f4c8c45790 <col:19> 'int' 0
|-CXXConstructorDecl 0x55f4c8c36498 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c36310 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55f4c8c36388 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f4c8c45180 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8c45160 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c45810 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c45960 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55f4c8c458e8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55f4c8c45878 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c45868 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f4c8c45930 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f4c8c45918 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f4c8c458a8 <col:16> 'long' lvalue ParmVar 0x55f4c8c36310 'sec' 'long'
|     `-ImplicitCastExpr 0x55f4c8c45948 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c458c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c36388 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f4c8c366f8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c36568 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55f4c8c365e0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f4c8c451b8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8c45198 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c45978 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c45ab0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55f4c8c45a50 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55f4c8c459e0 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c459d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f4c8c45a80 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8c45a10 <col:16> 'int' lvalue ParmVar 0x55f4c8c36568 'sec' 'int'
|     `-ImplicitCastExpr 0x55f4c8c45a98 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c45a30 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c365e0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f4c8c36958 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c367c8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55f4c8c36840 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f4c8c451f0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8c451d0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c45ac8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c45c18 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55f4c8c45ba0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55f4c8c45b30 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c45b20 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f4c8c45be8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f4c8c45bd0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f4c8c45b60 <col:16> 'unsigned long' lvalue ParmVar 0x55f4c8c367c8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55f4c8c45c00 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c45b80 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c36840 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f4c8c36bb8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c36a28 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55f4c8c36aa0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f4c8c45228 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8c45208 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c45c30 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c45d80 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55f4c8c45d08 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55f4c8c45c98 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c45c88 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f4c8c45d50 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f4c8c45d38 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f4c8c45cc8 <col:16> 'unsigned int' lvalue ParmVar 0x55f4c8c36a28 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55f4c8c45d68 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c45ce8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c36aa0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f4c8c36d18 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55f4c8c36c88 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55f4c8c36eb8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55f4c8c36df0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55f4c8c370e8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55f4c8c36ff0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55f4c8c37298 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55f4c8c371d8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c45e20 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55f4c8c45d98 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55f4c8c371d8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f4c8c45e80 <col:19, line:214:5>
|-CXXConstructorDecl 0x55f4c8c37468 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55f4c8c373a8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c45e90 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c45f40 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55f4c8c45f18 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f4c8c45ee8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55f4c8c373a8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55f4c8c37658 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55f4c8c375d0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55f4c8c33ad0 'Timestamp'
|   | `-CXXRecord 0x55f4c8c33d28 'Timestamp'
|   `-ParenType 0x55f4c8c37570 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55f4c8c37540 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55f4c8c34070 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55f4c8c33ee8 'seconds_type'
|         `-TypedefType 0x55f4c8892010 'int32_t' sugar
|           |-Typedef 0x55f4c87a3328 'int32_t'
|           `-TypedefType 0x55f4c877c510 '__int32_t' sugar
|             |-Typedef 0x55f4c877c128 '__int32_t'
|             `-BuiltinType 0x55f4c873a580 'int'
|-CXXConversionDecl 0x55f4c8c37798 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f4c8c37868 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55f4c8c46048 <col:37, line:231:5>
|   `-ReturnStmt 0x55f4c8c46038 <line:227:9, col:23>
|     `-BinaryOperator 0x55f4c8c46018 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55f4c8c45fe8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f4c8c45f98 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f4c8c3ee48
|       |   `-MemberExpr 0x55f4c8c45f68 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
|       |     `-CXXThisExpr 0x55f4c8c45f58 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f4c8c46000 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55f4c8c45fc8 <col:23> 'int' 0
|-CXXMethodDecl 0x55f4c8c37928 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55f4c8c379e8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c37aa8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c37b68 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c37c28 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c37d98 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55f4c8c37cd8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55f4c8c37ee0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f4c8c37e50 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c37fa8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f4c8c38048 <col:54> "" ""
|-CXXMethodDecl 0x55f4c8c380d8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f4c8c38178 <col:54> "" ""
|-CXXMethodDecl 0x55f4c8c38208 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f4c8c382a8 <col:54> "" ""
|-CXXMethodDecl 0x55f4c8c383a8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55f4c8c38478 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55f4c8c385a8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55f4c8c386a0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55f4c8c387d8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f4c8c46260 <col:39, line:271:5>
|   `-ReturnStmt 0x55f4c8c46250 <line:267:9, col:61>
|     `-CallExpr 0x55f4c8c461f0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f4c8c461d8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8c46060 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f4c8c40128 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f4c8c46220 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f4c8c460c0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f4c8c3ee48
|       |   `-MemberExpr 0x55f4c8c46090 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
|       |     `-CXXThisExpr 0x55f4c8c46080 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f4c8c46238 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f4c8c46160 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f4c8c46130 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f4c8c460f0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f4c8c46148 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f4c8c46110 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34640 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c38898 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f4c8c46420 <col:39, line:279:5>
|   `-ReturnStmt 0x55f4c8c46410 <line:275:9, col:61>
|     `-CallExpr 0x55f4c8c463b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f4c8c46398 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8c46278 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f4c8c40128 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f4c8c463e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f4c8c462d8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f4c8c3ee48
|       |   `-MemberExpr 0x55f4c8c462a8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
|       |     `-CXXThisExpr 0x55f4c8c46298 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f4c8c463f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f4c8c46378 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f4c8c46348 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f4c8c46308 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f4c8c46360 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f4c8c46328 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34520 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c38958 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f4c8c465b8 <col:39, line:287:5>
|   `-ReturnStmt 0x55f4c8c465a8 <line:283:9, col:53>
|     `-BinaryOperator 0x55f4c8c46588 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55f4c8c46558 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f4c8c46478 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f4c8c3ee48
|       |   `-MemberExpr 0x55f4c8c46448 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
|       |     `-CXXThisExpr 0x55f4c8c46438 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f4c8c46570 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55f4c8c46538 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f4c8c46518 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c464e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c464a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34370 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c46500 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c464c8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c38a48 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f4c8c47850 <col:40, line:293:5>
|   |-DeclStmt 0x55f4c8c46700 <line:291:9, col:48>
|   | `-VarDecl 0x55f4c8c465e0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f4c8c466e0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f4c8c46688 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f4c8c46658 <col:22> '<bound member function type>' ->subsec 0x55f4c8c379e8
|   |     |   `-CXXThisExpr 0x55f4c8c46648 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f4c8c466c8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f4c8c466a8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c347a0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f4c8c47840 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55f4c8c47828 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c477f8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c477e0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f4c8c477c0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f4c8c47790 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f4c8c47528 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f4c8c47510 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f4c8c46718 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f4c8c465e0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f4c8c47730 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f4c8c47718 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f4c8c476e8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f4c8c47540 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f4c8c474b0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f4c8c47498 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f4c8c47448 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f4c8c33c78 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f4c8c473e8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f4c8c46748 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f4c8c46738 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f4c8c47430 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f4c8c47418 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f4c8c46c08 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f4c8c46770 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f4c8c46800 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f4c8c467d0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f4c8c46790 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c347a0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f4c8c467e8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f4c8c467b0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f4c8c465e0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f4c8c47760 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f4c8c474f8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f4c8c474e8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f4c8c38b08 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f4c8c47da8 <col:40, line:302:5>
|   |-DeclStmt 0x55f4c8c479a0 <line:297:9, col:48>
|   | `-VarDecl 0x55f4c8c47880 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f4c8c47980 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f4c8c47928 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f4c8c478f8 <col:22> '<bound member function type>' ->subsec 0x55f4c8c379e8
|   |     |   `-CXXThisExpr 0x55f4c8c478e8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f4c8c47968 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f4c8c47948 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c35e40 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f4c8c47d98 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55f4c8c47d80 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c47d50 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c47d38 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f4c8c47d18 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f4c8c47ce8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f4c8c47c10 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f4c8c47bf8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f4c8c479b8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f4c8c47880 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f4c8c47c88 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f4c8c47c70 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f4c8c47c40 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f4c8c47c28 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f4c8c47b98 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f4c8c47b80 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f4c8c47b60 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f4c8c33c78 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f4c8c47b00 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f4c8c479e8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f4c8c479d8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f4c8c47b48 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f4c8c47b30 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f4c8c47ac0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f4c8c47a10 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f4c8c47aa0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f4c8c47a70 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f4c8c47a30 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c35e40 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f4c8c47a88 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f4c8c47a50 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f4c8c47880 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f4c8c47cb8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f4c8c47be0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f4c8c47bd0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f4c8c38bc8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f4c8c47e30 <col:40, line:306:5>
|   `-ReturnStmt 0x55f4c8c47e20 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55f4c8c47df0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55f4c8c47dd8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f4c8c47dc8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55f4c8c38d68 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55f4c8c38c78 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c38f38 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55f4c8c38e40 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55f4c8c39028 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55f4c8c39198 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55f4c8c390d8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55f4c8c47f78 <col:56, line:320:5>
|   `-ReturnStmt 0x55f4c8c47f68 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55f4c8c47f50 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c47f20 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c47f08 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8c47ec8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f4c8c47e98 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f4c8c47e58 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c390d8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55f4c8c47eb0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f4c8c47e78 <col:31> 'int' 0
|-CXXMethodDecl 0x55f4c8c393d8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c39250 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c392c8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c48148 <col:72, line:326:5>
|   `-ReturnStmt 0x55f4c8c48138 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55f4c8c48120 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c480f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c480d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8c48098 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f4c8c48080 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f4c8c47fa0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c39250 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f4c8c48040 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f4c8c48028 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f4c8c47fc0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f4c8c3e5a0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f4c8c48068 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f4c8c47fe0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c392c8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c39588 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f4c8c39498 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f4c8c51cd0 <col:56, line:337:5>
|   |-DeclStmt 0x55f4c8c48448 <line:329:9, col:51>
|   | `-VarDecl 0x55f4c8c48170 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f4c8c48430 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f4c8c48400 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f4c8c483e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f4c8c483d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f4c8c483a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f4c8c48388 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f4c8c48370 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f4c8c48260 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f4c8c51ac0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f4c8c484b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f4c8c3ee48
|   | | `-MemberExpr 0x55f4c8c48480 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f4c8c3fdf8
|   | |   `-DeclRefExpr 0x55f4c8c48460 <col:9> 'Timestamp' lvalue Var 0x55f4c8c48170 't' 'Timestamp'
|   | `-BinaryOperator 0x55f4c8c51aa0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f4c8c51a70 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f4c8c484e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f4c8c39498 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f4c8c51a88 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f4c8c48590 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f4c8c48570 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f4c8c48540 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f4c8c48500 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f4c8c48558 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f4c8c48520 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34640 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f4c8c51cb8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55f4c8c51c88 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f4c8c51c70 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f4c8c51c50 <col:16> 'Timestamp' lvalue Var 0x55f4c8c48170 't' 'Timestamp'
|-CXXMethodDecl 0x55f4c8c39750 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c39640 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c396b8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c51e88 <col:72, line:343:5>
|   `-ReturnStmt 0x55f4c8c51e78 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55f4c8c51e60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c51e30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c51e18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8c51dd8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f4c8c51dc0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f4c8c51d08 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c39640 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f4c8c51d80 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f4c8c51d68 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f4c8c51d28 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f4c8c3e6e8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f4c8c51da8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f4c8c51d48 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c396b8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c398a0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f4c8c39810 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f4c8c522d0 <col:56, line:354:5>
|   |-DeclStmt 0x55f4c8c52078 <line:346:9, col:51>
|   | `-VarDecl 0x55f4c8c51eb0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f4c8c52060 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f4c8c52030 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f4c8c52018 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f4c8c52000 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f4c8c51fd0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f4c8c51fb8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f4c8c51fa0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f4c8c51f70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f4c8c52230 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f4c8c520e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f4c8c3ee48
|   | | `-MemberExpr 0x55f4c8c520b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f4c8c3fdf8
|   | |   `-DeclRefExpr 0x55f4c8c52090 <col:9> 'Timestamp' lvalue Var 0x55f4c8c51eb0 't' 'Timestamp'
|   | `-BinaryOperator 0x55f4c8c52210 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f4c8c521e0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f4c8c52110 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f4c8c39810 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f4c8c521f8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f4c8c521c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f4c8c521a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f4c8c52170 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f4c8c52130 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f4c8c52188 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f4c8c52150 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34520 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f4c8c522b8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55f4c8c52288 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f4c8c52270 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f4c8c52250 <col:16> 'Timestamp' lvalue Var 0x55f4c8c51eb0 't' 'Timestamp'
|-CXXMethodDecl 0x55f4c8c39a68 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c39958 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c399d0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c52488 <col:72, line:360:5>
|   `-ReturnStmt 0x55f4c8c52478 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55f4c8c52460 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c52430 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c52418 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8c523d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f4c8c523c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f4c8c52308 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c39958 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f4c8c52380 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f4c8c52368 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f4c8c52328 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f4c8c3e830 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f4c8c523a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f4c8c52348 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c399d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c39bb8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f4c8c39b28 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f4c8c528f8 <col:56, line:371:5>
|   |-DeclStmt 0x55f4c8c52678 <line:363:9, col:51>
|   | `-VarDecl 0x55f4c8c524b0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f4c8c52660 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f4c8c52630 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f4c8c52618 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f4c8c52600 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f4c8c525d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f4c8c525b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f4c8c525a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f4c8c52570 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f4c8c52858 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f4c8c526e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f4c8c3ee48
|   | | `-MemberExpr 0x55f4c8c526b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f4c8c3fdf8
|   | |   `-DeclRefExpr 0x55f4c8c52690 <col:9> 'Timestamp' lvalue Var 0x55f4c8c524b0 't' 'Timestamp'
|   | `-CallExpr 0x55f4c8c527f8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55f4c8c527e0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55f4c8c52710 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f4c8c40128 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55f4c8c52828 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f4c8c52730 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f4c8c39b28 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f4c8c52840 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55f4c8c527c0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55f4c8c52790 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55f4c8c52750 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34370 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55f4c8c527a8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55f4c8c52770 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f4c8c528e0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55f4c8c528b0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f4c8c52898 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f4c8c52878 <col:16> 'Timestamp' lvalue Var 0x55f4c8c524b0 't' 'Timestamp'
|-CXXMethodDecl 0x55f4c8c39ca8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55f4c8c52a38 <col:39, line:377:5>
|   `-ReturnStmt 0x55f4c8c52a28 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55f4c8c52a10 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8c529e0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8c529c8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8c52988 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55f4c8c52930 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55f4c8c52970 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f4c8c52950 <col:29> 'int' 1
|-CXXMethodDecl 0x55f4c8c39d68 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55f4c8c52b18 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55f4c8c52ad0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55f4c8c52a60 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c52a50 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f4c8c52a90 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f4c8c52b00 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f4c8c52ab0 <col:19> 'int' 0
|-CXXMethodDecl 0x55f4c8c3ced8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c3cd90 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c3ce08 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f4c8c45260 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8c45240 <col:60> 'int' 0
| `-CompoundStmt 0x55f4c8c52d10 <col:63, line:395:5>
|   `-BinaryOperator 0x55f4c8c52cf0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55f4c8c52b70 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55f4c8c3ee48
|     | `-MemberExpr 0x55f4c8c52b40 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
|     |   `-CXXThisExpr 0x55f4c8c52b30 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55f4c8c52cd0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55f4c8c52c60 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55f4c8c52c00 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55f4c8c52be8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55f4c8c52bd0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55f4c8c52ba0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c3cd90 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55f4c8c52c48 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55f4c8c52c28 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55f4c8c52cb8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55f4c8c52ca0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55f4c8c52c80 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3ce08 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c3d0a8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c3cf98 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c3d010 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c52e68 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55f4c8c52e20 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55f4c8c52d38 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c52d28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f4c8c52e50 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8c52d68 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c3cf98 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f4c8c52de0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f4c8c52dc8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8c52d88 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f4c8c3e6e8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f4c8c52e08 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f4c8c52da8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3d010 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c3d278 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c3d168 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c3d1e0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c52fc0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55f4c8c52f78 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55f4c8c52e90 <col:9> '<bound member function type>' ->assign 0x55f4c8c3ced8
|     | `-CXXThisExpr 0x55f4c8c52e80 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f4c8c52fa8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f4c8c52ec0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f4c8c3d168 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f4c8c52f38 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f4c8c52f20 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8c52ee0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f4c8c3e830 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f4c8c52f60 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f4c8c52f00 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3d1e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c3d448 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c3d338 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c3d3b0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f4c8c45298 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8c45278 <col:57> 'int' 0
| `-DeprecatedAttr 0x55f4c8c3d4f8 <col:75> "" ""
|-CXXMethodDecl 0x55f4c8c3d688 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c3d578 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c3d5f0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8c3d738 <col:74> "" ""
|-CXXMethodDecl 0x55f4c8c3d8c8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c3d7b8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f4c8c3d830 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8c3d978 <col:74> "" ""
|-CXXMethodDecl 0x55f4c8c3da08 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55f4c8c3daa8 <col:42> "" ""
|-CXXMethodDecl 0x55f4c8c3dc50 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55f4c8c3db30 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f4c8c3dbb0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55f4c8c3dd20 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f4c8c3dde0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55f4c8c3de80 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c3ded8 <col:30>
|-CXXMethodDecl 0x55f4c8c3df20 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f4c8c3dfe0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55f4c8c3e0a0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f4c8c3e160 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55f4c8c3e220 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f4c8c3e2e0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55f4c8c3e3a0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f4c8c3e460 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55f4c8c3e5a0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3e510 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53108 <col:58, line:512:5>
|   `-ReturnStmt 0x55f4c8c530f8 <line:511:9, col:53>
|     `-BinaryOperator 0x55f4c8c530d8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f4c8c530a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c52fd8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3e510 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f4c8c530c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f4c8c53088 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f4c8c53068 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c53038 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c52ff8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c53050 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c53018 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34640 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c3e6e8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3e658 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53250 <col:58, line:516:5>
|   `-ReturnStmt 0x55f4c8c53240 <line:515:9, col:53>
|     `-BinaryOperator 0x55f4c8c53220 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f4c8c531f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c53120 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3e658 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f4c8c53208 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f4c8c531d0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f4c8c531b0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c53180 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c53140 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c53198 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c53160 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34520 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c3e830 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3e7a0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53398 <col:58, line:520:5>
|   `-ReturnStmt 0x55f4c8c53388 <line:519:9, col:53>
|     `-BinaryOperator 0x55f4c8c53368 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f4c8c53338 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c53268 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3e7a0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f4c8c53350 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f4c8c53318 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f4c8c532f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c532c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c53288 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34370 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c532e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c532a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c3e978 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3e8e8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c534e0 <col:60, line:524:5>
|   `-ReturnStmt 0x55f4c8c534d0 <line:523:9, col:55>
|     `-BinaryOperator 0x55f4c8c534b0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f4c8c53480 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c533b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3e8e8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f4c8c53498 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f4c8c53460 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f4c8c53440 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c53410 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c533d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c53428 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c533f0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34640 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c3eac0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3ea30 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53628 <col:60, line:528:5>
|   `-ReturnStmt 0x55f4c8c53618 <line:527:9, col:55>
|     `-BinaryOperator 0x55f4c8c535f8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f4c8c535c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c534f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3ea30 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f4c8c535e0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f4c8c535a8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f4c8c53588 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c53558 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c53518 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c53570 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c53538 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34520 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f4c8c3ec08 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3eb78 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53770 <col:60, line:532:5>
|   `-ReturnStmt 0x55f4c8c53760 <line:531:9, col:55>
|     `-BinaryOperator 0x55f4c8c53740 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f4c8c53710 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c53640 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c3eb78 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f4c8c53728 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f4c8c536f0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f4c8c536d0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f4c8c536a0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f4c8c53660 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c34370 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f4c8c536b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f4c8c53680 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f4c8c346d0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55f4c8c3ecb0 prev 0x55f4c8c36140 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f4c8c3eda8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55f4c8c3ee48 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55f4c8c452e8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f4c8c456c8 <col:11>
| |-CXXConstructorDecl 0x55f4c8c453c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f4c8c454a8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f4c8c45e10 <col:11>
| |-CXXConstructorDecl 0x55f4c8c45548 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f4c8c45658 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55f4c8c47668 <col:11>
| |-CXXDestructorDecl 0x55f4c8c46978 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f4c8946ab8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f4c8946bc8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f4c8947490 <col:11>
| |   `-ReturnStmt 0x55f4c8947480 <col:11>
| |     `-UnaryOperator 0x55f4c8947468 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f4c8947458 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55f4c8946c38 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f4c8946d48 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55f4c8cd1730 <col:11>
|     `-ReturnStmt 0x55f4c8cd1720 <col:11>
|       `-UnaryOperator 0x55f4c8cd1708 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f4c8cd16f8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55f4c8c3eeb0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55f4c8c3efb0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f4c8c3f1b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c3ef90 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8c3ef70 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f4c8c3f040 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f4c8c3f1c8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c3f020 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55f4c8c3f000 <col:23> 'int' 1
| |-EnumConstantDecl 0x55f4c8c3f0d0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f4c8c3f1e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c3f0b0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55f4c8c3f090 <col:23> 'int' 2
| `-EnumConstantDecl 0x55f4c8c3f160 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55f4c8c3f1f8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c3f140 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55f4c8c3f120 <col:27> 'int' 3
|-CXXMethodDecl 0x55f4c8c3f238 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55f4c8c3f300 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55f4c8c3f508 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55f4c8c3f3b0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55f4c8c3f430 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55f4c8c452b0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55f4c8c3f718 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55f4c8c3f5c8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55f4c8c3f640 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8c3f7e8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55f4c8c3f8a8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55f4c8c3fa18 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55f4c8c3f958 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8c3fae0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f4c8c3fba0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55f4c8c3fc60 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f4c8c3fd20 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55f4c8c3fdc0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55f4c8c3fdf8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55f4c8c3fe68 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55f4c8c53788 <col:27, line:684:5>
|-CXXMethodDecl 0x55f4c8c3ff28 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55f4c8c53798 <col:27, line:696:5>
|-CXXMethodDecl 0x55f4c8c40128 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c3ffd8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f4c8c40050 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53920 <col:66, line:700:5>
|   `-ReturnStmt 0x55f4c8c53910 <line:699:9, col:31>
|     `-CallExpr 0x55f4c8c538b0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55f4c8c53898 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8c53848 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55f4c8ac1068 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55f4c8c538e0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55f4c8c53808 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f4c8c3ffd8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55f4c8c538f8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f4c8c53828 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c40050 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c40498 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c401e8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55f4c8c40260 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55f4c8c402d8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f4c8c40350 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8c53c70 <col:64, line:707:5>
|   |-DeclStmt 0x55f4c8c539b0 <line:704:9, col:24>
|   | `-VarDecl 0x55f4c8c53948 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55f4c8c53bc0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55f4c8c539c8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f4c8c40260 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55f4c8c53ba8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55f4c8c53b40 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55f4c8c53b28 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c53aa8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55f4c8ac66b8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55f4c8c53b78 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f4c8c53a48 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f4c8c402d8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55f4c8c53b90 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f4c8c53a68 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8c40350 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55f4c8c53a88 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55f4c8c53948 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55f4c8c53c50 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55f4c8c53be0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f4c8c401e8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55f4c8c53c38 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f4c8c53c20 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55f4c8c53c00 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55f4c8c53948 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55f4c8c40738 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55f4c8c40568 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55f4c8c405e0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55f4c8c40658 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55f4c8c409d8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55f4c8c40800 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55f4c8c40878 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55f4c8c408f0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8c40b68 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55f4c8c40aa0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55f4c8c445b0 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55f4c8c40c20 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55f4c8c40c98 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55f4c8c44878 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55f4c8c447b8 parent 0x55f4c873a488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f4c8c44670 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f4c8c446e8 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f4c8c44a98 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55f4c8c449d8 parent 0x55f4c873a488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f4c8c448c8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f4c8c44940 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55f4c8c44c60 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55f4c8c44ba8 parent 0x55f4c873a488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55f4c8c44ae8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55f4c8c44ee8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55f4c8c44e28 parent 0x55f4c873a488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f4c8c44cd8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f4c8c44d50 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f4c8c45108 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55f4c8c45048 parent 0x55f4c873a488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f4c8c44f38 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f4c8c44fb0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55f4c8c46820 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8c46908 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c47378 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55f4c8c47330 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f4c8c3fdf8
| |     `-DeclRefExpr 0x55f4c8c47310 <col:7> 'const Timestamp' lvalue ParmVar 0x55f4c8c46908 '' 'const Timestamp &'
| `-CompoundStmt 0x55f4c8c473d8 <col:7>
|-CXXConstructorDecl 0x55f4c8c46a88 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8c46b98 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55f4c8c3fdf8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f4c8c47678 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55f4c8c47620 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f4c8c3fdf8
| |     `-CXXStaticCastExpr 0x55f4c8c475f0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55f4c8c475c0 <col:7> 'Timestamp' lvalue ParmVar 0x55f4c8c46b98 '' 'Timestamp &&'
| `-CompoundStmt 0x55f4c8c476d8 <col:7>
|-CXXDestructorDecl 0x55f4c8c46c48 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f4c8946910 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8946a18 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55f4c8947508 <col:7>
|   |-CXXMemberCallExpr 0x55f4c89474a8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55f4c89473e8 <col:7> '<bound member function type>' .operator= 0x55f4c8946ab8
|   | | `-MemberExpr 0x55f4c89472f8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
|   | |   `-CXXThisExpr 0x55f4c89472e8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55f4c89473b8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f4c8c3fdf8
|   |   `-DeclRefExpr 0x55f4c8947398 <col:7> 'const Timestamp' lvalue ParmVar 0x55f4c8946a18 '' 'const Timestamp &'
|   `-ReturnStmt 0x55f4c89474f8 <col:7>
|     `-UnaryOperator 0x55f4c89474e0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f4c89474d0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55f4c8946db8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f4c8946ec8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55f4c8cd17a8 <col:7>
    |-CXXMemberCallExpr 0x55f4c8cd1748 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55f4c8cd16b0 <col:7> '<bound member function type>' .operator= 0x55f4c8946c38
    | | `-MemberExpr 0x55f4c8cd1580 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f4c8c3fdf8
    | |   `-CXXThisExpr 0x55f4c8cd1570 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55f4c8cd1680 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f4c8c3fdf8
    |   `-CXXStaticCastExpr 0x55f4c8cd1650 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55f4c8cd1620 <col:7> 'Timestamp' lvalue ParmVar 0x55f4c8946ec8 '' 'Timestamp &&'
    `-ReturnStmt 0x55f4c8cd1798 <col:7>
      `-UnaryOperator 0x55f4c8cd1780 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f4c8cd1770 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8cce788 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f4c8cce8b8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55f4c8ccf3a8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8c28c58 prev 0x55f4c8ca8e20 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8c28d50 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55f4c8c28de0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55f4c8c28e40 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55f4c8c28ee8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55f4c8c29008 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55f4c8c291a8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55f4c8c290e8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55f4c8c293f8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55f4c8c29268 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55f4c8c292e8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55f4c8c29588 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55f4c8c294c0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55f4c8c29708 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55f4c8c29648 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55f4c8c298b8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55f4c8c297f8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55f4c8c299b0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55f4c8ccf580 <col:21, line:58:5>
|   `-IfStmt 0x55f4c8ccf568 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55f4c8ccf4d0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55f4c8ccf4a0 <col:6> '<bound member function type>' ->scheduled 0x55f4c8c2a208
|     |   `-ImplicitCastExpr 0x55f4c8ccf4f0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55f4c8ccf490 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55f4c8ccf548 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55f4c8ccf518 <col:6> '<bound member function type>' ->unschedule 0x55f4c8ccdc30
|         `-CXXThisExpr 0x55f4c8ccf508 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c29ab0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55f4c8ccf720 <col:26, line:65:5>
|   |-BinaryOperator 0x55f4c8ccf640 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f4c8ccf5d8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f4c8cce8b8
|   | | `-MemberExpr 0x55f4c8ccf5a8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f4c8cce978
|   | |   `-CXXThisExpr 0x55f4c8ccf598 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8ccf628 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f4c8ccf608 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f4c8ccedd8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f4c8ccf700 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55f4c8ccf670 <col:2> 'void *' lvalue ->_thunk 0x55f4c8cce9f8
|     | `-CXXThisExpr 0x55f4c8ccf660 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55f4c8ccf6d8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55f4c8ccf6a0 <col:20> 'int' 1
|-CXXMethodDecl 0x55f4c8c29bf0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55f4c8c29b60 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55f4c8ccf880 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55f4c8ccf770 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f4c8ccf740 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55f4c8c29b60 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55f4c8ccf860 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55f4c8ccf830 <col:2> '<bound member function type>' ->assign 0x55f4c8c29ab0
|       `-CXXThisExpr 0x55f4c8ccf820 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c29dc0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55f4c8c29ca8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55f4c8c29d28 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55f4c8ccfa00 <col:58, line:79:5>
|   |-BinaryOperator 0x55f4c8ccf948 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f4c8ccf8e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f4c8cce8b8
|   | | `-MemberExpr 0x55f4c8ccf8b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f4c8cce978
|   | |   `-CXXThisExpr 0x55f4c8ccf8a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8ccf930 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f4c8ccf910 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55f4c8c29ca8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55f4c8ccf9e0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f4c8ccf978 <col:2> 'void *' lvalue ->_thunk 0x55f4c8cce9f8
|     | `-CXXThisExpr 0x55f4c8ccf968 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f4c8ccf9c8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8ccf9a8 <col:11> 'void *' lvalue ParmVar 0x55f4c8c29d28 'user_data' 'void *'
|-CXXMethodDecl 0x55f4c8c29f10 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55f4c8c29e80 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55f4c8ccfb98 <col:35, line:87:5>
|   |-BinaryOperator 0x55f4c8ccfac8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f4c8ccfa60 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f4c8cce8b8
|   | | `-MemberExpr 0x55f4c8ccfa30 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f4c8cce978
|   | |   `-CXXThisExpr 0x55f4c8ccfa20 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8ccfab0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f4c8ccfa90 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f4c8ccefb0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f4c8ccfb78 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f4c8ccfaf8 <col:2> 'void *' lvalue ->_thunk 0x55f4c8cce9f8
|     | `-CXXThisExpr 0x55f4c8ccfae8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f4c8ccfb60 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f4c8ccfb48 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55f4c8ccfb28 <col:11> 'Element *' lvalue ParmVar 0x55f4c8c29e80 'element' 'Element *'
|-CXXMethodDecl 0x55f4c8c2a058 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55f4c8c29fc8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55f4c8ccfd30 <col:29, line:94:5>
|   |-BinaryOperator 0x55f4c8ccfc60 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f4c8ccfbf8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f4c8cce8b8
|   | | `-MemberExpr 0x55f4c8ccfbc8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f4c8cce978
|   | |   `-CXXThisExpr 0x55f4c8ccfbb8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8ccfc48 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f4c8ccfc28 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f4c8ccf188 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f4c8ccfd10 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f4c8ccfc90 <col:2> 'void *' lvalue ->_thunk 0x55f4c8cce9f8
|     | `-CXXThisExpr 0x55f4c8ccfc80 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f4c8ccfcf8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f4c8ccfce0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55f4c8ccfcc0 <col:11> 'Task *' lvalue ParmVar 0x55f4c8c29fc8 'task' 'Task *'
|-CXXMethodDecl 0x55f4c8c2a148 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f4c8ccfe10 <col:37, line:100:5>
|   `-ReturnStmt 0x55f4c8ccfe00 <line:99:2, col:19>
|     `-BinaryOperator 0x55f4c8ccfde0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55f4c8ccfdb0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55f4c8ccfd60 <col:9> 'Element *const' lvalue ->_owner 0x55f4c8ccea58
|       |   `-CXXThisExpr 0x55f4c8ccfd50 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55f4c8ccfdc8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55f4c8ccfd90 <col:19> 'int' 0
|-CXXMethodDecl 0x55f4c8c2a208 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55f4c8ccfed0 <col:35, line:105:5>
|   `-ReturnStmt 0x55f4c8ccfec0 <line:104:2, col:23>
|     `-BinaryOperator 0x55f4c8ccfea0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55f4c8ccfe88 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55f4c8ccfe38 <col:9> 'const int' lvalue ->_schedpos1 0x55f4c8cce6d8
|       |   `-CXXThisExpr 0x55f4c8ccfe28 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55f4c8ccfe68 <col:23> 'int' 0
|-CXXMethodDecl 0x55f4c8c2a2c8 <line:116:5, line:118:5> line:116:29 expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55f4c8ccff38 <col:51, line:118:5>
|   `-ReturnStmt 0x55f4c8ccff28 <line:117:2, col:9>
|     `-MemberExpr 0x55f4c8ccfef8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|       `-CXXThisExpr 0x55f4c8ccfee8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c2a388 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55f4c8cd0490 <col:37, line:136:5>
|   `-IfStmt 0x55f4c8cd0468 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55f4c8ccfff8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55f4c8ccffe0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55f4c8ccffc0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55f4c8ccff90 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55f4c8c37798
|     |       `-MemberExpr 0x55f4c8ccff60 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|     |         `-CXXThisExpr 0x55f4c8ccff50 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55f4c8cd03d8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55f4c8cd03c0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55f4c8cd0390 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55f4c8cd0378 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55f4c8cd0340 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55f4c8cd0328 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55f4c8cd0308 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f4c8c62ea0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55f4c8cd02a8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55f4c8cd0290 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55f4c8cd01b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55f4c8cd01a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55f4c8cd0180 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f4c8c62b60 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55f4c8cd0120 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55f4c8cd0020 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|     |         |     |   `-CXXThisExpr 0x55f4c8cd0010 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55f4c8cd0168 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55f4c8cd0150 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55f4c8cd0100 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55f4c8cd00e8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55f4c8cd0088 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55f4c8aa7f30 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55f4c8cd02f0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55f4c8cd02d8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55f4c8cd0270 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55f4c8cd0258 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55f4c8cd0228 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55f4c8aa8c00 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55f4c8cd0458 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55f4c8cd0428 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55f4c8cd03f8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|           `-CXXThisExpr 0x55f4c8cd03e8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c2a448 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f4c8cd0578 <col:35, line:141:5>
|   `-ReturnStmt 0x55f4c8cd0568 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55f4c8cd0530 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55f4c8cd0500 <col:9, col:17> '<bound member function type>' ->router 0x55f4c8cba5c0
|         `-ImplicitCastExpr 0x55f4c8cd0550 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f4c8cd04e8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f4c8cd04b8 <col:9> 'Element *const' lvalue ->_owner 0x55f4c8ccea58
|               `-CXXThisExpr 0x55f4c8cd04a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c2a508 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f4c8cd05f8 <col:37, line:146:5>
|   `-ReturnStmt 0x55f4c8cd05e8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8cd05d0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f4c8cd05a0 <col:9> 'Element *const' lvalue ->_owner 0x55f4c8ccea58
|         `-CXXThisExpr 0x55f4c8cd0590 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c2a5c8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55f4c8cd0678 <col:41, line:151:5>
|   `-ReturnStmt 0x55f4c8cd0668 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8cd0650 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55f4c8cd0620 <col:9> 'RouterThread *const' lvalue ->_thread 0x55f4c8cceab8
|         `-CXXThisExpr 0x55f4c8cd0610 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f4c8c2a690 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55f4c8cccc50 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f4c8c2a740 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f4c8c2a7b8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8ccf398 <col:50> 'bool' false
|-CXXMethodDecl 0x55f4c8cccdd8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55f4c8cccd10 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55f4c8cccf20 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f4c8ccce90 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8ccd068 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f4c8cccfd8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8ccd1b0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f4c8ccd120 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8ccd2f8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f4c8ccd268 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8ccd3c0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55f4c8cd07e0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55f4c8cd07c8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55f4c8cd0770 <col:2, col:47> 'void'
|       |-MemberExpr 0x55f4c8cd06a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f4c8cccf20
|       | `-CXXThisExpr 0x55f4c8cd0690 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd07b0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f4c8cd0798 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f4c8cd0750 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55f4c8cd0738 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55f4c8cd0708 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55f4c8aa8c00 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55f4c8ccd500 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f4c8ccd470 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8ccd648 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8ccd5b8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8cd0968 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55f4c8cd0950 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55f4c8cd08f8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55f4c8cd0808 <col:2> '<bound member function type>' ->schedule_after 0x55f4c8ccd500
|       | `-CXXThisExpr 0x55f4c8cd07f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd0938 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f4c8cd0920 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f4c8cd08b8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55f4c8cd0888 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f4c8cd0848 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8ccd5b8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55f4c8cd08a0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f4c8cd0868 <col:38> 'int' 0
|-CXXMethodDecl 0x55f4c8ccd790 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8ccd700 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8cd0bd8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55f4c8cd0bc0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55f4c8cd0b68 <col:2, col:49> 'void'
|       |-MemberExpr 0x55f4c8cd0990 <col:2> '<bound member function type>' ->schedule_after 0x55f4c8ccd500
|       | `-CXXThisExpr 0x55f4c8cd0980 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd0ba8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f4c8cd0b90 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f4c8cd0b10 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55f4c8cd0af8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f4c8cd0a68 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f4c8c39588 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f4c8cd0b50 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55f4c8cd0b38 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f4c8cd0a48 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8ccd700 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8ccd8d8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55f4c8ccd848 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55f4c8cd0db8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55f4c8cd0da0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55f4c8cd0d48 <col:2, col:38> 'void'
|       |-MemberExpr 0x55f4c8cd0c00 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f4c8cccf20
|       | `-CXXThisExpr 0x55f4c8cd0bf0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd0d88 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f4c8cd0d70 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f4c8cd0d10 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f4c8cd0cf8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f4c8cd0cd8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f4c8c62b60 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f4c8cd0ca8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f4c8cd0c90 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f4c8cd0c40 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|             |     `-CXXThisExpr 0x55f4c8cd0c30 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55f4c8cd0c70 <col:33> 'const Timestamp' lvalue ParmVar 0x55f4c8ccd848 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8ccda20 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8ccd990 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8cd1090 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55f4c8cd1078 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55f4c8cd1020 <col:2, col:79> 'void'
|       |-MemberExpr 0x55f4c8cd0de0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f4c8cccf20
|       | `-CXXThisExpr 0x55f4c8cd0dd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd1060 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f4c8cd1048 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f4c8cd0fe0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55f4c8cd0f18 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55f4c8cd0f00 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55f4c8cd0e90 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55f4c8cd0e60 <col:31, col:41> '<bound member function type>' .sec 0x55f4c8aaa6f8
|             | |     `-ImplicitCastExpr 0x55f4c8cd0eb0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55f4c8cd0e30 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|             | |         `-CXXThisExpr 0x55f4c8cd0e20 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55f4c8cd0ee8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55f4c8cd0ec8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8ccd990 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55f4c8cd0fa8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55f4c8cd0f78 <col:60, col:70> '<bound member function type>' .subsec 0x55f4c8aaadf0
|                 `-ImplicitCastExpr 0x55f4c8cd0fc8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55f4c8cd0f48 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|                     `-CXXThisExpr 0x55f4c8cd0f38 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55f4c8ccdb68 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8ccdad8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f4c8cd13c8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55f4c8cd13b0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55f4c8cd1358 <col:2, col:65> 'void'
|       |-MemberExpr 0x55f4c8cd10b8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f4c8cccf20
|       | `-CXXThisExpr 0x55f4c8cd10a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd1398 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f4c8cd1380 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f4c8cd1320 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55f4c8cd1308 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f4c8cd12e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f4c8c62b60 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f4c8cd1288 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f4c8cd1270 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f4c8cd10f8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|             |     `-CXXThisExpr 0x55f4c8cd10e8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55f4c8cd12d0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55f4c8cd12b8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55f4c8cd1218 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55f4c8cd1200 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55f4c8cd11d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f4c8c39588 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55f4c8cd1258 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55f4c8cd1240 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55f4c8cd11b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f4c8ccdad8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8ccdc30 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55f4c8ccdcf0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55f4c8cd1890 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55f4c8cd1420 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55f4c8cd13f0 <col:2> '<bound member function type>' ->unschedule 0x55f4c8ccdc30
|   |   `-CXXThisExpr 0x55f4c8cd13e0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55f4c8cd1878 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55f4c8cd1840 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55f4c8cd1828 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f4c8cd14d8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f4c8946db8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55f4c8cd1450 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55f4c8cce738
|       | `-CXXThisExpr 0x55f4c8cd1440 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f4c8cd14c0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55f4c8cd1490 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f4c8ccddb0 <line:304:5, line:310:5> line:304:29 adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55f4c8cd1be8 <col:42, line:310:5>
|   |-IfStmt 0x55f4c8cd1a30 <line:306:2, line:307:23>
|   | |-CallExpr 0x55f4c8cd1960 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55f4c8cd1948 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55f4c8cd18e8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55f4c8c54670 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55f4c8cd1a20 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55f4c8cd1a08 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f4c8cd19d8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f4c8cd19c0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55f4c8cd1990 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55f4c8cd1bd8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55f4c8cd1bc0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55f4c8cd1b90 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8cd1b78 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55f4c8cd1b38 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f4c8cd1b20 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f4c8cd1af0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f4c8c398a0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f4c8cd1b60 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55f4c8cd1ad0 <col:30> 'int' 500
|-CXXMethodDecl 0x55f4c8ccdef0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8ccde60 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8ccdf98 <col:69> "" ""
|-CXXMethodDecl 0x55f4c8cce0a8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8cce018 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8cce150 <col:70> "" ""
|-CXXMethodDecl 0x55f4c8cce260 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8cce1d0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8cce308 <col:71> "" ""
|-CXXMethodDecl 0x55f4c8cce418 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f4c8cce388 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8cce4c0 <col:72> "" ""
|-EnumDecl 0x55f4c8cce530 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55f4c8cce630 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55f4c8cce680 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8cce610 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55f4c8cce5f0 <col:25> 'int' 1
|-AccessSpecDecl 0x55f4c8cce698 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55f4c8cce6d8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55f4c8cce738 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55f4c8cce788 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f4c8cce8b8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55f4c8ccf3a8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55f4c8cce978 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55f4c8cce9f8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f4c8ccea58 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55f4c8cceab8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55f4c8ccec08 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55f4c8cceb18 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55f4c8ccedd8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f4c8ccecc0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55f4c8cced40 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55f4c8ccefb0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f4c8ccee98 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55f4c8ccef18 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55f4c8ccf188 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f4c8ccf070 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55f4c8ccf0f0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55f4c8ccf358 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d83ae8 prev 0x55f4c8d545a8 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55f4c8d83c20 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55f4c8d83cb0 <col:41, col:47> col:41 public
|-TypedefDecl 0x55f4c8d83e10 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f4c8d83d70 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55f4c8d53120 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f4c8d53020 'HashContainer'
|-EnumDecl 0x55f4c8d83e68 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55f4c8d83f88 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55f4c8d83f68 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55f4c8d83f50 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d83f30 <col:13> 'int' 1
| `-EnumConstantDecl 0x55f4c8d84030 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55f4c8d84010 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55f4c8d83ff8 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55f4c8d83fd8 <col:29> 'int' 2
|-CXXConstructorDecl 0x55f4c8d840b8 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55f4c8d841a8 <line:89:5, col:21> col:5 ~IPRewriterBase 'void ()' noexcept-unevaluated 0x55f4c8d841a8
| `-Overrides: [ 0x55f4c8ca94d8 Element::~Element 'void () noexcept' ]
|-EnumDecl 0x55f4c8d84290 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55f4c8d84390 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8d84640 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d84370 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55f4c8d84350 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55f4c8cabb20 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55f4c8d84420 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8d84658 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d84400 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55f4c8d843e0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55f4c8cabc40 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55f4c8d84508 <line:94:2, col:54> col:2 referenced CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f4c8d84670 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d844e8 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55f4c8d844c8 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55f4c8d844b0 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55f4c8d84470 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55f4c8d84420 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55f4c8d84490 <col:54> 'int' 1
| `-EnumConstantDecl 0x55f4c8d845f0 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f4c8d84688 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8d845d0 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55f4c8d845b0 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55f4c8d84598 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55f4c8d84558 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55f4c8d84420 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55f4c8d84578 <col:52> 'int' 1
|-CXXMethodDecl 0x55f4c8d846f0 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55f4c8caaa00 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55f4c8d9cef0 <col:36, col:54>
|   `-ReturnStmt 0x55f4c8d9cee0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f4c8d9cec8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f4c8d9cea8 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55f4c8d847b8 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55f4c8caae08 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55f4c8d9cf50 <col:36, col:51>
|   `-ReturnStmt 0x55f4c8d9cf40 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f4c8d9cf28 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55f4c8d9cf08 <col:45> 'const char []' lvalue Var 0x55f4c8caaf50 'PUSH' 'const char []'
|-CXXMethodDecl 0x55f4c8d84880 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55f4c8cabdc0 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55f4c8d9cfb0 <col:33, col:68>
|   `-ReturnStmt 0x55f4c8d9cfa0 <col:35, col:42>
|     `-ImplicitCastExpr 0x55f4c8d9cf88 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55f4c8d9cf68 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55f4c8d84420 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55f4c8d84b50 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f4c8cac200 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f4c8d84a00 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f4c8d84a78 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d84ca8 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55f4c8cac450 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55f4c8d84c10 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d84df0 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55f4c8d84d60 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55f4c8d84f38 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55f4c8cacc68 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55f4c8d84ea8 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55f4c8d85028 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55f4c8d9d048 <col:45, line:109:5>
|   `-ReturnStmt 0x55f4c8d9d038 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8d9d020 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55f4c8d9d008 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55f4c8d9cfd8 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55f4c8d9a210
|           `-CXXThisExpr 0x55f4c8d9cfc8 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55f4c8d851a8 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55f4c8d850e0 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55f4c8d9d220 <col:52, line:112:5>
|   `-ReturnStmt 0x55f4c8d9d210 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55f4c8d9d1f8 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55f4c8d9d1c8 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55f4c8d6f3d0
|         `-CXXOperatorCallExpr 0x55f4c8d9d190 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55f4c8d9d178 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55f4c8d9d100 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55f4c8d97b18 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55f4c8d9d070 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55f4c8d9a1b0
|           | `-CXXThisExpr 0x55f4c8d9d060 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55f4c8d9d0e8 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55f4c8d9d0a0 <col:22> 'int' lvalue ParmVar 0x55f4c8d850e0 'input' 'int'
|-CXXMethodDecl 0x55f4c8d854e0 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55f4c8d85368 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55f4c8d9d590 <col:64, line:115:5>
|   `-ReturnStmt 0x55f4c8d9d580 <line:114:2, col:84>
|     `-ConditionalOperator 0x55f4c8d9d550 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55f4c8d9d520 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55f4c8d9d448 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55f4c8d9d430 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55f4c8d9d238 <col:9> '<builtin fn type>' Function 0x55f4c8a6a178 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55f4c8d9d478 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55f4c8d9d3f8 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55f4c8d9d3e0 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55f4c8d9d3c0 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55f4c8d9d3a0 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55f4c8d9d370 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55f4c8d9d258 <col:29> 'int' lvalue ParmVar 0x55f4c8d85368 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55f4c8d9d388 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55f4c8d9d2b0 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55f4c8d6fa10 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55f4c8d9d490 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55f4c8d9d410 <col:71> 'int' 1
|       |-UnaryOperator 0x55f4c8d9d4e8 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55f4c8d9d4b8 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55f4c8d8d9c8
|       |   `-CXXThisExpr 0x55f4c8d9d4a8 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55f4c8d9d538 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55f4c8d9d500 <col:84> 'int' 0
|-EnumDecl 0x55f4c8d85588 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55f4c8d856a8 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55f4c8d85688 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55f4c8d85670 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d85650 <col:21> 'int' 1
| `-EnumConstantDecl 0x55f4c8d85750 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55f4c8d85730 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55f4c8d85718 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55f4c8d856f8 <col:43> 'int' 2
|-CXXMethodDecl 0x55f4c8d85998 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55f4c8d857b8 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55f4c8d85830 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55f4c8d858b0 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55f4c8d85cc8 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55f4c8d85a68 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55f4c8d85ae0 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f4c8d85b58 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55f4c8d85bd8 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55f4c8d85e28 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55f4c8d85d98 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55f4c8d85fd8 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55f4c8d85ee0 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55f4c8d9d7e0 <col:76, line:128:5>
|   `-ReturnStmt 0x55f4c8d9d7d0 <line:127:2, col:52>
|     `-BinaryOperator 0x55f4c8d9d7b0 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55f4c8d9d6e0 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55f4c8d9d610 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55f4c8d9d5e0 <col:9, col:15> '<bound member function type>' ->expiry 0x55f4c8d57ae0
|       | |   `-ImplicitCastExpr 0x55f4c8d9d5c8 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55f4c8d9d5a8 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55f4c8d85ee0 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55f4c8d9d6c8 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55f4c8d9d6a8 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55f4c8d9d690 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55f4c8d9d640 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55f4c8d9a2f8
|       |     |   `-CXXThisExpr 0x55f4c8d9d630 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55f4c8d9d670 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55f4c8d9d798 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55f4c8d9d778 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55f4c8d9d760 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55f4c8d9d710 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55f4c8d9a2f8
|           |   `-CXXThisExpr 0x55f4c8d9d700 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55f4c8d9d740 <col:51> 'int' 1
|-CXXMethodDecl 0x55f4c8d861b8 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55f4c8cb5fb0 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55f4c8d86098 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55f4c8d86118 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55f4c8d86268 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55f4c8d8d9c8 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55f4c8d9a1b0 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55f4c8d9a210 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55f4c8d9a2f8 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55f4c8d9a358 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8d9a3b8 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55f4c8d9a408 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55f4c8d9a510 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55f4c8d9a6c0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d9a4f0 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55f4c8d9a4d0 <col:20> 'int' 300
| |-EnumConstantDecl 0x55f4c8d9a5a0 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55f4c8d9a6d8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d9a580 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55f4c8d9a560 <col:22> 'int' 5
| `-EnumConstantDecl 0x55f4c8d9a670 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55f4c8d9a6f0 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8d9a650 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55f4c8d9a630 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55f4c8d9a5f0 <col:24> 'int' 60
|         `-IntegerLiteral 0x55f4c8d9a610 <col:29> 'int' 15
|-CXXMethodDecl 0x55f4c8d9a858 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55f4c8d9a768 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55f4c8d9d9e8 <col:66, line:151:5>
|   `-ReturnStmt 0x55f4c8d9d9d8 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55f4c8d9d9c0 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55f4c8d9d990 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f4c8d9d978 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55f4c8d9d960 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55f4c8d9d850 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55f4c8d9d838 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55f4c8d9d7f8 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f4c8d9a768 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55f4c8d9d818 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55f4c8d9d8c8 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55f4c8d9d8b0 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f4c8d9d870 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f4c8d9a768 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55f4c8d9d890 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55f4c8d9d940 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55f4c8d9d928 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55f4c8d9d8e8 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f4c8d9a768 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55f4c8d9d908 <col:46> 'int' 0
|-CXXMethodDecl 0x55f4c8d9ac18 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55f4c8d9a910 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55f4c8d9a990 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55f4c8d9aa38 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55f4c8d9aad8 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55f4c8d9ce58 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55f4c8d9ce38 <col:36> 'int' 0
|-CXXMethodDecl 0x55f4c8d9aef8 <line:155:5, line:156:39> line:155:17 unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55f4c8d9ace8 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55f4c8d9ad60 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55f4c8d9add8 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55f4c8d9ce90 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55f4c8d9ce70 <col:38> 'int' 0
|-CXXMethodDecl 0x55f4c8d9b0d8 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f4c8d9afc0 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55f4c8d9b040 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55f4c8d9b400 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f4c8d9b198 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55f4c8d9b210 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55f4c8d9b290 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55f4c8d9b308 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55f4c8d9b4c0 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55f4c8d9b5d8 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f4c8d9b5b8 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55f4c8d9b5a0 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d9b580 <col:17> 'int' 1
| |-EnumConstantDecl 0x55f4c8d9b680 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f4c8d9b660 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55f4c8d9b648 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d9b628 <col:42> 'int' 2
| |-EnumConstantDecl 0x55f4c8d9b728 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f4c8d9b708 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55f4c8d9b6f0 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d9b6d0 <col:59> 'int' 3
| |-EnumConstantDecl 0x55f4c8d9b7d0 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f4c8d9b7b0 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55f4c8d9b798 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d9b778 <col:12> 'int' 4
| |-EnumConstantDecl 0x55f4c8d9b878 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f4c8d9b858 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55f4c8d9b840 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f4c8d9b820 <col:29> 'int' 5
| `-EnumConstantDecl 0x55f4c8d9b920 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55f4c8d9b900 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55f4c8d9b8e8 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55f4c8d9b8c8 <col:43> 'int' 6
|-CXXMethodDecl 0x55f4c8d9ba98 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f4c8d9b980 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55f4c8d9ba00 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55f4c8d9bd78 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8d9bb58 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55f4c8d9bbd0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55f4c8d9bc50 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55f4c8d9bcc8 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d9c068 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8d9be48 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55f4c8d9bec0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f4c8d9bf40 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55f4c8d9bfb8 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55f4c8d9c508 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55f4c8d9c378 parent 0x55f4c8d6ee00 prev 0x55f4c8d6fda0 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55f4c8d9c158 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55f4c8d9c1d0 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55f4c8d9c248 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55f4c8d9c2c8 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55f4c8d6ff18 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55f4c8d6fef8 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55f4c8d6fa10 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55f4c8d9c4b8 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55f4c8d9c4e0 <col:30> Inherited
|-AccessSpecDecl 0x55f4c8d9c548 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55f4c8d9c648 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55f4c8d9c580 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8d9c888 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55f4c8d9c700 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55f4c8d9c778 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8d9c9d8 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55f4c8d9c948 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55f4c8d9caa0 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55f4c8d9cb08 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55f4c8d9cb08
| `-ParmVarDecl 0x55f4c8d9cc18 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55f4c8d9ccb8 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55f4c8d9ccb8
  `-ParmVarDecl 0x55f4c8d9cdc8 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d51560 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8d51678 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55f4c8d51708 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55f4c8d51c78 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55f4c8d51740 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55f4c8d517c0 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55f4c8d51838 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55f4c8d518b8 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55f4c8d51930 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55f4c8d519a8 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55f4c8d51a20 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55f4c8d51a98 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8d52158 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8d51e70 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55f4c8d51f20 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55f4c8d51f98 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55f4c8d52010 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d52608 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8d52300 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55f4c8d523a8 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f4c8d52420 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55f4c8d524c0 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d52938 <line:22:5, line:23:42> line:22:17 used parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f4c8d526d8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55f4c8d52750 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f4c8d527c8 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55f4c8d52840 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f4c8d52a18 <line:25:5, line:27:5> line:25:10 used use 'void ()'
| `-CompoundStmt 0x55f4c8d53d70 <col:16, line:27:5>
|   `-UnaryOperator 0x55f4c8d53d58 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55f4c8d53d28 <col:2> 'int' lvalue ->_refcount 0x55f4c8d53958
|       `-CXXThisExpr 0x55f4c8d53d18 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55f4c8d52ad8 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55f4c8d53f68 <col:18, line:31:5>
|   `-IfStmt 0x55f4c8d53f50 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55f4c8d53e18 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55f4c8d53e00 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55f4c8d53dc8 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55f4c8d53d98 <col:8> 'int' lvalue ->_refcount 0x55f4c8d53958
|     | |     `-CXXThisExpr 0x55f4c8d53d88 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55f4c8d53de0 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55f4c8d53f30 <line:30:6, col:13> 'void' Function 0x55f4c888fd28 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55f4c8d53e38 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55f4c8d52bd8 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55f4c8d54250 <col:27, line:35:5>
|   `-ReturnStmt 0x55f4c8d54240 <line:34:2, col:39>
|     `-BinaryOperator 0x55f4c8d54220 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55f4c8d54190 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55f4c8d540b0 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55f4c8d54068 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55f4c8d54050 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55f4c8d54030 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55f4c8d54000 <col:9> '<bound member function type>' .operator unsigned int 0x55f4c8aabfa8
|       | | |       `-MemberExpr 0x55f4c8d53f90 <col:9> 'const IPAddress' lvalue ->_saddr 0x55f4c8d535e0
|       | | |         `-CXXThisExpr 0x55f4c8d53f80 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55f4c8d54098 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55f4c8d54080 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55f4c8d53fd0 <col:19> 'const int' lvalue ->_sport 0x55f4c8d53648
|       | |       `-CXXThisExpr 0x55f4c8d53fc0 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55f4c8d54178 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55f4c8d54160 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55f4c8d54140 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55f4c8d54110 <col:29> '<bound member function type>' .operator unsigned int 0x55f4c8aabfa8
|       |         `-MemberExpr 0x55f4c8d540e0 <col:29> 'const IPAddress' lvalue ->_daddr 0x55f4c8d536a8
|       |           `-CXXThisExpr 0x55f4c8d540d0 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55f4c8d54208 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55f4c8d541f0 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55f4c8d541c0 <col:39> 'const int' lvalue ->_dport 0x55f4c8d53710
|             `-CXXThisExpr 0x55f4c8d541b0 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55f4c8d52ca8 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55f4c8d542e8 <col:29, line:38:5>
|   `-ReturnStmt 0x55f4c8d542d8 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55f4c8d542a8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55f4c8d54278 <col:9> 'const IPAddress' lvalue ->_daddr 0x55f4c8d536a8
|         `-CXXThisExpr 0x55f4c8d54268 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55f4c8d53370 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55f4c8d52d58 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f4c8d52df8 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55f4c8d53240 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55f4c8d53448 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f4c8d53508 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55f4c8d54590 <col:41, line:47:5>
|   `-ReturnStmt 0x55f4c8d54580 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55f4c8d54568 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55f4c8d54538 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f4c8d54520 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55f4c8d544d0 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55f4c8d54410 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f4c8d54320 <col:25> 'const IPAddress' lvalue ->_saddr 0x55f4c8d535e0
|             |   `-CXXThisExpr 0x55f4c8d54310 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55f4c8d54458 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55f4c8d54440 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55f4c8d54360 <col:33> 'const int' lvalue ->_sport 0x55f4c8d53648
|             |     `-CXXThisExpr 0x55f4c8d54350 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55f4c8d54470 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f4c8d543a0 <col:41> 'const IPAddress' lvalue ->_daddr 0x55f4c8d536a8
|             |   `-CXXThisExpr 0x55f4c8d54390 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55f4c8d544b8 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55f4c8d544a0 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55f4c8d543e0 <col:49> 'const int' lvalue ->_dport 0x55f4c8d53710
|                   `-CXXThisExpr 0x55f4c8d543d0 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55f4c8d535a8 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55f4c8d535e0 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55f4c8d53648 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55f4c8d536a8 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55f4c8d53710 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55f4c8d53770 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8d537d0 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8d53830 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55f4c8d53890 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55f4c8d538f0 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55f4c8d53958 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55f4c8d53aa8 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55f4c8d539e8 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55f4c8d53c58 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55f4c8d53b68 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55f4c8d53e48 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55f4c8d53e48

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d6f548 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f4c8d6f678 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55f4c8d6f708 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55f4c8d701c8 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f4c8d705f8 <col:5>
|-CXXConstructorDecl 0x55f4c8d702c8 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55f4c8d702c8
| `-ParmVarDecl 0x55f4c8d703d8 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
|-CXXConstructorDecl 0x55f4c8d70478 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55f4c8d70478
| `-ParmVarDecl 0x55f4c8d70588 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
`-CXXDestructorDecl 0x55f4c8e22488 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f4c8e22488

Layout: <CGRecordLayout
  LLVMType:%union.anon.5 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8d6ee00 prev 0x55f4c8d547a0 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f4c8d6eef8 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55f4c8d6ef88 <col:25, col:31> col:25 public
|-EnumDecl 0x55f4c8d6efb0 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55f4c8d6f070 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55f4c8d6f0c0 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55f4c8d6f110 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55f4c8d6f160 <col:30> col:30 referenced i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55f4c8d6f1b0 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55f4c8d6f238 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55f4c8d6f2a0 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55f4c8d6f308 <line:17:5, col:9> col:9 referenced kind 'int'
|-FieldDecl 0x55f4c8d6f370 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x55f4c8d6f3d0 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55f4c8d6f438 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55f4c8d6f498 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55f4c8d6f4f8 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55f4c8d6f548 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f4c8d6f678 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55f4c8d6f708 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55f4c8d701c8 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f4c8d705f8 <col:5>
| |-CXXConstructorDecl 0x55f4c8d702c8 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55f4c8d702c8
| | `-ParmVarDecl 0x55f4c8d703d8 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| |-CXXConstructorDecl 0x55f4c8d70478 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55f4c8d70478
| | `-ParmVarDecl 0x55f4c8d70588 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
| `-CXXDestructorDecl 0x55f4c8e22488 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f4c8e22488
|-FieldDecl 0x55f4c8d6f7c8 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55f4c8d6f868 <line:28:5, line:31:5> line:28:5 used IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55f4c8d6f308 'kind' 'int'
| | `-ImplicitCastExpr 0x55f4c8d6ff70 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55f4c8d6ff30 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55f4c8d6f070 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55f4c8d6f370 'foutput' 'int'
| | `-UnaryOperator 0x55f4c8d6ffd0 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55f4c8d6ffb0 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55f4c8d6f438 'routput' 'int'
| | `-UnaryOperator 0x55f4c8d70050 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55f4c8d70030 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55f4c8d6f498 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8d700f0 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8d700b0 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8d6f4f8 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f4c8d70170 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f4c8d70130 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f4c8d6f7c8 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55f4c8d70608 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55f4c8d70750 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55f4c8d70730 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55f4c8d706c8 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55f4c8d6f678
|     | `-MemberExpr 0x55f4c8d70698 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55f4c8d6f7c8
|     |   `-CXXThisExpr 0x55f4c8d70688 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55f4c8d70718 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55f4c8d706f8 <col:14> 'int' 0
|-EnumDecl 0x55f4c8d6f910 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55f4c8d6fa10 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55f4c8d6faf0 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8d6f9f0 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8d6f9d0 <col:18> 'int' 0
| `-EnumConstantDecl 0x55f4c8d6faa0 <col:21, col:44> col:21 mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55f4c8d6fb08 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8d6fa80 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55f4c8d6fa60 <col:44> 'int' 1
|-CXXMethodDecl 0x55f4c8d6fda0 <line:37:5, line:39:46> line:37:44 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
| |-ParmVarDecl 0x55f4c8d6fb30 <col:59, col:75> col:75 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f4c8d6fba8 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55f4c8d6fc20 <line:39:10, col:18> col:18 p 'Packet *'
| |-ParmVarDecl 0x55f4c8d6fca0 <col:21, col:33> col:25 mapid 'int' cinit
| | `-ImplicitCastExpr 0x55f4c8d6ff18 <col:33> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55f4c8d6fef8 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55f4c8d6fa10 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| |-NoInlineAttr 0x55f4c8d6fe60 <line:37:20>
| `-OptimizeNoneAttr 0x55f4c8d6feb8 <col:30>
|-CXXConstructorDecl 0x55f4c8e22338 <line:11:7> col:7 implicit constexpr IPRewriterInput 'void (const IPRewriterInput &)' inline default trivial noexcept-unevaluated 0x55f4c8e22338
| `-ParmVarDecl 0x55f4c8e22418 <col:7> col:7 'const IPRewriterInput &'
`-CXXConstructorDecl 0x55f4c8e22570 <col:7> col:7 implicit constexpr IPRewriterInput 'void (IPRewriterInput &&)' inline default trivial noexcept-unevaluated 0x55f4c8e22570
  `-ParmVarDecl 0x55f4c8e22688 <col:7> col:7 'IPRewriterInput &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.5 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c89fb250 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c89fb368 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55f4c89fb3f8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55f4c89fb4c8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55f4c89fb5b0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c89fb7c8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f4c89fb670 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fb978 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f4c89fb880 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f4c89fbac0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f4c89fba30 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f4c89fc5e0 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f4c89fc550 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fc728 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f4c89fc698 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fc7f0 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55f4c89fc938 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55f4c89fc8a8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f4c89fca00 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55f4c89fcb48 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55f4c89fcab8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f4c89fccc8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f4c89fcc00 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fce10 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f4c89fcd80 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fced8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55f4c89fd098 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f4c89fcf88 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f4c89fd000 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fd2e8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f4c89fd158 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c89fd1d0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c89fd398 <col:86> "" ""
|-CXXMethodDecl 0x55f4c89fd608 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c89fd478 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55f4c89fd4f0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fd7b8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f4c89fd6c8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f4c89fd968 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f4c89fd870 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f4c89fdc38 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c89fda20 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f4c89fda98 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f4c89fdb10 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fdf18 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c89fdd00 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f4c89fdd78 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c89fddf0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c89fdfd0 <col:115> "" ""
|-AccessSpecDecl 0x55f4c89fe040 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55f4c89fe078 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c89fe780 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f4c89fe780
| `-ParmVarDecl 0x55f4c89fe888 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55f4c89fe928 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f4c89fe928
| `-ParmVarDecl 0x55f4c89fea38 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55f4c8a9d428 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f4c8c92e00 <col:7>
|-CXXConstructorDecl 0x55f4c8a9d500 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f4c8a9d500
| `-ParmVarDecl 0x55f4c8a9d618 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55f4c8a9d688 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f4c8a9d688
| `-ParmVarDecl 0x55f4c8a9d798 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55f4c8c95770 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8c7de88 prev 0x55f4c8c702d0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8c7df80 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55f4c8c7e070 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55f4c8c7e198 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55f4c8c7e318 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55f4c8c7e498 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55f4c8c7e618 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55f4c8c92f68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f4c8c937d8 <col:11>
|-CXXDestructorDecl 0x55f4c8c93040 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f4c8c93178 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f4c8c93178
| `-ParmVarDecl 0x55f4c8c93288 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55f4c8c93328 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f4c8c93328
| `-ParmVarDecl 0x55f4c8c93438 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55f4c8c96168 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f4c8c96278 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55f4c8c964f8 <col:11>
|   `-ReturnStmt 0x55f4c8c964e8 <col:11>
|     `-UnaryOperator 0x55f4c8c964d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f4c8c964c0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55f4c8c962e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f4c8c962e8
  `-ParmVarDecl 0x55f4c8c963f8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8c7e680 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f4c8c7e798 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55f4c8c7e838 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55f4c8c7e8a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55f4c8c7e908 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55f4c8c7e970 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55f4c8c7e9d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55f4c8c7ea90 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55f4c8c7eaf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55f4c8c7eb50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55f4c8c92e78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55f4c8c7e838 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55f4c8c937e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c93840 <col:12>
|-CXXConstructorDecl 0x55f4c8c934a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f4c8c934a8
| `-ParmVarDecl 0x55f4c8c935b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55f4c8c93658 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f4c8c93658
| `-ParmVarDecl 0x55f4c8c93768 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55f4c8c95850 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f4c8c699a0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f4c8c69b28 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55f4c8c69bb8 <col:16, col:22> col:16 public
|-EnumDecl 0x55f4c8c69be0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55f4c8c69ce0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55f4c8c69dc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c69cc0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55f4c8c69ca0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55f4c8c69d70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55f4c8c69dd8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c69d50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55f4c8c69d30 <col:22> 'int' 64
|-CXXMethodDecl 0x55f4c8c6a118 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f4c8c69e00 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c8c69e80 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55f4c8c69ef8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c8c69f70 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f4c8c6a1d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6a3d8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c6a250 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55f4c8c6a2c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f4c8c6a488 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6a5e8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55f4c8c6a4f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f4c8c6a690 <col:72> warn_unused_result ""
|-TypedefDecl 0x55f4c8c6a9c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55f4c8c6a950 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55f4c8c6a8f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55f4c8c6a8b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55f4c873a4e0 'void'
|       |-PointerType 0x55f4c89e5be0 'unsigned char *'
|       | `-BuiltinType 0x55f4c873a5e0 'unsigned char'
|       |-TypedefType 0x55f4c87e1c20 'size_t' sugar
|       | |-Typedef 0x55f4c87aabe0 'size_t'
|       | `-BuiltinType 0x55f4c873a640 'unsigned long'
|       `-PointerType 0x55f4c873ace0 'void *'
|         `-BuiltinType 0x55f4c873a4e0 'void'
|-CXXMethodDecl 0x55f4c8c6ae38 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55f4c8c6aa30 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55f4c8c6aaa8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c8c6ab40 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55f4c8c6abc0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55f4c8c893d0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55f4c8c893b8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55f4c8c89380 <col:58> 'int' 0
| |-ParmVarDecl 0x55f4c8c6ac40 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55f4c8c893f8 <col:76> 'int' 0
| |-ParmVarDecl 0x55f4c8c6acc0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55f4c8c89418 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55f4c8c6af08 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6af88 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f4c8c6b048 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55f4c8c6b0e8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6b140 <col:30>
|-CXXMethodDecl 0x55f4c8c6b1b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55f4c8c6b258 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6b2b0 <col:30>
|-CXXMethodDecl 0x55f4c8c6b328 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55f4c8c6b3c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6b478 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55f4c8c6b518 <col:20>
| |-OptimizeNoneAttr 0x55f4c8c6b570 <col:30>
| `-WarnUnusedResultAttr 0x55f4c8c6b598 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6b5f0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f4c8c6b690 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6b6e8 <col:30>
|-CXXMethodDecl 0x55f4c8c6b738 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f4c8c6b7d8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6b830 <col:30>
|-CXXMethodDecl 0x55f4c8c6b878 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55f4c8c6b918 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6b970 <col:30>
|-CXXMethodDecl 0x55f4c8c6b9b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c6ba78 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c6bb40 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f4c8c6bc08 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f4c8c6bcc8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c6bde8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55f4c8c894e0 <col:54, line:99:5>
|   `-ReturnStmt 0x55f4c8c894d0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55f4c8c894b8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f4c8c89488 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f4c8c88278
|         `-CXXThisExpr 0x55f4c8c89478 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f4c8c6bf88 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55f4c8c6be98 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55f4c8c89590 <col:67, line:103:5>
|   `-BinaryOperator 0x55f4c8c89570 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f4c8c89508 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f4c8c88278
|     | `-CXXThisExpr 0x55f4c8c894f8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f4c8c89558 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c89538 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55f4c8c6be98 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55f4c8c6c080 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55f4c8c89610 <col:33, line:107:5>
|   `-ReturnStmt 0x55f4c8c89600 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55f4c8c895e8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f4c8c895b8 <col:16> 'void *' lvalue ->_destructor_argument 0x55f4c8c882e0
|         `-CXXThisExpr 0x55f4c8c895a8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f4c8c6c140 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55f4c8c89c40 <col:25, line:113:5>
|   |-ParenExpr 0x55f4c8c89988 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55f4c8c89958 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c896c8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f4c8c896a0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55f4c8c89668 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55f4c8c89638 <col:24> '<bound member function type>' ->shared 0x55f4c8c6b1b8
|   |   |       `-ImplicitCastExpr 0x55f4c8c89688 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55f4c8c89628 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f4c8c89728 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c89708 <col:42> 'int' 0
|   |   `-CallExpr 0x55f4c8c898b8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c898a0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c89880 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c898f8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c89798 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55f4c8c89910 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c897c0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c89928 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c897f8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55f4c8c89940 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c89868 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c89850 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c89818 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55f4c8c89b88 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55f4c8c899b8 <col:2> 'unsigned char *' lvalue ->_head 0x55f4c8c7ec90
|   | | `-CXXThisExpr 0x55f4c8c899a8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55f4c8c89b70 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f4c8c89b50 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55f4c8c899f8 <col:10> 'unsigned char *' lvalue ->_data 0x55f4c8c7ecf8
|   |     | `-CXXThisExpr 0x55f4c8c899e8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55f4c8c89b38 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55f4c8c89b18 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55f4c8c89a38 <col:18> 'unsigned char *' lvalue ->_tail 0x55f4c8c88150
|   |         | `-CXXThisExpr 0x55f4c8c89a28 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55f4c8c89b00 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55f4c8c89ae0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55f4c8c89a78 <col:26> 'unsigned char *' lvalue ->_end 0x55f4c8c881b8
|   |             | `-CXXThisExpr 0x55f4c8c89a68 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55f4c8c89ac8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55f4c8c89aa8 <col:33> 'int' 0
|   `-BinaryOperator 0x55f4c8c89c20 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f4c8c89bb8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f4c8c88278
|     | `-CXXThisExpr 0x55f4c8c89ba8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f4c8c89c08 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55f4c8c89be8 <col:16> 'int' 0
|-CXXMethodDecl 0x55f4c8c6c280 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f4c8c6c1f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c6c328 <col:20>
| |-OptimizeNoneAttr 0x55f4c8c6c380 <col:30>
| `-WarnUnusedResultAttr 0x55f4c8c6c3a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6c478 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f4c8c6c3e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c6c520 <col:20>
| |-OptimizeNoneAttr 0x55f4c8c6c578 <col:30>
| `-WarnUnusedResultAttr 0x55f4c8c6c5a0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6c6d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f4c8c6c5e0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f4c8c6c780 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6c880 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55f4c8c6c7f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c6c928 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6c980 <col:30>
|-CXXMethodDecl 0x55f4c8c6ca48 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f4c8c6c9b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f4c8c6caf0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6cbf0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f4c8c6cb60 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f4c8c6cc98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6cd98 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55f4c8c6cd08 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c6ce40 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6ce98 <col:30>
|-CXXMethodDecl 0x55f4c8c6d028 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55f4c8c6ced8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55f4c8c6cf50 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55f4c8c89438 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55f4c8c6d0d8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55f4c8c6d2d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c6d150 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8c6d1c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c6d4e8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c6d398 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f4c8c6d410 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c6d6f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55f4c8c6d5a8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55f4c8c6d628 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55f4c8c89448 <col:39> 'int' 0
|-CXXMethodDecl 0x55f4c8c6d7c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55f4c8c6d890 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f4c8c6d958 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f4c8c6da18 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c6daf8 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55f4c8c6dc40 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55f4c8c6dbb0 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55f4c8c6de10 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c6dd00 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8c6dd78 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c6dee0 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55f4c8c6dfa0 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55f4c8c6e040 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6e098 <col:30>
|-CXXMethodDecl 0x55f4c8c6e0e8 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f4c8c6e188 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6e1e0 <col:30>
|-CXXMethodDecl 0x55f4c8c6e230 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f4c8c6e2f0 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c6e3b8 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55f4c8c6e458 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6e4b0 <col:30>
|-CXXMethodDecl 0x55f4c8c6e600 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c6e4f0 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8c6e568 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c6e750 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f4c8c6e6c0 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c6e818 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55f4c8c6e8d8 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55f4c8c6e978 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6e9d0 <col:30>
|-CXXMethodDecl 0x55f4c8c6ea20 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f4c8c6eac0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6eb18 <col:30>
|-CXXMethodDecl 0x55f4c8c6eb68 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f4c8c6ec30 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55f4c8c6ecd0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6ed28 <col:30>
|-CXXMethodDecl 0x55f4c8c6ed70 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55f4c8c6ee88 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55f4c8c6eff8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55f4c8c6ef38 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55f4c8c6f0e8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55f4c8c6f188 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6f1e0 <col:30>
|-CXXMethodDecl 0x55f4c8c6f230 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f4c8c6f2f0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f4c8c6f528 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55f4c8c6f3a0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55f4c8c6f418 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c6f5d8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6f630 <col:30>
|-CXXMethodDecl 0x55f4c8c6f6d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55f4c8c6f778 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6f7d0 <col:30>
|-CXXMethodDecl 0x55f4c8c6f820 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55f4c8c6f8c0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6f918 <col:30>
|-CXXMethodDecl 0x55f4c8c6f960 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55f4c8c6fa00 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6fa58 <col:30>
|-CXXMethodDecl 0x55f4c8c6fb58 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55f4c8c6fa90 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55f4c8c6fc00 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6fc58 <col:30>
|-CXXMethodDecl 0x55f4c8c6fe18 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55f4c8c6fc90 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55f4c8c6fd08 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c6fec8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c6ff20 <col:30>
|-CXXMethodDecl 0x55f4c8c6ffc8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55f4c8c700e8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55f4c8c70208 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55f4c8c702a8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55f4c8c702d0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55f4c8c703f8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55f4c8c70498 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c704f0 <col:30>
|-CXXMethodDecl 0x55f4c8c70598 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55f4c8c70638 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c70690 <col:30>
|-AccessSpecDecl 0x55f4c8c706b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55f4c8c706e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55f4c8c707e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55f4c8c70830 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c707c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55f4c8c707a0 <col:14> 'int' 48
|-CXXMethodDecl 0x55f4c8c70898 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55f4c8c70938 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c70990 <col:30>
|-CXXMethodDecl 0x55f4c8c70a08 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55f4c8c70aa8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c70b00 <col:30>
|-CXXMethodDecl 0x55f4c8c70bc8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f4c8c70b38 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55f4c8c70d68 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55f4c8c70f08 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55f4c8c70e18 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55f4c8c70fb0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55f4c8c710b0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f4c8c71460 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c71090 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8c71070 <col:9> 'int' 0
| |-EnumConstantDecl 0x55f4c8c71140 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f4c8c71478 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c71120 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f4c8c71100 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f4c8c711d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f4c8c71490 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c711b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55f4c8c71190 <col:14> 'int' 2
| |-EnumConstantDecl 0x55f4c8c71260 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f4c8c714a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c71240 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55f4c8c71220 <col:14> 'int' 3
| |-EnumConstantDecl 0x55f4c8c712f0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f4c8c714c0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c712d0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55f4c8c712b0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55f4c8c71380 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f4c8c714d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c71360 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55f4c8c71340 <col:13> 'int' 5
| `-EnumConstantDecl 0x55f4c8c71410 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55f4c8c714f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c713f0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55f4c8c713d0 <col:14> 'int' 6
|-CXXMethodDecl 0x55f4c8c71558 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55f4c8c715f8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c71650 <col:30>
|-CXXMethodDecl 0x55f4c8c71748 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55f4c8c71688 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55f4c8c717f0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c71848 <col:30>
|-CXXMethodDecl 0x55f4c8c718b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55f4c8c719e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55f4c8c71ba8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55f4c8c71ae0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55f4c8c71c70 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55f4c8c71d38 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55f4c8c71e78 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55f4c8c71de8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55f4c8c71f20 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55f4c8c72020 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f4c8c72220 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c72000 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8c71fe0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55f4c8c720b0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f4c8c72238 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c72090 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55f4c8c72070 <col:45> 'int' 4
| |-EnumConstantDecl 0x55f4c8c72140 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f4c8c72250 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c72120 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8c72100 <col:24> 'int' 0
| `-EnumConstantDecl 0x55f4c8c721d0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55f4c8c72268 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c721b0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55f4c8c72190 <col:47> 'int' 16
|-CXXMethodDecl 0x55f4c8c722c8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55f4c8c72438 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55f4c8c72378 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55f4c8c724e0 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c72538 <col:30>
|-CXXMethodDecl 0x55f4c8c72588 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55f4c8c89d60 <col:18, col:36>
|   `-ReturnStmt 0x55f4c8c89d50 <col:20, col:33>
|     `-ImplicitCastExpr 0x55f4c8c89d38 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f4c8c89d18 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55f4c8c89ce8 <col:27> '<bound member function type>' ->xanno 0x55f4c8c70598
|           `-CXXThisExpr 0x55f4c8c89cd8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55f4c8c72680 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55f4c8c89e70 <col:30, col:48>
|   `-ReturnStmt 0x55f4c8c89e60 <col:32, col:45>
|     `-ImplicitCastExpr 0x55f4c8c89e48 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f4c8c89e28 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55f4c8c89df8 <col:39> '<bound member function type>' ->xanno 0x55f4c8c703f8
|           `-CXXThisExpr 0x55f4c8c89de8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f4c8c72768 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55f4c8c8a008 <col:24, col:50>
|   `-ReturnStmt 0x55f4c8c89ff8 <col:26, col:47>
|     `-UnaryOperator 0x55f4c8c89fe0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f4c8c89fc0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f4c8c89fa8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f4c8c89f58 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55f4c8c7e198
|         |   `-CXXMemberCallExpr 0x55f4c8c89f38 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f4c8c89f08 <col:34> '<bound member function type>' ->xanno 0x55f4c8c70598
|         |       `-CXXThisExpr 0x55f4c8c89ef8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f4c8c89f88 <col:46> 'int' 0
|-CXXMethodDecl 0x55f4c8c72858 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55f4c8c8a1d8 <col:36, col:62>
|   `-ReturnStmt 0x55f4c8c8a1c8 <col:38, col:59>
|     `-UnaryOperator 0x55f4c8c8a1b0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f4c8c8a190 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f4c8c8a178 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f4c8c8a0f0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55f4c8c7e198
|         |   `-CXXMemberCallExpr 0x55f4c8c8a0d0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f4c8c8a0a0 <col:46> '<bound member function type>' ->xanno 0x55f4c8c703f8
|         |       `-CXXThisExpr 0x55f4c8c8a090 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f4c8c8a120 <col:58> 'int' 0
|-CXXMethodDecl 0x55f4c8c72978 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55f4c8c8a370 <col:26, col:53>
|   `-ReturnStmt 0x55f4c8c8a360 <col:28, col:50>
|     `-UnaryOperator 0x55f4c8c8a348 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f4c8c8a328 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f4c8c8a310 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f4c8c8a2c0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55f4c8c7e498
|         |   `-CXXMemberCallExpr 0x55f4c8c8a2a0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f4c8c8a270 <col:36> '<bound member function type>' ->xanno 0x55f4c8c70598
|         |       `-CXXThisExpr 0x55f4c8c8a260 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f4c8c8a2f0 <col:49> 'int' 0
|-CXXMethodDecl 0x55f4c8c72a98 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55f4c8c8a548 <col:38, col:65>
|   `-ReturnStmt 0x55f4c8c8a538 <col:40, col:62>
|     `-UnaryOperator 0x55f4c8c8a520 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f4c8c8a500 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f4c8c8a4e8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f4c8c8a458 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55f4c8c7e498
|         |   `-CXXMemberCallExpr 0x55f4c8c8a438 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f4c8c8a408 <col:48> '<bound member function type>' ->xanno 0x55f4c8c703f8
|         |       `-CXXThisExpr 0x55f4c8c8a3f8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f4c8c8a488 <col:61> 'int' 0
|-CXXMethodDecl 0x55f4c8c72c48 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55f4c8c72b50 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55f4c8c8ac18 <col:34, line:463:5>
|   |-ParenExpr 0x55f4c8c8aa60 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f4c8c8aa30 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8a698 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8a668 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8a5b8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8a5a0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8a560 <col:23> 'int' lvalue ParmVar 0x55f4c8c72b50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8a580 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8a648 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8a618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8a5d8 <col:33> 'int' lvalue ParmVar 0x55f4c8c72b50 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f4c8c8a630 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f4c8c8a5f8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8a6f8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8a6d8 <col:56> 'int' 0
|   |   `-CallExpr 0x55f4c8c8a990 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8a978 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8a958 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8a9d0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8a7e8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f4c8c8a9e8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8a818 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8aa00 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8a850 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55f4c8c8aa18 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8a940 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8a928 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8a8e8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55f4c8c8ac08 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55f4c8c8abf0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55f4c8c8abd0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f4c8c8aba0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f4c8c8ab50 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55f4c8c7e198
|         |   `-CXXMemberCallExpr 0x55f4c8c8ab30 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f4c8c8ab00 <col:9> '<bound member function type>' ->xanno 0x55f4c8c703f8
|         |       `-CXXThisExpr 0x55f4c8c8aaf0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55f4c8c8abb8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55f4c8c8ab80 <col:21> 'int' lvalue ParmVar 0x55f4c8c72b50 'i' 'int'
|-CXXMethodDecl 0x55f4c8c72e98 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55f4c8c72d08 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55f4c8c72d80 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55f4c8c8b2a8 <col:40, line:472:5>
|   |-ParenExpr 0x55f4c8c8b0c0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f4c8c8b090 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8ad70 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8ad40 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8ac90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8ac78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8ac38 <col:23> 'int' lvalue ParmVar 0x55f4c8c72d08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8ac58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8ad20 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8acf0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8acb0 <col:33> 'int' lvalue ParmVar 0x55f4c8c72d08 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f4c8c8ad08 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f4c8c8acd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8add0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8adb0 <col:56> 'int' 0
|   |   `-CallExpr 0x55f4c8c8aff0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8afd8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8afb8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8b030 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8ae40 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f4c8c8b048 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8ae70 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8b060 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8aea8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55f4c8c8b078 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8afa0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8af88 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8af48 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55f4c8c8b288 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55f4c8c8b230 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55f4c8c8b200 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55f4c8c8b1b0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55f4c8c7e198
|     | |   `-CXXMemberCallExpr 0x55f4c8c8b190 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55f4c8c8b160 <col:2> '<bound member function type>' ->xanno 0x55f4c8c70598
|     | |       `-CXXThisExpr 0x55f4c8c8b150 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55f4c8c8b218 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f4c8c8b1e0 <col:14> 'int' lvalue ParmVar 0x55f4c8c72d08 'i' 'int'
|     `-ImplicitCastExpr 0x55f4c8c8b270 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c8b250 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55f4c8c72d80 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55f4c8c73058 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55f4c8c72f60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f4c8c8ba28 <col:36, line:485:5>
|   |-ParenExpr 0x55f4c8c8b790 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8b760 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8b440 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8b410 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8b320 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8b308 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8b2c8 <col:23> 'int' lvalue ParmVar 0x55f4c8c72f60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8b2e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8b3f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8b3d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8b340 <col:33> 'int' lvalue ParmVar 0x55f4c8c72f60 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8b3b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8b3a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8b360 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8b380 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8b4a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8b480 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8b6c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8b6a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8b688 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8b700 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8b510 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f4c8c8b718 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8b548 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8b730 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8b580 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55f4c8c8b748 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8b670 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8b658 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8b618 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55f4c8c8ba18 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55f4c8c8ba00 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8c8b9e8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f4c8c8b9b8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55f4c8c8b958 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f4c8c8b928 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8c8b8a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f4c8c7e070
|             |   `-CXXMemberCallExpr 0x55f4c8c8b880 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f4c8c8b850 <col:61> '<bound member function type>' ->xanno 0x55f4c8c703f8
|             |       `-CXXThisExpr 0x55f4c8c8b840 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f4c8c8b940 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f4c8c8b8d0 <col:74> 'int' lvalue ParmVar 0x55f4c8c72f60 'i' 'int'
|-CXXMethodDecl 0x55f4c8c732a8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55f4c8c73118 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f4c8c73190 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f4c8c8c198 <col:42, line:500:5>
|   |-ParenExpr 0x55f4c8c8bf10 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8bee0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8bbc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8bb90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8baa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8ba88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8ba48 <col:23> 'int' lvalue ParmVar 0x55f4c8c73118 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8ba68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8bb70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8bb58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8bac0 <col:33> 'int' lvalue ParmVar 0x55f4c8c73118 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8bb38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8bb20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8bae0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8bb00 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8bc20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8bc00 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8be40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8be28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8be08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8be80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8bc90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f4c8c8be98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8bcc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8beb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8bd00 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55f4c8c8bec8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8bdf0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8bdd8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8bd98 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55f4c8c8c178 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55f4c8c8c108 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f4c8c8c0d8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f4c8c8c080 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f4c8c8c050 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f4c8c8c000 <col:48, col:57> 'char [48]' lvalue ->c 0x55f4c8c7e070
|     |     |   `-CXXMemberCallExpr 0x55f4c8c8bfe0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f4c8c8bfb0 <col:48> '<bound member function type>' ->xanno 0x55f4c8c70598
|     |     |       `-CXXThisExpr 0x55f4c8c8bfa0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f4c8c8c068 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f4c8c8c030 <col:61> 'int' lvalue ParmVar 0x55f4c8c73118 'i' 'int'
|     `-ImplicitCastExpr 0x55f4c8c8c160 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c8c120 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f4c8c73190 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f4c8c73468 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55f4c8c73370 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f4c8c8c8f8 <col:35, line:513:5>
|   |-ParenExpr 0x55f4c8c8c608 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8c5d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8c330 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8c300 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8c210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8c1f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8c1b8 <col:23> 'int' lvalue ParmVar 0x55f4c8c73370 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8c1d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8c2e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8c2c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8c230 <col:33> 'int' lvalue ParmVar 0x55f4c8c73370 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8c2a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8c290 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8c250 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8c270 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8c390 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8c370 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8c538 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8c520 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8c500 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8c578 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8c400 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f4c8c8c590 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8c438 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8c5a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8c470 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55f4c8c8c5c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8c4e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8c4d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8c490 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55f4c8c8c8e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55f4c8c8c8d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8c8c8b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f4c8c8c888 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55f4c8c8c800 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f4c8c8c7d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8c8c780 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f4c8c7e070
|             |   `-CXXMemberCallExpr 0x55f4c8c8c760 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f4c8c8c730 <col:60> '<bound member function type>' ->xanno 0x55f4c8c703f8
|             |       `-CXXThisExpr 0x55f4c8c8c720 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f4c8c8c7e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f4c8c8c7b0 <col:73> 'int' lvalue ParmVar 0x55f4c8c73370 'i' 'int'
|-CXXMethodDecl 0x55f4c8c736b8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55f4c8c73528 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f4c8c735a0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55f4c8c8d008 <col:41, line:528:5>
|   |-ParenExpr 0x55f4c8c8cda0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8cd70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8ca90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8ca60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8c970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8c958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8c918 <col:23> 'int' lvalue ParmVar 0x55f4c8c73528 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8c938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8ca40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8ca28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8c990 <col:33> 'int' lvalue ParmVar 0x55f4c8c73528 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8ca08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8c9f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8c9b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8c9d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8caf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8cad0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8ccd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8ccb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8cc98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8cd10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8cb60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f4c8c8cd28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8cb98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8cd40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8cbd0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55f4c8c8cd58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8cc80 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8cc68 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8cc28 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55f4c8c8cfe8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55f4c8c8cf98 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f4c8c8cf68 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f4c8c8cf10 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f4c8c8cee0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f4c8c8ce90 <col:47, col:56> 'char [48]' lvalue ->c 0x55f4c8c7e070
|     |     |   `-CXXMemberCallExpr 0x55f4c8c8ce70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f4c8c8ce40 <col:47> '<bound member function type>' ->xanno 0x55f4c8c70598
|     |     |       `-CXXThisExpr 0x55f4c8c8ce30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f4c8c8cef8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f4c8c8cec0 <col:60> 'int' lvalue ParmVar 0x55f4c8c73528 'i' 'int'
|     `-ImplicitCastExpr 0x55f4c8c8cfd0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c8cfb0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55f4c8c735a0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55f4c8c73878 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55f4c8c73780 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f4c8c8d6d8 <col:36, line:541:5>
|   |-ParenExpr 0x55f4c8c8d478 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8d448 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8d1a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8d170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8d080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8d068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8d028 <col:23> 'int' lvalue ParmVar 0x55f4c8c73780 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8d048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8d150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8d138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8d0a0 <col:33> 'int' lvalue ParmVar 0x55f4c8c73780 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8d118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8d100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8d0c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8d0e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8d200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8d1e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8d3a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8d390 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8d370 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8d3e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8d270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f4c8c8d400 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8d2a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8d418 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8d2e0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55f4c8c8d430 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8d358 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8d340 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8d300 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55f4c8c8d6c8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55f4c8c8d6b0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8c8d698 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f4c8c8d668 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55f4c8c8d610 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f4c8c8d5e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8c8d590 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f4c8c7e070
|             |   `-CXXMemberCallExpr 0x55f4c8c8d570 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f4c8c8d540 <col:61> '<bound member function type>' ->xanno 0x55f4c8c703f8
|             |       `-CXXThisExpr 0x55f4c8c8d530 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f4c8c8d5f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f4c8c8d5c0 <col:74> 'int' lvalue ParmVar 0x55f4c8c73780 'i' 'int'
|-CXXMethodDecl 0x55f4c8c73a48 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55f4c8c73938 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55f4c8c739b0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f4c8c73af8 <col:20>
| `-OptimizeNoneAttr 0x55f4c8c73b50 <col:30>
|-CXXMethodDecl 0x55f4c8c73c88 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55f4c8c73b90 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f4c8c8dda8 <col:35, line:562:5>
|   |-ParenExpr 0x55f4c8c8db48 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8db18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8d870 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8d840 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8d750 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8d738 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8d6f8 <col:23> 'int' lvalue ParmVar 0x55f4c8c73b90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8d718 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8d820 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8d808 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8d770 <col:33> 'int' lvalue ParmVar 0x55f4c8c73b90 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8d7e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8d7d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8d790 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8d7b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8d8d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8d8b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8da78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8da60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8da40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8dab8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8d940 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f4c8c8dad0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8d978 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8dae8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8d9b0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55f4c8c8db00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8da28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8da10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8d9d0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55f4c8c8dd98 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55f4c8c8dd80 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8c8dd68 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f4c8c8dd38 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55f4c8c8dce0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f4c8c8dcb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8c8dc60 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f4c8c7e070
|             |   `-CXXMemberCallExpr 0x55f4c8c8dc40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f4c8c8dc10 <col:60> '<bound member function type>' ->xanno 0x55f4c8c703f8
|             |       `-CXXThisExpr 0x55f4c8c8dc00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f4c8c8dcc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f4c8c8dc90 <col:73> 'int' lvalue ParmVar 0x55f4c8c73b90 'i' 'int'
|-CXXMethodDecl 0x55f4c8c73e98 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55f4c8c73d48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f4c8c73dc0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55f4c8c8e488 <col:41, line:577:5>
|   |-ParenExpr 0x55f4c8c8e218 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8e1e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8df40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8df10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8de20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8de08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8ddc8 <col:23> 'int' lvalue ParmVar 0x55f4c8c73d48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8dde8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8def0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8ded8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8de40 <col:33> 'int' lvalue ParmVar 0x55f4c8c73d48 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8deb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8dea0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8de60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8de80 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8dfa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8df80 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8e148 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8e130 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8e110 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8e188 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8e010 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f4c8c8e1a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8e048 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8e1b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8e080 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55f4c8c8e1d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8e0f8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8e0e0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8e0a0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55f4c8c8e468 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55f4c8c8e418 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f4c8c8e3e8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55f4c8c8e388 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f4c8c8e358 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f4c8c8e308 <col:47, col:56> 'char [48]' lvalue ->c 0x55f4c8c7e070
|     |     |   `-CXXMemberCallExpr 0x55f4c8c8e2e8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f4c8c8e2b8 <col:47> '<bound member function type>' ->xanno 0x55f4c8c70598
|     |     |       `-CXXThisExpr 0x55f4c8c8e2a8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f4c8c8e370 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f4c8c8e338 <col:60> 'int' lvalue ParmVar 0x55f4c8c73d48 'i' 'int'
|     `-ImplicitCastExpr 0x55f4c8c8e450 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c8e430 <col:65> 'int32_t':'int' lvalue ParmVar 0x55f4c8c73dc0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55f4c8c74058 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55f4c8c73f60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f4c8c8ebb8 <col:36, line:591:5>
|   |-ParenExpr 0x55f4c8c8e8f8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8e8c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8e620 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8e5f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8e500 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8e4e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8e4a8 <col:23> 'int' lvalue ParmVar 0x55f4c8c73f60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8e4c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8e5d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8e5b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8e520 <col:33> 'int' lvalue ParmVar 0x55f4c8c73f60 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8e598 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8e580 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8e540 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8e560 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8e680 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8e660 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8e828 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8e810 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8e7f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8e868 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8e6f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f4c8c8e880 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8e728 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8e898 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8e760 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55f4c8c8e8b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8e7d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8e7c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8e780 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55f4c8c8eba8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55f4c8c8eb90 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8c8eb78 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f4c8c8eb48 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55f4c8c8eac0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f4c8c8ea90 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8c8ea40 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f4c8c7e070
|             |   `-CXXMemberCallExpr 0x55f4c8c8ea20 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f4c8c8e9f0 <col:61> '<bound member function type>' ->xanno 0x55f4c8c703f8
|             |       `-CXXThisExpr 0x55f4c8c8e9e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f4c8c8eaa8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f4c8c8ea70 <col:74> 'int' lvalue ParmVar 0x55f4c8c73f60 'i' 'int'
|-CXXMethodDecl 0x55f4c8c742a8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55f4c8c74118 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f4c8c74190 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55f4c8c8f298 <col:42, line:606:5>
|   |-ParenExpr 0x55f4c8c8f028 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f4c8c8eff8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8ed50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8ed20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8ec30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8ec18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8ebd8 <col:23> 'int' lvalue ParmVar 0x55f4c8c74118 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8ebf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8ed00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f4c8c8ece8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8ec50 <col:33> 'int' lvalue ParmVar 0x55f4c8c74118 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8ecc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8ecb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8ec70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f4c8c8ec90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8edb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8ed90 <col:60> 'int' 0
|   |   `-CallExpr 0x55f4c8c8ef58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8ef40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8ef20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8ef98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8ee20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f4c8c8efb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8ee58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8efc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8ee90 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55f4c8c8efe0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8ef08 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8eef0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8eeb0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55f4c8c8f278 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55f4c8c8f228 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f4c8c8f1f8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55f4c8c8f198 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f4c8c8f168 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f4c8c8f118 <col:48, col:57> 'char [48]' lvalue ->c 0x55f4c8c7e070
|     |     |   `-CXXMemberCallExpr 0x55f4c8c8f0f8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f4c8c8f0c8 <col:48> '<bound member function type>' ->xanno 0x55f4c8c70598
|     |     |       `-CXXThisExpr 0x55f4c8c8f0b8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f4c8c8f180 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f4c8c8f148 <col:61> 'int' lvalue ParmVar 0x55f4c8c74118 'i' 'int'
|     `-ImplicitCastExpr 0x55f4c8c8f260 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55f4c8c8f240 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55f4c8c74190 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55f4c8c74440 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55f4c8c74370 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55f4c8c8fb08 <col:33, line:620:5>
|   |-ParenExpr 0x55f4c8c8f880 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f4c8c8f850 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8f4a0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8f470 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8f310 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8f2f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8f2b8 <col:23> 'int' lvalue ParmVar 0x55f4c8c74370 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8f2d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8f450 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f4c8c8f438 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8f330 <col:33> 'int' lvalue ParmVar 0x55f4c8c74370 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8f418 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8f400 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8f350 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f4c8c8f3d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f4c8c8f3c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f4c8c8f388 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8f500 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8f4e0 <col:79> 'int' 0
|   |   `-CallExpr 0x55f4c8c8f7b0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8f798 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8f778 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8f7f0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8f5e8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f4c8c8f808 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8f630 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c8f820 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8f668 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55f4c8c8f838 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8f760 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8f748 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8f708 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55f4c8c8faf8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55f4c8c8fae0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55f4c8c8fac8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f4c8c8fa98 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55f4c8c8fa10 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f4c8c8f9e0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f4c8c8f990 <col:67, col:76> 'char const[48]' lvalue ->c 0x55f4c8c7e070
|             |   `-CXXMemberCallExpr 0x55f4c8c8f970 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f4c8c8f940 <col:67> '<bound member function type>' ->xanno 0x55f4c8c703f8
|             |       `-CXXThisExpr 0x55f4c8c8f930 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f4c8c8f9f8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f4c8c8f9c0 <col:80> 'int' lvalue ParmVar 0x55f4c8c74370 'i' 'int'
|-CXXMethodDecl 0x55f4c8c74658 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55f4c8c74500 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f4c8c74580 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55f4c8c92d60 <col:45, line:635:5>
|   |-ParenExpr 0x55f4c8c90078 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f4c8c90048 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f4c8c8fd10 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f4c8c8fce0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f4c8c8fb80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f4c8c8fb68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f4c8c8fb28 <col:23> 'int' lvalue ParmVar 0x55f4c8c74500 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f4c8c8fb48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f4c8c8fcc0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f4c8c8fca8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f4c8c8fba0 <col:33> 'int' lvalue ParmVar 0x55f4c8c74500 'i' 'int'
|   |   |     `-BinaryOperator 0x55f4c8c8fc88 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f4c8c8fc70 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f4c8c8fbc0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f4c8c707e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f4c8c8fc48 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f4c8c8fc30 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f4c8c8fbf8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f4c8c8fd70 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f4c8c8fd50 <col:79> 'int' 0
|   |   `-CallExpr 0x55f4c8c8ffa8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f4c8c8ff90 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f4c8c8ff70 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f4c87d8980 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f4c8c8ffe8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8fde0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f4c8c90000 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f4c8c8fe28 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f4c8c90018 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f4c8c8fe60 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55f4c8c90030 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f4c8c8ff58 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f4c8c8ff40 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f4c8c8fef8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55f4c8c92d40 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55f4c8c92ca8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f4c8c92c78 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55f4c8c92c20 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f4c8c92bf0 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f4c8c92ba0 <col:54, col:63> 'char [48]' lvalue ->c 0x55f4c8c7e070
|     |     |   `-CXXMemberCallExpr 0x55f4c8c92b80 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f4c8c90118 <col:54> '<bound member function type>' ->xanno 0x55f4c8c70598
|     |     |       `-CXXThisExpr 0x55f4c8c90108 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f4c8c92c08 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f4c8c92bd0 <col:67> 'int' lvalue ParmVar 0x55f4c8c74500 'i' 'int'
|     `-CXXConstCastExpr 0x55f4c8c92d10 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55f4c8c92cf8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55f4c8c92cc0 <col:91> 'const void *' lvalue ParmVar 0x55f4c8c74580 'x' 'const void *'
|-CXXMethodDecl 0x55f4c8c74728 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55f4c8c92de8 <col:34, line:640:5>
|   `-ReturnStmt 0x55f4c8c92dd8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55f4c8c92dc0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55f4c8c92d90 <col:16> 'Packet *' lvalue ->_data_packet 0x55f4c8c7ec28
|         `-CXXThisExpr 0x55f4c8c92d80 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f4c8c74868 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55f4c8c747d8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f4c8c89468 <col:46> 'bool' true
|-CXXMethodDecl 0x55f4c8c749e8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55f4c8c74920 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55f4c8c74a90 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55f4c8c75240 <line:660:22> "" ""
| |-EnumConstantDecl 0x55f4c8c74b90 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c752b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74b70 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55f4c8c74b50 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f4c8c69ce0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f4c8c74c20 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c752c8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74c00 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55f4c8c74be0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f4c8c69d70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f4c8c74cb0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c752e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74c90 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f4c8c74c70 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f4c8c74d40 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c752f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74d20 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55f4c8c74d00 <col:19> 'int' 16
| |-EnumConstantDecl 0x55f4c8c74dd0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c75310 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74db0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55f4c8c74d90 <col:21> 'int' 16
| |-EnumConstantDecl 0x55f4c8c74e60 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c75328 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74e40 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f4c8c74e20 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f4c8c74ef0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c75340 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74ed0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55f4c8c74eb0 <col:19> 'int' EnumConstant 0x55f4c8c74d40 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f4c8c74f80 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c75358 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c74f60 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55f4c8c74f40 <col:19> 'int' EnumConstant 0x55f4c8c74e60 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f4c8c75050 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c75370 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c75030 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55f4c8c75010 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f4c8c74fd0 <col:23> 'int' EnumConstant 0x55f4c8c74f80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f4c8c74ff0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f4c8c75120 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f4c8c75388 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f4c8c75100 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55f4c8c750e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f4c8c750a0 <col:23> 'int' EnumConstant 0x55f4c8c74f80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f4c8c750c0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55f4c8c751f0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55f4c8c753a0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f4c8c751d0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55f4c8c751b0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55f4c8c75170 <col:23> 'int' EnumConstant 0x55f4c8c74f80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55f4c8c75190 <col:40> 'int' 8
|-CXXMethodDecl 0x55f4c8c753e0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55f4c8c75480 <col:68> "" ""
|-CXXMethodDecl 0x55f4c8c75518 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55f4c8c755b8 <col:45> "" ""
|-CXXMethodDecl 0x55f4c8c75650 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f4c8c756f0 <col:57> "" ""
|-CXXMethodDecl 0x55f4c8c75788 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55f4c8c75828 <col:45> "" ""
|-CXXMethodDecl 0x55f4c8c758c0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f4c8c75960 <col:57> "" ""
|-CXXMethodDecl 0x55f4c8c759f0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f4c8c75a90 <col:51> "" ""
|-CXXMethodDecl 0x55f4c8c7ade0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f4c8c7ae80 <col:63> "" ""
|-CXXMethodDecl 0x55f4c8c7af10 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f4c8c7afb0 <col:53> "" ""
|-CXXMethodDecl 0x55f4c8c7b040 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f4c8c7b0e0 <col:65> "" ""
|-CXXMethodDecl 0x55f4c8c7b1f8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7b168 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55f4c8c7b2a0 <col:61> "" ""
|-CXXMethodDecl 0x55f4c8c7b438 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f4c8c7b328 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55f4c8c7b3a0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f4c8c7b4e8 <col:67> "" ""
|-CXXMethodDecl 0x55f4c8c7b600 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7b570 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f4c8c7b6a8 <col:63> "" ""
|-CXXMethodDecl 0x55f4c8c7b840 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f4c8c7b730 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f4c8c7b7a8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f4c8c7b8f0 <col:69> "" ""
|-CXXMethodDecl 0x55f4c8c7ba08 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7b978 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f4c8c7bab0 <col:63> "" ""
|-CXXMethodDecl 0x55f4c8c7bc48 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c7bb38 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f4c8c7bbb0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8c7bcf8 <col:69> "" ""
|-CXXMethodDecl 0x55f4c8c7be10 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7bd80 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55f4c8c7beb8 <col:62> "" ""
|-CXXMethodDecl 0x55f4c8c7c050 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f4c8c7bf40 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f4c8c7bfb8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55f4c8c7c100 <col:68> "" ""
|-CXXMethodDecl 0x55f4c8c7c218 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7c188 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f4c8c7c2c0 <col:63> "" ""
|-CXXMethodDecl 0x55f4c8c7c458 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55f4c8c7c348 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f4c8c7c3c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55f4c8c7c508 <col:69> "" ""
|-CXXMethodDecl 0x55f4c8c7c598 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f4c8c7c638 <col:64> "" ""
|-CXXMethodDecl 0x55f4c8c7c6c8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f4c8c7c768 <col:52> "" ""
|-CXXMethodDecl 0x55f4c8c7c7f8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f4c8c7c898 <col:67> "" ""
|-CXXMethodDecl 0x55f4c8c7c928 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f4c8c7c9c8 <col:55> "" ""
|-CXXMethodDecl 0x55f4c8c7cae0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7ca50 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f4c8c7cb88 <col:58> "" ""
|-CXXMethodDecl 0x55f4c8c7cd20 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f4c8c7cc10 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f4c8c7cc88 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f4c8c7cdd0 <col:62> "" ""
|-CXXMethodDecl 0x55f4c8c7cee8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7ce58 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f4c8c7cf90 <col:58> "" ""
|-CXXMethodDecl 0x55f4c8c7d128 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55f4c8c7d018 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f4c8c7d090 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55f4c8c7d1d8 <col:62> "" ""
|-CXXMethodDecl 0x55f4c8c7d2f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7d260 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55f4c8c7d398 <col:60> "" ""
|-CXXMethodDecl 0x55f4c8c7d530 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f4c8c7d420 <col:34> col:37 'int'
| |-ParmVarDecl 0x55f4c8c7d498 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f4c8c7d5e0 <col:64> "" ""
|-CXXMethodDecl 0x55f4c8c7d6f8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7d668 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f4c8c7d7a0 <col:58> "" ""
|-CXXMethodDecl 0x55f4c8c7d938 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f4c8c7d828 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f4c8c7d8a0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55f4c8c7d9e8 <col:62> "" ""
|-CXXMethodDecl 0x55f4c8c7db00 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f4c8c7da70 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55f4c8c7dba8 <col:59> "" ""
|-CXXMethodDecl 0x55f4c8c7dd40 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f4c8c7dc30 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f4c8c7dca8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f4c8c7ddf0 <col:63> "" ""
|-AccessSpecDecl 0x55f4c8c7de60 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55f4c8c7de88 prev 0x55f4c8c702d0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f4c8c7df80 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55f4c8c7e070 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55f4c8c7e198 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55f4c8c7e318 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55f4c8c7e498 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55f4c8c7e618 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55f4c8c92f68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f4c8c937d8 <col:11>
| |-CXXDestructorDecl 0x55f4c8c93040 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55f4c8c93178 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f4c8c93178
| | `-ParmVarDecl 0x55f4c8c93288 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55f4c8c93328 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f4c8c93328
| | `-ParmVarDecl 0x55f4c8c93438 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55f4c8c96168 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f4c8c96278 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55f4c8c964f8 <col:11>
| |   `-ReturnStmt 0x55f4c8c964e8 <col:11>
| |     `-UnaryOperator 0x55f4c8c964d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f4c8c964c0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55f4c8c962e8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f4c8c962e8
|   `-ParmVarDecl 0x55f4c8c963f8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55f4c8c7e680 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f4c8c7e798 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55f4c8c7e838 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55f4c8c7e8a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55f4c8c7e908 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55f4c8c7e970 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55f4c8c7e9d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55f4c8c7ea90 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55f4c8c7eaf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55f4c8c7eb50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55f4c8c92e78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55f4c8c7e838 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55f4c8c937e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55f4c8c93840 <col:12>
| |-CXXConstructorDecl 0x55f4c8c934a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f4c8c934a8
| | `-ParmVarDecl 0x55f4c8c935b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55f4c8c93658 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f4c8c93658
| | `-ParmVarDecl 0x55f4c8c93768 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55f4c8c95850 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55f4c8c7ebc8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55f4c8c7ec28 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55f4c8c7ec90 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55f4c8c7ecf8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55f4c8c88150 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55f4c8c881b8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55f4c8c88218 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55f4c8c88278 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55f4c8c882e0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55f4c8c88368 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55f4c8c7ebc8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55f4c8c92e10 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f4c8c88218 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55f4c8c93850 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55f4c8c938b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55f4c8c88508 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55f4c8c88448 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55f4c8c88600 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55f4c8c887e8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55f4c8c886f0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55f4c8c88ab8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55f4c8c888a0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f4c8c88918 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f4c8c88990 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c88cd8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55f4c8c88b88 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55f4c8c88c00 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55f4c8c88fa8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55f4c8c88d98 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55f4c8c88e10 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55f4c8c88e88 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55f4c8c89100 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f4c8c89070 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f4c8c89248 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f4c8c891b8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55f4c8c89340 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d72790 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55f4c8e26ea0 <line:167:18>
|-CXXRecordDecl 0x55f4c8e26f60 prev 0x55f4c8d72790 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f4c8e27070 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<56>
         0 |   char [56] x
           | [sizeof=56, dsize=56, align=1,
           |  nvsize=56, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f4c8d8f490 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 56
|-PackedAttr 0x55f4c8e609b8 <line:167:18>
|-CXXRecordDecl 0x55f4c8e60a78 prev 0x55f4c8d8f490 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f4c8e60b88 <line:166:5, col:13> col:10 x 'char [56]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [56 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [56 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
