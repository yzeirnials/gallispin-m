
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct IPRoute
         0 |   class IPAddress addr
         0 |     uint32_t _addr
         4 |   class IPAddress mask
         4 |     uint32_t _addr
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int32_t port
        16 |   int32_t extra
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct RadixIPLookup::GWPort
         0 |   class IPAddress gw
         0 |     uint32_t _addr
         4 |   int32_t port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf853ad8 prev 0x5637cf848938 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5637cf853bd0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5637cf853c60 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5637cf853cd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5637cf853d98 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5637cf853e60 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5637cf853ff8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5637cf853f30 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5637cf8540a0 <col:24>
| `-OptimizeNoneAttr 0x5637cf8540f8 <col:34>
|-CXXMethodDecl 0x5637cf854140 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5637cf8543f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5637cf8541f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5637cf854268 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5637cf8542e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5637cf8544b0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5637cf8544e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5637cf854550 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5637cf8545d8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5637cf8548f8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5637cf854690 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5637cf854708 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5637cf854780 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5637cf854800 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5637cf854a10 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5637cf85b2f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5637cf85b2f8
| `-ParmVarDecl 0x5637cf85b408 <col:11> col:11 'const Element::Port &'
`-CXXConstructorDecl 0x5637cf85b4a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5637cf85b4a8
  `-ParmVarDecl 0x5637cf85b5b8 <col:11> col:11 'Element::Port &&'

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf8443b0 prev 0x5637cf844150 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5637cf8444a8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5637cf844538 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5637cf844598 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x5637cf844688 <line:32:5, col:22> col:13 ~Element 'void ()' virtual noexcept-unevaluated 0x5637cf844688
|-VarDecl 0x5637cf844788 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5637cf844958 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5637cf844808 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5637cf844880 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5637cf844ae8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5637cf844a20 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5637cf844b90 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5637cf844cc8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5637cf844c00 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5637cf844e68 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5637cf844da8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5637cf845008 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5637cf844f48 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5637cf8450b0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5637cf8451b0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5637cf845290 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf845190 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5637cf845170 <col:26> 'int' 1
| `-EnumConstantDecl 0x5637cf845240 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5637cf8452a8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf845220 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5637cf845200 <col:44> 'int' 2
|-CXXMethodDecl 0x5637cf8453f0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5637cf8452d8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5637cf845358 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5637cf845548 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5637cf8454b8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5637cf845758 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5637cf845608 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5637cf845680 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5637cf845808 <col:20>
| `-OptimizeNoneAttr 0x5637cf845860 <col:30>
|-CXXMethodDecl 0x5637cf845968 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5637cf8458a0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5637cf845a10 <col:20>
| `-OptimizeNoneAttr 0x5637cf845a68 <col:30>
|-CXXMethodDecl 0x5637cf845ab8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5637cf845b80 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5637cf845c40 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5637cf845cc8 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5637cf845d50 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5637cf845dd8 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5637cf845e60 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5637cf845ef0 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5637cf845fb0 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5637cf846038 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5637cf8460c0 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5637cf846148 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5637cf8461d0 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5637cf846258 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5637cf8462e8 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5637cf8463a8 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5637cf846438 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5637cf846588 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5637cf8464f0 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5637cf846710 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5637cf846648 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5637cf8469b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5637cf8467c8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5637cf846848 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5637cf8468c8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5637cf846a68 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5637cf846b70 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5637cf846e00 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf846b50 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5637cf846b30 <col:33> 'int' 0
| |-EnumConstantDecl 0x5637cf846c00 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5637cf846e18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf846be0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5637cf846bc0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5637cf846c90 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5637cf846e30 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf846c70 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5637cf846c50 <col:38> 'int' 90
| |-EnumConstantDecl 0x5637cf846d20 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5637cf846e48 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf846d00 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5637cf846ce0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5637cf846db0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5637cf846e60 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf846d90 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5637cf846d70 <col:32> 'int' 2000
|-CXXMethodDecl 0x5637cf846ea0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5637cf8471b0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5637cf847020 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5637cf847098 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf847280 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5637cf847400 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5637cf847330 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf847608 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5637cf8474b8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5637cf847530 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf847708 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5637cf8477a8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5637cf847870 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5637cf847900 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5637cf847b30 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf8478e0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5637cf8478c0 <col:36> 'int' EnumConstant 0x5637cf847870 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5637cf847950 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5637cf8479a0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5637cf8479f0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5637cf847a40 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5637cf847a90 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5637cf847ae0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5637cf847c18 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5637cf847b58 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5637cf847ce0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5637cf847da0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5637cf847e60 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5637cf847f20 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5637cf848008 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5637cf8480d0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5637cf848250 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5637cf848180 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5637cf848378 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5637cf848578 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5637cf848428 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5637cf8484a8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5637cf8577c8 <col:54, line:127:5>
|   |-ParenExpr 0x5637cf857678 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5637cf857648 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf857330 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5637cf857308 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5637cf8572f0 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5637cf8572d8 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5637cf8572a8 <col:31> 'Router *' lvalue ->_router 0x5637cf8551c0
|   |   |         `-CXXThisExpr 0x5637cf857298 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5637cf857390 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf857370 <col:48> 'int' 0
|   |   `-CallExpr 0x5637cf8575a8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5637cf857590 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf857570 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf8575e8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf857400 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5637cf857600 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf857420 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5637cf857618 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf857458 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5637cf857630 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf857558 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf857540 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf8574f8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5637cf857710 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5637cf8576a8 <col:9> 'Router *' lvalue ->_router 0x5637cf8551c0
|   | | `-CXXThisExpr 0x5637cf857698 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5637cf8576f8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5637cf8576d8 <col:19> 'Router *' lvalue ParmVar 0x5637cf848428 'r' 'Router *'
|   `-BinaryOperator 0x5637cf8577a8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5637cf857740 <col:9> 'int' lvalue ->_eindex 0x5637cf855228
|     | `-CXXThisExpr 0x5637cf857730 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5637cf857790 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf857770 <col:19> 'int' lvalue ParmVar 0x5637cf8484a8 'eindex' 'int'
|-CXXMethodDecl 0x5637cf848700 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5637cf848638 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5637cf8487d0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5637cf848898 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5637cf848938 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5637cf848b88 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5637cf848a00 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5637cf848a80 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5637cf848c38 <col:20>
| `-OptimizeNoneAttr 0x5637cf848c90 <col:30>
|-CXXMethodDecl 0x5637cf848d98 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5637cf848cd0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5637cf848e40 <col:20>
| `-OptimizeNoneAttr 0x5637cf848e98 <col:30>
|-CXXMethodDecl 0x5637cf848f68 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5637cf848ed8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5637cf849010 <col:20>
| `-OptimizeNoneAttr 0x5637cf849068 <col:30>
|-CXXMethodDecl 0x5637cf8491f8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5637cf8490a0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5637cf849120 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5637cf849388 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5637cf8492c0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5637cf84bf20 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5637cf849448 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5637cf84c070 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5637cf84bfe0 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5637cf84c1c0 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5637cf84c130 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5637cf84c478 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5637cf84c278 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5637cf84c2f8 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5637cf84c398 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5637cf84c550 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5637cf84c610 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5637cf84c8e0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5637cf84c790 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5637cf84c808 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf84ca08 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5637cf84cbe0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5637cf84cac0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5637cf84cb40 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5637cf84cdc8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5637cf84cca8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5637cf84cd28 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5637cf84d138 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5637cf84ce88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5637cf84cf00 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5637cf84cf80 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5637cf856da8 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5637cf856d88 <col:106> 'int' 0
| `-ParmVarDecl 0x5637cf84cff8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5637cf856de0 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637cf856dc0 <col:126> 'int' 0
|-CXXMethodDecl 0x5637cf84d4b8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5637cf84d208 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5637cf84d280 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5637cf84d300 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5637cf84d378 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5637cf856e18 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637cf856df8 <col:114> 'int' 0
|-CXXMethodDecl 0x5637cf84d848 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5637cf84d590 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5637cf84d608 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5637cf84d688 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5637cf856e30 <col:96> 'int' 0
| `-ParmVarDecl 0x5637cf84d700 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5637cf856e70 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637cf856e50 <col:116> 'int' 0
|-CXXMethodDecl 0x5637cf84dbc8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5637cf84d918 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5637cf84d990 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf84da10 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5637cf856ea8 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5637cf856e88 <col:109> 'int' 0
| `-ParmVarDecl 0x5637cf84da88 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5637cf856ee0 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637cf856ec0 <col:129> 'int' 0
|-CXXMethodDecl 0x5637cf84df48 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5637cf84dc98 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5637cf84dd10 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf84dd90 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5637cf84de08 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5637cf856f18 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637cf856ef8 <col:117> 'int' 0
|-CXXMethodDecl 0x5637cf84e2d8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5637cf84e020 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf84e098 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf84e118 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5637cf856f30 <col:99> 'int' 0
| `-ParmVarDecl 0x5637cf84e190 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5637cf856f70 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5637cf856f50 <col:119> 'int' 0
|-CXXMethodDecl 0x5637cf84e6f8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5637cf84e3a8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5637cf84e428 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5637cf84e4a0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf84e520 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5637cf856fa8 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5637cf856f88 <col:108> 'int' 0
| `-ParmVarDecl 0x5637cf84e5a0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5637cf856fe0 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5637cf856fc0 <col:141> 'int' 0
|-CXXMethodDecl 0x5637cf84eb18 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5637cf84e7d0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5637cf84e850 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5637cf84e8c8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf84e948 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5637cf84e9c8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5637cf856ff8 <col:121> 'int' 0
|-CXXMethodDecl 0x5637cf84ef48 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5637cf84ebf8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5637cf84ec78 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5637cf84ecf0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf84ed70 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5637cf857018 <col:98> 'int' 0
| `-ParmVarDecl 0x5637cf84edf0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5637cf857038 <col:123> 'int' 0
|-CXXMethodDecl 0x5637cf84f210 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5637cf84f020 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5637cf84f0a0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5637cf84f120 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5637cf857058 <col:80> 'int' 0
|-EnumDecl 0x5637cf84f2c8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5637cf84f3d0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5637cf84f660 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf84f3b0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5637cf84f390 <col:42> 'int' 1
| |-EnumConstantDecl 0x5637cf84f460 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5637cf84f678 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf84f440 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5637cf84f420 <col:40> 'int' 2
| |-EnumConstantDecl 0x5637cf84f4f0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5637cf84f690 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf84f4d0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5637cf84f4b0 <col:44> 'int' 4
| |-EnumConstantDecl 0x5637cf84f580 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5637cf84f6a8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf84f560 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5637cf84f540 <col:36> 'int' 7
| `-EnumConstantDecl 0x5637cf84f610 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5637cf84f6c0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf84f5f0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5637cf84f5d0 <col:34> 'int' 6
|-CXXMethodDecl 0x5637cf84f978 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5637cf84f6e8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5637cf84f788 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5637cf84f808 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5637cf84f880 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5637cf857110 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5637cf8570f8 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5637cf8570e0 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5637cf8570c0 <col:98, col:105> 'String' (CXXTemporary 0x5637cf8570c0)
|           `-CXXTemporaryObjectExpr 0x5637cf857088 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5637cf84fc18 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5637cf84fa48 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5637cf84fac0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5637cf84fb38 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5637cf8571c0 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5637cf8571a8 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5637cf857190 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5637cf857170 <col:94, col:101> 'String' (CXXTemporary 0x5637cf857170)
| |         `-CXXTemporaryObjectExpr 0x5637cf857138 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5637cf8579b0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5637cf857928 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5637cf8578f8 <col:9> '<bound member function type>' ->add_task_handlers 0x5637cf84f978
|     | `-CXXThisExpr 0x5637cf8578e8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5637cf857968 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5637cf857868 <col:27> 'Task *' lvalue ParmVar 0x5637cf84fa48 'task' 'Task *'
|     |-ImplicitCastExpr 0x5637cf857980 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5637cf857888 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5637cf84fac0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5637cf857998 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5637cf8578a8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5637cf84f610 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5637cf8578c8 <col:62> 'const String' lvalue ParmVar 0x5637cf84fb38 'prefix' 'const String &'
|-CXXMethodDecl 0x5637cf84fe28 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5637cf84fce0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5637cf84fd58 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5637cf857270 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5637cf857258 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5637cf857240 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5637cf857220 <col:70, col:77> 'String' (CXXTemporary 0x5637cf857220)
| |         `-CXXTemporaryObjectExpr 0x5637cf8571e8 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5637cf857b88 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5637cf857b00 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5637cf857ad0 <col:9> '<bound member function type>' ->add_task_handlers 0x5637cf84f978
|     | `-CXXThisExpr 0x5637cf857ac0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5637cf857b40 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5637cf857a40 <col:27> 'Task *' lvalue ParmVar 0x5637cf84fce0 'task' 'Task *'
|     |-ImplicitCastExpr 0x5637cf857b58 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5637cf857a60 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5637cf857b70 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5637cf857a80 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5637cf84f610 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5637cf857aa0 <col:57> 'const String' lvalue ParmVar 0x5637cf84fd58 'prefix' 'const String &'
|-CXXMethodDecl 0x5637cf850108 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5637cf84fef0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf84ff70 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf84ffe8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5637cf8503b8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5637cf8501d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf850258 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf8502d8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5637cf8506a8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5637cf850488 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf850508 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf850580 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5637cf850958 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5637cf850778 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf8507f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf850878 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5637cf850c08 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5637cf850a28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf850aa8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf850b28 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5637cf850eb8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5637cf850cd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf850d58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf850dd0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5637cf851168 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5637cf850f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf851008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf851088 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5637cf851418 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5637cf851238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf8512b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf851338 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5637cf8516c8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5637cf8514e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf851568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf8515e8 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5637cf851978 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5637cf851798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf851818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf851898 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5637cf851be0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5637cf851a48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5637cf851ac8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5637cf851b40 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5637cf851e88 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5637cf851cb0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5637cf851d30 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5637cf851da8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5637cf852138 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5637cf851f58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf851fd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf852058 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5637cf8523e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5637cf852208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf852288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf852300 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5637cf852698 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5637cf8524b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf852538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf8525b0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5637cf852948 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5637cf852768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf8527e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5637cf852860 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5637cf852c78 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5637cf852a18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5637cf852a98 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5637cf852b10 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5637cf852b88 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf857288 <col:93> 'bool' false
|-CXXMethodDecl 0x5637cf852e60 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5637cf852d48 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5637cf852dc8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5637cf853038 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5637cf852f20 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5637cf852fa0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5637cf853318 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf8530f8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5637cf853170 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5637cf8531f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5637cf853268 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf853608 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf8533e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5637cf853460 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5637cf8534e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5637cf853558 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf853840 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5637cf8536e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5637cf853760 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5637cf853a28 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5637cf853908 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5637cf853988 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5637cf853ad8 prev 0x5637cf848938 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5637cf853bd0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5637cf853c60 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5637cf853cd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5637cf853d98 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5637cf853e60 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5637cf853ff8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5637cf853f30 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5637cf8540a0 <col:24>
| | `-OptimizeNoneAttr 0x5637cf8540f8 <col:34>
| |-CXXMethodDecl 0x5637cf854140 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5637cf8543f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5637cf8541f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5637cf854268 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5637cf8542e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5637cf8544b0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5637cf8544e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5637cf854550 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5637cf8545d8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5637cf8548f8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5637cf854690 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5637cf854708 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5637cf854780 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5637cf854800 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5637cf854a10 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5637cf85b2f8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5637cf85b2f8
| | `-ParmVarDecl 0x5637cf85b408 <col:11> col:11 'const Element::Port &'
| `-CXXConstructorDecl 0x5637cf85b4a8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5637cf85b4a8
|   `-ParmVarDecl 0x5637cf85b5b8 <col:11> col:11 'Element::Port &&'
|-CXXMethodDecl 0x5637cf854a88 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5637cf854b28 <col:38> "" ""
|-CXXMethodDecl 0x5637cf854bb8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5637cf854c58 <col:44> "" ""
|-AccessSpecDecl 0x5637cf854cc8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5637cf854cf0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5637cf854df0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5637cf854e40 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf854dd0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5637cf854db0 <col:27> 'int' 4
|-FieldDecl 0x5637cf854ef8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5637cf8550a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5637cf855160 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5637cf8551c0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5637cf855228 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5637cf855378 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5637cf8552b8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5637cf855528 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5637cf855438 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5637cf855708 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5637cf8555e8 <col:20> col:23 'int'
| `-ParmVarDecl 0x5637cf855668 <col:25> col:28 'int'
|-CXXMethodDecl 0x5637cf8559b0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf8557d0 <col:23> col:26 'int'
| |-ParmVarDecl 0x5637cf855850 <col:28> col:31 'int'
| `-ParmVarDecl 0x5637cf8558c8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5637cf855a68 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5637cf855b30 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5637cf855b80 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5637cf855bd0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5637cf855db0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf855c60 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5637cf855cd8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf856058 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5637cf855e78 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5637cf855ef8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5637cf855f70 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf856278 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5637cf856128 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5637cf8561a8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5637cf8565b0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5637cf856338 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5637cf8563b8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5637cf856430 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5637cf8564b0 <col:57> col:60 'int'
|-CXXMethodDecl 0x5637cf856798 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5637cf856680 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5637cf856700 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5637cf8568e8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5637cf856858 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5637cf856c68 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5637cf8569a8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5637cf856a28 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5637cf856aa0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5637cf856b20 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5637cf856d48 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf860a98 <../elements/ip/iproutetable.hh:188:1, line:212:1> line:188:7 referenced class IPRouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5637cf860bf8 <col:1, col:7> col:7 implicit class IPRouteTable
|-AccessSpecDecl 0x5637cf860c88 <col:39, col:45> col:39 public
|-CXXMethodDecl 0x5637cf860d88 <line:190:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5637cf846710 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5637cf860cc8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x5637cf861060 <line:191:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5637cf8471b0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5637cf860f10 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x5637cf860f88 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf861130 <line:192:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5637cf847280 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5637cf861440 <line:194:5, col:112> col:17 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5637cf8611e0 <col:27, col:42> col:42 route 'const IPRoute &'
| |-ParmVarDecl 0x5637cf861258 <col:49, col:54> col:54 allow_replace 'bool'
| |-ParmVarDecl 0x5637cf8612d0 <col:69, col:78> col:78 replaced_route 'IPRoute *'
| `-ParmVarDecl 0x5637cf861348 <col:94, col:108> col:108 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf8616f0 <line:195:5, col:94> col:17 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5637cf861510 <col:30, col:45> col:45 route 'const IPRoute &'
| |-ParmVarDecl 0x5637cf861588 <col:52, col:61> col:61 removed_route 'IPRoute *'
| `-ParmVarDecl 0x5637cf861600 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf861940 <line:196:5, col:69> col:17 lookup_route 'int (IPAddress, IPAddress &) const' virtual pure
| |-ParmVarDecl 0x5637cf8617b8 <col:30, col:40> col:40 addr 'IPAddress'
| `-ParmVarDecl 0x5637cf861830 <col:46, col:57> col:57 gw 'IPAddress &'
|-CXXMethodDecl 0x5637cf861a10 <line:197:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x5637cf861bd8 <line:199:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5637cf844958 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5637cf861ac8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5637cf861b40 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5637cf861eb8 <line:201:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf861c98 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x5637cf861d10 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x5637cf861d90 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x5637cf861e08 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf8621a8 <line:202:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf861f88 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x5637cf862000 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x5637cf862080 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x5637cf8620f8 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf862498 <line:203:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf862278 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x5637cf8622f0 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x5637cf862370 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x5637cf8623e8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf862808 <line:204:5, col:94> col:16 lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf862570 <col:31, col:35> col:35 operation 'int'
| |-ParmVarDecl 0x5637cf8625e8 <col:46, col:52> col:53 'String &'
| |-ParmVarDecl 0x5637cf862660 <col:55, col:62> col:63 'Element *'
| |-ParmVarDecl 0x5637cf8626d8 <col:65, col:78> col:79 'const Handler *'
| `-ParmVarDecl 0x5637cf862750 <col:81, col:93> col:94 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf8629f8 <line:205:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5637cf8628e0 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x5637cf862960 <col:43, col:47> col:48 'void *'
|-AccessSpecDecl 0x5637cf862aa8 <line:207:3, col:10> col:3 private
|-EnumDecl 0x5637cf862ad0 <line:209:5, col:41> col:5
| |-EnumConstantDecl 0x5637cf862b90 <col:12> col:12 CMD_ADD 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| |-EnumConstantDecl 0x5637cf862be0 <col:21> col:21 CMD_SET 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| `-EnumConstantDecl 0x5637cf862c30 <col:30> col:30 CMD_REMOVE 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
|-CXXMethodDecl 0x5637cf863150 <line:210:5, col:92> col:9 run_command 'int (int, const String &, Vector<IPRoute> *, ErrorHandler *)'
| |-ParmVarDecl 0x5637cf862c98 <col:21, col:25> col:25 command 'int'
| |-ParmVarDecl 0x5637cf862d10 <col:34, col:47> col:48 'const String &'
| |-ParmVarDecl 0x5637cf862f90 <col:50, col:67> col:67 old_routes 'Vector<IPRoute> *'
| `-ParmVarDecl 0x5637cf863008 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXConstructorDecl 0x5637cf863250 <line:188:7> col:7 implicit IPRouteTable 'void (const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x5637cf863250
| `-ParmVarDecl 0x5637cf863368 <col:7> col:7 'const IPRouteTable &'
|-CXXConstructorDecl 0x5637cf863408 <col:7> col:7 implicit IPRouteTable 'void (IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x5637cf863408
| `-ParmVarDecl 0x5637cf863518 <col:7> col:7 'IPRouteTable &&'
|-CXXMethodDecl 0x5637cf8635b8 <col:7> col:7 implicit operator= 'IPRouteTable &(const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x5637cf8635b8
| `-ParmVarDecl 0x5637cf8636c8 <col:7> col:7 'const IPRouteTable &'
|-CXXMethodDecl 0x5637cf863738 <col:7> col:7 implicit operator= 'IPRouteTable &(IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x5637cf863738
| `-ParmVarDecl 0x5637cf863848 <col:7> col:7 'IPRouteTable &&'
`-CXXDestructorDecl 0x5637cf8638d0 <col:7> col:7 implicit ~IPRouteTable 'void ()' inline default noexcept-unevaluated 0x5637cf8638d0
  `-Overrides: [ 0x5637cf844688 Element::~Element 'void ()' ]

Layout: <CGRecordLayout
  LLVMType:%class.IPRouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<20> >
         0 |   vector_memory<class sized_array_memory<20> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct IPRoute>
         0 |   class vector_memory<class sized_array_memory<20> > vm_
         0 |     vector_memory<class sized_array_memory<20> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct RadixIPLookup::GWPort>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class RadixIPLookup
         0 |   class IPRouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   class Vector<struct IPRoute> _v
       112 |     class vector_memory<class sized_array_memory<20> > vm_
       112 |       vector_memory<class sized_array_memory<20> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   int _vfree
       136 |   class Vector<struct RadixIPLookup::GWPort> _lookup
       136 |     class vector_memory<class sized_array_memory<8> > vm_
       136 |       vector_memory<class sized_array_memory<8> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   int _default_key
       160 |   class RadixIPLookup::Radix * _radix
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf869770 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<20>'
|-CXXRecordDecl 0x5637cf869948 prev 0x5637cf869770 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5637cf8699d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5637cf869a00 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf86b5d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<20>::type':'char_array<20>'
| `-ElaboratedType 0x5637cf86b580 'typename sized_array_memory<20>::type' sugar
|   `-TypedefType 0x5637cf869eb0 'sized_array_memory<20>::type' sugar
|     |-Typedef 0x5637cf869db0 'type'
|     `-TemplateSpecializationType 0x5637cf869d40 'char_array<20UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5637cf869c20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|       |   `-SubstNonTypeTemplateParmExpr 0x5637cf869c00 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5637cf869be0 <col:24> 'unsigned long' 20
|       `-RecordType 0x5637cf869d20 'char_array<20>'
|         `-ClassTemplateSpecialization 0x5637cf869c40 'char_array'
|-TypedefDecl 0x5637cf86b688 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<20> >::type *'
| `-PointerType 0x5637cf86b650 'vector_memory<sized_array_memory<20> >::type *'
|   `-TypedefType 0x5637cf86b630 'vector_memory<sized_array_memory<20> >::type' sugar
|     |-Typedef 0x5637cf86b5d0 'type'
|     `-ElaboratedType 0x5637cf86b580 'typename sized_array_memory<20>::type' sugar
|       `-TypedefType 0x5637cf869eb0 'sized_array_memory<20>::type' sugar
|         |-Typedef 0x5637cf869db0 'type'
|         `-TemplateSpecializationType 0x5637cf869d40 'char_array<20UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5637cf869c20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|           |   `-SubstNonTypeTemplateParmExpr 0x5637cf869c00 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5637cf869be0 <col:24> 'unsigned long' 20
|           `-RecordType 0x5637cf869d20 'char_array<20>'
|             `-ClassTemplateSpecialization 0x5637cf869c40 'char_array'
|-CXXMethodDecl 0x5637cf86b808 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<20> >::type *) const' inline
| `-ParmVarDecl 0x5637cf86b718 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXConstructorDecl 0x5637cf86b8f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5637cf86b9d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5637cf86b9d8
|-CXXMethodDecl 0x5637cf86bca8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x5637cf86bbb0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<20> > &'
|-CXXMethodDecl 0x5637cf86bee8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5637cf86bd60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf86bdd8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf86c0b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5637cf86bfa8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf86c020 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf86c218 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x5637cf86c2e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x5637cf86c538 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5637cf86c3a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x5637cf86c420 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf86c798 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, vector_memory<sized_array_memory<20> >::iterator)'
| |-ParmVarDecl 0x5637cf86c608 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x5637cf86c680 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf86c958 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x5637cf86c868 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf86cb18 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x5637cf86ca20 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf86cbd0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5637cf86cc80 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf86ceb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5637cf86cd30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf86cda8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5637cf870228 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x5637cf870130 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<20> > &'
|-FieldDecl 0x5637cf8702f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<20> >::type *'
|-FieldDecl 0x5637cf870340 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5637cf870390 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf862d88 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRoute'
|-CXXRecordDecl 0x5637cf8682b8 prev 0x5637cf862d88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5637cf8696e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRoute>::type':'sized_array_memory<20>'
| `-ElaboratedType 0x5637cf869690 'typename array_memory<IPRoute>::type' sugar
|   `-TypedefType 0x5637cf869670 'conditional<true, sized_array_memory<20>, typed_array_memory<IPRoute> >::type' sugar
|     |-Typedef 0x5637cf869520 'type'
|     `-SubstTemplateTypeParmType 0x5637cf869340 'sized_array_memory<20>' sugar
|       |-TemplateTypeParmType 0x5637cf54ca40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf54c9e8 'T'
|       `-RecordType 0x5637cf868e90 'sized_array_memory<20>'
|         `-ClassTemplateSpecialization 0x5637cf868db0 'sized_array_memory'
|-FieldDecl 0x5637cf8703e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRoute>::array_memory_type>':'vector_memory<sized_array_memory<20> >' mutable
|-AccessSpecDecl 0x5637cf870430 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5637cf870468 <line:118:5, col:15> col:15 value_type 'IPRoute':'IPRoute'
| `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|   |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5637cf59b160 'T'
|   `-RecordType 0x5637cf85e560 'IPRoute'
|     `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf870528 <line:119:5, col:16> col:16 reference 'IPRoute &'
| `-LValueReferenceType 0x5637cf8704f0 'IPRoute &'
|   `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf85e560 'IPRoute'
|       `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf8705b8 <line:120:5, col:22> col:22 const_reference 'const IPRoute &'
| `-LValueReferenceType 0x5637cf870580 'const IPRoute &'
|   `-QualType 0x5637cf868351 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf85e560 'IPRoute'
|         `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf870648 <line:121:5, col:16> col:16 pointer 'IPRoute *'
| `-PointerType 0x5637cf870610 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf85e560 'IPRoute'
|       `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf8706d8 <line:122:5, col:22> col:22 const_pointer 'const IPRoute *'
| `-PointerType 0x5637cf8706a0 'const IPRoute *'
|   `-QualType 0x5637cf868351 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf85e560 'IPRoute'
|         `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf871330 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRoute>::type':'const IPRoute &'
| `-ElaboratedType 0x5637cf8712e0 'typename fast_argument<IPRoute>::type' sugar
|   `-TypedefType 0x5637cf8712c0 'fast_argument<IPRoute, true>::type' sugar
|     |-Typedef 0x5637cf8711f8 'type'
|     `-LValueReferenceType 0x5637cf8711c0 'const IPRoute &'
|       `-QualType 0x5637cf870f61 'const IPRoute' const
|         `-SubstTemplateTypeParmType 0x5637cf870f60 'IPRoute' sugar
|           |-TemplateTypeParmType 0x5637cf555e50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5637cf555df8 'T'
|           `-RecordType 0x5637cf85e560 'IPRoute'
|             `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf871398 <line:126:5, col:22> col:22 const_access_type 'const IPRoute &'
| `-LValueReferenceType 0x5637cf870580 'const IPRoute &'
|   `-QualType 0x5637cf868351 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf85e560 'IPRoute'
|         `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf8713f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf871458 <line:130:5, col:16> col:16 iterator 'IPRoute *'
| `-PointerType 0x5637cf870610 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf85e560 'IPRoute'
|       `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-TypedefDecl 0x5637cf8714c0 <line:131:5, col:22> col:22 const_iterator 'const IPRoute *'
| `-PointerType 0x5637cf8706a0 'const IPRoute *'
|   `-QualType 0x5637cf868351 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5637cf868350 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf85e560 'IPRoute'
|         `-CXXRecord 0x5637cf85e4c8 'IPRoute'
|-EnumDecl 0x5637cf871518 <line:134:5> col:5
| `-EnumConstantDecl 0x5637cf871610 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRoute>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5637cf8715f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5637cf59c1e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5637cf59c1c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5637cf59c1a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5637cf871698 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5637cf871928 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf871750 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf8717f0 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXConstructorDecl 0x5637cf871be8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x5637cf871ad0 <col:19, col:36> col:36 x 'const Vector<IPRoute> &'
|-CXXConstructorDecl 0x5637cf871ea8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x5637cf871d90 <col:19, col:31> col:31 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x5637cf8721f0 <line:144:5, col:51> col:23 operator= 'Vector<IPRoute> &(const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x5637cf8720d0 <col:33, col:50> col:50 x 'const Vector<IPRoute> &'
|-CXXMethodDecl 0x5637cf872500 <line:146:5, col:46> col:23 operator= 'Vector<IPRoute> &(Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x5637cf8723e0 <col:33, col:45> col:45 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x5637cf8727f0 <line:148:5, col:70> col:23 assign 'Vector<IPRoute> &(Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf872638 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf8726b0 <col:43, col:69> col:63 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5637cf872948 <line:150:5, col:55> col:49 begin 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x5637cf8729f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf872a50 <col:30> Inherited
|-CXXMethodDecl 0x5637cf872a98 <line:151:5, col:53> col:49 end 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x5637cf872b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf872ba0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf872c68 <line:152:5, col:63> col:55 begin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5637cf872d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf872d70 <col:30> Inherited
|-CXXMethodDecl 0x5637cf872db8 <line:153:5, col:61> col:55 end 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5637cf872e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf872ec0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf872f08 <line:154:5, col:64> col:55 cbegin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5637cf872fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf873010 <col:30> Inherited
|-CXXMethodDecl 0x5637cf873058 <line:155:5, col:62> col:55 cend 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5637cf873108 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf873160 <col:30> Inherited
|-CXXMethodDecl 0x5637cf873188 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5637cf873238 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5637cf8732e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5637cf8734a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf873398 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf873410 <col:37, col:63> col:57 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5637cf8735f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf873568 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf8737a8 <line:163:5, col:65> col:43 operator[] 'IPRoute &(Vector::size_type)'
| |-ParmVarDecl 0x5637cf8736b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5637cf873860 <col:20>
| `-OptimizeNoneAttr 0x5637cf8738b8 <col:30>
|-CXXMethodDecl 0x5637cf8739d8 <line:164:5, col:73> col:49 operator[] 'const IPRoute &(Vector::size_type) const'
| |-ParmVarDecl 0x5637cf8738e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5637cf873a90 <col:20>
| `-OptimizeNoneAttr 0x5637cf873ae8 <col:30>
|-CXXMethodDecl 0x5637cf873ba0 <line:165:5, col:29> col:15 at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf873b10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf873ce8 <line:166:5, col:37> col:21 at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5637cf873c58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf873e18 <line:167:5, col:21> col:15 front 'IPRoute &()' inline
|-CXXMethodDecl 0x5637cf873f48 <line:168:5, col:29> col:21 front 'const IPRoute &() const' inline
|-CXXMethodDecl 0x5637cf874018 <line:169:5, col:20> col:15 back 'IPRoute &()' inline
|-CXXMethodDecl 0x5637cf8740e8 <line:170:5, col:28> col:21 back 'const IPRoute &() const' inline
|-CXXMethodDecl 0x5637cf874228 <line:172:5, col:39> col:15 unchecked_at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf874198 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf874370 <line:173:5, col:47> col:21 unchecked_at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5637cf8742e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf8744b8 <line:174:5, col:59> col:15 at_u 'IPRoute &(Vector::size_type)' inline
| |-ParmVarDecl 0x5637cf874428 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5637cf874570 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5637cf874670 <line:175:5, col:71> col:21 at_u 'const IPRoute &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5637cf8745e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5637cf874728 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5637cf8747e8 <line:177:5, col:20> col:15 data 'IPRoute *()' inline
|-CXXMethodDecl 0x5637cf8748e8 <line:178:5, col:28> col:21 data 'const IPRoute *() const' inline
|-CXXMethodDecl 0x5637cf874a98 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x5637cf8749a8 <col:27, col:47> col:47 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-FunctionTemplateDecl 0x5637cf875258 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5637cf874b50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRoute>':'fast_argument<IPRoute, true>'
| `-CXXMethodDecl 0x5637cf8751b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRoute &&)' inline
|   `-ParmVarDecl 0x5637cf8750b8 <col:58, col:62> col:62 v 'IPRoute &&'
|-CXXMethodDecl 0x5637cf875338 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5637cf875488 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x5637cf8753f8 <col:28, col:48> col:48 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5637cf875540 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5637cf875788 <line:189:5, col:62> col:21 insert 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf875600 <col:28, col:37> col:37 it 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x5637cf875678 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5637cf875948 <line:190:5, col:38> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator)' inline
| `-ParmVarDecl 0x5637cf875858 <col:27, col:36> col:36 it 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x5637cf875b98 <line:191:5, col:49> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::iterator)' inline
| |-ParmVarDecl 0x5637cf875a10 <col:27, col:36> col:36 a 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x5637cf875a88 <col:39, col:48> col:48 b 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x5637cf875c58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf875eb8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x5637cf875dc0 <col:22, col:33> col:33 x 'Vector<IPRoute> &'
`-CXXDestructorDecl 0x5637cf875f88 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5637cf875f88

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf8775e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5637cf8777b8 prev 0x5637cf8775e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5637cf877848 <col:46, col:52> col:46 public
|-TypedefDecl 0x5637cf877870 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf8794b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5637cf879460 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x5637cf877d20 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x5637cf877c20 'type'
|     `-TemplateSpecializationType 0x5637cf877bb0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5637cf877a90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x5637cf877a70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5637cf877a50 <col:24> 'unsigned long' 8
|       `-RecordType 0x5637cf877b90 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5637cf877ab0 'char_array'
|-TypedefDecl 0x5637cf879568 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5637cf879530 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x5637cf879510 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x5637cf8794b0 'type'
|     `-ElaboratedType 0x5637cf879460 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x5637cf877d20 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x5637cf877c20 'type'
|         `-TemplateSpecializationType 0x5637cf877bb0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5637cf877a90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x5637cf877a70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5637cf877a50 <col:24> 'unsigned long' 8
|           `-RecordType 0x5637cf877b90 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5637cf877ab0 'char_array'
|-CXXMethodDecl 0x5637cf8796e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5637cf8795f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5637cf8797d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5637cf8798b8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5637cf8798b8
|-CXXMethodDecl 0x5637cf879b88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5637cf879a90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x5637cf879dc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5637cf879c40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf879cb8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf879f98 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5637cf879e88 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf879f00 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf87a0f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5637cf87a1c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5637cf87a418 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5637cf87a288 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5637cf87a300 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf87a678 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x5637cf87a4e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5637cf87a560 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf87a838 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5637cf87a748 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf87a9f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5637cf87a900 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf87aab0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5637cf87ab60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf87ad98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5637cf87ac10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf87ac88 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5637cf87b038 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5637cf87af40 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x5637cf87b100 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5637cf87b150 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5637cf87b1a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf876138 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'RadixIPLookup::GWPort'
|-CXXRecordDecl 0x5637cf876348 prev 0x5637cf876138 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5637cf877550 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<GWPort>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5637cf877500 'typename array_memory<GWPort>::type' sugar
|   `-TypedefType 0x5637cf8774e0 'conditional<true, sized_array_memory<8>, typed_array_memory<RadixIPLookup::GWPort> >::type' sugar
|     |-Typedef 0x5637cf877390 'type'
|     `-SubstTemplateTypeParmType 0x5637cf8771b0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5637cf54ca40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf54c9e8 'T'
|       `-RecordType 0x5637cf876d00 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5637cf876c18 'sized_array_memory'
|-FieldDecl 0x5637cf87b1f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<RadixIPLookup::GWPort>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5637cf87b240 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5637cf87b278 <line:118:5, col:15> col:15 value_type 'RadixIPLookup::GWPort':'RadixIPLookup::GWPort'
| `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|   |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5637cf59b160 'T'
|   `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|     `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87b338 <line:119:5, col:16> col:16 reference 'RadixIPLookup::GWPort &'
| `-LValueReferenceType 0x5637cf87b300 'RadixIPLookup::GWPort &'
|   `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|       `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87b3f8 <line:120:5, col:22> col:22 const_reference 'const RadixIPLookup::GWPort &'
| `-LValueReferenceType 0x5637cf87b3c0 'const RadixIPLookup::GWPort &'
|   `-QualType 0x5637cf8763e1 'const RadixIPLookup::GWPort' const
|     `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|         `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87b4b8 <line:121:5, col:16> col:16 pointer 'RadixIPLookup::GWPort *'
| `-PointerType 0x5637cf87b480 'RadixIPLookup::GWPort *'
|   `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|       `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87b578 <line:122:5, col:22> col:22 const_pointer 'const RadixIPLookup::GWPort *'
| `-PointerType 0x5637cf87b540 'const RadixIPLookup::GWPort *'
|   `-QualType 0x5637cf8763e1 'const RadixIPLookup::GWPort' const
|     `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|         `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87c150 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<GWPort>::type':'RadixIPLookup::GWPort'
| `-ElaboratedType 0x5637cf87c100 'typename fast_argument<GWPort>::type' sugar
|   `-TypedefType 0x5637cf87c0e0 'fast_argument<RadixIPLookup::GWPort, false>::type' sugar
|     |-Typedef 0x5637cf87c070 'type'
|     `-SubstTemplateTypeParmType 0x5637cf87be30 'RadixIPLookup::GWPort' sugar
|       |-TemplateTypeParmType 0x5637cf556580 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf556530 'T'
|       `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|         `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87c1b8 <line:126:5, col:22> col:22 const_access_type 'const RadixIPLookup::GWPort &'
| `-LValueReferenceType 0x5637cf87b3c0 'const RadixIPLookup::GWPort &'
|   `-QualType 0x5637cf8763e1 'const RadixIPLookup::GWPort' const
|     `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|         `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87c210 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf87c278 <line:130:5, col:16> col:16 iterator 'RadixIPLookup::GWPort *'
| `-PointerType 0x5637cf87b480 'RadixIPLookup::GWPort *'
|   `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|       `-CXXRecord 0x5637cf8675e8 'GWPort'
|-TypedefDecl 0x5637cf87c2e0 <line:131:5, col:22> col:22 const_iterator 'const RadixIPLookup::GWPort *'
| `-PointerType 0x5637cf87b540 'const RadixIPLookup::GWPort *'
|   `-QualType 0x5637cf8763e1 'const RadixIPLookup::GWPort' const
|     `-SubstTemplateTypeParmType 0x5637cf8763e0 'RadixIPLookup::GWPort' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf867680 'RadixIPLookup::GWPort'
|         `-CXXRecord 0x5637cf8675e8 'GWPort'
|-EnumDecl 0x5637cf87c338 <line:134:5> col:5
| `-EnumConstantDecl 0x5637cf87c430 <col:12, col:40> col:12 RESERVE_GROW 'Vector<RadixIPLookup::GWPort>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5637cf87c410 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5637cf59c1e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5637cf59c1c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5637cf59c1a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5637cf87c4b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5637cf87c748 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<RadixIPLookup::GWPort>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf87c570 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf87c610 <col:41, col:61> col:61 v 'Vector<RadixIPLookup::GWPort>::value_argument_type':'RadixIPLookup::GWPort'
|-CXXConstructorDecl 0x5637cf87ca08 <line:139:5, col:37> col:12 Vector 'void (const Vector<RadixIPLookup::GWPort> &)' inline
| `-ParmVarDecl 0x5637cf87c8f0 <col:19, col:36> col:36 x 'const Vector<RadixIPLookup::GWPort> &'
|-CXXConstructorDecl 0x5637cf87ccc8 <line:141:5, col:32> col:12 Vector 'void (Vector<RadixIPLookup::GWPort> &&)' inline
| `-ParmVarDecl 0x5637cf87cbb0 <col:19, col:31> col:31 x 'Vector<RadixIPLookup::GWPort> &&'
|-CXXMethodDecl 0x5637cf87d010 <line:144:5, col:51> col:23 operator= 'Vector<RadixIPLookup::GWPort> &(const Vector<RadixIPLookup::GWPort> &)' inline
| `-ParmVarDecl 0x5637cf87cef0 <col:33, col:50> col:50 x 'const Vector<RadixIPLookup::GWPort> &'
|-CXXMethodDecl 0x5637cf87d320 <line:146:5, col:46> col:23 operator= 'Vector<RadixIPLookup::GWPort> &(Vector<RadixIPLookup::GWPort> &&)' inline
| `-ParmVarDecl 0x5637cf87d200 <col:33, col:45> col:45 x 'Vector<RadixIPLookup::GWPort> &&'
|-CXXMethodDecl 0x5637cf87d610 <line:148:5, col:70> col:23 assign 'Vector<RadixIPLookup::GWPort> &(Vector::size_type, Vector<RadixIPLookup::GWPort>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf87d458 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf87d4d0 <col:43, col:69> col:63 v 'Vector<RadixIPLookup::GWPort>::value_argument_type':'RadixIPLookup::GWPort'
|-CXXMethodDecl 0x5637cf87d768 <line:150:5, col:55> col:49 begin 'Vector<RadixIPLookup::GWPort>::iterator ()'
| |-NoInlineAttr 0x5637cf87d848 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf87d8a0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf87d8e8 <line:151:5, col:53> col:49 end 'Vector<RadixIPLookup::GWPort>::iterator ()'
| |-NoInlineAttr 0x5637cf87d998 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf87d9f0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf87dab8 <line:152:5, col:63> col:55 begin 'Vector<RadixIPLookup::GWPort>::const_iterator () const'
| |-NoInlineAttr 0x5637cf87db68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf87dbc0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf87dc08 <line:153:5, col:61> col:55 end 'Vector<RadixIPLookup::GWPort>::const_iterator () const'
| |-NoInlineAttr 0x5637cf87dcb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf87dd10 <col:30> Inherited
|-CXXMethodDecl 0x5637cf87dd58 <line:154:5, col:64> col:55 cbegin 'Vector<RadixIPLookup::GWPort>::const_iterator () const'
| |-NoInlineAttr 0x5637cf87de08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf87de60 <col:30> Inherited
|-CXXMethodDecl 0x5637cf87dea8 <line:155:5, col:62> col:55 cend 'Vector<RadixIPLookup::GWPort>::const_iterator () const'
| |-NoInlineAttr 0x5637cf87df58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf87dfb0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf87dfd8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5637cf87e088 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5637cf87e138 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5637cf87e2f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<RadixIPLookup::GWPort>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf87e1e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf87e260 <col:37, col:63> col:57 v 'Vector<RadixIPLookup::GWPort>::value_argument_type':'RadixIPLookup::GWPort'
|-CXXMethodDecl 0x5637cf87e448 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf87e3b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf87e5f8 <line:163:5, col:65> col:43 used operator[] 'RadixIPLookup::GWPort &(Vector::size_type)'
| |-ParmVarDecl 0x5637cf87e500 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5637cf87e6b0 <col:20>
| `-OptimizeNoneAttr 0x5637cf87e708 <col:30>
|-CXXMethodDecl 0x5637cf87e828 <line:164:5, col:73> col:49 operator[] 'const RadixIPLookup::GWPort &(Vector::size_type) const'
| |-ParmVarDecl 0x5637cf87e730 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5637cf87e8e0 <col:20>
| `-OptimizeNoneAttr 0x5637cf87e938 <col:30>
|-CXXMethodDecl 0x5637cf87e9f0 <line:165:5, col:29> col:15 at 'RadixIPLookup::GWPort &(Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf87e960 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf87eb38 <line:166:5, col:37> col:21 at 'const RadixIPLookup::GWPort &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5637cf87eaa8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf87ec68 <line:167:5, col:21> col:15 front 'RadixIPLookup::GWPort &()' inline
|-CXXMethodDecl 0x5637cf87ed98 <line:168:5, col:29> col:21 front 'const RadixIPLookup::GWPort &() const' inline
|-CXXMethodDecl 0x5637cf87ee68 <line:169:5, col:20> col:15 back 'RadixIPLookup::GWPort &()' inline
|-CXXMethodDecl 0x5637cf87ef38 <line:170:5, col:28> col:21 back 'const RadixIPLookup::GWPort &() const' inline
|-CXXMethodDecl 0x5637cf87f078 <line:172:5, col:39> col:15 unchecked_at 'RadixIPLookup::GWPort &(Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf87efe8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf87f1c0 <line:173:5, col:47> col:21 unchecked_at 'const RadixIPLookup::GWPort &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5637cf87f130 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf87f308 <line:174:5, col:59> col:15 at_u 'RadixIPLookup::GWPort &(Vector::size_type)' inline
| |-ParmVarDecl 0x5637cf87f278 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5637cf87f3c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5637cf87f4c0 <line:175:5, col:71> col:21 at_u 'const RadixIPLookup::GWPort &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5637cf87f430 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5637cf87f578 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5637cf87f638 <line:177:5, col:20> col:15 data 'RadixIPLookup::GWPort *()' inline
|-CXXMethodDecl 0x5637cf87f738 <line:178:5, col:28> col:21 data 'const RadixIPLookup::GWPort *() const' inline
|-CXXMethodDecl 0x5637cf87f8e8 <line:180:5, col:48> col:17 push_back 'void (Vector<RadixIPLookup::GWPort>::value_argument_type)' inline
| `-ParmVarDecl 0x5637cf87f7f8 <col:27, col:47> col:47 v 'Vector<RadixIPLookup::GWPort>::value_argument_type':'RadixIPLookup::GWPort'
|-FunctionTemplateDecl 0x5637cf8800f0 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5637cf87f9a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<RadixIPLookup::GWPort>':'fast_argument<RadixIPLookup::GWPort, false>'
| `-CXXMethodDecl 0x5637cf880050 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (RadixIPLookup::GWPort &&)' inline
|   `-ParmVarDecl 0x5637cf87ff08 <col:58, col:62> col:62 v 'RadixIPLookup::GWPort &&'
|-CXXMethodDecl 0x5637cf8801d0 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5637cf880320 <line:186:5, col:49> col:17 push_front 'void (Vector<RadixIPLookup::GWPort>::value_argument_type)' inline
| `-ParmVarDecl 0x5637cf880290 <col:28, col:48> col:48 v 'Vector<RadixIPLookup::GWPort>::value_argument_type':'RadixIPLookup::GWPort'
|-CXXMethodDecl 0x5637cf8803d8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5637cf880628 <line:189:5, col:62> col:21 insert 'Vector<RadixIPLookup::GWPort>::iterator (Vector<RadixIPLookup::GWPort>::iterator, Vector<RadixIPLookup::GWPort>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf880498 <col:28, col:37> col:37 it 'Vector<RadixIPLookup::GWPort>::iterator':'RadixIPLookup::GWPort *'
| `-ParmVarDecl 0x5637cf880510 <col:41, col:61> col:61 v 'Vector<RadixIPLookup::GWPort>::value_argument_type':'RadixIPLookup::GWPort'
|-CXXMethodDecl 0x5637cf8807e8 <line:190:5, col:38> col:21 erase 'Vector<RadixIPLookup::GWPort>::iterator (Vector<RadixIPLookup::GWPort>::iterator)' inline
| `-ParmVarDecl 0x5637cf8806f8 <col:27, col:36> col:36 it 'Vector<RadixIPLookup::GWPort>::iterator':'RadixIPLookup::GWPort *'
|-CXXMethodDecl 0x5637cf880a38 <line:191:5, col:49> col:21 erase 'Vector<RadixIPLookup::GWPort>::iterator (Vector<RadixIPLookup::GWPort>::iterator, Vector<RadixIPLookup::GWPort>::iterator)' inline
| |-ParmVarDecl 0x5637cf8808b0 <col:27, col:36> col:36 a 'Vector<RadixIPLookup::GWPort>::iterator':'RadixIPLookup::GWPort *'
| `-ParmVarDecl 0x5637cf880928 <col:39, col:48> col:48 b 'Vector<RadixIPLookup::GWPort>::iterator':'RadixIPLookup::GWPort *'
|-CXXMethodDecl 0x5637cf880af8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf880d58 <line:195:5, col:34> col:17 swap 'void (Vector<RadixIPLookup::GWPort> &)' inline
| `-ParmVarDecl 0x5637cf880c60 <col:22, col:33> col:33 x 'Vector<RadixIPLookup::GWPort> &'
`-CXXDestructorDecl 0x5637cf880e28 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5637cf880e28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct RadixIPLookup::Radix::Child
         0 |   int key
         8 |   class RadixIPLookup::Radix * child
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class RadixIPLookup::Radix
         0 |   struct Child [0] _children
           | [sizeof=0, dsize=0, align=8,
           |  nvsize=0, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf882e08 <../elements/ip/radixiplookup.cc:54:5, line:57:5> line:54:12 referenced struct Child definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf882f28 <col:5, col:12> col:12 implicit struct Child
|-FieldDecl 0x5637cf882fd0 <line:55:2, col:6> col:6 referenced key 'int'
|-FieldDecl 0x5637cf883030 <line:56:2, col:9> col:9 referenced child 'RadixIPLookup::Radix *'
`-CXXDestructorDecl 0x5637cf8841f8 <line:54:12> col:12 implicit ~Child 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.RadixIPLookup::Radix::Child" = type { i32, %"class.RadixIPLookup::Radix"* }
  NonVirtualBaseLLVMType:%"struct.RadixIPLookup::Radix::Child" = type { i32, %"class.RadixIPLookup::Radix"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf882070 parent 0x5637cf8662f8 prev 0x5637cf8680e8 <../elements/ip/radixiplookup.cc:31:1, line:78:1> line:31:22 class Radix definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5637cf8821a8 <col:1, col:22> col:22 implicit referenced class Radix
|-AccessSpecDecl 0x5637cf882238 <col:30, col:36> col:30 public
|-CXXMethodDecl 0x5637cf882338 <line:33:5, col:39> col:19 make_radix 'RadixIPLookup::Radix *(int)' static
| `-ParmVarDecl 0x5637cf882278 <col:30, col:34> col:34 level 'int'
|-CXXMethodDecl 0x5637cf882548 <line:34:5, col:47> col:17 free_radix 'void (RadixIPLookup::Radix *, int)' static
| |-ParmVarDecl 0x5637cf8823f0 <col:28, col:35> col:35 r 'RadixIPLookup::Radix *'
| `-ParmVarDecl 0x5637cf882470 <col:38, col:42> col:42 level 'int'
|-CXXMethodDecl 0x5637cf882950 <line:36:5, col:74> col:9 change 'int (uint32_t, uint32_t, int, bool, int)'
| |-ParmVarDecl 0x5637cf882608 <col:16, col:25> col:25 addr 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf882680 <col:31, col:40> col:40 mask 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf882700 <col:46, col:50> col:50 key 'int'
| |-ParmVarDecl 0x5637cf882778 <col:55, col:60> col:60 set 'bool'
| `-ParmVarDecl 0x5637cf8827f8 <col:65, col:69> col:69 level 'int'
|-CXXMethodDecl 0x5637cf882d20 <line:39:5, line:49:5> line:39:23 lookup 'int (const RadixIPLookup::Radix *, int, uint32_t, int)' static inline
| |-ParmVarDecl 0x5637cf882a58 <col:30, col:43> col:43 used r 'const RadixIPLookup::Radix *'
| |-ParmVarDecl 0x5637cf882ad8 <col:46, col:50> col:50 used cur 'int'
| |-ParmVarDecl 0x5637cf882b50 <col:55, col:64> col:64 used addr 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf882bd0 <col:70, col:74> col:74 used level 'int'
| `-CompoundStmt 0x5637cf8841c8 <col:81, line:49:5>
|   |-WhileStmt 0x5637cf884168 <line:40:2, line:47:2>
|   | |-ImplicitCastExpr 0x5637cf883948 <line:40:9> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x5637cf883930 <col:9> 'const RadixIPLookup::Radix *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5637cf883910 <col:9> 'const RadixIPLookup::Radix *' lvalue ParmVar 0x5637cf882a58 'r' 'const RadixIPLookup::Radix *'
|   | `-CompoundStmt 0x5637cf884130 <col:12, line:47:2>
|   |   |-DeclStmt 0x5637cf883c58 <line:41:6, col:66>
|   |   | `-VarDecl 0x5637cf883978 <col:6, col:65> col:10 used i1 'int' cinit
|   |   |   `-ImplicitCastExpr 0x5637cf883c40 <col:15, col:65> 'int' <IntegralCast>
|   |   |     `-BinaryOperator 0x5637cf883c20 <col:15, col:65> 'unsigned int' '&'
|   |   |       |-ParenExpr 0x5637cf883ae0 <col:15, col:40> 'uint32_t':'unsigned int'
|   |   |       | `-BinaryOperator 0x5637cf883ac0 <col:16, col:39> 'uint32_t':'unsigned int' '>>'
|   |   |       |   |-ImplicitCastExpr 0x5637cf883a90 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x5637cf8839e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5637cf882b50 'addr' 'uint32_t':'unsigned int'
|   |   |       |   `-ImplicitCastExpr 0x5637cf883aa8 <col:24, col:39> 'int' <LValueToRValue>
|   |   |       |     `-ArraySubscriptExpr 0x5637cf883a70 <col:24, col:39> 'const int' lvalue
|   |   |       |       |-ImplicitCastExpr 0x5637cf883a40 <col:24> 'const int *' <ArrayToPointerDecay>
|   |   |       |       | `-DeclRefExpr 0x5637cf883a00 <col:24> 'const int [5]' lvalue Var 0x5637cf883740 '_bitshift' 'const int [5]'
|   |   |       |       `-ImplicitCastExpr 0x5637cf883a58 <col:34> 'int' <LValueToRValue>
|   |   |       |         `-DeclRefExpr 0x5637cf883a20 <col:34> 'int' lvalue ParmVar 0x5637cf882bd0 'level' 'int'
|   |   |       `-ImplicitCastExpr 0x5637cf883c08 <col:44, col:65> 'unsigned int' <IntegralCast>
|   |   |         `-ParenExpr 0x5637cf883be8 <col:44, col:65> 'int'
|   |   |           `-BinaryOperator 0x5637cf883bc8 <col:45, col:64> 'int' '-'
|   |   |             |-ImplicitCastExpr 0x5637cf883bb0 <col:45, col:60> 'int' <LValueToRValue>
|   |   |             | `-ArraySubscriptExpr 0x5637cf883b70 <col:45, col:60> 'const int' lvalue
|   |   |             |   |-ImplicitCastExpr 0x5637cf883b40 <col:45> 'const int *' <ArrayToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x5637cf883b00 <col:45> 'const int [5]' lvalue Var 0x5637cf883810 '_nbuckets' 'const int [5]'
|   |   |             |   `-ImplicitCastExpr 0x5637cf883b58 <col:55> 'int' <LValueToRValue>
|   |   |             |     `-DeclRefExpr 0x5637cf883b20 <col:55> 'int' lvalue ParmVar 0x5637cf882bd0 'level' 'int'
|   |   |             `-IntegerLiteral 0x5637cf883b90 <col:64> 'int' 1
|   |   |-DeclStmt 0x5637cf883ee0 <line:42:6, col:39>
|   |   | `-VarDecl 0x5637cf883ca8 <col:6, col:38> col:19 used c 'const RadixIPLookup::Radix::Child &' cinit
|   |   |   `-ArraySubscriptExpr 0x5637cf883e68 <col:23, col:38> 'const struct Child':'const RadixIPLookup::Radix::Child' lvalue
|   |   |     |-ImplicitCastExpr 0x5637cf883e38 <col:23, col:26> 'const struct Child *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x5637cf883d48 <col:23, col:26> 'struct Child const[0]' lvalue ->_children 0x5637cf8831c8
|   |   |     |   `-ImplicitCastExpr 0x5637cf883d30 <col:23> 'const RadixIPLookup::Radix *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x5637cf883d10 <col:23> 'const RadixIPLookup::Radix *' lvalue ParmVar 0x5637cf882a58 'r' 'const RadixIPLookup::Radix *'
|   |   |     `-ImplicitCastExpr 0x5637cf883e50 <col:36> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5637cf883d78 <col:36> 'int' lvalue Var 0x5637cf883978 'i1' 'int'
|   |   |-IfStmt 0x5637cf884020 <line:43:6, line:44:11>
|   |   | |-ImplicitCastExpr 0x5637cf883f60 <line:43:10, col:12> 'bool' <IntegralToBoolean>
|   |   | | `-ImplicitCastExpr 0x5637cf883f48 <col:10, col:12> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x5637cf883f18 <col:10, col:12> 'const int' lvalue .key 0x5637cf882fd0
|   |   | |     `-DeclRefExpr 0x5637cf883ef8 <col:10> 'const RadixIPLookup::Radix::Child' lvalue Var 0x5637cf883ca8 'c' 'const RadixIPLookup::Radix::Child &'
|   |   | `-BinaryOperator 0x5637cf884000 <line:44:3, col:11> 'int' lvalue '='
|   |   |   |-DeclRefExpr 0x5637cf883f78 <col:3> 'int' lvalue ParmVar 0x5637cf882ad8 'cur' 'int'
|   |   |   `-ImplicitCastExpr 0x5637cf883fe8 <col:9, col:11> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x5637cf883fb8 <col:9, col:11> 'const int' lvalue .key 0x5637cf882fd0
|   |   |       `-DeclRefExpr 0x5637cf883f98 <col:9> 'const RadixIPLookup::Radix::Child' lvalue Var 0x5637cf883ca8 'c' 'const RadixIPLookup::Radix::Child &'
|   |   |-BinaryOperator 0x5637cf8840d8 <line:45:6, col:12> 'const RadixIPLookup::Radix *' lvalue '='
|   |   | |-DeclRefExpr 0x5637cf884038 <col:6> 'const RadixIPLookup::Radix *' lvalue ParmVar 0x5637cf882a58 'r' 'const RadixIPLookup::Radix *'
|   |   | `-ImplicitCastExpr 0x5637cf8840c0 <col:10, col:12> 'const RadixIPLookup::Radix *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x5637cf8840a8 <col:10, col:12> 'RadixIPLookup::Radix *' <LValueToRValue>
|   |   |     `-MemberExpr 0x5637cf884078 <col:10, col:12> 'RadixIPLookup::Radix *const' lvalue .child 0x5637cf883030
|   |   |       `-DeclRefExpr 0x5637cf884058 <col:10> 'const RadixIPLookup::Radix::Child' lvalue Var 0x5637cf883ca8 'c' 'const RadixIPLookup::Radix::Child &'
|   |   `-UnaryOperator 0x5637cf884118 <line:46:6, col:11> 'int' postfix '++'
|   |     `-DeclRefExpr 0x5637cf8840f8 <col:6> 'int' lvalue ParmVar 0x5637cf882bd0 'level' 'int'
|   `-ReturnStmt 0x5637cf8841b8 <line:48:2, col:9>
|     `-ImplicitCastExpr 0x5637cf8841a0 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf884180 <col:9> 'int' lvalue ParmVar 0x5637cf882ad8 'cur' 'int'
|-AccessSpecDecl 0x5637cf882de0 <line:51:1, col:8> col:1 private
|-CXXRecordDecl 0x5637cf882e08 <line:54:5, line:57:5> line:54:12 referenced struct Child definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5637cf882f28 <col:5, col:12> col:12 implicit struct Child
| |-FieldDecl 0x5637cf882fd0 <line:55:2, col:6> col:6 referenced key 'int'
| |-FieldDecl 0x5637cf883030 <line:56:2, col:9> col:9 referenced child 'RadixIPLookup::Radix *'
| `-CXXDestructorDecl 0x5637cf8841f8 <line:54:12> col:12 implicit ~Child 'void () noexcept' inline default trivial
|-FieldDecl 0x5637cf8831c8 <col:5, line:57:18> col:7 referenced _children 'struct Child [0]'
|-CXXConstructorDecl 0x5637cf883268 <line:59:5, col:15> col:5 Radix 'void ()'
| `-CompoundStmt 0x5637cf8841e8 <col:13, col:15>
|-CXXDestructorDecl 0x5637cf883358 <line:60:5, col:16> col:5 ~Radix 'void () noexcept'
| `-CompoundStmt 0x5637cf8842e0 <col:14, col:16>
|-CXXMethodDecl 0x5637cf8835b0 <line:62:5, line:71:5> line:62:11 key_for 'int &(int, int)'
| |-ParmVarDecl 0x5637cf883458 <col:19, col:23> col:23 used i 'int'
| |-ParmVarDecl 0x5637cf8834d8 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5637cf884d88 <col:37, line:71:5>
|   |-DeclStmt 0x5637cf884418 <line:63:2, col:26>
|   | `-VarDecl 0x5637cf884308 <col:2, col:25> col:6 used n 'int' cinit
|   |   `-ImplicitCastExpr 0x5637cf884400 <col:10, col:25> 'int' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x5637cf8843e0 <col:10, col:25> 'const int' lvalue
|   |       |-ImplicitCastExpr 0x5637cf8843b0 <col:10> 'const int *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x5637cf884370 <col:10> 'const int [5]' lvalue Var 0x5637cf883810 '_nbuckets' 'const int [5]'
|   |       `-ImplicitCastExpr 0x5637cf8843c8 <col:20> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5637cf884390 <col:20> 'int' lvalue ParmVar 0x5637cf8834d8 'level' 'int'
|   |-ParenExpr 0x5637cf884880 <line:64:2, col:168> 'void'
|   | `-ConditionalOperator 0x5637cf884850 <col:3, col:167> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf8845a8 <col:3, col:42> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf884578 <col:23, col:41> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf884488 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf884470 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf884430 <col:23> 'int' lvalue ParmVar 0x5637cf883458 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf884450 <col:28> 'int' 2
|   |   |   `-BinaryOperator 0x5637cf884558 <col:33, col:41> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf884540 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf8844a8 <col:33> 'int' lvalue ParmVar 0x5637cf883458 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf884520 <col:37, col:41> 'int' '*'
|   |   |       |-ImplicitCastExpr 0x5637cf884508 <col:37> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x5637cf8844c8 <col:37> 'int' lvalue Var 0x5637cf884308 'n' 'int'
|   |   |       `-IntegerLiteral 0x5637cf8844e8 <col:41> 'int' 2
|   |   |-CXXFunctionalCastExpr 0x5637cf884608 <col:46, col:53> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf8845e8 <col:52> 'int' 0
|   |   `-CallExpr 0x5637cf8847b0 <col:57, col:167> 'void'
|   |     |-ImplicitCastExpr 0x5637cf884798 <col:57> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf884778 <col:57> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf8847f0 <col:72> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf884678 <col:72> 'const char [20]' lvalue "i >= 2 && i < n * 2"
|   |     |-ImplicitCastExpr 0x5637cf884808 <col:95> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf8846a8 <col:95> 'const char [32]' lvalue "../elements/ip/radixiplookup.cc"
|   |     |-ImplicitCastExpr 0x5637cf884820 <col:130> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf8846e0 <col:130> 'int' 64
|   |     `-ImplicitCastExpr 0x5637cf884838 <col:134, col:148> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf884760 <col:134, col:148> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf884748 <col:148> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf884700 <col:148> 'const char [45]' lvalue "int &RadixIPLookup::Radix::key_for(int, int)"
|   `-IfStmt 0x5637cf884d60 <line:65:2, line:70:2> has_else
|     |-BinaryOperator 0x5637cf884910 <line:65:6, col:11> 'bool' '>='
|     | |-ImplicitCastExpr 0x5637cf8848e0 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5637cf8848a0 <col:6> 'int' lvalue ParmVar 0x5637cf883458 'i' 'int'
|     | `-ImplicitCastExpr 0x5637cf8848f8 <col:11> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5637cf8848c0 <col:11> 'int' lvalue Var 0x5637cf884308 'n' 'int'
|     |-ReturnStmt 0x5637cf884ac0 <line:66:6, col:30>
|     | `-MemberExpr 0x5637cf884a90 <col:13, col:30> 'int' lvalue .key 0x5637cf882fd0
|     |   `-ArraySubscriptExpr 0x5637cf884a70 <col:13, col:28> 'struct Child':'RadixIPLookup::Radix::Child' lvalue
|     |     |-ImplicitCastExpr 0x5637cf884a58 <col:13> 'struct Child *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5637cf884940 <col:13> 'struct Child [0]' lvalue ->_children 0x5637cf8831c8
|     |     |   `-CXXThisExpr 0x5637cf884930 <col:13> 'RadixIPLookup::Radix *' implicit this
|     |     `-BinaryOperator 0x5637cf8849e0 <col:23, col:27> 'int' '-'
|     |       |-ImplicitCastExpr 0x5637cf8849b0 <col:23> 'int' <LValueToRValue>
|     |       | `-DeclRefExpr 0x5637cf884970 <col:23> 'int' lvalue ParmVar 0x5637cf883458 'i' 'int'
|     |       `-ImplicitCastExpr 0x5637cf8849c8 <col:27> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x5637cf884990 <col:27> 'int' lvalue Var 0x5637cf884308 'n' 'int'
|     `-CompoundStmt 0x5637cf884d40 <line:67:7, line:70:2>
|       |-DeclStmt 0x5637cf884c48 <line:68:6, col:53>
|       | `-VarDecl 0x5637cf884ae8 <col:6, col:52> col:11 used x 'int *' cinit
|       |   `-CXXReinterpretCastExpr 0x5637cf884c18 <col:15, col:52> 'int *' reinterpret_cast<int *> <BitCast>
|       |     `-BinaryOperator 0x5637cf884be0 <col:39, col:51> 'struct Child *' '+'
|       |       |-ImplicitCastExpr 0x5637cf884bb0 <col:39> 'struct Child *' <ArrayToPointerDecay>
|       |       | `-MemberExpr 0x5637cf884b60 <col:39> 'struct Child [0]' lvalue ->_children 0x5637cf8831c8
|       |       |   `-CXXThisExpr 0x5637cf884b50 <col:39> 'RadixIPLookup::Radix *' implicit this
|       |       `-ImplicitCastExpr 0x5637cf884bc8 <col:51> 'int' <LValueToRValue>
|       |         `-DeclRefExpr 0x5637cf884b90 <col:51> 'int' lvalue Var 0x5637cf884308 'n' 'int'
|       `-ReturnStmt 0x5637cf884d30 <line:69:6, col:20>
|         `-ArraySubscriptExpr 0x5637cf884d10 <col:13, col:20> 'int' lvalue
|           |-ImplicitCastExpr 0x5637cf884cf8 <col:13> 'int *' <LValueToRValue>
|           | `-DeclRefExpr 0x5637cf884c60 <col:13> 'int *' lvalue Var 0x5637cf884ae8 'x' 'int *'
|           `-BinaryOperator 0x5637cf884cd8 <col:15, col:19> 'int' '-'
|             |-ImplicitCastExpr 0x5637cf884cc0 <col:15> 'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5637cf884c80 <col:15> 'int' lvalue ParmVar 0x5637cf883458 'i' 'int'
|             `-IntegerLiteral 0x5637cf884ca0 <col:19> 'int' 2
|-VarDecl 0x5637cf883740 <line:73:5, col:34> col:22 used _bitshift 'const int [5]' static
|-VarDecl 0x5637cf883810 <line:74:5, col:34> col:22 used _nbuckets 'const int [5]' static
`-FriendDecl 0x5637cf8838d0 <line:76:5, col:18> col:12 'class RadixIPLookup':'RadixIPLookup'

Layout: <CGRecordLayout
  LLVMType:%"class.RadixIPLookup::Radix" = type { [0 x %"struct.RadixIPLookup::Radix::Child"] }
  NonVirtualBaseLLVMType:%"class.RadixIPLookup::Radix" = type { [0 x %"struct.RadixIPLookup::Radix::Child"] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf8662f8 <../elements/ip/radixiplookup.hh:72:1, line:128:1> line:72:7 class RadixIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'IPRouteTable'
|-CXXRecordDecl 0x5637cf866458 <col:1, col:7> col:7 implicit referenced class RadixIPLookup
|-AccessSpecDecl 0x5637cf8664e8 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x5637cf866570 <line:74:5, col:19> col:5 RadixIPLookup 'void ()'
|-CXXDestructorDecl 0x5637cf866660 <line:75:5, col:20> col:5 ~RadixIPLookup 'void ()' noexcept-unevaluated 0x5637cf866660
| `-Overrides: [ 0x5637cf8638d0 IPRouteTable::~IPRouteTable 'void ()' ]
|-CXXMethodDecl 0x5637cf866790 <line:77:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5637cf845ab8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5637cf881408 <col:36, col:62>
|   `-ReturnStmt 0x5637cf8813f8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5637cf8813e0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5637cf8813b8 <col:45> 'const char [14]' lvalue "RadixIPLookup"
|-CXXMethodDecl 0x5637cf866858 <line:78:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5637cf845b80 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5637cf881468 <col:36, col:52>
|   `-ReturnStmt 0x5637cf881458 <col:38, col:45>
|     `-ImplicitCastExpr 0x5637cf881440 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5637cf881420 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x5637cf866920 <line:79:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5637cf845ef0 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5637cf8814c8 <col:36, col:51>
|   `-ReturnStmt 0x5637cf8814b8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5637cf8814a0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5637cf881480 <col:45> 'const char []' lvalue Var 0x5637cf846038 'PUSH' 'const char []'
|-CXXMethodDecl 0x5637cf866a60 <line:82:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x5637cf847c18 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5637cf8669d0 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x5637cf866b28 <line:83:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5637cf861130 IPRouteTable::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5637cf866df0 <line:85:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5637cf861440 IPRouteTable::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5637cf866bd8 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x5637cf866c50 <col:35> col:39 'bool'
| |-ParmVarDecl 0x5637cf866cc8 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x5637cf866d40 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf867058 <line:86:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5637cf8616f0 IPRouteTable::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5637cf866ec0 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x5637cf866f38 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x5637cf866fb0 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf867238 <line:87:5, col:45> col:9 lookup_route 'int (IPAddress, IPAddress &) const'
| |-Overrides: [ 0x5637cf861940 IPRouteTable::lookup_route 'int (IPAddress, IPAddress &) const' ]
| |-ParmVarDecl 0x5637cf867120 <col:22> col:31 'IPAddress'
| `-ParmVarDecl 0x5637cf867198 <col:33, col:42> col:43 'IPAddress &'
|-CXXMethodDecl 0x5637cf867450 <line:88:5, col:47> col:9 find_lookup_key 'int (IPAddress, int)'
| |-ParmVarDecl 0x5637cf8672f8 <col:25, col:35> col:35 gw 'IPAddress'
| `-ParmVarDecl 0x5637cf867378 <col:39, col:43> col:43 port 'int'
|-CXXMethodDecl 0x5637cf867520 <line:89:5, col:24> col:12 dump_routes 'String ()'
| `-Overrides: [ 0x5637cf861a10 IPRouteTable::dump_routes 'String ()' ]
|-AccessSpecDecl 0x5637cf8675c0 <line:91:3, col:10> col:3 private
|-CXXRecordDecl 0x5637cf8675e8 <line:92:2, line:95:2> line:92:9 referenced struct GWPort definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5637cf867708 <col:2, col:9> col:9 implicit struct GWPort
| |-FieldDecl 0x5637cf8677a8 <line:93:6, col:16> col:16 referenced gw 'IPAddress'
| `-FieldDecl 0x5637cf867808 <line:94:6, col:14> col:14 referenced port 'int32_t':'int'
|-CXXMethodDecl 0x5637cf8679c8 <line:98:5, line:102:5> line:98:27 combine_key 'int32_t (int32_t, int32_t)' static inline
| |-ParmVarDecl 0x5637cf867880 <col:39, col:47> col:47 used key 'int32_t':'int'
| |-ParmVarDecl 0x5637cf8678f8 <col:52, col:60> col:60 used lookup_key 'int32_t':'int'
| `-CompoundStmt 0x5637cf881e18 <col:72, line:102:5>
|   |-ParenExpr 0x5637cf881948 <line:99:2, col:166> 'void'
|   | `-ConditionalOperator 0x5637cf881918 <col:3, col:165> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf881568 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf881538 <col:23, col:37> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x5637cf881520 <col:23> 'int32_t':'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x5637cf8814e0 <col:23> 'int32_t':'int' lvalue ParmVar 0x5637cf8678f8 'lookup_key' 'int32_t':'int'
|   |   |   `-IntegerLiteral 0x5637cf881500 <col:37> 'int' 255
|   |   |-CXXFunctionalCastExpr 0x5637cf8815c8 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf8815a8 <col:51> 'int' 0
|   |   `-CallExpr 0x5637cf881878 <col:56, col:165> 'void'
|   |     |-ImplicitCastExpr 0x5637cf881860 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf881840 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf8818b8 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf8816b8 <col:71> 'const char [19]' lvalue "lookup_key <= 0xff"
|   |     |-ImplicitCastExpr 0x5637cf8818d0 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf8816e8 <col:93> 'const char [32]' lvalue "../elements/ip/radixiplookup.hh"
|   |     |-ImplicitCastExpr 0x5637cf8818e8 <col:128> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf881720 <col:128> 'int' 99
|   |     `-ImplicitCastExpr 0x5637cf881900 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf881828 <col:132, col:146> 'const char [60]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf881810 <col:146> 'const char [60]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf8817b8 <col:146> 'const char [60]' lvalue "static int32_t RadixIPLookup::combine_key(int32_t, int32_t)"
|   |-ParenExpr 0x5637cf881cd8 <line:100:2, col:165> 'void'
|   | `-ConditionalOperator 0x5637cf881ca8 <col:3, col:164> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf8819f0 <col:3, col:40> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf8819c0 <col:23, col:30> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x5637cf8819a8 <col:23> 'int32_t':'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x5637cf881968 <col:23> 'int32_t':'int' lvalue ParmVar 0x5637cf867880 'key' 'int32_t':'int'
|   |   |   `-IntegerLiteral 0x5637cf881988 <col:30> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x5637cf881a50 <col:44, col:51> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf881a30 <col:50> 'int' 0
|   |   `-CallExpr 0x5637cf881c08 <col:55, col:164> 'void'
|   |     |-ImplicitCastExpr 0x5637cf881bf0 <col:55> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf881bd0 <col:55> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf881c48 <col:70> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf881ac0 <col:70> 'const char [18]' lvalue "key <= 0x00ffffff"
|   |     |-ImplicitCastExpr 0x5637cf881c60 <col:91> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf881af0 <col:91> 'const char [32]' lvalue "../elements/ip/radixiplookup.hh"
|   |     |-ImplicitCastExpr 0x5637cf881c78 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf881b28 <col:126> 'int' 100
|   |     `-ImplicitCastExpr 0x5637cf881c90 <col:131, col:145> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf881bb8 <col:131, col:145> 'const char [60]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf881ba0 <col:145> 'const char [60]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf881b48 <col:145> 'const char [60]' lvalue "static int32_t RadixIPLookup::combine_key(int32_t, int32_t)"
|   `-ReturnStmt 0x5637cf881e08 <line:101:2, col:34>
|     `-ParenExpr 0x5637cf881de8 <col:9, col:34> 'int'
|       `-BinaryOperator 0x5637cf881dc8 <col:10, col:31> 'int' '|'
|         |-BinaryOperator 0x5637cf881d70 <col:10, col:26> 'int32_t':'int' '<<'
|         | |-ImplicitCastExpr 0x5637cf881d58 <col:10, col:21> 'int32_t':'int' <LValueToRValue>
|         | | `-ParenExpr 0x5637cf881d18 <col:10, col:21> 'int32_t':'int' lvalue
|         | |   `-DeclRefExpr 0x5637cf881cf8 <col:11> 'int32_t':'int' lvalue ParmVar 0x5637cf8678f8 'lookup_key' 'int32_t':'int'
|         | `-IntegerLiteral 0x5637cf881d38 <col:26> 'int' 24
|         `-ImplicitCastExpr 0x5637cf881db0 <col:31> 'int32_t':'int' <LValueToRValue>
|           `-DeclRefExpr 0x5637cf881d90 <col:31> 'int32_t':'int' lvalue ParmVar 0x5637cf867880 'key' 'int32_t':'int'
|-CXXMethodDecl 0x5637cf867b48 <line:104:5, line:106:5> line:104:27 get_key 'int32_t (int32_t)' static inline
| |-ParmVarDecl 0x5637cf867a88 <col:35, col:43> col:43 used comb 'int32_t':'int'
| `-CompoundStmt 0x5637cf881ee8 <col:49, line:106:5>
|   `-ReturnStmt 0x5637cf881ed8 <line:105:2, col:27>
|     `-ParenExpr 0x5637cf881eb8 <col:9, col:27> 'int'
|       `-BinaryOperator 0x5637cf881e98 <col:10, col:17> 'int' '&'
|         |-ImplicitCastExpr 0x5637cf881e80 <col:10> 'int32_t':'int' <LValueToRValue>
|         | `-DeclRefExpr 0x5637cf881e40 <col:10> 'int32_t':'int' lvalue ParmVar 0x5637cf867a88 'comb' 'int32_t':'int'
|         `-IntegerLiteral 0x5637cf881e60 <col:17> 'int' 16777215
|-CXXMethodDecl 0x5637cf867c90 <line:108:5, line:110:5> line:108:27 get_lookup_key 'int32_t (int32_t)' static inline
| |-ParmVarDecl 0x5637cf867c00 <col:42, col:50> col:50 used comb 'int32_t':'int'
| `-CompoundStmt 0x5637cf882038 <col:56, line:110:5>
|   `-ReturnStmt 0x5637cf882028 <line:109:2, col:35>
|     `-ImplicitCastExpr 0x5637cf882010 <col:9, col:35> 'int32_t':'int' <IntegralCast>
|       `-ParenExpr 0x5637cf881ff0 <col:9, col:35> 'unsigned int'
|         `-BinaryOperator 0x5637cf881fd0 <col:10, col:33> 'unsigned int' '>>'
|           |-ParenExpr 0x5637cf881f90 <col:10, col:28> 'unsigned int'
|           | `-BinaryOperator 0x5637cf881f70 <col:11, col:18> 'unsigned int' '&'
|           |   |-ImplicitCastExpr 0x5637cf881f58 <col:11> 'unsigned int' <IntegralCast>
|           |   | `-ImplicitCastExpr 0x5637cf881f40 <col:11> 'int32_t':'int' <LValueToRValue>
|           |   |   `-DeclRefExpr 0x5637cf881f00 <col:11> 'int32_t':'int' lvalue ParmVar 0x5637cf867c00 'comb' 'int32_t':'int'
|           |   `-IntegerLiteral 0x5637cf881f20 <col:18> 'unsigned int' 4278190080
|           `-IntegerLiteral 0x5637cf881fb0 <col:33> 'int' 24
|-CXXMethodDecl 0x5637cf867d58 <line:112:5, col:22> col:10 flush_table 'void ()'
|-CXXMethodDecl 0x5637cf868028 <line:114:5, col:79> col:16 flush_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5637cf867e08 <col:30, col:43> col:44 'const String &'
| |-ParmVarDecl 0x5637cf867e80 <col:46, col:54> col:55 'Element *'
| |-ParmVarDecl 0x5637cf867f00 <col:57, col:62> col:63 'void *'
| `-ParmVarDecl 0x5637cf867f78 <col:65, col:78> col:79 'ErrorHandler *'
|-CXXRecordDecl 0x5637cf8680e8 <line:116:5, col:11> col:11 referenced class Radix
|-FieldDecl 0x5637cf876070 <line:119:5, col:21> col:21 _v 'Vector<IPRoute>':'Vector<IPRoute>'
|-FieldDecl 0x5637cf8760d8 <line:120:5, col:9> col:9 _vfree 'int'
|-FieldDecl 0x5637cf880f10 <line:123:5, col:20> col:20 referenced _lookup 'Vector<RadixIPLookup::GWPort>':'Vector<RadixIPLookup::GWPort>'
|-FieldDecl 0x5637cf880f78 <line:125:5, col:9> col:9 _default_key 'int'
|-FieldDecl 0x5637cf881008 <line:126:5, col:12> col:12 _radix 'RadixIPLookup::Radix *'
|-CXXConstructorDecl 0x5637cf881088 <line:72:7> col:7 implicit RadixIPLookup 'void (const RadixIPLookup &)' inline default_delete noexcept-unevaluated 0x5637cf881088
| `-ParmVarDecl 0x5637cf881198 <col:7> col:7 'const RadixIPLookup &'
`-CXXMethodDecl 0x5637cf881238 <col:7> col:7 implicit operator= 'RadixIPLookup &(const RadixIPLookup &)' inline default_delete noexcept-unevaluated 0x5637cf881238
  `-ParmVarDecl 0x5637cf881348 <col:7> col:7 'const RadixIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.RadixIPLookup = type { %class.IPRouteTable.base, %class.Vector, i32, %class.Vector.0, i32, %"class.RadixIPLookup::Radix"* }
  NonVirtualBaseLLVMType:%class.RadixIPLookup = type { %class.IPRouteTable.base, %class.Vector, i32, %class.Vector.0, i32, %"class.RadixIPLookup::Radix"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf574398 prev 0x5637cf54dda8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf574490 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x5637cf574520 <col:19, col:25> col:19 public
|-TypedefDecl 0x5637cf574558 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5637cf399fb0 'uninitialized_type'
|   `-CXXRecord 0x5637cf399f18 'uninitialized_type'
|-CXXConstructorDecl 0x5637cf574610 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf576e38 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5637cf576df8 <col:10> 'int' 0
| `-CompoundStmt 0x5637cf576e80 <col:13, line:22:5>
|-CXXConstructorDecl 0x5637cf574760 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x5637cf5746d0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf576ed0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x5637cf576e90 <col:10> 'unsigned int' lvalue ParmVar 0x5637cf5746d0 'x' 'unsigned int'
| `-CompoundStmt 0x5637cf576f18 <col:13, line:27:5>
|-CXXConstructorDecl 0x5637cf5748b8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x5637cf574828 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf576f80 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5637cf576f68 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x5637cf576f28 <col:10> 'int' lvalue ParmVar 0x5637cf574828 'x' 'int'
| `-CompoundStmt 0x5637cf576fc8 <col:13, line:31:5>
|-CXXConstructorDecl 0x5637cf574a10 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5637cf574980 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf577030 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5637cf577018 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x5637cf576fd8 <col:10> 'unsigned long' lvalue ParmVar 0x5637cf574980 'x' 'unsigned long'
| `-CompoundStmt 0x5637cf577078 <col:13, line:35:5>
|-CXXConstructorDecl 0x5637cf574b68 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x5637cf574ad8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf5770e0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5637cf5770c8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x5637cf577088 <col:10> 'long' lvalue ParmVar 0x5637cf574ad8 'x' 'long'
| `-CompoundStmt 0x5637cf577128 <col:13, line:39:5>
|-CXXConstructorDecl 0x5637cf574d28 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x5637cf574c38 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf5771a8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5637cf577158 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5637cf4ca410
| |     `-DeclRefExpr 0x5637cf577138 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x5637cf574c38 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x5637cf5771f0 <col:20, line:44:5>
|-CXXConstructorDecl 0x5637cf574eb8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x5637cf574df0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x5637cf577358 <col:51, line:56:5>
|   `-BinaryOperator 0x5637cf577338 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x5637cf577210 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5637cf576d90
|     | `-CXXThisExpr 0x5637cf577200 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x5637cf577320 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5637cf577308 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x5637cf5772e8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x5637cf5772b8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x5637cf5772a0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x5637cf577240 <col:47> 'const unsigned char *' lvalue ParmVar 0x5637cf574df0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x5637cf575008 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x5637cf574f78 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x5637cf5751b8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5637cf5750f8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5637cf5773c8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x5637cf5773a0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5637cf577370 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5637cf5750f8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5637cf575348 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x5637cf575280 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x5637cf575438 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x5637cf57b808 <col:46, line:83:5>
|   `-ReturnStmt 0x5637cf57b7f8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x5637cf57b7e0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x5637cf57b7b0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5637cf57b668 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5637cf57b550 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5637cf57b438 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x5637cf5773f0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x5637cf575528 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x5637cf57b8b8 <col:31, line:88:5>
|   `-ReturnStmt 0x5637cf57b8a8 <line:87:2, col:10>
|     `-UnaryOperator 0x5637cf57b890 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x5637cf57b878 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x5637cf57b860 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5637cf57b830 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5637cf576d90
|             `-CXXThisExpr 0x5637cf57b820 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5637cf5755e8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5637cf57b938 <col:34, line:93:5>
|   `-ReturnStmt 0x5637cf57b928 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5637cf57b910 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5637cf57b8e0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5637cf576d90
|         `-CXXThisExpr 0x5637cf57b8d0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x5637cf5756b8 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x5637cf57b9b8 <col:38, line:101:5>
|   `-ReturnStmt 0x5637cf57b9a8 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x5637cf57b990 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5637cf57b960 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5637cf576d90
|         `-CXXThisExpr 0x5637cf57b950 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5637cf575788 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5637cf57bc88 <col:38, line:108:5>
|   `-ReturnStmt 0x5637cf57bc78 <line:107:2, col:58>
|     `-BinaryOperator 0x5637cf57bc58 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x5637cf57bb70 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x5637cf57bb50 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5637cf57bb38 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5637cf57b9e0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5637cf576d90
|       |   |   `-CXXThisExpr 0x5637cf57b9d0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5637cf57bb10 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5637cf57baf8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5637cf57ba78 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5637cf52e4a0 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5637cf57ba58 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5637cf57bc30 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5637cf57bc18 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5637cf57bbf8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x5637cf52e4a0 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5637cf57bbd8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5637cf575848 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5637cf57bef8 <col:39, line:112:5>
|   `-ReturnStmt 0x5637cf57bee8 <line:111:2, col:56>
|     `-BinaryOperator 0x5637cf57bec8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5637cf57bde0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x5637cf57bdc0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5637cf57bda8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5637cf57bcb0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5637cf576d90
|       |   |   `-CXXThisExpr 0x5637cf57bca0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5637cf57bd80 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5637cf57bd68 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5637cf57bd48 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5637cf52e4a0 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5637cf57bd28 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x5637cf57bea0 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5637cf57be88 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5637cf57be68 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x5637cf52e4a0 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5637cf57be48 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5637cf575978 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5637cf575a80 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5637cf575b90 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5637cf575c80 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5637cf575d40 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf575e08 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5637cf576008 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x5637cf575eb8 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x5637cf575f30 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x5637cf576188 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5637cf5760c8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x5637cf5762d0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5637cf576240 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5637cf576478 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5637cf576388 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5637cf5765c0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5637cf576530 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5637cf576708 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5637cf576678 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5637cf5767d0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5637cf576890 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x5637cf576a08 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x5637cf576940 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x5637cf576ad0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5637cf576bb8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5637cf576c60 <col:51> "" ""
|-TypedefDecl 0x5637cf576d00 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x5637cf54de40 'IPAddress'
|   `-CXXRecord 0x5637cf574398 'IPAddress'
|-AccessSpecDecl 0x5637cf576d58 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5637cf576d90 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5637cf577438 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x5637cf577548 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf85fc08 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5637cf85fbc0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x5637cf576d90
| |     `-DeclRefExpr 0x5637cf85fba0 <col:7> 'const IPAddress' lvalue ParmVar 0x5637cf577548 '' 'const IPAddress &'
| `-CompoundStmt 0x5637cf85fc50 <col:7>
|-CXXConstructorDecl 0x5637cf5775e8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5637cf5776f8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5637cf576d90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5637cf57b758 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5637cf57b710 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5637cf576d90
| |     `-CXXStaticCastExpr 0x5637cf57b6e0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x5637cf57b6b0 <col:7> 'IPAddress' lvalue ParmVar 0x5637cf5776f8 '' 'IPAddress &&'
| `-CompoundStmt 0x5637cf57b7a0 <col:7>
|-CXXDestructorDecl 0x5637cf57b468 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5637cf860050 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x5637cf860050
| `-ParmVarDecl 0x5637cf860158 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x5637cf8601c8 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5637cf8602d8 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x5637cf860540 <col:7>
    |-BinaryOperator 0x5637cf8604e8 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x5637cf8604a0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x5637cf576d90
    | | `-CXXThisExpr 0x5637cf860490 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x5637cf8604d0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x5637cf860460 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5637cf576d90
    |     `-CXXStaticCastExpr 0x5637cf860430 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x5637cf860400 <col:7> 'IPAddress' lvalue ParmVar 0x5637cf8602d8 '' 'IPAddress &&'
    `-ReturnStmt 0x5637cf860530 <col:7>
      `-UnaryOperator 0x5637cf860518 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5637cf860508 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf8675e8 <../elements/ip/radixiplookup.hh:92:2, line:95:2> line:92:9 referenced struct GWPort definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5637cf867708 <col:2, col:9> col:9 implicit struct GWPort
|-FieldDecl 0x5637cf8677a8 <line:93:6, col:16> col:16 referenced gw 'IPAddress'
`-FieldDecl 0x5637cf867808 <line:94:6, col:14> col:14 referenced port 'int32_t':'int'

Layout: <CGRecordLayout
  LLVMType:%"struct.RadixIPLookup::GWPort" = type { %class.IPAddress, i32 }
  NonVirtualBaseLLVMType:%"struct.RadixIPLookup::GWPort" = type { %class.IPAddress, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf488c60 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5637cf48af00 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5637cf48afa0 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5637cf48b000 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5637cf48b060 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5637cf48b110 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf48b420 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf48b538 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5637cf48b5e0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5637cf48b648 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5637cf48b6d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5637cf48f910 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5637cf48fd48 <col:12>
|-CXXConstructorDecl 0x5637cf48fa18 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5637cf48fb28 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5637cf48b5e0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5637cf492a00 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5637cf4929d0 <col:12> 'const char *const' lvalue .data 0x5637cf48b5e0
| |     `-DeclRefExpr 0x5637cf4929b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf48fb28 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5637cf48b648 'length' 'int'
| | `-ImplicitCastExpr 0x5637cf492a90 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5637cf492a60 <col:12> 'const int' lvalue .length 0x5637cf48b648
| |     `-DeclRefExpr 0x5637cf492a40 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf48fb28 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5637cf48b6d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5637cf492b20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5637cf492af0 <col:12> 'String::memo_t *const' lvalue .memo 0x5637cf48b6d8
| |     `-DeclRefExpr 0x5637cf492ad0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf48fb28 '' 'const String::rep_t &'
| `-CompoundStmt 0x5637cf492b78 <col:12>
|-CXXConstructorDecl 0x5637cf48fbc8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5637cf48fbc8
| `-ParmVarDecl 0x5637cf48fcd8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5637cf498150 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5637cf4a3ab8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5637cf4a3bc8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5637cf4a40e0 <col:12>
|   |-BinaryOperator 0x5637cf4a3ef8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5637cf4a3eb0 <col:12> 'const char *' lvalue ->data 0x5637cf48b5e0
|   | | `-CXXThisExpr 0x5637cf4a3ea0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5637cf4a3ee0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5637cf4a3e70 <col:12> 'const char *const' lvalue .data 0x5637cf48b5e0
|   |     `-DeclRefExpr 0x5637cf4a3e50 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf4a3bc8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5637cf4a3fc0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5637cf4a3f78 <col:12> 'int' lvalue ->length 0x5637cf48b648
|   | | `-CXXThisExpr 0x5637cf4a3f68 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5637cf4a3fa8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5637cf4a3f38 <col:12> 'const int' lvalue .length 0x5637cf48b648
|   |     `-DeclRefExpr 0x5637cf4a3f18 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf4a3bc8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5637cf4a4088 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5637cf4a4040 <col:12> 'String::memo_t *' lvalue ->memo 0x5637cf48b6d8
|   | | `-CXXThisExpr 0x5637cf4a4030 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5637cf4a4070 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5637cf4a4000 <col:12> 'String::memo_t *const' lvalue .memo 0x5637cf48b6d8
|   |     `-DeclRefExpr 0x5637cf4a3fe0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf4a3bc8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5637cf4a40d0 <col:12>
|     `-UnaryOperator 0x5637cf4a40b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5637cf4a40a8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5637cf4a3c38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5637cf4a3c38
  `-ParmVarDecl 0x5637cf4a3d48 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf47f3b0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5637cf47f4c8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5637cf47f558 <col:16, col:22> col:16 public
|-TypedefDecl 0x5637cf47f598 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5637cf245fd0 'const char *'
|   `-QualType 0x5637cf245521 'const char' const
|     `-BuiltinType 0x5637cf245520 'char'
|-TypedefDecl 0x5637cf47f620 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5637cf47f5f0 'String::const_iterator' sugar
|   |-Typedef 0x5637cf47f598 'const_iterator'
|   `-PointerType 0x5637cf245fd0 'const char *'
|     `-QualType 0x5637cf245521 'const char' const
|       `-BuiltinType 0x5637cf245520 'char'
|-TypedefDecl 0x5637cf47f7c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5637cf47f730 'int (String::*)() const'
|   |-RecordType 0x5637cf47f440 'String'
|   | `-CXXRecord 0x5637cf47f3b0 'String'
|   `-ParenType 0x5637cf47f6d0 'int () const' sugar
|     `-FunctionProtoType 0x5637cf47f6a0 'int () const' const cdecl
|       `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf47f828 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5637cf39a540 'int64_t' sugar
|   |-Typedef 0x5637cf2ae390 'int64_t'
|   `-TypedefType 0x5637cf287630 '__int64_t' sugar
|     |-Typedef 0x5637cf287208 '__int64_t'
|     `-BuiltinType 0x5637cf2455a0 'long'
|-TypedefDecl 0x5637cf47f890 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5637cf39a460 'uint64_t' sugar
|   |-Typedef 0x5637cf2ae530 'uint64_t'
|   `-TypedefType 0x5637cf2876c0 '__uint64_t' sugar
|     |-Typedef 0x5637cf287278 '__uint64_t'
|     `-BuiltinType 0x5637cf245640 'unsigned long'
|-TypedefDecl 0x5637cf47f920 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5637cf47f8f0 'String::intmax_t' sugar
|   |-Typedef 0x5637cf47f828 'intmax_t'
|   `-TypedefType 0x5637cf39a540 'int64_t' sugar
|     |-Typedef 0x5637cf2ae390 'int64_t'
|     `-TypedefType 0x5637cf287630 '__int64_t' sugar
|       |-Typedef 0x5637cf287208 '__int64_t'
|       `-BuiltinType 0x5637cf2455a0 'long'
|-TypedefDecl 0x5637cf47f9b0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5637cf47f980 'String::uintmax_t' sugar
|   |-Typedef 0x5637cf47f890 'uintmax_t'
|   `-TypedefType 0x5637cf39a460 'uint64_t' sugar
|     |-Typedef 0x5637cf2ae530 'uint64_t'
|     `-TypedefType 0x5637cf2876c0 '__uint64_t' sugar
|       |-Typedef 0x5637cf287278 '__uint64_t'
|       `-BuiltinType 0x5637cf245640 'unsigned long'
|-CXXConstructorDecl 0x5637cf47fa70 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5637cf47fc18 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5637cf47fb58 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5637cf47fdc8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5637cf47fd08 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5637cf47ff20 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5637cf47fe90 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5637cf4801a0 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5637cf47ffe8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5637cf480068 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5637cf4803f8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5637cf4802a0 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5637cf480320 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5637cf480618 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5637cf4804c8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5637cf480548 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5637cf480838 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5637cf4806e8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5637cf480768 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5637cf4809c8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5637cf480900 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5637cf480b48 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5637cf480a88 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5637cf480cd8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5637cf480c10 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5637cf480e30 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5637cf480da0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5637cf480fb8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5637cf480ef8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5637cf481148 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5637cf481080 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5637cf4812d8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5637cf481210 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5637cf481468 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5637cf4813a0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5637cf4815f8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5637cf481530 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5637cf481788 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5637cf4816c0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5637cf481880 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5637cf4819a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5637cf481b28 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5637cf481a60 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5637cf481c78 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5637cf481be8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5637cf481d20 <col:63> "" ""
|-CXXMethodDecl 0x5637cf481e68 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5637cf481da8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5637cf482078 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5637cf481f28 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5637cf481fa8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5637cf482718 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5637cf4825c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5637cf482640 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5637cf4829f8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5637cf4827d8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5637cf482858 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5637cf48f3e0 <col:55> 'int' 10
| `-ParmVarDecl 0x5637cf4828d0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf48f400 <col:76> 'bool' true
|-CXXMethodDecl 0x5637cf482cd8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5637cf482ac0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5637cf482b40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5637cf48f410 <col:56> 'int' 10
| `-ParmVarDecl 0x5637cf482bb8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf48f430 <col:77> 'bool' true
|-CXXMethodDecl 0x5637cf482de0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5637cf482ea8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5637cf482f70 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5637cf483010 <col:20>
| `-OptimizeNoneAttr 0x5637cf483068 <col:30>
|-CXXConversionDecl 0x5637cf483158 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5637cf483228 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5637cf4832e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5637cf4833d8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5637cf483498 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5637cf483618 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5637cf483550 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5637cf483768 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5637cf4836d8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5637cf483858 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5637cf483918 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5637cf483b68 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5637cf4839d0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5637cf483a50 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5637cf483dc8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5637cf483c30 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5637cf483cb0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5637cf483e98 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf4840a8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5637cf483f50 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5637cf483fd0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5637cf4842c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5637cf484170 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5637cf4841f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5637cf484458 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5637cf484390 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5637cf484aa0 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5637cf484c18 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5637cf484b50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5637cf484e28 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5637cf484cd8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5637cf484d58 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5637cf485040 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5637cf484ee8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5637cf484f60 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5637cf4851d0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5637cf485100 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5637cf4853f0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5637cf485290 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5637cf485310 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5637cf485540 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5637cf4854b0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5637cf485718 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5637cf485600 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5637cf485680 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5637cf485868 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5637cf4857d8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5637cf485a80 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5637cf485920 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5637cf4859a0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5637cf48f440 <col:39> 'int' 0
|-CXXMethodDecl 0x5637cf485ca0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5637cf485b40 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5637cf485bc0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5637cf48f460 <col:48> 'int' 0
|-CXXMethodDecl 0x5637cf485e80 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5637cf485d60 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5637cf485de0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5637cf48f480 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5637cf485f50 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5637cf486010 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5637cf4860d0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5637cf486190 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5637cf486250 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5637cf4863f8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5637cf486300 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5637cf486578 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5637cf4864b0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5637cf4866f8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5637cf486638 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5637cf486878 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5637cf4867b0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5637cf4869c0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5637cf486930 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5637cf486e70 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5637cf486de0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5637cf487048 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5637cf486f30 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5637cf486fb0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5637cf487228 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5637cf487110 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5637cf487190 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5637cf487378 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5637cf4872e8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5637cf487588 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5637cf487438 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5637cf4874b8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5637cf4876e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5637cf487650 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5637cf487840 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5637cf4877a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5637cf4878e8 <col:57> "" ""
|-CXXMethodDecl 0x5637cf4879f8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5637cf487968 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5637cf487b48 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5637cf487ab8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5637cf487cc8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5637cf487c00 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5637cf487d90 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5637cf487e50 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5637cf487f10 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5637cf487fb0 <col:49> "" ""
|-CXXMethodDecl 0x5637cf488040 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5637cf488100 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5637cf4881f0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5637cf4882b8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5637cf488378 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5637cf488438 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5637cf488530 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5637cf4885f8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5637cf4886c0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5637cf488898 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5637cf488778 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5637cf4887f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5637cf488ac0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5637cf488960 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5637cf4889e0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5637cf488bd0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5637cf488c38 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5637cf488c60 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5637cf48af00 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5637cf48afa0 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5637cf48b000 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5637cf48b060 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5637cf48b110 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5637cf48b178 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5637cf48b3b8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5637cf48b408 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf48b398 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5637cf48b2a8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5637cf48b250 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5637cf48b290 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5637cf48b270 <col:32> 'int' 8
|-CXXRecordDecl 0x5637cf48b420 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5637cf48b538 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5637cf48b5e0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5637cf48b648 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5637cf48b6d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5637cf48f910 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5637cf48fd48 <col:12>
| |-CXXConstructorDecl 0x5637cf48fa18 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5637cf48fb28 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5637cf48b5e0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5637cf492a00 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5637cf4929d0 <col:12> 'const char *const' lvalue .data 0x5637cf48b5e0
| | |     `-DeclRefExpr 0x5637cf4929b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf48fb28 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5637cf48b648 'length' 'int'
| | | `-ImplicitCastExpr 0x5637cf492a90 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5637cf492a60 <col:12> 'const int' lvalue .length 0x5637cf48b648
| | |     `-DeclRefExpr 0x5637cf492a40 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf48fb28 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5637cf48b6d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5637cf492b20 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5637cf492af0 <col:12> 'String::memo_t *const' lvalue .memo 0x5637cf48b6d8
| | |     `-DeclRefExpr 0x5637cf492ad0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf48fb28 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5637cf492b78 <col:12>
| |-CXXConstructorDecl 0x5637cf48fbc8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5637cf48fbc8
| | `-ParmVarDecl 0x5637cf48fcd8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5637cf498150 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5637cf4a3ab8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5637cf4a3bc8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5637cf4a40e0 <col:12>
| |   |-BinaryOperator 0x5637cf4a3ef8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5637cf4a3eb0 <col:12> 'const char *' lvalue ->data 0x5637cf48b5e0
| |   | | `-CXXThisExpr 0x5637cf4a3ea0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5637cf4a3ee0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5637cf4a3e70 <col:12> 'const char *const' lvalue .data 0x5637cf48b5e0
| |   |     `-DeclRefExpr 0x5637cf4a3e50 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf4a3bc8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5637cf4a3fc0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5637cf4a3f78 <col:12> 'int' lvalue ->length 0x5637cf48b648
| |   | | `-CXXThisExpr 0x5637cf4a3f68 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5637cf4a3fa8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5637cf4a3f38 <col:12> 'const int' lvalue .length 0x5637cf48b648
| |   |     `-DeclRefExpr 0x5637cf4a3f18 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf4a3bc8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5637cf4a4088 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5637cf4a4040 <col:12> 'String::memo_t *' lvalue ->memo 0x5637cf48b6d8
| |   | | `-CXXThisExpr 0x5637cf4a4030 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5637cf4a4070 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5637cf4a4000 <col:12> 'String::memo_t *const' lvalue .memo 0x5637cf48b6d8
| |   |     `-DeclRefExpr 0x5637cf4a3fe0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5637cf4a3bc8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5637cf4a40d0 <col:12>
| |     `-UnaryOperator 0x5637cf4a40b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5637cf4a40a8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5637cf4a3c38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5637cf4a3c38
|   `-ParmVarDecl 0x5637cf4a3d48 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5637cf48b750 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5637cf48b998 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5637cf48b7b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5637cf48b838 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5637cf48b8b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5637cf48f8d0 <col:79, line:261:5>
|   |-BinaryOperator 0x5637cf48f548 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5637cf48f4e0 <col:2, col:5> 'const char *' lvalue .data 0x5637cf48b5e0
|   | | `-MemberExpr 0x5637cf48f4b0 <col:2> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|   | |   `-CXXThisExpr 0x5637cf48f4a0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5637cf48f530 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5637cf48f510 <col:12> 'const char *' lvalue ParmVar 0x5637cf48b7b8 'data' 'const char *'
|   |-BinaryOperator 0x5637cf48f610 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5637cf48f5a8 <col:2, col:5> 'int' lvalue .length 0x5637cf48b648
|   | | `-MemberExpr 0x5637cf48f578 <col:2> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|   | |   `-CXXThisExpr 0x5637cf48f568 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5637cf48f5f8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5637cf48f5d8 <col:14> 'int' lvalue ParmVar 0x5637cf48b838 'length' 'int'
|   `-IfStmt 0x5637cf48f8b8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5637cf48f730 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5637cf48f718 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5637cf48f6f8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5637cf48f6d8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5637cf48f670 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|     |       | `-MemberExpr 0x5637cf48f640 <col:7> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|     |       |   `-CXXThisExpr 0x5637cf48f630 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5637cf48f6c0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5637cf48f6a0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5637cf48b8b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5637cf48f890 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5637cf48f878 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5637cf48f780 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5637cf466008 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5637cf48f7e8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5637cf48afa0
|         `-ImplicitCastExpr 0x5637cf48f7d0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5637cf48f7b0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5637cf48b8b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5637cf48bc48 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5637cf48ba68 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5637cf48bae8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5637cf48bb60 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5637cf48b750 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5637cf48fd58 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5637cf48fee8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5637cf48fe50 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5637cf48fdc0 <col:2> '<bound member function type>' ->assign_memo 0x5637cf48b998
|     | `-ImplicitCastExpr 0x5637cf48fe88 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5637cf48fdb0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5637cf48fea0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5637cf48fdf0 <col:14> 'const char *' lvalue ParmVar 0x5637cf48ba68 'data' 'const char *'
|     |-ImplicitCastExpr 0x5637cf48feb8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5637cf48fe10 <col:20> 'int' lvalue ParmVar 0x5637cf48bae8 'length' 'int'
|     `-ImplicitCastExpr 0x5637cf48fed0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf48fe30 <col:28> 'String::memo_t *' lvalue ParmVar 0x5637cf48bb60 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5637cf48bdd8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5637cf48bd18 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5637cf490140 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5637cf4900c0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5637cf48ff10 <col:2> '<bound member function type>' ->assign_memo 0x5637cf48b998
|     | `-CXXThisExpr 0x5637cf48ff00 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5637cf4900f8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5637cf48ff90 <col:14, col:19> 'const char *' lvalue .data 0x5637cf48b5e0
|     |   `-MemberExpr 0x5637cf48ff60 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5637cf48b750
|     |     `-DeclRefExpr 0x5637cf48ff40 <col:14> 'const String' lvalue ParmVar 0x5637cf48bd18 'x' 'const String &'
|     |-ImplicitCastExpr 0x5637cf490110 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5637cf490010 <col:25, col:30> 'int' lvalue .length 0x5637cf48b648
|     |   `-MemberExpr 0x5637cf48ffe0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5637cf48b750
|     |     `-DeclRefExpr 0x5637cf48ffc0 <col:25> 'const String' lvalue ParmVar 0x5637cf48bd18 'x' 'const String &'
|     `-ImplicitCastExpr 0x5637cf490128 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5637cf490090 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|         `-MemberExpr 0x5637cf490060 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5637cf48b750
|           `-DeclRefExpr 0x5637cf490040 <col:38> 'const String' lvalue ParmVar 0x5637cf48bd18 'x' 'const String &'
|-CXXMethodDecl 0x5637cf48bea0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5637cf491208 <col:31, line:278:5>
|   `-IfStmt 0x5637cf4911f0 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5637cf4901e0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5637cf4901c8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5637cf490198 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|     |     `-MemberExpr 0x5637cf490168 <col:6> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|     |       `-CXXThisExpr 0x5637cf490158 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5637cf4911c8 <col:15, line:277:2>
|       |-ParenExpr 0x5637cf490780 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5637cf490750 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5637cf4902f0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5637cf4902d8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5637cf4902c0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5637cf490280 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5637cf48afa0
|       |   |       `-ImplicitCastExpr 0x5637cf490268 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5637cf490238 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|       |   |           `-MemberExpr 0x5637cf490208 <col:27> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|       |   |             `-CXXThisExpr 0x5637cf4901f8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5637cf490350 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5637cf490330 <col:54> 'int' 0
|       |   `-CallExpr 0x5637cf4906b0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5637cf490698 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5637cf490620 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5637cf4906f0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5637cf490438 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5637cf490708 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5637cf4904e8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5637cf490720 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5637cf490520 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5637cf490738 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5637cf490608 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5637cf4905f0 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5637cf4905b8 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5637cf4910e8 <line:274:6, line:275:22>
|       | |-CallExpr 0x5637cf490990 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5637cf490978 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5637cf4908f0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5637cf46b3a0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5637cf4908c0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5637cf48afa0
|       | |   `-ImplicitCastExpr 0x5637cf4908a8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5637cf490878 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|       | |       `-MemberExpr 0x5637cf490848 <col:40> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|       | |         `-CXXThisExpr 0x5637cf490838 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5637cf490a90 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5637cf490a78 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5637cf4909b8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5637cf48cb78 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5637cf4910d0 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5637cf490a18 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|       |       `-MemberExpr 0x5637cf4909e8 <col:15> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|       |         `-CXXThisExpr 0x5637cf4909d8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5637cf4911a8 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5637cf491140 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5637cf48b6d8
|         | `-MemberExpr 0x5637cf491110 <col:6> 'String::rep_t' lvalue ->_r 0x5637cf48b750
|         |   `-CXXThisExpr 0x5637cf491100 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5637cf491190 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5637cf491170 <col:16> 'int' 0
|-CXXMethodDecl 0x5637cf48c138 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5637cf48bf58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5637cf48bfd8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5637cf48c050 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5637cf48c210 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5637cf48c460 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5637cf48c2c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5637cf48c348 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5637cf48c3c0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5637cf48c648 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5637cf48c530 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5637cf48c5b0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5637cf48c748 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5637cf491300 <col:41, line:286:5>
|   `-ReturnStmt 0x5637cf4912f0 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5637cf4912c0 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5637cf491288 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5637cf491270 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5637cf491250 <col:46> 'int' 1
|-CXXMethodDecl 0x5637cf48c9e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5637cf48c800 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5637cf48c880 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5637cf48c900 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5637cf48cb78 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5637cf48cab0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5637cf48cc48 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5637cf48ce18 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5637cf48cd00 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5637cf48cd80 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5637cf48eac0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5637cf48ec08 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5637cf48ed48 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5637cf48edc0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5637cf48ee38 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5637cf48eea0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5637cf48efa0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5637cf48eff0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf48ef80 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5637cf48ef60 <col:22> 'int' 14
|-CXXMethodDecl 0x5637cf48f208 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5637cf48f020 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5637cf48f0a0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5637cf48f120 <col:43> col:46 'int'
|-FriendDecl 0x5637cf48f310 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5637cf48f3a0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf5f45d8 prev 0x5637cf5bb860 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5637cf5f46d0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5637cf5f4760 <col:22, col:28> col:22 public
|-EnumDecl 0x5637cf5f4788 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5637cf5f48a8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4888 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5637cf5f4870 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5637cf5f4850 <col:14> 'int' 999
| |-EnumConstantDecl 0x5637cf5f4950 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4930 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5637cf5f4918 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5637cf5f48f8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5637cf5f49e0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f49c0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5637cf5f49a0 <col:17> 'int' 0
| |-EnumConstantDecl 0x5637cf5f4a70 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4a50 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5637cf5f4a30 <col:13> 'int' 1
| |-EnumConstantDecl 0x5637cf5f4b00 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4ae0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5637cf5f4ac0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5637cf5f4b90 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4b70 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5637cf5f4b50 <col:13> 'int' 3
| |-EnumConstantDecl 0x5637cf5f4c20 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4c00 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5637cf5f4be0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5637cf5f4cb0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4c90 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5637cf5f4c70 <col:14> 'int' 5
| |-EnumConstantDecl 0x5637cf5f4d40 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5637cf5f4d20 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5637cf5f4d00 <col:12> 'int' 6
| `-EnumConstantDecl 0x5637cf5f4dd0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5637cf5f4db0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5637cf5f4d90 <col:13> 'int' 7
|-VarDecl 0x5637cf5f4e98 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5637cf5f4f20 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5637cf5f4fa8 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5637cf5f5030 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5637cf5f50b8 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5637cf5f5140 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5637cf5f51c8 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5637cf5f5250 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5637cf5f52d8 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5637cf5f5360 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5637cf5f53e8 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5637cf5f54e8 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5637cf5fc538 '_nerrors' 'int'
| | `-IntegerLiteral 0x5637cf5fccc8 <line:128:13> 'int' 0
| `-CompoundStmt 0x5637cf5fcd38 <col:16, line:129:5>
|-CXXDestructorDecl 0x5637cf5f55d8 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5637cf5fcd48 <col:29, line:132:5>
|-CXXMethodDecl 0x5637cf5f5798 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5637cf5f56d0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf5f5860 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5637cf5f5948 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5637cf5fcda0 <col:44, line:161:5>
|   `-ReturnStmt 0x5637cf5fcd90 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5637cf5fcd78 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf5fcd58 <col:9> 'ErrorHandler *' lvalue Var 0x5637cf5fc598 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf5f5ad8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5637cf5f59f8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5637cf5f5ba0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5637cf5fce00 <col:43, line:173:5>
|   `-ReturnStmt 0x5637cf5fcdf0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5637cf5fcdd8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf5fcdb8 <col:9> 'ErrorHandler *' lvalue Var 0x5637cf5fc610 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5637cf5f5c58 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5637cf5f5cd8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5637cf5f5de8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5637cf5f5d58 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f5f38 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5637cf5f5ea8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6090 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5637cf5f5ff8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f61e8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5637cf5f6150 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6340 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5637cf5f62a8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6550 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5637cf5f63f8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5637cf5f6478 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6728 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5637cf5f6610 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5637cf5f6690 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6948 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5637cf5f67e8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5637cf5f6868 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6b28 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5637cf5f6a08 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5637cf5f6a88 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6d08 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5637cf5f6be8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5637cf5f6c68 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f6e90 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5637cf5f6dc8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5637cf5f7060 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5637cf5f6f48 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5637cf5f6fc0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5637cf5fd058 <col:57, line:234:5>
|   `-ReturnStmt 0x5637cf5fd048 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5637cf5fd030 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5637cf5fcfd8 <col:9, col:41> 'int'
|         |-MemberExpr 0x5637cf5fcfa8 <col:9> '<bound member function type>' ->xmessage 0x5637cf5f6e90
|         | `-CXXThisExpr 0x5637cf5fcf98 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5637cf5fd018 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5637cf5fd000 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5637cf5fcf78 <col:18, col:40> 'String' (CXXTemporary 0x5637cf5fcf78)
|               `-CallExpr 0x5637cf5fcf40 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5637cf5fcf28 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5637cf5fcea0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5637cf5f90b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5637cf5fcec0 <col:31> 'const String' lvalue ParmVar 0x5637cf5f6fc0 'str' 'const String &'
|                 `-DeclRefExpr 0x5637cf5fcee0 <col:36> 'const String' lvalue ParmVar 0x5637cf5f6f48 'anno' 'const String &'
|-CXXMethodDecl 0x5637cf5f73a0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5637cf5f7120 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5637cf5f71a0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5637cf5f7270 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5637cf5fd2e8 <col:68, line:243:5>
|   `-ReturnStmt 0x5637cf5fd2d8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5637cf5fd2c0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5637cf5fd260 <col:9, col:41> 'int'
|         |-MemberExpr 0x5637cf5fd230 <col:9> '<bound member function type>' ->xmessage 0x5637cf5f7060
|         | `-CXXThisExpr 0x5637cf5fd220 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5637cf5fd0f8 <col:18> 'const String' lvalue ParmVar 0x5637cf5f7120 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5637cf5fd2a8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5637cf5fd290 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5637cf5fd200 <col:24, col:40> 'String' (CXXTemporary 0x5637cf5fd200)
|               `-CXXMemberCallExpr 0x5637cf5fd198 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5637cf5fd128 <col:24> '<bound member function type>' ->vformat 0x5637cf5f8580
|                 | `-CXXThisExpr 0x5637cf5fd118 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5637cf5fd1c8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5637cf5fd158 <col:32> 'const char *' lvalue ParmVar 0x5637cf5f71a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5637cf5fd1e0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5637cf5fd178 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5637cf5f7270 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5637cf5f7640 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5637cf5f7468 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5637cf5f74e0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5637cf5f7558 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5637cf5fd628 <col:23, line:254:5>
|   `-ReturnStmt 0x5637cf5fd618 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5637cf5fd600 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5637cf5fd5a0 <col:9, col:71> 'int'
|         |-MemberExpr 0x5637cf5fd570 <col:9> '<bound member function type>' ->xmessage 0x5637cf5f7060
|         | `-CXXThisExpr 0x5637cf5fd560 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5637cf5fd5e8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5637cf5fd5d0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5637cf5fd520 <col:18, col:65> 'String' (CXXTemporary 0x5637cf5fd520)
|         |     `-CallExpr 0x5637cf5fd4b8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5637cf5fd4a0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5637cf5fd388 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5637cf5f90b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5637cf5fd3a8 <col:31> 'const String' lvalue ParmVar 0x5637cf5f74e0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5637cf5fd500 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5637cf5fd4e8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5637cf5fd480 <col:37, col:64> 'String' (CXXTemporary 0x5637cf5fd480)
|         |             `-CallExpr 0x5637cf5fd450 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5637cf5fd438 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5637cf5fd3c8 <col:37> 'String (const String &)' lvalue CXXMethod 0x5637cf5f9708 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5637cf5fd3e8 <col:56> 'const String' lvalue ParmVar 0x5637cf5f7468 'landmark' 'const String &'
|         `-DeclRefExpr 0x5637cf5fd540 <col:68> 'const String' lvalue ParmVar 0x5637cf5f7558 'str' 'const String &'
|-CXXMethodDecl 0x5637cf5f79c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5637cf5f7708 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5637cf5f7780 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5637cf5f7800 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5637cf5f7878 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5637cf5fd8e0 <col:34, line:267:5>
|   `-ReturnStmt 0x5637cf5fd8d0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5637cf5fd8b8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5637cf5fd850 <col:9, col:51> 'int'
|         |-MemberExpr 0x5637cf5fd820 <col:9> '<bound member function type>' ->xmessage 0x5637cf5f7640
|         | `-CXXThisExpr 0x5637cf5fd810 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5637cf5fd6c8 <col:18> 'const String' lvalue ParmVar 0x5637cf5f7708 'landmark' 'const String &'
|         |-DeclRefExpr 0x5637cf5fd6e8 <col:28> 'const String' lvalue ParmVar 0x5637cf5f7780 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5637cf5fd8a0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5637cf5fd888 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5637cf5fd7f0 <col:34, col:50> 'String' (CXXTemporary 0x5637cf5fd7f0)
|               `-CXXMemberCallExpr 0x5637cf5fd788 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5637cf5fd718 <col:34> '<bound member function type>' ->vformat 0x5637cf5f8580
|                 | `-CXXThisExpr 0x5637cf5fd708 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5637cf5fd7b8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5637cf5fd748 <col:42> 'const char *' lvalue ParmVar 0x5637cf5f7800 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5637cf5fd7d0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5637cf5fd768 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5637cf5f7878 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5637cf5f7ad0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5637cf5fd960 <col:25, line:288:5>
|   `-ReturnStmt 0x5637cf5fd950 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5637cf5fd938 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5637cf5fd908 <col:9> 'const int' lvalue ->_nerrors 0x5637cf5fc538
|         `-CXXThisExpr 0x5637cf5fd8f8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5637cf5f7ce0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5637cf5f7b88 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5637cf5f7c08 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f7fc8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5637cf5f7da8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5637cf5f7e28 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5637cf5f7ea0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5637cf5f8160 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5637cf5f8098 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f83a8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5637cf5f8220 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5637cf5f8298 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5637cf5fdbc0 <col:58, line:357:5>
|   `-ReturnStmt 0x5637cf5fdbb0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5637cf5fdb98 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5637cf5fdb68 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5637cf5fdb50 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5637cf5fdb30 <col:9, col:29> 'String' (CXXTemporary 0x5637cf5fdb30)
|             `-CallExpr 0x5637cf5fdac0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5637cf5fdaa8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5637cf5fda28 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5637cf5f7fc8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5637cf5fd9c8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5637cf5fdaf8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5637cf5fd9e8 <col:21> 'const char *' lvalue ParmVar 0x5637cf5f8220 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5637cf5fdb10 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5637cf5fda08 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5637cf5f8298 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5637cf5f8580 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5637cf5f8470 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5637cf5f84e8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5637cf5f86d8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5637cf5f8648 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5637cf5f8820 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5637cf5f8790 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5637cf5f8ac0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5637cf5f88d8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5637cf5f8958 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5637cf5f89d0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5637cf5f8c20 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5637cf5f8b90 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5637cf5fdcd8 <col:37, line:441:5>
|   `-IfStmt 0x5637cf5fdcc0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5637cf5fdc48 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5637cf5fdc18 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5637cf5fdbd8 <col:6> 'int' lvalue ParmVar 0x5637cf5f8b90 'level' 'int'
|     | `-ImplicitCastExpr 0x5637cf5fdc30 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5637cf5fdbf8 <col:15> 'ErrorHandler::Level' EnumConstant 0x5637cf5f4b90 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5637cf5fdca8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5637cf5fdc78 <col:8> 'int' lvalue ->_nerrors 0x5637cf5fc538
|         `-CXXThisExpr 0x5637cf5fdc68 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5637cf5f8ce8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5637cf5fdd70 <col:26, line:448:5>
|   `-BinaryOperator 0x5637cf5fdd50 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5637cf5fdd00 <col:2> 'int' lvalue ->_nerrors 0x5637cf5fc538
|     | `-CXXThisExpr 0x5637cf5fdcf0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5637cf5fdd30 <col:13> 'int' 0
|-CXXMethodDecl 0x5637cf5f8eb0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5637cf5f8da0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5637cf5f8e18 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5637cf5f90b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5637cf5f8f70 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5637cf5f8fe8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5637cf5f9368 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5637cf5f9178 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5637cf5f91f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5637cf5f9278 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5637cf5f9420 <col:59> 0 0
|-CXXMethodDecl 0x5637cf5f95b8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5637cf5f9498 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5637cf5f9518 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5637cf5fe3e0 <col:70, line:534:5>
|   |-DeclStmt 0x5637cf5fdee0 <line:528:2, col:20>
|   | |-VarDecl 0x5637cf5fdd98 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5637cf5fde00 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5637cf5fde38 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5637cf5fdea0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5637cf5fdfb0 <line:529:2, col:23>
|   | `-VarDecl 0x5637cf5fdf10 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5637cf5fdf98 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5637cf5fdf78 <col:18> 'const char *' lvalue ParmVar 0x5637cf5f9498 'begin' 'const char *'
|   |-DoStmt 0x5637cf5fe378 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5637cf5fe2a8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5637cf5fe290 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5637cf5fe270 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5637cf5fdfc8 <col:6> 'const char *' lvalue Var 0x5637cf5fdf10 'x' 'const char *'
|   | |     `-CallExpr 0x5637cf5fe1c0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5637cf5fe1a8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5637cf5fe160 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5637cf5fca10 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5637cf5fe228 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5637cf5fe210 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5637cf5fe080 <col:20, col:27> 'String' (CXXTemporary 0x5637cf5fe080)
|   | |       |     `-CXXTemporaryObjectExpr 0x5637cf5fe048 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5637cf5fe240 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5637cf5fe0a0 <col:30> 'const char *' lvalue Var 0x5637cf5fdf10 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5637cf5fe258 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5637cf5fe0c0 <col:33> 'const char *' lvalue ParmVar 0x5637cf5f9518 'end' 'const char *'
|   | |       |-UnaryOperator 0x5637cf5fe100 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5637cf5fe0e0 <col:39> 'String' lvalue Var 0x5637cf5fdd98 'name' 'String'
|   | |       |-UnaryOperator 0x5637cf5fe138 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5637cf5fe118 <col:46> 'String' lvalue Var 0x5637cf5fde38 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5637cf5fe150 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5637cf5fe360 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5637cf5fe348 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5637cf5fe328 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5637cf5fe2f8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5637cf483158
|   |         `-ImplicitCastExpr 0x5637cf5fe2e0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5637cf5fe2c0 <col:11> 'String' lvalue Var 0x5637cf5fdd98 'name' 'String'
|   `-ReturnStmt 0x5637cf5fe3d0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5637cf5fe3b8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf5fe398 <col:9> 'const char *' lvalue Var 0x5637cf5fdf10 'x' 'const char *'
|-CXXMethodDecl 0x5637cf5f9708 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5637cf5f9678 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5637cf5fe9e8 <col:55, line:550:5>
|   `-IfStmt 0x5637cf5fe9c0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5637cf5fe620 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5637cf5fe608 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5637cf5fe5f0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5637cf5fe5d0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5637cf5fe5a0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5637cf483158
|     | |       `-DeclRefExpr 0x5637cf5fe440 <col:6> 'const String' lvalue ParmVar 0x5637cf5f9678 'x' 'const String &'
|     | `-BinaryOperator 0x5637cf5fe580 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5637cf5fe550 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5637cf5fe500 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5637cf5fe4e8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5637cf5fe4a0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5637cf49e0a0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5637cf5fe460 <col:11> 'const String' lvalue ParmVar 0x5637cf5f9678 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5637cf5fe480 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5637cf5fe568 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5637cf5fe538 <col:19> 'char' 123
|     |-ReturnStmt 0x5637cf5fe690 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5637cf5fe660 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5637cf5fe640 <col:13> 'const String' lvalue ParmVar 0x5637cf5f9678 'x' 'const String &'
|     `-IfStmt 0x5637cf5fe998 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5637cf5fe728 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5637cf5fe710 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5637cf5fe6f0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5637cf5fe6c0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5637cf483158
|       |       `-DeclRefExpr 0x5637cf5fe6a0 <col:11> 'const String' lvalue ParmVar 0x5637cf5f9678 'x' 'const String &'
|       |-ReturnStmt 0x5637cf5fe8b0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5637cf5fe898 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5637cf5fe868 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5637cf5fe850 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5637cf5fe830 <col:13, col:29> 'String' (CXXTemporary 0x5637cf5fe830)
|       |         `-CallExpr 0x5637cf5fe7e0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5637cf5fe7c8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5637cf5fe740 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5637cf5f8eb0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5637cf5fe810 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5637cf5fe760 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5637cf5fe780 <col:28> 'const String' lvalue ParmVar 0x5637cf5f9678 'x' 'const String &'
|       `-ReturnStmt 0x5637cf5fe988 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5637cf5fe970 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5637cf5fe940 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5637cf5fe928 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5637cf5fe908 <col:13, col:20> 'String' (CXXTemporary 0x5637cf5fe908)
|                 `-CXXTemporaryObjectExpr 0x5637cf5fe8d0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5637cf5f98d0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5637cf5f97c0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5637cf5f9838 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf5fccb8 <col:71> 'bool' false
|-CXXRecordDecl 0x5637cf5f9980 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5637cf5fb928 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5637cf5fb8c0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5637cf5fb860 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5637cf5fb820 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5637cf47f440 'String'
|       | `-CXXRecord 0x5637cf47f3b0 'String'
|       |-BuiltinType 0x5637cf245580 'int'
|       `-DecayedType 0x5637cf5f7240 '__va_list_tag *' sugar
|         |-TypedefType 0x5637cf5f7210 'va_list' sugar
|         | |-Typedef 0x5637cf4b60b0 'va_list'
|         | `-TypedefType 0x5637cf4b6060 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5637cf4b1438 '__gnuc_va_list'
|         |   `-TypedefType 0x5637cf4b13a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x5637cf286d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5637cf286ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5637cf2462d0 '__va_list_tag'
|         |         `-CXXRecord 0x5637cf246238 '__va_list_tag'
|         `-PointerType 0x5637cf4bbc30 '__va_list_tag *'
|           `-RecordType 0x5637cf2462d0 '__va_list_tag'
|             `-CXXRecord 0x5637cf246238 '__va_list_tag'
|-EnumDecl 0x5637cf5fb980 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5637cf5fba80 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fbfe0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fba60 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5637cf5fba40 <col:16> 'int' 1
| |-EnumConstantDecl 0x5637cf5fbb10 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fbff8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbaf0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5637cf5fbad0 <col:21> 'int' 2
| |-EnumConstantDecl 0x5637cf5fbba0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc010 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbb80 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5637cf5fbb60 <col:22> 'int' 4
| |-EnumConstantDecl 0x5637cf5fbc30 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc028 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbc10 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5637cf5fbbf0 <col:17> 'int' 8
| |-EnumConstantDecl 0x5637cf5fbcc0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc040 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbca0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5637cf5fbc80 <col:22> 'int' 16
| |-EnumConstantDecl 0x5637cf5fbd50 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc058 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbd30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5637cf5fbd10 <col:19> 'int' 32
| |-EnumConstantDecl 0x5637cf5fbde0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc070 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbdc0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5637cf5fbda0 <col:17> 'int' 64
| |-EnumConstantDecl 0x5637cf5fbe70 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc088 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbe50 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5637cf5fbe30 <col:14> 'int' 128
| |-EnumConstantDecl 0x5637cf5fbf00 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5637cf5fc0a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf5fbee0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5637cf5fbec0 <col:16> 'int' 256
| `-EnumConstantDecl 0x5637cf5fbf90 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5637cf5fc0b8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf5fbf70 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5637cf5fbf50 <col:12> 'int' 1024
|-CXXMethodDecl 0x5637cf5fc2c8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5637cf5fc0e0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5637cf5fc180 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5637cf5fc450 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5637cf5fc388 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5637cf5fc4f8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5637cf5fc538 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5637cf5fc598 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5637cf5fc610 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5637cf5fca10 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5637cf5fc688 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5637cf5fc708 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5637cf5fc788 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5637cf5fc800 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5637cf5fc878 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5637cf5fc8f0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5637cf5fcb38 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5637cf5fcb38
| `-ParmVarDecl 0x5637cf5fcc48 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5637cf5fed48 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5637cf5fed48
  `-ParmVarDecl 0x5637cf5fee58 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf60e580 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf60e698 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x5637cf60e740 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x5637cf60e7a8 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x5637cf60e810 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x5637cf60e8c0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x5637cf60e740 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x5637cf60f740 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x5637cf60f6f8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x5637cf60f6c0 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x5637cf60f6a8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x5637cf60f650 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x5637cf4a9670 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x5637cf60e7a8 'len' 'int'
| | `-IntegerLiteral 0x5637cf60f7b8 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x5637cf60e810 'cap' 'int'
| | `-IntegerLiteral 0x5637cf60f820 <col:20> 'int' 0
| `-CompoundStmt 0x5637cf60f8a0 <col:23, line:119:2>
|-CXXConstructorDecl 0x5637cf60ea38 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x5637cf60e978 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x5637cf60f8b0 <col:37, line:121:2>
|-CXXConstructorDecl 0x5637cf611ac8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5637cf611bd8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x5637cf60e740 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x5637cf615a00 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x5637cf6159d0 <col:12> 'unsigned char *const' lvalue .s 0x5637cf60e740
| |     `-DeclRefExpr 0x5637cf6159b0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5637cf611bd8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x5637cf60e7a8 'len' 'int'
| | `-ImplicitCastExpr 0x5637cf615a90 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5637cf615a60 <col:12> 'const int' lvalue .len 0x5637cf60e7a8
| |     `-DeclRefExpr 0x5637cf615a40 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5637cf611bd8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x5637cf60e810 'cap' 'int'
| | `-ImplicitCastExpr 0x5637cf615b20 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5637cf615af0 <col:12> 'const int' lvalue .cap 0x5637cf60e810
| |     `-DeclRefExpr 0x5637cf615ad0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5637cf611bd8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x5637cf615b78 <col:12>
|-CXXConstructorDecl 0x5637cf611c78 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x5637cf611c78
| `-ParmVarDecl 0x5637cf611d88 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x5637cf615e30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf6098a8 prev 0x5637cf5bb910 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5637cf6099a0 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x5637cf609a30 <col:21, col:27> col:21 public
|-TypedefDecl 0x5637cf609a70 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5637cf245fd0 'const char *'
|   `-QualType 0x5637cf245521 'const char' const
|     `-BuiltinType 0x5637cf245520 'char'
|-TypedefDecl 0x5637cf609ae0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x5637cf2461a0 'char *'
|   `-BuiltinType 0x5637cf245520 'char'
|-TypedefDecl 0x5637cf609c20 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x5637cf609b90 'int (StringAccum::*)() const'
|   |-RecordType 0x5637cf47f390 'StringAccum'
|   | `-CXXRecord 0x5637cf6098a8 'StringAccum'
|   `-ParenType 0x5637cf47f6d0 'int () const' sugar
|     `-FunctionProtoType 0x5637cf47f6a0 'int () const' const cdecl
|       `-BuiltinType 0x5637cf245580 'int'
|-CXXConstructorDecl 0x5637cf609ce0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x5637cf609e30 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x5637cf609da0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x5637cf609f80 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x5637cf609ef0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x5637cf60a148 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x5637cf60a088 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x5637cf60a2f8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x5637cf60a238 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x5637cf60a3f0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x5637cf60a5a8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x5637cf60a4e0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x5637cf60a728 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x5637cf60a660 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x5637cf60a820 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5637cf60a8e8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x5637cf60a9b0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5637cf60aa78 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x5637cf60ab40 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x5637cf60aca8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5637cf60ad78 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5637cf60ae38 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5637cf60af48 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x5637cf60b058 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x5637cf60b118 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x5637cf60b1d8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x5637cf60b320 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5637cf60b290 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5637cf60b4e0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x5637cf60b3e0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5637cf60b5a8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5637cf60b6a0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x5637cf60b760 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5637cf60b828 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x5637cf60b8e8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5637cf60b9a8 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5637cf60ba68 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf60bbb8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x5637cf60bb20 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x5637cf60bd08 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x5637cf60bc78 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x5637cf60be60 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x5637cf60bdc8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x5637cf60bfb0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x5637cf60bf20 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x5637cf60c1d0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x5637cf60c070 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x5637cf60c0f0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x5637cf60f578 <col:53> 'int' 0
|-CXXMethodDecl 0x5637cf60c328 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x5637cf60c298 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x5637cf60f598 <col:34> 'int' 1
|-CXXMethodDecl 0x5637cf60c470 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x5637cf60c3e0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5637cf60c5c0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x5637cf60c530 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x5637cf60c710 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x5637cf60c680 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x5637cf60c860 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5637cf60c7d0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5637cf60ca38 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5637cf60c920 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5637cf60c9a0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5637cf60cc18 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5637cf60cb00 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x5637cf60cb80 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x5637cf60cdf8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5637cf60cce0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5637cf60cd60 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5637cf60cfd8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5637cf60cec0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x5637cf60cf40 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x5637cf60d1b8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5637cf60d0a0 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5637cf60d120 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5637cf60d518 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x5637cf60d300 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5637cf60d380 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5637cf60f5b8 <col:56> 'int' 10
| `-ParmVarDecl 0x5637cf60d3f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf60f5d8 <col:77> 'bool' true
|-CXXMethodDecl 0x5637cf60d878 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x5637cf60d660 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5637cf60d6e0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x5637cf60f5e8 <col:57> 'int' 10
| `-ParmVarDecl 0x5637cf60d758 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf60f608 <col:78> 'bool' true
|-CXXMethodDecl 0x5637cf60daa0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x5637cf60d948 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x5637cf60d9c8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x5637cf60db98 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x5637cf60dd08 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x5637cf60dc48 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x5637cf60de58 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x5637cf60ddc8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x5637cf60df00 <col:51> "" ""
|-AccessSpecDecl 0x5637cf60df70 <line:106:3, col:10> col:3 private
|-EnumDecl 0x5637cf60df98 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x5637cf60e518 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x5637cf60e568 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf60e4f8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x5637cf60e4c8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x5637cf48b3b8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x5637cf60e580 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5637cf60e698 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x5637cf60e740 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x5637cf60e7a8 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x5637cf60e810 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x5637cf60e8c0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x5637cf60e740 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x5637cf60f740 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x5637cf60f6f8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x5637cf60f6c0 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x5637cf60f6a8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x5637cf60f650 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x5637cf4a9670 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x5637cf60e7a8 'len' 'int'
| | | `-IntegerLiteral 0x5637cf60f7b8 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x5637cf60e810 'cap' 'int'
| | | `-IntegerLiteral 0x5637cf60f820 <col:20> 'int' 0
| | `-CompoundStmt 0x5637cf60f8a0 <col:23, line:119:2>
| |-CXXConstructorDecl 0x5637cf60ea38 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x5637cf60e978 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x5637cf60f8b0 <col:37, line:121:2>
| |-CXXConstructorDecl 0x5637cf611ac8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5637cf611bd8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x5637cf60e740 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x5637cf615a00 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x5637cf6159d0 <col:12> 'unsigned char *const' lvalue .s 0x5637cf60e740
| | |     `-DeclRefExpr 0x5637cf6159b0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5637cf611bd8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x5637cf60e7a8 'len' 'int'
| | | `-ImplicitCastExpr 0x5637cf615a90 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5637cf615a60 <col:12> 'const int' lvalue .len 0x5637cf60e7a8
| | |     `-DeclRefExpr 0x5637cf615a40 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5637cf611bd8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x5637cf60e810 'cap' 'int'
| | | `-ImplicitCastExpr 0x5637cf615b20 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5637cf615af0 <col:12> 'const int' lvalue .cap 0x5637cf60e810
| | |     `-DeclRefExpr 0x5637cf615ad0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x5637cf611bd8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x5637cf615b78 <col:12>
| |-CXXConstructorDecl 0x5637cf611c78 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x5637cf611c78
| | `-ParmVarDecl 0x5637cf611d88 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x5637cf615e30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x5637cf60eb10 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x5637cf60ec10 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x5637cf60eb78 <col:16> col:19 'int'
|-CXXMethodDecl 0x5637cf60edf0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x5637cf60ecd0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x5637cf60ed50 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x5637cf60efd0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x5637cf60eeb8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5637cf60ef38 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5637cf60f128 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x5637cf60f098 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x5637cf60f278 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x5637cf60f1e8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x5637cf60f538 <line:132:5, col:70> col:25
  `-FunctionDecl 0x5637cf60f478 parent 0x5637cf245488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x5637cf60f330 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x5637cf60f3a8 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf85e4c8 <../elements/ip/iproutetable.hh:163:1, line:186:1> line:163:8 referenced struct IPRoute definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5637cf85e5e8 <col:1, col:8> col:8 implicit referenced struct IPRoute
|-FieldDecl 0x5637cf85e688 <line:164:5, col:15> col:15 referenced addr 'IPAddress'
|-FieldDecl 0x5637cf85e6e8 <line:165:5, col:15> col:15 referenced mask 'IPAddress'
|-FieldDecl 0x5637cf85e748 <line:166:5, col:15> col:15 referenced gw 'IPAddress'
|-FieldDecl 0x5637cf85e7a8 <line:167:5, col:13> col:13 referenced port 'int32_t':'int'
|-FieldDecl 0x5637cf85e808 <line:168:5, col:13> col:13 referenced extra 'int32_t':'int'
|-CXXConstructorDecl 0x5637cf85e8c0 <line:170:5, col:28> col:5 IPRoute 'void ()'
| |-CXXCtorInitializer Field 0x5637cf85e688 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x5637cf85f9f0 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5637cf85e6e8 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x5637cf85fa40 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5637cf85e748 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x5637cf85fa90 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5637cf85e7a8 'port' 'int32_t':'int'
| | `-UnaryOperator 0x5637cf85f990 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x5637cf85f970 <col:23> 'int' 1
| `-CompoundStmt 0x5637cf85fb00 <col:26, col:28>
|-CXXConstructorDecl 0x5637cf85ebd8 <line:171:5, line:172:42> line:171:5 IPRoute 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x5637cf85e978 <col:13, col:23> col:23 used a 'IPAddress'
| |-ParmVarDecl 0x5637cf85e9f0 <col:26, col:36> col:36 used m 'IPAddress'
| |-ParmVarDecl 0x5637cf85ea68 <col:39, col:49> col:49 used g 'IPAddress'
| |-ParmVarDecl 0x5637cf85eae8 <col:52, col:56> col:56 used p 'int'
| |-CXXCtorInitializer Field 0x5637cf85e688 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x5637cf85fc60 <line:172:7, col:13> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5637cf85fb50 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5637cf85fb10 <col:12> 'IPAddress' lvalue ParmVar 0x5637cf85e978 'a' 'IPAddress'
| |-CXXCtorInitializer Field 0x5637cf85e6e8 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x5637cf85fd10 <col:16, col:22> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5637cf85fcf8 <col:21> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5637cf85fcb8 <col:21> 'IPAddress' lvalue ParmVar 0x5637cf85e9f0 'm' 'IPAddress'
| |-CXXCtorInitializer Field 0x5637cf85e748 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x5637cf85fdc0 <col:25, col:29> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5637cf85fda8 <col:28> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5637cf85fd68 <col:28> 'IPAddress' lvalue ParmVar 0x5637cf85ea68 'g' 'IPAddress'
| |-CXXCtorInitializer Field 0x5637cf85e7a8 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x5637cf85fe58 <col:37> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x5637cf85fe18 <col:37> 'int' lvalue ParmVar 0x5637cf85eae8 'p' 'int'
| `-CompoundStmt 0x5637cf85feb8 <col:40, col:42>
|-CXXMethodDecl 0x5637cf85ece8 <line:174:5, col:69> col:17 used real 'bool () const' inline
| `-CompoundStmt 0x5637cf85ffd8 <col:30, col:69>
|   `-ReturnStmt 0x5637cf85ffc8 <col:32, col:57>
|     `-BinaryOperator 0x5637cf85ffa8 <col:39, col:57> 'bool' '>'
|       |-ImplicitCastExpr 0x5637cf85ff90 <col:39> 'int32_t':'int' <LValueToRValue>
|       | `-MemberExpr 0x5637cf85fed8 <col:39> 'const int32_t':'const int' lvalue ->port 0x5637cf85e7a8
|       |   `-CXXThisExpr 0x5637cf85fec8 <col:39> 'const IPRoute *' implicit this
|       `-CStyleCastExpr 0x5637cf85ff68 <col:46, col:57> 'int32_t':'int' <NoOp>
|         `-ImplicitCastExpr 0x5637cf85ff50 <col:56, col:57> 'int32_t':'int' <IntegralCast> part_of_explicit_cast
|           `-UnaryOperator 0x5637cf85ff28 <col:56, col:57> 'unsigned int' prefix '-'
|             `-IntegerLiteral 0x5637cf85ff08 <col:57> 'unsigned int' 2147483648
|-CXXMethodDecl 0x5637cf85eda8 <line:175:5, col:76> col:17 used kill 'void ()' inline
| `-CompoundStmt 0x5637cf860800 <col:24, col:76>
|   |-ExprWithCleanups 0x5637cf860608 <col:26, col:33> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x5637cf8605d0 <col:26, col:33> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x5637cf8605b8 <col:31> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5637cf8603a8 <col:31> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x5637cf8601c8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x5637cf860000 <col:26> 'IPAddress' lvalue ->addr 0x5637cf85e688
|   |   | `-CXXThisExpr 0x5637cf85fff0 <col:26> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5637cf860390 <col:33> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x5637cf860360 <col:33> 'IPAddress' 'void (unsigned int)'
|   |       `-ImplicitCastExpr 0x5637cf860348 <col:33> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x5637cf860030 <col:33> 'int' 0
|   |-ExprWithCleanups 0x5637cf860738 <col:36, col:43> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x5637cf860700 <col:36, col:43> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x5637cf8606e8 <col:41> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5637cf8606c8 <col:41> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x5637cf8601c8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x5637cf860630 <col:36> 'IPAddress' lvalue ->mask 0x5637cf85e6e8
|   |   | `-CXXThisExpr 0x5637cf860620 <col:36> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5637cf8606b0 <col:43> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x5637cf860680 <col:43> 'IPAddress' 'void (unsigned int)'
|   |       `-IntegerLiteral 0x5637cf860660 <col:43> 'unsigned int' 4294967295
|   `-BinaryOperator 0x5637cf8607e0 <col:56, col:64> 'int32_t':'int' lvalue '='
|     |-MemberExpr 0x5637cf860760 <col:56> 'int32_t':'int' lvalue ->port 0x5637cf85e7a8
|     | `-CXXThisExpr 0x5637cf860750 <col:56> 'IPRoute *' implicit this
|     `-ImplicitCastExpr 0x5637cf8607c8 <col:63, col:64> 'int32_t':'int' <IntegralCast>
|       `-UnaryOperator 0x5637cf8607b0 <col:63, col:64> 'unsigned int' prefix '-'
|         `-IntegerLiteral 0x5637cf860790 <col:64> 'unsigned int' 2147483648
|-CXXMethodDecl 0x5637cf85eee8 <line:176:5, col:39> col:17 contains 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5637cf85ee58 <col:26, col:36> col:36 a 'IPAddress'
|-CXXMethodDecl 0x5637cf85f088 <line:177:5, col:44> col:17 contains 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5637cf85efc8 <col:26, col:41> col:41 r 'const IPRoute &'
|-CXXMethodDecl 0x5637cf85f1d0 <line:178:5, col:47> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5637cf85f140 <col:34, col:44> col:44 m 'IPAddress'
|-CXXMethodDecl 0x5637cf85f318 <line:179:5, col:52> col:17 mask_as_specific 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5637cf85f288 <col:34, col:49> col:49 r 'const IPRoute &'
|-CXXMethodDecl 0x5637cf85f460 <line:180:5, col:41> col:17 match 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5637cf85f3d0 <col:23, col:38> col:38 r 'const IPRoute &'
|-CXXMethodDecl 0x5637cf85f530 <line:181:5, col:64> col:9 prefix_len 'int () const'
| `-CompoundStmt 0x5637cf8608c8 <col:28, col:64>
|   `-ReturnStmt 0x5637cf8608b8 <col:30, col:61>
|     `-CXXMemberCallExpr 0x5637cf860898 <col:37, col:61> 'int'
|       `-MemberExpr 0x5637cf860868 <col:37, col:42> '<bound member function type>' .mask_to_prefix_len 0x5637cf575e08
|         `-MemberExpr 0x5637cf860838 <col:37> 'const IPAddress' lvalue ->mask 0x5637cf85e6e8
|           `-CXXThisExpr 0x5637cf860828 <col:37> 'const IPRoute *' implicit this
|-CXXMethodDecl 0x5637cf85f728 <line:183:5, col:51> col:18 used unparse 'StringAccum &(StringAccum &, bool) const'
| |-ParmVarDecl 0x5637cf85f5e0 <col:26, col:37> col:38 'StringAccum &'
| `-ParmVarDecl 0x5637cf85f658 <col:40, col:45> col:45 tabs 'bool'
|-CXXMethodDecl 0x5637cf85f7f8 <line:184:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5637cf85f8b8 <line:185:5, col:72> col:12 unparse_addr 'String () const'
| `-CompoundStmt 0x5637cf860a80 <col:33, col:72>
|   `-ReturnStmt 0x5637cf860a70 <col:35, col:69>
|     `-ExprWithCleanups 0x5637cf860a58 <col:42, col:69> 'String'
|       `-CXXConstructExpr 0x5637cf860a28 <col:42, col:69> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5637cf860a10 <col:42, col:69> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5637cf8609f0 <col:42, col:69> 'String' (CXXTemporary 0x5637cf8609f0)
|             `-CXXMemberCallExpr 0x5637cf860990 <col:42, col:69> 'String'
|               |-MemberExpr 0x5637cf860920 <col:42, col:47> '<bound member function type>' .unparse_with_mask 0x5637cf576a08
|               | `-MemberExpr 0x5637cf8608f0 <col:42> 'const IPAddress' lvalue ->addr 0x5637cf85e688
|               |   `-CXXThisExpr 0x5637cf8608e0 <col:42> 'const IPRoute *' implicit this
|               `-CXXConstructExpr 0x5637cf8609b8 <col:65> 'IPAddress' 'void (const IPAddress &) noexcept'
|                 `-MemberExpr 0x5637cf860960 <col:65> 'const IPAddress' lvalue ->mask 0x5637cf85e6e8
|                   `-CXXThisExpr 0x5637cf860950 <col:65> 'const IPRoute *' implicit this
|-CXXConstructorDecl 0x5637cf8a4918 <line:163:8> col:8 implicit constexpr IPRoute 'void (const IPRoute &)' inline default trivial noexcept-unevaluated 0x5637cf8a4918
| `-ParmVarDecl 0x5637cf8a49f8 <col:8> col:8 'const IPRoute &'
`-CXXConstructorDecl 0x5637cf8a4a68 <col:8> col:8 implicit constexpr IPRoute 'void (IPRoute &&)' inline default trivial noexcept-unevaluated 0x5637cf8a4a68
  `-ParmVarDecl 0x5637cf8a4b78 <col:8> col:8 'IPRoute &&'

Layout: <CGRecordLayout
  LLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  NonVirtualBaseLLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf4618b8 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf4619d8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5637cf461a68 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5637cf461b38 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5637cf461c20 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf462ad8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5637cf462980 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf462c88 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5637cf462b90 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5637cf462dd0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5637cf462d40 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5637cf462f18 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5637cf462e88 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf463060 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5637cf462fd0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf463128 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5637cf4632a8 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5637cf4631e0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5637cf463370 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5637cf4634b8 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5637cf463428 <col:28> col:31 'int'
|-CXXMethodDecl 0x5637cf463638 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5637cf463570 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf463780 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5637cf4636f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf463848 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5637cf463a88 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5637cf4638f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5637cf463970 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf463cd8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5637cf463b48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf463bc0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5637cf463d88 <col:86> "" ""
|-CXXMethodDecl 0x5637cf463ff8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5637cf463e68 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5637cf463ee0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf4641a8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5637cf4640b8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5637cf464358 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5637cf464260 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5637cf464628 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5637cf464410 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5637cf464488 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5637cf464500 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf464990 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5637cf4646f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5637cf464768 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf4647e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5637cf464a48 <col:115> "" ""
|-AccessSpecDecl 0x5637cf464ab8 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5637cf464af0 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf464f98 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5637cf464f98
| `-ParmVarDecl 0x5637cf4650a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5637cf465148 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5637cf465148
| `-ParmVarDecl 0x5637cf465258 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5637cf4ac968 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5637cf818240 <col:7>
|-CXXConstructorDecl 0x5637cf4aca40 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5637cf4aca40
| `-ParmVarDecl 0x5637cf4acb58 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5637cf4acbc8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5637cf4acbc8
| `-ParmVarDecl 0x5637cf4accd8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5637cf81abb0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf7ff668 prev 0x5637cf7f6d90 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf7ff760 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5637cf807250 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5637cf807378 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5637cf8074f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5637cf807678 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5637cf8077f8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5637cf8183a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5637cf818c18 <col:11>
|-CXXDestructorDecl 0x5637cf818480 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5637cf8185b8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5637cf8185b8
| `-ParmVarDecl 0x5637cf8186c8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5637cf818768 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5637cf818768
| `-ParmVarDecl 0x5637cf818878 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5637cf81b5a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5637cf81b6b8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5637cf81b938 <col:11>
|   `-ReturnStmt 0x5637cf81b928 <col:11>
|     `-UnaryOperator 0x5637cf81b910 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5637cf81b900 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5637cf81b728 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5637cf81b728
  `-ParmVarDecl 0x5637cf81b838 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf807860 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5637cf807978 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5637cf807a18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5637cf807a80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5637cf807ae8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5637cf807b50 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5637cf807bb0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5637cf807c70 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5637cf807cd0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5637cf807d30 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5637cf8182b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5637cf807a18 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5637cf818c28 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5637cf818c80 <col:12>
|-CXXConstructorDecl 0x5637cf8188e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5637cf8188e8
| `-ParmVarDecl 0x5637cf8189f8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5637cf818a98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5637cf818a98
| `-ParmVarDecl 0x5637cf818ba8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5637cf81ac90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5637cf7f04e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5637cf7f05f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5637cf7f0688 <col:16, col:22> col:16 public
|-EnumDecl 0x5637cf7f06b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5637cf7f07b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5637cf7f0890 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f0790 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5637cf7f0770 <col:21> 'int' 28
| `-EnumConstantDecl 0x5637cf7f0840 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5637cf7f08a8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf7f0820 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5637cf7f0800 <col:22> 'int' 64
|-CXXMethodDecl 0x5637cf7f0be8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5637cf7f08d0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf7f0950 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5637cf7f09c8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf7f0a40 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5637cf7f0ca8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f0ea8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5637cf7f0d20 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5637cf7f0d98 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5637cf7f0f58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f10b8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5637cf7f0fc8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5637cf7f1160 <col:72> warn_unused_result ""
|-TypedefDecl 0x5637cf7f1490 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5637cf7f1420 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5637cf7f13c0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5637cf7f1380 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5637cf2454e0 'void'
|       |-PointerType 0x5637cf497e80 'unsigned char *'
|       | `-BuiltinType 0x5637cf2455e0 'unsigned char'
|       |-TypedefType 0x5637cf2e9ff0 'size_t' sugar
|       | |-Typedef 0x5637cf2b5be0 'size_t'
|       | `-BuiltinType 0x5637cf245640 'unsigned long'
|       `-PointerType 0x5637cf245ce0 'void *'
|         `-BuiltinType 0x5637cf2454e0 'void'
|-CXXMethodDecl 0x5637cf7f1908 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5637cf7f1500 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5637cf7f1578 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf7f1610 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5637cf7f1690 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5637cf8091c0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5637cf8091a8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5637cf809170 <col:58> 'int' 0
| |-ParmVarDecl 0x5637cf7f1710 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5637cf8091e8 <col:76> 'int' 0
| |-ParmVarDecl 0x5637cf7f1790 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5637cf809208 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5637cf7f19d8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f1a58 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5637cf7f1b18 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5637cf7f1bb8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f1c10 <col:30>
|-CXXMethodDecl 0x5637cf7f1c88 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5637cf7f1d28 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f1d80 <col:30>
|-CXXMethodDecl 0x5637cf7f1df8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5637cf7f1e98 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f1f48 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5637cf7f1fe8 <col:20>
| |-OptimizeNoneAttr 0x5637cf7f2040 <col:30>
| `-WarnUnusedResultAttr 0x5637cf7f2068 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f20c0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5637cf7f2160 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f21b8 <col:30>
|-CXXMethodDecl 0x5637cf7f2208 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5637cf7f22a8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f2300 <col:30>
|-CXXMethodDecl 0x5637cf7f2348 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5637cf7f23e8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f2440 <col:30>
|-CXXMethodDecl 0x5637cf7f2488 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf7f2548 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf7f2610 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5637cf7f26d8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5637cf7f2798 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf7f28b8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5637cf8092d0 <col:54, line:99:5>
|   `-ReturnStmt 0x5637cf8092c0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5637cf8092a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5637cf809278 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5637cf808068
|         `-CXXThisExpr 0x5637cf809268 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5637cf7f2a58 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5637cf7f2968 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5637cf809380 <col:67, line:103:5>
|   `-BinaryOperator 0x5637cf809360 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5637cf8092f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5637cf808068
|     | `-CXXThisExpr 0x5637cf8092e8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5637cf809348 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf809328 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5637cf7f2968 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5637cf7f2b50 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5637cf809400 <col:33, line:107:5>
|   `-ReturnStmt 0x5637cf8093f0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5637cf8093d8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5637cf8093a8 <col:16> 'void *' lvalue ->_destructor_argument 0x5637cf8080d0
|         `-CXXThisExpr 0x5637cf809398 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5637cf7f2c10 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5637cf809a30 <col:25, line:113:5>
|   |-ParenExpr 0x5637cf809778 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5637cf809748 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf8094b8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5637cf809490 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5637cf809458 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5637cf809428 <col:24> '<bound member function type>' ->shared 0x5637cf7f1c88
|   |   |       `-ImplicitCastExpr 0x5637cf809478 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5637cf809418 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5637cf809518 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf8094f8 <col:42> 'int' 0
|   |   `-CallExpr 0x5637cf8096a8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5637cf809690 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf809670 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf8096e8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf809588 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5637cf809700 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf8095b0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf809718 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf8095e8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5637cf809730 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf809658 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf809640 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf809608 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5637cf809978 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5637cf8097a8 <col:2> 'unsigned char *' lvalue ->_head 0x5637cf807e70
|   | | `-CXXThisExpr 0x5637cf809798 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5637cf809960 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5637cf809940 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5637cf8097e8 <col:10> 'unsigned char *' lvalue ->_data 0x5637cf807ed8
|   |     | `-CXXThisExpr 0x5637cf8097d8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5637cf809928 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5637cf809908 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5637cf809828 <col:18> 'unsigned char *' lvalue ->_tail 0x5637cf807f40
|   |         | `-CXXThisExpr 0x5637cf809818 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5637cf8098f0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5637cf8098d0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5637cf809868 <col:26> 'unsigned char *' lvalue ->_end 0x5637cf807fa8
|   |             | `-CXXThisExpr 0x5637cf809858 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5637cf8098b8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5637cf809898 <col:33> 'int' 0
|   `-BinaryOperator 0x5637cf809a10 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5637cf8099a8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5637cf808068
|     | `-CXXThisExpr 0x5637cf809998 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5637cf8099f8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5637cf8099d8 <col:16> 'int' 0
|-CXXMethodDecl 0x5637cf7f2d50 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5637cf7f2cc0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7f2df8 <col:20>
| |-OptimizeNoneAttr 0x5637cf7f2e50 <col:30>
| `-WarnUnusedResultAttr 0x5637cf7f2e78 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f2f48 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5637cf7f2eb8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7f2ff0 <col:20>
| |-OptimizeNoneAttr 0x5637cf7f3048 <col:30>
| `-WarnUnusedResultAttr 0x5637cf7f3070 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f31a8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5637cf7f30b0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5637cf7f3250 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f3350 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5637cf7f32c0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7f33f8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f3450 <col:30>
|-CXXMethodDecl 0x5637cf7f3518 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5637cf7f3488 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5637cf7f35c0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f36c0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5637cf7f3630 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5637cf7f3768 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f3868 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5637cf7f37d8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7f3910 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f3968 <col:30>
|-CXXMethodDecl 0x5637cf7f3af8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5637cf7f39a8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5637cf7f3a20 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5637cf809228 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5637cf7f3ba8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5637cf7f3da8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5637cf7f3c20 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5637cf7f3c98 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf7f3fb8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5637cf7f3e68 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5637cf7f3ee0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf7f41c8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5637cf7f4078 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5637cf7f40f8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5637cf809238 <col:39> 'int' 0
|-CXXMethodDecl 0x5637cf7f4298 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5637cf7f4360 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5637cf7f4428 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5637cf7f44e8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf7f45b0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5637cf7f46f8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5637cf7f4668 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5637cf7f48c8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5637cf7f47b8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5637cf7f4830 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf7f4998 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5637cf7f4a58 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5637cf7f4af8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f4b50 <col:30>
|-CXXMethodDecl 0x5637cf7f4ba0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5637cf7f4c40 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f4c98 <col:30>
|-CXXMethodDecl 0x5637cf7f4ce8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5637cf7f4da8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf7f4e70 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5637cf7f4f10 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f4f68 <col:30>
|-CXXMethodDecl 0x5637cf7f50b8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5637cf7f4fa8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5637cf7f5020 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf7f5208 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5637cf7f5178 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf7f52d0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5637cf7f5390 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5637cf7f5430 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f5488 <col:30>
|-CXXMethodDecl 0x5637cf7f54d8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5637cf7f5578 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f55d0 <col:30>
|-CXXMethodDecl 0x5637cf7f5620 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5637cf7f56e8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5637cf7f5788 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f57e0 <col:30>
|-CXXMethodDecl 0x5637cf7f5828 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5637cf7f5948 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5637cf7f5ab8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5637cf7f59f8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5637cf7f5ba8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5637cf7f5c48 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f5ca0 <col:30>
|-CXXMethodDecl 0x5637cf7f5cf0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5637cf7f5db0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5637cf7f5fe8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5637cf7f5e60 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5637cf7f5ed8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7f6098 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f60f0 <col:30>
|-CXXMethodDecl 0x5637cf7f6198 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5637cf7f6238 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f6290 <col:30>
|-CXXMethodDecl 0x5637cf7f62e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5637cf7f6380 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f63d8 <col:30>
|-CXXMethodDecl 0x5637cf7f6420 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5637cf7f64c0 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f6518 <col:30>
|-CXXMethodDecl 0x5637cf7f6618 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5637cf7f6550 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5637cf7f66c0 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f6718 <col:30>
|-CXXMethodDecl 0x5637cf7f68d8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5637cf7f6750 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5637cf7f67c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7f6988 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f69e0 <col:30>
|-CXXMethodDecl 0x5637cf7f6a88 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5637cf7f6ba8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5637cf7f6cc8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5637cf7f6d68 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5637cf7f6d90 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5637cf7f6eb8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5637cf7f6f58 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f6fb0 <col:30>
|-CXXMethodDecl 0x5637cf7f7058 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5637cf7f70f8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f7150 <col:30>
|-AccessSpecDecl 0x5637cf7f7178 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5637cf7f71a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5637cf7f72a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5637cf7f72f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf7f7280 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5637cf7f7260 <col:14> 'int' 48
|-CXXMethodDecl 0x5637cf7f7358 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5637cf7f73f8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f7450 <col:30>
|-CXXMethodDecl 0x5637cf7f74c8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5637cf7f7568 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f75c0 <col:30>
|-CXXMethodDecl 0x5637cf7f7688 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5637cf7f75f8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5637cf7f7850 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5637cf7f79f8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5637cf7f7900 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5637cf7f7aa0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5637cf7f7ba0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5637cf7f7f50 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f7b80 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5637cf7f7b60 <col:9> 'int' 0
| |-EnumConstantDecl 0x5637cf7f7c30 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5637cf7f7f68 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f7c10 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5637cf7f7bf0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5637cf7f7cc0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5637cf7f7f80 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f7ca0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5637cf7f7c80 <col:14> 'int' 2
| |-EnumConstantDecl 0x5637cf7f7d50 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5637cf7f7f98 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f7d30 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5637cf7f7d10 <col:14> 'int' 3
| |-EnumConstantDecl 0x5637cf7f7de0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5637cf7f7fb0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f7dc0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5637cf7f7da0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5637cf7f7e70 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5637cf7f7fc8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f7e50 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5637cf7f7e30 <col:13> 'int' 5
| `-EnumConstantDecl 0x5637cf7f7f00 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5637cf7f7fe0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf7f7ee0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5637cf7f7ec0 <col:14> 'int' 6
|-CXXMethodDecl 0x5637cf7f8048 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5637cf7f80e8 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f8140 <col:30>
|-CXXMethodDecl 0x5637cf7f8238 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5637cf7f8178 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5637cf7f82e0 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f8338 <col:30>
|-CXXMethodDecl 0x5637cf7f83a8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5637cf7f84d0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5637cf7f8648 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5637cf7f8580 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5637cf7f8710 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5637cf7f87d8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5637cf7f8918 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5637cf7f8888 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5637cf7f89c0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5637cf7f8ac0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5637cf7f8cc0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f8aa0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5637cf7f8a80 <col:23> 'int' 0
| |-EnumConstantDecl 0x5637cf7f8b50 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5637cf7f8cd8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f8b30 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5637cf7f8b10 <col:45> 'int' 4
| |-EnumConstantDecl 0x5637cf7f8be0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5637cf7f8cf0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7f8bc0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5637cf7f8ba0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5637cf7f8c70 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5637cf7f8d08 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf7f8c50 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5637cf7f8c30 <col:47> 'int' 16
|-CXXMethodDecl 0x5637cf7f8d68 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5637cf7f8ed8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5637cf7f8e18 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5637cf7f8f80 <col:20>
| `-OptimizeNoneAttr 0x5637cf7f8fd8 <col:30>
|-CXXMethodDecl 0x5637cf7f9028 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5637cf809b50 <col:18, col:36>
|   `-ReturnStmt 0x5637cf809b40 <col:20, col:33>
|     `-ImplicitCastExpr 0x5637cf809b28 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5637cf809b08 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5637cf809ad8 <col:27> '<bound member function type>' ->xanno 0x5637cf7f7058
|           `-CXXThisExpr 0x5637cf809ac8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5637cf7f9120 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5637cf809c60 <col:30, col:48>
|   `-ReturnStmt 0x5637cf809c50 <col:32, col:45>
|     `-ImplicitCastExpr 0x5637cf809c38 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5637cf809c18 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5637cf809be8 <col:39> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|           `-CXXThisExpr 0x5637cf809bd8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5637cf7f9208 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5637cf809df8 <col:24, col:50>
|   `-ReturnStmt 0x5637cf809de8 <col:26, col:47>
|     `-UnaryOperator 0x5637cf809dd0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5637cf809db0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5637cf809d98 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5637cf809d48 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5637cf807378
|         |   `-CXXMemberCallExpr 0x5637cf809d28 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5637cf809cf8 <col:34> '<bound member function type>' ->xanno 0x5637cf7f7058
|         |       `-CXXThisExpr 0x5637cf809ce8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5637cf809d78 <col:46> 'int' 0
|-CXXMethodDecl 0x5637cf7f92f8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5637cf809fc8 <col:36, col:62>
|   `-ReturnStmt 0x5637cf809fb8 <col:38, col:59>
|     `-UnaryOperator 0x5637cf809fa0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5637cf809f80 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5637cf809f68 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5637cf809ee0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5637cf807378
|         |   `-CXXMemberCallExpr 0x5637cf809ec0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5637cf809e90 <col:46> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|         |       `-CXXThisExpr 0x5637cf809e80 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5637cf809f10 <col:58> 'int' 0
|-CXXMethodDecl 0x5637cf7f9418 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5637cf80a160 <col:26, col:53>
|   `-ReturnStmt 0x5637cf80a150 <col:28, col:50>
|     `-UnaryOperator 0x5637cf80a138 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5637cf80a118 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5637cf80a100 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5637cf80a0b0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5637cf807678
|         |   `-CXXMemberCallExpr 0x5637cf80a090 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5637cf80a060 <col:36> '<bound member function type>' ->xanno 0x5637cf7f7058
|         |       `-CXXThisExpr 0x5637cf80a050 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5637cf80a0e0 <col:49> 'int' 0
|-CXXMethodDecl 0x5637cf7f9538 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5637cf80a338 <col:38, col:65>
|   `-ReturnStmt 0x5637cf80a328 <col:40, col:62>
|     `-UnaryOperator 0x5637cf80a310 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5637cf80a2f0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5637cf80a2d8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5637cf80a248 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5637cf807678
|         |   `-CXXMemberCallExpr 0x5637cf80a228 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5637cf80a1f8 <col:48> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|         |       `-CXXThisExpr 0x5637cf80a1e8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5637cf80a278 <col:61> 'int' 0
|-CXXMethodDecl 0x5637cf7f96e8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5637cf7f95f0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5637cf80a990 <col:34, line:463:5>
|   |-ParenExpr 0x5637cf80a7d8 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5637cf80a7a8 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80a488 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80a458 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80a3a8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80a390 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80a350 <col:23> 'int' lvalue ParmVar 0x5637cf7f95f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80a370 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80a438 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80a408 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80a3c8 <col:33> 'int' lvalue ParmVar 0x5637cf7f95f0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5637cf80a420 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5637cf80a3e8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5637cf80a4e8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80a4c8 <col:56> 'int' 0
|   |   `-CallExpr 0x5637cf80a708 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80a6f0 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80a6d0 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80a748 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80a5d8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5637cf80a760 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80a608 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80a778 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80a640 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5637cf80a790 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80a6b8 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80a6a0 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80a660 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5637cf80a980 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5637cf80a968 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5637cf80a948 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5637cf80a918 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5637cf80a8c8 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5637cf807378
|         |   `-CXXMemberCallExpr 0x5637cf80a8a8 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5637cf80a878 <col:9> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|         |       `-CXXThisExpr 0x5637cf80a868 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5637cf80a930 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5637cf80a8f8 <col:21> 'int' lvalue ParmVar 0x5637cf7f95f0 'i' 'int'
|-CXXMethodDecl 0x5637cf7f9938 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5637cf7f97a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5637cf7f9820 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5637cf80b018 <col:40, line:472:5>
|   |-ParenExpr 0x5637cf80ae30 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5637cf80ae00 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80aae8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80aab8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80aa08 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80a9f0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80a9b0 <col:23> 'int' lvalue ParmVar 0x5637cf7f97a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80a9d0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80aa98 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80aa68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80aa28 <col:33> 'int' lvalue ParmVar 0x5637cf7f97a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5637cf80aa80 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5637cf80aa48 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5637cf80ab48 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80ab28 <col:56> 'int' 0
|   |   `-CallExpr 0x5637cf80ad60 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80ad48 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80ad28 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80ada0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80abb8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5637cf80adb8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80abe8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80add0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80ac20 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5637cf80ade8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80ad10 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80acf8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80acb8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5637cf80aff8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5637cf80afa0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5637cf80af70 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5637cf80af20 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5637cf807378
|     | |   `-CXXMemberCallExpr 0x5637cf80af00 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5637cf80aed0 <col:2> '<bound member function type>' ->xanno 0x5637cf7f7058
|     | |       `-CXXThisExpr 0x5637cf80aec0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5637cf80af88 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5637cf80af50 <col:14> 'int' lvalue ParmVar 0x5637cf7f97a8 'i' 'int'
|     `-ImplicitCastExpr 0x5637cf80afe0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf80afc0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5637cf7f9820 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5637cf7f9af8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5637cf7f9a00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5637cf80b6e8 <col:36, line:485:5>
|   |-ParenExpr 0x5637cf80b488 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80b458 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80b1b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80b180 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80b090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80b078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80b038 <col:23> 'int' lvalue ParmVar 0x5637cf7f9a00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80b058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80b160 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80b148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80b0b0 <col:33> 'int' lvalue ParmVar 0x5637cf7f9a00 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80b128 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80b110 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80b0d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80b0f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5637cf80b210 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80b1f0 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80b3b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80b3a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80b380 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80b3f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80b280 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5637cf80b410 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80b2b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80b428 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80b2f0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5637cf80b440 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80b368 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80b350 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80b310 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5637cf80b6d8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5637cf80b6c0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5637cf80b6a8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5637cf80b678 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5637cf80b620 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5637cf80b5f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5637cf80b5a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5637cf807250
|             |   `-CXXMemberCallExpr 0x5637cf80b580 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5637cf80b550 <col:61> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|             |       `-CXXThisExpr 0x5637cf80b540 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5637cf80b608 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5637cf80b5d0 <col:74> 'int' lvalue ParmVar 0x5637cf7f9a00 'i' 'int'
|-CXXMethodDecl 0x5637cf7f9d48 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5637cf7f9bb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5637cf7f9c30 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5637cf80be38 <col:42, line:500:5>
|   |-ParenExpr 0x5637cf80bbd0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80bba0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80b880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80b850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80b760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80b748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80b708 <col:23> 'int' lvalue ParmVar 0x5637cf7f9bb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80b728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80b830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80b818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80b780 <col:33> 'int' lvalue ParmVar 0x5637cf7f9bb8 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80b7f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80b7e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80b7a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80b7c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5637cf80b8e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80b8c0 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80bb00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80bae8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80bac8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80bb40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80b950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5637cf80bb58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80b988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80bb70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80b9c0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5637cf80bb88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80bab0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80ba98 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80ba58 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5637cf80be18 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5637cf80bdc8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5637cf80bd98 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5637cf80bd40 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5637cf80bd10 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5637cf80bcc0 <col:48, col:57> 'char [48]' lvalue ->c 0x5637cf807250
|     |     |   `-CXXMemberCallExpr 0x5637cf80bca0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5637cf80bc70 <col:48> '<bound member function type>' ->xanno 0x5637cf7f7058
|     |     |       `-CXXThisExpr 0x5637cf80bc60 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5637cf80bd28 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5637cf80bcf0 <col:61> 'int' lvalue ParmVar 0x5637cf7f9bb8 'i' 'int'
|     `-ImplicitCastExpr 0x5637cf80be00 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf80bde0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5637cf7f9c30 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5637cf7f9f08 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5637cf7f9e10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5637cf80c598 <col:35, line:513:5>
|   |-ParenExpr 0x5637cf80c2a8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80c278 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80bfd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80bfa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80beb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80be98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80be58 <col:23> 'int' lvalue ParmVar 0x5637cf7f9e10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80be78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80bf80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80bf68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80bed0 <col:33> 'int' lvalue ParmVar 0x5637cf7f9e10 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80bf48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80bf30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80bef0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80bf10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5637cf80c030 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80c010 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80c1d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80c1c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80c1a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80c218 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80c0a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5637cf80c230 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80c0d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80c248 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80c110 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5637cf80c260 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80c188 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80c170 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80c130 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5637cf80c588 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5637cf80c570 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5637cf80c558 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5637cf80c528 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5637cf80c4a0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5637cf80c470 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5637cf80c420 <col:60, col:69> 'char const[48]' lvalue ->c 0x5637cf807250
|             |   `-CXXMemberCallExpr 0x5637cf80c400 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5637cf80c3d0 <col:60> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|             |       `-CXXThisExpr 0x5637cf80c3c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5637cf80c488 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5637cf80c450 <col:73> 'int' lvalue ParmVar 0x5637cf7f9e10 'i' 'int'
|-CXXMethodDecl 0x5637cf7fa158 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5637cf7f9fc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5637cf7fa040 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5637cf80cc78 <col:41, line:528:5>
|   |-ParenExpr 0x5637cf80ca08 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80c9d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80c730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80c700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80c610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80c5f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80c5b8 <col:23> 'int' lvalue ParmVar 0x5637cf7f9fc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80c5d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80c6e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80c6c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80c630 <col:33> 'int' lvalue ParmVar 0x5637cf7f9fc8 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80c6a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80c690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80c650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80c670 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5637cf80c790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80c770 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80c938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80c920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80c900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80c978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80c800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5637cf80c990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80c838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80c9a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80c870 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5637cf80c9c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80c8e8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80c8d0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80c890 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5637cf80cc58 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5637cf80cc08 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5637cf80cbd8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5637cf80cb78 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5637cf80cb48 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5637cf80caf8 <col:47, col:56> 'char [48]' lvalue ->c 0x5637cf807250
|     |     |   `-CXXMemberCallExpr 0x5637cf80cad8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5637cf80caa8 <col:47> '<bound member function type>' ->xanno 0x5637cf7f7058
|     |     |       `-CXXThisExpr 0x5637cf80ca98 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5637cf80cb60 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5637cf80cb28 <col:60> 'int' lvalue ParmVar 0x5637cf7f9fc8 'i' 'int'
|     `-ImplicitCastExpr 0x5637cf80cc40 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf80cc20 <col:65> 'int16_t':'short' lvalue ParmVar 0x5637cf7fa040 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5637cf7fa318 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5637cf7fa220 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5637cf80d348 <col:36, line:541:5>
|   |-ParenExpr 0x5637cf80d0e8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80d0b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80ce10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80cde0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80ccf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80ccd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80cc98 <col:23> 'int' lvalue ParmVar 0x5637cf7fa220 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80ccb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80cdc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80cda8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80cd10 <col:33> 'int' lvalue ParmVar 0x5637cf7fa220 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80cd88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80cd70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80cd30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80cd50 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5637cf80ce70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80ce50 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80d018 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80d000 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80cfe0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80d058 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80cee0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5637cf80d070 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80cf18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80d088 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80cf50 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5637cf80d0a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80cfc8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80cfb0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80cf70 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5637cf80d338 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5637cf80d320 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5637cf80d308 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5637cf80d2d8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5637cf80d280 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5637cf80d250 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5637cf80d200 <col:61, col:70> 'char const[48]' lvalue ->c 0x5637cf807250
|             |   `-CXXMemberCallExpr 0x5637cf80d1e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5637cf80d1b0 <col:61> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|             |       `-CXXThisExpr 0x5637cf80d1a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5637cf80d268 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5637cf80d230 <col:74> 'int' lvalue ParmVar 0x5637cf7fa220 'i' 'int'
|-CXXMethodDecl 0x5637cf7fa4e8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5637cf7fa3d8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5637cf7fa450 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5637cf7fa598 <col:20>
| `-OptimizeNoneAttr 0x5637cf7fa5f0 <col:30>
|-CXXMethodDecl 0x5637cf7fa728 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5637cf7fa630 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5637cf80da18 <col:35, line:562:5>
|   |-ParenExpr 0x5637cf80d7b8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80d788 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80d4e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80d4b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80d3c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80d3a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80d368 <col:23> 'int' lvalue ParmVar 0x5637cf7fa630 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80d388 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80d490 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80d478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80d3e0 <col:33> 'int' lvalue ParmVar 0x5637cf7fa630 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80d458 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80d440 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80d400 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80d420 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5637cf80d540 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80d520 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80d6e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80d6d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80d6b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80d728 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80d5b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5637cf80d740 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80d5e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80d758 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80d620 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5637cf80d770 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80d698 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80d680 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80d640 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5637cf80da08 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5637cf80d9f0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5637cf80d9d8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5637cf80d9a8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5637cf80d950 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5637cf80d920 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5637cf80d8d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5637cf807250
|             |   `-CXXMemberCallExpr 0x5637cf80d8b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5637cf80d880 <col:60> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|             |       `-CXXThisExpr 0x5637cf80d870 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5637cf80d938 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5637cf80d900 <col:73> 'int' lvalue ParmVar 0x5637cf7fa630 'i' 'int'
|-CXXMethodDecl 0x5637cf7fa938 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5637cf7fa7e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5637cf7fa860 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5637cf80e0f8 <col:41, line:577:5>
|   |-ParenExpr 0x5637cf80de88 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80de58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80dbb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80db80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80da90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80da78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80da38 <col:23> 'int' lvalue ParmVar 0x5637cf7fa7e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80da58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80db60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80db48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80dab0 <col:33> 'int' lvalue ParmVar 0x5637cf7fa7e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80db28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80db10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80dad0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80daf0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5637cf80dc10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80dbf0 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80ddb8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80dda0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80dd80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80ddf8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80dc80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5637cf80de10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80dcb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80de28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80dcf0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5637cf80de40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80dd68 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80dd50 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80dd10 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5637cf80e0d8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5637cf80e088 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5637cf80e058 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5637cf80dff8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5637cf80dfc8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5637cf80df78 <col:47, col:56> 'char [48]' lvalue ->c 0x5637cf807250
|     |     |   `-CXXMemberCallExpr 0x5637cf80df58 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5637cf80df28 <col:47> '<bound member function type>' ->xanno 0x5637cf7f7058
|     |     |       `-CXXThisExpr 0x5637cf80df18 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5637cf80dfe0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5637cf80dfa8 <col:60> 'int' lvalue ParmVar 0x5637cf7fa7e8 'i' 'int'
|     `-ImplicitCastExpr 0x5637cf80e0c0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf80e0a0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5637cf7fa860 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5637cf7faaf8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5637cf7faa00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5637cf80e828 <col:36, line:591:5>
|   |-ParenExpr 0x5637cf80e568 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80e538 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80e290 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80e260 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80e170 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80e158 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80e118 <col:23> 'int' lvalue ParmVar 0x5637cf7faa00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80e138 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80e240 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80e228 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80e190 <col:33> 'int' lvalue ParmVar 0x5637cf7faa00 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80e208 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80e1f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80e1b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80e1d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5637cf80e2f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80e2d0 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80e498 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80e480 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80e460 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80e4d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80e360 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5637cf80e4f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80e398 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80e508 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80e3d0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5637cf80e520 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80e448 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80e430 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80e3f0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5637cf80e818 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5637cf80e800 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5637cf80e7e8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5637cf80e7b8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5637cf80e730 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5637cf80e700 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5637cf80e6b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5637cf807250
|             |   `-CXXMemberCallExpr 0x5637cf80e690 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5637cf80e660 <col:61> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|             |       `-CXXThisExpr 0x5637cf80e650 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5637cf80e718 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5637cf80e6e0 <col:74> 'int' lvalue ParmVar 0x5637cf7faa00 'i' 'int'
|-CXXMethodDecl 0x5637cf7fad48 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5637cf7fabb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5637cf7fac30 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5637cf80ef08 <col:42, line:606:5>
|   |-ParenExpr 0x5637cf80ec98 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5637cf80ec68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80e9c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80e990 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80e8a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80e888 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80e848 <col:23> 'int' lvalue ParmVar 0x5637cf7fabb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80e868 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80e970 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5637cf80e958 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80e8c0 <col:33> 'int' lvalue ParmVar 0x5637cf7fabb8 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80e938 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80e920 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80e8e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5637cf80e900 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5637cf80ea20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80ea00 <col:60> 'int' 0
|   |   `-CallExpr 0x5637cf80ebc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5637cf80ebb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf80eb90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf80ec08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80ea90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5637cf80ec20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf80eac8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf80ec38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf80eb00 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5637cf80ec50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf80eb78 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf80eb60 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf80eb20 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5637cf80eee8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5637cf80ee98 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5637cf80ee68 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5637cf80ee08 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5637cf80edd8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5637cf80ed88 <col:48, col:57> 'char [48]' lvalue ->c 0x5637cf807250
|     |     |   `-CXXMemberCallExpr 0x5637cf80ed68 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5637cf80ed38 <col:48> '<bound member function type>' ->xanno 0x5637cf7f7058
|     |     |       `-CXXThisExpr 0x5637cf80ed28 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5637cf80edf0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5637cf80edb8 <col:61> 'int' lvalue ParmVar 0x5637cf7fabb8 'i' 'int'
|     `-ImplicitCastExpr 0x5637cf80eed0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5637cf80eeb0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5637cf7fac30 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5637cf7faee0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5637cf7fae10 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5637cf817978 <col:33, line:620:5>
|   |-ParenExpr 0x5637cf8176f0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5637cf8176c0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf80f110 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf80f0e0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf80ef80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf80ef68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf80ef28 <col:23> 'int' lvalue ParmVar 0x5637cf7fae10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf80ef48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf80f0c0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5637cf80f0a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf80efa0 <col:33> 'int' lvalue ParmVar 0x5637cf7fae10 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf80f088 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf80f070 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf80efc0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5637cf80f048 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5637cf80f030 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5637cf80eff8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5637cf80f170 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf80f150 <col:79> 'int' 0
|   |   `-CallExpr 0x5637cf817620 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5637cf817608 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf8175e8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf817660 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf8174d8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5637cf817678 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf817520 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf817690 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf817558 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5637cf8176a8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf8175d0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf8175b8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf817578 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5637cf817968 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5637cf817950 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5637cf817938 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5637cf817908 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5637cf817880 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5637cf817850 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5637cf817800 <col:67, col:76> 'char const[48]' lvalue ->c 0x5637cf807250
|             |   `-CXXMemberCallExpr 0x5637cf8177e0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5637cf8177b0 <col:67> '<bound member function type>' ->xanno 0x5637cf7f6eb8
|             |       `-CXXThisExpr 0x5637cf8177a0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5637cf817868 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5637cf817830 <col:80> 'int' lvalue ParmVar 0x5637cf7fae10 'i' 'int'
|-CXXMethodDecl 0x5637cf7fb0f8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5637cf7fafa0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5637cf7fb020 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5637cf8181a0 <col:45, line:635:5>
|   |-ParenExpr 0x5637cf817ee8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5637cf817eb8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5637cf817b80 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5637cf817b50 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5637cf8179f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5637cf8179d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5637cf817998 <col:23> 'int' lvalue ParmVar 0x5637cf7fafa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5637cf8179b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5637cf817b30 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5637cf817b18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5637cf817a10 <col:33> 'int' lvalue ParmVar 0x5637cf7fafa0 'i' 'int'
|   |   |     `-BinaryOperator 0x5637cf817af8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5637cf817ae0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5637cf817a30 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5637cf7f72a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5637cf817ab8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5637cf817aa0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5637cf817a68 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5637cf817be0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5637cf817bc0 <col:79> 'int' 0
|   |   `-CallExpr 0x5637cf817e18 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5637cf817e00 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5637cf817de0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5637cf2e0d50 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5637cf817e58 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf817c50 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5637cf817e70 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5637cf817c98 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5637cf817e88 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5637cf817cd0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5637cf817ea0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5637cf817dc8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5637cf817db0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5637cf817d68 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5637cf818180 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5637cf8180e8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5637cf8180b8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5637cf818058 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5637cf818028 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5637cf817fd8 <col:54, col:63> 'char [48]' lvalue ->c 0x5637cf807250
|     |     |   `-CXXMemberCallExpr 0x5637cf817fb8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5637cf817f88 <col:54> '<bound member function type>' ->xanno 0x5637cf7f7058
|     |     |       `-CXXThisExpr 0x5637cf817f78 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5637cf818040 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5637cf818008 <col:67> 'int' lvalue ParmVar 0x5637cf7fafa0 'i' 'int'
|     `-CXXConstCastExpr 0x5637cf818150 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5637cf818138 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5637cf818100 <col:91> 'const void *' lvalue ParmVar 0x5637cf7fb020 'x' 'const void *'
|-CXXMethodDecl 0x5637cf7fb1c8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5637cf818228 <col:34, line:640:5>
|   `-ReturnStmt 0x5637cf818218 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5637cf818200 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5637cf8181d0 <col:16> 'Packet *' lvalue ->_data_packet 0x5637cf807e08
|         `-CXXThisExpr 0x5637cf8181c0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5637cf7fb308 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5637cf7fb278 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5637cf809258 <col:46> 'bool' true
|-CXXMethodDecl 0x5637cf7fb488 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5637cf7fb3c0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5637cf7fb530 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5637cf7fbce0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5637cf7fb630 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbd50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb610 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5637cf7fb5f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5637cf7f07b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5637cf7fb6c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbd68 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb6a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5637cf7fb680 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5637cf7f0840 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5637cf7fb750 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbd80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb730 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5637cf7fb710 <col:21> 'int' 0
| |-EnumConstantDecl 0x5637cf7fb7e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbd98 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb7c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5637cf7fb7a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5637cf7fb870 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbdb0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb850 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5637cf7fb830 <col:21> 'int' 16
| |-EnumConstantDecl 0x5637cf7fb900 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbdc8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb8e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5637cf7fb8c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5637cf7fb990 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbde0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fb970 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5637cf7fb950 <col:19> 'int' EnumConstant 0x5637cf7fb7e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5637cf7fba20 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbdf8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fba00 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5637cf7fb9e0 <col:19> 'int' EnumConstant 0x5637cf7fb900 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5637cf7fbaf0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbe10 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fbad0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5637cf7fbab0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5637cf7fba70 <col:23> 'int' EnumConstant 0x5637cf7fba20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5637cf7fba90 <col:40> 'int' 2
| |-EnumConstantDecl 0x5637cf7fbbc0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5637cf7fbe28 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5637cf7fbba0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5637cf7fbb80 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5637cf7fbb40 <col:23> 'int' EnumConstant 0x5637cf7fba20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5637cf7fbb60 <col:40> 'int' 4
| `-EnumConstantDecl 0x5637cf7fbc90 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5637cf7fbe40 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5637cf7fbc70 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5637cf7fbc50 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5637cf7fbc10 <col:23> 'int' EnumConstant 0x5637cf7fba20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5637cf7fbc30 <col:40> 'int' 8
|-CXXMethodDecl 0x5637cf7fbe80 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5637cf7fbf20 <col:68> "" ""
|-CXXMethodDecl 0x5637cf7fbfb8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5637cf7fc058 <col:45> "" ""
|-CXXMethodDecl 0x5637cf7fc0f0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5637cf7fc190 <col:57> "" ""
|-CXXMethodDecl 0x5637cf7fc228 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5637cf7fc2c8 <col:45> "" ""
|-CXXMethodDecl 0x5637cf7fc360 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5637cf7fc400 <col:57> "" ""
|-CXXMethodDecl 0x5637cf7fc490 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5637cf7fc530 <col:51> "" ""
|-CXXMethodDecl 0x5637cf7fc5c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5637cf7fc660 <col:63> "" ""
|-CXXMethodDecl 0x5637cf7fc6f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5637cf7fc790 <col:53> "" ""
|-CXXMethodDecl 0x5637cf7fc820 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5637cf7fc8c0 <col:65> "" ""
|-CXXMethodDecl 0x5637cf7fc9d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fc948 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5637cf7fca80 <col:61> "" ""
|-CXXMethodDecl 0x5637cf7fcc18 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5637cf7fcb08 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5637cf7fcb80 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5637cf7fccc8 <col:67> "" ""
|-CXXMethodDecl 0x5637cf7fcde0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fcd50 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5637cf7fce88 <col:63> "" ""
|-CXXMethodDecl 0x5637cf7fd020 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5637cf7fcf10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5637cf7fcf88 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5637cf7fd0d0 <col:69> "" ""
|-CXXMethodDecl 0x5637cf7fd1e8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fd158 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5637cf7fd290 <col:63> "" ""
|-CXXMethodDecl 0x5637cf7fd428 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5637cf7fd318 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5637cf7fd390 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5637cf7fd4d8 <col:69> "" ""
|-CXXMethodDecl 0x5637cf7fd5f0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fd560 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5637cf7fd698 <col:62> "" ""
|-CXXMethodDecl 0x5637cf7fd830 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5637cf7fd720 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5637cf7fd798 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5637cf7fd8e0 <col:68> "" ""
|-CXXMethodDecl 0x5637cf7fd9f8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fd968 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5637cf7fdaa0 <col:63> "" ""
|-CXXMethodDecl 0x5637cf7fdc38 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5637cf7fdb28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5637cf7fdba0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5637cf7fdce8 <col:69> "" ""
|-CXXMethodDecl 0x5637cf7fdd78 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5637cf7fde18 <col:64> "" ""
|-CXXMethodDecl 0x5637cf7fdea8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5637cf7fdf48 <col:52> "" ""
|-CXXMethodDecl 0x5637cf7fdfd8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5637cf7fe078 <col:67> "" ""
|-CXXMethodDecl 0x5637cf7fe108 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5637cf7fe1a8 <col:55> "" ""
|-CXXMethodDecl 0x5637cf7fe2c0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fe230 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5637cf7fe368 <col:58> "" ""
|-CXXMethodDecl 0x5637cf7fe500 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5637cf7fe3f0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5637cf7fe468 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5637cf7fe5b0 <col:62> "" ""
|-CXXMethodDecl 0x5637cf7fe6c8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fe638 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5637cf7fe770 <col:58> "" ""
|-CXXMethodDecl 0x5637cf7fe908 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5637cf7fe7f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5637cf7fe870 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5637cf7fe9b8 <col:62> "" ""
|-CXXMethodDecl 0x5637cf7fead0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fea40 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5637cf7feb78 <col:60> "" ""
|-CXXMethodDecl 0x5637cf7fed10 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5637cf7fec00 <col:34> col:37 'int'
| |-ParmVarDecl 0x5637cf7fec78 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5637cf7fedc0 <col:64> "" ""
|-CXXMethodDecl 0x5637cf7feed8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5637cf7fee48 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5637cf7fef80 <col:58> "" ""
|-CXXMethodDecl 0x5637cf7ff118 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5637cf7ff008 <col:33> col:36 'int'
| |-ParmVarDecl 0x5637cf7ff080 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5637cf7ff1c8 <col:62> "" ""
|-CXXMethodDecl 0x5637cf7ff2e0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5637cf7ff250 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5637cf7ff388 <col:59> "" ""
|-CXXMethodDecl 0x5637cf7ff520 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5637cf7ff410 <col:33> col:36 'int'
| |-ParmVarDecl 0x5637cf7ff488 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5637cf7ff5d0 <col:63> "" ""
|-AccessSpecDecl 0x5637cf7ff640 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5637cf7ff668 prev 0x5637cf7f6d90 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5637cf7ff760 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5637cf807250 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5637cf807378 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5637cf8074f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5637cf807678 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5637cf8077f8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5637cf8183a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5637cf818c18 <col:11>
| |-CXXDestructorDecl 0x5637cf818480 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5637cf8185b8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5637cf8185b8
| | `-ParmVarDecl 0x5637cf8186c8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5637cf818768 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5637cf818768
| | `-ParmVarDecl 0x5637cf818878 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5637cf81b5a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5637cf81b6b8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5637cf81b938 <col:11>
| |   `-ReturnStmt 0x5637cf81b928 <col:11>
| |     `-UnaryOperator 0x5637cf81b910 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5637cf81b900 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5637cf81b728 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5637cf81b728
|   `-ParmVarDecl 0x5637cf81b838 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5637cf807860 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5637cf807978 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5637cf807a18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5637cf807a80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5637cf807ae8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5637cf807b50 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5637cf807bb0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5637cf807c70 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5637cf807cd0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5637cf807d30 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5637cf8182b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5637cf807a18 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5637cf818c28 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5637cf818c80 <col:12>
| |-CXXConstructorDecl 0x5637cf8188e8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5637cf8188e8
| | `-ParmVarDecl 0x5637cf8189f8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5637cf818a98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5637cf818a98
| | `-ParmVarDecl 0x5637cf818ba8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5637cf81ac90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5637cf807da8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5637cf807e08 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5637cf807e70 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5637cf807ed8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5637cf807f40 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5637cf807fa8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5637cf808008 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5637cf808068 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5637cf8080d0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5637cf808158 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5637cf807da8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5637cf818250 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5637cf808008 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5637cf818c90 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5637cf818cf0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5637cf8082f8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5637cf808238 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5637cf8083f0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5637cf8085d8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5637cf8084e0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5637cf8088a8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5637cf808690 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5637cf808708 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5637cf808780 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf808ac8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5637cf808978 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5637cf8089f0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5637cf808d98 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5637cf808b88 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5637cf808c00 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5637cf808c78 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5637cf808ef0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5637cf808e60 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5637cf809038 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5637cf808fa8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5637cf809130 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf5dc220 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5637cf5dc3f8 prev 0x5637cf5dc220 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5637cf5dc488 <col:46, col:52> col:46 public
|-TypedefDecl 0x5637cf5dc4b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf5de400 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5637cf5de3b0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5637cf5de390 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5637cf5dc6c8 'type'
|     `-SubstTemplateTypeParmType 0x5637cf5dc690 'String' sugar
|       |-TemplateTypeParmType 0x5637cf58c390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf58c340 'T'
|       `-RecordType 0x5637cf47f440 'String'
|         `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5de4b8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5637cf5de480 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5637cf5de460 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5637cf5de400 'type'
|     `-ElaboratedType 0x5637cf5de3b0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5637cf5de390 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5637cf5dc6c8 'type'
|         `-SubstTemplateTypeParmType 0x5637cf5dc690 'String' sugar
|           |-TemplateTypeParmType 0x5637cf58c390 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5637cf58c340 'T'
|           `-RecordType 0x5637cf47f440 'String'
|             `-CXXRecord 0x5637cf47f3b0 'String'
|-CXXMethodDecl 0x5637cf5de638 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5637cf5de548 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5637cf5de728 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5637cf5de808 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5637cf5de808
|-CXXMethodDecl 0x5637cf5dead8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5637cf5de9e0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5637cf5ded18 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5637cf5deb90 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf5dec08 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5deee8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5637cf5dedd8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf5dee50 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5df048 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5637cf5df118 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5637cf5df368 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5637cf5df1d8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5637cf5df250 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5df5c8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5637cf5df438 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5637cf5df4b0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5df788 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5637cf5df698 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5df948 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5637cf5df850 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5dfa00 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5637cf5dfab0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf5dfce8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5637cf5dfb60 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5637cf5dfbd8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5637cf5dff88 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5637cf5dfe90 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5637cf5e0050 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5637cf5e00a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5637cf5e00f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.4 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.4 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf5bd0d0 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5637cf5dac88 prev 0x5637cf5bd0d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5637cf5dc190 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5637cf5dc140 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5637cf5dc120 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5637cf5dbfd0 'type'
|     `-SubstTemplateTypeParmType 0x5637cf5dbe60 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5637cf54d1c0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5637cf54d168 'F'
|       `-RecordType 0x5637cf5dbac0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5637cf5db9e0 'typed_array_memory'
|-FieldDecl 0x5637cf5e0140 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5637cf5e0190 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5637cf5e01c8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|   |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5637cf59b160 'T'
|   `-RecordType 0x5637cf47f440 'String'
|     `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e0258 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5637cf5e0220 'String &'
|   `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf47f440 'String'
|       `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e02e8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5637cf5e02b0 'const String &'
|   `-QualType 0x5637cf5dad21 'const String' const
|     `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf47f440 'String'
|         `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e0378 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5637cf5e0340 'String *'
|   `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf47f440 'String'
|       `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e0408 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5637cf5e03d0 'const String *'
|   `-QualType 0x5637cf5dad21 'const String' const
|     `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf47f440 'String'
|         `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e1060 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5637cf5e1010 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5637cf5e0ff0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5637cf5e0f28 'type'
|     `-LValueReferenceType 0x5637cf5e0ef0 'const String &'
|       `-QualType 0x5637cf5e0c91 'const String' const
|         `-SubstTemplateTypeParmType 0x5637cf5e0c90 'String' sugar
|           |-TemplateTypeParmType 0x5637cf555e50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5637cf555df8 'T'
|           `-RecordType 0x5637cf47f440 'String'
|             `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e10c8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5637cf5e02b0 'const String &'
|   `-QualType 0x5637cf5dad21 'const String' const
|     `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf47f440 'String'
|         `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e1120 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5637cf245580 'int'
|-TypedefDecl 0x5637cf5e1188 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5637cf5e0340 'String *'
|   `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|     |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5637cf59b160 'T'
|     `-RecordType 0x5637cf47f440 'String'
|       `-CXXRecord 0x5637cf47f3b0 'String'
|-TypedefDecl 0x5637cf5e11f0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5637cf5e03d0 'const String *'
|   `-QualType 0x5637cf5dad21 'const String' const
|     `-SubstTemplateTypeParmType 0x5637cf5dad20 'String' sugar
|       |-TemplateTypeParmType 0x5637cf59b1b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5637cf59b160 'T'
|       `-RecordType 0x5637cf47f440 'String'
|         `-CXXRecord 0x5637cf47f3b0 'String'
|-EnumDecl 0x5637cf5e1248 <line:134:5> col:5
| `-EnumConstantDecl 0x5637cf5e1340 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5637cf5e1320 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5637cf59c1e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5637cf59c1c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5637cf59c1a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5637cf5e13c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5637cf5e1658 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf5e1480 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf5e1520 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5637cf5e18e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5637cf5e17d0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5637cf5e25f0 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5637cf5e1a90 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5637cf5e2900 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5637cf5e27e0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5637cf5e2c10 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5637cf5e2af0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5637cf5e2f00 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf5e2d48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf5e2dc0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5637cf5e3028 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5637cf5e30d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf5e3130 <col:30> Inherited
|-CXXMethodDecl 0x5637cf5e3178 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5637cf5e3228 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf5e3280 <col:30> Inherited
|-CXXMethodDecl 0x5637cf5e3348 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5637cf5e33f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf5e3450 <col:30> Inherited
|-CXXMethodDecl 0x5637cf5e3498 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5637cf5e3548 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf5e35a0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf5e35e8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5637cf5e3698 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf5e36f0 <col:30> Inherited
|-CXXMethodDecl 0x5637cf5e3738 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5637cf5e37e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5637cf5e3840 <col:30> Inherited
|-CXXMethodDecl 0x5637cf5e3868 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5637cf5e3918 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5637cf5e39c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5637cf5e3b88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf5e3a78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5637cf5e3af0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5637cf5e3cd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf5e3c48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf5e3e88 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5637cf5e3d90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5637cf5e3f40 <col:20>
| `-OptimizeNoneAttr 0x5637cf5e3f98 <col:30>
|-CXXMethodDecl 0x5637cf5e40b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5637cf5e3fc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5637cf5e4170 <col:20>
| `-OptimizeNoneAttr 0x5637cf5e41c8 <col:30>
|-CXXMethodDecl 0x5637cf5e4280 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf5e41f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf5e43c8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5637cf5e4338 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf5e44f8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5637cf5e4628 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5637cf5e46f8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5637cf5e47c8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5637cf5e4908 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5637cf5e4878 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf5e4a50 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5637cf5e49c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5637cf5e4b98 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5637cf5e4b08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5637cf5e4c50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5637cf5e4d50 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5637cf5e4cc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5637cf5e4e08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5637cf5e4ec8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5637cf5e4fc8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5637cf5e5148 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5637cf5e5088 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5637cf5e5908 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5637cf5e5200 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5637cf5e5868 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5637cf5e5768 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5637cf5e59e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5637cf5e5b38 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5637cf5e5aa8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5637cf5e5bf0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5637cf5e5e38 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5637cf5e5cb0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5637cf5e5d28 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5637cf5e5fc8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5637cf5e5f08 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5637cf5e61d8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5637cf5e6090 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5637cf5e6108 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5637cf5e6298 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5637cf5e64f8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5637cf5e6400 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5637cf5e6b70 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5637cf5e6b70

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.4 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<20>
         0 |   char [20] x
           | [sizeof=20, dsize=20, align=1,
           |  nvsize=20, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf869c40 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 20
|-PackedAttr 0x5637cf8cd450 <line:167:18>
|-CXXRecordDecl 0x5637cf8cd510 prev 0x5637cf869c40 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5637cf8cd620 <line:166:5, col:13> col:10 x 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [20 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5637cf877ab0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x5637cf8cdd18 <line:167:18>
|-CXXRecordDecl 0x5637cf8cddd8 prev 0x5637cf877ab0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5637cf8cdee8 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.2 = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.2 = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
