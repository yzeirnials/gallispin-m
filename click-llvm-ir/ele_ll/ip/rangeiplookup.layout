
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f977a5d8 prev 0x5592f9771d78 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f977a6d0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5592f977a760 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5592f977a7d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5592f977a898 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5592f977a960 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5592f977aad8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5592f977aa10 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5592f977ab80 <col:24>
| `-OptimizeNoneAttr 0x5592f977abd8 <col:34>
|-CXXMethodDecl 0x5592f977ac20 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5592f977aed8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5592f977acd0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5592f977ad48 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5592f977adc8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5592f977af90 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5592f977afc8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5592f977b030 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5592f977b0b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5592f977b3d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5592f977b170 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5592f977b1e8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5592f977b260 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5592f977b2e0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5592f977b4f0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5592f9782e68 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5592f9782e68
| `-ParmVarDecl 0x5592f9782f78 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5592f9783018 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5592f9783018
| `-ParmVarDecl 0x5592f9783128 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5592f98df6f8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f952c0a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f952c1b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5592f952c248 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5592f952c318 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5592f952c400 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f952c618 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5592f952c4c0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952c7c8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5592f952c6d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5592f952c910 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5592f952c880 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5592f952ca58 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5592f952c9c8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952cba0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5592f952cb10 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952cc68 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x5592f952cdb0 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x5592f952cd20 <col:28> col:31 'int'
|-CXXMethodDecl 0x5592f952ce78 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x5592f952cfc0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5592f952cf30 <col:28> col:31 'int'
|-CXXMethodDecl 0x5592f952d138 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5592f952d078 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952d280 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5592f952d1f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952d348 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5592f952d508 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5592f952d3f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f952d470 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952d758 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5592f952d5c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f952d640 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f952d808 <col:86> "" ""
|-CXXMethodDecl 0x5592f952da78 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5592f952d8e8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5592f952d960 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952dc28 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5592f952db38 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5592f952ddd8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5592f952dce0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5592f952e0a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5592f952de90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5592f952df08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f952df80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952e388 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5592f952e170 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5592f952e1e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f952e260 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f952e440 <col:115> "" ""
|-AccessSpecDecl 0x5592f952e4b0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5592f952e4e8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f952fa00 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5592f952fa00
| `-ParmVarDecl 0x5592f952fb08 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5592f952fba8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5592f952fba8
| `-ParmVarDecl 0x5592f952fcb8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5592f95652e8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592f97570e0 <col:7>
|-CXXConstructorDecl 0x5592f95653c0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5592f95653c0
| `-ParmVarDecl 0x5592f95654d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5592f9565548 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5592f9565548
| `-ParmVarDecl 0x5592f9565658 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5592f9759ae0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f97edd00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x5592f97eded8 prev 0x5592f97edd00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5592f97edf68 <col:46, col:52> col:46 public
|-TypedefDecl 0x5592f97edf90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f97efb60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x5592f97efb10 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x5592f97ee440 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x5592f97ee340 'type'
|     `-TemplateSpecializationType 0x5592f97ee2d0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5592f97ee1b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x5592f97ee190 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5592f97ee170 <col:24> 'unsigned long' 8
|       `-RecordType 0x5592f97ee2b0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x5592f97ee1d0 'char_array'
|-TypedefDecl 0x5592f97efc18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x5592f97efbe0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x5592f97efbc0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x5592f97efb60 'type'
|     `-ElaboratedType 0x5592f97efb10 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x5592f97ee440 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x5592f97ee340 'type'
|         `-TemplateSpecializationType 0x5592f97ee2d0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5592f97ee1b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x5592f97ee190 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5592f97ee170 <col:24> 'unsigned long' 8
|           `-RecordType 0x5592f97ee2b0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x5592f97ee1d0 'char_array'
|-CXXMethodDecl 0x5592f97efd98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5592f97efca8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5592f97efe88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5592f97eff68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5592f97eff68
|-CXXMethodDecl 0x5592f97f0238 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5592f97f0140 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x5592f97f0478 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5592f97f02f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f97f0368 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f0648 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5592f97f0538 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f97f05b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f07a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5592f97f0878 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x5592f97f0ac8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5592f97f0938 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5592f97f09b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f0d28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x5592f97f0b98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x5592f97f0c10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f0ee8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5592f97f0df8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f10a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5592f97f0fb0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f1160 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f97f1210 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f97f1448 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5592f97f12c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f97f1338 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5592f97f16e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x5592f97f15f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x5592f97f17b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x5592f97f1800 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5592f97f1850 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9858108 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x5592f98641c8 prev 0x5592f9858108 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f98651e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5592f9865190 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x5592f9865170 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x5592f9865020 'type'
|     `-SubstTemplateTypeParmType 0x5592f97ed8d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f97ed420 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5592f97ed338 'sized_array_memory'
|-FieldDecl 0x5592f98652e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5592f9865330 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f9865368 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-PointerType 0x5592f9763b20 'Element *'
|     `-RecordType 0x5592f97638a0 'Element'
|       `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986ae60 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x5592f98653f0 'Element *&'
|   `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f9763b20 'Element *'
|       `-RecordType 0x5592f97638a0 'Element'
|         `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986af28 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x5592f986aef0 'Element *const &'
|   `-QualType 0x5592f9864261 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9763b20 'Element *'
|         `-RecordType 0x5592f97638a0 'Element'
|           `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986afe8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x5592f986afb0 'Element **'
|   `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f9763b20 'Element *'
|       `-RecordType 0x5592f97638a0 'Element'
|         `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986b0a8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x5592f986b070 'Element *const *'
|   `-QualType 0x5592f9864261 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9763b20 'Element *'
|         `-RecordType 0x5592f97638a0 'Element'
|           `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986bc80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x5592f986bc30 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x5592f986bc10 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x5592f986bba0 'type'
|     `-SubstTemplateTypeParmType 0x5592f986b960 'Element *' sugar
|       |-TemplateTypeParmType 0x5592f94dc6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94dc680 'T'
|       `-PointerType 0x5592f9763b20 'Element *'
|         `-RecordType 0x5592f97638a0 'Element'
|           `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986bce8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x5592f986aef0 'Element *const &'
|   `-QualType 0x5592f9864261 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9763b20 'Element *'
|         `-RecordType 0x5592f97638a0 'Element'
|           `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986bd40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f986bda8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x5592f986afb0 'Element **'
|   `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f9763b20 'Element *'
|       `-RecordType 0x5592f97638a0 'Element'
|         `-CXXRecord 0x5592f976d5f0 'Element'
|-TypedefDecl 0x5592f986be10 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x5592f986b070 'Element *const *'
|   `-QualType 0x5592f9864261 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5592f9864260 'Element *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9763b20 'Element *'
|         `-RecordType 0x5592f97638a0 'Element'
|           `-CXXRecord 0x5592f976d5f0 'Element'
|-EnumDecl 0x5592f986be68 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f986bf60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f986bf40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f986bfe8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f986c278 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f986c0a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f986c140 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x5592f986c508 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5592f986c3f0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x5592f986c7c8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5592f986c6b0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5592f986cae0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5592f986c9c0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x5592f986cdf0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5592f986ccd0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5592f986d0e0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f986cf28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f986cfa0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5592f986d238 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5592f986d318 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f986d370 <col:30> Inherited
|-CXXMethodDecl 0x5592f986d3b8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5592f986d468 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f986d4c0 <col:30> Inherited
|-CXXMethodDecl 0x5592f986d588 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5592f986d638 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f986d690 <col:30> Inherited
|-CXXMethodDecl 0x5592f986d6d8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5592f986d788 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f986d7e0 <col:30> Inherited
|-CXXMethodDecl 0x5592f986d828 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5592f986d8d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f986d930 <col:30> Inherited
|-CXXMethodDecl 0x5592f986d978 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5592f986da28 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f986da80 <col:30> Inherited
|-CXXMethodDecl 0x5592f986daa8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f986db58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f986dc08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f986ddc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f986dcb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f986dd30 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5592f986df18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f986de88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f986e0c8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x5592f986dfd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f986e180 <col:20>
| `-OptimizeNoneAttr 0x5592f986e1d8 <col:30>
|-CXXMethodDecl 0x5592f986e2f8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f986e200 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f986e3b0 <col:20>
| `-OptimizeNoneAttr 0x5592f986e408 <col:30>
|-CXXMethodDecl 0x5592f986e4c0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f986e430 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f986e608 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f986e578 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f986e738 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x5592f986e868 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x5592f986e938 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x5592f986ea08 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x5592f986eb48 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f986eab8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f986ec90 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f986ec00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f986edd8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f986ed48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f986ee90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f986ef90 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f986ef00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f986f048 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f986f108 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x5592f986f208 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x5592f986f388 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f986f2c8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x5592f986fb48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f986f440 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x5592f986faa8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x5592f986f9a8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x5592f986fc28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f986fd78 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f986fce8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5592f986fe30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f9870078 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f986fef0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5592f986ff68 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5592f9870238 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x5592f9870148 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5592f9870488 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x5592f9870300 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5592f9870378 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5592f9870548 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f98707a8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x5592f98706b0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x5592f9870878 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f9870878

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9541490 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5592f95415a8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5592f9541648 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5592f95416a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f9541708 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5592f95417b8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9541ac0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f9541bd8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5592f9541c80 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5592f9541ce8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5592f9541d78 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5592f9547e10 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592f9548248 <col:12>
|-CXXConstructorDecl 0x5592f9547f18 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f9548028 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5592f9541c80 'data' 'const char *'
| | `-ImplicitCastExpr 0x5592f954a7d0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5592f954a7a0 <col:12> 'const char *const' lvalue .data 0x5592f9541c80
| |     `-DeclRefExpr 0x5592f954a780 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9548028 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5592f9541ce8 'length' 'int'
| | `-ImplicitCastExpr 0x5592f954a860 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5592f954a830 <col:12> 'const int' lvalue .length 0x5592f9541ce8
| |     `-DeclRefExpr 0x5592f954a810 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9548028 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5592f9541d78 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5592f954a8f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5592f954a8c0 <col:12> 'String::memo_t *const' lvalue .memo 0x5592f9541d78
| |     `-DeclRefExpr 0x5592f954a8a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9548028 '' 'const String::rep_t &'
| `-CompoundStmt 0x5592f954a948 <col:12>
|-CXXConstructorDecl 0x5592f95480c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592f95480c8
| `-ParmVarDecl 0x5592f95481d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5592f954d730 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592f9559148 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f9559258 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5592f9559770 <col:12>
|   |-BinaryOperator 0x5592f9559588 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5592f9559540 <col:12> 'const char *' lvalue ->data 0x5592f9541c80
|   | | `-CXXThisExpr 0x5592f9559530 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5592f9559570 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5592f9559500 <col:12> 'const char *const' lvalue .data 0x5592f9541c80
|   |     `-DeclRefExpr 0x5592f95594e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9559258 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5592f9559650 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5592f9559608 <col:12> 'int' lvalue ->length 0x5592f9541ce8
|   | | `-CXXThisExpr 0x5592f95595f8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5592f9559638 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5592f95595c8 <col:12> 'const int' lvalue .length 0x5592f9541ce8
|   |     `-DeclRefExpr 0x5592f95595a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9559258 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5592f9559718 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5592f95596d0 <col:12> 'String::memo_t *' lvalue ->memo 0x5592f9541d78
|   | | `-CXXThisExpr 0x5592f95596c0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5592f9559700 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5592f9559690 <col:12> 'String::memo_t *const' lvalue .memo 0x5592f9541d78
|   |     `-DeclRefExpr 0x5592f9559670 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9559258 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5592f9559760 <col:12>
|     `-UnaryOperator 0x5592f9559748 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5592f9559738 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5592f95592c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592f95592c8
  `-ParmVarDecl 0x5592f95593d8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9538a00 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f9538b18 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5592f9538ba8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5592f9538be8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5592f9209fd0 'const char *'
|   `-QualType 0x5592f9209521 'const char' const
|     `-BuiltinType 0x5592f9209520 'char'
|-TypedefDecl 0x5592f9538c70 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5592f9538c40 'String::const_iterator' sugar
|   |-Typedef 0x5592f9538be8 'const_iterator'
|   `-PointerType 0x5592f9209fd0 'const char *'
|     `-QualType 0x5592f9209521 'const char' const
|       `-BuiltinType 0x5592f9209520 'char'
|-TypedefDecl 0x5592f9538de0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5592f9538d50 'int (String::*)() const'
|   |-RecordType 0x5592f9538a90 'String'
|   | `-CXXRecord 0x5592f9538a00 'String'
|   `-ParenType 0x5592f9538cf0 'int () const' sugar
|     `-FunctionProtoType 0x5592f950c880 'int () const' const cdecl
|       `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f9538e48 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5592f9361460 'int64_t' sugar
|   |-Typedef 0x5592f9272390 'int64_t'
|   `-TypedefType 0x5592f924b630 '__int64_t' sugar
|     |-Typedef 0x5592f924b208 '__int64_t'
|     `-BuiltinType 0x5592f92095a0 'long'
|-TypedefDecl 0x5592f9538eb0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5592f9361380 'uint64_t' sugar
|   |-Typedef 0x5592f9272530 'uint64_t'
|   `-TypedefType 0x5592f924b6c0 '__uint64_t' sugar
|     |-Typedef 0x5592f924b278 '__uint64_t'
|     `-BuiltinType 0x5592f9209640 'unsigned long'
|-TypedefDecl 0x5592f9538f40 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5592f9538f10 'String::intmax_t' sugar
|   |-Typedef 0x5592f9538e48 'intmax_t'
|   `-TypedefType 0x5592f9361460 'int64_t' sugar
|     |-Typedef 0x5592f9272390 'int64_t'
|     `-TypedefType 0x5592f924b630 '__int64_t' sugar
|       |-Typedef 0x5592f924b208 '__int64_t'
|       `-BuiltinType 0x5592f92095a0 'long'
|-TypedefDecl 0x5592f9538fd0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5592f9538fa0 'String::uintmax_t' sugar
|   |-Typedef 0x5592f9538eb0 'uintmax_t'
|   `-TypedefType 0x5592f9361380 'uint64_t' sugar
|     |-Typedef 0x5592f9272530 'uint64_t'
|     `-TypedefType 0x5592f924b6c0 '__uint64_t' sugar
|       |-Typedef 0x5592f924b278 '__uint64_t'
|       `-BuiltinType 0x5592f9209640 'unsigned long'
|-CXXConstructorDecl 0x5592f9539090 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5592f9539238 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5592f9539178 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5592f95393e8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5592f9539328 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5592f9539540 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5592f95394b0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5592f9539758 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5592f9539608 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5592f9539688 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5592f9539978 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5592f9539828 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5592f95398a8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5592f9539b98 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5592f9539a48 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5592f9539ac8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5592f9539db8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5592f9539c68 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5592f9539ce8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5592f9539f48 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5592f9539e80 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5592f953a0c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5592f953a008 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5592f953a258 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5592f953a190 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5592f953a3b0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5592f953a320 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5592f953a508 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5592f953a478 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5592f953a660 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5592f953a5d0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5592f953a7e8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5592f953a728 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5592f953a978 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5592f953a8b0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5592f953ab08 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5592f953aa40 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5592f953ac98 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5592f953abd0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5592f953ad90 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5592f953aeb8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5592f953b038 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5592f953af70 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5592f953b188 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5592f953b0f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5592f953b240 <col:63> "" ""
|-CXXMethodDecl 0x5592f953b388 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5592f953b2c8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5592f953b598 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5592f953b448 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5592f953b4c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5592f953b7b8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5592f953b660 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5592f953b6e0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5592f953ba98 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5592f953b878 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5592f953b8f8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5592f95478e0 <col:55> 'int' 10
| `-ParmVarDecl 0x5592f953b970 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f9547900 <col:76> 'bool' true
|-CXXMethodDecl 0x5592f953bd78 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5592f953bb60 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5592f953bbe0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5592f9547910 <col:56> 'int' 10
| `-ParmVarDecl 0x5592f953bc58 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f9547930 <col:77> 'bool' true
|-CXXMethodDecl 0x5592f953be80 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5592f953bf48 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5592f953c010 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5592f953c0b0 <col:20>
| `-OptimizeNoneAttr 0x5592f953c108 <col:30>
|-CXXConversionDecl 0x5592f953c1f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5592f953c2c8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5592f953c388 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5592f953c478 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5592f953c538 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5592f953c6b8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5592f953c5f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5592f953c808 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5592f953c778 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5592f953c8f8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5592f953c9b8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5592f953cc08 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5592f953ca70 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5592f953caf0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5592f953ce68 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5592f953ccd0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5592f953cd50 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5592f953cf38 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f953d148 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5592f953cff0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5592f953d070 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5592f953d368 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5592f953d210 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5592f953d290 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5592f953d4f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5592f953d430 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5592f953d5e8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5592f953d758 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5592f953d698 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5592f953d968 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5592f953d818 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5592f953d898 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5592f953db80 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5592f953da28 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5592f953daa0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5592f953dd10 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5592f953dc40 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5592f953df30 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5592f953ddd0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5592f953de50 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5592f953e080 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5592f953dff0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5592f953e258 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5592f953e140 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5592f953e1c0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5592f953e3a8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5592f953e318 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5592f953e5c0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5592f953e460 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5592f953e4e0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5592f9547940 <col:39> 'int' 0
|-CXXMethodDecl 0x5592f953e7e0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5592f953e680 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5592f953e700 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5592f9547960 <col:48> 'int' 0
|-CXXMethodDecl 0x5592f953e9c0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5592f953e8a0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5592f953e920 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5592f9547980 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5592f953ea90 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5592f953eb50 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5592f953ec10 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5592f953ecd0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5592f953ed90 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5592f953ef38 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5592f953ee40 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5592f953f0b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5592f953eff0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5592f953f290 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5592f953f178 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5592f953f408 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5592f953f348 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5592f953f550 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5592f953f4c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5592f953f6a0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5592f953f610 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5592f953f878 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5592f953f760 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5592f953f7e0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5592f953fa58 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5592f953f940 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5592f953f9c0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5592f953fba8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5592f953fb18 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5592f953fdb8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5592f953fc68 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5592f953fce8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5592f953ff18 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5592f953fe80 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5592f9540070 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5592f953ffd8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5592f9540118 <col:57> "" ""
|-CXXMethodDecl 0x5592f9540228 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5592f9540198 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5592f9540378 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5592f95402e8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5592f95404f8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5592f9540430 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5592f95405c0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5592f9540680 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5592f9540740 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5592f95407e0 <col:49> "" ""
|-CXXMethodDecl 0x5592f9540870 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5592f9540930 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5592f9540a20 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5592f9540ae8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5592f9540ba8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5592f9540c68 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5592f9540d60 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5592f9540e28 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5592f9540ef0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5592f95410c8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5592f9540fa8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5592f9541028 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5592f95412f0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5592f9541190 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5592f9541210 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5592f9541400 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5592f9541468 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5592f9541490 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f95415a8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5592f9541648 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5592f95416a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5592f9541708 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5592f95417b8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5592f9541820 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5592f9541a58 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5592f9541aa8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9541a38 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5592f9541948 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5592f95418f0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5592f9541930 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5592f9541910 <col:32> 'int' 8
|-CXXRecordDecl 0x5592f9541ac0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f9541bd8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5592f9541c80 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5592f9541ce8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5592f9541d78 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5592f9547e10 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5592f9548248 <col:12>
| |-CXXConstructorDecl 0x5592f9547f18 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592f9548028 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5592f9541c80 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5592f954a7d0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5592f954a7a0 <col:12> 'const char *const' lvalue .data 0x5592f9541c80
| | |     `-DeclRefExpr 0x5592f954a780 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9548028 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5592f9541ce8 'length' 'int'
| | | `-ImplicitCastExpr 0x5592f954a860 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5592f954a830 <col:12> 'const int' lvalue .length 0x5592f9541ce8
| | |     `-DeclRefExpr 0x5592f954a810 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9548028 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5592f9541d78 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5592f954a8f0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5592f954a8c0 <col:12> 'String::memo_t *const' lvalue .memo 0x5592f9541d78
| | |     `-DeclRefExpr 0x5592f954a8a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9548028 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5592f954a948 <col:12>
| |-CXXConstructorDecl 0x5592f95480c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592f95480c8
| | `-ParmVarDecl 0x5592f95481d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5592f954d730 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5592f9559148 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592f9559258 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5592f9559770 <col:12>
| |   |-BinaryOperator 0x5592f9559588 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5592f9559540 <col:12> 'const char *' lvalue ->data 0x5592f9541c80
| |   | | `-CXXThisExpr 0x5592f9559530 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5592f9559570 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5592f9559500 <col:12> 'const char *const' lvalue .data 0x5592f9541c80
| |   |     `-DeclRefExpr 0x5592f95594e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9559258 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5592f9559650 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5592f9559608 <col:12> 'int' lvalue ->length 0x5592f9541ce8
| |   | | `-CXXThisExpr 0x5592f95595f8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5592f9559638 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5592f95595c8 <col:12> 'const int' lvalue .length 0x5592f9541ce8
| |   |     `-DeclRefExpr 0x5592f95595a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9559258 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5592f9559718 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5592f95596d0 <col:12> 'String::memo_t *' lvalue ->memo 0x5592f9541d78
| |   | | `-CXXThisExpr 0x5592f95596c0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5592f9559700 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5592f9559690 <col:12> 'String::memo_t *const' lvalue .memo 0x5592f9541d78
| |   |     `-DeclRefExpr 0x5592f9559670 <col:12> 'const String::rep_t' lvalue ParmVar 0x5592f9559258 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5592f9559760 <col:12>
| |     `-UnaryOperator 0x5592f9559748 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5592f9559738 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5592f95592c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5592f95592c8
|   `-ParmVarDecl 0x5592f95593d8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5592f9541df0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5592f9542038 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5592f9541e58 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5592f9541ed8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5592f9541f50 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5592f9547dd0 <col:79, line:261:5>
|   |-BinaryOperator 0x5592f9547a48 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5592f95479e0 <col:2, col:5> 'const char *' lvalue .data 0x5592f9541c80
|   | | `-MemberExpr 0x5592f95479b0 <col:2> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|   | |   `-CXXThisExpr 0x5592f95479a0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5592f9547a30 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f9547a10 <col:12> 'const char *' lvalue ParmVar 0x5592f9541e58 'data' 'const char *'
|   |-BinaryOperator 0x5592f9547b10 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5592f9547aa8 <col:2, col:5> 'int' lvalue .length 0x5592f9541ce8
|   | | `-MemberExpr 0x5592f9547a78 <col:2> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|   | |   `-CXXThisExpr 0x5592f9547a68 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5592f9547af8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f9547ad8 <col:14> 'int' lvalue ParmVar 0x5592f9541ed8 'length' 'int'
|   `-IfStmt 0x5592f9547db8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5592f9547c30 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5592f9547c18 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5592f9547bf8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5592f9547bd8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5592f9547b70 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|     |       | `-MemberExpr 0x5592f9547b40 <col:7> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|     |       |   `-CXXThisExpr 0x5592f9547b30 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5592f9547bc0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5592f9547ba0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5592f9541f50 'memo' 'String::memo_t *'
|     `-CallExpr 0x5592f9547d90 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5592f9547d78 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f9547c80 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5592f9530a68 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5592f9547ce8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5592f9541648
|         `-ImplicitCastExpr 0x5592f9547cd0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5592f9547cb0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5592f9541f50 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5592f95422e8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5592f9542108 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5592f9542188 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5592f9542200 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5592f9541df0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5592f9548258 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f95483e8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5592f9548350 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5592f95482c0 <col:2> '<bound member function type>' ->assign_memo 0x5592f9542038
|     | `-ImplicitCastExpr 0x5592f9548388 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5592f95482b0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5592f95483a0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f95482f0 <col:14> 'const char *' lvalue ParmVar 0x5592f9542108 'data' 'const char *'
|     |-ImplicitCastExpr 0x5592f95483b8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f9548310 <col:20> 'int' lvalue ParmVar 0x5592f9542188 'length' 'int'
|     `-ImplicitCastExpr 0x5592f95483d0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9548330 <col:28> 'String::memo_t *' lvalue ParmVar 0x5592f9542200 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5592f9542478 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5592f95423b8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5592f9548640 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5592f95485c0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5592f9548410 <col:2> '<bound member function type>' ->assign_memo 0x5592f9542038
|     | `-CXXThisExpr 0x5592f9548400 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5592f95485f8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5592f9548490 <col:14, col:19> 'const char *' lvalue .data 0x5592f9541c80
|     |   `-MemberExpr 0x5592f9548460 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5592f9541df0
|     |     `-DeclRefExpr 0x5592f9548440 <col:14> 'const String' lvalue ParmVar 0x5592f95423b8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5592f9548610 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5592f9548510 <col:25, col:30> 'int' lvalue .length 0x5592f9541ce8
|     |   `-MemberExpr 0x5592f95484e0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5592f9541df0
|     |     `-DeclRefExpr 0x5592f95484c0 <col:25> 'const String' lvalue ParmVar 0x5592f95423b8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5592f9548628 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5592f9548590 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|         `-MemberExpr 0x5592f9548560 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5592f9541df0
|           `-DeclRefExpr 0x5592f9548540 <col:38> 'const String' lvalue ParmVar 0x5592f95423b8 'x' 'const String &'
|-CXXMethodDecl 0x5592f9542540 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5592f9549000 <col:31, line:278:5>
|   `-IfStmt 0x5592f9548fe8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5592f95486e0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5592f95486c8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5592f9548698 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|     |     `-MemberExpr 0x5592f9548668 <col:6> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|     |       `-CXXThisExpr 0x5592f9548658 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5592f9548fc0 <col:15, line:277:2>
|       |-ParenExpr 0x5592f9548b90 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5592f9548b60 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5592f95487f0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5592f95487d8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5592f95487c0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5592f9548780 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5592f9541648
|       |   |       `-ImplicitCastExpr 0x5592f9548768 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5592f9548738 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|       |   |           `-MemberExpr 0x5592f9548708 <col:27> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|       |   |             `-CXXThisExpr 0x5592f95486f8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5592f9548850 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5592f9548830 <col:54> 'int' 0
|       |   `-CallExpr 0x5592f9548ac0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5592f9548aa8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5592f9548a28 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5592f9548b00 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5592f9548938 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5592f9548b18 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5592f9548968 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5592f9548b30 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5592f95489a0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5592f9548b48 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5592f9548a10 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5592f95489f8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5592f95489c0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5592f9548ee0 <line:274:6, line:275:22>
|       | |-CallExpr 0x5592f9548da0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5592f9548d88 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5592f9548d00 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5592f9531eb0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5592f9548cd0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5592f9541648
|       | |   `-ImplicitCastExpr 0x5592f9548cb8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5592f9548c88 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|       | |       `-MemberExpr 0x5592f9548c58 <col:40> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|       | |         `-CXXThisExpr 0x5592f9548c48 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5592f9548ea0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5592f9548e88 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5592f9548dc8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5592f9546d20 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5592f9548ec8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5592f9548e28 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|       |       `-MemberExpr 0x5592f9548df8 <col:15> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|       |         `-CXXThisExpr 0x5592f9548de8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5592f9548fa0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5592f9548f38 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5592f9541d78
|         | `-MemberExpr 0x5592f9548f08 <col:6> 'String::rep_t' lvalue ->_r 0x5592f9541df0
|         |   `-CXXThisExpr 0x5592f9548ef8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5592f9548f88 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5592f9548f68 <col:16> 'int' 0
|-CXXMethodDecl 0x5592f95427d8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5592f95425f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5592f9542678 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5592f95426f0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5592f95428b0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5592f9542b00 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5592f9542968 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5592f95429e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5592f9542a60 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5592f9542ce8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5592f9542bd0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5592f9542c50 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5592f9542de8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5592f95490d8 <col:41, line:286:5>
|   `-ReturnStmt 0x5592f95490c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5592f9549098 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5592f9549060 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5592f9549048 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5592f9549028 <col:46> 'int' 1
|-CXXMethodDecl 0x5592f9543088 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5592f9542ea0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5592f9542f20 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5592f9542fa0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5592f9546d20 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5592f9543150 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5592f9546df0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5592f9546fc0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5592f9546ea8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5592f9546f28 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5592f9547080 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5592f9547148 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5592f9547248 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5592f95472c0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5592f9547338 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5592f95473a0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5592f95474a0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5592f95474f0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9547480 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5592f9547460 <col:22> 'int' 14
|-CXXMethodDecl 0x5592f9547708 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5592f9547520 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5592f95475a0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5592f9547620 <col:43> col:46 'int'
|-FriendDecl 0x5592f9547810 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5592f95478a0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9871d20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5592f9871ef8 prev 0x5592f9871d20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5592f9871f88 <col:46, col:52> col:46 public
|-TypedefDecl 0x5592f9871fb0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f9874e80 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5592f9874e30 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5592f9874e10 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5592f98721c8 'type'
|     `-SubstTemplateTypeParmType 0x5592f9872190 'String' sugar
|       |-TemplateTypeParmType 0x5592f94fc2a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94fc250 'T'
|       `-RecordType 0x5592f9538a90 'String'
|         `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9874f38 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5592f9874f00 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5592f9874ee0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5592f9874e80 'type'
|     `-ElaboratedType 0x5592f9874e30 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5592f9874e10 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5592f98721c8 'type'
|         `-SubstTemplateTypeParmType 0x5592f9872190 'String' sugar
|           |-TemplateTypeParmType 0x5592f94fc2a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94fc250 'T'
|           `-RecordType 0x5592f9538a90 'String'
|             `-CXXRecord 0x5592f9538a00 'String'
|-CXXMethodDecl 0x5592f98750b8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5592f9874fc8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5592f98751a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5592f9875288 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5592f9875288
|-CXXMethodDecl 0x5592f9875558 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5592f9875460 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5592f9875798 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5592f9875610 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f9875688 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f9875968 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5592f9875858 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f98758d0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f9875ac8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5592f9875b98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5592f9875de8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5592f9875c58 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5592f9875cd0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f9876048 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5592f9875eb8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5592f9875f30 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f9876208 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5592f9876118 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f98763c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5592f98762d0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f9876480 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f9876530 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9876768 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5592f98765e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f9876658 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5592f9876a08 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5592f9876910 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5592f9876ad0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5592f9876b20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5592f9876b70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9770230 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5592f9870ac8 prev 0x5592f9770230 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f9871c90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5592f9871c40 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5592f9871c20 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5592f9871ad0 'type'
|     `-SubstTemplateTypeParmType 0x5592f9871960 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5592f94d2050 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5592f94d1ff8 'F'
|       `-RecordType 0x5592f98715c0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5592f98714e0 'typed_array_memory'
|-FieldDecl 0x5592f9876bc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5592f9876c10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f9876c48 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-RecordType 0x5592f9538a90 'String'
|     `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9876cd8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5592f9876ca0 'String &'
|   `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9538a90 'String'
|       `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9876d68 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5592f9876d30 'const String &'
|   `-QualType 0x5592f9870b61 'const String' const
|     `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9538a90 'String'
|         `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9876df8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5592f9876dc0 'String *'
|   `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9538a90 'String'
|       `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9876e88 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5592f9876e50 'const String *'
|   `-QualType 0x5592f9870b61 'const String' const
|     `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9538a90 'String'
|         `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9877ae0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5592f9877a90 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5592f9877a70 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5592f98779a8 'type'
|     `-LValueReferenceType 0x5592f9877970 'const String &'
|       `-QualType 0x5592f9877711 'const String' const
|         `-SubstTemplateTypeParmType 0x5592f9877710 'String' sugar
|           |-TemplateTypeParmType 0x5592f94dbfa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94dbf48 'T'
|           `-RecordType 0x5592f9538a90 'String'
|             `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9877b48 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5592f9876d30 'const String &'
|   `-QualType 0x5592f9870b61 'const String' const
|     `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9538a90 'String'
|         `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9877ba0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f9877c08 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5592f9876dc0 'String *'
|   `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9538a90 'String'
|       `-CXXRecord 0x5592f9538a00 'String'
|-TypedefDecl 0x5592f9877c70 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5592f9876e50 'const String *'
|   `-QualType 0x5592f9870b61 'const String' const
|     `-SubstTemplateTypeParmType 0x5592f9870b60 'String' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9538a90 'String'
|         `-CXXRecord 0x5592f9538a00 'String'
|-EnumDecl 0x5592f9877cc8 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f9877dc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f9877da0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f9877e48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f9878098 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9877f00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9877fa0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5592f9878358 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5592f9878240 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5592f9878618 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5592f9878500 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5592f9878930 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5592f9878810 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5592f9878c40 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5592f9878b20 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5592f9878f30 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9878d78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9878df0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5592f9879058 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5592f9879138 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9879190 <col:30> Inherited
|-CXXMethodDecl 0x5592f98791d8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5592f9879288 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98792e0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98793a8 <line:152:5, col:63> col:55 begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5592f9879458 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98794b0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98794f8 <line:153:5, col:61> col:55 end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5592f98795a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9879600 <col:30> Inherited
|-CXXMethodDecl 0x5592f9879648 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5592f98796f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9879750 <col:30> Inherited
|-CXXMethodDecl 0x5592f9879798 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5592f9879848 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98798a0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98798c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f9879978 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f9879a28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f9879be8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9879ad8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9879b50 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5592f9879d38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9879ca8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9879ee8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5592f9879df0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f9879fa0 <col:20>
| `-OptimizeNoneAttr 0x5592f9879ff8 <col:30>
|-CXXMethodDecl 0x5592f987a0e8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f987a020 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f987a1a0 <col:20>
| `-OptimizeNoneAttr 0x5592f987a1f8 <col:30>
|-CXXMethodDecl 0x5592f987a2b0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f987a220 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f987a3f8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f987a368 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f987a528 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5592f987a628 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5592f987a6f8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5592f987a7c8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5592f987a908 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f987a878 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f987aa50 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f987a9c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f987ab98 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f987ab08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f987ac50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f987ad50 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f987acc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f987ae08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f987aec8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5592f987afc8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5592f987b148 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f987b088 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5592f987b8d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f987b200 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5592f987b838 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5592f987b738 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5592f987b9b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f987bb08 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f987ba78 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5592f987bbc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f987be08 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f987bc80 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5592f987bcf8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5592f987bf98 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5592f987bed8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5592f987c1a8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5592f987c060 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5592f987c0d8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5592f987c268 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f987d408 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5592f987d310 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5592f987d4d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f987d4d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f987eb00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x5592f987ecd8 prev 0x5592f987eb00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5592f987ed68 <col:46, col:52> col:46 public
|-TypedefDecl 0x5592f987ed90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f9880960 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x5592f9880910 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x5592f987f240 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x5592f987f140 'type'
|     `-TemplateSpecializationType 0x5592f987f0d0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5592f987efb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x5592f987ef90 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5592f987ef70 <col:24> 'unsigned long' 4
|       `-RecordType 0x5592f987f0b0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x5592f987efd0 'char_array'
|-TypedefDecl 0x5592f9880a18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x5592f98809e0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x5592f98809c0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x5592f9880960 'type'
|     `-ElaboratedType 0x5592f9880910 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x5592f987f240 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x5592f987f140 'type'
|         `-TemplateSpecializationType 0x5592f987f0d0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5592f987efb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x5592f987ef90 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5592f987ef70 <col:24> 'unsigned long' 4
|           `-RecordType 0x5592f987f0b0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x5592f987efd0 'char_array'
|-CXXMethodDecl 0x5592f9880b98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x5592f9880aa8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x5592f9880c88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5592f9880d68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5592f9880d68
|-CXXMethodDecl 0x5592f9881038 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5592f9880f40 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x5592f9881278 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5592f98810f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f9881168 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f9881448 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5592f9881338 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f98813b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f98815a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5592f9881678 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5592f98818c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5592f9881738 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5592f98817b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f9881b28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x5592f9881998 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5592f9881a10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f9881ce8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5592f9881bf8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f9881ea8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5592f9881db0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f9881f60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f9882010 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9882248 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5592f98820c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f9882138 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5592f98824e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5592f98823f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x5592f98825b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x5592f9882600 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5592f9882650 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f987d720 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x5592f987d928 prev 0x5592f987d720 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f987ea70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5592f987ea20 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x5592f987ea00 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x5592f987e8b0 'type'
|     `-SubstTemplateTypeParmType 0x5592f987e6d0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f987e220 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5592f987e138 'sized_array_memory'
|-FieldDecl 0x5592f98826a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5592f98826f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f9882728 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f98827b8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x5592f9882780 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f9882878 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x5592f9882840 'const unsigned int &'
|   `-QualType 0x5592f987d9c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f9882908 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x5592f98828d0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f9882998 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x5592f9882960 'const unsigned int *'
|   `-QualType 0x5592f987d9c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f9883580 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x5592f9883530 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x5592f9883510 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x5592f98834a0 'type'
|     `-SubstTemplateTypeParmType 0x5592f9883260 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5592f94dc6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94dc680 'T'
|       `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f98835e8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x5592f9882840 'const unsigned int &'
|   `-QualType 0x5592f987d9c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f9883640 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f98836a8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x5592f98828d0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-BuiltinType 0x5592f9209620 'unsigned int'
|-TypedefDecl 0x5592f9883710 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x5592f9882960 'const unsigned int *'
|   `-QualType 0x5592f987d9c1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5592f987d9c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209620 'unsigned int'
|-EnumDecl 0x5592f9883768 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f9883860 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f9883840 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f98838e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f9883b38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98839a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9883a40 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x5592f9883df8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5592f9883ce0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x5592f98840b8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5592f9883fa0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5592f9884400 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5592f98842e0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x5592f9884710 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5592f98845f0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5592f9884a00 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9884848 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98848c0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5592f9884b28 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5592f9884c08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9884c60 <col:30> Inherited
|-CXXMethodDecl 0x5592f9884ca8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x5592f9884d58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9884db0 <col:30> Inherited
|-CXXMethodDecl 0x5592f9884e48 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5592f9884ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9884f50 <col:30> Inherited
|-CXXMethodDecl 0x5592f9884f98 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5592f9885048 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98850a0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98850e8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5592f9885198 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98851f0 <col:30> Inherited
|-CXXMethodDecl 0x5592f9886fd0 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5592f9887080 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98870d8 <col:30> Inherited
|-CXXMethodDecl 0x5592f9887100 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f98871b0 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f9887260 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f9887420 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9887310 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9887388 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5592f9887570 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98874e0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9887718 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x5592f9887628 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f98877d0 <col:20>
| `-OptimizeNoneAttr 0x5592f9887828 <col:30>
|-CXXMethodDecl 0x5592f9887948 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f9887850 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f9887a00 <col:20>
| `-OptimizeNoneAttr 0x5592f9887a58 <col:30>
|-CXXMethodDecl 0x5592f9887b10 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9887a80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9887c58 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f9887bc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9887d88 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x5592f9887eb8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5592f9887f88 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x5592f9888058 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5592f9888198 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9888108 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98882e0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f9888250 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9888428 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f9888398 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98884e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f98885e0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f9888550 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f9888698 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f9888758 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x5592f9888858 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x5592f98889d8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9888918 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x5592f9889198 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f9888a90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x5592f98890f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x5592f9888ff8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x5592f9889278 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f98893c8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9889338 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5592f9889480 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f98896c8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9889540 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5592f98895b8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5592f9889888 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x5592f9889798 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5592f9889ad8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x5592f9889950 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x5592f98899c8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x5592f9889b98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9889df8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5592f9889d00 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x5592f9889ec8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f9889ec8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f985e3a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x5592f988a128 prev 0x5592f985e3a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f988b140 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5592f988b0f0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x5592f988b0d0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x5592f988af80 'type'
|     `-SubstTemplateTypeParmType 0x5592f987e6d0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f987e220 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5592f987e138 'sized_array_memory'
|-FieldDecl 0x5592f988b240 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5592f988b290 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f988b2c8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988b358 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x5592f988b320 'int &'
|   `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988b418 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x5592f988b3e0 'const int &'
|   `-QualType 0x5592f988a1c1 'const int' const
|     `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988b4a8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x5592f988b470 'int *'
|   `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988b538 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x5592f988b500 'const int *'
|   `-QualType 0x5592f988a1c1 'const int' const
|     `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988c120 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x5592f988c0d0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x5592f988c0b0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x5592f988c040 'type'
|     `-SubstTemplateTypeParmType 0x5592f988be00 'int' sugar
|       |-TemplateTypeParmType 0x5592f94dc6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94dc680 'T'
|       `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988c188 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x5592f988b3e0 'const int &'
|   `-QualType 0x5592f988a1c1 'const int' const
|     `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988c1e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988c248 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x5592f988b470 'int *'
|   `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f988c2b0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x5592f988b500 'const int *'
|   `-QualType 0x5592f988a1c1 'const int' const
|     `-SubstTemplateTypeParmType 0x5592f988a1c0 'int' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-BuiltinType 0x5592f9209580 'int'
|-EnumDecl 0x5592f988c308 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f988c400 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f988c3e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f988c488 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f988c6d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f988c540 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f988c5e0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x5592f988c998 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x5592f988c880 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x5592f988cc58 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x5592f988cb40 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x5592f988cf70 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x5592f988ce50 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x5592f988d280 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x5592f988d160 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x5592f988d570 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f988d3b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f988d430 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5592f988d698 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5592f988d778 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f988d7d0 <col:30> Inherited
|-CXXMethodDecl 0x5592f988d818 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5592f988d8c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f988d920 <col:30> Inherited
|-CXXMethodDecl 0x5592f988d9e8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5592f988da98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f988daf0 <col:30> Inherited
|-CXXMethodDecl 0x5592f988db38 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5592f988dbe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f988dc40 <col:30> Inherited
|-CXXMethodDecl 0x5592f988dc88 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5592f988dd38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f988dd90 <col:30> Inherited
|-CXXMethodDecl 0x5592f988ddd8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5592f988de88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f988dee0 <col:30> Inherited
|-CXXMethodDecl 0x5592f988df08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f988dfb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f988e068 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f988e228 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f988e118 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f988e190 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5592f988e378 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f988e2e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f988e528 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x5592f988e430 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f988e5e0 <col:20>
| `-OptimizeNoneAttr 0x5592f988e638 <col:30>
|-CXXMethodDecl 0x5592f988e758 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f988e660 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f988e810 <col:20>
| `-OptimizeNoneAttr 0x5592f988e868 <col:30>
|-CXXMethodDecl 0x5592f988e920 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f988e890 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f988ea68 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f988e9d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f988eb98 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x5592f988ecc8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x5592f988ed98 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x5592f988ee68 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x5592f9890100 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f988ef18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9890248 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98901b8 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9890390 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f9890300 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f9890448 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f9890548 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f98904b8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f9890600 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f98906b8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x5592f98907b8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x5592f9890938 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9890878 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x5592f98910f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f98909f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x5592f9891058 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x5592f9890f58 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x5592f98911d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f9891328 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9891298 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5592f98913e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f9891628 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98914a0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5592f9891518 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5592f98917e8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x5592f98916f8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5592f9891a38 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x5592f98918b0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5592f9891928 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5592f9891af8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9891d58 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x5592f9891c60 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x5592f9891e28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f9891e28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9891f60 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5592f9892078 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x5592f9892118 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f9892178 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x5592f9892210 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5592f9892210
| `-ParmVarDecl 0x5592f9892328 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5592f98923c8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5592f98923c8
| `-ParmVarDecl 0x5592f98924d8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5592f9892578 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5592f9892578
| `-ParmVarDecl 0x5592f9892688 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5592f98926f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5592f98926f8
| `-ParmVarDecl 0x5592f9892808 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x5592f9892890 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5592f9892890

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9893e20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x5592f9893ff8 prev 0x5592f9893e20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5592f9894088 <col:46, col:52> col:46 public
|-TypedefDecl 0x5592f98940b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f9895a70 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x5592f9895a20 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5592f9895a00 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x5592f98942c8 'type'
|     `-SubstTemplateTypeParmType 0x5592f9894290 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5592f94fc2a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94fc250 'T'
|       `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|         `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f9895b28 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x5592f9895af0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x5592f9895ad0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5592f9895a70 'type'
|     `-ElaboratedType 0x5592f9895a20 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x5592f9895a00 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x5592f98942c8 'type'
|         `-SubstTemplateTypeParmType 0x5592f9894290 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5592f94fc2a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94fc250 'T'
|           `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|             `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-CXXMethodDecl 0x5592f9895ca8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x5592f9895bb8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x5592f9895d98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5592f9895e78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5592f9895e78
|-CXXMethodDecl 0x5592f9896148 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5592f9896050 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x5592f9896388 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5592f9896200 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f9896278 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f9896558 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5592f9896448 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f98964c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f98966b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5592f9896788 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x5592f98969d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5592f9896848 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5592f98968c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f9896c38 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x5592f9896aa8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x5592f9896b20 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f9896df8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5592f9896d08 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f9896fb8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5592f9896ec0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f9897070 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f9897120 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9897358 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5592f98971d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f9897248 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5592f98975f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5592f9897500 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x5592f98976c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x5592f9897710 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5592f9897760 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9892980 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x5592f9892b88 prev 0x5592f9892980 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f9893d90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x5592f9893d40 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5592f9893d20 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x5592f9893bd0 'type'
|     `-SubstTemplateTypeParmType 0x5592f9893a60 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x5592f94d2050 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5592f94d1ff8 'F'
|       `-RecordType 0x5592f98936c0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x5592f98935e0 'typed_array_memory'
|-FieldDecl 0x5592f98977b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x5592f9897800 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f9897838 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|     `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f98978c8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x5592f9897890 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|       `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f9897958 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5592f9897920 'const Router::element_landmark_t &'
|   `-QualType 0x5592f9892c21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|         `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f98979e8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x5592f98979b0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|       `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f9897a78 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x5592f9897a40 'const Router::element_landmark_t *'
|   `-QualType 0x5592f9892c21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|         `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f989a910 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x5592f989a8c0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x5592f989a8a0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x5592f989a7d8 'type'
|     `-LValueReferenceType 0x5592f989a7a0 'const Router::element_landmark_t &'
|       `-QualType 0x5592f989a541 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x5592f989a540 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5592f94dbfa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94dbf48 'T'
|           `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|             `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f989a978 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x5592f9897920 'const Router::element_landmark_t &'
|   `-QualType 0x5592f9892c21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|         `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f989a9d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f989aa38 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x5592f98979b0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|       `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-TypedefDecl 0x5592f989aaa0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x5592f9897a40 'const Router::element_landmark_t *'
|   `-QualType 0x5592f9892c21 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x5592f9892c20 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9891ff0 'Router::element_landmark_t'
|         `-CXXRecord 0x5592f9891f60 'element_landmark_t'
|-EnumDecl 0x5592f989aaf8 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f989abf0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f989abd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f989ac78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f989af08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f989ad30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f989add0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x5592f989b1c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5592f989b0b0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x5592f989b488 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5592f989b370 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5592f989b7d0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5592f989b6b0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x5592f989bae0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x5592f989b9c0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x5592f989bdd0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f989bc18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f989bc90 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5592f989bef8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5592f989bfd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f989c030 <col:30> Inherited
|-CXXMethodDecl 0x5592f989c078 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x5592f989c128 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f989c180 <col:30> Inherited
|-CXXMethodDecl 0x5592f989c248 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5592f989c2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f989c350 <col:30> Inherited
|-CXXMethodDecl 0x5592f989c398 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5592f989c448 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f989c4a0 <col:30> Inherited
|-CXXMethodDecl 0x5592f989c4e8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5592f989c598 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f989c5f0 <col:30> Inherited
|-CXXMethodDecl 0x5592f989c638 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x5592f989c6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f989c740 <col:30> Inherited
|-CXXMethodDecl 0x5592f989c768 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f989c818 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f989c8c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f989ca88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f989c978 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f989c9f0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5592f989cbd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f989cb48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f989cd88 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x5592f989cc90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f989ce40 <col:20>
| `-OptimizeNoneAttr 0x5592f989ce98 <col:30>
|-CXXMethodDecl 0x5592f989cfb8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f989cec0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f989d070 <col:20>
| `-OptimizeNoneAttr 0x5592f989d0c8 <col:30>
|-CXXMethodDecl 0x5592f989d180 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f989d0f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f989d2c8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f989d238 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f989d3f8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5592f989d528 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5592f989d5f8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x5592f989d6c8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x5592f989d808 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f989d778 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f989d950 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f989d8c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f989da98 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f989da08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f989db50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f989dc50 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f989dbc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f989dd08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f989ddc8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x5592f989dec8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x5592f989e048 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f989df88 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x5592f989e7d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f989e100 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x5592f989e738 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x5592f989e638 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x5592f989e8b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f989ea08 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f989e978 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5592f989eac0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f989ed08 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f989eb80 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5592f989ebf8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5592f989ee98 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x5592f989edd8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5592f989f0a8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x5592f989ef60 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x5592f989efd8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5592f989f168 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f989f3c8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x5592f989f2d0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x5592f989f498 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f989f498

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f97de970 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x5592f97deb48 prev 0x5592f97de970 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5592f97debd8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5592f97dec00 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f97e07d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x5592f97e0780 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x5592f97df0b0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x5592f97defb0 'type'
|     `-TemplateSpecializationType 0x5592f97def40 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5592f97dee20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x5592f97dee00 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5592f97dede0 <col:24> 'unsigned long' 16
|       `-RecordType 0x5592f97def20 'char_array<16>'
|         `-ClassTemplateSpecialization 0x5592f97dee40 'char_array'
|-TypedefDecl 0x5592f97e0888 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x5592f97e0850 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x5592f97e0830 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x5592f97e07d0 'type'
|     `-ElaboratedType 0x5592f97e0780 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x5592f97df0b0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x5592f97defb0 'type'
|         `-TemplateSpecializationType 0x5592f97def40 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5592f97dee20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x5592f97dee00 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5592f97dede0 <col:24> 'unsigned long' 16
|           `-RecordType 0x5592f97def20 'char_array<16>'
|             `-ClassTemplateSpecialization 0x5592f97dee40 'char_array'
|-CXXMethodDecl 0x5592f97e0a08 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x5592f97e0918 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x5592f97e4b60 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5592f97e4c40 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5592f97e4c40
|-CXXMethodDecl 0x5592f97e4f08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5592f97e4e10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x5592f97e5148 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5592f97e4fc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f97e5038 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e5318 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5592f97e5208 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f97e5280 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e5478 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5592f97e5548 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x5592f97e5798 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5592f97e5608 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5592f97e5680 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e59f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x5592f97e5868 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5592f97e58e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e5bb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5592f97e5ac8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e5d78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5592f97e5c80 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e5e30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f97e5ee0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f97e6118 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5592f97e5f90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f97e6008 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5592f97e63b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5592f97e62c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x5592f97e6480 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x5592f97e64d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5592f97e6520 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f989fbb0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x5592f989fdb8 prev 0x5592f989fbb0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f98a0e80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5592f98a0e30 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x5592f98a0e10 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x5592f98a0cc0 'type'
|     `-SubstTemplateTypeParmType 0x5592f97de540 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f97de090 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5592f97ddfa8 'sized_array_memory'
|-FieldDecl 0x5592f98a0f80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5592f98a0fd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f98a1008 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-RecordType 0x5592f9862860 'Router::Connection'
|     `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a10c8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x5592f98a1090 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9862860 'Router::Connection'
|       `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a1158 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x5592f98a1120 'const Router::Connection &'
|   `-QualType 0x5592f989fe51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9862860 'Router::Connection'
|         `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a11e8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x5592f98a11b0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9862860 'Router::Connection'
|       `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a1278 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x5592f98a1240 'const Router::Connection *'
|   `-QualType 0x5592f989fe51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9862860 'Router::Connection'
|         `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a1ed0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x5592f98a1e80 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x5592f98a1e60 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x5592f98a1d98 'type'
|     `-LValueReferenceType 0x5592f98a1d60 'const Router::Connection &'
|       `-QualType 0x5592f98a1b01 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x5592f98a1b00 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x5592f94dbfa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94dbf48 'T'
|           `-RecordType 0x5592f9862860 'Router::Connection'
|             `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a1f38 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x5592f98a1120 'const Router::Connection &'
|   `-QualType 0x5592f989fe51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9862860 'Router::Connection'
|         `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a1f90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f98a1ff8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x5592f98a11b0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9862860 'Router::Connection'
|       `-CXXRecord 0x5592f98627d0 'Connection'
|-TypedefDecl 0x5592f98a2060 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x5592f98a1240 'const Router::Connection *'
|   `-QualType 0x5592f989fe51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x5592f989fe50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9862860 'Router::Connection'
|         `-CXXRecord 0x5592f98627d0 'Connection'
|-EnumDecl 0x5592f98a20b8 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f98a21b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f98a2190 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f98a2238 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f98a4f58 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98a4d80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98a4e20 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x5592f98a5218 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5592f98a5100 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x5592f98a54d8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5592f98a53c0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5592f98a5820 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5592f98a5700 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x5592f98a5b30 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5592f98a5a10 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5592f98a5e20 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98a5c68 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98a5ce0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5592f98a5f78 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5592f98a6058 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98a60b0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98a60f8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x5592f98a61a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98a6200 <col:30> Inherited
|-CXXMethodDecl 0x5592f98a62c8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5592f98a6378 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98a63d0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98a6418 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5592f98a64c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98a6520 <col:30> Inherited
|-CXXMethodDecl 0x5592f98a6568 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5592f98a6618 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98a6670 <col:30> Inherited
|-CXXMethodDecl 0x5592f98a66b8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5592f98a6768 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98a67c0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98a67e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f98a6898 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f98a6948 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f98a6b08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98a69f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98a6a70 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5592f98a6c58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98a6bc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98a6e08 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x5592f98a6d10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f98a6ec0 <col:20>
| `-OptimizeNoneAttr 0x5592f98a6f18 <col:30>
|-CXXMethodDecl 0x5592f98a7038 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f98a6f40 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f98a70f0 <col:20>
| `-OptimizeNoneAttr 0x5592f98a7148 <col:30>
|-CXXMethodDecl 0x5592f98a7200 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98a7170 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98a7348 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98a72b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98a7478 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x5592f98a75a8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5592f98a7678 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x5592f98a7748 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5592f98a7888 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98a77f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98a79d0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98a7940 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98a7b18 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f98a7a88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98a7bd0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f98a7cd0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f98a7c40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98a7d88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f98a7e48 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x5592f98a7f48 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x5592f98a80f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f98a8008 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x5592f98a88b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f98a81b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x5592f98a8818 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x5592f98a8718 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x5592f98a8998 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f98a8ae8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f98a8a58 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5592f98a8ba0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f98a8de8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98a8c60 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x5592f98a8cd8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5592f98a8fa8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x5592f98a8eb8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x5592f98a91f8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x5592f98a9070 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x5592f98a90e8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x5592f98a92b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f98a9518 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5592f98a9420 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x5592f98a95e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f98a95e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97227f0 prev 0x5592f976d400 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f97228e8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5592f9722978 <col:22, col:28> col:22 public
|-EnumDecl 0x5592f97229a0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5592f9722ab8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722a98 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5592f9722a80 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592f9722a60 <col:14> 'int' 999
| |-EnumConstantDecl 0x5592f9722b60 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722b40 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5592f9722b28 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592f9722b08 <col:14> 'int' 1
| |-EnumConstantDecl 0x5592f9722bf0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722bd0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5592f9722bb0 <col:17> 'int' 0
| |-EnumConstantDecl 0x5592f9722c80 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722c60 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5592f9722c40 <col:13> 'int' 1
| |-EnumConstantDecl 0x5592f9722d10 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722cf0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5592f9722cd0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5592f9722da0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722d80 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5592f9722d60 <col:13> 'int' 3
| |-EnumConstantDecl 0x5592f9722e30 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722e10 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5592f9722df0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5592f9722ec0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722ea0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5592f9722e80 <col:14> 'int' 5
| |-EnumConstantDecl 0x5592f9722f50 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5592f9722f30 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5592f9722f10 <col:12> 'int' 6
| `-EnumConstantDecl 0x5592f9722fe0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5592f9722fc0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5592f9722fa0 <col:13> 'int' 7
|-VarDecl 0x5592f9723050 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5592f97230d8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5592f9723160 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5592f97231e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5592f9723270 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5592f97232f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5592f9723380 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5592f9723408 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5592f9723490 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5592f9723518 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5592f97235a0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5592f97236a0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5592f9728a58 '_nerrors' 'int'
| | `-IntegerLiteral 0x5592f97291e8 <line:128:13> 'int' 0
| `-CompoundStmt 0x5592f9729258 <col:16, line:129:5>
|-CXXDestructorDecl 0x5592f9723790 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5592f9729268 <col:29, line:132:5>
|-CXXMethodDecl 0x5592f9723948 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5592f9723880 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9723a10 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5592f9723af8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5592f97292c0 <col:44, line:161:5>
|   `-ReturnStmt 0x5592f97292b0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5592f9729298 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9729278 <col:9> 'ErrorHandler *' lvalue Var 0x5592f9728ab8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9723c38 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5592f9723ba8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9723d00 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5592f9729320 <col:43, line:173:5>
|   `-ReturnStmt 0x5592f9729310 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5592f97292f8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5592f97292d8 <col:9> 'ErrorHandler *' lvalue Var 0x5592f9728b30 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5592f9723db8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5592f9723e38 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5592f9723f48 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5592f9723eb8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724098 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5592f9724008 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5592f97241f0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5592f9724158 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724348 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5592f97242b0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5592f97244a0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5592f9724408 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5592f97246b0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592f9724558 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5592f97245d8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724888 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592f9724770 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5592f97247f0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724aa8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592f9724948 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5592f97249c8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724c88 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592f9724b68 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5592f9724be8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724e68 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5592f9724d48 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5592f9724dc8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5592f9724ff0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5592f9724f28 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5592f97251c0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5592f97250a8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5592f9725120 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5592f98d4c18 <col:57, line:234:5>
|   `-ReturnStmt 0x5592f98d4c08 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5592f98d4bf0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5592f98d4b98 <col:9, col:41> 'int'
|         |-MemberExpr 0x5592f98d4b68 <col:9> '<bound member function type>' ->xmessage 0x5592f9724ff0
|         | `-CXXThisExpr 0x5592f98d4b58 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5592f98d4bd8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5592f98d4bc0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5592f98d4b38 <col:18, col:40> 'String' (CXXTemporary 0x5592f98d4b38)
|               `-CallExpr 0x5592f98d4b00 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5592f98d4ae8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5592f98d4a58 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5592f9727248 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5592f98d4a78 <col:31> 'const String' lvalue ParmVar 0x5592f9725120 'str' 'const String &'
|                 `-DeclRefExpr 0x5592f98d4a98 <col:36> 'const String' lvalue ParmVar 0x5592f97250a8 'anno' 'const String &'
|-CXXMethodDecl 0x5592f9725500 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5592f9725280 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5592f9725300 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5592f97253d0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5592f98d4ea8 <col:68, line:243:5>
|   `-ReturnStmt 0x5592f98d4e98 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5592f98d4e80 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5592f98d4e20 <col:9, col:41> 'int'
|         |-MemberExpr 0x5592f98d4df0 <col:9> '<bound member function type>' ->xmessage 0x5592f97251c0
|         | `-CXXThisExpr 0x5592f98d4de0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5592f98d4cb8 <col:18> 'const String' lvalue ParmVar 0x5592f9725280 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5592f98d4e68 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5592f98d4e50 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5592f98d4dc0 <col:24, col:40> 'String' (CXXTemporary 0x5592f98d4dc0)
|               `-CXXMemberCallExpr 0x5592f98d4d58 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5592f98d4ce8 <col:24> '<bound member function type>' ->vformat 0x5592f97266e0
|                 | `-CXXThisExpr 0x5592f98d4cd8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5592f98d4d88 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5592f98d4d18 <col:32> 'const char *' lvalue ParmVar 0x5592f9725300 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5592f98d4da0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5592f98d4d38 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5592f97253d0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592f97257a0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5592f97255c8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5592f9725640 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5592f97256b8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5592f98d51e8 <col:23, line:254:5>
|   `-ReturnStmt 0x5592f98d51d8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5592f98d51c0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5592f98d5160 <col:9, col:71> 'int'
|         |-MemberExpr 0x5592f98d5130 <col:9> '<bound member function type>' ->xmessage 0x5592f97251c0
|         | `-CXXThisExpr 0x5592f98d5120 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5592f98d51a8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5592f98d5190 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5592f98d50e0 <col:18, col:65> 'String' (CXXTemporary 0x5592f98d50e0)
|         |     `-CallExpr 0x5592f98d5078 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5592f98d5060 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5592f98d4f48 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5592f9727248 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5592f98d4f68 <col:31> 'const String' lvalue ParmVar 0x5592f9725640 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5592f98d50c0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5592f98d50a8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5592f98d5040 <col:37, col:64> 'String' (CXXTemporary 0x5592f98d5040)
|         |             `-CallExpr 0x5592f98d5010 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5592f98d4ff8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5592f98d4f88 <col:37> 'String (const String &)' lvalue CXXMethod 0x5592f9727898 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5592f98d4fa8 <col:56> 'const String' lvalue ParmVar 0x5592f97255c8 'landmark' 'const String &'
|         `-DeclRefExpr 0x5592f98d5100 <col:68> 'const String' lvalue ParmVar 0x5592f97256b8 'str' 'const String &'
|-CXXMethodDecl 0x5592f9725b20 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5592f9725868 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5592f97258e0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5592f9725960 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5592f97259d8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5592f98d54a0 <col:34, line:267:5>
|   `-ReturnStmt 0x5592f98d5490 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5592f98d5478 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5592f98d5410 <col:9, col:51> 'int'
|         |-MemberExpr 0x5592f98d53e0 <col:9> '<bound member function type>' ->xmessage 0x5592f97257a0
|         | `-CXXThisExpr 0x5592f98d53d0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5592f98d5288 <col:18> 'const String' lvalue ParmVar 0x5592f9725868 'landmark' 'const String &'
|         |-DeclRefExpr 0x5592f98d52a8 <col:28> 'const String' lvalue ParmVar 0x5592f97258e0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5592f98d5460 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5592f98d5448 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5592f98d53b0 <col:34, col:50> 'String' (CXXTemporary 0x5592f98d53b0)
|               `-CXXMemberCallExpr 0x5592f98d5348 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5592f98d52d8 <col:34> '<bound member function type>' ->vformat 0x5592f97266e0
|                 | `-CXXThisExpr 0x5592f98d52c8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5592f98d5378 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5592f98d5308 <col:42> 'const char *' lvalue ParmVar 0x5592f9725960 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5592f98d5390 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5592f98d5328 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5592f97259d8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592f9725c30 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5592f98d5520 <col:25, line:288:5>
|   `-ReturnStmt 0x5592f98d5510 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5592f98d54f8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5592f98d54c8 <col:9> 'const int' lvalue ->_nerrors 0x5592f9728a58
|         `-CXXThisExpr 0x5592f98d54b8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5592f9725e40 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5592f9725ce8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5592f9725d68 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5592f9726128 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5592f9725f08 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5592f9725f88 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5592f9726000 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592f97262c0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5592f97261f8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5592f9726508 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5592f9726380 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5592f97263f8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5592f98d5780 <col:58, line:357:5>
|   `-ReturnStmt 0x5592f98d5770 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5592f98d5758 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5592f98d5728 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5592f98d5710 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5592f98d56f0 <col:9, col:29> 'String' (CXXTemporary 0x5592f98d56f0)
|             `-CallExpr 0x5592f98d5680 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5592f98d5668 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5592f98d55e8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5592f9726128 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5592f98d5588 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5592f98d56b8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5592f98d55a8 <col:21> 'const char *' lvalue ParmVar 0x5592f9726380 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5592f98d56d0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f98d55c8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5592f97263f8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592f97266e0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5592f97265d0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5592f9726648 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5592f9726838 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5592f97267a8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5592f97269b8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5592f97268f0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5592f9726c50 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5592f9726a70 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5592f9726af0 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5592f9726b68 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5592f9726db0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5592f9726d20 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5592f98d5898 <col:37, line:441:5>
|   `-IfStmt 0x5592f98d5880 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5592f98d5808 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5592f98d57d8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5592f98d5798 <col:6> 'int' lvalue ParmVar 0x5592f9726d20 'level' 'int'
|     | `-ImplicitCastExpr 0x5592f98d57f0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5592f98d57b8 <col:15> 'ErrorHandler::Level' EnumConstant 0x5592f9722da0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5592f98d5868 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5592f98d5838 <col:8> 'int' lvalue ->_nerrors 0x5592f9728a58
|         `-CXXThisExpr 0x5592f98d5828 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5592f9726e78 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5592f98d5930 <col:26, line:448:5>
|   `-BinaryOperator 0x5592f98d5910 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5592f98d58c0 <col:2> 'int' lvalue ->_nerrors 0x5592f9728a58
|     | `-CXXThisExpr 0x5592f98d58b0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5592f98d58f0 <col:13> 'int' 0
|-CXXMethodDecl 0x5592f9727040 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5592f9726f30 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5592f9726fa8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5592f9727248 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5592f9727100 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5592f9727178 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5592f97274f8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5592f9727308 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5592f9727388 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5592f9727408 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5592f97275b0 <col:59> 0 0
|-CXXMethodDecl 0x5592f9727748 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5592f9727628 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5592f97276a8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5592f98d5fa0 <col:70, line:534:5>
|   |-DeclStmt 0x5592f98d5aa0 <line:528:2, col:20>
|   | |-VarDecl 0x5592f98d5958 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5592f98d59c0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5592f98d59f8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5592f98d5a60 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5592f98d5b70 <line:529:2, col:23>
|   | `-VarDecl 0x5592f98d5ad0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5592f98d5b58 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5592f98d5b38 <col:18> 'const char *' lvalue ParmVar 0x5592f9727628 'begin' 'const char *'
|   |-DoStmt 0x5592f98d5f38 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5592f98d5e68 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5592f98d5e50 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5592f98d5e30 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5592f98d5b88 <col:6> 'const char *' lvalue Var 0x5592f98d5ad0 'x' 'const char *'
|   | |     `-CallExpr 0x5592f98d5d80 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5592f98d5d68 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5592f98d5d20 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5592f9728f30 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5592f98d5de8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5592f98d5dd0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5592f98d5c40 <col:20, col:27> 'String' (CXXTemporary 0x5592f98d5c40)
|   | |       |     `-CXXTemporaryObjectExpr 0x5592f98d5c08 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5592f98d5e00 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5592f98d5c60 <col:30> 'const char *' lvalue Var 0x5592f98d5ad0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5592f98d5e18 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5592f98d5c80 <col:33> 'const char *' lvalue ParmVar 0x5592f97276a8 'end' 'const char *'
|   | |       |-UnaryOperator 0x5592f98d5cc0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5592f98d5ca0 <col:39> 'String' lvalue Var 0x5592f98d5958 'name' 'String'
|   | |       |-UnaryOperator 0x5592f98d5cf8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5592f98d5cd8 <col:46> 'String' lvalue Var 0x5592f98d59f8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5592f98d5d10 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5592f98d5f20 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5592f98d5f08 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5592f98d5ee8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5592f98d5eb8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5592f953c1f8
|   |         `-ImplicitCastExpr 0x5592f98d5ea0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5592f98d5e80 <col:11> 'String' lvalue Var 0x5592f98d5958 'name' 'String'
|   `-ReturnStmt 0x5592f98d5f90 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5592f98d5f78 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5592f98d5f58 <col:9> 'const char *' lvalue Var 0x5592f98d5ad0 'x' 'const char *'
|-CXXMethodDecl 0x5592f9727898 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5592f9727808 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5592f98d65a8 <col:55, line:550:5>
|   `-IfStmt 0x5592f98d6580 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5592f98d61e0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5592f98d61c8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5592f98d61b0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5592f98d6190 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5592f98d6160 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5592f953c1f8
|     | |       `-DeclRefExpr 0x5592f98d6000 <col:6> 'const String' lvalue ParmVar 0x5592f9727808 'x' 'const String &'
|     | `-BinaryOperator 0x5592f98d6140 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5592f98d6110 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5592f98d60c0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5592f98d60a8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5592f98d6060 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5592f9555a30 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5592f98d6020 <col:11> 'const String' lvalue ParmVar 0x5592f9727808 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5592f98d6040 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5592f98d6128 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5592f98d60f8 <col:19> 'char' 123
|     |-ReturnStmt 0x5592f98d6250 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5592f98d6220 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5592f98d6200 <col:13> 'const String' lvalue ParmVar 0x5592f9727808 'x' 'const String &'
|     `-IfStmt 0x5592f98d6558 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5592f98d62e8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5592f98d62d0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5592f98d62b0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5592f98d6280 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5592f953c1f8
|       |       `-DeclRefExpr 0x5592f98d6260 <col:11> 'const String' lvalue ParmVar 0x5592f9727808 'x' 'const String &'
|       |-ReturnStmt 0x5592f98d6470 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5592f98d6458 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5592f98d6428 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5592f98d6410 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5592f98d63f0 <col:13, col:29> 'String' (CXXTemporary 0x5592f98d63f0)
|       |         `-CallExpr 0x5592f98d63a0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5592f98d6388 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5592f98d6300 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5592f9727040 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5592f98d63d0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5592f98d6320 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5592f98d6340 <col:28> 'const String' lvalue ParmVar 0x5592f9727808 'x' 'const String &'
|       `-ReturnStmt 0x5592f98d6548 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5592f98d6530 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5592f98d6500 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5592f98d64e8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5592f98d64c8 <col:13, col:20> 'String' (CXXTemporary 0x5592f98d64c8)
|                 `-CXXTemporaryObjectExpr 0x5592f98d6490 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5592f9727a98 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5592f9727950 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5592f97279c8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f97291d8 <col:71> 'bool' false
|-CXXRecordDecl 0x5592f9727b48 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5592f9727e48 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5592f9727de0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5592f9727d80 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5592f9727d40 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5592f9538a90 'String'
|       | `-CXXRecord 0x5592f9538a00 'String'
|       |-BuiltinType 0x5592f9209580 'int'
|       `-DecayedType 0x5592f97253a0 '__va_list_tag *' sugar
|         |-TypedefType 0x5592f9725370 'va_list' sugar
|         | |-Typedef 0x5592f9429b40 'va_list'
|         | `-TypedefType 0x5592f9429af0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5592f9361718 '__gnuc_va_list'
|         |   `-TypedefType 0x5592f9361680 '__builtin_va_list' sugar
|         |     |-Typedef 0x5592f924ad38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5592f924ace0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5592f920a2d0 '__va_list_tag'
|         |         `-CXXRecord 0x5592f920a238 '__va_list_tag'
|         `-PointerType 0x5592f942f3e0 '__va_list_tag *'
|           `-RecordType 0x5592f920a2d0 '__va_list_tag'
|             `-CXXRecord 0x5592f920a238 '__va_list_tag'
|-EnumDecl 0x5592f9727ea0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5592f9727fa0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728500 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9727f80 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5592f9727f60 <col:16> 'int' 1
| |-EnumConstantDecl 0x5592f9728030 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728518 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9728010 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5592f9727ff0 <col:21> 'int' 2
| |-EnumConstantDecl 0x5592f97280c0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728530 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97280a0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5592f9728080 <col:22> 'int' 4
| |-EnumConstantDecl 0x5592f9728150 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728548 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9728130 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5592f9728110 <col:17> 'int' 8
| |-EnumConstantDecl 0x5592f97281e0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728560 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97281c0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5592f97281a0 <col:22> 'int' 16
| |-EnumConstantDecl 0x5592f9728270 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728578 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9728250 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5592f9728230 <col:19> 'int' 32
| |-EnumConstantDecl 0x5592f9728300 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f9728590 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97282e0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5592f97282c0 <col:17> 'int' 64
| |-EnumConstantDecl 0x5592f9728390 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f97285a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9728370 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5592f9728350 <col:14> 'int' 128
| |-EnumConstantDecl 0x5592f9728420 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5592f97285c0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9728400 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5592f97283e0 <col:16> 'int' 256
| `-EnumConstantDecl 0x5592f97284b0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5592f97285d8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9728490 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5592f9728470 <col:12> 'int' 1024
|-CXXMethodDecl 0x5592f97287e8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5592f9728600 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5592f97286a0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5592f9728970 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5592f97288a8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5592f9728a18 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5592f9728a58 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5592f9728ab8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5592f9728b30 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5592f9728f30 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5592f9728ba8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5592f9728c28 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5592f9728ca8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5592f9728d20 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5592f9728d98 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5592f9728e10 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5592f9729058 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5592f9729058
| `-ParmVarDecl 0x5592f9729168 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5592f98d6908 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5592f98d6908
  `-ParmVarDecl 0x5592f98d6a18 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9768b50 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5592f9768ca0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5592f9768d20 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x5592f9769b18 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5592f9769b18
| `-ParmVarDecl 0x5592f9769c28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x5592f9769cc8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5592f9769cc8
| `-ParmVarDecl 0x5592f9769dd8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x5592f9769e48 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f9769e48
|-CXXMethodDecl 0x5592f976a718 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5592f976a718
| `-ParmVarDecl 0x5592f976a828 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x5592f976a898 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5592f976a898
| `-ParmVarDecl 0x5592f976a9a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x5592f9722388 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5592f9722460 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9768e50 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5592f9768f78 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5592f9769000 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x5592f9769f78 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5592f9769f78
| `-ParmVarDecl 0x5592f976a088 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x5592f976a128 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5592f976a128
| `-ParmVarDecl 0x5592f976a238 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x5592f976a2a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f976a2a8
|-CXXMethodDecl 0x5592f976aa48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5592f976aa48
| `-ParmVarDecl 0x5592f976ab58 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x5592f976abc8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5592f976abc8
| `-ParmVarDecl 0x5592f976acd8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x5592f97224c0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5592f97225a0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97644d8 prev 0x5592f9763970 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5592f97645d0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x5592f9764660 <col:17, col:23> col:17 public
|-EnumDecl 0x5592f9764688 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x5592f9764790 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f97654e0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764770 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x5592f9764750 <col:11> 'int' 1
| |-EnumConstantDecl 0x5592f9764820 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f97654f8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764800 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x5592f97647e0 <col:12> 'int' 2
| |-EnumConstantDecl 0x5592f97648b0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765510 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764890 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x5592f9764870 <col:17> 'int' 4
| |-EnumConstantDecl 0x5592f9764940 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765528 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764920 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f9764900 <col:16> 'int' 0
| |-EnumConstantDecl 0x5592f97649d0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765540 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97649b0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5592f9764990 <col:19> 'int' 32
| |-EnumConstantDecl 0x5592f9764a60 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765558 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764a40 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x5592f9764a20 <col:10> 'int' 64
| |-EnumConstantDecl 0x5592f9764af0 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765570 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764ad0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x5592f9764ab0 <col:19> 'int' 128
| |-EnumConstantDecl 0x5592f9764b80 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765588 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764b60 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x5592f9764b40 <col:20> 'int' 256
| |-EnumConstantDecl 0x5592f9764c10 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f97655a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764bf0 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x5592f9764bd0 <col:17> 'int' 512
| |-EnumConstantDecl 0x5592f9764ca0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f97655b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764c80 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x5592f9764c60 <col:15> 'int' 1024
| |-EnumConstantDecl 0x5592f9764d30 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f97655d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764d10 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x5592f9764cf0 <col:11> 'int' 2048
| |-EnumConstantDecl 0x5592f9764dc0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f97655e8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764da0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x5592f9764d80 <col:16> 'int' 4096
| |-EnumConstantDecl 0x5592f9764e50 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765600 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764e30 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x5592f9764e10 <col:13> 'int' 8192
| |-EnumConstantDecl 0x5592f9764ee0 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765618 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9764ec0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x5592f9764ea0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x5592f9764fb0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x5592f9764f90 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x5592f9764f70 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5592f9764f30 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x5592f9764f50 <col:20> 'int' 26
| |-EnumConstantDecl 0x5592f9765080 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x5592f9765060 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x5592f9765040 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5592f9765000 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x5592f9765020 <col:27> 'int' 27
| |-EnumConstantDecl 0x5592f9765110 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765630 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97650f0 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x5592f97650d0 <col:17> 'int' 28
| |-EnumConstantDecl 0x5592f97651e0 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x5592f97651c0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x5592f97651a0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5592f9765160 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x5592f9765180 <col:18> 'int' EnumConstant 0x5592f9765110 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9765270 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765648 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9765250 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x5592f9765230 <col:25> 'int' 8
| |-EnumConstantDecl 0x5592f9765300 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5592f9765660 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97652e0 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x5592f97652c0 <col:26> 'int' 16
| `-EnumConstantDecl 0x5592f9765490 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x5592f9765678 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9765470 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x5592f9765450 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x5592f9765410 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x5592f97653d0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x5592f9765390 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x5592f9765350 <col:14> 'int' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x5592f9765370 <col:23> 'int' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x5592f97653b0 <col:33> 'int' EnumConstant 0x5592f97648b0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x5592f97653f0 <col:48> 'int' EnumConstant 0x5592f9765270 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x5592f9765430 <col:71> 'int' EnumConstant 0x5592f9765300 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x5592f97656d8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x5592f976b0f8 <col:39, line:64:5>
|   `-ReturnStmt 0x5592f976b0e8 <line:63:2, col:9>
|     `-MemberExpr 0x5592f976b0b8 <col:9> 'const String' lvalue ->_name 0x5592f9768b00
|       `-CXXThisExpr 0x5592f976b0a8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5592f9765798 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x5592f976b178 <col:35, line:71:5>
|   `-ReturnStmt 0x5592f976b168 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x5592f976b150 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5592f976b120 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|         `-CXXThisExpr 0x5592f976b110 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5592f97658e8 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x5592f9765850 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x5592f976b2f8 <col:42, line:77:5>
|   `-ReturnStmt 0x5592f976b2e8 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x5592f976b2d0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x5592f976b2a0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x5592f976b200 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x5592f976b1d0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5592f976b190 <col:9> 'int' lvalue ParmVar 0x5592f9765850 'op' 'int'
|         | `-ImplicitCastExpr 0x5592f976b1e8 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x5592f976b1b0 <col:15> 'Handler::Flags' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x5592f976b230 <col:25> 'void *const' lvalue ->_write_user_data 0x5592f97691b0
|         | `-CXXThisExpr 0x5592f976b220 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x5592f976b270 <col:44> 'void *const' lvalue ->_read_user_data 0x5592f9769148
|           `-CXXThisExpr 0x5592f976b260 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x5592f97659b8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x5592f976b378 <col:41, line:82:5>
|   `-ReturnStmt 0x5592f976b368 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x5592f976b350 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5592f976b320 <col:9> 'void *const' lvalue ->_read_user_data 0x5592f9769148
|         `-CXXThisExpr 0x5592f976b310 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5592f9765a80 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x5592f976b3f8 <col:42, line:87:5>
|   `-ReturnStmt 0x5592f976b3e8 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x5592f976b3d0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5592f976b3a0 <col:9> 'void *const' lvalue ->_write_user_data 0x5592f97691b0
|         `-CXXThisExpr 0x5592f976b390 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5592f9765b48 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x5592f9765be8 <col:52> "" ""
|-CXXMethodDecl 0x5592f9765c80 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x5592f9765d20 <col:52> "" ""
|-CXXMethodDecl 0x5592f9765db0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x5592f976b4e8 <col:34, line:98:5>
|   `-ReturnStmt 0x5592f976b4d8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x5592f976b4c0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5592f976b4a0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5592f976b470 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5592f976b420 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|         |   `-CXXThisExpr 0x5592f976b410 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5592f976b488 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5592f976b450 <col:18> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5592f9765e70 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x5592f976b5d8 <col:36, line:104:5>
|   `-ReturnStmt 0x5592f976b5c8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x5592f976b5b0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5592f976b590 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5592f976b560 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5592f976b510 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|         |   `-CXXThisExpr 0x5592f976b500 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5592f976b578 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5592f976b540 <col:18> 'Handler::Flags' EnumConstant 0x5592f97648b0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x5592f9765f30 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x5592f976b7b8 <col:38, line:113:5>
|   `-ReturnStmt 0x5592f976b7a8 <line:112:2, col:49>
|     `-BinaryOperator 0x5592f976b788 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x5592f976b730 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x5592f976b710 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5592f976b6e0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5592f976b600 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|       |   |   `-CXXThisExpr 0x5592f976b5f0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5592f976b6f8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5592f976b6c0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x5592f976b6a0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x5592f976b670 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5592f976b630 <col:20> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5592f976b688 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5592f976b650 <col:29> 'Handler::Flags' EnumConstant 0x5592f9764af0 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5592f976b770 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5592f976b750 <col:49> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5592f9765ff0 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x5592f976b8a8 <col:34, line:118:5>
|   `-ReturnStmt 0x5592f976b898 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x5592f976b880 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5592f976b860 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5592f976b830 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5592f976b7e0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|         |   `-CXXThisExpr 0x5592f976b7d0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5592f976b848 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5592f976b810 <col:18> 'Handler::Flags' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5592f97660b0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x5592f976ba88 <col:39, line:127:5>
|   `-ReturnStmt 0x5592f976ba78 <line:126:2, col:51>
|     `-BinaryOperator 0x5592f976ba58 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x5592f976ba00 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x5592f976b9e0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5592f976b9b0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5592f976b8d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|       |   |   `-CXXThisExpr 0x5592f976b8c0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5592f976b9c8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5592f976b990 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x5592f976b970 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x5592f976b940 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5592f976b900 <col:20> 'Handler::Flags' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5592f976b958 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5592f976b920 <col:30> 'Handler::Flags' EnumConstant 0x5592f9764b80 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5592f976ba40 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5592f976ba20 <col:51> 'Handler::Flags' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5592f9766170 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x5592f976bb90 <col:33, line:132:5>
|   `-ReturnStmt 0x5592f976bb80 <line:131:2, col:41>
|     `-BinaryOperator 0x5592f976bb60 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x5592f976bae0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x5592f976bab0 <col:9> '<bound member function type>' ->read_visible 0x5592f9765f30
|       |   `-CXXThisExpr 0x5592f976baa0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x5592f976bb40 <col:27, col:41> 'bool'
|         `-MemberExpr 0x5592f976bb10 <col:27> '<bound member function type>' ->write_visible 0x5592f97660b0
|           `-CXXThisExpr 0x5592f976bb00 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x5592f9766230 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x5592f976bcc8 <col:51, line:138:5>
|   `-ReturnStmt 0x5592f976bcb8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x5592f976bca0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5592f976bc80 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5592f976bc38 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5592f976bc08 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5592f976bbb8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|           |   `-CXXThisExpr 0x5592f976bba8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5592f976bc20 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5592f976bbe8 <col:26> 'Handler::Flags' EnumConstant 0x5592f97649d0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5592f97662f0 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x5592f976bdd8 <col:50, line:144:5>
|   `-ReturnStmt 0x5592f976bdc8 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x5592f976bdb0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5592f976bd90 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5592f976bd70 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5592f976bd40 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5592f976bcf0 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|           |   `-CXXThisExpr 0x5592f976bce0 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5592f976bd58 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5592f976bd20 <col:26> 'Handler::Flags' EnumConstant 0x5592f97649d0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5592f97663b0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x5592f976bec8 <col:29, line:166:5>
|   `-ReturnStmt 0x5592f976beb8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x5592f976bea0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5592f976be80 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5592f976be50 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5592f976be00 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|         |   `-CXXThisExpr 0x5592f976bdf0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5592f976be68 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5592f976be30 <col:18> 'Handler::Flags' EnumConstant 0x5592f9764a60 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x5592f9766638 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5592f9766460 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x5592f97664d8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x5592f9766550 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9766848 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x5592f9766700 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x5592f9766778 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5592f976afe0 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f976afc0 <col:62> 'int' 0
| `-CompoundStmt 0x5592f976c168 <col:71, line:188:5>
|   `-ReturnStmt 0x5592f976c158 <line:187:2, col:36>
|     `-ExprWithCleanups 0x5592f976c140 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x5592f976c110 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5592f976c0f8 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5592f976c0d8 <col:9, col:36> 'String' (CXXTemporary 0x5592f976c0d8)
|             `-CXXMemberCallExpr 0x5592f976c038 <col:9, col:36> 'String'
|               |-MemberExpr 0x5592f976c008 <col:9> '<bound member function type>' ->call_read 0x5592f9766638
|               | `-CXXThisExpr 0x5592f976bff8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5592f976c070 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5592f976bf50 <col:19> 'Element *' lvalue ParmVar 0x5592f9766700 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x5592f976c0a0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x5592f976c088 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x5592f976bfb8 <col:22, col:29> 'String' (CXXTemporary 0x5592f976bfb8)
|               |     `-CXXTemporaryObjectExpr 0x5592f976bf80 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x5592f976c0b8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f976bfd8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x5592f9766778 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9766ae0 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5592f9766908 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x5592f9766980 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5592f97669f8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9766c68 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x5592f9766ba8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x5592f9766e98 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x5592f9766d20 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x5592f9766d98 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x5592f9766f98 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x5592f976c1c8 <col:50, line:225:5>
|   `-ReturnStmt 0x5592f976c1b8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x5592f976c1a0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x5592f976c180 <col:9> 'const Handler *' lvalue Var 0x5592f9769340 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x5592f9767038 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x5592f9767140 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767ce0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767120 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5592f9767100 <col:11> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97671d0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767cf8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97671b0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5592f9767190 <col:12> 'Handler::Flags' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767260 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767d10 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767240 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5592f9767220 <col:17> 'Handler::Flags' EnumConstant 0x5592f97648b0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97672f0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767d28 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97672d0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5592f97672b0 <col:16> 'Handler::Flags' EnumConstant 0x5592f9764940 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767380 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767d40 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767360 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x5592f9767340 <col:19> 'Handler::Flags' EnumConstant 0x5592f97649d0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767410 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767d58 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97673f0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5592f97673d0 <col:10> 'Handler::Flags' EnumConstant 0x5592f9764a60 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97674a0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767d70 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767480 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x5592f9767460 <col:19> 'Handler::Flags' EnumConstant 0x5592f9764af0 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767530 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767d88 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767510 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x5592f97674f0 <col:20> 'Handler::Flags' EnumConstant 0x5592f9764b80 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97675c0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767da0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97675a0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x5592f9767580 <col:17> 'Handler::Flags' EnumConstant 0x5592f9764c10 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767650 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767db8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767630 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x5592f9767610 <col:15> 'Handler::Flags' EnumConstant 0x5592f9764ca0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97676e0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767dd0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97676c0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5592f97676a0 <col:11> 'Handler::Flags' EnumConstant 0x5592f9764d30 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767770 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767de8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767750 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5592f9767730 <col:16> 'Handler::Flags' EnumConstant 0x5592f9764dc0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767800 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e00 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97677e0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5592f97677c0 <col:13> 'Handler::Flags' EnumConstant 0x5592f9764e50 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767890 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e18 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767870 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5592f9767850 <col:15> 'Handler::Flags' EnumConstant 0x5592f9764ee0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767920 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e30 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767900 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x5592f97678e0 <col:20> 'Handler::Flags' EnumConstant 0x5592f9764fb0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97679b0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e48 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767990 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x5592f9767970 <col:27> 'Handler::Flags' EnumConstant 0x5592f9765080 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767a40 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e60 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767a20 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5592f9767a00 <col:22> 'Handler::Flags' EnumConstant 0x5592f9765110 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767ad0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e78 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767ab0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x5592f9767a90 <col:18> 'Handler::Flags' EnumConstant 0x5592f97651e0 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767b60 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767e90 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767b40 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x5592f9767b20 <col:25> 'Handler::Flags' EnumConstant 0x5592f9765270 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9767bf0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5592f9767ea8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767bd0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x5592f9767bb0 <col:26> 'Handler::Flags' EnumConstant 0x5592f9765300 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x5592f9767c90 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x5592f9767ec0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9767c70 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x5592f9767c40 <col:20> 'Handler::Flags' EnumConstant 0x5592f9765490 'f_special' 'Handler::Flags'
|-EnumDecl 0x5592f9767ed8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x5592f9767fe0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f9768540 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9767fc0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5592f9767fa0 <col:12> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9768070 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f9768558 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768050 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5592f9768030 <col:13> 'Handler::Flags' EnumConstant 0x5592f9764820 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9768100 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f9768570 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97680e0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5592f97680c0 <col:15> 'Handler::Flags' EnumConstant 0x5592f97648b0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9768190 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f9768588 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768170 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5592f9768150 <col:8> 'Handler::Flags' EnumConstant 0x5592f9764a60 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9768220 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f97685a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768200 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5592f97681e0 <col:9> 'Handler::Flags' EnumConstant 0x5592f9764d30 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97682b0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f97685b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768290 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5592f9768270 <col:14> 'Handler::Flags' EnumConstant 0x5592f9764dc0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9768340 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f97685d0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768320 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5592f9768300 <col:11> 'Handler::Flags' EnumConstant 0x5592f9764e50 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f97683d0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f97685e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97683b0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5592f9768390 <col:13> 'Handler::Flags' EnumConstant 0x5592f9764ee0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5592f9768460 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5592f9768600 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768440 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5592f9768420 <col:20> 'Handler::Flags' EnumConstant 0x5592f9765110 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x5592f97684f0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x5592f9768618 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f97684d0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x5592f97684b0 <col:16> 'Handler::Flags' EnumConstant 0x5592f97651e0 'f_user0' 'Handler::Flags'
|-EnumDecl 0x5592f9768630 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x5592f97686f0 <col:25> "" ""
| |-EnumConstantDecl 0x5592f97687a0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x5592f9768880 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9768780 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5592f9768760 <col:14> 'Handler::Flags' EnumConstant 0x5592f9764940 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x5592f9768830 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x5592f9768898 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9768810 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x5592f97687f0 <col:17> 'Handler::Flags' EnumConstant 0x5592f97649d0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5592f9768a18 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x5592f97688c0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x5592f9768940 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x5592f976c888 <col:70, line:284:5>
|   |-ParenExpr 0x5592f976c6a8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x5592f976c678 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x5592f976c3a8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f976c378 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x5592f976c320 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x5592f976c300 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x5592f976c2d0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x5592f976c1f0 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5592f9769210
|   |   |   |   |   `-CXXThisExpr 0x5592f976c1e0 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x5592f976c2e8 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x5592f976c2b0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x5592f976c290 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x5592f976c260 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x5592f976c220 <col:34> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x5592f976c278 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x5592f976c240 <col:43> 'Handler::Flags' EnumConstant 0x5592f9765270 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x5592f976c360 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x5592f976c340 <col:69> 'Handler::Flags' EnumConstant 0x5592f9764790 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x5592f976c408 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f976c3e8 <col:85> 'int' 0
|   |   `-CallExpr 0x5592f976c5d8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x5592f976c5c0 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f976c5a0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f976c618 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f976c478 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x5592f976c630 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f976c4c8 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x5592f976c648 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f976c500 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x5592f976c660 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f976c588 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f976c570 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f976c520 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x5592f976c878 <line:283:2, col:38>
|     `-ExprWithCleanups 0x5592f976c860 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x5592f976c830 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5592f976c818 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5592f976c7f8 <col:9, col:38> 'String' (CXXTemporary 0x5592f976c7f8)
|             `-CallExpr 0x5592f976c790 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x5592f976c778 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x5592f976c708 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x5592f9768d20
|               |   `-MemberExpr 0x5592f976c6d8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x5592f9768de8
|               |     `-CXXThisExpr 0x5592f976c6c8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5592f976c7c0 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5592f976c738 <col:22> 'Element *' lvalue ParmVar 0x5592f97688c0 'e' 'Element *'
|               `-ImplicitCastExpr 0x5592f976c7d8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f976c758 <col:25> 'void *' lvalue ParmVar 0x5592f9768940 'new_user_data' 'void *'
|-AccessSpecDecl 0x5592f9768ac8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x5592f9768b00 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x5592f9768b50 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5592f9768ca0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5592f9768d20 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x5592f9769b18 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5592f9769b18
| | `-ParmVarDecl 0x5592f9769c28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x5592f9769cc8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5592f9769cc8
| | `-ParmVarDecl 0x5592f9769dd8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x5592f9769e48 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f9769e48
| |-CXXMethodDecl 0x5592f976a718 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5592f976a718
| | `-ParmVarDecl 0x5592f976a828 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x5592f976a898 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5592f976a898
| | `-ParmVarDecl 0x5592f976a9a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x5592f9722388 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5592f9722460 <col:5>
|-FieldDecl 0x5592f9768de8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x5592f9768e50 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5592f9768f78 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5592f9769000 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x5592f9769f78 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5592f9769f78
| | `-ParmVarDecl 0x5592f976a088 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x5592f976a128 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5592f976a128
| | `-ParmVarDecl 0x5592f976a238 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x5592f976a2a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f976a2a8
| |-CXXMethodDecl 0x5592f976aa48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5592f976aa48
| | `-ParmVarDecl 0x5592f976ab58 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x5592f976abc8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5592f976abc8
| | `-ParmVarDecl 0x5592f976acd8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x5592f97224c0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5592f97225a0 <col:5>
|-FieldDecl 0x5592f97690c8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x5592f9769148 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x5592f97691b0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x5592f9769210 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f9769278 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x5592f97692e0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x5592f9769340 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x5592f9769460 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x5592f97693b8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x5592f976b090 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592f976b078 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592f976b060 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592f976b040 <col:30, col:37> 'String' (CXXTemporary 0x5592f976b040)
|           `-CXXTemporaryObjectExpr 0x5592f976b008 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x5592f9769608 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x5592f9769548 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x5592f9769788 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x5592f97696c0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x5592f9769948 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x5592f9769988 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x5592f9769988
| `-ParmVarDecl 0x5592f9769a68 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x5592f976a3b8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x5592f976a3b8
| `-ParmVarDecl 0x5592f976a4c8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x5592f976a568 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x5592f976a568
| `-ParmVarDecl 0x5592f976a678 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x5592f976ad48 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x5592f976ad48
| `-ParmVarDecl 0x5592f976ae58 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x5592f976aee0 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x5592f976aee0

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f98aa158 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x5592f98aa368 prev 0x5592f98aa158 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f98ab380 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5592f98ab330 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x5592f98ab310 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x5592f98ab1c0 'type'
|     `-SubstTemplateTypeParmType 0x5592f97ed8d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f97ed420 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5592f97ed338 'sized_array_memory'
|-FieldDecl 0x5592f98ab480 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5592f98ab4d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f98ab508 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-PointerType 0x5592f9209ce0 'void *'
|     `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ab598 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x5592f98ab560 'void *&'
|   `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f9209ce0 'void *'
|       `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ab658 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x5592f98ab620 'void *const &'
|   `-QualType 0x5592f98aa401 'void *const' const
|     `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9209ce0 'void *'
|         `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ab6e8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x5592f98ab6b0 'void **'
|   `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f9209ce0 'void *'
|       `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ab778 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x5592f98ab740 'void *const *'
|   `-QualType 0x5592f98aa401 'void *const' const
|     `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9209ce0 'void *'
|         `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ac360 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x5592f98ac310 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x5592f98ac2f0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x5592f98ac280 'type'
|     `-SubstTemplateTypeParmType 0x5592f98ac040 'void *' sugar
|       |-TemplateTypeParmType 0x5592f94dc6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94dc680 'T'
|       `-PointerType 0x5592f9209ce0 'void *'
|         `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ac3c8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x5592f98ab620 'void *const &'
|   `-QualType 0x5592f98aa401 'void *const' const
|     `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9209ce0 'void *'
|         `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ac420 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f98ac488 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x5592f98ab6b0 'void **'
|   `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f9209ce0 'void *'
|       `-BuiltinType 0x5592f92094e0 'void'
|-TypedefDecl 0x5592f98ac4f0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x5592f98ab740 'void *const *'
|   `-QualType 0x5592f98aa401 'void *const' const
|     `-SubstTemplateTypeParmType 0x5592f98aa400 'void *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f9209ce0 'void *'
|         `-BuiltinType 0x5592f92094e0 'void'
|-EnumDecl 0x5592f98ac548 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f98ac640 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f98ac620 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f98ac6c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f98ac918 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98ac780 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98ac820 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x5592f98acbd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x5592f98acac0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x5592f98aee88 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x5592f98aed70 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x5592f98af1d0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x5592f98af0b0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x5592f98af4e0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x5592f98af3c0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x5592f98af7d0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98af618 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98af690 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5592f98af928 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x5592f98afa08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98afa60 <col:30> Inherited
|-CXXMethodDecl 0x5592f98afaa8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x5592f98afb58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98afbb0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98afc78 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5592f98afd28 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98afd80 <col:30> Inherited
|-CXXMethodDecl 0x5592f98afdc8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5592f98afe78 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98afed0 <col:30> Inherited
|-CXXMethodDecl 0x5592f98aff18 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5592f98affc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98b0020 <col:30> Inherited
|-CXXMethodDecl 0x5592f98b0068 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x5592f98b0118 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98b0170 <col:30> Inherited
|-CXXMethodDecl 0x5592f98b0198 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f98b0248 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f98b02f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f98b04b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98b03a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98b0420 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5592f98b0608 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98b0578 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98b07b8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x5592f98b06c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f98b0870 <col:20>
| `-OptimizeNoneAttr 0x5592f98b08c8 <col:30>
|-CXXMethodDecl 0x5592f98b09e8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f98b08f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f98b0aa0 <col:20>
| `-OptimizeNoneAttr 0x5592f98b0af8 <col:30>
|-CXXMethodDecl 0x5592f98b0bb0 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98b0b20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98b0cf8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98b0c68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98b0e28 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x5592f98b0f58 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x5592f98b1028 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x5592f98b10f8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x5592f98b1238 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98b11a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98b1380 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98b12f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f98b14c8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f98b1438 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98b1580 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f98b1680 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f98b15f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98b1738 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f98b17f8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x5592f98b18f8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x5592f98b1a78 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f98b19b8 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x5592f98b2238 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f98b1b30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x5592f98b2198 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x5592f98b2098 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x5592f98b2318 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f98b2468 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f98b23d8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5592f98b2520 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f98b2768 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98b25e0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5592f98b2658 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x5592f98b2928 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x5592f98b2838 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x5592f98b2b78 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x5592f98b29f0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5592f98b2a68 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x5592f98b2c38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f98b2e98 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x5592f98b2da0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x5592f98b2f68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f98b2f68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f98b3160 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5592f98b3278 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x5592f98b3308 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x5592f98b3410 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x5592f98b3460 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f98b33f0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x5592f98b33d0 <col:27> 'int' 4096
|-FieldDecl 0x5592f98b3488 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x5592f98b34f0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x5592f98b36e8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x5592f98b3778 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x5592f98b3938 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x5592f98b37d8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x5592f98b3850 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x5592f98b3488 'name' 'String'
| | `-CXXConstructExpr 0x5592f98be4e8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x5592f98be4a8 <col:20> 'const String' lvalue ParmVar 0x5592f98b37d8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x5592f98b34f0 'nsig' 'int'
| | `-IntegerLiteral 0x5592f98be540 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x5592f98b36e8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x5592f98be628 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5592f98b3778 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x5592f98be5e8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x5592f98be5a8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x5592f98b3850 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x5592f98be8b8 <col:42, line:289:9>
|   `-CallExpr 0x5592f98be868 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x5592f98be850 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5592f98be830 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x5592f946bf88 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x5592f98be8a0 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x5592f98be778 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x5592f98be758 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x5592f98be740 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592f98be6f0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5592f98b36e8
|     |     |   `-CXXThisExpr 0x5592f98be6e0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x5592f98be720 <col:25> 'int' 0
|     |-IntegerLiteral 0x5592f98be790 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x5592f98be810 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x5592f98be7f0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x5592f98be7c0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5592f98b36e8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5592f98be7b0 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x5592f98b3a18 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5592f98b3a18
| `-ParmVarDecl 0x5592f98b3b28 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x5592f98b3bc8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5592f98b3bc8
| `-ParmVarDecl 0x5592f98b3cd8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x5592f98b3d78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5592f98b3d78
| `-ParmVarDecl 0x5592f98b3e88 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x5592f98b3ef8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5592f98b3ef8
| `-ParmVarDecl 0x5592f98b4008 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x5592f98b4090 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5592f98b4090

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9856608 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f9856728 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x5592f98567b8 <col:21, col:27> col:21 public
|-EnumDecl 0x5592f98567e0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x5592f98568f8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x5592f98568d8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5592f98568c0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592f98568a0 <col:32> 'int' 1
| `-EnumConstantDecl 0x5592f98569a0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x5592f9856980 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5592f9856968 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5592f9856948 <col:53> 'int' 1000
|-CXXConstructorDecl 0x5592f9856a50 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x5592f9856f88 <col:19, col:21>
|-CXXDestructorDecl 0x5592f9856b40 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x5592f9856f98 <col:28, col:30>
|-CXXMethodDecl 0x5592f9856d00 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x5592f9856c30 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x5592f9856e08 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x5592f9856e08
  `-ParmVarDecl 0x5592f9856f18 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9857540 prev 0x5592f982faa0 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5592f9857638 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x5592f98576c8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x5592f9857738 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5592f98577f8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x5592f98578b8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x5592f9857978 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x5592f9857a38 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x5592f9857ad8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x5592f9857c38 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x5592f9857c18 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x5592f9857bf8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x5592f9857bc0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x5592f9857ba0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x5592f9857bd8 <col:42> 'int' 1
|-CXXMethodDecl 0x5592f9857cd8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x5592f9857e48 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5592f9857d88 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x5592f9857f90 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5592f9857f00 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x5592f9858058 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x5592f9858380 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x5592f9858448 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x5592f98585c8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x5592f9858500 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5592f9858690 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x5592f9858898 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x5592f9858740 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x5592f98587c0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x5592f9858a28 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x5592f9858960 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x5592f9858b78 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x5592f9858ae8 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x5592f9858cc8 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x5592f9858c38 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x5592f9858e18 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x5592f9858d88 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x5592f9859028 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x5592f9858ed8 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x5592f9858f50 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x5592f9859238 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5592f98590e8 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x5592f9859160 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5592f98bb130 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5592f98bb110 <col:60> 'int' 0
|-CXXMethodDecl 0x5592f98594c8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x5592f98592f8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5592f9859370 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x5592f98593e8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5592f98bb168 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5592f98bb148 <col:76> 'int' 0
|-CXXMethodDecl 0x5592f9859768 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5592f9859590 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5592f9859608 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x5592f9859680 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x5592f98bb1a0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x5592f98bb180 <col:84> 'int' 0
|-CXXMethodDecl 0x5592f9859ac0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5592f9859830 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x5592f98598a8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x5592f9859928 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x5592f98599c8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5592f9859d70 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5592f9859b90 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x5592f9859c10 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x5592f9859c88 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5592f9859fd8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5592f9859e38 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x5592f9859eb8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x5592f9859f30 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5592f985a490 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5592f985a0a0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x5592f985a120 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x5592f985a1c8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x5592f985a340 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5592f985a550 <col:115> "" ""
|-CXXMethodDecl 0x5592f985a910 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5592f985a5d0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x5592f985a650 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x5592f985a6c8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x5592f985a810 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5592f985a9d0 <col:113> "" ""
|-CXXMethodDecl 0x5592f985ab20 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x5592f985aa58 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x5592f985acf0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x5592f985abe0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x5592f985ac58 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x5592f985aef8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x5592f985adb0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x5592f985ae28 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x5592f985b2f8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5592f985afb8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5592f985b030 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5592f985b0a8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592f985b128 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x5592f985b1a0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f98bb1d8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f98bb1b8 <col:137> 'int' 0
|-CXXMethodDecl 0x5592f985d470 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5592f985b3d0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x5592f985b448 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x5592f985b4c0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f985b540 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x5592f985b5b8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f98bb210 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f98bb1f0 <col:139> 'int' 0
|-CXXMethodDecl 0x5592f985d928 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x5592f985d548 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x5592f985d5c0 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x5592f985d638 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f985d6b0 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f985d730 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x5592f98bb248 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f98bb228 <col:133> 'int' 0
| `-ParmVarDecl 0x5592f985d7b0 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x5592f98bb280 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x5592f98bb260 <col:160> 'int' 0
|-CXXMethodDecl 0x5592f985dcc0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5592f985da08 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5592f985da80 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5592f985daf8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f985db70 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f98bb2b8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f98bb298 <col:116> 'int' 0
|-EnumDecl 0x5592f985dd80 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x5592f985de80 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x5592f985ded0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f985de60 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x5592f985de40 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x5592f985e050 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x5592f985def8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x5592f985df70 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x5592f985e268 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x5592f985e110 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x5592f985e190 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x5592f985e6c8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x5592f985e328 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x5592f985e5b0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x5592f985e850 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x5592f985e788 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x5592f985ea00 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x5592f985e908 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x5592f985ec10 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x5592f985eab8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x5592f985eb38 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x5592f985ed98 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x5592f985ecd0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x5592f985eeb8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x5592f985efa8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x5592f985f118 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x5592f985f058 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x5592f985f2a0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x5592f985f1d0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x5592f985f4a8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x5592f985f358 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x5592f985f3d8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x5592f985f5d8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x5592f985f6c8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x5592f985f788 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x5592f985f988 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5592f985f838 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x5592f985f8b0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5592f98bb368 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592f98bb350 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592f98bb338 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592f98bb318 <col:58, col:65> 'String' (CXXTemporary 0x5592f98bb318)
|           `-CXXTemporaryObjectExpr 0x5592f98bb2e0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x5592f985fb58 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5592f985fa48 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5592f985fac0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5592f98bb418 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592f98bb400 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592f98bb3e8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592f98bb3c8 <col:71, col:78> 'String' (CXXTemporary 0x5592f98bb3c8)
|           `-CXXTemporaryObjectExpr 0x5592f98bb390 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5592f985fd28 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5592f985fc18 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5592f985fc90 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5592f98bb4c8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592f98bb4b0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592f98bb498 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592f98bb478 <col:71, col:78> 'String' (CXXTemporary 0x5592f98bb478)
|           `-CXXTemporaryObjectExpr 0x5592f98bb440 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5592f985fef8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5592f985fde8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x5592f985fe60 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x5592f98bb578 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592f98bb560 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592f98bb548 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592f98bb528 <col:70, col:77> 'String' (CXXTemporary 0x5592f98bb528)
|           `-CXXTemporaryObjectExpr 0x5592f98bb4f0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x5592f9860078 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x5592f985ffb8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x5592f9860298 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x5592f9860130 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x5592f98601a8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x5592f9860398 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x5592f9860398
|-CXXMethodDecl 0x5592f98604a0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5592f9860560 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5592f9860620 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x5592f98606e0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x5592f98608d8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x5592f9860790 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x5592f9860808 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x5592f9860c90 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x5592f9860998 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x5592f9860a10 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x5592f9860a88 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x5592f9860b00 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x5592f9860b80 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x5592f9860ff0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x5592f9860d70 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x5592f9860df0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x5592f9860e70 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x5592f9860ef0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x5592f98610d0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x5592f9861210 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x5592f9861180 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x5592f9861360 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5592f98612c8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9861568 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x5592f9861418 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x5592f9861490 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f98616e8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x5592f9861628 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9861830 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x5592f98617a0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x5592f9861a70 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x5592f98618f0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5592f9861998 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x5592f9861bf8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x5592f9861b30 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x5592f9861ca0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f9861db8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x5592f9861e60 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x5592f9861ec8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x5592f9861f80 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x5592f98bb5a0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x5592f9862158 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x5592f9862040 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x5592f98620c0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x5592f9861e60 'idx' 'int'
| | | `-ImplicitCastExpr 0x5592f98bb5f0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x5592f98bb5b0 <col:19> 'int' lvalue ParmVar 0x5592f9862040 'i' 'int'
| | |-CXXCtorInitializer Field 0x5592f9861ec8 'port' 'int'
| | | `-ImplicitCastExpr 0x5592f98bb670 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x5592f98bb630 <col:28> 'int' lvalue ParmVar 0x5592f98620c0 'p' 'int'
| | `-CompoundStmt 0x5592f98bb6c0 <col:31, line:153:9>
| |-CXXMethodDecl 0x5592f9862338 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5592f9862248 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5592f98bb8c0 <col:46, line:157:9>
| |   `-ReturnStmt 0x5592f98bb8b0 <line:156:13, col:46>
| |     `-BinaryOperator 0x5592f98bb890 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x5592f98bb790 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x5592f98bb760 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5592f98bb6e0 <col:20> 'const int' lvalue ->idx 0x5592f9861e60
| |       | |   `-CXXThisExpr 0x5592f98bb6d0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5592f98bb778 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5592f98bb730 <col:27, col:29> 'const int' lvalue .idx 0x5592f9861e60
| |       |     `-DeclRefExpr 0x5592f98bb710 <col:27> 'const Router::Port' lvalue ParmVar 0x5592f9862248 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5592f98bb870 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x5592f98bb840 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x5592f98bb7c0 <col:36> 'const int' lvalue ->port 0x5592f9861ec8
| |         |   `-CXXThisExpr 0x5592f98bb7b0 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5592f98bb858 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x5592f98bb810 <col:44, col:46> 'const int' lvalue .port 0x5592f9861ec8
| |             `-DeclRefExpr 0x5592f98bb7f0 <col:44> 'const Router::Port' lvalue ParmVar 0x5592f9862248 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5592f9862480 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5592f98623f0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5592f98bbac8 <col:46, line:160:9>
| |   `-ReturnStmt 0x5592f98bbab8 <line:159:13, col:46>
| |     `-BinaryOperator 0x5592f98bba98 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x5592f98bb998 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x5592f98bb968 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5592f98bb8e8 <col:20> 'const int' lvalue ->idx 0x5592f9861e60
| |       | |   `-CXXThisExpr 0x5592f98bb8d8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5592f98bb980 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5592f98bb938 <col:27, col:29> 'const int' lvalue .idx 0x5592f9861e60
| |       |     `-DeclRefExpr 0x5592f98bb918 <col:27> 'const Router::Port' lvalue ParmVar 0x5592f98623f0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5592f98bba78 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x5592f98bba48 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x5592f98bb9c8 <col:36> 'const int' lvalue ->port 0x5592f9861ec8
| |         |   `-CXXThisExpr 0x5592f98bb9b8 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5592f98bba60 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x5592f98bba18 <col:44, col:46> 'const int' lvalue .port 0x5592f9861ec8
| |             `-DeclRefExpr 0x5592f98bb9f8 <col:44> 'const Router::Port' lvalue ParmVar 0x5592f98623f0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5592f98625c8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5592f9862538 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x5592f98bbdf0 <col:45, line:163:9>
| |   `-ReturnStmt 0x5592f98bbde0 <line:162:13, col:65>
| |     `-BinaryOperator 0x5592f98bbdc0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x5592f98bbba0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5592f98bbb70 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5592f98bbaf0 <col:20> 'const int' lvalue ->idx 0x5592f9861e60
| |       | |   `-CXXThisExpr 0x5592f98bbae0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5592f98bbb88 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5592f98bbb40 <col:26, col:28> 'const int' lvalue .idx 0x5592f9861e60
| |       |     `-DeclRefExpr 0x5592f98bbb20 <col:26> 'const Router::Port' lvalue ParmVar 0x5592f9862538 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5592f98bbda0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x5592f98bbd80 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x5592f98bbc80 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5592f98bbc50 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5592f98bbbd0 <col:36> 'const int' lvalue ->idx 0x5592f9861e60
| |           | |   `-CXXThisExpr 0x5592f98bbbc0 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5592f98bbc68 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5592f98bbc20 <col:43, col:45> 'const int' lvalue .idx 0x5592f9861e60
| |           |     `-DeclRefExpr 0x5592f98bbc00 <col:43> 'const Router::Port' lvalue ParmVar 0x5592f9862538 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5592f98bbd60 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x5592f98bbd30 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5592f98bbcb0 <col:52> 'const int' lvalue ->port 0x5592f9861ec8
| |             |   `-CXXThisExpr 0x5592f98bbca0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5592f98bbd48 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x5592f98bbd00 <col:59, col:61> 'const int' lvalue .port 0x5592f9861ec8
| |                 `-DeclRefExpr 0x5592f98bbce0 <col:59> 'const Router::Port' lvalue ParmVar 0x5592f9862538 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5592f9862710 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5592f9862680 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x5592f98bc118 <col:46, line:166:9>
| |   `-ReturnStmt 0x5592f98bc108 <line:165:13, col:66>
| |     `-BinaryOperator 0x5592f98bc0e8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x5592f98bbec8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5592f98bbe98 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5592f98bbe18 <col:20> 'const int' lvalue ->idx 0x5592f9861e60
| |       | |   `-CXXThisExpr 0x5592f98bbe08 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5592f98bbeb0 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5592f98bbe68 <col:26, col:28> 'const int' lvalue .idx 0x5592f9861e60
| |       |     `-DeclRefExpr 0x5592f98bbe48 <col:26> 'const Router::Port' lvalue ParmVar 0x5592f9862680 'x' 'const Router::Port &'
| |       `-ParenExpr 0x5592f98bc0c8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x5592f98bc0a8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x5592f98bbfa8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5592f98bbf78 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x5592f98bbef8 <col:36> 'const int' lvalue ->idx 0x5592f9861e60
| |           | |   `-CXXThisExpr 0x5592f98bbee8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5592f98bbf90 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5592f98bbf48 <col:43, col:45> 'const int' lvalue .idx 0x5592f9861e60
| |           |     `-DeclRefExpr 0x5592f98bbf28 <col:43> 'const Router::Port' lvalue ParmVar 0x5592f9862680 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5592f98bc088 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x5592f98bc058 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x5592f98bbfd8 <col:52> 'const int' lvalue ->port 0x5592f9861ec8
| |             |   `-CXXThisExpr 0x5592f98bbfc8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5592f98bc070 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x5592f98bc028 <col:60, col:62> 'const int' lvalue .port 0x5592f9861ec8
| |                 `-DeclRefExpr 0x5592f98bc008 <col:60> 'const Router::Port' lvalue ParmVar 0x5592f9862680 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x5592f98bc130 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x5592f98bc130
| | `-ParmVarDecl 0x5592f98bc248 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x5592f98bc2e8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x5592f98bc2e8
| | `-ParmVarDecl 0x5592f98bc3f8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x5592f98bc490 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5592f98bc760 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x5592f98bc760
| | `-ParmVarDecl 0x5592f98bc868 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x5592f98bc8d8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5592f98bc9e8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x5592f98bcd08 <col:12>
|     |-BinaryOperator 0x5592f98bcba8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x5592f98bcb60 <col:12> 'int' lvalue ->idx 0x5592f9861e60
|     | | `-CXXThisExpr 0x5592f98bcb50 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5592f98bcb90 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x5592f98bcb20 <col:12> 'int' xvalue .idx 0x5592f9861e60
|     |     `-CXXStaticCastExpr 0x5592f98bcaf0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5592f98bcac0 <col:12> 'Router::Port' lvalue ParmVar 0x5592f98bc9e8 '' 'Router::Port &&'
|     |-BinaryOperator 0x5592f98bccb0 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x5592f98bcc68 <col:12> 'int' lvalue ->port 0x5592f9861ec8
|     | | `-CXXThisExpr 0x5592f98bcc58 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x5592f98bcc98 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x5592f98bcc28 <col:12> 'int' xvalue .port 0x5592f9861ec8
|     |     `-CXXStaticCastExpr 0x5592f98bcbf8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x5592f98bcbc8 <col:12> 'Router::Port' lvalue ParmVar 0x5592f98bc9e8 '' 'Router::Port &&'
|     `-ReturnStmt 0x5592f98bccf8 <col:12>
|       `-UnaryOperator 0x5592f98bcce0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5592f98bccd0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x5592f98627d0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f98628e8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x5592f9862ad8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x5592f9862b90 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x5592f9862ad8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x5592f98bc468 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5592f98bc5a0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x5592f9862ec8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x5592f9862c50 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x5592f9862cd0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x5592f9862d50 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x5592f9862dd0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x5592f9862ad8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x5592f98bc5b0 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x5592f98bcfe8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x5592f98bcdd8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x5592f98bcda0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x5592f98bcd88 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x5592f98bca70 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x5592f98bc8d8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x5592f98bc680 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x5592f98bc668 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x5592f98bc618 <col:13> 'Router::Port [2]' lvalue ->p 0x5592f9862ad8
| |   |   | |   `-CXXThisExpr 0x5592f98bc608 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x5592f98bc648 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x5592f98bca58 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x5592f98bc720 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x5592f98bc6f0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x5592f98bc6b0 <col:25> 'int' lvalue ParmVar 0x5592f9862d50 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x5592f98bc708 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x5592f98bc6d0 <col:33> 'int' lvalue ParmVar 0x5592f9862dd0 'to_port' 'int'
| |   `-ExprWithCleanups 0x5592f98bcfd0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x5592f98bcf98 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5592f98bcf80 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x5592f98bcf60 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x5592f98bc8d8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x5592f98bce68 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x5592f98bce50 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x5592f98bce00 <col:13> 'Router::Port [2]' lvalue ->p 0x5592f9862ad8
| |       | |   `-CXXThisExpr 0x5592f98bcdf0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x5592f98bce30 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x5592f98bcf48 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x5592f98bcf08 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x5592f98bced8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x5592f98bce98 <col:25> 'int' lvalue ParmVar 0x5592f9862c50 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x5592f98bcef0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x5592f98bceb8 <col:35> 'int' lvalue ParmVar 0x5592f9862cd0 'from_port' 'int'
| |-CXXMethodDecl 0x5592f9863098 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x5592f9862fa8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x5592f98bd5a8 <col:45, line:182:9>
| |   |-ParenExpr 0x5592f98bd488 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x5592f98bd458 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x5592f98bd128 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x5592f98bd0f8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x5592f98bd060 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x5592f98bd048 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x5592f98bd008 <col:34> 'int' lvalue ParmVar 0x5592f9862fa8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x5592f98bd028 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5592f98bd0d8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5592f98bd0c0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x5592f98bd080 <col:44> 'int' lvalue ParmVar 0x5592f9862fa8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5592f98bd0a0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x5592f98bd188 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x5592f98bd168 <col:59> 'int' 0
| |   |   `-CallExpr 0x5592f98bd3b8 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5592f98bd3a0 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x5592f98bd380 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x5592f98bd3f8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5592f98bd1f8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x5592f98bd410 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5592f98bd220 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x5592f98bd428 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x5592f98bd258 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x5592f98bd440 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x5592f98bd368 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x5592f98bd350 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x5592f98bd2f8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x5592f98bd598 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x5592f98bd578 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5592f98bd548 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5592f98bd4b8 <col:20> 'Router::Port const[2]' lvalue ->p 0x5592f9862ad8
| |       |   `-CXXThisExpr 0x5592f98bd4a8 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x5592f98bd560 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5592f98bd4e8 <col:22> 'int' lvalue ParmVar 0x5592f9862fa8 'i' 'int'
| |-CXXMethodDecl 0x5592f9863248 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x5592f9863158 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x5592f98bdb20 <col:33, line:186:9>
| |   |-ParenExpr 0x5592f98bda40 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x5592f98bda10 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x5592f98bd6e8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x5592f98bd6b8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x5592f98bd620 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x5592f98bd608 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x5592f98bd5c8 <col:34> 'int' lvalue ParmVar 0x5592f9863158 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x5592f98bd5e8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x5592f98bd698 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x5592f98bd680 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x5592f98bd640 <col:44> 'int' lvalue ParmVar 0x5592f9863158 'i' 'int'
| |   |   |     `-IntegerLiteral 0x5592f98bd660 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x5592f98bd748 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x5592f98bd728 <col:59> 'int' 0
| |   |   `-CallExpr 0x5592f98bd970 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x5592f98bd958 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x5592f98bd938 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x5592f98bd9b0 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5592f98bd7b8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x5592f98bd9c8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x5592f98bd7e0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x5592f98bd9e0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x5592f98bd818 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x5592f98bd9f8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x5592f98bd920 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x5592f98bd908 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x5592f98bd8b8 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x5592f98bdb10 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x5592f98bdaf0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x5592f98bdac0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x5592f98bda70 <col:20> 'Router::Port [2]' lvalue ->p 0x5592f9862ad8
| |       |   `-CXXThisExpr 0x5592f98bda60 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x5592f98bdad8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5592f98bdaa0 <col:22> 'int' lvalue ParmVar 0x5592f9863158 'i' 'int'
| |-CXXMethodDecl 0x5592f98633e8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x5592f9863328 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x5592f98bdef8 <col:52, line:190:9>
| |   `-ReturnStmt 0x5592f98bdee8 <line:189:13, col:51>
| |     `-BinaryOperator 0x5592f98bdec8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x5592f98bdce0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x5592f98bdcc8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x5592f98bdc80 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5592f9862338 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x5592f98bdbb8 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x5592f98bdba0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x5592f98bdb50 <col:20> 'Router::Port const[2]' lvalue ->p 0x5592f9862ad8
| |       | | |   `-CXXThisExpr 0x5592f98bdb40 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x5592f98bdb80 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x5592f98bdc60 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x5592f98bdc48 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x5592f98bdbf8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x5592f9862ad8
| |       |   |   `-DeclRefExpr 0x5592f98bdbd8 <col:28> 'const Router::Connection' lvalue ParmVar 0x5592f9863328 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x5592f98bdc28 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x5592f98bde90 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x5592f98bde78 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x5592f98bde58 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5592f9862338 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x5592f98bdd90 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x5592f98bdd78 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x5592f98bdd28 <col:38> 'Router::Port const[2]' lvalue ->p 0x5592f9862ad8
| |         | |   `-CXXThisExpr 0x5592f98bdd18 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x5592f98bdd58 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x5592f98bde38 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x5592f98bde20 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x5592f98bddd0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5592f9862ad8
| |           |   `-DeclRefExpr 0x5592f98bddb0 <col:46> 'const Router::Connection' lvalue ParmVar 0x5592f9863328 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x5592f98bde00 <col:50> 'int' 1
| `-CXXMethodDecl 0x5592f9863530 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x5592f98634a0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x5592f98be490 <col:51, line:193:9>
|     `-ReturnStmt 0x5592f98be480 <line:192:13, col:69>
|       `-BinaryOperator 0x5592f98be460 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x5592f98be088 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x5592f98be070 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x5592f98be050 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5592f98625c8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x5592f98bdf88 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x5592f98bdf70 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x5592f98bdf20 <col:20> 'Router::Port const[2]' lvalue ->p 0x5592f9862ad8
|         | | |   `-CXXThisExpr 0x5592f98bdf10 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x5592f98bdf50 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x5592f98be030 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x5592f98be018 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x5592f98bdfc8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x5592f9862ad8
|         |   |   `-DeclRefExpr 0x5592f98bdfa8 <col:27> 'const Router::Connection' lvalue ParmVar 0x5592f98634a0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x5592f98bdff8 <col:31> 'int' 0
|         `-ParenExpr 0x5592f98be440 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x5592f98be420 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x5592f98be238 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x5592f98be220 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x5592f98be200 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5592f9862338 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x5592f98be138 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x5592f98be120 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x5592f98be0d0 <col:38> 'Router::Port const[2]' lvalue ->p 0x5592f9862ad8
|             | | |   `-CXXThisExpr 0x5592f98be0c0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x5592f98be100 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x5592f98be1e0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x5592f98be1c8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x5592f98be178 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5592f9862ad8
|             |   |   `-DeclRefExpr 0x5592f98be158 <col:46> 'const Router::Connection' lvalue ParmVar 0x5592f98634a0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x5592f98be1a8 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x5592f98be3e8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x5592f98be3d0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5592f98be3b0 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5592f98625c8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x5592f98be2e8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x5592f98be2d0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x5592f98be280 <col:56> 'Router::Port const[2]' lvalue ->p 0x5592f9862ad8
|               | |   `-CXXThisExpr 0x5592f98be270 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x5592f98be2b0 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x5592f98be390 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x5592f98be378 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x5592f98be328 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x5592f9862ad8
|                 |   `-DeclRefExpr 0x5592f98be308 <col:63> 'const Router::Connection' lvalue ParmVar 0x5592f98634a0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x5592f98be358 <col:67> 'int' 1
|-AccessSpecDecl 0x5592f98635f0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x5592f9863618 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x5592f98636d0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x5592f9863790 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5592f98637e0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5592f9863830 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5592f9863880 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x5592f98638d0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x5592f9863920 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x5592f9863a38 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5592f9863a18 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x5592f9863a00 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592f98639e0 <col:25> 'int' 2
| |-EnumConstantDecl 0x5592f9863ae0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5592f9863ac0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x5592f9863aa8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592f9863a88 <col:48> 'int' 1
| |-EnumConstantDecl 0x5592f9863b70 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5592f9863b50 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x5592f9863b30 <col:71> 'int' 0
| |-EnumConstantDecl 0x5592f9863c00 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5592f9863be0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x5592f9863bc0 <col:30> 'int' 1
| `-EnumConstantDecl 0x5592f9863c90 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x5592f9863c70 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x5592f9863c50 <col:50> 'int' 2
|-FieldDecl 0x5592f9863cf0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x5592f9863d50 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x5592f9863db8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x5592f9863e58 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x5592f9863e38 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x5592f9863e08 <col:30> 'int' 1
|-FieldDecl 0x5592f9863ef8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x5592f9863ed8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x5592f9863ea8 <col:33> 'int' 1
|-FieldDecl 0x5592f9863f98 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x5592f9863f78 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x5592f9863f48 <col:32> 'int' 1
|-FieldDecl 0x5592f9864000 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x5592f9864060 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x5592f9870960 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x5592f987d5c0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5592f987d6c0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5592f9889fb0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x5592f9891f10 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x5592f9891f60 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5592f9892078 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x5592f9892118 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x5592f9892178 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x5592f9892210 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5592f9892210
| | `-ParmVarDecl 0x5592f9892328 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x5592f98923c8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5592f98923c8
| | `-ParmVarDecl 0x5592f98924d8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x5592f9892578 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5592f9892578
| | `-ParmVarDecl 0x5592f9892688 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x5592f98926f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5592f98926f8
| | `-ParmVarDecl 0x5592f9892808 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x5592f9892890 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x5592f9892890
|-FieldDecl 0x5592f989f580 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x5592f989f5e0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f989f6f0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x5592f989fa48 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x5592f989fb50 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5592f98a96d0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x5592f98a97e0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x5592f98a98e0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5592f98a99f0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5592f98a9b00 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5592f98a9c10 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5592f98a9d20 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x5592f98a9d70 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x5592f98a9e70 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x5592f98a9ec0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f98a9e50 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x5592f98a9e30 <col:29> 'int' 256
|-FieldDecl 0x5592f98a9f20 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x5592f98a9f88 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x5592f98a9ff0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x5592f98aa0f0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5592f98b3050 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x5592f98b30b0 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x5592f98b3110 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x5592f98b3160 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5592f98b3278 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x5592f98b3308 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x5592f98b3410 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x5592f98b3460 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x5592f98b33f0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x5592f98b33d0 <col:27> 'int' 4096
| |-FieldDecl 0x5592f98b3488 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x5592f98b34f0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x5592f98b36e8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x5592f98b3778 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x5592f98b3938 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x5592f98b37d8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x5592f98b3850 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x5592f98b3488 'name' 'String'
| | | `-CXXConstructExpr 0x5592f98be4e8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x5592f98be4a8 <col:20> 'const String' lvalue ParmVar 0x5592f98b37d8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x5592f98b34f0 'nsig' 'int'
| | | `-IntegerLiteral 0x5592f98be540 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x5592f98b36e8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x5592f98be628 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x5592f98b3778 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x5592f98be5e8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x5592f98be5a8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x5592f98b3850 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x5592f98be8b8 <col:42, line:289:9>
| |   `-CallExpr 0x5592f98be868 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x5592f98be850 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x5592f98be830 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x5592f946bf88 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x5592f98be8a0 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x5592f98be778 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x5592f98be758 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x5592f98be740 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x5592f98be6f0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x5592f98b36e8
| |     |     |   `-CXXThisExpr 0x5592f98be6e0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x5592f98be720 <col:25> 'int' 0
| |     |-IntegerLiteral 0x5592f98be790 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x5592f98be810 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x5592f98be7f0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x5592f98be7c0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x5592f98b36e8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x5592f98be7b0 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x5592f98b3a18 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5592f98b3a18
| | `-ParmVarDecl 0x5592f98b3b28 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x5592f98b3bc8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5592f98b3bc8
| | `-ParmVarDecl 0x5592f98b3cd8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x5592f98b3d78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x5592f98b3d78
| | `-ParmVarDecl 0x5592f98b3e88 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x5592f98b3ef8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x5592f98b3ef8
| | `-ParmVarDecl 0x5592f98b4008 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x5592f98b4090 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5592f98b4090
|-FieldDecl 0x5592f98b4180 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x5592f98b41e0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x5592f98b4240 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x5592f98b42a0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x5592f98b4300 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x5592f98b4410 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x5592f98b4510 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5592f98b4570 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x5592f98b46b8 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x5592f98b45f8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x5592f98b4868 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x5592f98b4778 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x5592f98b49b0 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x5592f98b4920 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x5592f98b4d58 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x5592f98b4a68 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x5592f98b4ae0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x5592f98b4b60 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x5592f98b4bd8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x5592f98b4c50 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f98bb590 <col:57> 'bool' false
|-CXXMethodDecl 0x5592f98b4ec8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5592f98b4e30 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x5592f98b5018 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5592f98b4f80 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x5592f98b5168 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5592f98b50d0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x5592f98b52c0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x5592f98b5228 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x5592f98b55e0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x5592f98b5378 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x5592f98b53f0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x5592f98b5470 <col:56> col:59 'int'
| `-ParmVarDecl 0x5592f98b54e8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5592f98b5748 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5592f98b56b0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x5592f98b5810 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x5592f98b58d0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x5592f98b5ad0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x5592f98b5980 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x5592f98b59f8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x5592f98b5ba0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x5592f98b5ce8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x5592f98b5c50 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x5592f98beaf0 <col:42, line:326:5>
|   `-ReturnStmt 0x5592f98beae0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x5592f98beac8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x5592f98beaa8 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x5592f98bea78 <col:16, col:45> '<bound member function type>' .back 0x5592f988ee68
|           `-ArraySubscriptExpr 0x5592f98be9f8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x5592f98be9c8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f98be8e0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x5592f989fa48
|             |   `-CXXThisExpr 0x5592f98be8d0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x5592f98be9e0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x5592f98be910 <col:38> 'bool' lvalue ParmVar 0x5592f98b5c50 'isout' 'bool'
|-CXXMethodDecl 0x5592f98b5eb8 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x5592f98b5da0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x5592f98b5e18 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x5592f98b6010 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x5592f98b5f78 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x5592f98b62b8 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x5592f98b60c8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x5592f98b6140 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x5592f98b61c0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x5592f98b6490 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x5592f98b6380 <col:30> col:34 'bool'
| `-ParmVarDecl 0x5592f98b63f8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x5592f98b6618 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x5592f98b6558 <col:30> col:33 'int'
|-CXXMethodDecl 0x5592f98b68b0 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x5592f98b66d8 <col:23> col:26 'int'
| |-ParmVarDecl 0x5592f98b6750 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x5592f98b67c8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x5592f98b6ac8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x5592f98b6978 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x5592f98b69f0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x5592f98ba4d0 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x5592f98b6b90 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x5592f98b6c08 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x5592f98ba658 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x5592f98ba590 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x5592f98ba858 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x5592f98ba710 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x5592f98ba788 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x5592f98baa30 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592f98ba918 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x5592f98ba998 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x5592f98bad10 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f98baaf0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x5592f98bab68 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x5592f98babe8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x5592f98bac60 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x5592f98badf0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5592f98bae50 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x5592f98bb0d0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x5592f98bafd0 parent 0x5592f976d5f0 prev 0x5592f977d218 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x5592f98baeb0 <col:36> col:39 'int'
    `-ParmVarDecl 0x5592f98baf30 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f976d5f0 prev 0x5592f976d370 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f976d6e8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5592f976d778 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5592f976d7d8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5592f976d8c8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5592f976d9c8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5592f976db98 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5592f976da48 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5592f976dac0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5592f976dd28 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5592f976dc60 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5592f976ddd0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5592f976df08 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5592f976de40 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5592f976e0a8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5592f976dfe8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5592f976e248 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5592f976e188 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5592f976e2f0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5592f976e3f0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5592f976e4d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f976e3d0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5592f976e3b0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5592f976e480 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5592f976e4e8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f976e460 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5592f976e440 <col:44> 'int' 2
|-CXXMethodDecl 0x5592f976e630 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5592f976e518 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5592f976e598 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5592f976e788 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5592f976e6f8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5592f976e9c8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5592f976e848 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5592f976e8c0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5592f976ea78 <col:20>
| `-OptimizeNoneAttr 0x5592f976ead0 <col:30>
|-CXXMethodDecl 0x5592f976ebd8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5592f976eb10 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5592f976ec80 <col:20>
| `-OptimizeNoneAttr 0x5592f976ecd8 <col:30>
|-CXXMethodDecl 0x5592f976ed28 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5592f976edf0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5592f976ef08 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5592f976ef90 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5592f976f018 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5592f976f0a0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5592f976f128 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5592f976f1b8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5592f976f278 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5592f976f300 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5592f976f388 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5592f976f410 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5592f976f498 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5592f976f520 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5592f976f5b0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5592f976f670 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5592f976f700 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5592f976f850 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5592f976f7b8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5592f976f9e0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5592f976f910 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5592f976fc90 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5592f976fa98 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5592f976fb18 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5592f976fb98 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5592f976fd48 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5592f976fe50 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592f97700e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f976fe30 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f976fe10 <col:33> 'int' 0
| |-EnumConstantDecl 0x5592f976fee0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592f97700f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f976fec0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5592f976fea0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5592f976ff70 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592f9770110 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f976ff50 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5592f976ff30 <col:38> 'int' 90
| |-EnumConstantDecl 0x5592f9770000 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5592f9770128 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f976ffe0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5592f976ffc0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5592f9770090 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5592f9770140 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9770070 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5592f9770050 <col:32> 'int' 2000
|-CXXMethodDecl 0x5592f9770180 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5592f97705c0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592f9770430 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5592f97704a8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9770690 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5592f9770810 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5592f9770740 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9770a18 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592f97708c8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5592f9770940 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9770b18 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5592f9770bb8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5592f9770c80 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592f9770d10 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5592f9770f40 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9770cf0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5592f9770cd0 <col:36> 'int' EnumConstant 0x5592f9770c80 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592f9770d60 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592f9770db0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592f9770e00 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592f9770e50 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5592f9770ea0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5592f9770ef0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5592f9771028 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5592f9770f68 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5592f97710f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5592f97711b0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5592f9771270 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5592f9771330 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5592f9771448 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5592f9771510 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x5592f9771690 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5592f97715c0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5592f97717b8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5592f97719b8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5592f9771868 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5592f97718e8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5592f977f308 <col:54, line:127:5>
|   |-ParenExpr 0x5592f977f1b8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5592f977f188 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5592f977ee78 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5592f977ee50 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5592f977ee38 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5592f977ee20 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5592f977edf0 <col:31> 'Router *' lvalue ->_router 0x5592f977ccd0
|   |   |         `-CXXThisExpr 0x5592f977ede0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5592f977eed8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f977eeb8 <col:48> 'int' 0
|   |   `-CallExpr 0x5592f977f0e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5592f977f0d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f977f0b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f977f128 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f977ef48 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5592f977f140 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f977ef68 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5592f977f158 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f977efa0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5592f977f170 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f977f098 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f977f080 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f977f038 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5592f977f250 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5592f977f1e8 <col:9> 'Router *' lvalue ->_router 0x5592f977ccd0
|   | | `-CXXThisExpr 0x5592f977f1d8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5592f977f238 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f977f218 <col:19> 'Router *' lvalue ParmVar 0x5592f9771868 'r' 'Router *'
|   `-BinaryOperator 0x5592f977f2e8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5592f977f280 <col:9> 'int' lvalue ->_eindex 0x5592f977cd38
|     | `-CXXThisExpr 0x5592f977f270 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5592f977f2d0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5592f977f2b0 <col:19> 'int' lvalue ParmVar 0x5592f97718e8 'eindex' 'int'
|-CXXMethodDecl 0x5592f9771b40 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5592f9771a78 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5592f9771c10 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5592f9771cd8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5592f9771d78 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5592f9771fc8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5592f9771e40 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5592f9771ec0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5592f9772078 <col:20>
| `-OptimizeNoneAttr 0x5592f97720d0 <col:30>
|-CXXMethodDecl 0x5592f97721d8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5592f9772110 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5592f9772280 <col:20>
| `-OptimizeNoneAttr 0x5592f97722d8 <col:30>
|-CXXMethodDecl 0x5592f97723a8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5592f9772318 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5592f9772450 <col:20>
| `-OptimizeNoneAttr 0x5592f97724a8 <col:30>
|-CXXMethodDecl 0x5592f9772638 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5592f97724e0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5592f9772560 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5592f97727c8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5592f9772700 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5592f9772918 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5592f9772888 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5592f9772a68 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5592f97729d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5592f9772bb8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5592f9772b28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5592f9772e78 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5592f9772c70 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5592f9772cf0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5592f9772d98 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5592f9772f50 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5592f9773010 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5592f97732e0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592f9773190 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5592f9773208 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9773408 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5592f97735e0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5592f97734c0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5592f9773540 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5592f97737c8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5592f97736a8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5592f9773728 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5592f9773b38 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5592f9773888 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5592f9773900 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592f9773980 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5592f977e8f0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f977e8d0 <col:106> 'int' 0
| `-ParmVarDecl 0x5592f97739f8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f977e928 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f977e908 <col:126> 'int' 0
|-CXXMethodDecl 0x5592f9773ed8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592f9773c08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5592f9773ca0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592f9773d20 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5592f9773d98 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f977e960 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f977e940 <col:114> 'int' 0
|-CXXMethodDecl 0x5592f9774268 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592f9773fb0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5592f9774028 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5592f97740a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5592f977e978 <col:96> 'int' 0
| `-ParmVarDecl 0x5592f9774120 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f977e9b8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f977e998 <col:116> 'int' 0
|-CXXMethodDecl 0x5592f97745e8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5592f9774338 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5592f97743b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f9774430 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5592f977e9f0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f977e9d0 <col:109> 'int' 0
| `-ParmVarDecl 0x5592f97744a8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f977ea28 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f977ea08 <col:129> 'int' 0
|-CXXMethodDecl 0x5592f9774968 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592f97746b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5592f9774730 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f97747b0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5592f9774828 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f977ea60 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f977ea40 <col:117> 'int' 0
|-CXXMethodDecl 0x5592f9774cf8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5592f9774a40 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9774ab8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f9774b38 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5592f977ea78 <col:99> 'int' 0
| `-ParmVarDecl 0x5592f9774bb0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5592f977eab8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5592f977ea98 <col:119> 'int' 0
|-CXXMethodDecl 0x5592f9775118 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5592f9774dc8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5592f9774e48 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5592f9774ec0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f9774f40 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5592f977eaf0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f977ead0 <col:108> 'int' 0
| `-ParmVarDecl 0x5592f9774fc0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5592f977eb28 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5592f977eb08 <col:141> 'int' 0
|-CXXMethodDecl 0x5592f9775538 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5592f97751f0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5592f9775270 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5592f97752e8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f9775368 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5592f97753e8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5592f977eb40 <col:121> 'int' 0
|-CXXMethodDecl 0x5592f9775968 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5592f9775618 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5592f9775698 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5592f9775710 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f9775790 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5592f977eb60 <col:98> 'int' 0
| `-ParmVarDecl 0x5592f9775810 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5592f977eb80 <col:123> 'int' 0
|-CXXMethodDecl 0x5592f9775c30 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5592f9775a40 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5592f9775ac0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5592f9775b40 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5592f977eba0 <col:80> 'int' 0
|-EnumDecl 0x5592f9775ce8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5592f9775df0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592f9776080 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9775dd0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5592f9775db0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5592f9775e80 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592f9776098 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9775e60 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5592f9775e40 <col:40> 'int' 2
| |-EnumConstantDecl 0x5592f9775f10 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592f97760b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9775ef0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5592f9775ed0 <col:44> 'int' 4
| |-EnumConstantDecl 0x5592f9775fa0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5592f97760c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9775f80 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5592f9775f60 <col:36> 'int' 7
| `-EnumConstantDecl 0x5592f9776030 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5592f97760e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f9776010 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5592f9775ff0 <col:34> 'int' 6
|-CXXMethodDecl 0x5592f9776398 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5592f9776108 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5592f97761a8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5592f9776228 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5592f97762a0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5592f977ec58 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5592f977ec40 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5592f977ec28 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5592f977ec08 <col:98, col:105> 'String' (CXXTemporary 0x5592f977ec08)
|           `-CXXTemporaryObjectExpr 0x5592f977ebd0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5592f9776638 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5592f9776468 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5592f97764e0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5592f9776558 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5592f977ed08 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5592f977ecf0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5592f977ecd8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5592f977ecb8 <col:94, col:101> 'String' (CXXTemporary 0x5592f977ecb8)
| |         `-CXXTemporaryObjectExpr 0x5592f977ec80 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5592f977f4f0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5592f977f468 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5592f977f438 <col:9> '<bound member function type>' ->add_task_handlers 0x5592f9776398
|     | `-CXXThisExpr 0x5592f977f428 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5592f977f4a8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f977f3a8 <col:27> 'Task *' lvalue ParmVar 0x5592f9776468 'task' 'Task *'
|     |-ImplicitCastExpr 0x5592f977f4c0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f977f3c8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5592f97764e0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5592f977f4d8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5592f977f3e8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5592f9776030 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5592f977f408 <col:62> 'const String' lvalue ParmVar 0x5592f9776558 'prefix' 'const String &'
|-CXXMethodDecl 0x5592f9776848 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5592f9776700 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5592f9776778 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5592f977edb8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5592f977eda0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5592f977ed88 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5592f977ed68 <col:70, col:77> 'String' (CXXTemporary 0x5592f977ed68)
| |         `-CXXTemporaryObjectExpr 0x5592f977ed30 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5592f977f6c8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5592f977f640 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5592f977f610 <col:9> '<bound member function type>' ->add_task_handlers 0x5592f9776398
|     | `-CXXThisExpr 0x5592f977f600 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5592f977f680 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f977f580 <col:27> 'Task *' lvalue ParmVar 0x5592f9776700 'task' 'Task *'
|     |-ImplicitCastExpr 0x5592f977f698 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5592f977f5a0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5592f977f6b0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5592f977f5c0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5592f9776030 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5592f977f5e0 <col:57> 'const String' lvalue ParmVar 0x5592f9776778 'prefix' 'const String &'
|-CXXMethodDecl 0x5592f9776b28 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5592f9776910 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9776990 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9776a08 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5592f9776dd8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5592f9776bf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9776c78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9776cf8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5592f97770c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5592f9776ea8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9776f28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9776fa0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5592f9777378 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5592f9777198 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9777218 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9777298 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5592f9777628 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5592f9777448 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f97774c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9777548 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5592f97778d8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5592f97776f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9777778 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f97777f0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5592f9777b88 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5592f97779a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9777a28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9777aa8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5592f9777e98 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5592f9777cb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9777d30 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9777db0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5592f9778178 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5592f9777f68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9777fe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9778090 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5592f9778458 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5592f9778248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f97782c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9778370 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5592f97786c0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5592f9778528 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5592f97785a8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5592f9778620 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5592f9778968 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5592f9778790 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5592f9778810 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5592f9778888 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5592f9778c18 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5592f9778a38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9778ab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9778b38 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5592f9778ec8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5592f9778ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9778d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9778de0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5592f9779178 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5592f9778f98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9779018 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9779090 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5592f9779448 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5592f9779248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f97792c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5592f9779368 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5592f9779778 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5592f9779518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5592f9779598 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5592f9779610 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5592f9779688 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f977edd0 <col:93> 'bool' false
|-CXXMethodDecl 0x5592f9779960 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592f9779848 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5592f97798c8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5592f9779b38 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592f9779a20 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5592f9779aa0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5592f9779e18 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f9779bf8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5592f9779c70 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5592f9779cf0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5592f9779d68 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5592f977a108 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f9779ee8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5592f9779f60 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5592f9779fe0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5592f977a058 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5592f977a340 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5592f977a1e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5592f977a260 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5592f977a528 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5592f977a408 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5592f977a488 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5592f977a5d8 prev 0x5592f9771d78 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f977a6d0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5592f977a760 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5592f977a7d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5592f977a898 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5592f977a960 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5592f977aad8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5592f977aa10 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5592f977ab80 <col:24>
| | `-OptimizeNoneAttr 0x5592f977abd8 <col:34>
| |-CXXMethodDecl 0x5592f977ac20 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5592f977aed8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5592f977acd0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5592f977ad48 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5592f977adc8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5592f977af90 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5592f977afc8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5592f977b030 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5592f977b0b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5592f977b3d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5592f977b170 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5592f977b1e8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5592f977b260 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5592f977b2e0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5592f977b4f0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5592f9782e68 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5592f9782e68
| | `-ParmVarDecl 0x5592f9782f78 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5592f9783018 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5592f9783018
| | `-ParmVarDecl 0x5592f9783128 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5592f98df6f8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592f977b568 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5592f977b608 <col:38> "" ""
|-CXXMethodDecl 0x5592f977b698 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5592f977b738 <col:44> "" ""
|-AccessSpecDecl 0x5592f977b7a8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5592f977b7d0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5592f977b8d0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5592f977b920 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f977b8b0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5592f977b890 <col:27> 'int' 4
|-FieldDecl 0x5592f977b9d8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5592f977bb88 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5592f977bc40 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5592f977ccd0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5592f977cd38 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5592f977ce88 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5592f977cdc8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5592f977d038 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5592f977cf48 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5592f977d218 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5592f977d0f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x5592f977d178 <col:25> col:28 'int'
|-CXXMethodDecl 0x5592f977d4c0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5592f977d2e0 <col:23> col:26 'int'
| |-ParmVarDecl 0x5592f977d360 <col:28> col:31 'int'
| `-ParmVarDecl 0x5592f977d3d8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5592f977d578 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5592f977d640 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5592f977d690 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5592f977d6e0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5592f977d8c0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f977d770 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5592f977d7e8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f977db68 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5592f977d988 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5592f977da08 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5592f977da80 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5592f977dd88 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5592f977dc38 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5592f977dcb8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5592f977e0c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5592f977de48 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5592f977dec8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5592f977df40 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5592f977dfc0 <col:57> col:60 'int'
|-CXXMethodDecl 0x5592f977e2a8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592f977e190 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5592f977e210 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5592f977e3f8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5592f977e368 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5592f977e778 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5592f977e4b8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5592f977e538 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5592f977e5b0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5592f977e630 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5592f977e890 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97885a8 <../elements/ip/iproutetable.hh:188:1, line:212:1> line:188:7 referenced class IPRouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5592f9788708 <col:1, col:7> col:7 implicit class IPRouteTable
|-AccessSpecDecl 0x5592f9788798 <col:39, col:45> col:39 public
|-CXXMethodDecl 0x5592f9788898 <line:190:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5592f976f9e0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5592f97887d8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x5592f9788b70 <line:191:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5592f97705c0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5592f9788a20 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x5592f9788a98 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9788c40 <line:192:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5592f9770690 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5592f9788f50 <line:194:5, col:112> col:17 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592f9788cf0 <col:27, col:42> col:42 route 'const IPRoute &'
| |-ParmVarDecl 0x5592f9788d68 <col:49, col:54> col:54 allow_replace 'bool'
| |-ParmVarDecl 0x5592f9788de0 <col:69, col:78> col:78 replaced_route 'IPRoute *'
| `-ParmVarDecl 0x5592f9788e58 <col:94, col:108> col:108 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9789200 <line:195:5, col:94> col:17 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5592f9789020 <col:30, col:45> col:45 route 'const IPRoute &'
| |-ParmVarDecl 0x5592f9789098 <col:52, col:61> col:61 removed_route 'IPRoute *'
| `-ParmVarDecl 0x5592f9789110 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9789450 <line:196:5, col:69> col:17 lookup_route 'int (IPAddress, IPAddress &) const' virtual pure
| |-ParmVarDecl 0x5592f97892c8 <col:30, col:40> col:40 addr 'IPAddress'
| `-ParmVarDecl 0x5592f9789340 <col:46, col:57> col:57 gw 'IPAddress &'
|-CXXMethodDecl 0x5592f9789548 <line:197:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x5592f9789710 <line:199:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5592f976db98 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5592f9789600 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5592f9789678 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5592f97899f0 <line:201:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f97897d0 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x5592f9789848 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x5592f97898c8 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x5592f9789940 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9789ce0 <line:202:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f9789ac0 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x5592f9789b38 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x5592f9789bb8 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x5592f9789c30 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x5592f9789fd0 <line:203:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f9789db0 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x5592f9789e28 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x5592f9789ea8 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x5592f9789f20 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5592f978a340 <line:204:5, col:94> col:16 lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f978a0a8 <col:31, col:35> col:35 operation 'int'
| |-ParmVarDecl 0x5592f978a120 <col:46, col:52> col:53 'String &'
| |-ParmVarDecl 0x5592f978a198 <col:55, col:62> col:63 'Element *'
| |-ParmVarDecl 0x5592f978a210 <col:65, col:78> col:79 'const Handler *'
| `-ParmVarDecl 0x5592f978a288 <col:81, col:93> col:94 'ErrorHandler *'
|-CXXMethodDecl 0x5592f978a530 <line:205:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5592f978a418 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x5592f978a498 <col:43, col:47> col:48 'void *'
|-AccessSpecDecl 0x5592f978a5e0 <line:207:3, col:10> col:3 private
|-EnumDecl 0x5592f978a608 <line:209:5, col:41> col:5
| |-EnumConstantDecl 0x5592f978a6d0 <col:12> col:12 CMD_ADD 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| |-EnumConstantDecl 0x5592f978a720 <col:21> col:21 CMD_SET 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| `-EnumConstantDecl 0x5592f978a770 <col:30> col:30 CMD_REMOVE 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
|-CXXMethodDecl 0x5592f978ac90 <line:210:5, col:92> col:9 run_command 'int (int, const String &, Vector<IPRoute> *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f978a7d8 <col:21, col:25> col:25 command 'int'
| |-ParmVarDecl 0x5592f978a850 <col:34, col:47> col:48 'const String &'
| |-ParmVarDecl 0x5592f978aad0 <col:50, col:67> col:67 old_routes 'Vector<IPRoute> *'
| `-ParmVarDecl 0x5592f978ab48 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXConstructorDecl 0x5592f978ad90 <line:188:7> col:7 implicit IPRouteTable 'void (const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x5592f978ad90
| `-ParmVarDecl 0x5592f978aea8 <col:7> col:7 'const IPRouteTable &'
|-CXXConstructorDecl 0x5592f978af48 <col:7> col:7 implicit IPRouteTable 'void (IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x5592f978af48
| `-ParmVarDecl 0x5592f978b058 <col:7> col:7 'IPRouteTable &&'
|-CXXMethodDecl 0x5592f978b0f8 <col:7> col:7 implicit operator= 'IPRouteTable &(const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x5592f978b0f8
| `-ParmVarDecl 0x5592f978b208 <col:7> col:7 'const IPRouteTable &'
|-CXXMethodDecl 0x5592f978b278 <col:7> col:7 implicit operator= 'IPRouteTable &(IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x5592f978b278
| `-ParmVarDecl 0x5592f978b388 <col:7> col:7 'IPRouteTable &&'
|-CXXDestructorDecl 0x5592f978b410 <col:7> col:7 implicit used ~IPRouteTable 'void () noexcept' inline default
| |-Overrides: [ 0x5592f976d8c8 Element::~Element 'void () noexcept' ]
| `-CompoundStmt 0x5592f98dfa78 <col:7>
`-CXXConstructorDecl 0x5592f98df578 <col:7> col:7 implicit used IPRouteTable 'void () noexcept(false)' inline default
  |-CXXCtorInitializer 'Element'
  | `-CXXConstructExpr 0x5592f98df690 <col:7> 'Element' 'void ()'
  `-CompoundStmt 0x5592f98df7e0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IPRouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DirectIPLookup::Table
         0 |   uint16_t * _tbl_0_23
         8 |   uint16_t * _tbl_24_31
        16 |   struct DirectIPLookup::VirtualPort * _vport
        24 |   struct DirectIPLookup::CleartextEntry * _rtable
        32 |   int * _rt_hashtbl
        40 |   uint8_t * _tbl_0_23_plen
        48 |   uint8_t * _tbl_24_31_plen
        56 |   uint32_t _rtable_size
        60 |   uint32_t _tbl_24_31_size
        64 |   uint32_t _vport_size
        68 |   int _rt_empty_head
        72 |   uint16_t _tbl_24_31_empty_head
        76 |   int _vport_head
        80 |   int _vport_empty_head
        84 |   uint32_t _rtable_capacity
        88 |   uint32_t _tbl_24_31_capacity
        92 |   uint32_t _vport_capacity
           | [sizeof=96, dsize=96, align=8,
           |  nvsize=96, nvalign=8]

*** Dumping AST Record Layout
         0 | class RangeIPLookup
         0 |   class IPRouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   uint32_t * _range_base
       120 |   uint32_t * _range_len
       128 |   uint32_t * _range_t
       136 |   _Bool _active
       144 |   struct DirectIPLookup::Table _helper
       144 |     uint16_t * _tbl_0_23
       152 |     uint16_t * _tbl_24_31
       160 |     struct DirectIPLookup::VirtualPort * _vport
       168 |     struct DirectIPLookup::CleartextEntry * _rtable
       176 |     int * _rt_hashtbl
       184 |     uint8_t * _tbl_0_23_plen
       192 |     uint8_t * _tbl_24_31_plen
       200 |     uint32_t _rtable_size
       204 |     uint32_t _tbl_24_31_size
       208 |     uint32_t _vport_size
       212 |     int _rt_empty_head
       216 |     uint16_t _tbl_24_31_empty_head
       220 |     int _vport_head
       224 |     int _vport_empty_head
       228 |     uint32_t _rtable_capacity
       232 |     uint32_t _tbl_24_31_capacity
       236 |     uint32_t _vport_capacity
           | [sizeof=240, dsize=240, align=8,
           |  nvsize=240, nvalign=8]

*** Dumping AST Record Layout
         0 | struct DirectIPLookup::VirtualPort
         0 |   int16_t ll_next
         2 |   int16_t ll_prev
         4 |   int32_t refcount
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int16_t port
        14 |   int16_t padding
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f956e5c0 prev 0x5592f94d35f8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f956e6b8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x5592f956e748 <col:19, col:25> col:19 public
|-TypedefDecl 0x5592f956e780 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5592f9360ed0 'uninitialized_type'
|   `-CXXRecord 0x5592f9360e38 'uninitialized_type'
|-CXXConstructorDecl 0x5592f956e840 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f9572038 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9571ff8 <col:10> 'int' 0
| `-CompoundStmt 0x5592f9572080 <col:13, line:22:5>
|-CXXConstructorDecl 0x5592f956e990 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x5592f956e900 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f95720d0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x5592f9572090 <col:10> 'unsigned int' lvalue ParmVar 0x5592f956e900 'x' 'unsigned int'
| `-CompoundStmt 0x5592f9572118 <col:13, line:27:5>
|-CXXConstructorDecl 0x5592f956eae8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x5592f956ea58 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f9572180 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5592f9572168 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x5592f9572128 <col:10> 'int' lvalue ParmVar 0x5592f956ea58 'x' 'int'
| `-CompoundStmt 0x5592f95721c8 <col:13, line:31:5>
|-CXXConstructorDecl 0x5592f956ec40 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5592f956ebb0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f9572230 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5592f9572218 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x5592f95721d8 <col:10> 'unsigned long' lvalue ParmVar 0x5592f956ebb0 'x' 'unsigned long'
| `-CompoundStmt 0x5592f9572278 <col:13, line:35:5>
|-CXXConstructorDecl 0x5592f956ed98 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x5592f956ed08 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f95722e0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5592f95722c8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x5592f9572288 <col:10> 'long' lvalue ParmVar 0x5592f956ed08 'x' 'long'
| `-CompoundStmt 0x5592f9572328 <col:13, line:39:5>
|-CXXConstructorDecl 0x5592f956ef58 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x5592f956ee68 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f95723a8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5592f9572358 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5592f94a23b0
| |     `-DeclRefExpr 0x5592f9572338 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x5592f956ee68 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x5592f95723f0 <col:20, line:44:5>
|-CXXConstructorDecl 0x5592f956f0e8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x5592f956f020 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x5592f9572558 <col:51, line:56:5>
|   `-BinaryOperator 0x5592f9572538 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x5592f9572410 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5592f9571f90
|     | `-CXXThisExpr 0x5592f9572400 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x5592f9572520 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5592f9572508 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x5592f95724e8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x5592f95724b8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x5592f95724a0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x5592f9572440 <col:47> 'const unsigned char *' lvalue ParmVar 0x5592f956f020 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x5592f956f238 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x5592f956f1a8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x5592f956f3e8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5592f956f328 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5592f95725c8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x5592f95725a0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5592f9572570 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5592f956f328 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5592f956f578 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x5592f956f4b0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x5592f956f668 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x5592f9573588 <col:46, line:83:5>
|   `-ReturnStmt 0x5592f9573578 <line:82:2, col:29>
|     `-ExprWithCleanups 0x5592f9573560 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x5592f9573530 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f95733e8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5592f95732d0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5592f95731b8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x5592f95725f0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x5592f956f758 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x5592f9573638 <col:31, line:88:5>
|   `-ReturnStmt 0x5592f9573628 <line:87:2, col:10>
|     `-UnaryOperator 0x5592f9573610 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x5592f95735f8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x5592f95735e0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5592f95735b0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5592f9571f90
|             `-CXXThisExpr 0x5592f95735a0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5592f956f818 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5592f95736b8 <col:34, line:93:5>
|   `-ReturnStmt 0x5592f95736a8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5592f9573690 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5592f9573660 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5592f9571f90
|         `-CXXThisExpr 0x5592f9573650 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x5592f956f8e8 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x5592f9573738 <col:38, line:101:5>
|   `-ReturnStmt 0x5592f9573728 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x5592f9573710 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5592f95736e0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5592f9571f90
|         `-CXXThisExpr 0x5592f95736d0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5592f956f9b8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5592f9573a08 <col:38, line:108:5>
|   `-ReturnStmt 0x5592f95739f8 <line:107:2, col:58>
|     `-BinaryOperator 0x5592f95739d8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x5592f95738f0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x5592f95738d0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5592f95738b8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5592f9573760 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5592f9571f90
|       |   |   `-CXXThisExpr 0x5592f9573750 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5592f9573890 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5592f9573878 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5592f95737f8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5592f94b08e8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5592f95737d8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5592f95739b0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5592f9573998 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5592f9573978 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x5592f94b08e8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5592f9573958 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5592f956fa78 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5592f9573c78 <col:39, line:112:5>
|   `-ReturnStmt 0x5592f9573c68 <line:111:2, col:56>
|     `-BinaryOperator 0x5592f9573c48 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5592f9573b60 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x5592f9573b40 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5592f9573b28 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5592f9573a30 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5592f9571f90
|       |   |   `-CXXThisExpr 0x5592f9573a20 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5592f9573b00 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5592f9573ae8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5592f9573ac8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5592f94b08e8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5592f9573aa8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x5592f9573c20 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5592f9573c08 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5592f9573be8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x5592f94b08e8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5592f9573bc8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5592f956fba8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5592f956fcb0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5592f956fdc0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5592f9570e88 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592f9570f48 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f9571010 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5592f9571208 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x5592f95710c0 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x5592f9571138 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x5592f9571388 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5592f95712c8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x5592f95714d0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5592f9571440 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5592f9571678 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5592f9571588 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5592f95717c0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5592f9571730 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5592f9571908 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5592f9571878 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5592f95719d0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5592f9571a90 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x5592f9571c08 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x5592f9571b40 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x5592f9571cd0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5592f9571db8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5592f9571e60 <col:51> "" ""
|-TypedefDecl 0x5592f9571f00 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x5592f94d3690 'IPAddress'
|   `-CXXRecord 0x5592f956e5c0 'IPAddress'
|-AccessSpecDecl 0x5592f9571f58 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5592f9571f90 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f9572638 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f9572748 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f9787718 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5592f97876d0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x5592f9571f90
| |     `-DeclRefExpr 0x5592f97876b0 <col:7> 'const IPAddress' lvalue ParmVar 0x5592f9572748 '' 'const IPAddress &'
| `-CompoundStmt 0x5592f9787760 <col:7>
|-CXXConstructorDecl 0x5592f95727e8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f95728f8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5592f9571f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5592f95734d8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5592f9573490 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5592f9571f90
| |     `-CXXStaticCastExpr 0x5592f9573460 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x5592f9573430 <col:7> 'IPAddress' lvalue ParmVar 0x5592f95728f8 '' 'IPAddress &&'
| `-CompoundStmt 0x5592f9573520 <col:7>
|-CXXDestructorDecl 0x5592f95731e8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592f9787b60 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x5592f9787b60
| `-ParmVarDecl 0x5592f9787c68 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x5592f9787cd8 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5592f9787de8 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x5592f9788050 <col:7>
    |-BinaryOperator 0x5592f9787ff8 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x5592f9787fb0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x5592f9571f90
    | | `-CXXThisExpr 0x5592f9787fa0 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x5592f9787fe0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x5592f9787f70 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5592f9571f90
    |     `-CXXStaticCastExpr 0x5592f9787f40 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x5592f9787f10 <col:7> 'IPAddress' lvalue ParmVar 0x5592f9787de8 '' 'IPAddress &&'
    `-ReturnStmt 0x5592f9788040 <col:7>
      `-UnaryOperator 0x5592f9788028 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5592f9788018 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f96ee9e0 <../elements/ip/directiplookup.hh:125:5, line:132:5> line:125:12 referenced struct VirtualPort definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5592f96eeaf8 <col:5, col:12> col:12 implicit struct VirtualPort
|-FieldDecl 0x5592f96eeb98 <line:126:2, col:10> col:10 ll_next 'int16_t':'short'
|-FieldDecl 0x5592f96eebf8 <line:127:2, col:10> col:10 ll_prev 'int16_t':'short'
|-FieldDecl 0x5592f96eec58 <line:128:2, col:10> col:10 refcount 'int32_t':'int'
|-FieldDecl 0x5592f96eecb8 <line:129:2, col:12> col:12 gw 'IPAddress'
|-FieldDecl 0x5592f96eed18 <line:130:2, col:10> col:10 port 'int16_t':'short'
`-FieldDecl 0x5592f96eed78 <line:131:2, col:10> col:10 padding 'int16_t':'short'

Layout: <CGRecordLayout
  LLVMType:%"struct.DirectIPLookup::VirtualPort" = type { i16, i16, i32, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%"struct.DirectIPLookup::VirtualPort" = type { i16, i16, i32, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DirectIPLookup::CleartextEntry
         0 |   int ll_next
         4 |   int ll_prev
         8 |   uint32_t prefix
        12 |   uint16_t plen
        14 |   int16_t vport
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f96ee628 <../elements/ip/directiplookup.hh:117:5, line:123:5> line:117:12 referenced struct CleartextEntry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5592f96ee748 <col:5, col:12> col:12 implicit struct CleartextEntry
|-FieldDecl 0x5592f96ee7f0 <line:118:2, col:6> col:6 ll_next 'int'
|-FieldDecl 0x5592f96ee858 <line:119:2, col:6> col:6 ll_prev 'int'
|-FieldDecl 0x5592f96ee8b8 <line:120:2, col:11> col:11 prefix 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f96ee918 <line:121:2, col:11> col:11 plen 'uint16_t':'unsigned short'
`-FieldDecl 0x5592f96ee978 <line:122:2, col:10> col:10 vport 'int16_t':'short'

Layout: <CGRecordLayout
  LLVMType:%"struct.DirectIPLookup::CleartextEntry" = type { i32, i32, i32, i16, i16 }
  NonVirtualBaseLLVMType:%"struct.DirectIPLookup::CleartextEntry" = type { i32, i32, i32, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f96eede0 <../elements/ip/directiplookup.hh:134:5, line:182:5> line:134:12 referenced struct Table definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f96eeef8 <col:5, col:12> col:12 implicit referenced struct Table
|-FieldDecl 0x5592f96eef98 <line:136:2, col:12> col:12 _tbl_0_23 'uint16_t *'
|-FieldDecl 0x5592f96eeff8 <line:137:2, col:12> col:12 _tbl_24_31 'uint16_t *'
|-FieldDecl 0x5592f96ef088 <line:138:2, col:15> col:15 _vport 'DirectIPLookup::VirtualPort *'
|-FieldDecl 0x5592f96ef118 <line:141:2, col:18> col:18 _rtable 'DirectIPLookup::CleartextEntry *'
|-FieldDecl 0x5592f96ef180 <line:142:2, col:7> col:7 _rt_hashtbl 'int *'
|-FieldDecl 0x5592f96ef1e0 <line:143:2, col:11> col:11 _tbl_0_23_plen 'uint8_t *'
|-FieldDecl 0x5592f96ef240 <line:144:2, col:11> col:11 _tbl_24_31_plen 'uint8_t *'
|-FieldDecl 0x5592f96ef2a0 <line:146:2, col:11> col:11 _rtable_size 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f96ef300 <line:147:2, col:11> col:11 _tbl_24_31_size 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f96ef360 <line:148:2, col:11> col:11 _vport_size 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f96ef3c8 <line:149:2, col:6> col:6 _rt_empty_head 'int'
|-FieldDecl 0x5592f96ef428 <line:150:2, col:11> col:11 _tbl_24_31_empty_head 'uint16_t':'unsigned short'
|-FieldDecl 0x5592f96ef490 <line:151:2, col:6> col:6 _vport_head 'int'
|-FieldDecl 0x5592f96ef4f8 <line:152:2, col:6> col:6 _vport_empty_head 'int'
|-FieldDecl 0x5592f96ef558 <line:154:2, col:11> col:11 _rtable_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f96ef5b8 <line:155:2, col:11> col:11 _tbl_24_31_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5592f96ef618 <line:156:2, col:11> col:11 _vport_capacity 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f96ef6d0 <line:158:2, line:161:2> line:158:2 used Table 'void ()'
| |-CXXCtorInitializer Field 0x5592f96eef98 '_tbl_0_23' 'uint16_t *'
| | `-ImplicitCastExpr 0x5592f96f0f20 <line:159:18> 'uint16_t *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f0ee0 <col:18> 'int' 0
| |-CXXCtorInitializer Field 0x5592f96eeff8 '_tbl_24_31' 'uint16_t *'
| | `-ImplicitCastExpr 0x5592f96f0fa0 <col:33> 'uint16_t *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f0f60 <col:33> 'int' 0
| |-CXXCtorInitializer Field 0x5592f96ef088 '_vport' 'DirectIPLookup::VirtualPort *'
| | `-ImplicitCastExpr 0x5592f96f1020 <col:44> 'DirectIPLookup::VirtualPort *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f0fe0 <col:44> 'int' 0
| |-CXXCtorInitializer Field 0x5592f96ef118 '_rtable' 'DirectIPLookup::CleartextEntry *'
| | `-ImplicitCastExpr 0x5592f96f10a0 <col:56> 'DirectIPLookup::CleartextEntry *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f1060 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x5592f96ef180 '_rt_hashtbl' 'int *'
| | `-ImplicitCastExpr 0x5592f96f1120 <line:160:20> 'int *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f10e0 <col:20> 'int' 0
| |-CXXCtorInitializer Field 0x5592f96ef1e0 '_tbl_0_23_plen' 'uint8_t *'
| | `-ImplicitCastExpr 0x5592f96f11a0 <col:39> 'uint8_t *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f1160 <col:39> 'int' 0
| |-CXXCtorInitializer Field 0x5592f96ef240 '_tbl_24_31_plen' 'uint8_t *'
| | `-ImplicitCastExpr 0x5592f96f1220 <col:59> 'uint8_t *' <NullToPointer>
| |   `-IntegerLiteral 0x5592f96f11e0 <col:59> 'int' 0
| `-CompoundStmt 0x5592f96f1298 <col:62, line:161:2>
|-CXXDestructorDecl 0x5592f96ef7c0 <line:163:2, line:165:2> line:163:2 used ~Table 'void () noexcept'
| `-CompoundStmt 0x5592f96f1308 <col:11, line:165:2>
|   `-CXXMemberCallExpr 0x5592f96f12e8 <line:164:6, col:14> 'void'
|     `-MemberExpr 0x5592f96f12b8 <col:6> '<bound member function type>' ->cleanup 0x5592f96ef988
|       `-CXXThisExpr 0x5592f96f12a8 <col:6> 'DirectIPLookup::Table *' implicit this
|-CXXMethodDecl 0x5592f96ef8c8 <line:167:2, col:17> col:6 initialize 'int ()'
|-CXXMethodDecl 0x5592f96ef988 <line:168:2, col:15> col:7 used cleanup 'void ()'
|-CXXMethodDecl 0x5592f96efb48 <line:170:2, col:55> col:25 prefix_hash 'uint32_t (uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5592f96efa38 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f96efab0 <col:47> col:55 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f96efdd0 <line:172:2, col:37> col:6 find_entry 'int (uint32_t, uint32_t) const'
| |-ParmVarDecl 0x5592f96efc08 <col:17> col:25 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f96efc80 <col:27> col:35 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f96efea0 <line:173:2, col:16> col:9 dump 'String () const'
|-CXXMethodDecl 0x5592f96f00e0 <line:175:2, col:43> col:6 vport_find 'int (IPAddress, int16_t)'
| |-ParmVarDecl 0x5592f96eff50 <col:17, col:27> col:27 gw 'IPAddress'
| `-ParmVarDecl 0x5592f96effc8 <col:31, col:39> col:39 port 'int16_t':'short'
|-CXXMethodDecl 0x5592f96f0298 <line:176:2, col:27> col:7 vport_unref 'void (uint16_t)'
| `-ParmVarDecl 0x5592f96f01a0 <col:19> col:27 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5592f96f0568 <line:178:2, col:62> col:6 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f96f0350 <col:16, col:29> col:30 'const IPRoute &'
| |-ParmVarDecl 0x5592f96f03c8 <col:32> col:36 'bool'
| |-ParmVarDecl 0x5592f96f0440 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x5592f96f04b8 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x5592f96f07d0 <line:179:2, col:59> col:6 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-ParmVarDecl 0x5592f96f0638 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x5592f96f06b0 <col:35, col:42> col:43 'IPRoute *'
| `-ParmVarDecl 0x5592f96f0728 <col:45, col:58> col:59 'ErrorHandler *'
|-CXXMethodDecl 0x5592f96f08a8 <line:180:2, col:13> col:7 flush 'void ()'
`-CXXConstructorDecl 0x5592f98df878 <line:134:12> col:12 implicit constexpr Table 'void (const DirectIPLookup::Table &)' inline default trivial noexcept-unevaluated 0x5592f98df878
  `-ParmVarDecl 0x5592f98df988 <col:12> col:12 'const DirectIPLookup::Table &'

Layout: <CGRecordLayout
  LLVMType:%"struct.DirectIPLookup::Table" = type { i16*, i16*, %"struct.DirectIPLookup::VirtualPort"*, %"struct.DirectIPLookup::CleartextEntry"*, i32*, i8*, i8*, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.DirectIPLookup::Table" = type { i16*, i16*, %"struct.DirectIPLookup::VirtualPort"*, %"struct.DirectIPLookup::CleartextEntry"*, i32*, i8*, i8*, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f96f1320 prev 0x5592f96ec8b8 <../elements/ip/rangeiplookup.hh:83:1, line:122:1> line:83:7 class RangeIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRouteTable'
|-CXXRecordDecl 0x5592f96f1458 <col:1, col:7> col:7 implicit referenced class RangeIPLookup
|-AccessSpecDecl 0x5592f96f14e8 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x5592f96f1570 <line:85:5, col:19> col:5 RangeIPLookup 'void ()'
|-CXXDestructorDecl 0x5592f96f1660 <line:86:5, col:20> col:5 ~RangeIPLookup 'void ()' noexcept-unevaluated 0x5592f96f1660
| `-Overrides: [ 0x5592f978b410 IPRouteTable::~IPRouteTable 'void () noexcept' ]
|-CXXMethodDecl 0x5592f96f1790 <line:88:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5592f976ed28 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5592f96f3b08 <col:36, col:62>
|   `-ReturnStmt 0x5592f96f3af8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5592f96f3ae0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5592f96f3ab8 <col:45> 'const char [14]' lvalue "RangeIPLookup"
|-CXXMethodDecl 0x5592f96f1858 <line:89:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5592f976edf0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5592f96f3b68 <col:36, col:52>
|   `-ReturnStmt 0x5592f96f3b58 <col:38, col:45>
|     `-ImplicitCastExpr 0x5592f96f3b40 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5592f96f3b20 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x5592f96f1920 <line:90:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5592f976f1b8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5592f96f3bc8 <col:36, col:51>
|   `-ReturnStmt 0x5592f96f3bb8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5592f96f3ba0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5592f96f3b80 <col:45> 'const char []' lvalue Var 0x5592f976f300 'PUSH' 'const char []'
|-CXXMethodDecl 0x5592f96f1bf0 <line:92:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5592f9788b70 IPRouteTable::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5592f96f1aa0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x5592f96f1b18 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f96f1d48 <line:93:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x5592f9770810 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5592f96f1cb0 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5592f96f1e90 <line:94:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x5592f9771028 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5592f96f1e00 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x5592f96f1f58 <line:95:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5592f9788c40 IPRouteTable::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5592f96f2120 <line:96:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5592f9789710 IPRouteTable::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5592f96f2010 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5592f96f2088 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5592f96f23f8 <line:98:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5592f9788f50 IPRouteTable::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5592f96f21e0 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x5592f96f2258 <col:35> col:39 'bool'
| |-ParmVarDecl 0x5592f96f22d0 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x5592f96f2348 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x5592f96f2660 <line:99:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5592f9789200 IPRouteTable::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5592f96f24c8 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x5592f96f2540 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x5592f96f25b8 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x5592f96f2840 <line:100:5, col:45> col:9 lookup_route 'int (IPAddress, IPAddress &) const'
| |-Overrides: [ 0x5592f9789450 IPRouteTable::lookup_route 'int (IPAddress, IPAddress &) const' ]
| |-ParmVarDecl 0x5592f96f2728 <col:22> col:31 'IPAddress'
| `-ParmVarDecl 0x5592f96f27a0 <col:33, col:42> col:43 'IPAddress &'
|-CXXMethodDecl 0x5592f96f2910 <line:101:5, col:24> col:12 dump_routes 'String ()'
| `-Overrides: [ 0x5592f9789548 IPRouteTable::dump_routes 'String ()' ]
|-CXXMethodDecl 0x5592f96f2be0 <line:103:5, col:79> col:16 flush_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5592f96f29c0 <col:30, col:43> col:44 'const String &'
| |-ParmVarDecl 0x5592f96f2a38 <col:46, col:54> col:55 'Element *'
| |-ParmVarDecl 0x5592f96f2ab8 <col:57, col:62> col:63 'void *'
| `-ParmVarDecl 0x5592f96f2b30 <col:65, col:78> col:79 'ErrorHandler *'
|-AccessSpecDecl 0x5592f96f2ca0 <line:105:3, col:12> col:3 protected
|-CXXMethodDecl 0x5592f96f2ce8 <line:107:5, col:22> col:10 flush_table 'void ()'
|-CXXMethodDecl 0x5592f96f2da8 <line:108:5, col:17> col:10 expand 'void ()'
|-EnumDecl 0x5592f96f2e48 <line:110:5, col:32> col:5
| `-EnumConstantDecl 0x5592f96f2f50 <col:12, col:29> col:12 referenced KICKSTART_BITS 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:110:5)'
|   `-ImplicitCastExpr 0x5592f96f2fa0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f96f2f30 <col:29> 'int' Int: 12
|       `-IntegerLiteral 0x5592f96f2f10 <col:29> 'int' 12
|-EnumDecl 0x5592f96f2fb8 <line:111:5, col:36> col:5
| `-EnumConstantDecl 0x5592f96f3100 <col:12, col:31> col:12 referenced RANGES_MAX 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:111:5)'
|   `-ImplicitCastExpr 0x5592f96f3150 <col:25, col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f96f30e0 <col:25, col:31> 'int' Int: 262144
|       `-BinaryOperator 0x5592f96f30c0 <col:25, col:31> 'int' '*'
|         |-IntegerLiteral 0x5592f96f3080 <col:25> 'int' 256
|         `-IntegerLiteral 0x5592f96f30a0 <col:31> 'int' 1024
|-EnumDecl 0x5592f96f3168 <line:112:5, col:54> col:5
| `-EnumConstantDecl 0x5592f96f32c8 <col:12, col:39> col:12 RANGE_MASK 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:112:5)'
|   `-ConstantExpr 0x5592f96f32a8 <col:25, col:39> 'unsigned int' Int: 1048575
|     `-BinaryOperator 0x5592f96f3288 <col:25, col:39> 'unsigned int' '>>'
|       |-IntegerLiteral 0x5592f96f3230 <col:25> 'unsigned int' 4294967295
|       `-ImplicitCastExpr 0x5592f96f3270 <col:39> 'int' <IntegralCast>
|         `-DeclRefExpr 0x5592f96f3250 <col:39> 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:110:5)' EnumConstant 0x5592f96f2f50 'KICKSTART_BITS' 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:110:5)'
|-EnumDecl 0x5592f96f3318 <line:113:5, col:46> col:5
| `-EnumConstantDecl 0x5592f96f3478 <col:12, col:31> col:12 RANGE_SHIFT 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:113:5)'
|   `-ImplicitCastExpr 0x5592f96f34c8 <col:26, col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f96f3458 <col:26, col:31> 'int' Int: 20
|       `-BinaryOperator 0x5592f96f3438 <col:26, col:31> 'int' '-'
|         |-IntegerLiteral 0x5592f96f33e0 <col:26> 'int' 32
|         `-ImplicitCastExpr 0x5592f96f3420 <col:31> 'int' <IntegralCast>
|           `-DeclRefExpr 0x5592f96f3400 <col:31> 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:110:5)' EnumConstant 0x5592f96f2f50 'KICKSTART_BITS' 'RangeIPLookup::(anonymous enum at ../elements/ip/rangeiplookup.hh:110:5)'
|-FieldDecl 0x5592f96f34f0 <line:115:5, col:15> col:15 _range_base 'uint32_t *'
|-FieldDecl 0x5592f96f3550 <line:116:5, col:15> col:15 _range_len 'uint32_t *'
|-FieldDecl 0x5592f96f35b0 <line:117:5, col:15> col:15 _range_t 'uint32_t *'
|-FieldDecl 0x5592f96f3610 <line:118:5, col:10> col:10 _active 'bool'
|-FieldDecl 0x5592f96f3710 <line:120:5, col:27> col:27 _helper 'DirectIPLookup::Table':'DirectIPLookup::Table'
|-CXXConstructorDecl 0x5592f96f3788 <line:83:7> col:7 implicit RangeIPLookup 'void (const RangeIPLookup &)' inline default_delete noexcept-unevaluated 0x5592f96f3788
| `-ParmVarDecl 0x5592f96f3898 <col:7> col:7 'const RangeIPLookup &'
`-CXXMethodDecl 0x5592f96f3938 <col:7> col:7 implicit operator= 'RangeIPLookup &(const RangeIPLookup &)' inline default_delete noexcept-unevaluated 0x5592f96f3938
  `-ParmVarDecl 0x5592f96f3a48 <col:7> col:7 'const RangeIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.RangeIPLookup = type { %class.IPRouteTable.base, i32*, i32*, i32*, i8, %"struct.DirectIPLookup::Table" }
  NonVirtualBaseLLVMType:%class.RangeIPLookup = type { %class.IPRouteTable.base, i32*, i32*, i32*, i8, %"struct.DirectIPLookup::Table" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9745c88 prev 0x5592f973ae90 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f9745d80 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5592f9745e70 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5592f9745f98 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5592f9746118 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5592f9746298 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5592f9746418 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5592f9757248 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592f9757ab8 <col:11>
|-CXXDestructorDecl 0x5592f9757320 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5592f9757458 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5592f9757458
| `-ParmVarDecl 0x5592f9757568 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5592f9757608 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592f9757608
| `-ParmVarDecl 0x5592f9757718 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5592f975a4d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f975a5e8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5592f975a868 <col:11>
|   `-ReturnStmt 0x5592f975a858 <col:11>
|     `-UnaryOperator 0x5592f975a840 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5592f975a830 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5592f975a658 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592f975a658
  `-ParmVarDecl 0x5592f975a768 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9746480 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f9746598 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5592f9746638 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5592f97466a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5592f9746708 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5592f9746770 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5592f97467d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5592f9746890 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5592f97468f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5592f9746950 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5592f9757158 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5592f9746638 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5592f9757ac8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5592f9757b20 <col:12>
|-CXXConstructorDecl 0x5592f9757788 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5592f9757788
| `-ParmVarDecl 0x5592f9757898 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5592f9757938 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5592f9757938
| `-ParmVarDecl 0x5592f9757a48 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5592f9759bc0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97345a0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f97346b8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5592f9734748 <col:16, col:22> col:16 public
|-EnumDecl 0x5592f9734770 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5592f9734870 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5592f9734950 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9734850 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5592f9734830 <col:21> 'int' 28
| `-EnumConstantDecl 0x5592f9734900 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5592f9734968 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f97348e0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5592f97348c0 <col:22> 'int' 64
|-CXXMethodDecl 0x5592f9734ca8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5592f9734990 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f9734a10 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5592f9734a88 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f9734b00 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592f9734d68 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5592f9734f68 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5592f9734de0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5592f9734e58 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592f9735018 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5592f9735178 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5592f9735088 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592f9735220 <col:72> warn_unused_result ""
|-TypedefDecl 0x5592f9735580 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5592f9735510 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5592f97354b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5592f9735470 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5592f92094e0 'void'
|       |-PointerType 0x5592f94b4940 'unsigned char *'
|       | `-BuiltinType 0x5592f92095e0 'unsigned char'
|       |-TypedefType 0x5592f92b0f10 'size_t' sugar
|       | |-Typedef 0x5592f9279be0 'size_t'
|       | `-BuiltinType 0x5592f9209640 'unsigned long'
|       `-PointerType 0x5592f9209ce0 'void *'
|         `-BuiltinType 0x5592f92094e0 'void'
|-CXXMethodDecl 0x5592f97359f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5592f97355f0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5592f9735668 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f9735700 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5592f9735780 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5592f97500f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5592f97500d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5592f97500a0 <col:58> 'int' 0
| |-ParmVarDecl 0x5592f9735800 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5592f9750118 <col:76> 'int' 0
| |-ParmVarDecl 0x5592f9735880 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5592f9750138 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5592f9735ac8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5592f9735b48 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5592f9735c08 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5592f9735ca8 <col:20>
| `-OptimizeNoneAttr 0x5592f9735d00 <col:30>
|-CXXMethodDecl 0x5592f9735d78 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5592f9735e18 <col:20>
| `-OptimizeNoneAttr 0x5592f9735e70 <col:30>
|-CXXMethodDecl 0x5592f9735ee8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5592f9735f88 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5592f9736038 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5592f97360d8 <col:20>
| |-OptimizeNoneAttr 0x5592f9736130 <col:30>
| `-WarnUnusedResultAttr 0x5592f9736158 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5592f97361b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5592f9736250 <col:20>
| `-OptimizeNoneAttr 0x5592f97362a8 <col:30>
|-CXXMethodDecl 0x5592f97362f8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5592f9736398 <col:20>
| `-OptimizeNoneAttr 0x5592f97363f0 <col:30>
|-CXXMethodDecl 0x5592f9736438 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5592f97364d8 <col:20>
| `-OptimizeNoneAttr 0x5592f9736530 <col:30>
|-CXXMethodDecl 0x5592f9736578 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f9736638 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f9736700 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592f97367c8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592f9736888 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f97369a8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5592f9750200 <col:54, line:99:5>
|   `-ReturnStmt 0x5592f97501f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5592f97501d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5592f97501a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5592f9746c88
|         `-CXXThisExpr 0x5592f9750198 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5592f9736b48 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5592f9736a58 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5592f97502b0 <col:67, line:103:5>
|   `-BinaryOperator 0x5592f9750290 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5592f9750228 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5592f9746c88
|     | `-CXXThisExpr 0x5592f9750218 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5592f9750278 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9750258 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5592f9736a58 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5592f9736c40 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5592f9750330 <col:33, line:107:5>
|   `-ReturnStmt 0x5592f9750320 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5592f9750308 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5592f97502d8 <col:16> 'void *' lvalue ->_destructor_argument 0x5592f9746cf0
|         `-CXXThisExpr 0x5592f97502c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5592f9736d00 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5592f9750960 <col:25, line:113:5>
|   |-ParenExpr 0x5592f97506a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5592f9750678 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5592f97503e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5592f97503c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5592f9750388 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5592f9750358 <col:24> '<bound member function type>' ->shared 0x5592f9735d78
|   |   |       `-ImplicitCastExpr 0x5592f97503a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5592f9750348 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5592f9750448 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9750428 <col:42> 'int' 0
|   |   `-CallExpr 0x5592f97505d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5592f97505c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f97505a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9750618 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f97504b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5592f9750630 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f97504e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9750648 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9750518 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5592f9750660 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9750588 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9750570 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9750538 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5592f97508a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5592f97506d8 <col:2> 'unsigned char *' lvalue ->_head 0x5592f9746a90
|   | | `-CXXThisExpr 0x5592f97506c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5592f9750890 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5592f9750870 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5592f9750718 <col:10> 'unsigned char *' lvalue ->_data 0x5592f9746af8
|   |     | `-CXXThisExpr 0x5592f9750708 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5592f9750858 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5592f9750838 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5592f9750758 <col:18> 'unsigned char *' lvalue ->_tail 0x5592f9746b60
|   |         | `-CXXThisExpr 0x5592f9750748 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5592f9750820 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5592f9750800 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5592f9750798 <col:26> 'unsigned char *' lvalue ->_end 0x5592f9746bc8
|   |             | `-CXXThisExpr 0x5592f9750788 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5592f97507e8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5592f97507c8 <col:33> 'int' 0
|   `-BinaryOperator 0x5592f9750940 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5592f97508d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5592f9746c88
|     | `-CXXThisExpr 0x5592f97508c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5592f9750928 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5592f9750908 <col:16> 'int' 0
|-CXXMethodDecl 0x5592f9736e40 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5592f9736db0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f9736ee8 <col:20>
| |-OptimizeNoneAttr 0x5592f9736f40 <col:30>
| `-WarnUnusedResultAttr 0x5592f9736f68 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5592f9737038 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5592f9736fa8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f97370e0 <col:20>
| |-OptimizeNoneAttr 0x5592f9737138 <col:30>
| `-WarnUnusedResultAttr 0x5592f9737160 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5592f9737298 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5592f97371a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592f9737340 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5592f9737440 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5592f97373b0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f97374e8 <col:20>
| `-OptimizeNoneAttr 0x5592f9737540 <col:30>
|-CXXMethodDecl 0x5592f9737608 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5592f9737578 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592f97376b0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5592f97377b0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5592f9737720 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5592f9737858 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5592f9737958 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5592f97378c8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f9737a00 <col:20>
| `-OptimizeNoneAttr 0x5592f9737a58 <col:30>
|-CXXMethodDecl 0x5592f9737be8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5592f9737a98 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5592f9737b10 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5592f9750158 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5592f9737c98 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5592f9737e98 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5592f9737d10 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5592f9737d88 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97380a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5592f9737f58 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f9737fd0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97382b8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5592f9738168 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5592f97381e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5592f9750168 <col:39> 'int' 0
|-CXXMethodDecl 0x5592f9738388 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5592f9738450 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5592f9738518 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592f97385d8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f97386a0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5592f97387e8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5592f9738758 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5592f97389b8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5592f97388a8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5592f9738920 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f9738a88 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5592f9738b48 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5592f9738be8 <col:20>
| `-OptimizeNoneAttr 0x5592f9738c40 <col:30>
|-CXXMethodDecl 0x5592f9738c90 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5592f9738d30 <col:20>
| `-OptimizeNoneAttr 0x5592f9738d88 <col:30>
|-CXXMethodDecl 0x5592f9738dd8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592f9738e98 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f9738f60 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5592f9739000 <col:20>
| `-OptimizeNoneAttr 0x5592f9739058 <col:30>
|-CXXMethodDecl 0x5592f97391a8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5592f9739098 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5592f9739110 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97392f8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5592f9739268 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97393d0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5592f9739490 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5592f9739530 <col:20>
| `-OptimizeNoneAttr 0x5592f9739588 <col:30>
|-CXXMethodDecl 0x5592f97395d8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5592f9739678 <col:20>
| `-OptimizeNoneAttr 0x5592f97396d0 <col:30>
|-CXXMethodDecl 0x5592f9739720 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592f97397e8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5592f9739888 <col:20>
| `-OptimizeNoneAttr 0x5592f97398e0 <col:30>
|-CXXMethodDecl 0x5592f9739928 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5592f9739a48 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5592f9739bb8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5592f9739af8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5592f9739ca8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5592f9739d48 <col:20>
| `-OptimizeNoneAttr 0x5592f9739da0 <col:30>
|-CXXMethodDecl 0x5592f9739df0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5592f9739eb0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f973a0e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5592f9739f60 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5592f9739fd8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f973a198 <col:20>
| `-OptimizeNoneAttr 0x5592f973a1f0 <col:30>
|-CXXMethodDecl 0x5592f973a298 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5592f973a338 <col:20>
| `-OptimizeNoneAttr 0x5592f973a390 <col:30>
|-CXXMethodDecl 0x5592f973a3e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5592f973a480 <col:20>
| `-OptimizeNoneAttr 0x5592f973a4d8 <col:30>
|-CXXMethodDecl 0x5592f973a520 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5592f973a5c0 <col:20>
| `-OptimizeNoneAttr 0x5592f973a618 <col:30>
|-CXXMethodDecl 0x5592f973a718 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5592f973a650 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5592f973a7c0 <col:20>
| `-OptimizeNoneAttr 0x5592f973a818 <col:30>
|-CXXMethodDecl 0x5592f973a9d8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5592f973a850 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5592f973a8c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f973aa88 <col:20>
| `-OptimizeNoneAttr 0x5592f973aae0 <col:30>
|-CXXMethodDecl 0x5592f973ab88 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5592f973aca8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5592f973adc8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5592f973ae68 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5592f973ae90 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5592f973afb8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5592f973b058 <col:20>
| `-OptimizeNoneAttr 0x5592f973b0b0 <col:30>
|-CXXMethodDecl 0x5592f973b158 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5592f973b1f8 <col:20>
| `-OptimizeNoneAttr 0x5592f973b250 <col:30>
|-AccessSpecDecl 0x5592f973b278 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5592f973b2a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5592f973b3a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5592f973b3f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f973b380 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5592f973b360 <col:14> 'int' 48
|-CXXMethodDecl 0x5592f973b458 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5592f973b4f8 <col:20>
| `-OptimizeNoneAttr 0x5592f973b550 <col:30>
|-CXXMethodDecl 0x5592f973b5c8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5592f973b668 <col:20>
| `-OptimizeNoneAttr 0x5592f973b6c0 <col:30>
|-CXXMethodDecl 0x5592f973b788 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5592f973b6f8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5592f973b928 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5592f973bac8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5592f973b9d8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5592f973bb70 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5592f973bc70 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592f973c020 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973bc50 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f973bc30 <col:9> 'int' 0
| |-EnumConstantDecl 0x5592f973bd00 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592f973c038 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973bce0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5592f973bcc0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5592f973bd90 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592f973c050 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973bd70 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5592f973bd50 <col:14> 'int' 2
| |-EnumConstantDecl 0x5592f973be20 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592f973c068 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973be00 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5592f973bde0 <col:14> 'int' 3
| |-EnumConstantDecl 0x5592f973beb0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592f973c080 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973be90 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5592f973be70 <col:13> 'int' 4
| |-EnumConstantDecl 0x5592f973bf40 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5592f973c098 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973bf20 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5592f973bf00 <col:13> 'int' 5
| `-EnumConstantDecl 0x5592f973bfd0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5592f973c0b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f973bfb0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5592f973bf90 <col:14> 'int' 6
|-CXXMethodDecl 0x5592f973c118 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5592f973c1b8 <col:20>
| `-OptimizeNoneAttr 0x5592f973c210 <col:30>
|-CXXMethodDecl 0x5592f973c308 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5592f973c248 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5592f973c3b0 <col:20>
| `-OptimizeNoneAttr 0x5592f973c408 <col:30>
|-CXXMethodDecl 0x5592f973c478 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5592f973c5a0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5592f973c718 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5592f973c650 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5592f973c7e0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5592f973c8a8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5592f973c9e8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5592f973c958 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5592f973ca90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5592f973cb90 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5592f973cd90 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973cb70 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f973cb50 <col:23> 'int' 0
| |-EnumConstantDecl 0x5592f973cc20 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5592f973cda8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973cc00 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5592f973cbe0 <col:45> 'int' 4
| |-EnumConstantDecl 0x5592f973ccb0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5592f973cdc0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973cc90 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f973cc70 <col:24> 'int' 0
| `-EnumConstantDecl 0x5592f973cd40 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5592f973cdd8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f973cd20 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5592f973cd00 <col:47> 'int' 16
|-CXXMethodDecl 0x5592f973ce38 <line:431:5, col:36> col:22 used dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5592f973cfa8 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5592f973cee8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5592f973d050 <col:20>
| `-OptimizeNoneAttr 0x5592f973d0a8 <col:30>
|-CXXMethodDecl 0x5592f973d0f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5592f9750a80 <col:18, col:36>
|   `-ReturnStmt 0x5592f9750a70 <col:20, col:33>
|     `-ImplicitCastExpr 0x5592f9750a58 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5592f9750a38 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5592f9750a08 <col:27> '<bound member function type>' ->xanno 0x5592f973b158
|           `-CXXThisExpr 0x5592f97509f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5592f973d1f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5592f9750b90 <col:30, col:48>
|   `-ReturnStmt 0x5592f9750b80 <col:32, col:45>
|     `-ImplicitCastExpr 0x5592f9750b68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5592f9750b48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5592f9750b18 <col:39> '<bound member function type>' ->xanno 0x5592f973afb8
|           `-CXXThisExpr 0x5592f9750b08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5592f973d2d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5592f9750d28 <col:24, col:50>
|   `-ReturnStmt 0x5592f9750d18 <col:26, col:47>
|     `-UnaryOperator 0x5592f9750d00 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592f9750ce0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5592f9750cc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592f9750c78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5592f9745f98
|         |   `-CXXMemberCallExpr 0x5592f9750c58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5592f9750c28 <col:34> '<bound member function type>' ->xanno 0x5592f973b158
|         |       `-CXXThisExpr 0x5592f9750c18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5592f9750ca8 <col:46> 'int' 0
|-CXXMethodDecl 0x5592f973d3e0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5592f9750ef8 <col:36, col:62>
|   `-ReturnStmt 0x5592f9750ee8 <col:38, col:59>
|     `-UnaryOperator 0x5592f9750ed0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592f9750eb0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5592f9750e98 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592f9750e10 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5592f9745f98
|         |   `-CXXMemberCallExpr 0x5592f9750df0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5592f9750dc0 <col:46> '<bound member function type>' ->xanno 0x5592f973afb8
|         |       `-CXXThisExpr 0x5592f9750db0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5592f9750e40 <col:58> 'int' 0
|-CXXMethodDecl 0x5592f973d4f8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5592f9751090 <col:26, col:53>
|   `-ReturnStmt 0x5592f9751080 <col:28, col:50>
|     `-UnaryOperator 0x5592f9751068 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592f9751048 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5592f9751030 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592f9750fe0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5592f9746298
|         |   `-CXXMemberCallExpr 0x5592f9750fc0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5592f9750f90 <col:36> '<bound member function type>' ->xanno 0x5592f973b158
|         |       `-CXXThisExpr 0x5592f9750f80 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5592f9751010 <col:49> 'int' 0
|-CXXMethodDecl 0x5592f973d618 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5592f9751268 <col:38, col:65>
|   `-ReturnStmt 0x5592f9751258 <col:40, col:62>
|     `-UnaryOperator 0x5592f9751240 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5592f9751220 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5592f9751208 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592f9751178 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5592f9746298
|         |   `-CXXMemberCallExpr 0x5592f9751158 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5592f9751128 <col:48> '<bound member function type>' ->xanno 0x5592f973afb8
|         |       `-CXXThisExpr 0x5592f9751118 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5592f97511a8 <col:61> 'int' 0
|-CXXMethodDecl 0x5592f973d7c8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5592f973d6d0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5592f9751938 <col:34, line:463:5>
|   |-ParenExpr 0x5592f9751780 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5592f9751750 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5592f97513b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9751388 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f97512d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f97512c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9751280 <col:23> 'int' lvalue ParmVar 0x5592f973d6d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f97512a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9751368 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9751338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f97512f8 <col:33> 'int' lvalue ParmVar 0x5592f973d6d0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5592f9751350 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5592f9751318 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5592f9751418 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f97513f8 <col:56> 'int' 0
|   |   `-CallExpr 0x5592f97516b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5592f9751698 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9751678 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f97516f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9751508 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5592f9751708 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9751538 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9751720 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9751570 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5592f9751738 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9751660 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9751648 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9751608 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5592f9751928 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5592f9751910 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5592f97518f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5592f97518c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5592f9751870 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5592f9745f98
|         |   `-CXXMemberCallExpr 0x5592f9751850 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5592f9751820 <col:9> '<bound member function type>' ->xanno 0x5592f973afb8
|         |       `-CXXThisExpr 0x5592f9751810 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5592f97518d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5592f97518a0 <col:21> 'int' lvalue ParmVar 0x5592f973d6d0 'i' 'int'
|-CXXMethodDecl 0x5592f973da18 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5592f973d888 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5592f973d900 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5592f9751fc8 <col:40, line:472:5>
|   |-ParenExpr 0x5592f9751de0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5592f9751db0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9751a90 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9751a60 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f97519b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9751998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9751958 <col:23> 'int' lvalue ParmVar 0x5592f973d888 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9751978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9751a40 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9751a10 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f97519d0 <col:33> 'int' lvalue ParmVar 0x5592f973d888 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5592f9751a28 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5592f97519f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5592f9751af0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9751ad0 <col:56> 'int' 0
|   |   `-CallExpr 0x5592f9751d10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5592f9751cf8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9751cd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9751d50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9751b60 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5592f9751d68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9751b90 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9751d80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9751bc8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5592f9751d98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9751cc0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9751ca8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9751c68 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5592f9751fa8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5592f9751f50 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5592f9751f20 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5592f9751ed0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5592f9745f98
|     | |   `-CXXMemberCallExpr 0x5592f9751eb0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5592f9751e80 <col:2> '<bound member function type>' ->xanno 0x5592f973b158
|     | |       `-CXXThisExpr 0x5592f9751e70 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5592f9751f38 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5592f9751f00 <col:14> 'int' lvalue ParmVar 0x5592f973d888 'i' 'int'
|     `-ImplicitCastExpr 0x5592f9751f90 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9751f70 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5592f973d900 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5592f973dbd8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5592f973dae0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5592f9752748 <col:36, line:485:5>
|   |-ParenExpr 0x5592f97524b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9752480 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9752160 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9752130 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9752040 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9752028 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9751fe8 <col:23> 'int' lvalue ParmVar 0x5592f973dae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9752008 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9752110 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f97520f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9752060 <col:33> 'int' lvalue ParmVar 0x5592f973dae0 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f97520d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f97520c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9752080 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f97520a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592f97521c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f97521a0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f97523e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f97523c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f97523a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9752420 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9752230 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592f9752438 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9752268 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9752450 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f97522a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5592f9752468 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9752390 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9752378 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9752338 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5592f9752738 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5592f9752720 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5592f9752708 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592f97526d8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5592f9752678 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592f9752648 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f97525c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5592f9745e70
|             |   `-CXXMemberCallExpr 0x5592f97525a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592f9752570 <col:61> '<bound member function type>' ->xanno 0x5592f973afb8
|             |       `-CXXThisExpr 0x5592f9752560 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592f9752660 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592f97525f0 <col:74> 'int' lvalue ParmVar 0x5592f973dae0 'i' 'int'
|-CXXMethodDecl 0x5592f973de28 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5592f973dc98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592f973dd10 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5592f9752e98 <col:42, line:500:5>
|   |-ParenExpr 0x5592f9752c30 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9752c00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f97528e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f97528b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f97527c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f97527a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9752768 <col:23> 'int' lvalue ParmVar 0x5592f973dc98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9752788 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9752890 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9752878 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f97527e0 <col:33> 'int' lvalue ParmVar 0x5592f973dc98 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9752858 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9752840 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9752800 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f9752820 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592f9752940 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9752920 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f9752b60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f9752b48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9752b28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9752ba0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f97529b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592f9752bb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f97529e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9752bd0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9752a20 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5592f9752be8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9752b10 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9752af8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9752ab8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5592f9752e78 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5592f9752e28 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592f9752df8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5592f9752da0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592f9752d70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592f9752d20 <col:48, col:57> 'char [48]' lvalue ->c 0x5592f9745e70
|     |     |   `-CXXMemberCallExpr 0x5592f9752d00 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592f9752cd0 <col:48> '<bound member function type>' ->xanno 0x5592f973b158
|     |     |       `-CXXThisExpr 0x5592f9752cc0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592f9752d88 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592f9752d50 <col:61> 'int' lvalue ParmVar 0x5592f973dc98 'i' 'int'
|     `-ImplicitCastExpr 0x5592f9752e60 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9752e40 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5592f973dd10 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5592f973dfe8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5592f973def0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5592f97535f8 <col:35, line:513:5>
|   |-ParenExpr 0x5592f9753308 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f97532d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9753030 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9753000 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9752f10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9752ef8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9752eb8 <col:23> 'int' lvalue ParmVar 0x5592f973def0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9752ed8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9752fe0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9752fc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9752f30 <col:33> 'int' lvalue ParmVar 0x5592f973def0 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9752fa8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9752f90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9752f50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f9752f70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592f9753090 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9753070 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f9753238 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f9753220 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9753200 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9753278 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9753100 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592f9753290 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9753138 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f97532a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9753170 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5592f97532c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f97531e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f97531d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9753190 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5592f97535e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5592f97535d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5592f97535b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592f9753588 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5592f9753500 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592f97534d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f9753480 <col:60, col:69> 'char const[48]' lvalue ->c 0x5592f9745e70
|             |   `-CXXMemberCallExpr 0x5592f9753460 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592f9753430 <col:60> '<bound member function type>' ->xanno 0x5592f973afb8
|             |       `-CXXThisExpr 0x5592f9753420 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592f97534e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592f97534b0 <col:73> 'int' lvalue ParmVar 0x5592f973def0 'i' 'int'
|-CXXMethodDecl 0x5592f973e238 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5592f973e0a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592f973e120 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5592f9753d18 <col:41, line:528:5>
|   |-ParenExpr 0x5592f9753aa0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9753a70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9753790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9753760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9753670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9753658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9753618 <col:23> 'int' lvalue ParmVar 0x5592f973e0a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9753638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9753740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9753728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9753690 <col:33> 'int' lvalue ParmVar 0x5592f973e0a8 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9753708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f97536f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f97536b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f97536d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5592f97537f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f97537d0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f97539d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f97539b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9753998 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9753a10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9753860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5592f9753a28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9753898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9753a40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f97538d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5592f9753a58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9753980 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9753968 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9753928 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5592f9753cf8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5592f9753ca8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592f9753c78 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5592f9753c20 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592f9753be0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592f9753b90 <col:47, col:56> 'char [48]' lvalue ->c 0x5592f9745e70
|     |     |   `-CXXMemberCallExpr 0x5592f9753b70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592f9753b40 <col:47> '<bound member function type>' ->xanno 0x5592f973b158
|     |     |       `-CXXThisExpr 0x5592f9753b30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592f9753bf8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592f9753bc0 <col:60> 'int' lvalue ParmVar 0x5592f973e0a8 'i' 'int'
|     `-ImplicitCastExpr 0x5592f9753ce0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9753cc0 <col:65> 'int16_t':'short' lvalue ParmVar 0x5592f973e120 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5592f973e3f8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5592f973e300 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5592f97543e8 <col:36, line:541:5>
|   |-ParenExpr 0x5592f9754188 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9754158 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9753eb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9753e80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9753d90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9753d78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9753d38 <col:23> 'int' lvalue ParmVar 0x5592f973e300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9753d58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9753e60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9753e48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9753db0 <col:33> 'int' lvalue ParmVar 0x5592f973e300 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9753e28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9753e10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9753dd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f9753df0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5592f9753f10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9753ef0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f97540b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f97540a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9754080 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f97540f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9753f80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5592f9754110 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9753fb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9754128 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9753ff0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5592f9754140 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9754068 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9754050 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9754010 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5592f97543d8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5592f97543c0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5592f97543a8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592f9754378 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5592f9754320 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592f97542f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f97542a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5592f9745e70
|             |   `-CXXMemberCallExpr 0x5592f9754280 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592f9754250 <col:61> '<bound member function type>' ->xanno 0x5592f973afb8
|             |       `-CXXThisExpr 0x5592f9754240 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592f9754308 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592f97542d0 <col:74> 'int' lvalue ParmVar 0x5592f973e300 'i' 'int'
|-CXXMethodDecl 0x5592f973e5c8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5592f973e4b8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5592f973e530 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5592f973e678 <col:20>
| `-OptimizeNoneAttr 0x5592f973e6d0 <col:30>
|-CXXMethodDecl 0x5592f973e808 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5592f973e710 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5592f9754ab8 <col:35, line:562:5>
|   |-ParenExpr 0x5592f9754858 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9754828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9754580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9754550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9754460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9754448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9754408 <col:23> 'int' lvalue ParmVar 0x5592f973e710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9754428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9754530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9754518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9754480 <col:33> 'int' lvalue ParmVar 0x5592f973e710 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f97544f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f97544e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f97544a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f97544c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5592f97545e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f97545c0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f9754788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f9754770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9754750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f97547c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9754650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5592f97547e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9754688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f97547f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f97546c0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5592f9754810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9754738 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9754720 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f97546e0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5592f9754aa8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5592f9754a90 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5592f9754a78 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592f9754a48 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5592f97549f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592f97549c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f9754970 <col:60, col:69> 'char const[48]' lvalue ->c 0x5592f9745e70
|             |   `-CXXMemberCallExpr 0x5592f9754950 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592f9754920 <col:60> '<bound member function type>' ->xanno 0x5592f973afb8
|             |       `-CXXThisExpr 0x5592f9754910 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592f97549d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592f97549a0 <col:73> 'int' lvalue ParmVar 0x5592f973e710 'i' 'int'
|-CXXMethodDecl 0x5592f973ea18 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5592f973e8c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592f973e940 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5592f9755198 <col:41, line:577:5>
|   |-ParenExpr 0x5592f9754f28 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9754ef8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9754c50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9754c20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9754b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9754b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9754ad8 <col:23> 'int' lvalue ParmVar 0x5592f973e8c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9754af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9754c00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f9754be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9754b50 <col:33> 'int' lvalue ParmVar 0x5592f973e8c8 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9754bc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9754bb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9754b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f9754b90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5592f9754cb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9754c90 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f9754e58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f9754e40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9754e20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9754e98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9754d20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5592f9754eb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9754d58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9754ec8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9754d90 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5592f9754ee0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9754e08 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9754df0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9754db0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5592f9755178 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5592f9755128 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592f97550f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5592f9755098 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592f9755068 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592f9755018 <col:47, col:56> 'char [48]' lvalue ->c 0x5592f9745e70
|     |     |   `-CXXMemberCallExpr 0x5592f9754ff8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592f9754fc8 <col:47> '<bound member function type>' ->xanno 0x5592f973b158
|     |     |       `-CXXThisExpr 0x5592f9754fb8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592f9755080 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592f9755048 <col:60> 'int' lvalue ParmVar 0x5592f973e8c8 'i' 'int'
|     `-ImplicitCastExpr 0x5592f9755160 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9755140 <col:65> 'int32_t':'int' lvalue ParmVar 0x5592f973e940 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5592f973ebd8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5592f973eae0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5592f97558c8 <col:36, line:591:5>
|   |-ParenExpr 0x5592f9755608 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f97555d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9755330 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9755300 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9755210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f97551f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f97551b8 <col:23> 'int' lvalue ParmVar 0x5592f973eae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f97551d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f97552e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f97552c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9755230 <col:33> 'int' lvalue ParmVar 0x5592f973eae0 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f97552a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9755290 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9755250 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f9755270 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5592f9755390 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9755370 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f9755538 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f9755520 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9755500 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9755578 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9755400 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5592f9755590 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9755438 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f97555a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9755470 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5592f97555c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f97554e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f97554d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9755490 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5592f97558b8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5592f97558a0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5592f9755888 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592f9755858 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5592f97557d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592f97557a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f9755750 <col:61, col:70> 'char const[48]' lvalue ->c 0x5592f9745e70
|             |   `-CXXMemberCallExpr 0x5592f9755730 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592f9755700 <col:61> '<bound member function type>' ->xanno 0x5592f973afb8
|             |       `-CXXThisExpr 0x5592f97556f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592f97557b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592f9755780 <col:74> 'int' lvalue ParmVar 0x5592f973eae0 'i' 'int'
|-CXXMethodDecl 0x5592f973ee28 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5592f973ec98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592f973ed10 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5592f9755fa8 <col:42, line:606:5>
|   |-ParenExpr 0x5592f9755d38 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5592f9755d08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9755a60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9755a30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9755940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9755928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f97558e8 <col:23> 'int' lvalue ParmVar 0x5592f973ec98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9755908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9755a10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5592f97559f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9755960 <col:33> 'int' lvalue ParmVar 0x5592f973ec98 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f97559d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f97559c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9755980 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5592f97559a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5592f9755ac0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9755aa0 <col:60> 'int' 0
|   |   `-CallExpr 0x5592f9755c68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5592f9755c50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9755c30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9755ca8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9755b30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5592f9755cc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9755b68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9755cd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9755ba0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5592f9755cf0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9755c18 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9755c00 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9755bc0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5592f9755f88 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5592f9755f38 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592f9755f08 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5592f9755ea8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592f9755e78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592f9755e28 <col:48, col:57> 'char [48]' lvalue ->c 0x5592f9745e70
|     |     |   `-CXXMemberCallExpr 0x5592f9755e08 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592f9755dd8 <col:48> '<bound member function type>' ->xanno 0x5592f973b158
|     |     |       `-CXXThisExpr 0x5592f9755dc8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592f9755e90 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592f9755e58 <col:61> 'int' lvalue ParmVar 0x5592f973ec98 'i' 'int'
|     `-ImplicitCastExpr 0x5592f9755f70 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5592f9755f50 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5592f973ed10 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5592f973efc0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5592f973eef0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5592f9756818 <col:33, line:620:5>
|   |-ParenExpr 0x5592f9756590 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5592f9756560 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5592f97561b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f9756180 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9756020 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9756008 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9755fc8 <col:23> 'int' lvalue ParmVar 0x5592f973eef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9755fe8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f9756160 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5592f9756148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f9756040 <col:33> 'int' lvalue ParmVar 0x5592f973eef0 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9756128 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9756110 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f9756060 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5592f97560e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5592f97560d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5592f9756098 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5592f9756210 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f97561f0 <col:79> 'int' 0
|   |   `-CallExpr 0x5592f97564c0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5592f97564a8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9756488 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9756500 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f97562f8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5592f9756518 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9756340 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9756530 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9756378 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5592f9756548 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9756470 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9756458 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9756418 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5592f9756808 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5592f97567f0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5592f97567d8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5592f97567a8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5592f9756720 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5592f97566f0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5592f97566a0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5592f9745e70
|             |   `-CXXMemberCallExpr 0x5592f9756680 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5592f9756650 <col:67> '<bound member function type>' ->xanno 0x5592f973afb8
|             |       `-CXXThisExpr 0x5592f9756640 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5592f9756708 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5592f97566d0 <col:80> 'int' lvalue ParmVar 0x5592f973eef0 'i' 'int'
|-CXXMethodDecl 0x5592f973f1d8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5592f973f080 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5592f973f100 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5592f9757040 <col:45, line:635:5>
|   |-ParenExpr 0x5592f9756d88 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5592f9756d58 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5592f9756a20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5592f97569f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5592f9756890 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5592f9756878 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5592f9756838 <col:23> 'int' lvalue ParmVar 0x5592f973f080 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5592f9756858 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5592f97569d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5592f97569b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5592f97568b0 <col:33> 'int' lvalue ParmVar 0x5592f973f080 'i' 'int'
|   |   |     `-BinaryOperator 0x5592f9756998 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5592f9756980 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5592f97568d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5592f973b3a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5592f9756958 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5592f9756940 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5592f9756908 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5592f9756a80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5592f9756a60 <col:79> 'int' 0
|   |   `-CallExpr 0x5592f9756cb8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5592f9756ca0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f9756c80 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5592f9756cf8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9756af0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5592f9756d10 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5592f9756b38 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5592f9756d28 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5592f9756b70 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5592f9756d40 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5592f9756c68 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5592f9756c50 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5592f9756c08 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5592f9757020 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5592f9756f88 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5592f9756f58 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5592f9756ef8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5592f9756ec8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5592f9756e78 <col:54, col:63> 'char [48]' lvalue ->c 0x5592f9745e70
|     |     |   `-CXXMemberCallExpr 0x5592f9756e58 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5592f9756e28 <col:54> '<bound member function type>' ->xanno 0x5592f973b158
|     |     |       `-CXXThisExpr 0x5592f9756e18 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5592f9756ee0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5592f9756ea8 <col:67> 'int' lvalue ParmVar 0x5592f973f080 'i' 'int'
|     `-CXXConstCastExpr 0x5592f9756ff0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5592f9756fd8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5592f9756fa0 <col:91> 'const void *' lvalue ParmVar 0x5592f973f100 'x' 'const void *'
|-CXXMethodDecl 0x5592f973f2a8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5592f97570c8 <col:34, line:640:5>
|   `-ReturnStmt 0x5592f97570b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5592f97570a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5592f9757070 <col:16> 'Packet *' lvalue ->_data_packet 0x5592f9746a28
|         `-CXXThisExpr 0x5592f9757060 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5592f973f3e8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5592f973f358 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f9750188 <col:46> 'bool' true
|-CXXMethodDecl 0x5592f973f568 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5592f973f4a0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5592f973f610 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5592f973fdc0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5592f973f710 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fe30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973f6f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5592f973f6d0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5592f9734870 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5592f973f7a0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fe48 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973f780 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5592f973f760 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5592f9734900 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5592f973f830 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fe60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973f810 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f973f7f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x5592f973f8c0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fe78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973f8a0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5592f973f880 <col:19> 'int' 16
| |-EnumConstantDecl 0x5592f973f950 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fe90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973f930 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5592f973f910 <col:21> 'int' 16
| |-EnumConstantDecl 0x5592f973f9e0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fea8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973f9c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5592f973f9a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5592f973fa70 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fec0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973fa50 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5592f973fa30 <col:19> 'int' EnumConstant 0x5592f973f8c0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5592f973fb00 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fed8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973fae0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5592f973fac0 <col:19> 'int' EnumConstant 0x5592f973f9e0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5592f973fbd0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973fef0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973fbb0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5592f973fb90 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5592f973fb50 <col:23> 'int' EnumConstant 0x5592f973fb00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5592f973fb70 <col:40> 'int' 2
| |-EnumConstantDecl 0x5592f973fca0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5592f973ff08 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f973fc80 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5592f973fc60 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5592f973fc20 <col:23> 'int' EnumConstant 0x5592f973fb00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5592f973fc40 <col:40> 'int' 4
| `-EnumConstantDecl 0x5592f973fd70 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5592f973ff20 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f973fd50 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5592f973fd30 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5592f973fcf0 <col:23> 'int' EnumConstant 0x5592f973fb00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5592f973fd10 <col:40> 'int' 8
|-CXXMethodDecl 0x5592f973ff60 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5592f9740000 <col:68> "" ""
|-CXXMethodDecl 0x5592f9740098 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5592f9740138 <col:45> "" ""
|-CXXMethodDecl 0x5592f97401d0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5592f9740270 <col:57> "" ""
|-CXXMethodDecl 0x5592f9740308 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5592f97403a8 <col:45> "" ""
|-CXXMethodDecl 0x5592f9740440 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5592f97404e0 <col:57> "" ""
|-CXXMethodDecl 0x5592f9740570 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5592f9740610 <col:51> "" ""
|-CXXMethodDecl 0x5592f97406a0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5592f9740740 <col:63> "" ""
|-CXXMethodDecl 0x5592f97407d0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5592f9740870 <col:53> "" ""
|-CXXMethodDecl 0x5592f9740900 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5592f97409a0 <col:65> "" ""
|-CXXMethodDecl 0x5592f9740ab8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5592f9740a28 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5592f9740b60 <col:61> "" ""
|-CXXMethodDecl 0x5592f9740cf8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5592f9740be8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5592f9740c60 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5592f9740da8 <col:67> "" ""
|-CXXMethodDecl 0x5592f9740ec0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5592f9740e30 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5592f9740f68 <col:63> "" ""
|-CXXMethodDecl 0x5592f9741100 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5592f9740ff0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592f9741068 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5592f97411b0 <col:69> "" ""
|-CXXMethodDecl 0x5592f97412c8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5592f9741238 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5592f9741370 <col:63> "" ""
|-CXXMethodDecl 0x5592f9743a48 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5592f9743938 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592f97439b0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f9743af8 <col:69> "" ""
|-CXXMethodDecl 0x5592f9743c10 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5592f9743b80 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5592f9743cb8 <col:62> "" ""
|-CXXMethodDecl 0x5592f9743e50 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5592f9743d40 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592f9743db8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5592f9743f00 <col:68> "" ""
|-CXXMethodDecl 0x5592f9744018 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5592f9743f88 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5592f97440c0 <col:63> "" ""
|-CXXMethodDecl 0x5592f9744258 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5592f9744148 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5592f97441c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5592f9744308 <col:69> "" ""
|-CXXMethodDecl 0x5592f9744398 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5592f9744438 <col:64> "" ""
|-CXXMethodDecl 0x5592f97444c8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5592f9744568 <col:52> "" ""
|-CXXMethodDecl 0x5592f97445f8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5592f9744698 <col:67> "" ""
|-CXXMethodDecl 0x5592f9744728 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5592f97447c8 <col:55> "" ""
|-CXXMethodDecl 0x5592f97448e0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5592f9744850 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5592f9744988 <col:58> "" ""
|-CXXMethodDecl 0x5592f9744b20 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5592f9744a10 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592f9744a88 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5592f9744bd0 <col:62> "" ""
|-CXXMethodDecl 0x5592f9744ce8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5592f9744c58 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5592f9744d90 <col:58> "" ""
|-CXXMethodDecl 0x5592f9744f28 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5592f9744e18 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592f9744e90 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5592f9744fd8 <col:62> "" ""
|-CXXMethodDecl 0x5592f97450f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5592f9745060 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5592f9745198 <col:60> "" ""
|-CXXMethodDecl 0x5592f9745330 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5592f9745220 <col:34> col:37 'int'
| |-ParmVarDecl 0x5592f9745298 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5592f97453e0 <col:64> "" ""
|-CXXMethodDecl 0x5592f97454f8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5592f9745468 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5592f97455a0 <col:58> "" ""
|-CXXMethodDecl 0x5592f9745738 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5592f9745628 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592f97456a0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5592f97457e8 <col:62> "" ""
|-CXXMethodDecl 0x5592f9745900 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5592f9745870 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5592f97459a8 <col:59> "" ""
|-CXXMethodDecl 0x5592f9745b40 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5592f9745a30 <col:33> col:36 'int'
| |-ParmVarDecl 0x5592f9745aa8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f9745bf0 <col:63> "" ""
|-AccessSpecDecl 0x5592f9745c60 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5592f9745c88 prev 0x5592f973ae90 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f9745d80 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5592f9745e70 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5592f9745f98 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5592f9746118 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5592f9746298 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5592f9746418 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5592f9757248 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5592f9757ab8 <col:11>
| |-CXXDestructorDecl 0x5592f9757320 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5592f9757458 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5592f9757458
| | `-ParmVarDecl 0x5592f9757568 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5592f9757608 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592f9757608
| | `-ParmVarDecl 0x5592f9757718 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5592f975a4d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592f975a5e8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5592f975a868 <col:11>
| |   `-ReturnStmt 0x5592f975a858 <col:11>
| |     `-UnaryOperator 0x5592f975a840 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5592f975a830 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5592f975a658 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5592f975a658
|   `-ParmVarDecl 0x5592f975a768 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5592f9746480 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f9746598 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5592f9746638 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5592f97466a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5592f9746708 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5592f9746770 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5592f97467d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5592f9746890 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5592f97468f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5592f9746950 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5592f9757158 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5592f9746638 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5592f9757ac8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5592f9757b20 <col:12>
| |-CXXConstructorDecl 0x5592f9757788 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5592f9757788
| | `-ParmVarDecl 0x5592f9757898 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5592f9757938 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5592f9757938
| | `-ParmVarDecl 0x5592f9757a48 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5592f9759bc0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5592f97469c8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5592f9746a28 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5592f9746a90 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5592f9746af8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5592f9746b60 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5592f9746bc8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5592f9746c28 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5592f9746c88 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5592f9746cf0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5592f9746d78 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5592f97469c8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5592f97570f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5592f9746c28 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5592f9757b30 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5592f9757b90 <col:21, line:755:5>
|-CXXConstructorDecl 0x5592f9746f18 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5592f9746e58 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5592f9747010 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5592f97471f8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5592f9747100 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5592f97474c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5592f97472b0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5592f9747328 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5592f97473a0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97476e8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5592f9747598 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5592f9747610 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5592f974fcc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5592f97477a8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5592f9747820 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5592f9747898 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5592f974fe20 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5592f974fd90 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f974ff68 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5592f974fed8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5592f9750060 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct IPRoute
         0 |   class IPAddress addr
         0 |     uint32_t _addr
         4 |   class IPAddress mask
         4 |     uint32_t _addr
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int32_t port
        16 |   int32_t extra
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9785fd8 <../elements/ip/iproutetable.hh:163:1, line:186:1> line:163:8 referenced struct IPRoute definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5592f97860f8 <col:1, col:8> col:8 implicit referenced struct IPRoute
|-FieldDecl 0x5592f9786198 <line:164:5, col:15> col:15 referenced addr 'IPAddress'
|-FieldDecl 0x5592f97861f8 <line:165:5, col:15> col:15 referenced mask 'IPAddress'
|-FieldDecl 0x5592f9786258 <line:166:5, col:15> col:15 referenced gw 'IPAddress'
|-FieldDecl 0x5592f97862b8 <line:167:5, col:13> col:13 referenced port 'int32_t':'int'
|-FieldDecl 0x5592f9786318 <line:168:5, col:13> col:13 extra 'int32_t':'int'
|-CXXConstructorDecl 0x5592f97863d0 <line:170:5, col:28> col:5 IPRoute 'void ()'
| |-CXXCtorInitializer Field 0x5592f9786198 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x5592f9787500 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5592f97861f8 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x5592f9787550 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5592f9786258 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x5592f97875a0 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5592f97862b8 'port' 'int32_t':'int'
| | `-UnaryOperator 0x5592f97874a0 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x5592f9787480 <col:23> 'int' 1
| `-CompoundStmt 0x5592f9787610 <col:26, col:28>
|-CXXConstructorDecl 0x5592f97866e8 <line:171:5, line:172:42> line:171:5 IPRoute 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x5592f9786488 <col:13, col:23> col:23 used a 'IPAddress'
| |-ParmVarDecl 0x5592f9786500 <col:26, col:36> col:36 used m 'IPAddress'
| |-ParmVarDecl 0x5592f9786578 <col:39, col:49> col:49 used g 'IPAddress'
| |-ParmVarDecl 0x5592f97865f8 <col:52, col:56> col:56 used p 'int'
| |-CXXCtorInitializer Field 0x5592f9786198 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x5592f9787770 <line:172:7, col:13> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5592f9787660 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5592f9787620 <col:12> 'IPAddress' lvalue ParmVar 0x5592f9786488 'a' 'IPAddress'
| |-CXXCtorInitializer Field 0x5592f97861f8 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x5592f9787820 <col:16, col:22> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5592f9787808 <col:21> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5592f97877c8 <col:21> 'IPAddress' lvalue ParmVar 0x5592f9786500 'm' 'IPAddress'
| |-CXXCtorInitializer Field 0x5592f9786258 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x5592f97878d0 <col:25, col:29> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5592f97878b8 <col:28> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5592f9787878 <col:28> 'IPAddress' lvalue ParmVar 0x5592f9786578 'g' 'IPAddress'
| |-CXXCtorInitializer Field 0x5592f97862b8 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x5592f9787968 <col:37> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x5592f9787928 <col:37> 'int' lvalue ParmVar 0x5592f97865f8 'p' 'int'
| `-CompoundStmt 0x5592f97879c8 <col:40, col:42>
|-CXXMethodDecl 0x5592f97867f8 <line:174:5, col:69> col:17 real 'bool () const' inline
| `-CompoundStmt 0x5592f9787ae8 <col:30, col:69>
|   `-ReturnStmt 0x5592f9787ad8 <col:32, col:57>
|     `-BinaryOperator 0x5592f9787ab8 <col:39, col:57> 'bool' '>'
|       |-ImplicitCastExpr 0x5592f9787aa0 <col:39> 'int32_t':'int' <LValueToRValue>
|       | `-MemberExpr 0x5592f97879e8 <col:39> 'const int32_t':'const int' lvalue ->port 0x5592f97862b8
|       |   `-CXXThisExpr 0x5592f97879d8 <col:39> 'const IPRoute *' implicit this
|       `-CStyleCastExpr 0x5592f9787a78 <col:46, col:57> 'int32_t':'int' <NoOp>
|         `-ImplicitCastExpr 0x5592f9787a60 <col:56, col:57> 'int32_t':'int' <IntegralCast> part_of_explicit_cast
|           `-UnaryOperator 0x5592f9787a38 <col:56, col:57> 'unsigned int' prefix '-'
|             `-IntegerLiteral 0x5592f9787a18 <col:57> 'unsigned int' 2147483648
|-CXXMethodDecl 0x5592f97868b8 <line:175:5, col:76> col:17 kill 'void ()' inline
| `-CompoundStmt 0x5592f9788310 <col:24, col:76>
|   |-ExprWithCleanups 0x5592f9788118 <col:26, col:33> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x5592f97880e0 <col:26, col:33> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x5592f97880c8 <col:31> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5592f9787eb8 <col:31> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x5592f9787cd8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x5592f9787b10 <col:26> 'IPAddress' lvalue ->addr 0x5592f9786198
|   |   | `-CXXThisExpr 0x5592f9787b00 <col:26> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5592f9787ea0 <col:33> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x5592f9787e70 <col:33> 'IPAddress' 'void (unsigned int)'
|   |       `-ImplicitCastExpr 0x5592f9787e58 <col:33> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x5592f9787b40 <col:33> 'int' 0
|   |-ExprWithCleanups 0x5592f9788248 <col:36, col:43> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x5592f9788210 <col:36, col:43> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x5592f97881f8 <col:41> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5592f97881d8 <col:41> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x5592f9787cd8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x5592f9788140 <col:36> 'IPAddress' lvalue ->mask 0x5592f97861f8
|   |   | `-CXXThisExpr 0x5592f9788130 <col:36> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5592f97881c0 <col:43> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x5592f9788190 <col:43> 'IPAddress' 'void (unsigned int)'
|   |       `-IntegerLiteral 0x5592f9788170 <col:43> 'unsigned int' 4294967295
|   `-BinaryOperator 0x5592f97882f0 <col:56, col:64> 'int32_t':'int' lvalue '='
|     |-MemberExpr 0x5592f9788270 <col:56> 'int32_t':'int' lvalue ->port 0x5592f97862b8
|     | `-CXXThisExpr 0x5592f9788260 <col:56> 'IPRoute *' implicit this
|     `-ImplicitCastExpr 0x5592f97882d8 <col:63, col:64> 'int32_t':'int' <IntegralCast>
|       `-UnaryOperator 0x5592f97882c0 <col:63, col:64> 'unsigned int' prefix '-'
|         `-IntegerLiteral 0x5592f97882a0 <col:64> 'unsigned int' 2147483648
|-CXXMethodDecl 0x5592f97869f8 <line:176:5, col:39> col:17 contains 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5592f9786968 <col:26, col:36> col:36 a 'IPAddress'
|-CXXMethodDecl 0x5592f9786b98 <line:177:5, col:44> col:17 contains 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5592f9786ad8 <col:26, col:41> col:41 r 'const IPRoute &'
|-CXXMethodDecl 0x5592f9786ce0 <line:178:5, col:47> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5592f9786c50 <col:34, col:44> col:44 m 'IPAddress'
|-CXXMethodDecl 0x5592f9786e28 <line:179:5, col:52> col:17 mask_as_specific 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5592f9786d98 <col:34, col:49> col:49 r 'const IPRoute &'
|-CXXMethodDecl 0x5592f9786f70 <line:180:5, col:41> col:17 match 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5592f9786ee0 <col:23, col:38> col:38 r 'const IPRoute &'
|-CXXMethodDecl 0x5592f9787040 <line:181:5, col:64> col:9 prefix_len 'int () const'
| `-CompoundStmt 0x5592f97883d8 <col:28, col:64>
|   `-ReturnStmt 0x5592f97883c8 <col:30, col:61>
|     `-CXXMemberCallExpr 0x5592f97883a8 <col:37, col:61> 'int'
|       `-MemberExpr 0x5592f9788378 <col:37, col:42> '<bound member function type>' .mask_to_prefix_len 0x5592f9571010
|         `-MemberExpr 0x5592f9788348 <col:37> 'const IPAddress' lvalue ->mask 0x5592f97861f8
|           `-CXXThisExpr 0x5592f9788338 <col:37> 'const IPRoute *' implicit this
|-CXXMethodDecl 0x5592f9787238 <line:183:5, col:51> col:18 used unparse 'StringAccum &(StringAccum &, bool) const'
| |-ParmVarDecl 0x5592f97870f0 <col:26, col:37> col:38 'StringAccum &'
| `-ParmVarDecl 0x5592f9787168 <col:40, col:45> col:45 tabs 'bool'
|-CXXMethodDecl 0x5592f9787308 <line:184:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5592f97873c8 <line:185:5, col:72> col:12 unparse_addr 'String () const'
| `-CompoundStmt 0x5592f9788590 <col:33, col:72>
|   `-ReturnStmt 0x5592f9788580 <col:35, col:69>
|     `-ExprWithCleanups 0x5592f9788568 <col:42, col:69> 'String'
|       `-CXXConstructExpr 0x5592f9788538 <col:42, col:69> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5592f9788520 <col:42, col:69> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5592f9788500 <col:42, col:69> 'String' (CXXTemporary 0x5592f9788500)
|             `-CXXMemberCallExpr 0x5592f97884a0 <col:42, col:69> 'String'
|               |-MemberExpr 0x5592f9788430 <col:42, col:47> '<bound member function type>' .unparse_with_mask 0x5592f9571c08
|               | `-MemberExpr 0x5592f9788400 <col:42> 'const IPAddress' lvalue ->addr 0x5592f9786198
|               |   `-CXXThisExpr 0x5592f97883f0 <col:42> 'const IPRoute *' implicit this
|               `-CXXConstructExpr 0x5592f97884c8 <col:65> 'IPAddress' 'void (const IPAddress &) noexcept'
|                 `-MemberExpr 0x5592f9788470 <col:65> 'const IPAddress' lvalue ->mask 0x5592f97861f8
|                   `-CXXThisExpr 0x5592f9788460 <col:65> 'const IPRoute *' implicit this
|-CXXConstructorDecl 0x5592f97bc5d0 <line:163:8> col:8 implicit constexpr IPRoute 'void (const IPRoute &)' inline default trivial noexcept-unevaluated 0x5592f97bc5d0
| `-ParmVarDecl 0x5592f97bc6e8 <col:8> col:8 'const IPRoute &'
`-CXXConstructorDecl 0x5592f97bc788 <col:8> col:8 implicit constexpr IPRoute 'void (IPRoute &&)' inline default trivial noexcept-unevaluated 0x5592f97bc788
  `-ParmVarDecl 0x5592f97bc898 <col:8> col:8 'IPRoute &&'

Layout: <CGRecordLayout
  LLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  NonVirtualBaseLLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97d1970 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f97d1a88 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x5592f97d1b58 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x5592f97d1bb8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x5592f97d1c20 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x5592f97d1ca8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x5592f97d1f10 <col:16, line:46:5>
|   |-BinaryOperator 0x5592f97d1e58 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x5592f97d1d78 <col:9> 'TaskLink *' lvalue ->_prev 0x5592f97d1b58
|   | | `-CXXThisExpr 0x5592f97d1d68 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x5592f97d1e40 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x5592f97d1e20 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x5592f97d1db8 <col:17> 'TaskLink *' lvalue ->_next 0x5592f97d1bb8
|   |     | `-CXXThisExpr 0x5592f97d1da8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x5592f97d1e08 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x5592f97d1de8 <col:25> 'int' 0
|   `-BinaryOperator 0x5592f97d1ef0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x5592f97d1e88 <col:9> 'unsigned int' lvalue ->_pass 0x5592f97d1c20
|     | `-CXXThisExpr 0x5592f97d1e78 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x5592f97d1ed8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5592f97d1eb8 <col:17> 'int' 0
|-CXXConstructorDecl 0x5592f98481c8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5592f98481c8
| `-ParmVarDecl 0x5592f98482d8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5592f9848378 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5592f9848378
| `-ParmVarDecl 0x5592f9848488 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5592f9848678 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5592f9848678
|-CXXMethodDecl 0x5592f98495f8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5592f98495f8
| `-ParmVarDecl 0x5592f9849708 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5592f9849778 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5592f9849778
  `-ParmVarDecl 0x5592f9849888 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97d8e58 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5592f97d8f88 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x5592f97d8fe8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x5592f97d9048 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5592f984fb08 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5592f984fbe0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f984fbe0
|-CXXConstructorDecl 0x5592f984fe98 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5592f984fe98
| `-ParmVarDecl 0x5592f984ffa8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5592f9850048 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5592f9850048
  `-ParmVarDecl 0x5592f9850158 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97d8ca8 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5592f97d8dc8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x5592f97d8e58 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5592f97d8f88 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x5592f97d8fe8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x5592f97d9048 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5592f984fb08 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5592f984fbe0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f984fbe0
| |-CXXConstructorDecl 0x5592f984fe98 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5592f984fe98
| | `-ParmVarDecl 0x5592f984ffa8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5592f9850048 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5592f9850048
|   `-ParmVarDecl 0x5592f9850158 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x5592f97d9108 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x5592f97d9168 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x5592f97d9108 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5592f97d8f88 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x5592f97d91c0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x5592f97d9108 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5592f97d8fe8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x5592f97d9218 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x5592f97d9108 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5592f97d9048 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x5592f97d9270 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f984fa18 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592f9850378 <col:11>
|-CXXConstructorDecl 0x5592f984fce8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5592f984fce8
| `-ParmVarDecl 0x5592f984fdf8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5592f98501f8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5592f98501f8
  `-ParmVarDecl 0x5592f9850308 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9705f20 prev 0x5592f96fcd60 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f9706018 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x5592f97060b8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x5592f970ce80 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5592f970d268 <col:11>
|-CXXConstructorDecl 0x5592f970cf60 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f970d048 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5592f970d9b0 <col:11>
|-CXXConstructorDecl 0x5592f970d0e8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f970d1f8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x5592f970f208 <col:11>
|-CXXDestructorDecl 0x5592f970e518 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592f94150c8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f94151d8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5592f9415aa0 <col:11>
|   `-ReturnStmt 0x5592f9415a90 <col:11>
|     `-UnaryOperator 0x5592f9415a78 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5592f9415a68 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x5592f9415248 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5592f9415358 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x5592f97cfc70 <col:11>
    `-ReturnStmt 0x5592f97cfc60 <col:11>
      `-UnaryOperator 0x5592f97cfc48 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5592f97cfc38 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f96fbf18 prev 0x5592f96fbc28 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f96fc010 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5592f96fc0a0 <col:19, col:25> col:19 public
|-TypedefDecl 0x5592f96fc0d8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x5592f93612a0 'int32_t' sugar
|   |-Typedef 0x5592f9272328 'int32_t'
|   `-TypedefType 0x5592f924b510 '__int32_t' sugar
|     |-Typedef 0x5592f924b128 '__int32_t'
|     `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f96fc140 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x5592f9361460 'int64_t' sugar
|   |-Typedef 0x5592f9272390 'int64_t'
|   `-TypedefType 0x5592f924b630 '__int64_t' sugar
|     |-Typedef 0x5592f924b208 '__int64_t'
|     `-BuiltinType 0x5592f92095a0 'long'
|-EnumDecl 0x5592f96fc198 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x5592f96fc310 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x5592f96fc2f0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x5592f96fc2c8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5592f96fc2b0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x5592f96fc280 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x5592f96fc408 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x5592f96fc3e8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x5592f96fc3c0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x5592f96fc3a8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x5592f96fc380 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x5592f96fc360 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x5592f96fc458 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x5592f96fc560 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcab0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc540 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x5592f96fc520 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x5592f96fc5f0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcac8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc5d0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5592f96fc5b0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x5592f96fc680 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcae0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc660 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5592f96fc640 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5592f96fc710 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcaf8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc6f0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x5592f96fc6d0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x5592f96fc7a0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcb10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc780 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x5592f96fc760 <col:25> 'int' 1000
| |-EnumConstantDecl 0x5592f96fc830 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcb28 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc810 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x5592f96fc7f0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x5592f96fc8c0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcb40 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc8a0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x5592f96fc880 <col:26> 'int' EnumConstant 0x5592f96fc560 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5592f96fc990 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5592f96fcb58 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f96fc970 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x5592f96fc950 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x5592f96fc910 <col:27> 'int' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x5592f96fc930 <col:44> 'int' EnumConstant 0x5592f96fc830 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x5592f96fca60 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x5592f96fcb70 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f96fca40 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x5592f96fca20 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5592f96fc9e0 <col:27> 'int' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x5592f96fca00 <col:44> 'int' EnumConstant 0x5592f96fc710 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x5592f96fcb88 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5592f96fcc90 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5592f96fcce0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f96fcc70 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x5592f96fcc50 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x5592f96fcd08 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5592f9360ed0 'uninitialized_type'
|   `-CXXRecord 0x5592f9360e38 'uninitialized_type'
|-CXXRecordDecl 0x5592f96fcd60 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x5592f96fce70 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970d278 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f970d398 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x5592f970d350 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5592f970d2e0 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f970d2d0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5592f970d310 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5592f970d380 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5592f970d330 <col:19> 'int' 0
|-CXXConstructorDecl 0x5592f96fd0b8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x5592f96fcf30 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5592f96fcfa8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5592f9708bb0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9708b90 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970d3b0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f970d500 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x5592f970d488 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x5592f970d418 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f970d408 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5592f970d4d0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5592f970d4b8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5592f970d448 <col:16> 'long' lvalue ParmVar 0x5592f96fcf30 'sec' 'long'
|     `-ImplicitCastExpr 0x5592f970d4e8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5592f970d468 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f96fcfa8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f96fd318 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5592f96fd188 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x5592f96fd200 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5592f9708be8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9708bc8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970d518 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f970d650 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x5592f970d5f0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x5592f970d580 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f970d570 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5592f970d620 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f970d5b0 <col:16> 'int' lvalue ParmVar 0x5592f96fd188 'sec' 'int'
|     `-ImplicitCastExpr 0x5592f970d638 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5592f970d5d0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f96fd200 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f96fd578 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x5592f96fd3e8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x5592f96fd460 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5592f9708c20 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9708c00 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970d668 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f970d7b8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x5592f970d740 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x5592f970d6d0 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f970d6c0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5592f970d788 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5592f970d770 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x5592f970d700 <col:16> 'unsigned long' lvalue ParmVar 0x5592f96fd3e8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x5592f970d7a0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5592f970d720 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f96fd460 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f96fe710 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x5592f96fd648 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x5592f96fd6c0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5592f9708c58 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9708c38 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970d7d0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f970d920 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x5592f970d8a8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x5592f970d838 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f970d828 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5592f970d8f0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x5592f970d8d8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5592f970d868 <col:16> 'unsigned int' lvalue ParmVar 0x5592f96fd648 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x5592f970d908 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x5592f970d888 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f96fd6c0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5592f96fe870 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x5592f96fe7e0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x5592f96fea08 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x5592f96fe948 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x5592f96fec38 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x5592f96feb40 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5592f96fede8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x5592f96fed28 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970d9c0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x5592f970d938 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x5592f96fed28 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5592f970da20 <col:19, line:214:5>
|-CXXConstructorDecl 0x5592f96fefb8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x5592f96feef8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970da30 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5592f970dae0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5592f970dab8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x5592f970da88 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x5592f96feef8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5592f96ff1a8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x5592f96ff120 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5592f96fbcc0 'Timestamp'
|   | `-CXXRecord 0x5592f96fbf18 'Timestamp'
|   `-ParenType 0x5592f96ff0c0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5592f96ff090 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x5592f96fc260 'Timestamp::seconds_type' sugar
|         |-Typedef 0x5592f96fc0d8 'seconds_type'
|         `-TypedefType 0x5592f93612a0 'int32_t' sugar
|           |-Typedef 0x5592f9272328 'int32_t'
|           `-TypedefType 0x5592f924b510 '__int32_t' sugar
|             |-Typedef 0x5592f924b128 '__int32_t'
|             `-BuiltinType 0x5592f9209580 'int'
|-CXXConversionDecl 0x5592f96ff2e8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5592f96ff3b8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5592f970dbe8 <col:37, line:231:5>
|   `-ReturnStmt 0x5592f970dbd8 <line:227:9, col:23>
|     `-BinaryOperator 0x5592f970dbb8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x5592f970db88 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5592f970db38 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5592f97060b8
|       |   `-MemberExpr 0x5592f970db08 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5592f9707068
|       |     `-CXXThisExpr 0x5592f970daf8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5592f970dba0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x5592f970db68 <col:23> 'int' 0
|-CXXMethodDecl 0x5592f96ff478 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x5592f96ff538 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f96ff5f8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f96ff6b8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f96ff778 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x5592f96ff8e8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x5592f96ff828 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x5592f96ffa30 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5592f96ff9a0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f96ffaf8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5592f96ffb98 <col:54> "" ""
|-CXXMethodDecl 0x5592f96ffc28 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5592f96ffcc8 <col:54> "" ""
|-CXXMethodDecl 0x5592f96ffd58 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5592f96ffdf8 <col:54> "" ""
|-CXXMethodDecl 0x5592f96ffef8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x5592f96fffc8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x5592f97000f8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x5592f97001f0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x5592f9700328 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5592f970de00 <col:39, line:271:5>
|   `-ReturnStmt 0x5592f970ddf0 <line:267:9, col:61>
|     `-CallExpr 0x5592f970dd90 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5592f970dd78 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f970dc00 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5592f9707398 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5592f970ddc0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5592f970dc60 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5592f97060b8
|       |   `-MemberExpr 0x5592f970dc30 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5592f9707068
|       |     `-CXXThisExpr 0x5592f970dc20 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5592f970ddd8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5592f970dd00 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5592f970dcd0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5592f970dc90 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5592f970dce8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5592f970dcb0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc830 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f97003e8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5592f970dfc0 <col:39, line:279:5>
|   `-ReturnStmt 0x5592f970dfb0 <line:275:9, col:61>
|     `-CallExpr 0x5592f970df50 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x5592f970df38 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f970de18 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5592f9707398 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5592f970df80 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5592f970de78 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x5592f97060b8
|       |   `-MemberExpr 0x5592f970de48 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x5592f9707068
|       |     `-CXXThisExpr 0x5592f970de38 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5592f970df98 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x5592f970df18 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5592f970dee8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5592f970dea8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5592f970df00 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5592f970dec8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc710 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f97004a8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5592f970e158 <col:39, line:287:5>
|   `-ReturnStmt 0x5592f970e148 <line:283:9, col:53>
|     `-BinaryOperator 0x5592f970e128 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x5592f970e0f8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x5592f970e018 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x5592f97060b8
|       |   `-MemberExpr 0x5592f970dfe8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x5592f9707068
|       |     `-CXXThisExpr 0x5592f970dfd8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5592f970e110 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5592f970e0d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5592f970e0b8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5592f970e088 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f970e048 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc560 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f970e0a0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f970e068 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f9700598 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5592f970f3f0 <col:40, line:293:5>
|   |-DeclStmt 0x5592f970e2a0 <line:291:9, col:48>
|   | `-VarDecl 0x5592f970e180 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5592f970e280 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5592f970e228 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5592f970e1f8 <col:22> '<bound member function type>' ->subsec 0x5592f96ff538
|   |     |   `-CXXThisExpr 0x5592f970e1e8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5592f970e268 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5592f970e248 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc990 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5592f970f3e0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x5592f970f3c8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5592f970f398 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f970f380 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5592f970f360 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5592f970f330 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5592f970f0c8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5592f970f0b0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5592f970e2b8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5592f970e180 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5592f970f2d0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5592f970f2b8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5592f970f288 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5592f970f0e0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5592f970f050 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5592f970f038 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5592f970efe8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5592f96fbe68 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5592f970ef88 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5592f970e2e8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5592f970e2d8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5592f970efd0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5592f970efb8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5592f970e7a8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5592f970e310 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5592f970e3a0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5592f970e370 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5592f970e330 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc990 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5592f970e388 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5592f970e350 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5592f970e180 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5592f970f300 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5592f970f098 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5592f970f088 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5592f9700658 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5592f970f948 <col:40, line:302:5>
|   |-DeclStmt 0x5592f970f540 <line:297:9, col:48>
|   | `-VarDecl 0x5592f970f420 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x5592f970f520 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x5592f970f4c8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x5592f970f498 <col:22> '<bound member function type>' ->subsec 0x5592f96ff538
|   |     |   `-CXXThisExpr 0x5592f970f488 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x5592f970f508 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x5592f970f4e8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fca60 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5592f970f938 <line:298:9, col:70>
|     `-ExprWithCleanups 0x5592f970f920 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x5592f970f8f0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f970f8d8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x5592f970f8b8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x5592f970f888 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5592f970f7b0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5592f970f798 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5592f970f558 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x5592f970f420 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5592f970f828 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5592f970f810 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x5592f970f7e0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5592f970f7c8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x5592f970f738 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x5592f970f720 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5592f970f700 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5592f96fbe68 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x5592f970f6a0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5592f970f588 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5592f970f578 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5592f970f6e8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5592f970f6d0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x5592f970f660 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x5592f970f5b0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x5592f970f640 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x5592f970f610 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x5592f970f5d0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fca60 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x5592f970f628 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x5592f970f5f0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x5592f970f420 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x5592f970f858 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5592f970f780 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x5592f970f770 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x5592f9700718 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5592f970f9d0 <col:40, line:306:5>
|   `-ReturnStmt 0x5592f970f9c0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5592f970f990 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x5592f970f978 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5592f970f968 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x5592f97008b8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x5592f97007c8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x5592f9700a88 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5592f9700990 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x5592f9700b78 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5592f9700ce8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x5592f9700c28 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x5592f970fb18 <col:56, line:320:5>
|   `-ReturnStmt 0x5592f970fb08 <line:319:9, col:32>
|     `-ExprWithCleanups 0x5592f970faf0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5592f970fac0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f970faa8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5592f970fa68 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5592f970fa38 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5592f970f9f8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f9700c28 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x5592f970fa50 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5592f970fa18 <col:31> 'int' 0
|-CXXMethodDecl 0x5592f9700f28 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5592f9700da0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9700e18 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f970fce8 <col:72, line:326:5>
|   `-ReturnStmt 0x5592f970fcd8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5592f970fcc0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5592f970fc90 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f970fc78 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5592f970fc38 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5592f970fc20 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5592f970fb40 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f9700da0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5592f970fbe0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5592f970fbc8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5592f970fb60 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5592f9705810 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5592f970fc08 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f970fb80 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9700e18 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97010d8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5592f9700fe8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5592f97103b0 <col:56, line:337:5>
|   |-DeclStmt 0x5592f970ffe8 <line:329:9, col:51>
|   | `-VarDecl 0x5592f970fd10 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5592f970ffd0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5592f970ffa0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5592f970ff88 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5592f970ff70 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5592f970ff40 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5592f970ff28 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5592f970ff10 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5592f970fe00 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5592f97101a0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5592f9710050 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5592f97060b8
|   | | `-MemberExpr 0x5592f9710020 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5592f9707068
|   | |   `-DeclRefExpr 0x5592f9710000 <col:9> 'Timestamp' lvalue Var 0x5592f970fd10 't' 'Timestamp'
|   | `-BinaryOperator 0x5592f9710180 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5592f9710150 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f9710080 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5592f9700fe8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5592f9710168 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5592f9710130 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5592f9710110 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5592f97100e0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5592f97100a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5592f97100f8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5592f97100c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc830 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5592f9710398 <line:336:9, col:16>
|     `-CXXConstructExpr 0x5592f9710368 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5592f9710350 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5592f9710330 <col:16> 'Timestamp' lvalue Var 0x5592f970fd10 't' 'Timestamp'
|-CXXMethodDecl 0x5592f97012a0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5592f9701190 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9701208 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f9710568 <col:72, line:343:5>
|   `-ReturnStmt 0x5592f9710558 <line:342:9, col:51>
|     `-ExprWithCleanups 0x5592f9710540 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5592f9710510 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f97104f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5592f97104b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5592f97104a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5592f97103e8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f9701190 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5592f9710460 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5592f9710448 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5592f9710408 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5592f9705958 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5592f9710488 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f9710428 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9701208 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97013f0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5592f9701360 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5592f97109b0 <col:56, line:354:5>
|   |-DeclStmt 0x5592f9710758 <line:346:9, col:51>
|   | `-VarDecl 0x5592f9710590 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5592f9710740 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5592f9710710 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5592f97106f8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5592f97106e0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5592f97106b0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5592f9710698 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5592f9710680 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5592f9710650 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5592f9710910 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5592f97107c0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5592f97060b8
|   | | `-MemberExpr 0x5592f9710790 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5592f9707068
|   | |   `-DeclRefExpr 0x5592f9710770 <col:9> 'Timestamp' lvalue Var 0x5592f9710590 't' 'Timestamp'
|   | `-BinaryOperator 0x5592f97108f0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x5592f97108c0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f97107f0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5592f9701360 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5592f97108d8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x5592f97108a0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x5592f9710880 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5592f9710850 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5592f9710810 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x5592f9710868 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5592f9710830 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc710 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5592f9710998 <line:353:9, col:16>
|     `-CXXConstructExpr 0x5592f9710968 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5592f9710950 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5592f9710930 <col:16> 'Timestamp' lvalue Var 0x5592f9710590 't' 'Timestamp'
|-CXXMethodDecl 0x5592f97015b8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5592f97014a8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9701520 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f9710b68 <col:72, line:360:5>
|   `-ReturnStmt 0x5592f9710b58 <line:359:9, col:51>
|     `-ExprWithCleanups 0x5592f9710b40 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5592f9710b10 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f9710af8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5592f9710ab8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5592f9710aa0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5592f97109e8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f97014a8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5592f9710a60 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5592f9710a48 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5592f9710a08 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5592f9705aa0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x5592f9710a88 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f9710a28 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9701520 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f9701708 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5592f9701678 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5592f971d4d8 <col:56, line:371:5>
|   |-DeclStmt 0x5592f9710d58 <line:363:9, col:51>
|   | `-VarDecl 0x5592f9710b90 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5592f9710d40 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5592f9710d10 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5592f9710cf8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5592f9710ce0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5592f9710cb0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5592f9710c98 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x5592f9710c80 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x5592f9710c50 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5592f971d438 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5592f9710dc0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x5592f97060b8
|   | | `-MemberExpr 0x5592f9710d90 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x5592f9707068
|   | |   `-DeclRefExpr 0x5592f9710d70 <col:9> 'Timestamp' lvalue Var 0x5592f9710b90 't' 'Timestamp'
|   | `-CallExpr 0x5592f971d3d8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5592f971d3c0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5592f9710df0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x5592f9707398 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5592f971d408 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5592f9710e10 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x5592f9701678 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5592f971d420 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5592f971d3a0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5592f971d370 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x5592f9710e30 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc560 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5592f971d388 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x5592f9710e50 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5592f971d4c0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5592f971d490 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5592f971d478 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5592f971d458 <col:16> 'Timestamp' lvalue Var 0x5592f9710b90 't' 'Timestamp'
|-CXXMethodDecl 0x5592f97017f8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5592f971d618 <col:39, line:377:5>
|   `-ReturnStmt 0x5592f971d608 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5592f971d5f0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5592f971d5c0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f971d5a8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5592f971d568 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5592f971d510 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5592f971d550 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5592f971d530 <col:29> 'int' 1
|-CXXMethodDecl 0x5592f97018b8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5592f971d6f8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5592f971d6b0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5592f971d640 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f971d630 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5592f971d670 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5592f971d6e0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5592f971d690 <col:19> 'int' 0
|-CXXMethodDecl 0x5592f9701ab8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5592f9701968 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f97019e0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5592f9708c90 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9708c70 <col:60> 'int' 0
| `-CompoundStmt 0x5592f971d8f0 <col:63, line:395:5>
|   `-BinaryOperator 0x5592f971d8d0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5592f971d750 <col:9, col:12> 'int64_t':'long' lvalue .x 0x5592f97060b8
|     | `-MemberExpr 0x5592f971d720 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x5592f9707068
|     |   `-CXXThisExpr 0x5592f971d710 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5592f971d8b0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5592f971d840 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5592f971d7e0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5592f971d7c8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5592f971d7b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5592f971d780 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f9701968 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5592f971d828 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5592f971d808 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5592f971d898 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5592f971d880 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5592f971d860 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97019e0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f9701c88 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5592f9701b78 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9701bf0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971da48 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5592f971da00 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5592f971d918 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f971d908 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5592f971da30 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f971d948 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f9701b78 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5592f971d9c0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5592f971d9a8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f971d968 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5592f9705958 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5592f971d9e8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5592f971d988 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9701bf0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f9701e58 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5592f9701d48 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9701dc0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971dba0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5592f971db58 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5592f971da70 <col:9> '<bound member function type>' ->assign 0x5592f9701ab8
|     | `-CXXThisExpr 0x5592f971da60 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5592f971db88 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5592f971daa0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5592f9701d48 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5592f971db18 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5592f971db00 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f971dac0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x5592f9705aa0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5592f971db40 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5592f971dae0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9701dc0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f9702028 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5592f9701f18 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9701f90 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x5592f9708cc8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5592f9708ca8 <col:57> 'int' 0
| `-DeprecatedAttr 0x5592f97020d8 <col:75> "" ""
|-CXXMethodDecl 0x5592f9702268 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5592f9702158 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f97021d0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f9702318 <col:74> "" ""
|-CXXMethodDecl 0x5592f97024a8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x5592f9702398 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5592f9702410 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f9702558 <col:74> "" ""
|-CXXMethodDecl 0x5592f97025e8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x5592f9702688 <col:42> "" ""
|-CXXMethodDecl 0x5592f9704ec0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5592f9704da0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5592f9704e20 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x5592f9704f90 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x5592f9705050 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x5592f97050f0 <col:20>
| `-OptimizeNoneAttr 0x5592f9705148 <col:30>
|-CXXMethodDecl 0x5592f9705190 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x5592f9705250 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x5592f9705310 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5592f97053d0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x5592f9705490 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x5592f9705550 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x5592f9705610 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5592f97056d0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x5592f9705810 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5592f9705780 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971dce8 <col:58, line:512:5>
|   `-ReturnStmt 0x5592f971dcd8 <line:511:9, col:53>
|     `-BinaryOperator 0x5592f971dcb8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5592f971dc88 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971dbb8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9705780 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5592f971dca0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5592f971dc68 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5592f971dc48 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5592f971dc18 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f971dbd8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f971dc30 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f971dbf8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc830 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f9705958 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5592f97058c8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971de30 <col:58, line:516:5>
|   `-ReturnStmt 0x5592f971de20 <line:515:9, col:53>
|     `-BinaryOperator 0x5592f971de00 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5592f971ddd0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971dd00 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97058c8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5592f971dde8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5592f971ddb0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5592f971dd90 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5592f971dd60 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f971dd20 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f971dd78 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f971dd40 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc710 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f9705aa0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5592f9705a10 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971df78 <col:58, line:520:5>
|   `-ReturnStmt 0x5592f971df68 <line:519:9, col:53>
|     `-BinaryOperator 0x5592f971df48 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5592f971df18 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971de48 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9705a10 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5592f971df30 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5592f971def8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5592f971ded8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5592f971dea8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f971de68 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc560 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f971dec0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f971de88 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f9705be8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5592f9705b58 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971e0c0 <col:60, line:524:5>
|   `-ReturnStmt 0x5592f971e0b0 <line:523:9, col:55>
|     `-BinaryOperator 0x5592f971e090 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5592f971e060 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971df90 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9705b58 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5592f971e078 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5592f971e040 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5592f971e020 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5592f971dff0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f971dfb0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f971e008 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f971dfd0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc830 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f9705d30 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5592f9705ca0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971e208 <col:60, line:528:5>
|   `-ReturnStmt 0x5592f971e1f8 <line:527:9, col:55>
|     `-BinaryOperator 0x5592f971e1d8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5592f971e1a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971e0d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9705ca0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5592f971e1c0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5592f971e188 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5592f971e168 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5592f971e138 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f971e0f8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f971e150 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f971e118 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc710 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x5592f9705e78 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x5592f9705de8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971e350 <col:60, line:532:5>
|   `-ReturnStmt 0x5592f971e340 <line:531:9, col:55>
|     `-BinaryOperator 0x5592f971e320 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5592f971e2f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971e220 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f9705de8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5592f971e308 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5592f971e2d0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5592f971e2b0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5592f971e280 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5592f971e240 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc560 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5592f971e298 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5592f971e260 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5592f96fc8c0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x5592f9705f20 prev 0x5592f96fcd60 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f9706018 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x5592f97060b8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x5592f970ce80 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5592f970d268 <col:11>
| |-CXXConstructorDecl 0x5592f970cf60 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592f970d048 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5592f970d9b0 <col:11>
| |-CXXConstructorDecl 0x5592f970d0e8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592f970d1f8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x5592f970f208 <col:11>
| |-CXXDestructorDecl 0x5592f970e518 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5592f94150c8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5592f94151d8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5592f9415aa0 <col:11>
| |   `-ReturnStmt 0x5592f9415a90 <col:11>
| |     `-UnaryOperator 0x5592f9415a78 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5592f9415a68 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x5592f9415248 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x5592f9415358 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x5592f97cfc70 <col:11>
|     `-ReturnStmt 0x5592f97cfc60 <col:11>
|       `-UnaryOperator 0x5592f97cfc48 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5592f97cfc38 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x5592f9706120 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x5592f9706220 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5592f9706420 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9706200 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5592f97061e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x5592f97062b0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5592f9706438 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9706290 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x5592f9706270 <col:23> 'int' 1
| |-EnumConstantDecl 0x5592f9706340 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x5592f9706450 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f9706320 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x5592f9706300 <col:23> 'int' 2
| `-EnumConstantDecl 0x5592f97063d0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x5592f9706468 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f97063b0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x5592f9706390 <col:27> 'int' 3
|-CXXMethodDecl 0x5592f97064a8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x5592f9706570 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x5592f9706778 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x5592f9706620 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x5592f97066a0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x5592f9708ce0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x5592f9706988 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x5592f9706838 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x5592f97068b0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x5592f9706a58 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x5592f9706b18 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x5592f9706c88 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x5592f9706bc8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x5592f9706d50 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5592f9706e10 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x5592f9706ed0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x5592f9706f90 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x5592f9707030 <line:670:3, col:10> col:3 private
|-FieldDecl 0x5592f9707068 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x5592f97070d8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5592f971e368 <col:27, line:684:5>
|-CXXMethodDecl 0x5592f9707198 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5592f971e378 <col:27, line:696:5>
|-CXXMethodDecl 0x5592f9707398 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5592f9707248 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5592f97072c0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971e500 <col:66, line:700:5>
|   `-ReturnStmt 0x5592f971e4f0 <line:699:9, col:31>
|     `-CallExpr 0x5592f971e490 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5592f971e478 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f971e428 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x5592f9589748 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5592f971e4c0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5592f971e3e8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x5592f9707248 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5592f971e4d8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5592f971e408 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97072c0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f9707708 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x5592f9707458 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x5592f97074d0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x5592f9707548 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x5592f97075c0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f971e850 <col:64, line:707:5>
|   |-DeclStmt 0x5592f971e590 <line:704:9, col:24>
|   | `-VarDecl 0x5592f971e528 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5592f971e7a0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5592f971e5a8 <col:9> 'int32_t':'int' lvalue ParmVar 0x5592f97074d0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5592f971e788 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5592f971e720 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5592f971e708 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5592f971e688 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x5592f958ea18 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5592f971e758 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5592f971e628 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x5592f9707548 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5592f971e770 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5592f971e648 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97075c0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5592f971e668 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5592f971e528 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5592f971e830 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5592f971e7c0 <col:9> 'int32_t':'int' lvalue ParmVar 0x5592f9707458 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5592f971e818 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5592f971e800 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5592f971e7e0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5592f971e528 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x5592f97079a8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x5592f97077d8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x5592f9707850 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x5592f97078c8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x5592f9707c48 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x5592f9707a70 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x5592f9707ae8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x5592f9707b60 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x5592f9707dd8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x5592f9707d10 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x5592f9707fd8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x5592f9707e90 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x5592f9707f08 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x5592f97082a8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x5592f97081e8 parent 0x5592f9209488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5592f9708098 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x5592f9708110 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5592f97084c8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x5592f9708408 parent 0x5592f9209488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5592f97082f8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x5592f9708370 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x5592f9708690 <line:719:5, col:57> col:29
| `-FunctionDecl 0x5592f97085d8 parent 0x5592f9209488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x5592f9708518 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x5592f9708918 <line:720:5, col:73> col:30
| `-FunctionDecl 0x5592f9708858 parent 0x5592f9209488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5592f9708708 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5592f9708780 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x5592f9708b38 <line:721:5, col:73> col:30
| `-FunctionDecl 0x5592f9708a78 parent 0x5592f9209488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x5592f9708968 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x5592f97089e0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x5592f970e3c0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f970e4a8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970ef18 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5592f970eed0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5592f9707068
| |     `-DeclRefExpr 0x5592f970eeb0 <col:7> 'const Timestamp' lvalue ParmVar 0x5592f970e4a8 '' 'const Timestamp &'
| `-CompoundStmt 0x5592f970ef78 <col:7>
|-CXXConstructorDecl 0x5592f970e628 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f970e738 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x5592f9707068 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5592f970f218 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5592f970f1c0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5592f9707068
| |     `-CXXStaticCastExpr 0x5592f970f190 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x5592f970f160 <col:7> 'Timestamp' lvalue ParmVar 0x5592f970e738 '' 'Timestamp &&'
| `-CompoundStmt 0x5592f970f278 <col:7>
|-CXXDestructorDecl 0x5592f970e7e8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5592f9414f18 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x5592f9415028 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x5592f9415b18 <col:7>
|   |-CXXMemberCallExpr 0x5592f9415ab8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x5592f94159f8 <col:7> '<bound member function type>' .operator= 0x5592f94150c8
|   | | `-MemberExpr 0x5592f9415908 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5592f9707068
|   | |   `-CXXThisExpr 0x5592f94158f8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x5592f94159c8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x5592f9707068
|   |   `-DeclRefExpr 0x5592f94159a8 <col:7> 'const Timestamp' lvalue ParmVar 0x5592f9415028 '' 'const Timestamp &'
|   `-ReturnStmt 0x5592f9415b08 <col:7>
|     `-UnaryOperator 0x5592f9415af0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5592f9415ae0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x5592f94153c8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5592f94154d8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x5592f97cfce8 <col:7>
    |-CXXMemberCallExpr 0x5592f97cfc88 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x5592f97cfbf0 <col:7> '<bound member function type>' .operator= 0x5592f9415248
    | | `-MemberExpr 0x5592f97cfac0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x5592f9707068
    | |   `-CXXThisExpr 0x5592f97cfab0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x5592f97cfbc0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x5592f9707068
    |   `-CXXStaticCastExpr 0x5592f97cfb90 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x5592f97cfb60 <col:7> 'Timestamp' lvalue ParmVar 0x5592f94154d8 '' 'Timestamp &&'
    `-ReturnStmt 0x5592f97cfcd8 <col:7>
      `-UnaryOperator 0x5592f97cfcc0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5592f97cfcb0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f97dd288 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x5592f97dd498 prev 0x5592f97dd288 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f97de8e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x5592f97de890 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x5592f97de870 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x5592f97de720 'type'
|     `-SubstTemplateTypeParmType 0x5592f97de540 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f97de090 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x5592f97ddfa8 'sized_array_memory'
|-FieldDecl 0x5592f97e6570 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5592f97e65c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f97e65f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|     `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e66b8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x5592f97e6680 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|       `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e6748 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5592f97e6710 'const TimerSet::heap_element &'
|   `-QualType 0x5592f97dd531 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|         `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e67d8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x5592f97e67a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|       `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e6898 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x5592f97e6860 'const TimerSet::heap_element *'
|   `-QualType 0x5592f97dd531 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|         `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e7700 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x5592f97e76b0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x5592f97e7690 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x5592f97e75c8 'type'
|     `-LValueReferenceType 0x5592f97e7590 'const TimerSet::heap_element &'
|       `-QualType 0x5592f97e7331 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x5592f97e7330 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x5592f94dbfa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94dbf48 'T'
|           `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|             `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e7768 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5592f97e6710 'const TimerSet::heap_element &'
|   `-QualType 0x5592f97dd531 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|         `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e77c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f97e7828 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x5592f97e67a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|       `-CXXRecord 0x5592f97dc400 'heap_element'
|-TypedefDecl 0x5592f97e7890 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x5592f97e6860 'const TimerSet::heap_element *'
|   `-QualType 0x5592f97dd531 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x5592f97dd530 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f97dc490 'TimerSet::heap_element'
|         `-CXXRecord 0x5592f97dc400 'heap_element'
|-EnumDecl 0x5592f97e78e8 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f97e79e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f97e79c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f97e7a68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f97e7cf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97e7b20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f97e7bc0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x5592f97e7fb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5592f97e7ea0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x5592f97e8278 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5592f97e8160 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5592f97e85c0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5592f97e84a0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x5592f97e88d0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5592f97e87b0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5592f97e8bc0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97e8a08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f97e8a80 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5592f97e8d18 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5592f97e8df8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97e8e50 <col:30> Inherited
|-CXXMethodDecl 0x5592f97e8e98 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x5592f97e8f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97e8fa0 <col:30> Inherited
|-CXXMethodDecl 0x5592f97e9068 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5592f97e9118 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97e9170 <col:30> Inherited
|-CXXMethodDecl 0x5592f97e91b8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5592f97e9268 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97e92c0 <col:30> Inherited
|-CXXMethodDecl 0x5592f97e9308 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5592f97e93b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97e9410 <col:30> Inherited
|-CXXMethodDecl 0x5592f97e9458 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5592f97e9508 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97e9560 <col:30> Inherited
|-CXXMethodDecl 0x5592f97e9588 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f97e9638 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f97e96e8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5592f97e98a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97e9798 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f97e9810 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5592f97e99f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f97e9968 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97e9ba8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x5592f97e9ab0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f97e9c60 <col:20>
| `-OptimizeNoneAttr 0x5592f97e9cb8 <col:30>
|-CXXMethodDecl 0x5592f97e9dd8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f97e9ce0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f97e9e90 <col:20>
| `-OptimizeNoneAttr 0x5592f97e9ee8 <col:30>
|-CXXMethodDecl 0x5592f97e9fa0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f97e9f10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97ea0e8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f97ea058 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97ea218 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5592f97ea348 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5592f97ea418 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x5592f97ea4e8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x5592f97ea628 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f97ea598 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97ea770 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f97ea6e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97ea8b8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f97ea828 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f97ea970 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f97eaa70 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f97ea9e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f97eab28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f97eabe8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x5592f97eace8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x5592f97eae98 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f97eada8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x5592f97eb688 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f97eaf50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x5592f97eb5e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x5592f97eb4e8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x5592f97eb768 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f97eb8b8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f97eb828 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5592f97eb970 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f97ebbb8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97eba30 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5592f97ebaa8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x5592f97ebd78 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x5592f97ebc88 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5592f97ebfc8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x5592f97ebe40 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x5592f97ebeb8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x5592f97ec088 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f97ec2e8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5592f97ec1f0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x5592f97ec3b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f97ec3b8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f97ec500 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x5592f97ec708 prev 0x5592f97ec500 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f97edc70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5592f97edc20 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x5592f97edc00 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x5592f97edab0 'type'
|     `-SubstTemplateTypeParmType 0x5592f97ed8d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f97ed420 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5592f97ed338 'sized_array_memory'
|-FieldDecl 0x5592f97f18a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5592f97f18f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f97f1928 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-PointerType 0x5592f976e150 'Timer *'
|     `-RecordType 0x5592f976d2a0 'Timer'
|       `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f19e8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x5592f97f19b0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f976e150 'Timer *'
|       `-RecordType 0x5592f976d2a0 'Timer'
|         `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f1aa8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x5592f97f1a70 'Timer *const &'
|   `-QualType 0x5592f97ec7a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f976e150 'Timer *'
|         `-RecordType 0x5592f976d2a0 'Timer'
|           `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f1b68 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x5592f97f1b30 'Timer **'
|   `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f976e150 'Timer *'
|       `-RecordType 0x5592f976d2a0 'Timer'
|         `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f1c28 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x5592f97f1bf0 'Timer *const *'
|   `-QualType 0x5592f97ec7a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f976e150 'Timer *'
|         `-RecordType 0x5592f976d2a0 'Timer'
|           `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f2800 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x5592f97f27b0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x5592f97f2790 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x5592f97f2720 'type'
|     `-SubstTemplateTypeParmType 0x5592f97f24e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5592f94dc6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94dc680 'T'
|       `-PointerType 0x5592f976e150 'Timer *'
|         `-RecordType 0x5592f976d2a0 'Timer'
|           `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f2868 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x5592f97f1a70 'Timer *const &'
|   `-QualType 0x5592f97ec7a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f976e150 'Timer *'
|         `-RecordType 0x5592f976d2a0 'Timer'
|           `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f28c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f97f2928 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x5592f97f1b30 'Timer **'
|   `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-PointerType 0x5592f976e150 'Timer *'
|       `-RecordType 0x5592f976d2a0 'Timer'
|         `-CXXRecord 0x5592f97c4858 'Timer'
|-TypedefDecl 0x5592f97f2990 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x5592f97f1bf0 'Timer *const *'
|   `-QualType 0x5592f97ec7a1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x5592f97ec7a0 'Timer *' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-PointerType 0x5592f976e150 'Timer *'
|         `-RecordType 0x5592f976d2a0 'Timer'
|           `-CXXRecord 0x5592f97c4858 'Timer'
|-EnumDecl 0x5592f97f29e8 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f97f2ae0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f97f2ac0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f97f2b68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f97f2df8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97f2c20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f97f2cc0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x5592f97f30b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5592f97f2fa0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x5592f97f3378 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5592f97f3260 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5592f97f36c0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5592f97f35a0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x5592f97f39d0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x5592f97f38b0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5592f97f3cc0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97f3b08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f97f3b80 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5592f97f3e18 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5592f97f3ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97f3f50 <col:30> Inherited
|-CXXMethodDecl 0x5592f97f3f98 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x5592f97f4048 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97f40a0 <col:30> Inherited
|-CXXMethodDecl 0x5592f97f4168 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5592f97f4218 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97f4270 <col:30> Inherited
|-CXXMethodDecl 0x5592f97f42b8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5592f97f4368 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97f43c0 <col:30> Inherited
|-CXXMethodDecl 0x5592f97f4408 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5592f97f44b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97f4510 <col:30> Inherited
|-CXXMethodDecl 0x5592f97f4558 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5592f97f4608 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f97f4660 <col:30> Inherited
|-CXXMethodDecl 0x5592f97f4688 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f97f4738 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f97f47e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f97f49a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97f4898 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f97f4910 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5592f97f4af8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f97f4a68 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97f4ca8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x5592f97f4bb0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f97f4d60 <col:20>
| `-OptimizeNoneAttr 0x5592f97f4db8 <col:30>
|-CXXMethodDecl 0x5592f97f4ed8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f97f4de0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f97f4fa8 <col:20>
| `-OptimizeNoneAttr 0x5592f97f5000 <col:30>
|-CXXMethodDecl 0x5592f97f50b8 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f97f5028 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97f5200 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f97f5170 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97f5338 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x5592f97f5468 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x5592f97f5538 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x5592f97f5608 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x5592f97f5748 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f97f56b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97f5890 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f97f5800 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f97f59d8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f97f5948 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f97f5a90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f97f5b90 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f97f5b00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f97f5c48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f97f5d08 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x5592f97f5e08 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x5592f97f5f88 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f97f5ec8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x5592f97f6748 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f97f6040 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x5592f97f66a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x5592f97f65a8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x5592f97f6828 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f97f6978 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f97f68e8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5592f97f6a30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f97f6c78 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f97f6af0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5592f97f6b68 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x5592f97f6e38 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x5592f97f6d48 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5592f97f7088 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x5592f97f6f00 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x5592f97f6f78 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x5592f97f7148 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f97f73a8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5592f97f72b0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x5592f97f7478 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f97f7478

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97c1290 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f97c13a8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x5592f97c1438 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x5592f97c14c0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x5592f97c15b0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5592f97c16b0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x5592f97c1770 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x5592f97c1830 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x5592f97c1958 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5592f97c1958
| `-ParmVarDecl 0x5592f97c1a68 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x5592f97f8228 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x5592f97f8228
  `-ParmVarDecl 0x5592f97f8338 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97db580 prev 0x5592f97cd778 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5592f97db678 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x5592f97db708 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5592f97db790 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x5592f97db888 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5592f97f86a0 <col:43, col:67>
|   `-ReturnStmt 0x5592f97f8690 <col:45, col:52>
|     `-CXXConstructExpr 0x5592f97f8660 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x5592f97f8630 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x5592f97dd070
|         `-CXXThisExpr 0x5592f97f8620 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5592f97db948 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x5592f97dbb50 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x5592f97db9f8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x5592f97dba70 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x5592f97dbc48 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x5592f97dbd10 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5592f97f8720 <col:39, col:67>
|   `-ReturnStmt 0x5592f97f8710 <col:41, col:48>
|     `-ImplicitCastExpr 0x5592f97f86f8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5592f97f86c8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x5592f97dd158
|         `-CXXThisExpr 0x5592f97f86b8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5592f97dbdd8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x5592f97f87a0 <col:35, col:59>
|   `-ReturnStmt 0x5592f97f8790 <col:37, col:44>
|     `-ImplicitCastExpr 0x5592f97f8778 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5592f97f8748 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x5592f97dd1c0
|         `-CXXThisExpr 0x5592f97f8738 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x5592f97dbf20 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x5592f97dbe90 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x5592f97dc068 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5592f97dbfd8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5592f97dc268 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x5592f97dc120 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x5592f97dc198 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x5592f97dc338 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5592f97dc3d8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x5592f97dc400 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f97dc518 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x5592f97dc5b8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x5592f97dc618 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x5592f97dc748 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x5592f97dc678 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x5592f97dc5b8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x5592f97f8878 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x5592f97f8820 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x5592f97f87f0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x5592f97c5ec8
|   |       `-ImplicitCastExpr 0x5592f97f8840 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x5592f97f87d8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x5592f97f87b8 <col:17> 'Timer *' lvalue ParmVar 0x5592f97dc678 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x5592f97dc618 't' 'Timer *'
|   | `-ImplicitCastExpr 0x5592f97f8910 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f97f88d0 <col:41> 'Timer *' lvalue ParmVar 0x5592f97dc678 't_' 'Timer *'
|   `-CompoundStmt 0x5592f97f8960 <col:45, line:44:2>
|-CXXRecordDecl 0x5592f97dc810 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f97dc928 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x5592f97dcb78 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x5592f97dc9f8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x5592f97dca70 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x5592f97f8a90 <col:71, line:49:2>
|     `-ReturnStmt 0x5592f97f8a80 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x5592f97f8a48 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x5592f97f8a30 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5592f97f8a10 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5592f972b4b8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x5592f97f8990 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x5592f97dc5b8
|         | `-DeclRefExpr 0x5592f97f8970 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x5592f97dc9f8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x5592f97f89e0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x5592f97dc5b8
|           `-DeclRefExpr 0x5592f97f89c0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x5592f97dca70 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x5592f97dcc40 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f97dcd58 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x5592f97dcf78 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x5592f97dcdf8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x5592f97dce70 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x5592f97f8c98 <col:63, line:54:2>
|     `-BinaryOperator 0x5592f97f8c78 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x5592f97f8b28 <col:6, col:12> 'int' lvalue ->_schedpos1 0x5592f97ccc18
|       | `-ImplicitCastExpr 0x5592f97f8b10 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x5592f97f8ae0 <col:6, col:9> 'Timer *' lvalue ->t 0x5592f97dc618
|       |     `-ImplicitCastExpr 0x5592f97f8ac8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x5592f97f8aa8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x5592f97dce70 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x5592f97f8c60 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x5592f97f8c40 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x5592f97f8be8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x5592f97f8bc8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x5592f97f8b98 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x5592f97f8b58 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x5592f97dce70 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x5592f97f8bb0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x5592f97f8b78 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x5592f97dcdf8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x5592f97f8c28 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x5592f97f8c08 <col:39> 'int' 1
|-FieldDecl 0x5592f97dd070 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x5592f97dd0e0 <col:44, col:53> aligned
|   `-ConstantExpr 0x5592f97dd0c0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x5592f97dd040 <col:52> 'int' 8
|-FieldDecl 0x5592f97dd158 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x5592f97dd1c0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x5592f97dd228 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x5592f97ec4a0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x5592f97f7560 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x5592f97f75c0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x5592f97f7620 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x5592f97f7680 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97f7770 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x5592f97f76e0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x5592f97f7838 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x5592f97f90f0 <col:29, line:81:5>
|   `-IfStmt 0x5592f97f90c8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x5592f97f8d80 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x5592f97f8d20 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x5592f97f8cf0 <col:6, col:18> '<bound member function type>' .size 0x5592f97e9588
|     |     `-ImplicitCastExpr 0x5592f97f8d68 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x5592f97f8cc0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5592f97ec4a0
|     |         `-CXXThisExpr 0x5592f97f8cb0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x5592f97f8f70 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x5592f97f8f58 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x5592f97f8f38 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x5592f9414f18 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x5592f97f8da8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5592f97dd070
|     | | `-CXXThisExpr 0x5592f97f8d98 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x5592f97f8f20 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x5592f97f8ef0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x5592f97dc5b8
|     |     `-CXXMemberCallExpr 0x5592f97f8ec8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x5592f97f8e98 <col:22, col:34> '<bound member function type>' .unchecked_at 0x5592f97ea628
|     |       | `-MemberExpr 0x5592f97f8de8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x5592f97ec4a0
|     |       |   `-CXXThisExpr 0x5592f97f8dd8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x5592f97f8e78 <col:47> 'int' 0
|     `-ExprWithCleanups 0x5592f97f90b0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x5592f97f9078 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x5592f97f9060 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5592f97f9040 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5592f94153c8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x5592f97f8fb8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x5592f97dd070
|         | `-CXXThisExpr 0x5592f97f8fa8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x5592f97f9028 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5592f97f8ff8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5592f97f7978 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x5592f97f78e8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x5592f97f7a40 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x5592f97f7b00 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x5592f97f7bc0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x5592f97f7cb0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x5592f97f7d18 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x5592f97f7d18
| `-ParmVarDecl 0x5592f97f7e28 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x5592f97f7ec8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x5592f97f7ec8
| `-ParmVarDecl 0x5592f97f7fd8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x5592f97f8078 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x5592f97f8078
| `-ParmVarDecl 0x5592f97f8188 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5592f97f83a8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5592f97f83a8
| `-ParmVarDecl 0x5592f97f84b8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x5592f97f8540 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x5592f97f8540

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9830f88 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x5592f9831198 prev 0x5592f9830f88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f9832270 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5592f9832220 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x5592f9832200 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x5592f98320b0 'type'
|     `-SubstTemplateTypeParmType 0x5592f97ed8d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f97ed420 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x5592f97ed338 'sized_array_memory'
|-FieldDecl 0x5592f9832370 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5592f98323c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f98323f8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-RecordType 0x5592f982efc0 'pollfd'
|     `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f98324b8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x5592f9832480 'pollfd &'
|   `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f982efc0 'pollfd'
|       `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f9832578 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x5592f9832540 'const pollfd &'
|   `-QualType 0x5592f9831231 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f982efc0 'pollfd'
|         `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f9832608 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x5592f98325d0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f982efc0 'pollfd'
|       `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f98326c8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x5592f9832690 'const pollfd *'
|   `-QualType 0x5592f9831231 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f982efc0 'pollfd'
|         `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f98332a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x5592f9833250 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x5592f9833230 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x5592f98331c0 'type'
|     `-SubstTemplateTypeParmType 0x5592f9832f80 'pollfd' sugar
|       |-TemplateTypeParmType 0x5592f94dc6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94dc680 'T'
|       `-RecordType 0x5592f982efc0 'pollfd'
|         `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f9833308 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x5592f9832540 'const pollfd &'
|   `-QualType 0x5592f9831231 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f982efc0 'pollfd'
|         `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f9833360 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f98333c8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x5592f98325d0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f982efc0 'pollfd'
|       `-CXXRecord 0x5592f982ef30 'pollfd'
|-TypedefDecl 0x5592f9833430 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x5592f9832690 'const pollfd *'
|   `-QualType 0x5592f9831231 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x5592f9831230 'pollfd' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f982efc0 'pollfd'
|         `-CXXRecord 0x5592f982ef30 'pollfd'
|-EnumDecl 0x5592f9833488 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f9833580 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f9833560 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f9833608 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f9833898 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98336c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9833760 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x5592f9833b58 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5592f9833a40 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x5592f9833e18 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5592f9833d00 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5592f9834160 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5592f9834040 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x5592f9834470 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5592f9834350 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5592f9834760 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98345a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f9834620 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5592f98348b8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5592f9834998 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f98349f0 <col:30> Inherited
|-CXXMethodDecl 0x5592f9834a38 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5592f9834ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9834b40 <col:30> Inherited
|-CXXMethodDecl 0x5592f9834c08 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5592f9834cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9834d10 <col:30> Inherited
|-CXXMethodDecl 0x5592f9834d58 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5592f9834e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9834e60 <col:30> Inherited
|-CXXMethodDecl 0x5592f9834ea8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5592f9834f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9834fb0 <col:30> Inherited
|-CXXMethodDecl 0x5592f9834ff8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5592f98350a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f9835100 <col:30> Inherited
|-CXXMethodDecl 0x5592f9835128 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f98351d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f9835288 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f9835448 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9835338 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98353b0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5592f9835598 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9835508 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9835748 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x5592f9835650 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f9835800 <col:20>
| `-OptimizeNoneAttr 0x5592f9835858 <col:30>
|-CXXMethodDecl 0x5592f9835978 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f9835880 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f9835a30 <col:20>
| `-OptimizeNoneAttr 0x5592f9835a88 <col:30>
|-CXXMethodDecl 0x5592f9835b40 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9835ab0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9835c88 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f9835bf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9835db8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x5592f9835ee8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x5592f9835fb8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x5592f9836088 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x5592f98361c8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9836138 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9836310 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f9836280 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9836458 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f98363c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f9836510 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f9836610 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f9836580 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98366c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f9836788 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x5592f9836888 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x5592f9836a38 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9836948 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x5592f98371f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f9836af0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x5592f9837158 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x5592f9837058 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x5592f98372d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f9837428 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9837398 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5592f98374e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f9837728 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98375a0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5592f9837618 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5592f98378e8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5592f98377f8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5592f9837b38 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5592f98379b0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5592f9837a28 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5592f9837bf8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9837e58 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5592f9837d60 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5592f9837f28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f9837f28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9839540 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5592f9839718 prev 0x5592f9839540 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5592f98397a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5592f98397d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f983b3a0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5592f983b350 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5592f9839c80 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5592f9839b80 'type'
|     `-TemplateSpecializationType 0x5592f9839b10 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5592f98399f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5592f98399d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5592f98399b0 <col:24> 'unsigned long' 24
|       `-RecordType 0x5592f9839af0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5592f9839a10 'char_array'
|-TypedefDecl 0x5592f983b458 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5592f983b420 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5592f983b400 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5592f983b3a0 'type'
|     `-ElaboratedType 0x5592f983b350 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5592f9839c80 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5592f9839b80 'type'
|         `-TemplateSpecializationType 0x5592f9839b10 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5592f98399f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5592f98399d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5592f98399b0 <col:24> 'unsigned long' 24
|           `-RecordType 0x5592f9839af0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5592f9839a10 'char_array'
|-CXXMethodDecl 0x5592f983b5d8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5592f983b4e8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5592f983b6c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5592f983b7a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5592f983b7a8
|-CXXMethodDecl 0x5592f983ba78 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5592f983b980 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5592f983bcb8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5592f983bb30 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f983bba8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983be88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5592f983bd78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f983bdf0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983bfe8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5592f983c0b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5592f983c308 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5592f983c178 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5592f983c1f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983c568 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5592f983c3d8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5592f983c450 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983c728 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5592f983c638 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983c8e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5592f983c7f0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983c9a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f983ca50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f983cc88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5592f983cb00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5592f983cb78 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5592f983cf28 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5592f983ce30 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5592f983cff0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5592f983d040 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5592f983d090 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f9838070 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5592f9838278 prev 0x5592f9838070 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5592f98394b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5592f9839460 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5592f9839440 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5592f98392f0 'type'
|     `-SubstTemplateTypeParmType 0x5592f9839110 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x5592f94d18d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f94d1878 'T'
|       `-RecordType 0x5592f9838c60 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5592f9838b80 'sized_array_memory'
|-FieldDecl 0x5592f983d0e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5592f983d130 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5592f983d168 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5592f9509568 'T'
|   `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983d228 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5592f983d1f0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983d2e8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5592f983d2b0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5592f9838311 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983d378 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5592f983d340 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983d438 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5592f983d400 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5592f9838311 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983e090 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5592f983e040 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5592f983e020 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5592f983df58 'type'
|     `-LValueReferenceType 0x5592f983df20 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5592f983dcc1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5592f983dcc0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x5592f94dbfa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5592f94dbf48 'T'
|           `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983e0f8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5592f983d2b0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5592f9838311 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983e150 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-TypedefDecl 0x5592f983e1b8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5592f983d340 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5592f9509568 'T'
|     `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-TypedefDecl 0x5592f983e220 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5592f983d400 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5592f9838311 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5592f9838310 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x5592f95095c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5592f9509568 'T'
|       `-RecordType 0x5592f9830a70 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x5592f98309e0 'SelectorInfo'
|-EnumDecl 0x5592f983e278 <line:134:5> col:5
| `-EnumConstantDecl 0x5592f983e370 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5592f983e350 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5592f950ac48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5592f950ac20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5592f950ac00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5592f983e3f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5592f983e688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f983e4b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f983e550 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5592f983e948 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5592f983e830 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5592f983ec08 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5592f983eaf0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5592f983ef50 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5592f983ee30 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5592f983f260 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5592f983f140 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5592f983f550 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f983f398 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f983f410 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5592f983f6a8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5592f983f788 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f983f7e0 <col:30> Inherited
|-CXXMethodDecl 0x5592f983f828 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5592f983f8d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f983f930 <col:30> Inherited
|-CXXMethodDecl 0x5592f983f9f8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5592f983faa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f983fb00 <col:30> Inherited
|-CXXMethodDecl 0x5592f983fb48 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5592f983fbf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f983fc50 <col:30> Inherited
|-CXXMethodDecl 0x5592f983fc98 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5592f983fd48 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f983fda0 <col:30> Inherited
|-CXXMethodDecl 0x5592f983fde8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5592f983fe98 <col:20> Inherited
| `-OptimizeNoneAttr 0x5592f983fef0 <col:30> Inherited
|-CXXMethodDecl 0x5592f983ff18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f983ffc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5592f9840078 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5592f9840238 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f9840128 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5592f98401a0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5592f9840388 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98402f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9840538 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5592f9840440 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f98405f0 <col:20>
| `-OptimizeNoneAttr 0x5592f9840648 <col:30>
|-CXXMethodDecl 0x5592f9840768 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5592f9840670 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5592f9840820 <col:20>
| `-OptimizeNoneAttr 0x5592f9840878 <col:30>
|-CXXMethodDecl 0x5592f9840930 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f98408a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9840a78 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98409e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9840bd8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5592f9840d08 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5592f9840dd8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5592f9840ea8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5592f9840fe8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5592f9840f58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9841130 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5592f98410a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5592f9841278 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5592f98411e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f9841330 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5592f9841430 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5592f98413a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5592f98414e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5592f98415a8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5592f98416a8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5592f9841858 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f9841768 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5592f9842018 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5592f9841910 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5592f9841f78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5592f9841e78 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5592f98420f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5592f9842248 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5592f98421b8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5592f9842300 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5592f9842548 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5592f98423c0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5592f9842438 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5592f9842708 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5592f9842618 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5592f9842958 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5592f98427d0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5592f9842848 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5592f9842a18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5592f9842c78 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5592f9842b80 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5592f9842d48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5592f9842d48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f982fbc0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f982fcd8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x5592f982fd68 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x5592f982fdf0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x5592f982fee0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x5592f982fee0
|-CXXMethodDecl 0x5592f982ffe0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x5592f9830280 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5592f9830098 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x5592f9830110 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x5592f9830190 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x5592f98304f0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x5592f9830350 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x5592f98303c8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x5592f9830448 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x5592f9830648 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x5592f98305b8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x5592f9830710 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5592f98443f8 <col:34, line:50:5>
|   |-BinaryOperator 0x5592f9843dc8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5592f9843d88 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x5592f9830f18
|   | | `-CXXThisExpr 0x5592f9843d78 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5592f9843db8 <col:23> 'bool' true
|   `-CallExpr 0x5592f98443d0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5592f98443b8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5592f9844338 <col:2> 'void (long)' lvalue Function 0x5592f9844238 'ignore_result' 'void (long)' (FunctionTemplate 0x5592f94cc878 'ignore_result')
|     `-CallExpr 0x5592f9843fe0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5592f9843fc8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f9843f48 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x5592f97fc118 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5592f9844018 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5592f9843ef0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5592f9843ed8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5592f9843e88 <col:22> 'int [2]' lvalue ->_wake_pipe 0x5592f9830eb8
|       |   |   `-CXXThisExpr 0x5592f9843e78 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5592f9843eb8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5592f9844048 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5592f9844030 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5592f9843f10 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5592f9844060 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5592f9843f28 <col:41> 'int' 1
|-CXXMethodDecl 0x5592f9830850 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5592f98307c0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5592f9830918 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x5592f98309b8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x5592f98309e0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f9830b70 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x5592f9830c10 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x5592f9830c70 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x5592f9830cd8 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x5592f9830d90 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x5592f9830c10 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5592f9844458 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5592f9844418 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x5592f9830c70 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5592f98444d8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5592f9844498 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x5592f9830cd8 'pollfd' 'int'
|   | `-UnaryOperator 0x5592f9844538 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5592f9844518 <col:35> 'int' 1
|   `-CompoundStmt 0x5592f98445b0 <line:64:2, line:65:2>
|-FieldDecl 0x5592f9830eb8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x5592f9830f18 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5592f9838010 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5592f9842e30 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5592f9843068 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5592f9842e98 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5592f9842f10 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5592f9842f88 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5592f9843250 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5592f9843138 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5592f98431b8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5592f9843498 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5592f9843318 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5592f9843398 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5592f98436a8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5592f9843558 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5592f98435d0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5592f98437f8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5592f9843768 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5592f98438c0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5592f9843980 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5592f9843a48 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5592f9843a48
| `-ParmVarDecl 0x5592f9843b58 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5592f9843bf8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5592f9843bf8
  `-ParmVarDecl 0x5592f9843d08 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97c01f8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f97c0318 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x5592f97c03a8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x5592f97c0430 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x5592f97c0520 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5592f97c0620 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x5592f97c06e0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x5592f97c07a0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x5592f97c0888 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x5592f97c09a8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x5592f97c09a8
| `-ParmVarDecl 0x5592f97c0ab8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5592f9849928 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5592f9849928
  `-ParmVarDecl 0x5592f9849a38 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97d9528 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f97d9648 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x5592f97d96e8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x5592f97d9748 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5592f98487a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5592f98487a8
| `-ParmVarDecl 0x5592f98488b8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5592f9848958 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5592f9848958
| `-ParmVarDecl 0x5592f9848a68 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5592f9848ad8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5592f9848ad8
|-CXXMethodDecl 0x5592f9849ad8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5592f9849ad8
| `-ParmVarDecl 0x5592f9849be8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5592f9849c58 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5592f9849c58
| `-ParmVarDecl 0x5592f9849d68 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5592f98503d8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5592f98504b0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97c20f0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5592f97c2208 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x5592f97c2298 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5592f97c2320 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x5592f97c23e0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x5592f9209580 'int'
|-CXXMethodDecl 0x5592f97c24a8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x5592f97c2548 <col:45> always_inline
|-CXXMethodDecl 0x5592f97c2678 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x5592f97c25b0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x5592f97c2720 <col:49> always_inline
|-CXXConstructorDecl 0x5592f97c2818 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5592f97c2818
| `-ParmVarDecl 0x5592f97c2928 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x5592f97c29c8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5592f97c29c8
| `-ParmVarDecl 0x5592f97c2ad8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5592f9849340 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5592f9849340
|-CXXMethodDecl 0x5592f9849e08 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5592f9849e08
| `-ParmVarDecl 0x5592f9849f18 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5592f9849f88 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5592f9849f88
  `-ParmVarDecl 0x5592f984a098 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f9844a20 prev 0x5592f982fb30 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5592f9844b18 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5592f9844ba8 <col:22, col:28> col:22 public
|-EnumDecl 0x5592f9844bd0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5592f9844ce8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5592f9844cc8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5592f9844cb0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5592f9844c90 <col:32> 'int' 1
| `-EnumConstantDecl 0x5592f9844d90 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5592f9844d70 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5592f9844d58 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5592f9844d38 <col:53> 'int' 1000
|-CXXMethodDecl 0x5592f9844e30 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5592f9844ef0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5592f9844fd8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5592f984a158 <col:34, col:52>
|   `-ReturnStmt 0x5592f984a148 <col:36, col:43>
|     `-MemberExpr 0x5592f984a118 <col:43> 'TimerSet' lvalue ->_timers 0x5592f9846ca8
|       `-CXXThisExpr 0x5592f984a108 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5592f98450c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5592f984a1c0 <col:46, col:64>
|   `-ReturnStmt 0x5592f984a1b0 <col:48, col:55>
|     `-MemberExpr 0x5592f984a180 <col:55> 'const TimerSet' lvalue ->_timers 0x5592f9846ca8
|       `-CXXThisExpr 0x5592f984a170 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5592f98451b8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5592f984a228 <col:36, col:55>
|   `-ReturnStmt 0x5592f984a218 <col:38, col:45>
|     `-MemberExpr 0x5592f984a1e8 <col:45> 'SelectSet' lvalue ->_selects 0x5592f9846d08
|       `-CXXThisExpr 0x5592f984a1d8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5592f98452a8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5592f984a290 <col:48, col:67>
|   `-ReturnStmt 0x5592f984a280 <col:50, col:57>
|     `-MemberExpr 0x5592f984a250 <col:57> 'const SelectSet' lvalue ->_selects 0x5592f9846d08
|       `-CXXThisExpr 0x5592f984a240 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5592f9845368 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5592f9845458 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5592f98455c8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5592f9845508 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5592f9845690 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5592f9845ad8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5592f9845740 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5592f98459c0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5592f9845ba8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5592f9845c68 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5592f9845d28 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5592f9845e68 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5592f9845dd8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5592f9845f30 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5592f9845ff0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5592f98460b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5592f9846170 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5592f98462b0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5592f9846220 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5592f9846378 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5592f9846438 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5592f98464d8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5592f98465a0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f98465f0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f9846640 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f9846690 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f98466e0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f9846730 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f9846780 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f98467d0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f9846820 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5592f9846870 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5592f98468c0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5592f98469b8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5592f9846928 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5592f9846b08 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5592f9846a78 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5592f9846bb0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5592f9846be8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5592f9846c48 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5592f9846ca8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5592f9846d08 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5592f9846d88 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5592f9846df8 <col:40, col:50> aligned
|   `-ConstantExpr 0x5592f9846dd8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5592f9846d58 <col:48> 'int' 64
|-FieldDecl 0x5592f9846e68 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5592f9846ec8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5592f9846fc0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5592f98470d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5592f9847130 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5592f98471b0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5592f9847220 <col:36, col:46> aligned
|   `-ConstantExpr 0x5592f9847200 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5592f9847180 <col:44> 'int' 64
|-FieldDecl 0x5592f9847298 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5592f98472f8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5592f9847348 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5592f9847388 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5592f98473f0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5592f9847440 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5592f98475e8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5592f9847478 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5592f98474f8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5592f98476e8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5592f98476e8
|-CXXMethodDecl 0x5592f98477f0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5592f98478b8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5592f984a388 <col:34, line:217:5>
|   `-ReturnStmt 0x5592f984a378 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5592f984a360 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5592f984a330 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x5592f97d1c20
|         `-ImplicitCastExpr 0x5592f984a318 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5592f984a2e8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x5592f97d1bb8
|             `-MemberExpr 0x5592f984a2b8 <col:16> 'const TaskLink' lvalue ->_task_link 0x5592f9846be8
|               `-CXXThisExpr 0x5592f984a2a8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5592f9847978 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5592f9847a38 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5592f984aab0 <col:39, line:226:5>
|   |-DeclStmt 0x5592f984a5d8 <line:223:9, col:68>
|   | `-VarDecl 0x5592f984a3b0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5592f984a590 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5592f984a560 <col:24, col:38> '<bound member function type>' .compare_swap 0x5592f9532ec0
|   |     | `-MemberExpr 0x5592f984a428 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5592f9846e68
|   |     |   `-CXXThisExpr 0x5592f984a418 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5592f984a518 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5592f984a500 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5592f984a4d8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5592f984a4b8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5592f984a5c0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5592f984a540 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5592f984a620 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5592f984a5f0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5592f984a3b0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5592f984aa90 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5592f984aa60 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5592f984a738 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5592f984a708 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5592f984a6f0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5592f984a648 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5592f984a3b0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5592f984a6c8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5592f984a6b0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5592f984a688 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5592f984a668 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5592f984a798 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5592f984a778 <col:60> 'int' 0
|       `-CallExpr 0x5592f984a9c0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5592f984a9a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5592f984a988 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5592f92a7c70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5592f984aa00 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5592f984a888 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5592f984aa18 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5592f984a8b8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5592f984aa30 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5592f984a8f8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5592f984aa48 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5592f984a970 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5592f984a958 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5592f984a918 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5592f9847b80 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5592f9847af0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5592f9847c48 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5592f9847d08 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5592f9847dc8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5592f9847e88 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5592f9847f48 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5592f9848040 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5592f98480a0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5592f9848130 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5592f98484f8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5592f98484f8
| `-ParmVarDecl 0x5592f9848608 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5592f9849448 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5592f9849448
  `-ParmVarDecl 0x5592f9849558 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97d1f30 prev 0x5592f976d160 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x5592f97d2068 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x5592f97d20f8 <col:33, col:39> col:33 public
|-EnumDecl 0x5592f97d2120 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x5592f97d2260 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x5592f97d2240 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x5592f97d2220 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5592f97d21e0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x5592f97d2200 <col:26> 'int' 16
| `-EnumConstantDecl 0x5592f97d2330 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5592f97d2310 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x5592f97d22f0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x5592f97d22b0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x5592f97d22d0 <col:47> 'int' 31
|-EnumDecl 0x5592f97d2380 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x5592f97d24c0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x5592f97d25e0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5592f97d24a0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x5592f97d2480 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x5592f97d2440 <col:26> 'int' 1
| |       `-IntegerLiteral 0x5592f97d2460 <col:29> 'int' 15
| `-EnumConstantDecl 0x5592f97d2590 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x5592f97d25f8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f97d2570 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x5592f97d2550 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x5592f97d2510 <col:51> 'int' 1
|         `-IntegerLiteral 0x5592f97d2530 <col:54> 'int' 10
|-CXXConstructorDecl 0x5592f97d27c8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x5592f97d2620 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x5592f97d26a0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x5592f97d2920 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x5592f97d2890 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x5592f97d2a18 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x5592f97d2a18
|-CXXMethodDecl 0x5592f97d2ba8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x5592f97da688 <col:42, line:100:5>
|   `-ReturnStmt 0x5592f97da678 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x5592f97da660 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x5592f97da630 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x5592f97d93b0
|         `-CXXThisExpr 0x5592f97da620 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5592f97d2c70 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x5592f97da708 <col:36, line:105:5>
|   `-ReturnStmt 0x5592f97da6f8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x5592f97da6e0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5592f97da6b0 <col:16> 'void *const' lvalue ->_thunk 0x5592f97d9418
|         `-CXXThisExpr 0x5592f97da6a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5592f97d2d30 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x5592f97da788 <col:37, line:110:5>
|   `-ReturnStmt 0x5592f97da778 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x5592f97da760 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5592f97da730 <col:16> 'Element *const' lvalue ->_owner 0x5592f97d94d8
|         `-CXXThisExpr 0x5592f97da720 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5592f97d2df0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x5592f97d2eb8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x5592f97d2f78 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x5592f97d3038 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x5592f97da870 <col:35, line:137:5>
|   `-ReturnStmt 0x5592f97da860 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x5592f97da828 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x5592f97da7f8 <col:16, col:24> '<bound member function type>' ->router 0x5592f977f970
|         `-ImplicitCastExpr 0x5592f97da848 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5592f97da7e0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5592f97da7b0 <col:16> 'Element *const' lvalue ->_owner 0x5592f97d94d8
|               `-CXXThisExpr 0x5592f97da7a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5592f97d30f8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x5592f97d32b8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5592f97d31a8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5592f97d3220 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5592f97d34c8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x5592f97d3378 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x5592f97d33f0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x5592f97d3598 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x5592f97da980 <col:35, line:181:5>
|   `-ReturnStmt 0x5592f97da970 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x5592f97da958 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x5592f97da940 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x5592f97da910 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x5592f97d8fe8
|           `-MemberExpr 0x5592f97da8c8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|             `-MemberExpr 0x5592f97da898 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x5592f97d9338
|               `-CXXThisExpr 0x5592f97da888 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5592f97d3658 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x5592f97daa98 <col:30, line:192:5>
|   `-BinaryOperator 0x5592f97daa78 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5592f97daa20 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5592f97d8fe8
|     | `-MemberExpr 0x5592f97da9d8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|     |   `-MemberExpr 0x5592f97da9a8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5592f97d9338
|     |     `-CXXThisExpr 0x5592f97da998 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5592f97daa60 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5592f97daa50 <col:32> 'bool' false
|-CXXMethodDecl 0x5592f97d3718 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x5592f97dade8 <col:30, line:206:5>
|   |-BinaryOperator 0x5592f97dab90 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5592f97dab38 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5592f97d8fe8
|   | | `-MemberExpr 0x5592f97daaf0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|   | |   `-MemberExpr 0x5592f97daac0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5592f97d9338
|   | |     `-CXXThisExpr 0x5592f97daab0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5592f97dab78 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5592f97dab68 <col:32> 'bool' true
|   |-CallExpr 0x5592f97dac30 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x5592f97dac18 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f97dabf8 <col:9> 'void ()' lvalue Function 0x5592f97bfdb0 'click_fence' 'void ()'
|   `-IfStmt 0x5592f97dadd0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x5592f97dad10 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x5592f97dace0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x5592f97dac90 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x5592f97d9748
|     | |   `-MemberExpr 0x5592f97dac60 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x5592f97d97c0
|     | |     `-CXXThisExpr 0x5592f97dac50 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x5592f97dacf8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x5592f97dacc0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x5592f97dad90 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x5592f97dad40 <col:13> '<bound member function type>' ->complete_schedule 0x5592f97da1c0
|       | `-CXXThisExpr 0x5592f97dad30 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x5592f97dadb8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x5592f97dad70 <col:31> 'int' 0
|-CXXMethodDecl 0x5592f97d37d8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x5592f97daf10 <col:35, line:240:5>
|   `-BinaryOperator 0x5592f97daef0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5592f97dae98 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5592f97d8fe8
|     | `-MemberExpr 0x5592f97dae50 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|     |   `-MemberExpr 0x5592f97dae20 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5592f97d9338
|     |     `-CXXThisExpr 0x5592f97dae10 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5592f97daed8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5592f97daec8 <col:32> 'bool' true
|-CXXMethodDecl 0x5592f97d3898 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x5592f97db128 <col:37, line:253:5>
|   |-BinaryOperator 0x5592f97db008 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5592f97dafb0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5592f97d8fe8
|   | | `-MemberExpr 0x5592f97daf68 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|   | |   `-MemberExpr 0x5592f97daf38 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5592f97d9338
|   | |     `-CXXThisExpr 0x5592f97daf28 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5592f97daff0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5592f97dafe0 <col:32> 'bool' false
|   `-BinaryOperator 0x5592f97db108 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x5592f97db0b0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5592f97d9048
|     | `-MemberExpr 0x5592f97db068 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|     |   `-MemberExpr 0x5592f97db038 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5592f97d9338
|     |     `-CXXThisExpr 0x5592f97db028 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5592f97db0f0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5592f97db0e0 <col:41> 'bool' true
|-CXXMethodDecl 0x5592f97d3958 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x5592f97db2a8 <col:37, line:264:5>
|   |-BinaryOperator 0x5592f97db228 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x5592f97db1d0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x5592f97d9048
|   | | `-MemberExpr 0x5592f97db188 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5592f97d9108
|   | |   `-MemberExpr 0x5592f97db158 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5592f97d9338
|   | |     `-CXXThisExpr 0x5592f97db148 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5592f97db210 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5592f97db200 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x5592f97db288 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x5592f97db258 <col:9> '<bound member function type>' ->reschedule 0x5592f97d3718
|       `-CXXThisExpr 0x5592f97db248 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x5592f97d3aa0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x5592f97d3a10 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x5592f97d3b70 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x5592f97d3cb8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x5592f97d3c28 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x5592f97d3e08 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x5592f97d3d78 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x5592f97d3ed0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x5592f97d3f90 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x5592f97d4030 <col:53> "" ""
|-CXXMethodDecl 0x5592f97d40c8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x5592f97d8b40 <col:47> "" ""
|-AccessSpecDecl 0x5592f97d8bb0 <line:303:3, col:10> col:3 private
|-FieldDecl 0x5592f97d8bf0 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x5592f97d8c58 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x5592f97d8ca8 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5592f97d8dc8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x5592f97d8e58 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x5592f97d8f88 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x5592f97d8fe8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x5592f97d9048 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5592f984fb08 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5592f984fbe0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5592f984fbe0
| | |-CXXConstructorDecl 0x5592f984fe98 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5592f984fe98
| | | `-ParmVarDecl 0x5592f984ffa8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5592f9850048 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5592f9850048
| |   `-ParmVarDecl 0x5592f9850158 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x5592f97d9108 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x5592f97d9168 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x5592f97d9108 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5592f97d8f88 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x5592f97d91c0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x5592f97d9108 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5592f97d8fe8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x5592f97d9218 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x5592f97d9108 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5592f97d9048 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x5592f97d9270 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5592f984fa18 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5592f9850378 <col:11>
| |-CXXConstructorDecl 0x5592f984fce8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5592f984fce8
| | `-ParmVarDecl 0x5592f984fdf8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5592f98501f8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5592f98501f8
|   `-ParmVarDecl 0x5592f9850308 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x5592f97d9338 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x5592f97d93b0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x5592f97d9418 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5592f97d9478 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x5592f97d94d8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x5592f97d9528 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5592f97d9648 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x5592f97d96e8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x5592f97d9748 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5592f98487a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5592f98487a8
| | `-ParmVarDecl 0x5592f98488b8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5592f9848958 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5592f9848958
| | `-ParmVarDecl 0x5592f9848a68 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5592f9848ad8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5592f9848ad8
| |-CXXMethodDecl 0x5592f9849ad8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5592f9849ad8
| | `-ParmVarDecl 0x5592f9849be8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5592f9849c58 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5592f9849c58
| | `-ParmVarDecl 0x5592f9849d68 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5592f98503d8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5592f98504b0 <col:11>
|-FieldDecl 0x5592f97d97c0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x5592f97d9908 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x5592f97d9848 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x5592f97d9ab8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x5592f97d99c8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x5592f97d9b80 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x5592f97d9c40 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x5592f97d9d00 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x5592f97db3b8 <col:41, line:355:5>
|   `-ReturnStmt 0x5592f97db3a8 <line:354:9, col:38>
|     `-BinaryOperator 0x5592f97db388 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x5592f97db358 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x5592f97db308 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x5592f97d9748
|       |   `-MemberExpr 0x5592f97db2d8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x5592f97d97c0
|       |     `-CXXThisExpr 0x5592f97db2c8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x5592f97db370 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5592f97db338 <col:38> 'int' 0
|-CXXMethodDecl 0x5592f97d9dc0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x5592f97d9f00 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x5592f97d9e70 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x5592f97da078 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x5592f97d9fb8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x5592f97da1c0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x5592f97da130 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x5592f97da288 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x5592f97da450 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x5592f97da338 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x5592f97da3b8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x5592f97da550 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x5592f97da5e0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97cccc8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5592f97ccdf8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x5592f97cd8e8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5592f97c4858 prev 0x5592f976d210 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5592f97c4950 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x5592f97c49e0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x5592f97c4a40 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x5592f97c4ae8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5592f97c4c08 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x5592f97c4da8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x5592f97c4ce8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x5592f97c4ff8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x5592f97c4e68 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x5592f97c4ee8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x5592f97c5188 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x5592f97c50c0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x5592f97c5308 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x5592f97c5248 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x5592f97c54b8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x5592f97c53f8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x5592f97c55b0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x5592f97cdac0 <col:21, line:58:5>
|   `-IfStmt 0x5592f97cdaa8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x5592f97cda10 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x5592f97cd9e0 <col:6> '<bound member function type>' ->scheduled 0x5592f97c5e08
|     |   `-ImplicitCastExpr 0x5592f97cda30 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x5592f97cd9d0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x5592f97cda88 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x5592f97cda58 <col:6> '<bound member function type>' ->unschedule 0x5592f97cc170
|         `-CXXThisExpr 0x5592f97cda48 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x5592f97c56b0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x5592f97cdc60 <col:26, line:65:5>
|   |-BinaryOperator 0x5592f97cdb80 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5592f97cdb18 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5592f97ccdf8
|   | | `-MemberExpr 0x5592f97cdae8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5592f97cceb8
|   | |   `-CXXThisExpr 0x5592f97cdad8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5592f97cdb68 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f97cdb48 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5592f97cd318 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5592f97cdc40 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x5592f97cdbb0 <col:2> 'void *' lvalue ->_thunk 0x5592f97ccf38
|     | `-CXXThisExpr 0x5592f97cdba0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x5592f97cdc18 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x5592f97cdbe0 <col:20> 'int' 1
|-CXXMethodDecl 0x5592f97c57f0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x5592f97c5760 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x5592f97cddc0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x5592f97cdcb0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5592f97cdc80 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x5592f97c5760 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x5592f97cdda0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x5592f97cdd70 <col:2> '<bound member function type>' ->assign 0x5592f97c56b0
|       `-CXXThisExpr 0x5592f97cdd60 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x5592f97c59c0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x5592f97c58a8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x5592f97c5928 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x5592f97cdf40 <col:58, line:79:5>
|   |-BinaryOperator 0x5592f97cde88 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5592f97cde20 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5592f97ccdf8
|   | | `-MemberExpr 0x5592f97cddf0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5592f97cceb8
|   | |   `-CXXThisExpr 0x5592f97cdde0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5592f97cde70 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x5592f97cde50 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x5592f97c58a8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x5592f97cdf20 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5592f97cdeb8 <col:2> 'void *' lvalue ->_thunk 0x5592f97ccf38
|     | `-CXXThisExpr 0x5592f97cdea8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5592f97cdf08 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x5592f97cdee8 <col:11> 'void *' lvalue ParmVar 0x5592f97c5928 'user_data' 'void *'
|-CXXMethodDecl 0x5592f97c5b10 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x5592f97c5a80 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x5592f97ce0d8 <col:35, line:87:5>
|   |-BinaryOperator 0x5592f97ce008 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5592f97cdfa0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5592f97ccdf8
|   | | `-MemberExpr 0x5592f97cdf70 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5592f97cceb8
|   | |   `-CXXThisExpr 0x5592f97cdf60 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5592f97cdff0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f97cdfd0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5592f97cd4f0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5592f97ce0b8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5592f97ce038 <col:2> 'void *' lvalue ->_thunk 0x5592f97ccf38
|     | `-CXXThisExpr 0x5592f97ce028 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5592f97ce0a0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5592f97ce088 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x5592f97ce068 <col:11> 'Element *' lvalue ParmVar 0x5592f97c5a80 'element' 'Element *'
|-CXXMethodDecl 0x5592f97c5c58 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x5592f97c5bc8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x5592f97ce270 <col:29, line:94:5>
|   |-BinaryOperator 0x5592f97ce1a0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x5592f97ce138 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x5592f97ccdf8
|   | | `-MemberExpr 0x5592f97ce108 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x5592f97cceb8
|   | |   `-CXXThisExpr 0x5592f97ce0f8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x5592f97ce188 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5592f97ce168 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x5592f97cd6c8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x5592f97ce250 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x5592f97ce1d0 <col:2> 'void *' lvalue ->_thunk 0x5592f97ccf38
|     | `-CXXThisExpr 0x5592f97ce1c0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x5592f97ce238 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x5592f97ce220 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x5592f97ce200 <col:11> 'Task *' lvalue ParmVar 0x5592f97c5bc8 'task' 'Task *'
|-CXXMethodDecl 0x5592f97c5d48 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x5592f97ce350 <col:37, line:100:5>
|   `-ReturnStmt 0x5592f97ce340 <line:99:2, col:19>
|     `-BinaryOperator 0x5592f97ce320 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x5592f97ce2f0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x5592f97ce2a0 <col:9> 'Element *const' lvalue ->_owner 0x5592f97ccf98
|       |   `-CXXThisExpr 0x5592f97ce290 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x5592f97ce308 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x5592f97ce2d0 <col:19> 'int' 0
|-CXXMethodDecl 0x5592f97c5e08 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x5592f97ce410 <col:35, line:105:5>
|   `-ReturnStmt 0x5592f97ce400 <line:104:2, col:23>
|     `-BinaryOperator 0x5592f97ce3e0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x5592f97ce3c8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x5592f97ce378 <col:9> 'const int' lvalue ->_schedpos1 0x5592f97ccc18
|       |   `-CXXThisExpr 0x5592f97ce368 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x5592f97ce3a8 <col:23> 'int' 0
|-CXXMethodDecl 0x5592f97c5ec8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x5592f97ce478 <col:51, line:118:5>
|   `-ReturnStmt 0x5592f97ce468 <line:117:2, col:9>
|     `-MemberExpr 0x5592f97ce438 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|       `-CXXThisExpr 0x5592f97ce428 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5592f97c5f88 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x5592f97ce9d0 <col:37, line:136:5>
|   `-IfStmt 0x5592f97ce9a8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x5592f97ce538 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x5592f97ce520 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x5592f97ce500 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x5592f97ce4d0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x5592f96ff2e8
|     |       `-MemberExpr 0x5592f97ce4a0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|     |         `-CXXThisExpr 0x5592f97ce490 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x5592f97ce918 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x5592f97ce900 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x5592f97ce8d0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x5592f97ce8b8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x5592f97ce880 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x5592f97ce868 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x5592f97ce848 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5592f972dac0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x5592f97ce7e8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x5592f97ce7d0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x5592f97ce6f8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x5592f97ce6e0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x5592f97ce6c0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5592f972d780 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x5592f97ce660 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x5592f97ce560 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|     |         |     |   `-CXXThisExpr 0x5592f97ce550 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x5592f97ce6a8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x5592f97ce690 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x5592f97ce640 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x5592f97ce628 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x5592f97ce5c8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5592f9720de0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x5592f97ce830 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x5592f97ce818 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x5592f97ce7b0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x5592f97ce798 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x5592f97ce768 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x5592f957c330 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x5592f97ce998 <line:135:6, col:13>
|       `-CXXConstructExpr 0x5592f97ce968 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x5592f97ce938 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|           `-CXXThisExpr 0x5592f97ce928 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x5592f97c6048 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x5592f97ceab8 <col:35, line:141:5>
|   `-ReturnStmt 0x5592f97ceaa8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x5592f97cea70 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x5592f97cea40 <col:9, col:17> '<bound member function type>' ->router 0x5592f977f970
|         `-ImplicitCastExpr 0x5592f97cea90 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x5592f97cea28 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x5592f97ce9f8 <col:9> 'Element *const' lvalue ->_owner 0x5592f97ccf98
|               `-CXXThisExpr 0x5592f97ce9e8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5592f97c6108 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x5592f97ceb38 <col:37, line:146:5>
|   `-ReturnStmt 0x5592f97ceb28 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x5592f97ceb10 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x5592f97ceae0 <col:9> 'Element *const' lvalue ->_owner 0x5592f97ccf98
|         `-CXXThisExpr 0x5592f97cead0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5592f97c61c8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x5592f97cebb8 <col:41, line:151:5>
|   `-ReturnStmt 0x5592f97ceba8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x5592f97ceb90 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x5592f97ceb60 <col:9> 'RouterThread *const' lvalue ->_thread 0x5592f97ccff8
|         `-CXXThisExpr 0x5592f97ceb50 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x5592f97c6290 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x5592f97c6488 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5592f97c6340 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x5592f97c63b8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5592f97cd8d8 <col:50> 'bool' false
|-CXXMethodDecl 0x5592f97c6608 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x5592f97c6548 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x5592f97c6750 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5592f97c66c0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5592f97c6898 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5592f97c6808 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x5592f97c69e0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5592f97c6950 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x5592f97c6b28 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5592f97c6a98 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x5592f97c6bf0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x5592f97ced20 <col:32, line:223:5>
|   `-ExprWithCleanups 0x5592f97ced08 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x5592f97cecb0 <col:2, col:47> 'void'
|       |-MemberExpr 0x5592f97cebe0 <col:2> '<bound member function type>' ->schedule_at_steady 0x5592f97c6750
|       | `-CXXThisExpr 0x5592f97cebd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cecf0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5592f97cecd8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5592f97cec90 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x5592f97cec78 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x5592f97cec48 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x5592f957c330 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x5592f97c6d30 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x5592f97c6ca0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x5592f97c6e78 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97c6de8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f97ceea8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x5592f97cee90 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x5592f97cee38 <col:2, col:40> 'void'
|       |-MemberExpr 0x5592f97ced48 <col:2> '<bound member function type>' ->schedule_after 0x5592f97c6d30
|       | `-CXXThisExpr 0x5592f97ced38 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cee78 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5592f97cee60 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5592f97cedf8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x5592f97cedc8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x5592f97ced88 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97c6de8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x5592f97cede0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5592f97ceda8 <col:38> 'int' 0
|-CXXMethodDecl 0x5592f97c6fc0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97c6f30 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f97cf118 <col:58, line:249:5>
|   `-ExprWithCleanups 0x5592f97cf100 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x5592f97cf0a8 <col:2, col:49> 'void'
|       |-MemberExpr 0x5592f97ceed0 <col:2> '<bound member function type>' ->schedule_after 0x5592f97c6d30
|       | `-CXXThisExpr 0x5592f97ceec0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cf0e8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5592f97cf0d0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x5592f97cf050 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x5592f97cf038 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5592f97cefa8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5592f97010d8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5592f97cf090 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x5592f97cf078 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x5592f97cef88 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97c6f30 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97c7108 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x5592f97c7078 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x5592f97cf2f8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x5592f97cf2e0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x5592f97cf288 <col:2, col:38> 'void'
|       |-MemberExpr 0x5592f97cf140 <col:2> '<bound member function type>' ->schedule_at_steady 0x5592f97c6750
|       | `-CXXThisExpr 0x5592f97cf130 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cf2c8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5592f97cf2b0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5592f97cf250 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5592f97cf238 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5592f97cf218 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5592f972d780 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5592f97cf1e8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5592f97cf1d0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5592f97cf180 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|             |     `-CXXThisExpr 0x5592f97cf170 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x5592f97cf1b0 <col:33> 'const Timestamp' lvalue ParmVar 0x5592f97c7078 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x5592f97c7250 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97c71c0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f97cf5d0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x5592f97cf5b8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x5592f97cf560 <col:2, col:79> 'void'
|       |-MemberExpr 0x5592f97cf320 <col:2> '<bound member function type>' ->schedule_at_steady 0x5592f97c6750
|       | `-CXXThisExpr 0x5592f97cf310 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cf5a0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5592f97cf588 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5592f97cf520 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x5592f97cf458 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x5592f97cf440 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x5592f97cf3d0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x5592f97cf3a0 <col:31, col:41> '<bound member function type>' .sec 0x5592f957de28
|             | |     `-ImplicitCastExpr 0x5592f97cf3f0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x5592f97cf370 <col:31> 'Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|             | |         `-CXXThisExpr 0x5592f97cf360 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x5592f97cf428 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x5592f97cf408 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97c71c0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x5592f97cf4e8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x5592f97cf4b8 <col:60, col:70> '<bound member function type>' .subsec 0x5592f957e520
|                 `-ImplicitCastExpr 0x5592f97cf508 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x5592f97cf488 <col:60> 'Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|                     `-CXXThisExpr 0x5592f97cf478 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x5592f97c7398 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97c7308 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5592f97cf908 <col:60, line:279:5>
|   `-ExprWithCleanups 0x5592f97cf8f0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x5592f97cf898 <col:2, col:65> 'void'
|       |-MemberExpr 0x5592f97cf5f8 <col:2> '<bound member function type>' ->schedule_at_steady 0x5592f97c6750
|       | `-CXXThisExpr 0x5592f97cf5e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cf8d8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x5592f97cf8c0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x5592f97cf860 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x5592f97cf848 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5592f97cf828 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5592f972d780 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x5592f97cf7c8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x5592f97cf7b0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5592f97cf638 <col:21> 'Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|             |     `-CXXThisExpr 0x5592f97cf628 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x5592f97cf810 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x5592f97cf7f8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x5592f97cf758 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x5592f97cf740 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5592f97cf710 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5592f97010d8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x5592f97cf798 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x5592f97cf780 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x5592f97cf6f0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x5592f97c7308 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5592f97cc170 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x5592f97cc230 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x5592f97cfdd0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x5592f97cf960 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x5592f97cf930 <col:2> '<bound member function type>' ->unschedule 0x5592f97cc170
|   |   `-CXXThisExpr 0x5592f97cf920 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x5592f97cfdb8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x5592f97cfd80 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x5592f97cfd68 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5592f97cfa18 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x5592f94153c8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x5592f97cf990 <col:2> 'Timestamp' lvalue ->_expiry_s 0x5592f97ccc78
|       | `-CXXThisExpr 0x5592f97cf980 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5592f97cfa00 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x5592f97cf9d0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x5592f97cc2f0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x5592f97d0128 <col:42, line:310:5>
|   |-IfStmt 0x5592f97cff70 <line:306:2, line:307:23>
|   | |-CallExpr 0x5592f97cfea0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x5592f97cfe88 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x5592f97cfe28 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5592f971f250 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x5592f97cff60 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x5592f97cff48 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x5592f97cff18 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x5592f97cff00 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x5592f97cfed0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x5592f97d0118 <line:309:2, col:33>
|     `-ExprWithCleanups 0x5592f97d0100 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x5592f97d00d0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5592f97d00b8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x5592f97d0078 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x5592f97d0060 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5592f97d0030 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5592f97013f0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x5592f97d00a0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x5592f97d0010 <col:30> 'int' 500
|-CXXMethodDecl 0x5592f97cc430 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97cc3a0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f97cc4d8 <col:69> "" ""
|-CXXMethodDecl 0x5592f97cc5e8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97cc558 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f97cc690 <col:70> "" ""
|-CXXMethodDecl 0x5592f97cc7a0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97cc710 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f97cc848 <col:71> "" ""
|-CXXMethodDecl 0x5592f97cc958 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5592f97cc8c8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5592f97cca00 <col:72> "" ""
|-EnumDecl 0x5592f97cca70 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x5592f97ccb70 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x5592f97ccbc0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5592f97ccb50 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x5592f97ccb30 <col:25> 'int' 1
|-AccessSpecDecl 0x5592f97ccbd8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x5592f97ccc18 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x5592f97ccc78 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x5592f97cccc8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5592f97ccdf8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x5592f97cd8e8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x5592f97cceb8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x5592f97ccf38 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x5592f97ccf98 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x5592f97ccff8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x5592f97cd148 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x5592f97cd058 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x5592f97cd318 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5592f97cd200 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x5592f97cd280 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x5592f97cd4f0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5592f97cd3d8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x5592f97cd458 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x5592f97cd6c8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x5592f97cd5b0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x5592f97cd630 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x5592f97cd898 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5592f97dee40 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x5592f9930088 <line:167:18>
|-CXXRecordDecl 0x5592f9930148 prev 0x5592f97dee40 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5592f9930258 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
