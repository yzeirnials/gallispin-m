
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fbdc6b8 prev 0x55dd3fbd3f08 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fbdc7b0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55dd3fbdc840 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55dd3fbdc8b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55dd3fbdc978 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55dd3fbdca40 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55dd3fbdcbb8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55dd3fbdcaf0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55dd3fbdcc60 <col:24>
| `-OptimizeNoneAttr 0x55dd3fbdccb8 <col:34>
|-CXXMethodDecl 0x55dd3fbdcd00 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55dd3fbdcfb8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55dd3fbdcdb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55dd3fbdce28 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55dd3fbdcea8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55dd3fbdd070 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55dd3fbdd0a8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55dd3fbdd110 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55dd3fbdd198 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55dd3fbdd4b8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55dd3fbdd250 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55dd3fbdd2c8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55dd3fbdd340 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55dd3fbdd3c0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55dd3fbdd5d0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55dd3fbe3f18 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55dd3fbe3f18
| `-ParmVarDecl 0x55dd3fbe4028 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55dd3fbe40c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55dd3fbe40c8
| `-ParmVarDecl 0x55dd3fbe41d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55dd3fce8b08 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fbcf980 prev 0x55dd3fbcf720 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3fbcfa78 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55dd3fbcfb08 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55dd3fbcfb68 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55dd3fbcfc58 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55dd3fbcfd58 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55dd3fbcff28 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55dd3fbcfdd8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55dd3fbcfe50 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55dd3fbd00b8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55dd3fbcfff0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55dd3fbd0160 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fbd0298 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55dd3fbd01d0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55dd3fbd0438 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55dd3fbd0378 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55dd3fbd05d8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55dd3fbd0518 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55dd3fbd0680 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55dd3fbd0780 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55dd3fbd0860 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd0760 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd3fbd0740 <col:26> 'int' 1
| `-EnumConstantDecl 0x55dd3fbd0810 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55dd3fbd0878 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fbd07f0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55dd3fbd07d0 <col:44> 'int' 2
|-CXXMethodDecl 0x55dd3fbd09c0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55dd3fbd08a8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55dd3fbd0928 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55dd3fbd0b18 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55dd3fbd0a88 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55dd3fbd0d28 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55dd3fbd0bd8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55dd3fbd0c50 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55dd3fbd0dd8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fbd0e30 <col:30>
|-CXXMethodDecl 0x55dd3fbd0f38 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55dd3fbd0e70 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55dd3fbd0fe0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fbd1038 <col:30>
|-CXXMethodDecl 0x55dd3fbd1088 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55dd3fbd1150 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55dd3fbd1210 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55dd3fbd1298 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55dd3fbd1320 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55dd3fbd13a8 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55dd3fbd1430 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55dd3fbd14c0 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55dd3fbd1580 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55dd3fbd1608 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55dd3fbd1690 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55dd3fbd1718 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55dd3fbd17a0 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55dd3fbd1828 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55dd3fbd18b8 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55dd3fbd1978 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55dd3fbd1a08 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55dd3fbd1b58 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55dd3fbd1ac0 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55dd3fbd1ce0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55dd3fbd1c18 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55dd3fbd1f80 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55dd3fbd1d98 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55dd3fbd1e18 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55dd3fbd1e98 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55dd3fbd2038 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55dd3fbd2140 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fbd23d0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd2120 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fbd2100 <col:33> 'int' 0
| |-EnumConstantDecl 0x55dd3fbd21d0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fbd23e8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd21b0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55dd3fbd2190 <col:32> 'int' 20
| |-EnumConstantDecl 0x55dd3fbd2260 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fbd2400 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd2240 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55dd3fbd2220 <col:38> 'int' 90
| |-EnumConstantDecl 0x55dd3fbd22f0 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fbd2418 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd22d0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55dd3fbd22b0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55dd3fbd2380 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55dd3fbd2430 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fbd2360 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55dd3fbd2340 <col:32> 'int' 2000
|-CXXMethodDecl 0x55dd3fbd2470 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55dd3fbd2780 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd3fbd25f0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55dd3fbd2668 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbd2850 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55dd3fbd29d0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55dd3fbd2900 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbd2bd8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd3fbd2a88 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55dd3fbd2b00 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbd2cd8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55dd3fbd2d78 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55dd3fbd2e40 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd3fbd2ed0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55dd3fbd3100 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd2eb0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55dd3fbd2e90 <col:36> 'int' EnumConstant 0x55dd3fbd2e40 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd3fbd2f20 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd3fbd2f70 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd3fbd2fc0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd3fbd3010 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dd3fbd3060 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55dd3fbd30b0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55dd3fbd31e8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55dd3fbd3128 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55dd3fbd32b0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55dd3fbd3370 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55dd3fbd3430 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55dd3fbd34f0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55dd3fbd35d8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55dd3fbd36a0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55dd3fbd3820 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55dd3fbd3750 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55dd3fbd3948 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55dd3fbd3b48 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55dd3fbd39f8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55dd3fbd3a78 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55dd3fbe03e8 <col:54, line:127:5>
|   |-ParenExpr 0x55dd3fbe0298 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55dd3fbe0268 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fbdff50 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55dd3fbdff28 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55dd3fbdff10 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55dd3fbdfef8 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55dd3fbdfec8 <col:31> 'Router *' lvalue ->_router 0x55dd3fbddde0
|   |   |         `-CXXThisExpr 0x55dd3fbdfeb8 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55dd3fbdffb0 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fbdff90 <col:48> 'int' 0
|   |   `-CallExpr 0x55dd3fbe01c8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fbe01b0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fbe0190 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fbe0208 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fbe0020 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55dd3fbe0220 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fbe0040 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55dd3fbe0238 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fbe0078 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55dd3fbe0250 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fbe0178 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fbe0160 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fbe0118 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55dd3fbe0330 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55dd3fbe02c8 <col:9> 'Router *' lvalue ->_router 0x55dd3fbddde0
|   | | `-CXXThisExpr 0x55dd3fbe02b8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fbe0318 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd3fbe02f8 <col:19> 'Router *' lvalue ParmVar 0x55dd3fbd39f8 'r' 'Router *'
|   `-BinaryOperator 0x55dd3fbe03c8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55dd3fbe0360 <col:9> 'int' lvalue ->_eindex 0x55dd3fbdde48
|     | `-CXXThisExpr 0x55dd3fbe0350 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55dd3fbe03b0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fbe0390 <col:19> 'int' lvalue ParmVar 0x55dd3fbd3a78 'eindex' 'int'
|-CXXMethodDecl 0x55dd3fbd3cd0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55dd3fbd3c08 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55dd3fbd3da0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55dd3fbd3e68 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55dd3fbd3f08 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55dd3fbd4158 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55dd3fbd3fd0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55dd3fbd4050 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55dd3fbd4208 <col:20>
| `-OptimizeNoneAttr 0x55dd3fbd4260 <col:30>
|-CXXMethodDecl 0x55dd3fbd4368 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55dd3fbd42a0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55dd3fbd4410 <col:20>
| `-OptimizeNoneAttr 0x55dd3fbd4468 <col:30>
|-CXXMethodDecl 0x55dd3fbd4538 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55dd3fbd44a8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55dd3fbd45e0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fbd4638 <col:30>
|-CXXMethodDecl 0x55dd3fbd47c8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55dd3fbd4670 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55dd3fbd46f0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55dd3fbd4958 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55dd3fbd4890 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55dd3fbd4aa8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55dd3fbd4a18 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55dd3fbd4bf8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55dd3fbd4b68 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55dd3fbd4d48 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55dd3fbd4cb8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55dd3fbd5008 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55dd3fbd4e00 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55dd3fbd4e80 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55dd3fbd4f28 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55dd3fbd50e0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55dd3fbd51a0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55dd3fbd5470 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd3fbd5320 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55dd3fbd5398 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbd5598 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55dd3fbd5770 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55dd3fbd5650 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55dd3fbd56d0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55dd3fbd59a0 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55dd3fbd5838 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55dd3fbd5900 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55dd3fbd5d18 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55dd3fbd5a60 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd5ad8 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd3fbd5b58 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dd3fbdf9c8 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3fbdf9a8 <col:106> 'int' 0
| `-ParmVarDecl 0x55dd3fbd5bd0 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfa00 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd3fbdf9e0 <col:126> 'int' 0
|-CXXMethodDecl 0x55dd3fbd6098 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd3fbd5de8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd5e60 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd3fbd5ee0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55dd3fbd5f58 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfa38 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd3fbdfa18 <col:114> 'int' 0
|-CXXMethodDecl 0x55dd3fbd6428 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd3fbd6170 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd61e8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dd3fbd6268 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55dd3fbdfa50 <col:96> 'int' 0
| `-ParmVarDecl 0x55dd3fbd62e0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfa90 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd3fbdfa70 <col:116> 'int' 0
|-CXXMethodDecl 0x55dd3fbd67a8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55dd3fbd64f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd6570 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbd65f0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dd3fbdfac8 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3fbdfaa8 <col:109> 'int' 0
| `-ParmVarDecl 0x55dd3fbd6668 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfb00 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd3fbdfae0 <col:129> 'int' 0
|-CXXMethodDecl 0x55dd3fbd6b28 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd3fbd6878 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd68f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbd6970 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55dd3fbd69e8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfb38 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd3fbdfb18 <col:117> 'int' 0
|-CXXMethodDecl 0x55dd3fbd6eb8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dd3fbd6c00 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd6c78 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbd6cf8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55dd3fbdfb50 <col:99> 'int' 0
| `-ParmVarDecl 0x55dd3fbd6d70 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfb90 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dd3fbdfb70 <col:119> 'int' 0
|-CXXMethodDecl 0x55dd3fbd72d8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55dd3fbd6f88 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd7008 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55dd3fbd7080 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbd7100 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dd3fbdfbc8 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3fbdfba8 <col:108> 'int' 0
| `-ParmVarDecl 0x55dd3fbd7180 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55dd3fbdfc00 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55dd3fbdfbe0 <col:141> 'int' 0
|-CXXMethodDecl 0x55dd3fbd76f8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55dd3fbd73b0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd7430 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55dd3fbd74a8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbd7528 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55dd3fbd75a8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55dd3fbdfc18 <col:121> 'int' 0
|-CXXMethodDecl 0x55dd3fbd7b28 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55dd3fbd77d8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd7858 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55dd3fbd78d0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbd7950 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55dd3fbdfc38 <col:98> 'int' 0
| `-ParmVarDecl 0x55dd3fbd79d0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55dd3fbdfc58 <col:123> 'int' 0
|-CXXMethodDecl 0x55dd3fbd7df0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55dd3fbd7c00 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dd3fbd7c80 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55dd3fbd7d00 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55dd3fbdfc78 <col:80> 'int' 0
|-EnumDecl 0x55dd3fbd7ea8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55dd3fbd7fb0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd3fbd8240 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd7f90 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd3fbd7f70 <col:42> 'int' 1
| |-EnumConstantDecl 0x55dd3fbd8040 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd3fbd8258 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd8020 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd3fbd8000 <col:40> 'int' 2
| |-EnumConstantDecl 0x55dd3fbd80d0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd3fbd8270 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd80b0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd3fbd8090 <col:44> 'int' 4
| |-EnumConstantDecl 0x55dd3fbd8160 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dd3fbd8288 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fbd8140 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55dd3fbd8120 <col:36> 'int' 7
| `-EnumConstantDecl 0x55dd3fbd81f0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55dd3fbd82a0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fbd81d0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55dd3fbd81b0 <col:34> 'int' 6
|-CXXMethodDecl 0x55dd3fbd8558 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55dd3fbd82c8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55dd3fbd8368 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55dd3fbd83e8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55dd3fbd8460 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55dd3fbdfd30 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd3fbdfd18 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dd3fbdfd00 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd3fbdfce0 <col:98, col:105> 'String' (CXXTemporary 0x55dd3fbdfce0)
|           `-CXXTemporaryObjectExpr 0x55dd3fbdfca8 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55dd3fbd87f8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55dd3fbd8628 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55dd3fbd86a0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55dd3fbd8718 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55dd3fbdfde0 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dd3fbdfdc8 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dd3fbdfdb0 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dd3fbdfd90 <col:94, col:101> 'String' (CXXTemporary 0x55dd3fbdfd90)
| |         `-CXXTemporaryObjectExpr 0x55dd3fbdfd58 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55dd3fbe05d0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55dd3fbe0548 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55dd3fbe0518 <col:9> '<bound member function type>' ->add_task_handlers 0x55dd3fbd8558
|     | `-CXXThisExpr 0x55dd3fbe0508 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55dd3fbe0588 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3fbe0488 <col:27> 'Task *' lvalue ParmVar 0x55dd3fbd8628 'task' 'Task *'
|     |-ImplicitCastExpr 0x55dd3fbe05a0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3fbe04a8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55dd3fbd86a0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55dd3fbe05b8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55dd3fbe04c8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55dd3fbd81f0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55dd3fbe04e8 <col:62> 'const String' lvalue ParmVar 0x55dd3fbd8718 'prefix' 'const String &'
|-CXXMethodDecl 0x55dd3fbd8a08 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55dd3fbd88c0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55dd3fbd8938 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55dd3fbdfe90 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dd3fbdfe78 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dd3fbdfe60 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dd3fbdfe40 <col:70, col:77> 'String' (CXXTemporary 0x55dd3fbdfe40)
| |         `-CXXTemporaryObjectExpr 0x55dd3fbdfe08 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55dd3fbe07a8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55dd3fbe0720 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55dd3fbe06f0 <col:9> '<bound member function type>' ->add_task_handlers 0x55dd3fbd8558
|     | `-CXXThisExpr 0x55dd3fbe06e0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55dd3fbe0760 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3fbe0660 <col:27> 'Task *' lvalue ParmVar 0x55dd3fbd88c0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55dd3fbe0778 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55dd3fbe0680 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55dd3fbe0790 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55dd3fbe06a0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55dd3fbd81f0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55dd3fbe06c0 <col:57> 'const String' lvalue ParmVar 0x55dd3fbd8938 'prefix' 'const String &'
|-CXXMethodDecl 0x55dd3fbd8ce8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55dd3fbd8ad0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd8b50 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd8bc8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55dd3fbd8f98 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55dd3fbd8db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd8e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd8eb8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55dd3fbd9288 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55dd3fbd9068 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd90e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd9160 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55dd3fbd9538 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55dd3fbd9358 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd93d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd9458 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55dd3fbd97e8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55dd3fbd9608 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd9688 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd9708 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55dd3fbd9a98 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55dd3fbd98b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd9938 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd99b0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55dd3fbd9d48 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55dd3fbd9b68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd9be8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd9c68 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55dd3fbd9ff8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55dd3fbd9e18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbd9e98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbd9f18 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55dd3fbda2a8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55dd3fbda0c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbda148 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbda1c8 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55dd3fbda558 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55dd3fbda378 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbda3f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbda478 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55dd3fbda7c0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55dd3fbda628 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55dd3fbda6a8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dd3fbda720 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55dd3fbdaa68 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55dd3fbda890 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55dd3fbda910 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dd3fbda988 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55dd3fbdad18 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55dd3fbdab38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbdabb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbdac38 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55dd3fbdafc8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55dd3fbdade8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbdae68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbdaee0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55dd3fbdb278 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55dd3fbdb098 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbdb118 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbdb190 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55dd3fbdb528 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55dd3fbdb348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbdb3c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dd3fbdb440 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55dd3fbdb858 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55dd3fbdb5f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dd3fbdb678 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55dd3fbdb6f0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55dd3fbdb768 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3fbdfea8 <col:93> 'bool' false
|-CXXMethodDecl 0x55dd3fbdba40 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd3fbdb928 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55dd3fbdb9a8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55dd3fbdbc18 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd3fbdbb00 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55dd3fbdbb80 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55dd3fbdbef8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fbdbcd8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55dd3fbdbd50 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55dd3fbdbdd0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55dd3fbdbe48 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbdc1e8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fbdbfc8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55dd3fbdc040 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55dd3fbdc0c0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55dd3fbdc138 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbdc420 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55dd3fbdc2c0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55dd3fbdc340 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55dd3fbdc608 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55dd3fbdc4e8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55dd3fbdc568 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55dd3fbdc6b8 prev 0x55dd3fbd3f08 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd3fbdc7b0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55dd3fbdc840 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55dd3fbdc8b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55dd3fbdc978 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55dd3fbdca40 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55dd3fbdcbb8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55dd3fbdcaf0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55dd3fbdcc60 <col:24>
| | `-OptimizeNoneAttr 0x55dd3fbdccb8 <col:34>
| |-CXXMethodDecl 0x55dd3fbdcd00 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55dd3fbdcfb8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55dd3fbdcdb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55dd3fbdce28 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55dd3fbdcea8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55dd3fbdd070 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55dd3fbdd0a8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55dd3fbdd110 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55dd3fbdd198 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55dd3fbdd4b8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55dd3fbdd250 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55dd3fbdd2c8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55dd3fbdd340 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55dd3fbdd3c0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55dd3fbdd5d0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55dd3fbe3f18 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55dd3fbe3f18
| | `-ParmVarDecl 0x55dd3fbe4028 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55dd3fbe40c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55dd3fbe40c8
| | `-ParmVarDecl 0x55dd3fbe41d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55dd3fce8b08 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3fbdd648 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55dd3fbdd6e8 <col:38> "" ""
|-CXXMethodDecl 0x55dd3fbdd778 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55dd3fbdd818 <col:44> "" ""
|-AccessSpecDecl 0x55dd3fbdd888 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55dd3fbdd910 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55dd3fbdda10 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55dd3fbdda60 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fbdd9f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55dd3fbdd9d0 <col:27> 'int' 4
|-FieldDecl 0x55dd3fbddb18 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55dd3fbddcc8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55dd3fbddd80 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55dd3fbddde0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55dd3fbdde48 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55dd3fbddf98 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55dd3fbdded8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55dd3fbde148 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55dd3fbde058 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55dd3fbde328 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55dd3fbde208 <col:20> col:23 'int'
| `-ParmVarDecl 0x55dd3fbde288 <col:25> col:28 'int'
|-CXXMethodDecl 0x55dd3fbde5d0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fbde3f0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55dd3fbde470 <col:28> col:31 'int'
| `-ParmVarDecl 0x55dd3fbde4e8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55dd3fbde688 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55dd3fbde750 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55dd3fbde7a0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55dd3fbde7f0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55dd3fbde9d0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fbde880 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55dd3fbde8f8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbdec78 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55dd3fbdea98 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55dd3fbdeb18 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55dd3fbdeb90 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fbdee98 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55dd3fbded48 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55dd3fbdedc8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55dd3fbdf1d0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55dd3fbdef58 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55dd3fbdefd8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55dd3fbdf050 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55dd3fbdf0d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55dd3fbdf3b8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd3fbdf2a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55dd3fbdf320 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55dd3fbdf508 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55dd3fbdf478 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55dd3fbdf888 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55dd3fbdf5c8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55dd3fbdf648 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55dd3fbdf6c0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55dd3fbdf740 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55dd3fbdf968 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fcd0ef0 prev 0x55dd3f796b40 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 referenced class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3fcd0fe8 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55dd3fcd1078 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55dd3fcd10d8 <line:187:5, col:18> col:5 used IPMapper 'void ()'
| `-CompoundStmt 0x55dd3fcd1af8 <col:16, col:18>
|-CXXDestructorDecl 0x55dd3fcd11c8 <line:188:5, col:27> col:13 used ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55dd3fcd1b08 <col:25, col:27>
|-CXXMethodDecl 0x55dd3fcd1498 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dd3fcd12c0 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55dd3fcd1338 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55dd3fcd13b0 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fcd1850 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55dd3fcd1560 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55dd3fcd15d8 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55dd3fcd1650 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55dd3fcd16c8 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55dd3fcd1748 <col:22, col:26> col:26 mapid 'int'
|-CXXMethodDecl 0x55dd3fcd1978 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55dd3fcd1978
| `-ParmVarDecl 0x55dd3fcd1a88 <col:7> col:7 'const IPMapper &'
`-CXXConstructorDecl 0x55dd3fce88a8 <col:7> col:7 implicit constexpr IPMapper 'void (const IPMapper &)' inline default noexcept-unevaluated 0x55dd3fce88a8
  `-ParmVarDecl 0x55dd3fce89b8 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SourceIPHashMapper
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class IPMapper (base)
       112 |     (IPMapper vtable pointer)
       120 |   class Vector<class IPRewriterInput> _is
       120 |     class vector_memory<class sized_array_memory<56> > vm_
       120 |       vector_memory<class sized_array_memory<56> >::type * l_
       128 |       vector_memory::size_type n_
       132 |       vector_memory::size_type capacity_
       136 |   chash_t<int> * _hasher
           | [sizeof=144, dsize=144, align=8,
           |  nvsize=144, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fcc2700 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55dd3fcc28d8 prev 0x55dd3fcc2700 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd3fcc2968 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd3fcc2990 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3fcc4560 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55dd3fcc4510 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55dd3fcc2e40 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55dd3fcc2d40 'type'
|     `-TemplateSpecializationType 0x55dd3fcc2cd0 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dd3fcc2bb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55dd3fcc2b90 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dd3fcc2b70 <col:24> 'unsigned long' 56
|       `-RecordType 0x55dd3fcc2cb0 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55dd3fcc2bd0 'char_array'
|-TypedefDecl 0x55dd3fcc4618 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55dd3fcc45e0 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55dd3fcc45c0 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55dd3fcc4560 'type'
|     `-ElaboratedType 0x55dd3fcc4510 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55dd3fcc2e40 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55dd3fcc2d40 'type'
|         `-TemplateSpecializationType 0x55dd3fcc2cd0 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dd3fcc2bb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55dd3fcc2b90 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dd3fcc2b70 <col:24> 'unsigned long' 56
|           `-RecordType 0x55dd3fcc2cb0 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55dd3fcc2bd0 'char_array'
|-CXXMethodDecl 0x55dd3fcc4798 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55dd3fcc46a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55dd3fcc4888 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd3fcc4968 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55dd3fcc4c38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55dd3fcc4b40 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55dd3fcc4e78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55dd3fcc4cf0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3fcc4d68 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc5048 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55dd3fcc4f38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3fcc4fb0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc51a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55dd3fcc5278 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55dd3fcc54c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55dd3fcc5338 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55dd3fcc53b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc5728 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55dd3fcc5598 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55dd3fcc5610 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc58e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55dd3fcc57f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc5aa8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55dd3fcc59b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc5b60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd3fcc5c10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd3fcc5e48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55dd3fcc5cc0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3fcc5d38 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55dd3fcc60e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55dd3fcc5ff0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55dd3fcc61b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55dd3fcc6200 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd3fcc6250 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fcc1168 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55dd3fcc1378 prev 0x55dd3fcc1168 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd3fcc2670 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55dd3fcc2620 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55dd3fcc2600 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55dd3fcc24b0 'type'
|     `-SubstTemplateTypeParmType 0x55dd3fcc22d0 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55dd3f7a4000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f7a3fa8 'T'
|       `-RecordType 0x55dd3fcc1e20 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55dd3fcc1d40 'sized_array_memory'
|-FieldDecl 0x55dd3fcc62a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55dd3fcc62f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd3fcc6328 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd3f887c28 'T'
|   `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|     `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc63e8 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55dd3fcc63b0 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|       `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc64a8 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55dd3fcc6470 'const IPRewriterInput &'
|   `-QualType 0x55dd3fcc1411 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|         `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc6538 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55dd3fcc6500 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|       `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc65f8 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55dd3fcc65c0 'const IPRewriterInput *'
|   `-QualType 0x55dd3fcc1411 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|         `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc7250 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55dd3fcc7200 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55dd3fcc71e0 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55dd3fcc7118 'type'
|     `-LValueReferenceType 0x55dd3fcc70e0 'const IPRewriterInput &'
|       `-QualType 0x55dd3fcc6e81 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55dd3fcc6e80 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55dd3f7acab0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd3f7aca58 'T'
|           `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|             `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc72b8 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55dd3fcc6470 'const IPRewriterInput &'
|   `-QualType 0x55dd3fcc1411 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|         `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc7310 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3fcc7378 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55dd3fcc6500 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|       `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-TypedefDecl 0x55dd3fcc73e0 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55dd3fcc65c0 'const IPRewriterInput *'
|   `-QualType 0x55dd3fcc1411 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55dd3fcc1410 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3fc2fa10 'IPRewriterInput'
|         `-CXXRecord 0x55dd3f796c80 'IPRewriterInput'
|-EnumDecl 0x55dd3fcc7438 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd3fcc7530 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd3fcc7510 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd3f889668 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd3f889640 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd3f889620 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd3fcc75b8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd3fcc7848 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcc7670 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3fcc7710 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55dd3fcc7b08 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55dd3fcc79f0 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55dd3fcc7dc8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55dd3fcc7cb0 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55dd3fcc8110 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55dd3fcc7ff0 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55dd3fcc8420 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55dd3fcc8300 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55dd3fcc8710 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcc8558 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3fcc85d0 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55dd3fcc8868 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55dd3fcc8948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcc89a0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcca0d0 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55dd3fcca180 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcca1d8 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcca298 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcca348 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcca3a0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcca3e8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcca498 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcca4f0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcca538 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcca5e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcca640 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcca688 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcca738 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcca790 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcca7b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd3fcca868 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd3fcca918 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd3fccaad8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcca9c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3fccaa40 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55dd3fccac28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3fccab98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fccadd8 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55dd3fccace0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd3fccae90 <col:20>
| `-OptimizeNoneAttr 0x55dd3fccaee8 <col:30>
|-CXXMethodDecl 0x55dd3fccb008 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd3fccaf10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd3fccb0c0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fccb118 <col:30>
|-CXXMethodDecl 0x55dd3fccb1d0 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3fccb140 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fccb318 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd3fccb288 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fccb448 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55dd3fccb578 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55dd3fccb648 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55dd3fccb718 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55dd3fccb858 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3fccb7c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fccb9a0 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd3fccb910 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fccbae8 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd3fccba58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd3fccbba0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd3fccbca0 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd3fccbc10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd3fccbd58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd3fccbe18 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55dd3fccbf18 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55dd3fccc0c8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd3fccbfd8 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55dd3fccc888 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd3fccc180 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55dd3fccc7e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55dd3fccc6e8 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55dd3fccc968 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd3fcccab8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd3fccca28 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55dd3fcccb70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd3fcccdb8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcccc30 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55dd3fcccca8 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55dd3fcccf78 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55dd3fccce88 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55dd3fccd1c8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55dd3fccd040 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55dd3fccd0b8 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55dd3fccd288 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd3fccd4e8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55dd3fccd3f0 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55dd3fccd5b8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55dd3fce8af8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fce68e0 <../elements/ip/siphmapper.hh:185:1, line:211:1> line:185:7 class SourceIPHashMapper definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-public 'IPMapper'
|-CXXRecordDecl 0x55dd3fce6a78 <col:1, col:7> col:7 implicit referenced class SourceIPHashMapper
|-AccessSpecDecl 0x55dd3fce6b08 <col:62, col:68> col:62 public
|-CXXConstructorDecl 0x55dd3fce6b90 <line:187:3, col:22> col:3 SourceIPHashMapper 'void ()'
|-CXXDestructorDecl 0x55dd3fce6c80 <line:188:3, col:23> col:3 ~SourceIPHashMapper 'void ()' noexcept-unevaluated 0x55dd3fce6c80
| `-Overrides: [ 0x55dd3fbcfc58 Element::~Element 'void () noexcept', 0x55dd3fcd11c8 IPMapper::~IPMapper 'void () noexcept' ]
|-CXXMethodDecl 0x55dd3fce6db0 <line:190:3, col:65> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55dd3fbd1088 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55dd3fce85d0 <col:34, col:65>
|   `-ReturnStmt 0x55dd3fce85c0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55dd3fce85a8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55dd3fce8578 <col:43> 'const char [19]' lvalue "SourceIPHashMapper"
|-CXXMethodDecl 0x55dd3fce6f00 <line:191:3, col:26> col:9 cast 'void *(const char *)'
| |-Overrides: [ 0x55dd3fbd1ce0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55dd3fce6e68 <col:14, col:25> col:26 'const char *'
|-CXXMethodDecl 0x55dd3fce6fd0 <line:193:3, col:79> col:7 configure_phase 'int () const'
| |-Overrides: [ 0x55dd3fbd2470 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55dd3fce8678 <col:31, col:79>
|   `-ReturnStmt 0x55dd3fce8668 <col:33, col:56>
|     `-ImplicitCastExpr 0x55dd3fce8650 <col:40, col:56> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55dd3fce8620 <col:40, col:56> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55dd3fcb7468 'CONFIGURE_PHASE_MAPPER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55dd3fce72a0 <line:194:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55dd3fbd2780 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55dd3fce7150 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55dd3fce71c8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fce73f0 <line:195:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55dd3fbd31e8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55dd3fce7360 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x55dd3fce7638 <line:197:5, line:198:23> line:197:10 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)'
| |-Overrides: [ 0x55dd3fcd1498 IPMapper::notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' ]
| |-ParmVarDecl 0x55dd3fce74a8 <col:26, col:42> col:42 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55dd3fce7520 <col:48, col:65> col:65 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55dd3fce7598 <line:198:5, col:19> col:19 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fce79a0 <line:199:5, line:201:30> line:199:9 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)'
| |-Overrides: [ 0x55dd3fcd1850 IPMapper::rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' ]
| |-ParmVarDecl 0x55dd3fce7700 <col:24, col:41> col:41 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55dd3fce7778 <line:200:10, col:26> col:26 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55dd3fce77f0 <col:34, col:44> col:44 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55dd3fce7868 <line:201:10, col:18> col:18 p 'Packet *'
| `-ParmVarDecl 0x55dd3fce78e8 <col:21, col:25> col:25 mapid 'int'
|-AccessSpecDecl 0x55dd3fce7a68 <line:203:1, col:10> col:1 protected
|-CXXMethodDecl 0x55dd3fce7d90 <line:204:5, line:205:53> line:204:9 parse_server 'int (const String &, IPRewriterInput *, int *, Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fce7aa0 <col:22, col:36> col:36 conf 'const String &'
| |-ParmVarDecl 0x55dd3fce7b18 <col:42, col:59> col:59 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55dd3fce7b98 <line:205:8, col:13> col:13 id_store 'int *'
| |-ParmVarDecl 0x55dd3fce7c10 <col:23, col:32> col:32 e 'Element *'
| `-ParmVarDecl 0x55dd3fce7c88 <col:35, col:49> col:49 errh 'ErrorHandler *'
|-AccessSpecDecl 0x55dd3fce7e58 <line:207:2, col:9> col:2 private
|-FieldDecl 0x55dd3fce7f30 <line:209:5, col:29> col:29 _is 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55dd3fce81a0 <line:210:5, col:19> col:19 _hasher 'chash_t<int> *'
|-CXXConstructorDecl 0x55dd3fce8240 <line:185:7> col:7 implicit SourceIPHashMapper 'void (const SourceIPHashMapper &)' inline default_delete noexcept-unevaluated 0x55dd3fce8240
| `-ParmVarDecl 0x55dd3fce8358 <col:7> col:7 'const SourceIPHashMapper &'
`-CXXMethodDecl 0x55dd3fce83f8 <col:7> col:7 implicit operator= 'SourceIPHashMapper &(const SourceIPHashMapper &)' inline default_delete noexcept-unevaluated 0x55dd3fce83f8
  `-ParmVarDecl 0x55dd3fce8508 <col:7> col:7 'const SourceIPHashMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.SourceIPHashMapper = type { %class.Element.base, %class.IPMapper, %class.Vector, %class.chash_t* }
  NonVirtualBaseLLVMType:%class.SourceIPHashMapper = type { %class.Element.base, %class.IPMapper, %class.Vector, %class.chash_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f8beef0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dd3f8bf008 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55dd3f8bf0a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55dd3f8bf108 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3f8bf168 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55dd3f8bf218 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f8bf520 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3f8bf638 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55dd3f8bf6e0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55dd3f8bf748 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55dd3f8bf7d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55dd3f8c56d0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3f8c5b08 <col:12>
|-CXXConstructorDecl 0x55dd3f8c57d8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3f8c58e8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dd3f8bf6e0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55dd3f8c8090 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55dd3f8c8060 <col:12> 'const char *const' lvalue .data 0x55dd3f8bf6e0
| |     `-DeclRefExpr 0x55dd3f8c8040 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8c58e8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dd3f8bf748 'length' 'int'
| | `-ImplicitCastExpr 0x55dd3f8c8120 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55dd3f8c80f0 <col:12> 'const int' lvalue .length 0x55dd3f8bf748
| |     `-DeclRefExpr 0x55dd3f8c80d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8c58e8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dd3f8bf7d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55dd3f8c81b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55dd3f8c8180 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd3f8bf7d8
| |     `-DeclRefExpr 0x55dd3f8c8160 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8c58e8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55dd3f8c8208 <col:12>
|-CXXConstructorDecl 0x55dd3f8c5988 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd3f8c5988
| `-ParmVarDecl 0x55dd3f8c5a98 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55dd3f8caf80 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3f8d69b8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3f8d6ac8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55dd3f8d6fe0 <col:12>
|   |-BinaryOperator 0x55dd3f8d6df8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55dd3f8d6db0 <col:12> 'const char *' lvalue ->data 0x55dd3f8bf6e0
|   | | `-CXXThisExpr 0x55dd3f8d6da0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dd3f8d6de0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55dd3f8d6d70 <col:12> 'const char *const' lvalue .data 0x55dd3f8bf6e0
|   |     `-DeclRefExpr 0x55dd3f8d6d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8d6ac8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55dd3f8d6ec0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55dd3f8d6e78 <col:12> 'int' lvalue ->length 0x55dd3f8bf748
|   | | `-CXXThisExpr 0x55dd3f8d6e68 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dd3f8d6ea8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55dd3f8d6e38 <col:12> 'const int' lvalue .length 0x55dd3f8bf748
|   |     `-DeclRefExpr 0x55dd3f8d6e18 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8d6ac8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55dd3f8d6f88 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55dd3f8d6f40 <col:12> 'String::memo_t *' lvalue ->memo 0x55dd3f8bf7d8
|   | | `-CXXThisExpr 0x55dd3f8d6f30 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dd3f8d6f70 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55dd3f8d6f00 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd3f8bf7d8
|   |     `-DeclRefExpr 0x55dd3f8d6ee0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8d6ac8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55dd3f8d6fd0 <col:12>
|     `-UnaryOperator 0x55dd3f8d6fb8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd3f8d6fa8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55dd3f8d6b38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd3f8d6b38
  `-ParmVarDecl 0x55dd3f8d6c48 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f8b63d0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3f8b64e8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55dd3f8b6578 <col:16, col:22> col:16 public
|-TypedefDecl 0x55dd3f8b65b8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55dd3f586fd0 'const char *'
|   `-QualType 0x55dd3f586521 'const char' const
|     `-BuiltinType 0x55dd3f586520 'char'
|-TypedefDecl 0x55dd3f8b6640 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55dd3f8b6610 'String::const_iterator' sugar
|   |-Typedef 0x55dd3f8b65b8 'const_iterator'
|   `-PointerType 0x55dd3f586fd0 'const char *'
|     `-QualType 0x55dd3f586521 'const char' const
|       `-BuiltinType 0x55dd3f586520 'char'
|-TypedefDecl 0x55dd3f8b67b0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55dd3f8b6720 'int (String::*)() const'
|   |-RecordType 0x55dd3f8b6460 'String'
|   | `-CXXRecord 0x55dd3f8b63d0 'String'
|   `-ParenType 0x55dd3f8b66c0 'int () const' sugar
|     `-FunctionProtoType 0x55dd3f88b2a0 'int () const' const cdecl
|       `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3f8b6818 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55dd3f6df670 'int64_t' sugar
|   |-Typedef 0x55dd3f5ef390 'int64_t'
|   `-TypedefType 0x55dd3f5c8630 '__int64_t' sugar
|     |-Typedef 0x55dd3f5c8208 '__int64_t'
|     `-BuiltinType 0x55dd3f5865a0 'long'
|-TypedefDecl 0x55dd3f8b6880 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55dd3f6df590 'uint64_t' sugar
|   |-Typedef 0x55dd3f5ef530 'uint64_t'
|   `-TypedefType 0x55dd3f5c86c0 '__uint64_t' sugar
|     |-Typedef 0x55dd3f5c8278 '__uint64_t'
|     `-BuiltinType 0x55dd3f586640 'unsigned long'
|-TypedefDecl 0x55dd3f8b6910 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55dd3f8b68e0 'String::intmax_t' sugar
|   |-Typedef 0x55dd3f8b6818 'intmax_t'
|   `-TypedefType 0x55dd3f6df670 'int64_t' sugar
|     |-Typedef 0x55dd3f5ef390 'int64_t'
|     `-TypedefType 0x55dd3f5c8630 '__int64_t' sugar
|       |-Typedef 0x55dd3f5c8208 '__int64_t'
|       `-BuiltinType 0x55dd3f5865a0 'long'
|-TypedefDecl 0x55dd3f8b69a0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55dd3f8b6970 'String::uintmax_t' sugar
|   |-Typedef 0x55dd3f8b6880 'uintmax_t'
|   `-TypedefType 0x55dd3f6df590 'uint64_t' sugar
|     |-Typedef 0x55dd3f5ef530 'uint64_t'
|     `-TypedefType 0x55dd3f5c86c0 '__uint64_t' sugar
|       |-Typedef 0x55dd3f5c8278 '__uint64_t'
|       `-BuiltinType 0x55dd3f586640 'unsigned long'
|-CXXConstructorDecl 0x55dd3f8b6a60 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55dd3f8b6c08 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55dd3f8b6b48 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55dd3f8b6db8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55dd3f8b6cf8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55dd3f8b6f10 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55dd3f8b6e80 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55dd3f8b7128 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dd3f8b6fd8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55dd3f8b7058 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55dd3f8b7348 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55dd3f8b71f8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55dd3f8b7278 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55dd3f8b7568 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dd3f8b7418 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55dd3f8b7498 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55dd3f8b7788 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55dd3f8b7638 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55dd3f8b76b8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55dd3f8b7918 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55dd3f8b7850 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55dd3f8b7a98 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55dd3f8b79d8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55dd3f8b7c28 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55dd3f8b7b60 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55dd3f8b7d80 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55dd3f8b7cf0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55dd3f8b7ed8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55dd3f8b7e48 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55dd3f8b8030 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55dd3f8b7fa0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55dd3f8b81b8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55dd3f8b80f8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55dd3f8b8348 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55dd3f8b8280 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55dd3f8b84d8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55dd3f8b8410 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55dd3f8b8668 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55dd3f8b85a0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55dd3f8b8760 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55dd3f8b8888 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55dd3f8b8a08 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55dd3f8b8940 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55dd3f8b8b58 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55dd3f8b8ac8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55dd3f8b8c00 <col:63> "" ""
|-CXXMethodDecl 0x55dd3f8b8d48 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55dd3f8b8c88 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55dd3f8b8f58 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55dd3f8b8e08 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55dd3f8b8e88 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55dd3f8b91c8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55dd3f8b9020 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55dd3f8b90f0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55dd3f8b94a8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55dd3f8b9288 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55dd3f8b9308 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55dd3f8c51a0 <col:55> 'int' 10
| `-ParmVarDecl 0x55dd3f8b9380 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3f8c51c0 <col:76> 'bool' true
|-CXXMethodDecl 0x55dd3f8b9788 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55dd3f8b9570 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55dd3f8b95f0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55dd3f8c51d0 <col:56> 'int' 10
| `-ParmVarDecl 0x55dd3f8b9668 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3f8c51f0 <col:77> 'bool' true
|-CXXMethodDecl 0x55dd3f8b9890 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55dd3f8b9958 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55dd3f8b9a20 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55dd3f8b9ac0 <col:20>
| `-OptimizeNoneAttr 0x55dd3f8b9b18 <col:30>
|-CXXConversionDecl 0x55dd3f8b9c08 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55dd3f8b9cd8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55dd3f8b9d98 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55dd3f8b9e88 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55dd3f8b9f48 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55dd3f8ba0c8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55dd3f8ba000 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55dd3f8ba218 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55dd3f8ba188 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55dd3f8ba308 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55dd3f8ba3c8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55dd3f8ba618 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55dd3f8ba480 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55dd3f8ba500 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55dd3f8ba878 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55dd3f8ba6e0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55dd3f8ba760 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55dd3f8ba948 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3f8bab58 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55dd3f8baa00 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55dd3f8baa80 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55dd3f8bad78 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55dd3f8bac20 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55dd3f8baca0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55dd3f8baf08 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55dd3f8bae40 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55dd3f8baff8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55dd3f8bb168 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55dd3f8bb0a8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dd3f8bb378 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55dd3f8bb228 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dd3f8bb2a8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dd3f8bb590 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55dd3f8bb438 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55dd3f8bb4b0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55dd3f8bb720 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55dd3f8bb650 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dd3f8bb940 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55dd3f8bb7e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55dd3f8bb860 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55dd3f8bba90 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55dd3f8bba00 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55dd3f8bbc68 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55dd3f8bbb50 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dd3f8bbbd0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55dd3f8bbdb8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55dd3f8bbd28 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55dd3f8bbfd0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55dd3f8bbe70 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55dd3f8bbef0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55dd3f8c5200 <col:39> 'int' 0
|-CXXMethodDecl 0x55dd3f8bc1f0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55dd3f8bc090 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55dd3f8bc110 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55dd3f8c5220 <col:48> 'int' 0
|-CXXMethodDecl 0x55dd3f8bc3d0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55dd3f8bc2b0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55dd3f8bc330 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55dd3f8c5240 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55dd3f8bc4a0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55dd3f8bc560 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55dd3f8bc620 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55dd3f8bc6e0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55dd3f8bc7a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55dd3f8bc948 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55dd3f8bc850 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55dd3f8bcac8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55dd3f8bca00 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55dd3f8bcc48 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55dd3f8bcb88 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55dd3f8bcdc8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55dd3f8bcd00 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55dd3f8bcf10 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55dd3f8bce80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dd3f8bd100 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55dd3f8bcfd0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55dd3f8bd2d8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dd3f8bd1c0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dd3f8bd240 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dd3f8bd4b8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dd3f8bd3a0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55dd3f8bd420 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55dd3f8bd608 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55dd3f8bd578 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55dd3f8bd818 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55dd3f8bd6c8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55dd3f8bd748 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55dd3f8bd978 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55dd3f8bd8e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55dd3f8bdad0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55dd3f8bda38 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55dd3f8bdb78 <col:57> "" ""
|-CXXMethodDecl 0x55dd3f8bdc88 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55dd3f8bdbf8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55dd3f8bddd8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55dd3f8bdd48 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55dd3f8bdf58 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55dd3f8bde90 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55dd3f8be020 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55dd3f8be0e0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55dd3f8be1a0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55dd3f8be240 <col:49> "" ""
|-CXXMethodDecl 0x55dd3f8be2d0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55dd3f8be390 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55dd3f8be480 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55dd3f8be548 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55dd3f8be608 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55dd3f8be6c8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55dd3f8be7c0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55dd3f8be888 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55dd3f8be950 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55dd3f8beb28 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55dd3f8bea08 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55dd3f8bea88 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55dd3f8bed50 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55dd3f8bebf0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55dd3f8bec70 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55dd3f8bee60 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55dd3f8beec8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd3f8beef0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dd3f8bf008 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55dd3f8bf0a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55dd3f8bf108 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55dd3f8bf168 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55dd3f8bf218 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55dd3f8bf280 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55dd3f8bf4b8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55dd3f8bf508 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3f8bf498 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55dd3f8bf3a8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55dd3f8bf350 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55dd3f8bf390 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55dd3f8bf370 <col:32> 'int' 8
|-CXXRecordDecl 0x55dd3f8bf520 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd3f8bf638 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55dd3f8bf6e0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55dd3f8bf748 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55dd3f8bf7d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55dd3f8c56d0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd3f8c5b08 <col:12>
| |-CXXConstructorDecl 0x55dd3f8c57d8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd3f8c58e8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dd3f8bf6e0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55dd3f8c8090 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55dd3f8c8060 <col:12> 'const char *const' lvalue .data 0x55dd3f8bf6e0
| | |     `-DeclRefExpr 0x55dd3f8c8040 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8c58e8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dd3f8bf748 'length' 'int'
| | | `-ImplicitCastExpr 0x55dd3f8c8120 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55dd3f8c80f0 <col:12> 'const int' lvalue .length 0x55dd3f8bf748
| | |     `-DeclRefExpr 0x55dd3f8c80d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8c58e8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dd3f8bf7d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55dd3f8c81b0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55dd3f8c8180 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd3f8bf7d8
| | |     `-DeclRefExpr 0x55dd3f8c8160 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8c58e8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55dd3f8c8208 <col:12>
| |-CXXConstructorDecl 0x55dd3f8c5988 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd3f8c5988
| | `-ParmVarDecl 0x55dd3f8c5a98 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55dd3f8caf80 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55dd3f8d69b8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd3f8d6ac8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55dd3f8d6fe0 <col:12>
| |   |-BinaryOperator 0x55dd3f8d6df8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55dd3f8d6db0 <col:12> 'const char *' lvalue ->data 0x55dd3f8bf6e0
| |   | | `-CXXThisExpr 0x55dd3f8d6da0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dd3f8d6de0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55dd3f8d6d70 <col:12> 'const char *const' lvalue .data 0x55dd3f8bf6e0
| |   |     `-DeclRefExpr 0x55dd3f8d6d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8d6ac8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55dd3f8d6ec0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55dd3f8d6e78 <col:12> 'int' lvalue ->length 0x55dd3f8bf748
| |   | | `-CXXThisExpr 0x55dd3f8d6e68 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dd3f8d6ea8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55dd3f8d6e38 <col:12> 'const int' lvalue .length 0x55dd3f8bf748
| |   |     `-DeclRefExpr 0x55dd3f8d6e18 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8d6ac8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55dd3f8d6f88 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55dd3f8d6f40 <col:12> 'String::memo_t *' lvalue ->memo 0x55dd3f8bf7d8
| |   | | `-CXXThisExpr 0x55dd3f8d6f30 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dd3f8d6f70 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55dd3f8d6f00 <col:12> 'String::memo_t *const' lvalue .memo 0x55dd3f8bf7d8
| |   |     `-DeclRefExpr 0x55dd3f8d6ee0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dd3f8d6ac8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55dd3f8d6fd0 <col:12>
| |     `-UnaryOperator 0x55dd3f8d6fb8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dd3f8d6fa8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55dd3f8d6b38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dd3f8d6b38
|   `-ParmVarDecl 0x55dd3f8d6c48 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55dd3f8bf850 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55dd3f8bfa98 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55dd3f8bf8b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55dd3f8bf938 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55dd3f8bf9b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55dd3f8c5690 <col:79, line:261:5>
|   |-BinaryOperator 0x55dd3f8c5308 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55dd3f8c52a0 <col:2, col:5> 'const char *' lvalue .data 0x55dd3f8bf6e0
|   | | `-MemberExpr 0x55dd3f8c5270 <col:2> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|   | |   `-CXXThisExpr 0x55dd3f8c5260 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55dd3f8c52f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd3f8c52d0 <col:12> 'const char *' lvalue ParmVar 0x55dd3f8bf8b8 'data' 'const char *'
|   |-BinaryOperator 0x55dd3f8c53d0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55dd3f8c5368 <col:2, col:5> 'int' lvalue .length 0x55dd3f8bf748
|   | | `-MemberExpr 0x55dd3f8c5338 <col:2> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|   | |   `-CXXThisExpr 0x55dd3f8c5328 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55dd3f8c53b8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd3f8c5398 <col:14> 'int' lvalue ParmVar 0x55dd3f8bf938 'length' 'int'
|   `-IfStmt 0x55dd3f8c5678 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55dd3f8c54f0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55dd3f8c54d8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55dd3f8c54b8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55dd3f8c5498 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55dd3f8c5430 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|     |       | `-MemberExpr 0x55dd3f8c5400 <col:7> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|     |       |   `-CXXThisExpr 0x55dd3f8c53f0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55dd3f8c5480 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55dd3f8c5460 <col:17> 'String::memo_t *' lvalue ParmVar 0x55dd3f8bf9b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55dd3f8c5650 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55dd3f8c5638 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3f8c5540 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55dd3f8b0490 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55dd3f8c55a8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dd3f8bf0a8
|         `-ImplicitCastExpr 0x55dd3f8c5590 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55dd3f8c5570 <col:27> 'String::memo_t *' lvalue ParmVar 0x55dd3f8bf9b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55dd3f8bfd48 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55dd3f8bfb68 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55dd3f8bfbe8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55dd3f8bfc60 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55dd3f8bf850 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55dd3f8c5b18 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3f8c5ca8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55dd3f8c5c10 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55dd3f8c5b80 <col:2> '<bound member function type>' ->assign_memo 0x55dd3f8bfa98
|     | `-ImplicitCastExpr 0x55dd3f8c5c48 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55dd3f8c5b70 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55dd3f8c5c60 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3f8c5bb0 <col:14> 'const char *' lvalue ParmVar 0x55dd3f8bfb68 'data' 'const char *'
|     |-ImplicitCastExpr 0x55dd3f8c5c78 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3f8c5bd0 <col:20> 'int' lvalue ParmVar 0x55dd3f8bfbe8 'length' 'int'
|     `-ImplicitCastExpr 0x55dd3f8c5c90 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3f8c5bf0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55dd3f8bfc60 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55dd3f8bfed8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55dd3f8bfe18 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55dd3f8c5f00 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55dd3f8c5e80 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55dd3f8c5cd0 <col:2> '<bound member function type>' ->assign_memo 0x55dd3f8bfa98
|     | `-CXXThisExpr 0x55dd3f8c5cc0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55dd3f8c5eb8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55dd3f8c5d50 <col:14, col:19> 'const char *' lvalue .data 0x55dd3f8bf6e0
|     |   `-MemberExpr 0x55dd3f8c5d20 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55dd3f8bf850
|     |     `-DeclRefExpr 0x55dd3f8c5d00 <col:14> 'const String' lvalue ParmVar 0x55dd3f8bfe18 'x' 'const String &'
|     |-ImplicitCastExpr 0x55dd3f8c5ed0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55dd3f8c5dd0 <col:25, col:30> 'int' lvalue .length 0x55dd3f8bf748
|     |   `-MemberExpr 0x55dd3f8c5da0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55dd3f8bf850
|     |     `-DeclRefExpr 0x55dd3f8c5d80 <col:25> 'const String' lvalue ParmVar 0x55dd3f8bfe18 'x' 'const String &'
|     `-ImplicitCastExpr 0x55dd3f8c5ee8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55dd3f8c5e50 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|         `-MemberExpr 0x55dd3f8c5e20 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55dd3f8bf850
|           `-DeclRefExpr 0x55dd3f8c5e00 <col:38> 'const String' lvalue ParmVar 0x55dd3f8bfe18 'x' 'const String &'
|-CXXMethodDecl 0x55dd3f8bffa0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55dd3f8c68c0 <col:31, line:278:5>
|   `-IfStmt 0x55dd3f8c68a8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55dd3f8c5fa0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55dd3f8c5f88 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55dd3f8c5f58 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|     |     `-MemberExpr 0x55dd3f8c5f28 <col:6> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|     |       `-CXXThisExpr 0x55dd3f8c5f18 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55dd3f8c6880 <col:15, line:277:2>
|       |-ParenExpr 0x55dd3f8c6450 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55dd3f8c6420 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55dd3f8c60b0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55dd3f8c6098 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55dd3f8c6080 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55dd3f8c6040 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dd3f8bf0a8
|       |   |       `-ImplicitCastExpr 0x55dd3f8c6028 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55dd3f8c5ff8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|       |   |           `-MemberExpr 0x55dd3f8c5fc8 <col:27> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|       |   |             `-CXXThisExpr 0x55dd3f8c5fb8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55dd3f8c6110 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55dd3f8c60f0 <col:54> 'int' 0
|       |   `-CallExpr 0x55dd3f8c6380 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55dd3f8c6368 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55dd3f8c62e8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55dd3f8c63c0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55dd3f8c61f8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55dd3f8c63d8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55dd3f8c6228 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55dd3f8c63f0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55dd3f8c6260 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55dd3f8c6408 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55dd3f8c62d0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55dd3f8c62b8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55dd3f8c6280 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55dd3f8c67a0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55dd3f8c6660 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55dd3f8c6648 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55dd3f8c65c0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55dd3f8b18d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55dd3f8c6590 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dd3f8bf0a8
|       | |   `-ImplicitCastExpr 0x55dd3f8c6578 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55dd3f8c6548 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|       | |       `-MemberExpr 0x55dd3f8c6518 <col:40> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|       | |         `-CXXThisExpr 0x55dd3f8c6508 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55dd3f8c6760 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55dd3f8c6748 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55dd3f8c6688 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55dd3f8c0c78 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55dd3f8c6788 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55dd3f8c66e8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|       |       `-MemberExpr 0x55dd3f8c66b8 <col:15> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|       |         `-CXXThisExpr 0x55dd3f8c66a8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55dd3f8c6860 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55dd3f8c67f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55dd3f8bf7d8
|         | `-MemberExpr 0x55dd3f8c67c8 <col:6> 'String::rep_t' lvalue ->_r 0x55dd3f8bf850
|         |   `-CXXThisExpr 0x55dd3f8c67b8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55dd3f8c6848 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55dd3f8c6828 <col:16> 'int' 0
|-CXXMethodDecl 0x55dd3f8c0238 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55dd3f8c0058 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55dd3f8c00d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55dd3f8c0150 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55dd3f8c0310 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55dd3f8c0560 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55dd3f8c03c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55dd3f8c0448 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55dd3f8c04c0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55dd3f8c0748 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55dd3f8c0630 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55dd3f8c06b0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55dd3f8c0848 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55dd3f8c6998 <col:41, line:286:5>
|   `-ReturnStmt 0x55dd3f8c6988 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55dd3f8c6958 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55dd3f8c6920 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55dd3f8c6908 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55dd3f8c68e8 <col:46> 'int' 1
|-CXXMethodDecl 0x55dd3f8c0ae8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55dd3f8c0900 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55dd3f8c0980 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55dd3f8c0a00 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55dd3f8c0c78 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55dd3f8c0bb0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55dd3f8c0d48 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55dd3f8c0f18 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55dd3f8c0e00 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dd3f8c0e80 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55dd3f8c0fd8 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55dd3f8c4a00 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55dd3f8c4b08 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55dd3f8c4b80 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55dd3f8c4bf8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55dd3f8c4c60 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55dd3f8c4d60 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55dd3f8c4db0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3f8c4d40 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55dd3f8c4d20 <col:22> 'int' 14
|-CXXMethodDecl 0x55dd3f8c4fc8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55dd3f8c4de0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55dd3f8c4e60 <col:38> col:41 'int'
| `-ParmVarDecl 0x55dd3f8c4ee0 <col:43> col:46 'int'
|-FriendDecl 0x55dd3f8c50d0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55dd3f8c5160 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fc31318 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55dd3fcb9408 prev 0x55dd3fc31318 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55dd3fcb9498 <col:31, col:37> col:31 public
|-TypedefDecl 0x55dd3fcb9590 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55dd3fcb9540 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55dd3fcb9520 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55dd3fc82bf0 'key_type'
|     `-RecordType 0x55dd3fc21d80 'IPFlowID'
|       `-CXXRecord 0x55dd3fc21ce8 'IPFlowID'
|-TypedefDecl 0x55dd3fcb9660 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55dd3fcb9610 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55dd3fc83630 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55dd3fc82c58 'key_const_reference'
|     `-LValueReferenceType 0x55dd3fc241f0 'const IPFlowID &'
|       `-QualType 0x55dd3fc21d81 'const IPFlowID' const
|         `-RecordType 0x55dd3fc21d80 'IPFlowID'
|           `-CXXRecord 0x55dd3fc21ce8 'IPFlowID'
|-CXXMethodDecl 0x55dd3fcb9850 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55dd3fcb9758 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55dd3fcb9a58 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55dd3fcb9968 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55dd3fcb9cb8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55dd3fcb9b68 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55dd3fcb9be0 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55dd3fcbdd38 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55dd3fcbdd38
| `-ParmVarDecl 0x55dd3fcbde48 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55dd3fcbdee8 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55dd3fcbdee8
| `-ParmVarDecl 0x55dd3fcbdff8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55dd3fcbe208 <col:7> col:7 implicit ~HashContainer_adapter 'void ()' inline default trivial noexcept-unevaluated 0x55dd3fcbe208
|-CXXMethodDecl 0x55dd3fcbe348 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55dd3fcbe348
| `-ParmVarDecl 0x55dd3fcbe458 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55dd3fcbe4c8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55dd3fcbe4c8
  `-ParmVarDecl 0x55dd3fcbe5d8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb6bcc0 prev 0x55dd3f7a5368 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fb6bdb8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55dd3fb6be48 <col:19, col:25> col:19 public
|-TypedefDecl 0x55dd3fb6be80 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55dd3f6df0e0 'uninitialized_type'
|   `-CXXRecord 0x55dd3f6df048 'uninitialized_type'
|-CXXConstructorDecl 0x55dd3fb6bf10 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6e6d8 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3fb6e698 <col:10> 'int' 0
| `-CompoundStmt 0x55dd3fb6e720 <col:13, line:22:5>
|-CXXConstructorDecl 0x55dd3fb6c060 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55dd3fb6bfd0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6e770 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3fb6e730 <col:10> 'unsigned int' lvalue ParmVar 0x55dd3fb6bfd0 'x' 'unsigned int'
| `-CompoundStmt 0x55dd3fb6e7b8 <col:13, line:27:5>
|-CXXConstructorDecl 0x55dd3fb6c1b8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55dd3fb6c128 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6e820 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55dd3fb6e808 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55dd3fb6e7c8 <col:10> 'int' lvalue ParmVar 0x55dd3fb6c128 'x' 'int'
| `-CompoundStmt 0x55dd3fb6e868 <col:13, line:31:5>
|-CXXConstructorDecl 0x55dd3fb6c310 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55dd3fb6c280 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6e8d0 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55dd3fb6e8b8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55dd3fb6e878 <col:10> 'unsigned long' lvalue ParmVar 0x55dd3fb6c280 'x' 'unsigned long'
| `-CompoundStmt 0x55dd3fb6e918 <col:13, line:35:5>
|-CXXConstructorDecl 0x55dd3fb6c468 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55dd3fb6c3d8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6e980 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55dd3fb6e968 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55dd3fb6e928 <col:10> 'long' lvalue ParmVar 0x55dd3fb6c3d8 'x' 'long'
| `-CompoundStmt 0x55dd3fb6e9c8 <col:13, line:39:5>
|-CXXConstructorDecl 0x55dd3fb6c628 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55dd3fb6c538 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6ea48 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fb6e9f8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55dd3f852c00
| |     `-DeclRefExpr 0x55dd3fb6e9d8 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55dd3fb6c538 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55dd3fb6ea90 <col:20, line:44:5>
|-CXXConstructorDecl 0x55dd3fb6c7b8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55dd3fb6c6f0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55dd3fb6ebf8 <col:51, line:56:5>
|   `-BinaryOperator 0x55dd3fb6ebd8 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55dd3fb6eab0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55dd3fb6e630
|     | `-CXXThisExpr 0x55dd3fb6eaa0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55dd3fb6ebc0 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fb6eba8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55dd3fb6eb88 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55dd3fb6eb58 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55dd3fb6eb40 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55dd3fb6eae0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55dd3fb6c6f0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55dd3fb6c908 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55dd3fb6c878 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55dd3fb6ca58 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55dd3fb6c9c8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55dd3fb6ec68 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55dd3fb6ec40 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55dd3fb6ec10 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55dd3fb6c9c8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55dd3fb6cbe8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55dd3fb6cb20 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55dd3fb6ccd8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55dd3fb6f828 <col:46, line:83:5>
|   `-ReturnStmt 0x55dd3fb6f818 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55dd3fb6f800 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55dd3fb6f7d0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fb6f688 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55dd3fb6f570 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55dd3fb6f458 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55dd3fb6ec90 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55dd3fb6cdc8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55dd3fb6f8d8 <col:31, line:88:5>
|   `-ReturnStmt 0x55dd3fb6f8c8 <line:87:2, col:10>
|     `-UnaryOperator 0x55dd3fb6f8b0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55dd3fb6f898 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55dd3fb6f880 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55dd3fb6f850 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55dd3fb6e630
|             `-CXXThisExpr 0x55dd3fb6f840 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55dd3fb6ce88 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55dd3fb6f958 <col:34, line:93:5>
|   `-ReturnStmt 0x55dd3fb6f948 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb6f930 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dd3fb6f900 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55dd3fb6e630
|         `-CXXThisExpr 0x55dd3fb6f8f0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55dd3fb6cf58 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55dd3fb6f9d8 <col:38, line:101:5>
|   `-ReturnStmt 0x55dd3fb6f9c8 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb6f9b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dd3fb6f980 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55dd3fb6e630
|         `-CXXThisExpr 0x55dd3fb6f970 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55dd3fb6d028 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55dd3fb6fc48 <col:38, line:108:5>
|   `-ReturnStmt 0x55dd3fb6fc38 <line:107:2, col:58>
|     `-BinaryOperator 0x55dd3fb6fc18 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55dd3fb6fb30 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55dd3fb6fb10 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55dd3fb6faf8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55dd3fb6fa00 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55dd3fb6e630
|       |   |   `-CXXThisExpr 0x55dd3fb6f9f0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55dd3fb6fad0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55dd3fb6fab8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55dd3fb6fa98 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55dd3f85a028 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55dd3fb6fa78 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55dd3fb6fbf0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55dd3fb6fbd8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55dd3fb6fbb8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55dd3f85a028 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55dd3fb6fb98 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55dd3fb6d0e8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55dd3fb6feb8 <col:39, line:112:5>
|   `-ReturnStmt 0x55dd3fb6fea8 <line:111:2, col:56>
|     `-BinaryOperator 0x55dd3fb6fe88 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55dd3fb6fda0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55dd3fb6fd80 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55dd3fb6fd68 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55dd3fb6fc70 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55dd3fb6e630
|       |   |   `-CXXThisExpr 0x55dd3fb6fc60 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55dd3fb6fd40 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55dd3fb6fd28 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55dd3fb6fd08 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55dd3f85a028 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55dd3fb6fce8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55dd3fb6fe60 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55dd3fb6fe48 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55dd3fb6fe28 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55dd3f85a028 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55dd3fb6fe08 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55dd3fb6d218 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55dd3fb6d320 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55dd3fb6d430 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55dd3fb6d520 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd3fb6d5e0 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb6d6a8 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55dd3fb6d8a8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55dd3fb6d758 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55dd3fb6d7d0 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6da28 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55dd3fb6d968 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6db70 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55dd3fb6dae0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6dd18 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55dd3fb6dc28 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6de60 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55dd3fb6ddd0 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6dfa8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55dd3fb6df18 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6e070 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55dd3fb6e130 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55dd3fb6e2a8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55dd3fb6e1e0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55dd3fb6e370 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55dd3fb6e458 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55dd3fb6e500 <col:51> "" ""
|-TypedefDecl 0x55dd3fb6e5a0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55dd3f7a5400 'IPAddress'
|   `-CXXRecord 0x55dd3fb6bcc0 'IPAddress'
|-AccessSpecDecl 0x55dd3fb6e5f8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55dd3fb6e630 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd3fb6ecd8 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fb6ede8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fc24728 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fc246e0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55dd3fb6e630
| |     `-DeclRefExpr 0x55dd3fc246c0 <col:7> 'const IPAddress' lvalue ParmVar 0x55dd3fb6ede8 '' 'const IPAddress &'
| `-CompoundStmt 0x55dd3fc24770 <col:7>
|-CXXConstructorDecl 0x55dd3fb6ee88 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fb6ef98 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55dd3fb6e630 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb6f778 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fb6f730 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55dd3fb6e630
| |     `-CXXStaticCastExpr 0x55dd3fb6f700 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fb6f6d0 <col:7> 'IPAddress' lvalue ParmVar 0x55dd3fb6ef98 '' 'IPAddress &&'
| `-CompoundStmt 0x55dd3fb6f7c0 <col:7>
|-CXXDestructorDecl 0x55dd3fb6f488 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3fc25018 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fc25128 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55dd3fc25480 <col:7>
|   |-BinaryOperator 0x55dd3fc25428 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55dd3fc253e0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55dd3fb6e630
|   | | `-CXXThisExpr 0x55dd3fc253d0 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55dd3fc25410 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55dd3fc253a0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55dd3fb6e630
|   |     `-DeclRefExpr 0x55dd3fc25380 <col:7> 'const IPAddress' lvalue ParmVar 0x55dd3fc25128 '' 'const IPAddress &'
|   `-ReturnStmt 0x55dd3fc25470 <col:7>
|     `-UnaryOperator 0x55dd3fc25458 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd3fc25448 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55dd3fc25198 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55dd3fc25198
  `-ParmVarDecl 0x55dd3fc252a8 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fc21ce8 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fc21e08 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55dd3fc21e98 <col:18, col:24> col:18 public
|-TypedefDecl 0x55dd3fc21ed0 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55dd3f6df0e0 'uninitialized_type'
|   `-CXXRecord 0x55dd3f6df048 'uninitialized_type'
|-CXXConstructorDecl 0x55dd3fc21f90 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fc23e78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc24448 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fc23ed8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc244b0 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fc23f38 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55dd3fc24540 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3fc24500 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3fc23f98 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55dd3fc245c0 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3fc24580 <col:42> 'int' 0
| `-CompoundStmt 0x55dd3fc24620 <col:45, line:19:5>
|-CXXConstructorDecl 0x55dd3fc222f8 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55dd3fc22048 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55dd3fc220c0 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55dd3fc22138 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55dd3fc221b0 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55dd3fc23e78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc24780 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55dd3fc24670 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55dd3fc24630 <col:11> 'IPAddress' lvalue ParmVar 0x55dd3fc22048 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55dd3fc23ed8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc24830 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55dd3fc24818 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55dd3fc247d8 <col:26> 'IPAddress' lvalue ParmVar 0x55dd3fc22138 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55dd3fc23f38 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55dd3fc248c8 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3fc24888 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fc220c0 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55dd3fc23f98 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55dd3fc24948 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3fc24908 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fc221b0 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55dd3fc249a8 <col:63, line:28:5>
|-CXXConstructorDecl 0x55dd3fc22518 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55dd3fc223d0 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55dd3fc22448 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3fc24410 <col:55> 'bool' false
|-CXXConstructorDecl 0x55dd3fc22728 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55dd3fc225e0 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55dd3fc22658 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3fc24420 <col:59> 'bool' false
|-CXXConstructorDecl 0x55dd3fc22880 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55dd3fc227f0 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55dd3fc23e78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc249b8 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fc23ed8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc24a08 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55dd3fc24ac0 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55dd3fc24a98 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55dd3fc24a68 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55dd3fc227f0 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55dd3fc22a38 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55dd3fc229b0 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55dd3fc21d80 'IPFlowID'
|   | `-CXXRecord 0x55dd3fc21ce8 'IPFlowID'
|   `-ParenType 0x55dd3fc22950 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55dd3fb82220 'IPAddress () const' const cdecl
|       `-RecordType 0x55dd3f7a5400 'IPAddress'
|         `-CXXRecord 0x55dd3fb6bcc0 'IPAddress'
|-CXXConversionDecl 0x55dd3fc22b78 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55dd3fc24d70 <col:44, line:59:5>
|   `-ReturnStmt 0x55dd3fc24d60 <line:58:2, col:47>
|     `-ConditionalOperator 0x55dd3fc24d30 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55dd3fc24c58 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55dd3fc24c28 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55dd3fc24ba8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55dd3fc24b88 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55dd3fc24b58 <col:9> '<bound member function type>' .operator unsigned int 0x55dd3fb6cf58
|       | |       `-MemberExpr 0x55dd3fc24ae8 <col:9> 'const IPAddress' lvalue ->_saddr 0x55dd3fc23e78
|       | |         `-CXXThisExpr 0x55dd3fc24ad8 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55dd3fc24c40 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55dd3fc24c10 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55dd3fc24bf0 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55dd3fc24bc0 <col:19> '<bound member function type>' .operator unsigned int 0x55dd3fb6cf58
|       |         `-MemberExpr 0x55dd3fc24b28 <col:19> 'const IPAddress' lvalue ->_daddr 0x55dd3fc23ed8
|       |           `-CXXThisExpr 0x55dd3fc24b18 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55dd3fc24ce0 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55dd3fc24cb0 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55dd3fc22c48 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55dd3fc24d18 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55dd3fc24cf8 <col:47> 'int' 0
|-CXXMethodDecl 0x55dd3fc22c48 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55dd3fc24e08 <col:29, line:65:5>
|   `-ReturnStmt 0x55dd3fc24df8 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55dd3fc24dc8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55dd3fc24d98 <col:9> 'const IPAddress' lvalue ->_saddr 0x55dd3fc23e78
|         `-CXXThisExpr 0x55dd3fc24d88 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55dd3fc22d68 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55dd3fc24e88 <col:28, line:69:5>
|   `-ReturnStmt 0x55dd3fc24e78 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fc24e60 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55dd3fc24e30 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55dd3fc23f38
|         `-CXXThisExpr 0x55dd3fc24e20 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55dd3fc22e28 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55dd3fc24f20 <col:29, line:73:5>
|   `-ReturnStmt 0x55dd3fc24f10 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55dd3fc24ee0 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55dd3fc24eb0 <col:9> 'const IPAddress' lvalue ->_daddr 0x55dd3fc23ed8
|         `-CXXThisExpr 0x55dd3fc24ea0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55dd3fc22ee8 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55dd3fc24fa0 <col:28, line:77:5>
|   `-ReturnStmt 0x55dd3fc24f90 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fc24f78 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55dd3fc24f48 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55dd3fc23f98
|         `-CXXThisExpr 0x55dd3fc24f38 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55dd3fc23028 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55dd3fc22f98 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55dd3fc25548 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55dd3fc25510 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55dd3fc254f8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55dd3fc25330 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55dd3fc25018 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55dd3fc24fc8 <col:2> 'IPAddress' lvalue ->_saddr 0x55dd3fc23e78
|     | `-CXXThisExpr 0x55dd3fc24fb8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc25318 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55dd3fc24ff8 <col:11> 'IPAddress' lvalue ParmVar 0x55dd3fc22f98 'a' 'IPAddress'
|-CXXMethodDecl 0x55dd3fc231d8 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55dd3fc230e0 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55dd3fc255f8 <col:32, line:87:5>
|   `-BinaryOperator 0x55dd3fc255d8 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55dd3fc25570 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55dd3fc23f38
|     | `-CXXThisExpr 0x55dd3fc25560 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc255c0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fc255a0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fc230e0 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55dd3fc23320 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55dd3fc23290 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55dd3fc256f8 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55dd3fc256c0 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55dd3fc256a8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55dd3fc25688 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55dd3fc25018 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55dd3fc25620 <col:2> 'IPAddress' lvalue ->_daddr 0x55dd3fc23ed8
|     | `-CXXThisExpr 0x55dd3fc25610 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc25670 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55dd3fc25650 <col:11> 'IPAddress' lvalue ParmVar 0x55dd3fc23290 'a' 'IPAddress'
|-CXXMethodDecl 0x55dd3fc23468 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55dd3fc233d8 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55dd3fc257a8 <col:32, line:96:5>
|   `-BinaryOperator 0x55dd3fc25788 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55dd3fc25720 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55dd3fc23f98
|     | `-CXXThisExpr 0x55dd3fc25710 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc25770 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fc25750 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fc233d8 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55dd3fc23730 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55dd3fc23520 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55dd3fc23598 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55dd3fc23610 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55dd3fc23688 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55dd3fc25ac0 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55dd3fc25870 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55dd3fc25858 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55dd3fc25838 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55dd3fc25018 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55dd3fc257d0 <col:2> 'IPAddress' lvalue ->_saddr 0x55dd3fc23e78
|   | | `-CXXThisExpr 0x55dd3fc257c0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc25820 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55dd3fc25800 <col:11> 'IPAddress' lvalue ParmVar 0x55dd3fc23520 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55dd3fc25958 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55dd3fc25940 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55dd3fc25920 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55dd3fc25018 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55dd3fc258b8 <col:2> 'IPAddress' lvalue ->_daddr 0x55dd3fc23ed8
|   | | `-CXXThisExpr 0x55dd3fc258a8 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc25908 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55dd3fc258e8 <col:11> 'IPAddress' lvalue ParmVar 0x55dd3fc23610 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55dd3fc25a08 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55dd3fc259a0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55dd3fc23f38
|   | | `-CXXThisExpr 0x55dd3fc25990 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc259f0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd3fc259d0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fc23598 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55dd3fc25aa0 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55dd3fc25a38 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55dd3fc23f98
|     | `-CXXThisExpr 0x55dd3fc25a28 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc25a88 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fc25a68 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fc23688 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55dd3fc23838 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55dd3fc2c478 <col:30, line:115:5>
|   `-ReturnStmt 0x55dd3fc2c468 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55dd3fc2c450 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55dd3fc2c420 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fc2bfd8 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fc2be48 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55dd3fc25f38 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55dd3fc25b10 <col:18> 'const IPAddress' lvalue ->_daddr 0x55dd3fc23ed8
|             |   `-CXXThisExpr 0x55dd3fc25b00 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55dd3fc25f68 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55dd3fc25b50 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55dd3fc23f98
|             |   `-CXXThisExpr 0x55dd3fc25b40 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55dd3fc2be00 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55dd3fc25b90 <col:34> 'const IPAddress' lvalue ->_saddr 0x55dd3fc23e78
|             |   `-CXXThisExpr 0x55dd3fc25b80 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55dd3fc2be30 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55dd3fc25bd0 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55dd3fc23f38
|                 `-CXXThisExpr 0x55dd3fc25bc0 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55dd3fc238f8 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55dd3fc23998 <col:48> "" ""
|-CXXMethodDecl 0x55dd3fc23a58 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55dd3fc23b18 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55dd3fc23be8 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55dd3fc23c90 <col:51> "" ""
|-CXXMethodDecl 0x55dd3fc23d30 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55dd3fc23dd0 <col:44> "" ""
|-AccessSpecDecl 0x55dd3fc23e40 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55dd3fc23e78 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55dd3fc23ed8 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55dd3fc23f38 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55dd3fc23f98 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55dd3fc240d0 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55dd3fc24000 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55dd3fc243b8 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55dd3fc242f8 parent 0x55dd3f586488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55dd3fc24188 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55dd3fc24228 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55dd3fc25c00 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55dd3fc25c00
| `-ParmVarDecl 0x55dd3fc25d18 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55dd3fc25db8 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fc25ec8 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55dd3fc23e78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc2c0c8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55dd3fc2c080 <col:7> 'IPAddress' xvalue ._saddr 0x55dd3fc23e78
| |     `-CXXStaticCastExpr 0x55dd3fc2c050 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fc2c020 <col:7> 'IPFlowID' lvalue ParmVar 0x55dd3fc25ec8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55dd3fc23ed8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55dd3fc2c1c8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55dd3fc2c180 <col:7> 'IPAddress' xvalue ._daddr 0x55dd3fc23ed8
| |     `-CXXStaticCastExpr 0x55dd3fc2c150 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fc2c120 <col:7> 'IPFlowID' lvalue ParmVar 0x55dd3fc25ec8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55dd3fc23f38 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55dd3fc2c2c8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fc2c280 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55dd3fc23f38
| |     `-CXXStaticCastExpr 0x55dd3fc2c250 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fc2c220 <col:7> 'IPFlowID' lvalue ParmVar 0x55dd3fc25ec8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55dd3fc23f98 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55dd3fc2c3b0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fc2c368 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55dd3fc23f98
| |     `-CXXStaticCastExpr 0x55dd3fc2c338 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fc2c308 <col:7> 'IPFlowID' lvalue ParmVar 0x55dd3fc25ec8 '' 'IPFlowID &&'
| `-CompoundStmt 0x55dd3fc2c410 <col:7>
|-CXXDestructorDecl 0x55dd3fc2be98 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3fc83f70 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fc84078 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55dd3fc84bd8 <col:7>
|   |-CXXMemberCallExpr 0x55dd3fc84868 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55dd3fc84820 <col:7> '<bound member function type>' .operator= 0x55dd3fc25018
|   | | `-MemberExpr 0x55dd3fc84730 <col:7> 'IPAddress' lvalue ->_saddr 0x55dd3fc23e78
|   | |   `-CXXThisExpr 0x55dd3fc84720 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55dd3fc847f0 <col:7> 'const IPAddress' lvalue ._saddr 0x55dd3fc23e78
|   |   `-DeclRefExpr 0x55dd3fc847d0 <col:7> 'const IPFlowID' lvalue ParmVar 0x55dd3fc84078 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55dd3fc849e8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55dd3fc849a0 <col:7> '<bound member function type>' .operator= 0x55dd3fc25018
|   | | `-MemberExpr 0x55dd3fc848b0 <col:7> 'IPAddress' lvalue ->_daddr 0x55dd3fc23ed8
|   | |   `-CXXThisExpr 0x55dd3fc848a0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55dd3fc84970 <col:7> 'const IPAddress' lvalue ._daddr 0x55dd3fc23ed8
|   |   `-DeclRefExpr 0x55dd3fc84950 <col:7> 'const IPFlowID' lvalue ParmVar 0x55dd3fc84078 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55dd3fc84ab8 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55dd3fc84a70 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55dd3fc23f38
|   | | `-CXXThisExpr 0x55dd3fc84a60 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55dd3fc84aa0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55dd3fc84a30 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55dd3fc23f38
|   |     `-DeclRefExpr 0x55dd3fc84a10 <col:7> 'const IPFlowID' lvalue ParmVar 0x55dd3fc84078 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55dd3fc84b80 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55dd3fc84b38 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55dd3fc23f98
|   | | `-CXXThisExpr 0x55dd3fc84b28 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55dd3fc84b68 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55dd3fc84af8 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55dd3fc23f98
|   |     `-DeclRefExpr 0x55dd3fc84ad8 <col:7> 'const IPFlowID' lvalue ParmVar 0x55dd3fc84078 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55dd3fc84bc8 <col:7>
|     `-UnaryOperator 0x55dd3fc84bb0 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd3fc84ba0 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55dd3fc840e8 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55dd3fc840e8
  `-ParmVarDecl 0x55dd3fc841f8 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fc82a30 prev 0x55dd3fc2f8d0 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dd3fc82b28 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55dd3fc82bb8 <col:25, col:31> col:25 public
|-TypedefDecl 0x55dd3fc82bf0 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55dd3fc21d80 'IPFlowID'
|   `-CXXRecord 0x55dd3fc21ce8 'IPFlowID'
|-TypedefDecl 0x55dd3fc82c58 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55dd3fc241f0 'const IPFlowID &'
|   `-QualType 0x55dd3fc21d81 'const IPFlowID' const
|     `-RecordType 0x55dd3fc21d80 'IPFlowID'
|       `-CXXRecord 0x55dd3fc21ce8 'IPFlowID'
|-CXXConstructorDecl 0x55dd3fc82d10 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fc83770 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55dd3fc83a78 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55dd3fc83ad0 <col:23, line:22:5>
|-CXXMethodDecl 0x55dd3fc82fd8 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55dd3fc82dc8 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55dd3fc82e40 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3fc82eb8 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55dd3fc84e98 <col:78, line:30:5>
|   |-ParenExpr 0x55dd3fc83ef0 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55dd3fc83ec0 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fc83b80 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fc83b50 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55dd3fc83b20 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55dd3fc83ae0 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fc82e40 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55dd3fc83b38 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55dd3fc83b00 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55dd3fc83be0 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fc83bc0 <col:51> 'int' 0
|   |   `-CallExpr 0x55dd3fc83e20 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fc83e08 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fc83de8 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fc83e60 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fc83c50 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55dd3fc83e78 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fc83c80 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55dd3fc83e90 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fc83cb8 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55dd3fc83ea8 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fc83dd0 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fc83db8 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fc83d58 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55dd3fc84c80 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55dd3fc84c68 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55dd3fc846b8 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55dd3fc83f70 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55dd3fc83f20 <col:2> 'IPFlowID' lvalue ->_flowid 0x55dd3fc83770
|   | | `-CXXThisExpr 0x55dd3fc83f10 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55dd3fc83f50 <col:12> 'const IPFlowID' lvalue ParmVar 0x55dd3fc82dc8 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55dd3fc84d30 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55dd3fc84cc8 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55dd3fc83810
|   | | `-CXXThisExpr 0x55dd3fc84cb8 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc84d18 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd3fc84cf8 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fc82e40 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55dd3fc84de0 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55dd3fc84d60 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55dd3fc83870
|   | | `-CXXThisExpr 0x55dd3fc84d50 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc84dc8 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55dd3fc84db0 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55dd3fc84d90 <col:15> 'bool' lvalue ParmVar 0x55dd3fc82eb8 'direction' 'bool'
|   `-BinaryOperator 0x55dd3fc84e78 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55dd3fc84e10 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55dd3fc838d0
|     | `-CXXThisExpr 0x55dd3fc84e00 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc84e60 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55dd3fc84e40 <col:14> 'int' 0
|-CXXMethodDecl 0x55dd3fc83108 <line:32:5, line:34:5> line:32:21 flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55dd3fc84f20 <col:36, line:34:5>
|   `-ReturnStmt 0x55dd3fc84f10 <line:33:2, col:9>
|     `-MemberExpr 0x55dd3fc84ee0 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55dd3fc83770
|       `-CXXThisExpr 0x55dd3fc84ed0 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55dd3fc831c8 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55dd3fc83288 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55dd3fc84fb8 <col:28, line:39:5>
|   `-ReturnStmt 0x55dd3fc84fa8 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fc84f90 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55dd3fc84f78 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55dd3fc84f48 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55dd3fc83870
|           `-CXXThisExpr 0x55dd3fc84f38 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55dd3fc83350 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55dd3fc85050 <col:24, line:43:5>
|   `-ReturnStmt 0x55dd3fc85040 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fc85028 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55dd3fc85010 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55dd3fc84fe0 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55dd3fc83810
|           `-CXXThisExpr 0x55dd3fc84fd0 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55dd3fc83468 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55dd3fc85158 <col:28, line:47:5>
|   `-ReturnStmt 0x55dd3fc85148 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55dd3fc85118 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55dd3fc850e8 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55dd3fc85068 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55dd3fc850d0 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55dd3fc850b8 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55dd3fc85088 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55dd3fc83870
|               `-CXXThisExpr 0x55dd3fc85078 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55dd3fc83588 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55dd3fc85260 <col:40, line:50:5>
|   `-ReturnStmt 0x55dd3fc85250 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55dd3fc85220 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55dd3fc851f0 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55dd3fc85170 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55dd3fc851d8 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55dd3fc851c0 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55dd3fc85190 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55dd3fc83870
|               `-CXXThisExpr 0x55dd3fc85180 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55dd3fc83698 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55dd3fc852c8 <col:41, line:54:5>
|   `-ReturnStmt 0x55dd3fc852b8 <line:53:2, col:9>
|     `-MemberExpr 0x55dd3fc85288 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55dd3fc83770
|       `-CXXThisExpr 0x55dd3fc85278 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55dd3fc83738 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55dd3fc83770 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55dd3fc83810 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55dd3fc837f0 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55dd3fc837c0 <col:24> 'int' 24
|-FieldDecl 0x55dd3fc83870 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55dd3fc838d0 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
`-FriendDecl 0x55dd3fc83a20 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fbedec8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fbedfe8 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55dd3fbee088 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3fbee0e8 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55dd3fbf11f0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3fbf1628 <col:8>
|-CXXConstructorDecl 0x55dd3fbf12f8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55dd3fbf12f8
| `-ParmVarDecl 0x55dd3fbf1408 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55dd3fbf14a8 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fbf15b8 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55dd3fbee088 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fbf34d0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fbf34a0 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55dd3fbee088
| |     `-CXXStaticCastExpr 0x55dd3fbf3470 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fbf3440 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55dd3fbf15b8 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55dd3fbee0e8 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55dd3fbf35a0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fbf3570 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55dd3fbee0e8
| |     `-CXXStaticCastExpr 0x55dd3fbf3540 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fbf3510 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55dd3fbf15b8 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55dd3fbf35f0 <col:8>
|-CXXDestructorDecl 0x55dd3fbf3968 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3fcbe678 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55dd3fcbe678
| `-ParmVarDecl 0x55dd3fcbe788 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55dd3fcbe7f8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55dd3fcbe7f8
  `-ParmVarDecl 0x55dd3fcbe908 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fcbd350 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55dd3fcbd5e8 prev 0x55dd3fcbd350 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55dd3fcbd750 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55dd3fcbd7a0 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3fcbd7f0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55dd3fcbd840 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55dd3fcbd890 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55dd3fcbd9e8 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55dd3fcbdb38 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55dd3fcbdc88 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55dd3fcbe080 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55dd3fcbe080
| `-ParmVarDecl 0x55dd3fcbe198 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55dd3fcbe978 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55dd3fcbe978
  `-ParmVarDecl 0x55dd3fcbea88 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fc31490 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55dd3fcb9288 prev 0x55dd3fc31490 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55dd3fcb9318 <col:23, col:29> col:23 public
|-TypedefDecl 0x55dd3fcb9de0 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55dd3fcb9d90 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55dd3fcb9b10 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55dd3fcb9590 'key_type'
|     `-ElaboratedType 0x55dd3fcb9540 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55dd3fcb9520 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55dd3fc82bf0 'key_type'
|         `-RecordType 0x55dd3fc21d80 'IPFlowID'
|           `-CXXRecord 0x55dd3fc21ce8 'IPFlowID'
|-TypedefDecl 0x55dd3fcb9e78 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55dd3fcb9e40 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55dd3fbfca40 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd3fbfc9f0 'T'
|   `-RecordType 0x55dd3fc2f960 'IPRewriterEntry'
|     `-CXXRecord 0x55dd3fc82a30 'IPRewriterEntry'
|-TypedefDecl 0x55dd3fcb9ed0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55dd3f62f120 'size_t' sugar
|   |-Typedef 0x55dd3f5f6be0 'size_t'
|   `-BuiltinType 0x55dd3f586640 'unsigned long'
|-TypedefDecl 0x55dd3fcb9f28 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55dd3f6df3d0 'uint32_t' sugar
|   |-Typedef 0x55dd3f5ef4c8 'uint32_t'
|   `-TypedefType 0x55dd3f5c85a0 '__uint32_t' sugar
|     |-Typedef 0x55dd3f5c8198 '__uint32_t'
|     `-BuiltinType 0x55dd3f586620 'unsigned int'
|-EnumDecl 0x55dd3fcb9f80 <line:98:5> col:5
| |-EnumConstantDecl 0x55dd3fcba0b0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55dd3fcba090 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55dd3fcba068 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55dd3fcba050 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55dd3fbfd090 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55dd3fbfd070 <col:42> 'int' 1
| `-EnumConstantDecl 0x55dd3fcba120 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55dd3fcba170 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fcba100 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55dd3fbfd148 <col:25> 'int' 63
|-CXXConstructorDecl 0x55dd3fcba1c0 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55dd3fcba328 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55dd3fcba278 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55dd3fcba410 <line:114:5, col:20> col:5 ~HashContainer 'void ()' noexcept-unevaluated 0x55dd3fcba410
|-CXXMethodDecl 0x55dd3fcba500 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55dd3fcba5b0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd3fcba660 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55dd3fcba7f8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55dd3fcba730 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55dd3fcbaa18 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55dd3fcba928 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbaad0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55dd3fcbad60 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55dd3fcbacc0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55dd3fcbaca0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55dd3fcbaba0 'HashContainer_const_iterator'
|-TypedefDecl 0x55dd3fcbaf90 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55dd3fcbaef0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55dd3fcbaed0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55dd3fcbadd8 'HashContainer_iterator'
|-CXXMethodDecl 0x55dd3fcbb088 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55dd3fcbb1d8 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55dd3fcbb2a8 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55dd3fcbb378 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55dd3fcbb518 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55dd3fcbb428 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55dd3fcbb6c8 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55dd3fcbb5d0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55dd3fcbb888 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55dd3fcbb790 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbba48 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55dd3fcbb950 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbbc08 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55dd3fcbbb10 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbbdc8 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55dd3fcbbcd0 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbbf20 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55dd3fcbbe90 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbc108 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55dd3fcbc018 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55dd3fcbc1c0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcbc218 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcbc438 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55dd3fcbc2a8 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55dd3fcbc320 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55dd3fcbc708 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55dd3fcbc508 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55dd3fcbc580 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55dd3fcbc5e8 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55dd3fcbc8d8 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55dd3fcbc7e0 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55dd3fcbc990 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcbc9e8 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcbcb18 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55dd3fcbca20 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55dd3fcbccd8 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55dd3fcbcbe0 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55dd3fcbcd90 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55dd3fcbd058 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55dd3fcbcf68 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55dd3fcbd1a0 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55dd3fcbd110 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55dd3fcbd258 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55dd3fcbd308 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55dd3fcbeb10 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55dd3fcc0a20 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55dd3fcbec58 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55dd3fcc0db8 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55dd3fcc0c88 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55dd3fcc0f78 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55dd3fcc10c8 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3f799f00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55dd3f79a0d8 prev 0x55dd3f799f00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd3f79a168 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd3f79a190 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3f79bd60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55dd3f79bd10 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55dd3f79a640 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55dd3f79a540 'type'
|     `-TemplateSpecializationType 0x55dd3f79a4d0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dd3f79a3b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55dd3f79a390 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dd3f79a370 <col:24> 'unsigned long' 8
|       `-RecordType 0x55dd3f79a4b0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55dd3f79a3d0 'char_array'
|-TypedefDecl 0x55dd3f79be18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55dd3f79bde0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55dd3f79bdc0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55dd3f79bd60 'type'
|     `-ElaboratedType 0x55dd3f79bd10 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55dd3f79a640 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55dd3f79a540 'type'
|         `-TemplateSpecializationType 0x55dd3f79a4d0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dd3f79a3b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55dd3f79a390 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dd3f79a370 <col:24> 'unsigned long' 8
|           `-RecordType 0x55dd3f79a4b0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55dd3f79a3d0 'char_array'
|-CXXMethodDecl 0x55dd3f79bf98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55dd3f79bea8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55dd3f79c088 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd3f79c168 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55dd3f79c438 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55dd3f79c340 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55dd3f79c678 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd3f79c4f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3f79c568 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3f79c848 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd3f79c738 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3f79c7b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3f79c9a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55dd3f79ca78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55dd3f79ccc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd3f79cb38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55dd3f79cbb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3f79cf28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55dd3f79cd98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55dd3f79ce10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3f79d0e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55dd3f79cff8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3f79d2a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55dd3f79d1b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3f79d360 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd3f79d410 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd3fcab9d0 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dd3f79d4c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3f79d538 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dd3fcabc68 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55dd3fcabb70 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55dd3fcabd30 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55dd3fcabd80 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd3fcabdd0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3f798b30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55dd3f798d30 prev 0x55dd3f798b30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd3f799e70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dd3f799e20 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55dd3f799e00 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55dd3f799cb0 'type'
|     `-SubstTemplateTypeParmType 0x55dd3f799ad0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dd3f7a4000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f7a3fa8 'T'
|       `-RecordType 0x55dd3f799620 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dd3f799538 'sized_array_memory'
|-FieldDecl 0x55dd3fcabe20 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dd3fcabe70 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd3fcabea8 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd3f887c28 'T'
|   `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|     `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|       `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcabf68 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55dd3fcabf30 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|       `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|         `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcac028 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55dd3fcabff0 'IPRewriterFlow *const &'
|   `-QualType 0x55dd3f798dc1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|         `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|           `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcac0b8 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55dd3fcac080 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|       `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|         `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcac178 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55dd3fcac140 'IPRewriterFlow *const *'
|   `-QualType 0x55dd3f798dc1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|         `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|           `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcacd50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55dd3fcacd00 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55dd3fcacce0 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55dd3fcacc70 'type'
|     `-SubstTemplateTypeParmType 0x55dd3fcaca30 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55dd3f7ae3f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f7ae3a0 'T'
|       `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|         `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|           `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcacdb8 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55dd3fcabff0 'IPRewriterFlow *const &'
|   `-QualType 0x55dd3f798dc1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|         `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|           `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcace10 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3fcace78 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55dd3fcac080 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|       `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|         `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-TypedefDecl 0x55dd3fcacee0 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55dd3fcac140 'IPRewriterFlow *const *'
|   `-QualType 0x55dd3f798dc1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55dd3f798dc0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-PointerType 0x55dd3fc833f0 'IPRewriterFlow *'
|         `-RecordType 0x55dd3fc2f8b0 'IPRewriterFlow'
|           `-CXXRecord 0x55dd3fc852e0 'IPRewriterFlow'
|-EnumDecl 0x55dd3fcacf38 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd3fcad030 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd3fcad010 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd3f889668 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd3f889640 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd3f889620 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd3fcad0b8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd3fcad348 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcad170 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3fcad210 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55dd3fcad608 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55dd3fcad4f0 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55dd3fcad8c8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55dd3fcad7b0 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55dd3fcadc10 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55dd3fcadaf0 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55dd3fcadf20 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55dd3fcade00 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55dd3fcae210 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcae058 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3fcae0d0 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55dd3fcae368 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55dd3fcae448 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcae4a0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcae4e8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55dd3fcae598 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcae5f0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcae6b8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcae768 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcae7c0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcae808 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcae8b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcae910 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcae958 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcaea08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcaea60 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcaeaa8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55dd3fcaeb58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3fcaebb0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3fcaebd8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd3fcaec88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd3fcaed38 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd3fcaeef8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcaede8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3fcaee60 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55dd3fcaf048 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3fcaefb8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fcaf1f8 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55dd3fcaf100 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd3fcaf2b0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fcaf308 <col:30>
|-CXXMethodDecl 0x55dd3fcaf428 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd3fcaf330 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd3fcaf4e0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fcaf538 <col:30>
|-CXXMethodDecl 0x55dd3fcaf5f0 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3fcaf560 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fcaf738 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd3fcaf6a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fcaf868 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55dd3fcaf998 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55dd3fcafa68 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55dd3fcafb38 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55dd3fcafc78 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3fcafbe8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fcafdc0 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd3fcafd30 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3fcaff08 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd3fcafe78 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd3fcaffc0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd3fcb00c0 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd3fcb0030 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd3fcb0178 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd3fcb0238 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55dd3fcb0338 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55dd3fcb04e8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd3fcb03f8 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55dd3fcb0ca8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd3fcb05a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55dd3fcb0c08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55dd3fcb0b08 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55dd3fcb0d88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd3fcb0ed8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd3fcb0e48 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55dd3fcb0f90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd3fcb11d8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3fcb1050 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55dd3fcb10c8 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55dd3fcb1398 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55dd3fcb12a8 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55dd3fcb15e8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55dd3fcb1460 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55dd3fcb14d8 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55dd3fcb16a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd3fcb1908 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55dd3fcb1810 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55dd3fcb19d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55dd3fcb28e8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f7985e8 prev 0x55dd3fc828f0 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3f7986e0 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55dd3f798770 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55dd3f7987d0 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fcb2278 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55dd3fcb28c0 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fcb22d8 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55dd3fcb27d8 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55dd3fcb2338 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fcb2880 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3fcb2840 <col:38> 'int' 1
| `-CompoundStmt 0x55dd3fcb2938 <col:41, line:46:5>
|-CXXDestructorDecl 0x55dd3f7988c0 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55dd3fcb2d78 <col:23, line:49:5>
|   `-ParenExpr 0x55dd3fcb2d58 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55dd3fcb2d28 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55dd3fcb2a10 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55dd3fcb29e0 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55dd3fcb2988 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55dd3fcb2958 <col:23> '<bound member function type>' ->size 0x55dd3fcb1bb8
|       |   |   `-ImplicitCastExpr 0x55dd3fcb29a8 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55dd3fcb2948 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55dd3fcb29c0 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55dd3fcb2a70 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55dd3fcb2a50 <col:44> 'int' 0
|       `-CallExpr 0x55dd3fcb2c88 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55dd3fcb2c70 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55dd3fcb2c50 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55dd3fcb2cc8 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55dd3fcb2ae0 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55dd3fcb2ce0 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55dd3fcb2b88 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55dd3fcb2cf8 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55dd3fcb2bc0 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55dd3fcb2d10 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55dd3fcb2c38 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55dd3fcb2c20 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55dd3fcb2be0 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55dd3f7989c0 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55dd3fcb2de8 <col:16, line:53:5>
|   `-UnaryOperator 0x55dd3fcb2dd0 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55dd3fcb2da0 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55dd3fcb2338
|       `-CXXThisExpr 0x55dd3fcb2d90 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55dd3f798a80 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55dd3fcb32b0 <col:18, line:58:5>
|   |-ParenExpr 0x55dd3fcb3180 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55dd3fcb3150 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fcb2ec0 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fcb2e90 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55dd3fcb2e60 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55dd3fcb2e10 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55dd3fcb2338
|   |   |   |   `-CXXThisExpr 0x55dd3fcb2e00 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55dd3fcb2e78 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55dd3fcb2e40 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55dd3fcb2f20 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fcb2f00 <col:47> 'int' 0
|   |   `-CallExpr 0x55dd3fcb30b0 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fcb3098 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fcb3078 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fcb30f0 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fcb2f90 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55dd3fcb3108 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fcb2fb8 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55dd3fcb3120 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fcb2ff0 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55dd3fcb3138 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fcb3060 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fcb3048 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fcb3010 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55dd3fcb3298 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55dd3fcb3248 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55dd3fcb3218 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55dd3fcb31e0 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55dd3fcb31b0 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55dd3fcb2338
|     | |     `-CXXThisExpr 0x55dd3fcb31a0 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55dd3fcb3230 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55dd3fcb31f8 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55dd3fcb3278 <line:57:6, col:13> 'void' Function 0x55dd3f6dd228 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55dd3fcb3268 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55dd3fcb1bb8 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55dd3fcb3568 <col:54, line:62:5>
|   `-ReturnStmt 0x55dd3fcb3558 <line:61:2, col:43>
|     `-BinaryOperator 0x55dd3fcb3538 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55dd3fcb3430 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55dd3fcb3400 <col:9, col:19> '<bound member function type>' .size 0x55dd3fcaebd8
|       |   `-ArraySubscriptExpr 0x55dd3fcb33e0 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55dd3fcb33c8 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55dd3fcb32e0 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55dd3fcb2278
|       |     |   `-CXXThisExpr 0x55dd3fcb32d0 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55dd3fcb3310 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55dd3fcb3518 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55dd3fcb34e8 <col:28, col:38> '<bound member function type>' .size 0x55dd3fcaebd8
|           `-ArraySubscriptExpr 0x55dd3fcb34c8 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55dd3fcb34b0 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fcb3460 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55dd3fcb2278
|             |   `-CXXThisExpr 0x55dd3fcb3450 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55dd3fcb3490 <col:35> 'int' 1
|-CXXMethodDecl 0x55dd3fcb1ca8 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55dd3fcb35e8 <col:30, line:65:5>
|   `-ReturnStmt 0x55dd3fcb35d8 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fcb35c0 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55dd3fcb3590 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55dd3fcb22d8
|         `-CXXThisExpr 0x55dd3fcb3580 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55dd3fcb1d48 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55dd3fcb1d70 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55dd3fcb1e70 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55dd3fcb1f50 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fcb1e50 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fcb1e30 <col:18> 'int' 0
| `-EnumConstantDecl 0x55dd3fcb1f00 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55dd3fcb1f68 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fcb1ee0 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55dd3fcb1ec0 <col:35> 'int' 1
|-FieldDecl 0x55dd3fcb2278 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55dd3fcb22d8 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55dd3fcb2338 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55dd3fcb23a8 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55dd3fcb2440 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55dd3fcb24a8 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55dd3fcb24a8
| `-ParmVarDecl 0x55dd3fcb25b8 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55dd3fcb2658 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55dd3fcb2658
  `-ParmVarDecl 0x55dd3fcb2768 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3faa93f0 prev 0x55dd3fa9f800 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3faa94e8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55dd3faa9588 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55dd3faac1e8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3faaf5e8 <col:11>
|-CXXConstructorDecl 0x55dd3faac2c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3faac3a8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55dd3faafd30 <col:11>
|-CXXConstructorDecl 0x55dd3faac448 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3faaf578 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55dd3fab1988 <col:11>
|-CXXDestructorDecl 0x55dd3fab0898 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3fbaa698 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fbaa7a8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55dd3fbab070 <col:11>
|   `-ReturnStmt 0x55dd3fbab060 <col:11>
|     `-UnaryOperator 0x55dd3fbab048 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd3fbab038 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55dd3fbaa818 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55dd3fbaa928 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55dd3fc47fe0 <col:11>
    `-ReturnStmt 0x55dd3fc47fd0 <col:11>
      `-UnaryOperator 0x55dd3fc47fb8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55dd3fc47fa8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fa9e9b8 prev 0x55dd3fa9e720 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fa9eab0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55dd3fa9eb40 <col:19, col:25> col:19 public
|-TypedefDecl 0x55dd3fa9eb78 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55dd3f6df4b0 'int32_t' sugar
|   |-Typedef 0x55dd3f5ef328 'int32_t'
|   `-TypedefType 0x55dd3f5c8510 '__int32_t' sugar
|     |-Typedef 0x55dd3f5c8128 '__int32_t'
|     `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3fa9ebe0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55dd3f6df670 'int64_t' sugar
|   |-Typedef 0x55dd3f5ef390 'int64_t'
|   `-TypedefType 0x55dd3f5c8630 '__int64_t' sugar
|     |-Typedef 0x55dd3f5c8208 '__int64_t'
|     `-BuiltinType 0x55dd3f5865a0 'long'
|-EnumDecl 0x55dd3fa9ec38 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55dd3fa9edb0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55dd3fa9ed90 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55dd3fa9ed68 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55dd3fa9ed50 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55dd3fa9ed20 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55dd3fa9eea8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55dd3fa9ee88 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55dd3fa9ee60 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55dd3fa9ee48 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55dd3fa9ee20 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55dd3fa9ee00 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55dd3fa9eef8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55dd3fa9f000 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f550 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9efe0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55dd3fa9efc0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55dd3fa9f090 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f568 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f070 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55dd3fa9f050 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55dd3fa9f120 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f580 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f100 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55dd3fa9f0e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55dd3fa9f1b0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f598 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f190 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55dd3fa9f170 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55dd3fa9f240 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f5b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f220 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55dd3fa9f200 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55dd3fa9f2d0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f5c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f2b0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55dd3fa9f290 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55dd3fa9f360 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f5e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f340 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55dd3fa9f320 <col:26> 'int' EnumConstant 0x55dd3fa9f000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55dd3fa9f430 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55dd3fa9f5f8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fa9f410 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55dd3fa9f3f0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55dd3fa9f3b0 <col:27> 'int' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55dd3fa9f3d0 <col:44> 'int' EnumConstant 0x55dd3fa9f2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55dd3fa9f500 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55dd3fa9f610 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fa9f4e0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55dd3fa9f4c0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55dd3fa9f480 <col:27> 'int' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55dd3fa9f4a0 <col:44> 'int' EnumConstant 0x55dd3fa9f1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55dd3fa9f628 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55dd3fa9f730 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55dd3fa9f780 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fa9f710 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55dd3fa9f6f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55dd3fa9f7a8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55dd3f6df0e0 'uninitialized_type'
|   `-CXXRecord 0x55dd3f6df048 'uninitialized_type'
|-CXXRecordDecl 0x55dd3fa9f800 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55dd3fa9f8e8 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faaf5f8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3faaf718 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55dd3faaf6d0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55dd3faaf660 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3faaf650 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55dd3faaf690 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55dd3faaf700 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55dd3faaf6b0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55dd3fa9fb38 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fa9f9a8 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55dd3fa9fa20 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd3faac080 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3faac060 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faaf730 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3faaf880 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55dd3faaf808 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55dd3faaf798 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3faaf788 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd3faaf850 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55dd3faaf838 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd3faaf7c8 <col:16> 'long' lvalue ParmVar 0x55dd3fa9f9a8 'sec' 'long'
|     `-ImplicitCastExpr 0x55dd3faaf868 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3faaf7e8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fa9fa20 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd3fa9fd98 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fa9fc08 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55dd3fa9fc80 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd3faac0b8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3faac098 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faaf898 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3faaf9d0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55dd3faaf970 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55dd3faaf900 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3faaf8f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd3faaf9a0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3faaf930 <col:16> 'int' lvalue ParmVar 0x55dd3fa9fc08 'sec' 'int'
|     `-ImplicitCastExpr 0x55dd3faaf9b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3faaf950 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fa9fc80 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd3fa9fff8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fa9fe68 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55dd3fa9fee0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd3faac0f0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3faac0d0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faaf9e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3faafb38 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55dd3faafac0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55dd3faafa50 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3faafa40 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd3faafb08 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55dd3faafaf0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd3faafa80 <col:16> 'unsigned long' lvalue ParmVar 0x55dd3fa9fe68 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55dd3faafb20 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3faafaa0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fa9fee0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd3faa0258 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa00c8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55dd3faa0140 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd3faac128 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3faac108 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faafb50 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3faafca0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55dd3faafc28 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55dd3faafbb8 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3faafba8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd3faafc70 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55dd3faafc58 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd3faafbe8 <col:16> 'unsigned int' lvalue ParmVar 0x55dd3faa00c8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55dd3faafc88 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3faafc08 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa0140 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55dd3faa03b8 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55dd3faa0328 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55dd3faa0da0 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55dd3faa0490 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55dd3faa0fc8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55dd3faa0ed0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55dd3faa1178 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55dd3faa10b8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faafd40 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55dd3faafcb8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55dd3faa10b8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55dd3faafda0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55dd3faa13a8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55dd3faa12b8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3faafdb0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dd3faafe60 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55dd3faafe38 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55dd3faafe08 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55dd3faa12b8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55dd3faa1598 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55dd3faa1510 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55dd3f8e91a0 'Timestamp'
|   | `-CXXRecord 0x55dd3fa9e9b8 'Timestamp'
|   `-ParenType 0x55dd3faa14b0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55dd3faa1480 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55dd3fa9ed00 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55dd3fa9eb78 'seconds_type'
|         `-TypedefType 0x55dd3f6df4b0 'int32_t' sugar
|           |-Typedef 0x55dd3f5ef328 'int32_t'
|           `-TypedefType 0x55dd3f5c8510 '__int32_t' sugar
|             |-Typedef 0x55dd3f5c8128 '__int32_t'
|             `-BuiltinType 0x55dd3f586580 'int'
|-CXXConversionDecl 0x55dd3faa16d8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55dd3faa17a8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55dd3faaff68 <col:37, line:231:5>
|   `-ReturnStmt 0x55dd3faaff58 <line:227:9, col:23>
|     `-BinaryOperator 0x55dd3faaff38 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55dd3faaff08 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd3faafeb8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55dd3faa9588
|       |   `-MemberExpr 0x55dd3faafe88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
|       |     `-CXXThisExpr 0x55dd3faafe78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd3faaff20 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55dd3faafee8 <col:23> 'int' 0
|-CXXMethodDecl 0x55dd3faa1868 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55dd3faa1928 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3faa19e8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3faa1aa8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3faa1b68 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3faa1cd8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55dd3faa1c18 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55dd3faa1e20 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55dd3faa1d90 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa1ee8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55dd3faa1f88 <col:54> "" ""
|-CXXMethodDecl 0x55dd3faa2018 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55dd3faa20b8 <col:54> "" ""
|-CXXMethodDecl 0x55dd3faa2148 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55dd3faa21e8 <col:54> "" ""
|-CXXMethodDecl 0x55dd3faa22e8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55dd3faa23b8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55dd3faa24e8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55dd3faa25e0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55dd3faa2718 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55dd3fab0180 <col:39, line:271:5>
|   `-ReturnStmt 0x55dd3fab0170 <line:267:9, col:61>
|     `-CallExpr 0x55dd3fab0110 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55dd3fab00f8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3faaff80 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55dd3faaa868 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55dd3fab0140 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd3faaffe0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55dd3faa9588
|       |   `-MemberExpr 0x55dd3faaffb0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
|       |     `-CXXThisExpr 0x55dd3faaffa0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd3fab0158 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55dd3fab0080 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55dd3fab0050 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55dd3fab0010 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55dd3fab0068 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55dd3fab0030 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa27d8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55dd3fab0340 <col:39, line:279:5>
|   `-ReturnStmt 0x55dd3fab0330 <line:275:9, col:61>
|     `-CallExpr 0x55dd3fab02d0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55dd3fab02b8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3fab0198 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55dd3faaa868 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55dd3fab0300 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd3fab01f8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55dd3faa9588
|       |   `-MemberExpr 0x55dd3fab01c8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
|       |     `-CXXThisExpr 0x55dd3fab01b8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd3fab0318 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55dd3fab0298 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55dd3fab0268 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55dd3fab0228 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55dd3fab0280 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55dd3fab0248 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa2898 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55dd3fab04d8 <col:39, line:287:5>
|   `-ReturnStmt 0x55dd3fab04c8 <line:283:9, col:53>
|     `-BinaryOperator 0x55dd3fab04a8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55dd3fab0478 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55dd3fab0398 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55dd3faa9588
|       |   `-MemberExpr 0x55dd3fab0368 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
|       |     `-CXXThisExpr 0x55dd3fab0358 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55dd3fab0490 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55dd3fab0458 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd3fab0438 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fab0408 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fab03c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fab0420 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fab03e8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa2988 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55dd3fab1b70 <col:40, line:293:5>
|   |-DeclStmt 0x55dd3fab0620 <line:291:9, col:48>
|   | `-VarDecl 0x55dd3fab0500 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55dd3fab0600 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55dd3fab05a8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55dd3fab0578 <col:22> '<bound member function type>' ->subsec 0x55dd3faa1928
|   |     |   `-CXXThisExpr 0x55dd3fab0568 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55dd3fab05e8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55dd3fab05c8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f430 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd3fab1b60 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55dd3fab1b48 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fab1b18 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fab1b00 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55dd3fab1ae0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55dd3fab1ab0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55dd3fab1848 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55dd3fab1830 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55dd3fab0638 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55dd3fab0500 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55dd3fab1a50 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55dd3fab1a38 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55dd3fab1a08 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55dd3fab1860 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55dd3fab17d0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55dd3fab17b8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55dd3fab1768 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd3fa9e908 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55dd3fab1708 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55dd3fab0668 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55dd3fab0658 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55dd3fab1750 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55dd3fab1738 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55dd3fab0b28 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55dd3fab0690 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55dd3fab0720 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55dd3fab06f0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55dd3fab06b0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f430 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55dd3fab0708 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55dd3fab06d0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55dd3fab0500 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55dd3fab1a80 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55dd3fab1818 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55dd3fab1808 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55dd3faa2a48 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55dd3fab20c8 <col:40, line:302:5>
|   |-DeclStmt 0x55dd3fab1cc0 <line:297:9, col:48>
|   | `-VarDecl 0x55dd3fab1ba0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55dd3fab1ca0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55dd3fab1c48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55dd3fab1c18 <col:22> '<bound member function type>' ->subsec 0x55dd3faa1928
|   |     |   `-CXXThisExpr 0x55dd3fab1c08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55dd3fab1c88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55dd3fab1c68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f500 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd3fab20b8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55dd3fab20a0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fab2070 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fab2058 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55dd3fab2038 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55dd3fab2008 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55dd3fab1f30 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55dd3fab1f18 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55dd3fab1cd8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55dd3fab1ba0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55dd3fab1fa8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55dd3fab1f90 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55dd3fab1f60 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55dd3fab1f48 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55dd3fab1eb8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55dd3fab1ea0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55dd3fab1e80 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd3fa9e908 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55dd3fab1e20 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55dd3fab1d08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55dd3fab1cf8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55dd3fab1e68 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55dd3fab1e50 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55dd3fab1de0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55dd3fab1d30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55dd3fab1dc0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55dd3fab1d90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55dd3fab1d50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f500 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55dd3fab1da8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55dd3fab1d70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55dd3fab1ba0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55dd3fab1fd8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55dd3fab1f00 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55dd3fab1ef0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55dd3faa2b08 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55dd3fab2150 <col:40, line:306:5>
|   `-ReturnStmt 0x55dd3fab2140 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55dd3fab2110 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55dd3fab20f8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55dd3fab20e8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55dd3faa2ca8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55dd3faa2bb8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa2e78 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55dd3faa2d80 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55dd3faa2f68 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55dd3faa30d8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55dd3faa3018 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55dd3fab2298 <col:56, line:320:5>
|   `-ReturnStmt 0x55dd3fab2288 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55dd3fab2270 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fab2240 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fab2228 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fab21e8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd3fab21b8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd3fab2178 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa3018 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55dd3fab21d0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55dd3fab2198 <col:31> 'int' 0
|-CXXMethodDecl 0x55dd3faa3318 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa3190 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa3208 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fab2468 <col:72, line:326:5>
|   `-ReturnStmt 0x55dd3fab2458 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55dd3fab2440 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fab2410 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fab23f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fab23b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd3fab23a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd3fab22c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa3190 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55dd3fab2360 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55dd3fab2348 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd3fab22e0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd3faa8ce0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55dd3fab2388 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd3fab2300 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa3208 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa34c8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55dd3faa33d8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55dd3fab2b30 <col:56, line:337:5>
|   |-DeclStmt 0x55dd3fab2768 <line:329:9, col:51>
|   | `-VarDecl 0x55dd3fab2490 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55dd3fab2750 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd3fab2720 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd3fab2708 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55dd3fab26f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55dd3fab26c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55dd3fab26a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55dd3fab2690 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55dd3fab2580 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55dd3fab2920 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55dd3fab27d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55dd3faa9588
|   | | `-MemberExpr 0x55dd3fab27a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55dd3faaa538
|   | |   `-DeclRefExpr 0x55dd3fab2780 <col:9> 'Timestamp' lvalue Var 0x55dd3fab2490 't' 'Timestamp'
|   | `-BinaryOperator 0x55dd3fab2900 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55dd3fab28d0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd3fab2800 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd3faa33d8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55dd3fab28e8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55dd3fab28b0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55dd3fab2890 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55dd3fab2860 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55dd3fab2820 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55dd3fab2878 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55dd3fab2840 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd3fab2b18 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55dd3fab2ae8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55dd3fab2ad0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55dd3fab2ab0 <col:16> 'Timestamp' lvalue Var 0x55dd3fab2490 't' 'Timestamp'
|-CXXMethodDecl 0x55dd3faa3690 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa3580 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa35f8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fab2ce8 <col:72, line:343:5>
|   `-ReturnStmt 0x55dd3fab2cd8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55dd3fab2cc0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fab2c90 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fab2c78 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fab2c38 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd3fab2c20 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd3fab2b68 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa3580 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55dd3fab2be0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55dd3fab2bc8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd3fab2b88 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd3faa8e28 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55dd3fab2c08 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd3fab2ba8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa35f8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa37e0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55dd3faa3750 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55dd3fab3130 <col:56, line:354:5>
|   |-DeclStmt 0x55dd3fab2ed8 <line:346:9, col:51>
|   | `-VarDecl 0x55dd3fab2d10 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55dd3fab2ec0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd3fab2e90 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd3fab2e78 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55dd3fab2e60 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55dd3fab2e30 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55dd3fab2e18 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55dd3fab2e00 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55dd3fab2dd0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55dd3fab3090 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55dd3fab2f40 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55dd3faa9588
|   | | `-MemberExpr 0x55dd3fab2f10 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55dd3faaa538
|   | |   `-DeclRefExpr 0x55dd3fab2ef0 <col:9> 'Timestamp' lvalue Var 0x55dd3fab2d10 't' 'Timestamp'
|   | `-BinaryOperator 0x55dd3fab3070 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55dd3fab3040 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd3fab2f70 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd3faa3750 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55dd3fab3058 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55dd3fab3020 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55dd3fab3000 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55dd3fab2fd0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55dd3fab2f90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55dd3fab2fe8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55dd3fab2fb0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd3fab3118 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55dd3fab30e8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55dd3fab30d0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55dd3fab30b0 <col:16> 'Timestamp' lvalue Var 0x55dd3fab2d10 't' 'Timestamp'
|-CXXMethodDecl 0x55dd3faa39a8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa3898 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa3910 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fab32e8 <col:72, line:360:5>
|   `-ReturnStmt 0x55dd3fab32d8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55dd3fab32c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fab3290 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fab3278 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fab3238 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd3fab3220 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd3fab3168 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa3898 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55dd3fab31e0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55dd3fab31c8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd3fab3188 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd3faa8f70 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55dd3fab3208 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd3fab31a8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa3910 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa3af8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55dd3faa3a68 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55dd3fabb9f8 <col:56, line:371:5>
|   |-DeclStmt 0x55dd3fab34d8 <line:363:9, col:51>
|   | `-VarDecl 0x55dd3fab3310 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55dd3fab34c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd3fab3490 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd3fab3478 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55dd3fab3460 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55dd3fab3430 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55dd3fab3418 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55dd3fab3400 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55dd3fab33d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55dd3fabb958 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55dd3fabb7e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55dd3faa9588
|   | | `-MemberExpr 0x55dd3fabb7b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55dd3faaa538
|   | |   `-DeclRefExpr 0x55dd3fab34f0 <col:9> 'Timestamp' lvalue Var 0x55dd3fab3310 't' 'Timestamp'
|   | `-CallExpr 0x55dd3fabb8f8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55dd3fabb8e0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55dd3fabb810 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55dd3faaa868 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55dd3fabb928 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55dd3fabb830 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd3faa3a68 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55dd3fabb940 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55dd3fabb8c0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55dd3fabb890 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55dd3fabb850 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55dd3fabb8a8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55dd3fabb870 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55dd3fabb9e0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55dd3fabb9b0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55dd3fabb998 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55dd3fabb978 <col:16> 'Timestamp' lvalue Var 0x55dd3fab3310 't' 'Timestamp'
|-CXXMethodDecl 0x55dd3faa3be8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55dd3fabbb38 <col:39, line:377:5>
|   `-ReturnStmt 0x55dd3fabbb28 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55dd3fabbb10 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fabbae0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fabbac8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fabba88 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55dd3fabba30 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55dd3fabba70 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55dd3fabba50 <col:29> 'int' 1
|-CXXMethodDecl 0x55dd3faa3ca8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55dd3fabbc18 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55dd3fabbbd0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55dd3fabbb60 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3fabbb50 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55dd3fabbb90 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55dd3fabbc00 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55dd3fabbbb0 <col:19> 'int' 0
|-CXXMethodDecl 0x55dd3faa3ea8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa3d58 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa3dd0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd3faac160 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3faac140 <col:60> 'int' 0
| `-CompoundStmt 0x55dd3fabbe10 <col:63, line:395:5>
|   `-BinaryOperator 0x55dd3fabbdf0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55dd3fabbc70 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55dd3faa9588
|     | `-MemberExpr 0x55dd3fabbc40 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
|     |   `-CXXThisExpr 0x55dd3fabbc30 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55dd3fabbdd0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55dd3fabbd60 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55dd3fabbd00 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55dd3fabbce8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55dd3fabbcd0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55dd3fabbca0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa3d58 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55dd3fabbd48 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55dd3fabbd28 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55dd3fabbdb8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55dd3fabbda0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55dd3fabbd80 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa3dd0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa4078 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa3f68 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa3fe0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabbf68 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55dd3fabbf20 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55dd3fabbe38 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3fabbe28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd3fabbf50 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3fabbe68 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa3f68 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55dd3fabbee0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55dd3fabbec8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3fabbe88 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd3faa8e28 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55dd3fabbf08 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd3fabbea8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa3fe0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa4248 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa4138 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa41b0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc0c0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55dd3fabc078 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55dd3fabbf90 <col:9> '<bound member function type>' ->assign 0x55dd3faa3ea8
|     | `-CXXThisExpr 0x55dd3fabbf80 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55dd3fabc0a8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dd3fabbfc0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55dd3faa4138 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55dd3fabc038 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55dd3fabc020 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3fabbfe0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55dd3faa8f70 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55dd3fabc060 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd3fabc000 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa41b0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faa4418 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa4308 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa4380 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55dd3faac198 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3faac178 <col:57> 'int' 0
| `-DeprecatedAttr 0x55dd3faa44c8 <col:75> "" ""
|-CXXMethodDecl 0x55dd3faa4658 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa4548 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa45c0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3faa4708 <col:74> "" ""
|-CXXMethodDecl 0x55dd3faa4898 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55dd3faa4788 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55dd3faa4800 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3faa4948 <col:74> "" ""
|-CXXMethodDecl 0x55dd3faa49d8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55dd3faa4a78 <col:42> "" ""
|-CXXMethodDecl 0x55dd3faa4c20 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55dd3faa4b00 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55dd3faa4b80 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55dd3faa4cf0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd3faa8520 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55dd3faa85c0 <col:20>
| `-OptimizeNoneAttr 0x55dd3faa8618 <col:30>
|-CXXMethodDecl 0x55dd3faa8660 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd3faa8720 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55dd3faa87e0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd3faa88a0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55dd3faa8960 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd3faa8a20 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55dd3faa8ae0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55dd3faa8ba0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55dd3faa8ce0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa8c50 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc208 <col:58, line:512:5>
|   `-ReturnStmt 0x55dd3fabc1f8 <line:511:9, col:53>
|     `-BinaryOperator 0x55dd3fabc1d8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55dd3fabc1a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc0d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa8c50 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd3fabc1c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd3fabc188 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd3fabc168 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fabc138 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fabc0f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fabc150 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fabc118 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa8e28 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa8d98 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc350 <col:58, line:516:5>
|   `-ReturnStmt 0x55dd3fabc340 <line:515:9, col:53>
|     `-BinaryOperator 0x55dd3fabc320 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55dd3fabc2f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc220 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa8d98 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd3fabc308 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd3fabc2d0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd3fabc2b0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fabc280 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fabc240 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fabc298 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fabc260 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa8f70 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa8ee0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc498 <col:58, line:520:5>
|   `-ReturnStmt 0x55dd3fabc488 <line:519:9, col:53>
|     `-BinaryOperator 0x55dd3fabc468 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55dd3fabc438 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc368 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa8ee0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd3fabc450 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd3fabc418 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55dd3fabc3f8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fabc3c8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fabc388 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fabc3e0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fabc3a8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa90b8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa9028 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc5e0 <col:60, line:524:5>
|   `-ReturnStmt 0x55dd3fabc5d0 <line:523:9, col:55>
|     `-BinaryOperator 0x55dd3fabc5b0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55dd3fabc580 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc4b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa9028 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd3fabc598 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd3fabc560 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55dd3fabc540 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fabc510 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fabc4d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fabc528 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fabc4f0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f2d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa9200 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa9170 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc728 <col:60, line:528:5>
|   `-ReturnStmt 0x55dd3fabc718 <line:527:9, col:55>
|     `-BinaryOperator 0x55dd3fabc6f8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55dd3fabc6c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc5f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa9170 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd3fabc6e0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd3fabc6a8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55dd3fabc688 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fabc658 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fabc618 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fabc670 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fabc638 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f1b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55dd3faa9348 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faa92b8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabc870 <col:60, line:532:5>
|   `-ReturnStmt 0x55dd3fabc860 <line:531:9, col:55>
|     `-BinaryOperator 0x55dd3fabc840 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55dd3fabc810 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc740 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faa92b8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55dd3fabc828 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55dd3fabc7f0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55dd3fabc7d0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55dd3fabc7a0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55dd3fabc760 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f000 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55dd3fabc7b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55dd3fabc780 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55dd3fa9f360 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55dd3faa93f0 prev 0x55dd3fa9f800 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd3faa94e8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55dd3faa9588 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55dd3faac1e8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd3faaf5e8 <col:11>
| |-CXXConstructorDecl 0x55dd3faac2c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd3faac3a8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55dd3faafd30 <col:11>
| |-CXXConstructorDecl 0x55dd3faac448 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd3faaf578 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55dd3fab1988 <col:11>
| |-CXXDestructorDecl 0x55dd3fab0898 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55dd3fbaa698 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd3fbaa7a8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55dd3fbab070 <col:11>
| |   `-ReturnStmt 0x55dd3fbab060 <col:11>
| |     `-UnaryOperator 0x55dd3fbab048 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dd3fbab038 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55dd3fbaa818 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55dd3fbaa928 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55dd3fc47fe0 <col:11>
|     `-ReturnStmt 0x55dd3fc47fd0 <col:11>
|       `-UnaryOperator 0x55dd3fc47fb8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55dd3fc47fa8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55dd3faa95f0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55dd3faa96f0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55dd3faa98f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3faa96d0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3faa96b0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55dd3faa9780 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55dd3faa9908 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3faa9760 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd3faa9740 <col:23> 'int' 1
| |-EnumConstantDecl 0x55dd3faa9810 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55dd3faa9920 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3faa97f0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd3faa97d0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55dd3faa98a0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55dd3faa9938 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3faa9880 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55dd3faa9860 <col:27> 'int' 3
|-CXXMethodDecl 0x55dd3faa9978 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55dd3faa9a40 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55dd3faa9c48 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55dd3faa9af0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55dd3faa9b70 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55dd3faac1b0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55dd3faa9e58 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55dd3faa9d08 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55dd3faa9d80 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55dd3faa9f28 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55dd3faa9fe8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55dd3faaa158 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55dd3faaa098 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55dd3faaa220 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd3faaa2e0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55dd3faaa3a0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55dd3faaa460 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55dd3faaa500 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55dd3faaa538 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55dd3faaa5a8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55dd3fabc888 <col:27, line:684:5>
|-CXXMethodDecl 0x55dd3faaa668 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55dd3fabc898 <col:27, line:696:5>
|-CXXMethodDecl 0x55dd3faaa868 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faaa718 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55dd3faaa790 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabca20 <col:66, line:700:5>
|   `-ReturnStmt 0x55dd3fabca10 <line:699:9, col:31>
|     `-CallExpr 0x55dd3fabc9b0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55dd3fabc998 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3fabc948 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55dd3f92de78 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55dd3fabc9e0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55dd3fabc908 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd3faaa718 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55dd3fabc9f8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55dd3fabc928 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faaa790 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3faaabd8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3faaa928 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55dd3faaa9a0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55dd3faaaa18 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55dd3faaaa90 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fabcd70 <col:64, line:707:5>
|   |-DeclStmt 0x55dd3fabcab0 <line:704:9, col:24>
|   | `-VarDecl 0x55dd3fabca48 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55dd3fabccc0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55dd3fabcac8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55dd3faaa9a0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55dd3fabcca8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55dd3fabcc40 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55dd3fabcc28 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fabcba8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55dd3f933158 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55dd3fabcc78 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55dd3fabcb48 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55dd3faaaa18 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55dd3fabcc90 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55dd3fabcb68 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3faaaa90 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55dd3fabcb88 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55dd3fabca48 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55dd3fabcd50 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55dd3fabcce0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55dd3faaa928 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55dd3fabcd38 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55dd3fabcd20 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55dd3fabcd00 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55dd3fabca48 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55dd3faaae78 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55dd3faaaca8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55dd3faaad20 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55dd3faaad98 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55dd3faab118 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55dd3faaaf40 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55dd3faaafb8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55dd3faab030 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55dd3faab2a8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55dd3faab1e0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55dd3faab4a8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55dd3faab360 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55dd3faab3d8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55dd3faab778 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55dd3faab6b8 parent 0x55dd3f586488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd3faab568 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55dd3faab5e0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55dd3faab998 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55dd3faab8d8 parent 0x55dd3f586488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd3faab7c8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55dd3faab840 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55dd3faabb60 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55dd3faabaa8 parent 0x55dd3f586488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55dd3faab9e8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55dd3faabde8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55dd3faabd28 parent 0x55dd3f586488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd3faabbd8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55dd3faabc50 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55dd3faac008 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55dd3faabf48 parent 0x55dd3f586488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55dd3faabe38 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55dd3faabeb0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55dd3fab0740 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fab0828 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3fab1698 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55dd3fab1650 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55dd3faaa538
| |     `-DeclRefExpr 0x55dd3fab1630 <col:7> 'const Timestamp' lvalue ParmVar 0x55dd3fab0828 '' 'const Timestamp &'
| `-CompoundStmt 0x55dd3fab16f8 <col:7>
|-CXXConstructorDecl 0x55dd3fab09a8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fab0ab8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55dd3faaa538 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55dd3fab1998 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55dd3fab1940 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55dd3faaa538
| |     `-CXXStaticCastExpr 0x55dd3fab1910 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fab18e0 <col:7> 'Timestamp' lvalue ParmVar 0x55dd3fab0ab8 '' 'Timestamp &&'
| `-CompoundStmt 0x55dd3fab19f8 <col:7>
|-CXXDestructorDecl 0x55dd3fab0b68 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dd3fbaa4f0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fbaa5f8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55dd3fbab0e8 <col:7>
|   |-CXXMemberCallExpr 0x55dd3fbab088 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55dd3fbaafc8 <col:7> '<bound member function type>' .operator= 0x55dd3fbaa698
|   | | `-MemberExpr 0x55dd3fbaaed8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
|   | |   `-CXXThisExpr 0x55dd3fbaaec8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55dd3fbaaf98 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55dd3faaa538
|   |   `-DeclRefExpr 0x55dd3fbaaf78 <col:7> 'const Timestamp' lvalue ParmVar 0x55dd3fbaa5f8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55dd3fbab0d8 <col:7>
|     `-UnaryOperator 0x55dd3fbab0c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd3fbab0b0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55dd3fbaa998 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55dd3fbaaaa8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55dd3fc48058 <col:7>
    |-CXXMemberCallExpr 0x55dd3fc47ff8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55dd3fc47f60 <col:7> '<bound member function type>' .operator= 0x55dd3fbaa818
    | | `-MemberExpr 0x55dd3fc47e30 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55dd3faaa538
    | |   `-CXXThisExpr 0x55dd3fc47e20 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55dd3fc47f30 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55dd3faaa538
    |   `-CXXStaticCastExpr 0x55dd3fc47f00 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55dd3fc47ed0 <col:7> 'Timestamp' lvalue ParmVar 0x55dd3fbaaaa8 '' 'Timestamp &&'
    `-ReturnStmt 0x55dd3fc48048 <col:7>
      `-UnaryOperator 0x55dd3fc48030 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55dd3fc48020 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fc3b008 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55dd3fc3b138 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55dd3fc3bc28 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fc378a8 prev 0x55dd3fbcf5c0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3fc379a0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55dd3fc37a30 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55dd3fc37a90 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55dd3fc37b38 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55dd3fc37c58 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55dd3fc37df8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55dd3fc37d38 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55dd3fc38048 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55dd3fc37eb8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55dd3fc37f38 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55dd3fc381d8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55dd3fc38110 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55dd3fc38358 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55dd3fc38298 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55dd3fc38508 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55dd3fc38448 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55dd3fc38600 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55dd3fc45e30 <col:21, line:58:5>
|   `-IfStmt 0x55dd3fc3bde8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55dd3fc3bd50 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55dd3fc3bd20 <col:6> '<bound member function type>' ->scheduled 0x55dd3fc38e58
|     |   `-ImplicitCastExpr 0x55dd3fc3bd70 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55dd3fc3bd10 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55dd3fc3bdc8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55dd3fc3bd98 <col:6> '<bound member function type>' ->unschedule 0x55dd3fc3a4b0
|         `-CXXThisExpr 0x55dd3fc3bd88 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc38700 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55dd3fc45fd0 <col:26, line:65:5>
|   |-BinaryOperator 0x55dd3fc45ef0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd3fc45e88 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd3fc3b138
|   | | `-MemberExpr 0x55dd3fc45e58 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd3fc3b1f8
|   | |   `-CXXThisExpr 0x55dd3fc45e48 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc45ed8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd3fc45eb8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55dd3fc3b658 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55dd3fc45fb0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55dd3fc45f20 <col:2> 'void *' lvalue ->_thunk 0x55dd3fc3b278
|     | `-CXXThisExpr 0x55dd3fc45f10 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55dd3fc45f88 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55dd3fc45f50 <col:20> 'int' 1
|-CXXMethodDecl 0x55dd3fc38840 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55dd3fc387b0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55dd3fc46130 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55dd3fc46020 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55dd3fc45ff0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55dd3fc387b0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55dd3fc46110 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55dd3fc460e0 <col:2> '<bound member function type>' ->assign 0x55dd3fc38700
|       `-CXXThisExpr 0x55dd3fc460d0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc38a10 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55dd3fc388f8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55dd3fc38978 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55dd3fc462b0 <col:58, line:79:5>
|   |-BinaryOperator 0x55dd3fc461f8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd3fc46190 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd3fc3b138
|   | | `-MemberExpr 0x55dd3fc46160 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd3fc3b1f8
|   | |   `-CXXThisExpr 0x55dd3fc46150 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc461e0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dd3fc461c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55dd3fc388f8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55dd3fc46290 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55dd3fc46228 <col:2> 'void *' lvalue ->_thunk 0x55dd3fc3b278
|     | `-CXXThisExpr 0x55dd3fc46218 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc46278 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fc46258 <col:11> 'void *' lvalue ParmVar 0x55dd3fc38978 'user_data' 'void *'
|-CXXMethodDecl 0x55dd3fc38b60 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55dd3fc38ad0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55dd3fc46448 <col:35, line:87:5>
|   |-BinaryOperator 0x55dd3fc46378 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd3fc46310 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd3fc3b138
|   | | `-MemberExpr 0x55dd3fc462e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd3fc3b1f8
|   | |   `-CXXThisExpr 0x55dd3fc462d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc46360 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd3fc46340 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55dd3fc3b830 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55dd3fc46428 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55dd3fc463a8 <col:2> 'void *' lvalue ->_thunk 0x55dd3fc3b278
|     | `-CXXThisExpr 0x55dd3fc46398 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc46410 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55dd3fc463f8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55dd3fc463d8 <col:11> 'Element *' lvalue ParmVar 0x55dd3fc38ad0 'element' 'Element *'
|-CXXMethodDecl 0x55dd3fc38ca8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55dd3fc38c18 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55dd3fc465e0 <col:29, line:94:5>
|   |-BinaryOperator 0x55dd3fc46510 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55dd3fc464a8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55dd3fc3b138
|   | | `-MemberExpr 0x55dd3fc46478 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55dd3fc3b1f8
|   | |   `-CXXThisExpr 0x55dd3fc46468 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fc464f8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55dd3fc464d8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55dd3fc3ba08 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55dd3fc465c0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55dd3fc46540 <col:2> 'void *' lvalue ->_thunk 0x55dd3fc3b278
|     | `-CXXThisExpr 0x55dd3fc46530 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55dd3fc465a8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55dd3fc46590 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55dd3fc46570 <col:11> 'Task *' lvalue ParmVar 0x55dd3fc38c18 'task' 'Task *'
|-CXXMethodDecl 0x55dd3fc38d98 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55dd3fc466c0 <col:37, line:100:5>
|   `-ReturnStmt 0x55dd3fc466b0 <line:99:2, col:19>
|     `-BinaryOperator 0x55dd3fc46690 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55dd3fc46660 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55dd3fc46610 <col:9> 'Element *const' lvalue ->_owner 0x55dd3fc3b2d8
|       |   `-CXXThisExpr 0x55dd3fc46600 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55dd3fc46678 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55dd3fc46640 <col:19> 'int' 0
|-CXXMethodDecl 0x55dd3fc38e58 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55dd3fc46780 <col:35, line:105:5>
|   `-ReturnStmt 0x55dd3fc46770 <line:104:2, col:23>
|     `-BinaryOperator 0x55dd3fc46750 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55dd3fc46738 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55dd3fc466e8 <col:9> 'const int' lvalue ->_schedpos1 0x55dd3fc3af58
|       |   `-CXXThisExpr 0x55dd3fc466d8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55dd3fc46718 <col:23> 'int' 0
|-CXXMethodDecl 0x55dd3fc38f18 <line:116:5, line:118:5> line:116:29 expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55dd3fc467e8 <col:51, line:118:5>
|   `-ReturnStmt 0x55dd3fc467d8 <line:117:2, col:9>
|     `-MemberExpr 0x55dd3fc467a8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|       `-CXXThisExpr 0x55dd3fc46798 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc38fd8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55dd3fc46d40 <col:37, line:136:5>
|   `-IfStmt 0x55dd3fc46d18 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55dd3fc468a8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55dd3fc46890 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55dd3fc46870 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55dd3fc46840 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55dd3faa16d8
|     |       `-MemberExpr 0x55dd3fc46810 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|     |         `-CXXThisExpr 0x55dd3fc46800 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55dd3fc46c88 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55dd3fc46c70 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55dd3fc46c40 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55dd3fc46c28 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55dd3fc46bf0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55dd3fc46bd8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55dd3fc46bb8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd3f98ae10 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55dd3fc46b58 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55dd3fc46b40 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55dd3fc46a68 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55dd3fc46a50 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55dd3fc46a30 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd3f98aad0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55dd3fc469d0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55dd3fc468d0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|     |         |     |   `-CXXThisExpr 0x55dd3fc468c0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55dd3fc46a18 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55dd3fc46a00 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55dd3fc469b0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55dd3fc46998 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55dd3fc46938 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55dd3fabf300 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55dd3fc46ba0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55dd3fc46b88 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55dd3fc46b20 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55dd3fc46b08 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55dd3fc46ad8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55dd3f791f80 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55dd3fc46d08 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55dd3fc46cd8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55dd3fc46ca8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|           `-CXXThisExpr 0x55dd3fc46c98 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc39098 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55dd3fc46e28 <col:35, line:141:5>
|   `-ReturnStmt 0x55dd3fc46e18 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55dd3fc46de0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55dd3fc46db0 <col:9, col:17> '<bound member function type>' ->router 0x55dd3fbe0a50
|         `-ImplicitCastExpr 0x55dd3fc46e00 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55dd3fc46d98 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55dd3fc46d68 <col:9> 'Element *const' lvalue ->_owner 0x55dd3fc3b2d8
|               `-CXXThisExpr 0x55dd3fc46d58 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc39158 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55dd3fc46ea8 <col:37, line:146:5>
|   `-ReturnStmt 0x55dd3fc46e98 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fc46e80 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55dd3fc46e50 <col:9> 'Element *const' lvalue ->_owner 0x55dd3fc3b2d8
|         `-CXXThisExpr 0x55dd3fc46e40 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc39218 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55dd3fc46f28 <col:41, line:151:5>
|   `-ReturnStmt 0x55dd3fc46f18 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fc46f00 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55dd3fc46ed0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55dd3fc3b338
|         `-CXXThisExpr 0x55dd3fc46ec0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc392e0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55dd3fc394d8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55dd3fc39390 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55dd3fc39408 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3fc3bc18 <col:50> 'bool' false
|-CXXMethodDecl 0x55dd3fc39658 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55dd3fc39598 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55dd3fc397a0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55dd3fc39710 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fc398e8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55dd3fc39858 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fc39a30 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55dd3fc399a0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fc39b78 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55dd3fc39ae8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fc39c40 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55dd3fc47090 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55dd3fc47078 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55dd3fc47020 <col:2, col:47> 'void'
|       |-MemberExpr 0x55dd3fc46f50 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd3fc397a0
|       | `-CXXThisExpr 0x55dd3fc46f40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc47060 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd3fc47048 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55dd3fc47000 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55dd3fc46fe8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55dd3fc46fb8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55dd3f791f80 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55dd3fc39d80 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55dd3fc39cf0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fc39ec8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc39e38 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fc47218 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55dd3fc47200 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55dd3fc471a8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55dd3fc470b8 <col:2> '<bound member function type>' ->schedule_after 0x55dd3fc39d80
|       | `-CXXThisExpr 0x55dd3fc470a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc471e8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd3fc471d0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55dd3fc47168 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55dd3fc47138 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55dd3fc470f8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fc39e38 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55dd3fc47150 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55dd3fc47118 <col:38> 'int' 0
|-CXXMethodDecl 0x55dd3fc3a010 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc39f80 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fc47488 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55dd3fc47470 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55dd3fc47418 <col:2, col:49> 'void'
|       |-MemberExpr 0x55dd3fc47240 <col:2> '<bound member function type>' ->schedule_after 0x55dd3fc39d80
|       | `-CXXThisExpr 0x55dd3fc47230 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc47458 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd3fc47440 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55dd3fc473c0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd3fc473a8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd3fc47318 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55dd3faa34c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55dd3fc47400 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55dd3fc473e8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd3fc472f8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fc39f80 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fc3a158 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55dd3fc3a0c8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55dd3fc47668 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55dd3fc47650 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55dd3fc475f8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55dd3fc474b0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd3fc397a0
|       | `-CXXThisExpr 0x55dd3fc474a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc47638 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd3fc47620 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55dd3fc475c0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd3fc475a8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd3fc47588 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd3f98aad0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55dd3fc47558 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55dd3fc47540 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55dd3fc474f0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|             |     `-CXXThisExpr 0x55dd3fc474e0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55dd3fc47520 <col:33> 'const Timestamp' lvalue ParmVar 0x55dd3fc3a0c8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fc3a2a0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc3a210 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fc47940 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55dd3fc47928 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55dd3fc478d0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55dd3fc47690 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd3fc397a0
|       | `-CXXThisExpr 0x55dd3fc47680 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc47910 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd3fc478f8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55dd3fc47890 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55dd3fc477c8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55dd3fc477b0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55dd3fc47740 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55dd3fc47710 <col:31, col:41> '<bound member function type>' .sec 0x55dd3f793a78
|             | |     `-ImplicitCastExpr 0x55dd3fc47760 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55dd3fc476e0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|             | |         `-CXXThisExpr 0x55dd3fc476d0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55dd3fc47798 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55dd3fc47778 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fc3a210 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55dd3fc47858 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55dd3fc47828 <col:60, col:70> '<bound member function type>' .subsec 0x55dd3f794170
|                 `-ImplicitCastExpr 0x55dd3fc47878 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55dd3fc477f8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|                     `-CXXThisExpr 0x55dd3fc477e8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55dd3fc3a3e8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc3a358 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55dd3fc47c78 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55dd3fc47c60 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55dd3fc47c08 <col:2, col:65> 'void'
|       |-MemberExpr 0x55dd3fc47968 <col:2> '<bound member function type>' ->schedule_at_steady 0x55dd3fc397a0
|       | `-CXXThisExpr 0x55dd3fc47958 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc47c48 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55dd3fc47c30 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55dd3fc47bd0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd3fc47bb8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd3fc47b98 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55dd3f98aad0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55dd3fc47b38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55dd3fc47b20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55dd3fc479a8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|             |     `-CXXThisExpr 0x55dd3fc47998 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55dd3fc47b80 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55dd3fc47b68 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55dd3fc47ac8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55dd3fc47ab0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55dd3fc47a80 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55dd3faa34c8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55dd3fc47b08 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55dd3fc47af0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55dd3fc47a60 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55dd3fc3a358 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fc3a4b0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55dd3fc3a570 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55dd3fc48140 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55dd3fc47cd0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55dd3fc47ca0 <col:2> '<bound member function type>' ->unschedule 0x55dd3fc3a4b0
|   |   `-CXXThisExpr 0x55dd3fc47c90 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55dd3fc48128 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55dd3fc480f0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55dd3fc480d8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dd3fc47d88 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55dd3fbaa998 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55dd3fc47d00 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55dd3fc3afb8
|       | `-CXXThisExpr 0x55dd3fc47cf0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55dd3fc47d70 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55dd3fc47d40 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55dd3fc3a630 <line:304:5, line:310:5> line:304:29 adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55dd3fc48498 <col:42, line:310:5>
|   |-IfStmt 0x55dd3fc482e0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55dd3fc48210 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55dd3fc481f8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55dd3fc48198 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55dd3fabd770 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55dd3fc482d0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55dd3fc482b8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55dd3fc48288 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55dd3fc48270 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55dd3fc48240 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55dd3fc48488 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55dd3fc48470 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55dd3fc48440 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fc48428 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55dd3fc483e8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55dd3fc483d0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55dd3fc483a0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55dd3faa37e0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55dd3fc48410 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55dd3fc48380 <col:30> 'int' 500
|-CXXMethodDecl 0x55dd3fc3a770 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc3a6e0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3fc3a818 <col:69> "" ""
|-CXXMethodDecl 0x55dd3fc3a928 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc3a898 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3fc3a9d0 <col:70> "" ""
|-CXXMethodDecl 0x55dd3fc3aae0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc3aa50 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3fc3ab88 <col:71> "" ""
|-CXXMethodDecl 0x55dd3fc3ac98 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55dd3fc3ac08 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3fc3ad40 <col:72> "" ""
|-EnumDecl 0x55dd3fc3adb0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55dd3fc3aeb0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55dd3fc3af00 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fc3ae90 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55dd3fc3ae70 <col:25> 'int' 1
|-AccessSpecDecl 0x55dd3fc3af18 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55dd3fc3af58 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55dd3fc3afb8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55dd3fc3b008 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55dd3fc3b138 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55dd3fc3bc28 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55dd3fc3b1f8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55dd3fc3b278 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55dd3fc3b2d8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55dd3fc3b338 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55dd3fc3b488 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55dd3fc3b398 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55dd3fc3b658 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd3fc3b540 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55dd3fc3b5c0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55dd3fc3b830 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd3fc3b718 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55dd3fc3b798 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55dd3fc3ba08 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd3fc3b8f0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55dd3fc3b970 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55dd3fc3bbd8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fcb3600 prev 0x55dd3fc827b0 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55dd3fcb3738 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55dd3fcb37c8 <col:41, col:47> col:41 public
|-TypedefDecl 0x55dd3fcb3920 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55dd3fcb3880 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55dd3fc31590 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55dd3fc31490 'HashContainer'
|-EnumDecl 0x55dd3fcb6dd0 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55dd3fcb6ee8 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55dd3fcb6ec8 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55dd3fcb6eb0 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fcb6e90 <col:13> 'int' 1
| `-EnumConstantDecl 0x55dd3fcb6f90 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55dd3fcb6f70 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55dd3fcb6f58 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55dd3fcb6f38 <col:29> 'int' 2
|-CXXConstructorDecl 0x55dd3fcb7018 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55dd3fcb7108 <line:89:5, col:21> col:5 ~IPRewriterBase 'void ()' noexcept-unevaluated 0x55dd3fcb7108
| `-Overrides: [ 0x55dd3fbcfc58 Element::~Element 'void () noexcept' ]
|-EnumDecl 0x55dd3fcb71f0 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55dd3fcb72f0 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fcb75a0 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fcb72d0 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55dd3fcb72b0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55dd3fbd21d0 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55dd3fcb7380 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fcb75b8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fcb7360 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55dd3fcb7340 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55dd3fbd22f0 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55dd3fcb7468 <line:94:2, col:54> col:2 referenced CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dd3fcb75d0 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fcb7448 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55dd3fcb7428 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55dd3fcb7410 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55dd3fcb73d0 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55dd3fcb7380 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55dd3fcb73f0 <col:54> 'int' 1
| `-EnumConstantDecl 0x55dd3fcb7550 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55dd3fcb75e8 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fcb7530 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55dd3fcb7510 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55dd3fcb74f8 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55dd3fcb74b8 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55dd3fcb7380 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55dd3fcb74d8 <col:52> 'int' 1
|-CXXMethodDecl 0x55dd3fcb7650 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55dd3fbd1150 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55dd3fcd03e0 <col:36, col:54>
|   `-ReturnStmt 0x55dd3fcd03d0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55dd3fcd03b8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55dd3fcd0398 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55dd3fcb7718 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55dd3fbd14c0 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55dd3fcd0440 <col:36, col:51>
|   `-ReturnStmt 0x55dd3fcd0430 <col:38, col:45>
|     `-ImplicitCastExpr 0x55dd3fcd0418 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55dd3fcd03f8 <col:45> 'const char []' lvalue Var 0x55dd3fbd1608 'PUSH' 'const char []'
|-CXXMethodDecl 0x55dd3fcb77e0 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55dd3fbd2470 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55dd3fcd04a0 <col:33, col:68>
|   `-ReturnStmt 0x55dd3fcd0490 <col:35, col:42>
|     `-ImplicitCastExpr 0x55dd3fcd0478 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55dd3fcd0458 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55dd3fcb7380 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55dd3fcb7ab0 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55dd3fbd2780 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55dd3fcb7960 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55dd3fcb79d8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fcb7c08 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55dd3fbd29d0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55dd3fcb7b70 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fcb7d50 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55dd3fcb7cc0 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55dd3fcb7e98 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55dd3fbd31e8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55dd3fcb7e08 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55dd3fcb7f88 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55dd3fcd0538 <col:45, line:109:5>
|   `-ReturnStmt 0x55dd3fcd0528 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fcd0510 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55dd3fcd04f8 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55dd3fcd04c8 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55dd3fccd700
|           `-CXXThisExpr 0x55dd3fcd04b8 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55dd3fcb8108 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55dd3fcb8040 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55dd3fcd0710 <col:52, line:112:5>
|   `-ReturnStmt 0x55dd3fcd0700 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55dd3fcd06e8 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55dd3fcd06b8 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55dd3f797250
|         `-CXXOperatorCallExpr 0x55dd3fcd0680 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55dd3fcd0668 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55dd3fcd05f0 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55dd3fccb008 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55dd3fcd0560 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55dd3fccd6a0
|           | `-CXXThisExpr 0x55dd3fcd0550 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55dd3fcd05d8 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55dd3fcd0590 <col:22> 'int' lvalue ParmVar 0x55dd3fcb8040 'input' 'int'
|-CXXMethodDecl 0x55dd3fcb8440 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55dd3fcb82c8 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55dd3fcd0a80 <col:64, line:115:5>
|   `-ReturnStmt 0x55dd3fcd0a70 <line:114:2, col:84>
|     `-ConditionalOperator 0x55dd3fcd0a40 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55dd3fcd0a10 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55dd3fcd0938 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55dd3fcd0920 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55dd3fcd0728 <col:9> '<builtin fn type>' Function 0x55dd3f8a38c8 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55dd3fcd0968 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55dd3fcd08e8 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55dd3fcd08d0 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55dd3fcd08b0 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55dd3fcd0890 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55dd3fcd0860 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55dd3fcd0748 <col:29> 'int' lvalue ParmVar 0x55dd3fcb82c8 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55dd3fcd0878 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55dd3fcd07a0 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55dd3f797890 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55dd3fcd0980 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55dd3fcd0900 <col:71> 'int' 1
|       |-UnaryOperator 0x55dd3fcd09d8 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55dd3fcd09a8 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55dd3fcc1108
|       |   `-CXXThisExpr 0x55dd3fcd0998 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55dd3fcd0a28 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55dd3fcd09f0 <col:84> 'int' 0
|-EnumDecl 0x55dd3fcb84e8 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55dd3fcb8608 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55dd3fcb85e8 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55dd3fcb85d0 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fcb85b0 <col:21> 'int' 1
| `-EnumConstantDecl 0x55dd3fcb86b0 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55dd3fcb8690 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55dd3fcb8678 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55dd3fcb8658 <col:43> 'int' 2
|-CXXMethodDecl 0x55dd3fcb88f8 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55dd3fcb8718 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55dd3fcb8790 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55dd3fcb8810 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55dd3fcb8c28 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55dd3fcb89c8 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55dd3fcb8a40 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55dd3fcb8ab8 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55dd3fcb8b38 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55dd3fcb8d88 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55dd3fcb8cf8 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55dd3fcb8f38 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55dd3fcb8e40 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55dd3fcd0cd0 <col:76, line:128:5>
|   `-ReturnStmt 0x55dd3fcd0cc0 <line:127:2, col:52>
|     `-BinaryOperator 0x55dd3fcd0ca0 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55dd3fcd0bd0 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55dd3fcd0b00 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55dd3fcd0ad0 <col:9, col:15> '<bound member function type>' ->expiry 0x55dd3fc85ce0
|       | |   `-ImplicitCastExpr 0x55dd3fcd0ab8 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55dd3fcd0a98 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55dd3fcb8e40 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55dd3fcd0bb8 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55dd3fcd0b98 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55dd3fcd0b80 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55dd3fcd0b30 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55dd3fccd7e8
|       |     |   `-CXXThisExpr 0x55dd3fcd0b20 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55dd3fcd0b60 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55dd3fcd0c88 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55dd3fcd0c68 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55dd3fcd0c50 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55dd3fcd0c00 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55dd3fccd7e8
|           |   `-CXXThisExpr 0x55dd3fcd0bf0 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55dd3fcd0c30 <col:51> 'int' 1
|-CXXMethodDecl 0x55dd3fcb9118 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55dd3fbdc420 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55dd3fcb8ff8 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55dd3fcb9078 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55dd3fcb91c8 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55dd3fcc1108 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55dd3fccd6a0 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55dd3fccd700 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55dd3fccd7e8 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55dd3fccd848 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3fccd8a8 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55dd3fccd8f8 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55dd3fccda00 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55dd3fccdbb0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fccd9e0 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55dd3fccd9c0 <col:20> 'int' 300
| |-EnumConstantDecl 0x55dd3fccda90 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55dd3fccdbc8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fccda70 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55dd3fccda50 <col:22> 'int' 5
| `-EnumConstantDecl 0x55dd3fccdb60 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55dd3fccdbe0 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fccdb40 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55dd3fccdb20 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55dd3fccdae0 <col:24> 'int' 60
|         `-IntegerLiteral 0x55dd3fccdb00 <col:29> 'int' 15
|-CXXMethodDecl 0x55dd3fccdd48 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55dd3fccdc58 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55dd3fcd0ed8 <col:66, line:151:5>
|   `-ReturnStmt 0x55dd3fcd0ec8 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55dd3fcd0eb0 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55dd3fcd0e80 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55dd3fcd0e68 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55dd3fcd0e50 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55dd3fcd0d40 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55dd3fcd0d28 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55dd3fcd0ce8 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55dd3fccdc58 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55dd3fcd0d08 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55dd3fcd0db8 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55dd3fcd0da0 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55dd3fcd0d60 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55dd3fccdc58 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55dd3fcd0d80 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55dd3fcd0e30 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55dd3fcd0e18 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55dd3fcd0dd8 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55dd3fccdc58 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55dd3fcd0df8 <col:46> 'int' 0
|-CXXMethodDecl 0x55dd3fcce108 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55dd3fccde00 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55dd3fccde80 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55dd3fccdf28 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55dd3fccdfc8 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55dd3fcd0348 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55dd3fcd0328 <col:36> 'int' 0
|-CXXMethodDecl 0x55dd3fcce3e8 <line:155:5, line:156:39> line:155:17 unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55dd3fcce1d8 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55dd3fcce250 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55dd3fcce2c8 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55dd3fcd0380 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55dd3fcd0360 <col:38> 'int' 0
|-CXXMethodDecl 0x55dd3fcce5c8 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55dd3fcce4b0 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55dd3fcce530 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55dd3fcce8f0 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3fcce688 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55dd3fcce700 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55dd3fcce780 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55dd3fcce7f8 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55dd3fcce9b0 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55dd3fcceac8 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55dd3fcceaa8 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55dd3fccea90 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fccea70 <col:17> 'int' 1
| |-EnumConstantDecl 0x55dd3fcceb70 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55dd3fcceb50 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55dd3fcceb38 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fcceb18 <col:42> 'int' 2
| |-EnumConstantDecl 0x55dd3fccec18 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55dd3fccebf8 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55dd3fccebe0 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fccebc0 <col:59> 'int' 3
| |-EnumConstantDecl 0x55dd3fccecc0 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55dd3fcceca0 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55dd3fccec88 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fccec68 <col:12> 'int' 4
| |-EnumConstantDecl 0x55dd3fcced68 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55dd3fcced48 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55dd3fcced30 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fcced10 <col:29> 'int' 5
| `-EnumConstantDecl 0x55dd3fccee10 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55dd3fccedf0 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55dd3fccedd8 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55dd3fccedb8 <col:43> 'int' 6
|-CXXMethodDecl 0x55dd3fccef88 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dd3fccee70 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55dd3fcceef0 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55dd3fccf268 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fccf048 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55dd3fccf0c0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55dd3fccf140 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55dd3fccf1b8 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fccf558 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fccf338 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55dd3fccf3b0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55dd3fccf430 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55dd3fccf4a8 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55dd3fccf9f8 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55dd3fccf868 parent 0x55dd3f796c80 prev 0x55dd3f797c20 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55dd3fccf648 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55dd3fccf6c0 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55dd3fccf738 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55dd3fccf7b8 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55dd3f797d98 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55dd3f797d78 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55dd3f797890 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55dd3fccf9a8 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55dd3fccf9d0 <col:30> Inherited
|-AccessSpecDecl 0x55dd3fccfa38 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55dd3fccfb38 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55dd3fccfa70 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fccfd78 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55dd3fccfbf0 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55dd3fccfc68 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fccfec8 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55dd3fccfe38 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55dd3fccff90 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55dd3fccfff8 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55dd3fccfff8
| `-ParmVarDecl 0x55dd3fcd0108 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55dd3fcd01a8 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55dd3fcd01a8
  `-ParmVarDecl 0x55dd3fcd02b8 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fc2fa30 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fc2fb48 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55dd3fc2fbd8 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55dd3fc30148 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55dd3fc2fc10 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55dd3fc2fc90 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55dd3fc2fd08 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55dd3fc2fd88 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55dd3fc2fe00 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55dd3fc2fe78 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55dd3fc2fef0 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55dd3fc2ff68 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fc305f8 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fc30310 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55dd3fc303c0 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55dd3fc30438 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55dd3fc304b0 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fc30a78 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fc307a0 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55dd3fc30848 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55dd3fc308c0 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55dd3fc30938 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fc30da8 <line:22:5, line:23:42> line:22:17 used parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dd3fc30b48 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55dd3fc30bc0 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55dd3fc30c38 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55dd3fc30cb0 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fc30e88 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x55dd3fc321e0 <col:16, line:27:5>
|   `-UnaryOperator 0x55dd3fc321c8 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55dd3fc32198 <col:2> 'int' lvalue ->_refcount 0x55dd3fc31dc8
|       `-CXXThisExpr 0x55dd3fc32188 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55dd3fc30f48 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55dd3fc323d8 <col:18, line:31:5>
|   `-IfStmt 0x55dd3fc323c0 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55dd3fc32288 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55dd3fc32270 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55dd3fc32238 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55dd3fc32208 <col:8> 'int' lvalue ->_refcount 0x55dd3fc31dc8
|     | |     `-CXXThisExpr 0x55dd3fc321f8 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55dd3fc32250 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55dd3fc323a0 <line:30:6, col:13> 'void' Function 0x55dd3f6dd228 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55dd3fc322a8 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55dd3fc31048 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55dd3fc326c0 <col:27, line:35:5>
|   `-ReturnStmt 0x55dd3fc326b0 <line:34:2, col:39>
|     `-BinaryOperator 0x55dd3fc32690 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55dd3fc32600 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55dd3fc32520 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55dd3fc324d8 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55dd3fc324c0 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55dd3fc324a0 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55dd3fc32470 <col:9> '<bound member function type>' .operator unsigned int 0x55dd3fb6cf58
|       | | |       `-MemberExpr 0x55dd3fc32400 <col:9> 'const IPAddress' lvalue ->_saddr 0x55dd3fc31a50
|       | | |         `-CXXThisExpr 0x55dd3fc323f0 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55dd3fc32508 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55dd3fc324f0 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55dd3fc32440 <col:19> 'const int' lvalue ->_sport 0x55dd3fc31ab8
|       | |       `-CXXThisExpr 0x55dd3fc32430 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55dd3fc325e8 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55dd3fc325d0 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55dd3fc325b0 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55dd3fc32580 <col:29> '<bound member function type>' .operator unsigned int 0x55dd3fb6cf58
|       |         `-MemberExpr 0x55dd3fc32550 <col:29> 'const IPAddress' lvalue ->_daddr 0x55dd3fc31b18
|       |           `-CXXThisExpr 0x55dd3fc32540 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55dd3fc32678 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55dd3fc32660 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55dd3fc32630 <col:39> 'const int' lvalue ->_dport 0x55dd3fc31b80
|             `-CXXThisExpr 0x55dd3fc32620 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55dd3fc31118 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55dd3fc32758 <col:29, line:38:5>
|   `-ReturnStmt 0x55dd3fc32748 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55dd3fc32718 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55dd3fc326e8 <col:9> 'const IPAddress' lvalue ->_daddr 0x55dd3fc31b18
|         `-CXXThisExpr 0x55dd3fc326d8 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55dd3fc317e0 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55dd3fc311c8 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55dd3fc31268 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55dd3fc316b0 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55dd3fc318b8 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55dd3fc31978 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55dd3fc32a00 <col:41, line:47:5>
|   `-ReturnStmt 0x55dd3fc329f0 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55dd3fc329d8 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55dd3fc329a8 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fc32990 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55dd3fc32940 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55dd3fc32880 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55dd3fc32790 <col:25> 'const IPAddress' lvalue ->_saddr 0x55dd3fc31a50
|             |   `-CXXThisExpr 0x55dd3fc32780 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55dd3fc328c8 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55dd3fc328b0 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55dd3fc327d0 <col:33> 'const int' lvalue ->_sport 0x55dd3fc31ab8
|             |     `-CXXThisExpr 0x55dd3fc327c0 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55dd3fc328e0 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55dd3fc32810 <col:41> 'const IPAddress' lvalue ->_daddr 0x55dd3fc31b18
|             |   `-CXXThisExpr 0x55dd3fc32800 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55dd3fc32928 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55dd3fc32910 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55dd3fc32850 <col:49> 'const int' lvalue ->_dport 0x55dd3fc31b80
|                   `-CXXThisExpr 0x55dd3fc32840 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55dd3fc31a18 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55dd3fc31a50 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55dd3fc31ab8 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55dd3fc31b18 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55dd3fc31b80 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55dd3fc31be0 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3fc31c40 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3fc31ca0 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55dd3fc31d00 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55dd3fc31d60 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55dd3fc31dc8 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55dd3fc31f18 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55dd3fc31e58 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55dd3fc320c8 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55dd3fc31fd8 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55dd3fc322b8 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55dd3fc322b8

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f7973c8 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55dd3f7974f8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55dd3f797588 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55dd3f798048 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3f798478 <col:5>
|-CXXConstructorDecl 0x55dd3f798148 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55dd3f798148
| `-ParmVarDecl 0x55dd3f798258 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x55dd3f7982f8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55dd3f7982f8
  `-ParmVarDecl 0x55dd3f798408 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.3 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f796c80 prev 0x55dd3fc829a0 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dd3f796d78 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55dd3f796e08 <col:25, col:31> col:25 public
|-EnumDecl 0x55dd3f796e30 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55dd3f796ef0 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55dd3f796f40 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55dd3f796f90 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55dd3f796fe0 <col:30> col:30 i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55dd3f797030 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55dd3f7970b8 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55dd3f797120 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55dd3f797188 <line:17:5, col:9> col:9 kind 'int'
|-FieldDecl 0x55dd3f7971f0 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x55dd3f797250 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55dd3f7972b8 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55dd3f797318 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55dd3f797378 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55dd3f7973c8 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55dd3f7974f8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55dd3f797588 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55dd3f798048 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd3f798478 <col:5>
| |-CXXConstructorDecl 0x55dd3f798148 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55dd3f798148
| | `-ParmVarDecl 0x55dd3f798258 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x55dd3f7982f8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55dd3f7982f8
|   `-ParmVarDecl 0x55dd3f798408 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x55dd3f797648 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55dd3f7976e8 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55dd3f797188 'kind' 'int'
| | `-ImplicitCastExpr 0x55dd3f797df0 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55dd3f797db0 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55dd3f796ef0 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55dd3f7971f0 'foutput' 'int'
| | `-UnaryOperator 0x55dd3f797e50 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55dd3f797e30 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55dd3f7972b8 'routput' 'int'
| | `-UnaryOperator 0x55dd3f797ed0 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55dd3f797eb0 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55dd3f797318 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3f797f70 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3f797f30 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3f797378 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3f797ff0 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55dd3f797fb0 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3f797648 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55dd3f798488 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55dd3f7985d0 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55dd3f7985b0 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55dd3f798548 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55dd3f7974f8
|     | `-MemberExpr 0x55dd3f798518 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55dd3f797648
|     |   `-CXXThisExpr 0x55dd3f798508 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55dd3f798598 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55dd3f798578 <col:14> 'int' 0
|-EnumDecl 0x55dd3f797790 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55dd3f797890 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55dd3f797970 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3f797870 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3f797850 <col:18> 'int' 0
| `-EnumConstantDecl 0x55dd3f797920 <col:21, col:44> col:21 mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55dd3f797988 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3f797900 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55dd3f7978e0 <col:44> 'int' 1
`-CXXMethodDecl 0x55dd3f797c20 <line:37:5, line:39:46> line:37:44 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x55dd3f7979b0 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x55dd3f797a28 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x55dd3f797aa0 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x55dd3f797b20 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x55dd3f797d98 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x55dd3f797d78 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55dd3f797890 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x55dd3f797ce0 <line:37:20>
  `-OptimizeNoneAttr 0x55dd3f797d38 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb58460 prev 0x55dd3faf2610 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3fb58558 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55dd3fb585e8 <col:22, col:28> col:22 public
|-EnumDecl 0x55dd3fb58610 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55dd3fb58728 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb58708 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55dd3fb586f0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fb586d0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55dd3fb587d0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb587b0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55dd3fb58798 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55dd3fb58778 <col:14> 'int' 1
| |-EnumConstantDecl 0x55dd3fb58860 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb58840 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55dd3fb58820 <col:17> 'int' 0
| |-EnumConstantDecl 0x55dd3fb588f0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb588d0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55dd3fb588b0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55dd3fb58980 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb58960 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55dd3fb58940 <col:16> 'int' 2
| |-EnumConstantDecl 0x55dd3fb58a10 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb589f0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55dd3fb589d0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55dd3fb58aa0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb58a80 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55dd3fb58a60 <col:15> 'int' 4
| |-EnumConstantDecl 0x55dd3fb58b30 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb58b10 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55dd3fb58af0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55dd3fb58bc0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55dd3fb58ba0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55dd3fb58b80 <col:12> 'int' 6
| `-EnumConstantDecl 0x55dd3fb58c50 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55dd3fb58c30 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55dd3fb58c10 <col:13> 'int' 7
|-VarDecl 0x55dd3fb58ce8 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55dd3fb58d70 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55dd3fb58df8 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55dd3fb58e80 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55dd3fb58f08 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55dd3fb58f90 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55dd3fb59018 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55dd3fb590a0 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55dd3fb59128 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55dd3fb591b0 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55dd3fb59238 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55dd3fb59338 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55dd3fb5e628 '_nerrors' 'int'
| | `-IntegerLiteral 0x55dd3fb5edb8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55dd3fb5ee28 <col:16, line:129:5>
|-CXXDestructorDecl 0x55dd3fb59428 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55dd3fb5ee38 <col:29, line:132:5>
|-CXXMethodDecl 0x55dd3fb595e8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55dd3fb59520 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fb596b0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55dd3fb59798 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55dd3fb5ee90 <col:44, line:161:5>
|   `-ReturnStmt 0x55dd3fb5ee80 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb5ee68 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fb5ee48 <col:9> 'ErrorHandler *' lvalue Var 0x55dd3fb5e688 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fb598d8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55dd3fb59848 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dd3fb599a0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55dd3fb5eef0 <col:43, line:173:5>
|   `-ReturnStmt 0x55dd3fb5eee0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb5eec8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fb5eea8 <col:9> 'ErrorHandler *' lvalue Var 0x55dd3fb5e700 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55dd3fb59a58 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55dd3fb59ad8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55dd3fb59be8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55dd3fb59b58 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb59d38 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55dd3fb59ca8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb59e90 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55dd3fb59df8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb59fe8 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55dd3fb59f50 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5a140 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55dd3fb5a0a8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5a350 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd3fb5a1f8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55dd3fb5a278 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5a528 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd3fb5a410 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55dd3fb5a490 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5a748 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd3fb5a5e8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55dd3fb5a668 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5a928 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd3fb5a808 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55dd3fb5a888 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5ab08 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55dd3fb5a9e8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55dd3fb5aa68 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5ac90 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55dd3fb5abc8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55dd3fb5ae60 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55dd3fb5ad48 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55dd3fb5adc0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55dd3fb5f148 <col:57, line:234:5>
|   `-ReturnStmt 0x55dd3fb5f138 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55dd3fb5f120 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55dd3fb5f0c8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55dd3fb5f098 <col:9> '<bound member function type>' ->xmessage 0x55dd3fb5ac90
|         | `-CXXThisExpr 0x55dd3fb5f088 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55dd3fb5f108 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55dd3fb5f0f0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55dd3fb5f068 <col:18, col:40> 'String' (CXXTemporary 0x55dd3fb5f068)
|               `-CallExpr 0x55dd3fb5f030 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55dd3fb5f018 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55dd3fb5ef90 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55dd3fb5ce58 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55dd3fb5efb0 <col:31> 'const String' lvalue ParmVar 0x55dd3fb5adc0 'str' 'const String &'
|                 `-DeclRefExpr 0x55dd3fb5efd0 <col:36> 'const String' lvalue ParmVar 0x55dd3fb5ad48 'anno' 'const String &'
|-CXXMethodDecl 0x55dd3fb5b140 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55dd3fb5af20 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55dd3fb5afa0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55dd3fb5b018 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55dd3fb5f3d8 <col:68, line:243:5>
|   `-ReturnStmt 0x55dd3fb5f3c8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55dd3fb5f3b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55dd3fb5f350 <col:9, col:41> 'int'
|         |-MemberExpr 0x55dd3fb5f320 <col:9> '<bound member function type>' ->xmessage 0x55dd3fb5ae60
|         | `-CXXThisExpr 0x55dd3fb5f310 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55dd3fb5f1e8 <col:18> 'const String' lvalue ParmVar 0x55dd3fb5af20 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55dd3fb5f398 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55dd3fb5f380 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55dd3fb5f2f0 <col:24, col:40> 'String' (CXXTemporary 0x55dd3fb5f2f0)
|               `-CXXMemberCallExpr 0x55dd3fb5f288 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55dd3fb5f218 <col:24> '<bound member function type>' ->vformat 0x55dd3fb5c320
|                 | `-CXXThisExpr 0x55dd3fb5f208 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55dd3fb5f2b8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55dd3fb5f248 <col:32> 'const char *' lvalue ParmVar 0x55dd3fb5afa0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55dd3fb5f2d0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55dd3fb5f268 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55dd3fb5b018 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd3fb5b3e0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55dd3fb5b208 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55dd3fb5b280 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55dd3fb5b2f8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55dd3fb5f718 <col:23, line:254:5>
|   `-ReturnStmt 0x55dd3fb5f708 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55dd3fb5f6f0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55dd3fb5f690 <col:9, col:71> 'int'
|         |-MemberExpr 0x55dd3fb5f660 <col:9> '<bound member function type>' ->xmessage 0x55dd3fb5ae60
|         | `-CXXThisExpr 0x55dd3fb5f650 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55dd3fb5f6d8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55dd3fb5f6c0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55dd3fb5f610 <col:18, col:65> 'String' (CXXTemporary 0x55dd3fb5f610)
|         |     `-CallExpr 0x55dd3fb5f5a8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55dd3fb5f590 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55dd3fb5f478 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55dd3fb5ce58 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55dd3fb5f498 <col:31> 'const String' lvalue ParmVar 0x55dd3fb5b280 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55dd3fb5f5f0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55dd3fb5f5d8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55dd3fb5f570 <col:37, col:64> 'String' (CXXTemporary 0x55dd3fb5f570)
|         |             `-CallExpr 0x55dd3fb5f540 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55dd3fb5f528 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55dd3fb5f4b8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55dd3fb5d4a8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55dd3fb5f4d8 <col:56> 'const String' lvalue ParmVar 0x55dd3fb5b208 'landmark' 'const String &'
|         `-DeclRefExpr 0x55dd3fb5f630 <col:68> 'const String' lvalue ParmVar 0x55dd3fb5b2f8 'str' 'const String &'
|-CXXMethodDecl 0x55dd3fb5b760 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55dd3fb5b4a8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55dd3fb5b520 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55dd3fb5b5a0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55dd3fb5b618 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55dd3fb5f9d0 <col:34, line:267:5>
|   `-ReturnStmt 0x55dd3fb5f9c0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55dd3fb5f9a8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55dd3fb5f940 <col:9, col:51> 'int'
|         |-MemberExpr 0x55dd3fb5f910 <col:9> '<bound member function type>' ->xmessage 0x55dd3fb5b3e0
|         | `-CXXThisExpr 0x55dd3fb5f900 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55dd3fb5f7b8 <col:18> 'const String' lvalue ParmVar 0x55dd3fb5b4a8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55dd3fb5f7d8 <col:28> 'const String' lvalue ParmVar 0x55dd3fb5b520 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55dd3fb5f990 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55dd3fb5f978 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55dd3fb5f8e0 <col:34, col:50> 'String' (CXXTemporary 0x55dd3fb5f8e0)
|               `-CXXMemberCallExpr 0x55dd3fb5f878 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55dd3fb5f808 <col:34> '<bound member function type>' ->vformat 0x55dd3fb5c320
|                 | `-CXXThisExpr 0x55dd3fb5f7f8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55dd3fb5f8a8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55dd3fb5f838 <col:42> 'const char *' lvalue ParmVar 0x55dd3fb5b5a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55dd3fb5f8c0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55dd3fb5f858 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55dd3fb5b618 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd3fb5b870 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55dd3fb5fa50 <col:25, line:288:5>
|   `-ReturnStmt 0x55dd3fb5fa40 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb5fa28 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55dd3fb5f9f8 <col:9> 'const int' lvalue ->_nerrors 0x55dd3fb5e628
|         `-CXXThisExpr 0x55dd3fb5f9e8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55dd3fb5ba80 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55dd3fb5b928 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55dd3fb5b9a8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5bd68 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55dd3fb5bb48 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55dd3fb5bbc8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55dd3fb5bc40 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd3fb5bf00 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55dd3fb5be38 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5c148 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55dd3fb5bfc0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55dd3fb5c038 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55dd3fb5fcb0 <col:58, line:357:5>
|   `-ReturnStmt 0x55dd3fb5fca0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55dd3fb5fc88 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55dd3fb5fc58 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55dd3fb5fc40 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55dd3fb5fc20 <col:9, col:29> 'String' (CXXTemporary 0x55dd3fb5fc20)
|             `-CallExpr 0x55dd3fb5fbb0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55dd3fb5fb98 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55dd3fb5fb18 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55dd3fb5bd68 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55dd3fb5fab8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55dd3fb5fbe8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55dd3fb5fad8 <col:21> 'const char *' lvalue ParmVar 0x55dd3fb5bfc0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55dd3fb5fc00 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55dd3fb5faf8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55dd3fb5c038 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd3fb5c320 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55dd3fb5c210 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55dd3fb5c288 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55dd3fb5c478 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55dd3fb5c3e8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55dd3fb5c5c0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55dd3fb5c530 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55dd3fb5c860 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55dd3fb5c678 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55dd3fb5c6f8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55dd3fb5c770 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55dd3fb5c9c0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55dd3fb5c930 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55dd3fb5fdc8 <col:37, line:441:5>
|   `-IfStmt 0x55dd3fb5fdb0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55dd3fb5fd38 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55dd3fb5fd08 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55dd3fb5fcc8 <col:6> 'int' lvalue ParmVar 0x55dd3fb5c930 'level' 'int'
|     | `-ImplicitCastExpr 0x55dd3fb5fd20 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55dd3fb5fce8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55dd3fb58a10 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55dd3fb5fd98 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55dd3fb5fd68 <col:8> 'int' lvalue ->_nerrors 0x55dd3fb5e628
|         `-CXXThisExpr 0x55dd3fb5fd58 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55dd3fb5ca88 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55dd3fb5fe60 <col:26, line:448:5>
|   `-BinaryOperator 0x55dd3fb5fe40 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55dd3fb5fdf0 <col:2> 'int' lvalue ->_nerrors 0x55dd3fb5e628
|     | `-CXXThisExpr 0x55dd3fb5fde0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55dd3fb5fe20 <col:13> 'int' 0
|-CXXMethodDecl 0x55dd3fb5cc50 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55dd3fb5cb40 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55dd3fb5cbb8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55dd3fb5ce58 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55dd3fb5cd10 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55dd3fb5cd88 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55dd3fb5d108 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55dd3fb5cf18 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55dd3fb5cf98 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55dd3fb5d018 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55dd3fb5d1c0 <col:59> 0 0
|-CXXMethodDecl 0x55dd3fb5d358 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55dd3fb5d238 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55dd3fb5d2b8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55dd3fb604f0 <col:70, line:534:5>
|   |-DeclStmt 0x55dd3fb5ffd0 <line:528:2, col:20>
|   | |-VarDecl 0x55dd3fb5fe88 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55dd3fb5fef0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55dd3fb5ff28 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55dd3fb5ff90 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55dd3fb600a0 <line:529:2, col:23>
|   | `-VarDecl 0x55dd3fb60000 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55dd3fb60088 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55dd3fb60068 <col:18> 'const char *' lvalue ParmVar 0x55dd3fb5d238 'begin' 'const char *'
|   |-DoStmt 0x55dd3fb60488 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55dd3fb60398 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55dd3fb60380 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55dd3fb60360 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55dd3fb600b8 <col:6> 'const char *' lvalue Var 0x55dd3fb60000 'x' 'const char *'
|   | |     `-CallExpr 0x55dd3fb602b0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55dd3fb60298 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55dd3fb60250 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55dd3fb5eb00 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55dd3fb60318 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55dd3fb60300 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55dd3fb60170 <col:20, col:27> 'String' (CXXTemporary 0x55dd3fb60170)
|   | |       |     `-CXXTemporaryObjectExpr 0x55dd3fb60138 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55dd3fb60330 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55dd3fb60190 <col:30> 'const char *' lvalue Var 0x55dd3fb60000 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55dd3fb60348 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55dd3fb601b0 <col:33> 'const char *' lvalue ParmVar 0x55dd3fb5d2b8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55dd3fb601f0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55dd3fb601d0 <col:39> 'String' lvalue Var 0x55dd3fb5fe88 'name' 'String'
|   | |       |-UnaryOperator 0x55dd3fb60228 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55dd3fb60208 <col:46> 'String' lvalue Var 0x55dd3fb5ff28 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55dd3fb60240 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55dd3fb60470 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55dd3fb60438 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55dd3fb60418 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55dd3fb603e8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55dd3f8b9c08
|   |         `-ImplicitCastExpr 0x55dd3fb603d0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55dd3fb603b0 <col:11> 'String' lvalue Var 0x55dd3fb5fe88 'name' 'String'
|   `-ReturnStmt 0x55dd3fb604e0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb604c8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fb604a8 <col:9> 'const char *' lvalue Var 0x55dd3fb60000 'x' 'const char *'
|-CXXMethodDecl 0x55dd3fb5d4a8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55dd3fb5d418 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55dd3fb60af8 <col:55, line:550:5>
|   `-IfStmt 0x55dd3fb60ad0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55dd3fb60730 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55dd3fb60718 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55dd3fb60700 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55dd3fb606e0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55dd3fb606b0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55dd3f8b9c08
|     | |       `-DeclRefExpr 0x55dd3fb60550 <col:6> 'const String' lvalue ParmVar 0x55dd3fb5d418 'x' 'const String &'
|     | `-BinaryOperator 0x55dd3fb60690 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55dd3fb60660 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55dd3fb60610 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55dd3fb605f8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55dd3fb605b0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55dd3f8d32a0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55dd3fb60570 <col:11> 'const String' lvalue ParmVar 0x55dd3fb5d418 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55dd3fb60590 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55dd3fb60678 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55dd3fb60648 <col:19> 'char' 123
|     |-ReturnStmt 0x55dd3fb607a0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55dd3fb60770 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55dd3fb60750 <col:13> 'const String' lvalue ParmVar 0x55dd3fb5d418 'x' 'const String &'
|     `-IfStmt 0x55dd3fb60aa8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55dd3fb60838 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55dd3fb60820 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55dd3fb60800 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55dd3fb607d0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55dd3f8b9c08
|       |       `-DeclRefExpr 0x55dd3fb607b0 <col:11> 'const String' lvalue ParmVar 0x55dd3fb5d418 'x' 'const String &'
|       |-ReturnStmt 0x55dd3fb609c0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55dd3fb609a8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55dd3fb60978 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55dd3fb60960 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55dd3fb60940 <col:13, col:29> 'String' (CXXTemporary 0x55dd3fb60940)
|       |         `-CallExpr 0x55dd3fb608f0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55dd3fb608d8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55dd3fb60850 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55dd3fb5cc50 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55dd3fb60920 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55dd3fb60870 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55dd3fb60890 <col:28> 'const String' lvalue ParmVar 0x55dd3fb5d418 'x' 'const String &'
|       `-ReturnStmt 0x55dd3fb60a98 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55dd3fb60a80 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55dd3fb60a50 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55dd3fb60a38 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55dd3fb60a18 <col:13, col:20> 'String' (CXXTemporary 0x55dd3fb60a18)
|                 `-CXXTemporaryObjectExpr 0x55dd3fb609e0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55dd3fb5d670 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55dd3fb5d560 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55dd3fb5d5d8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3fb5eda8 <col:71> 'bool' false
|-CXXRecordDecl 0x55dd3fb5d720 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55dd3fb5da18 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55dd3fb5d9b0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55dd3fb5d950 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55dd3fb5d910 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55dd3f8b6460 'String'
|       | `-CXXRecord 0x55dd3f8b63d0 'String'
|       |-BuiltinType 0x55dd3f586580 'int'
|       `-DecayedType 0x55dd3faf3660 '__va_list_tag *' sugar
|         |-TypedefType 0x55dd3faf3630 'va_list' sugar
|         | |-Typedef 0x55dd3f7d4720 'va_list'
|         | `-TypedefType 0x55dd3f7d46d0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55dd3f7cd4c8 '__gnuc_va_list'
|         |   `-TypedefType 0x55dd3f7cd430 '__builtin_va_list' sugar
|         |     |-Typedef 0x55dd3f5c7d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55dd3f5c7ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55dd3f5872d0 '__va_list_tag'
|         |         `-CXXRecord 0x55dd3f587238 '__va_list_tag'
|         `-PointerType 0x55dd3f7da420 '__va_list_tag *'
|           `-RecordType 0x55dd3f5872d0 '__va_list_tag'
|             `-CXXRecord 0x55dd3f587238 '__va_list_tag'
|-EnumDecl 0x55dd3fb5da70 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55dd3fb5db70 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e0d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5db50 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd3fb5db30 <col:16> 'int' 1
| |-EnumConstantDecl 0x55dd3fb5dc00 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e0e8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5dbe0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd3fb5dbc0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55dd3fb5dc90 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e100 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5dc70 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd3fb5dc50 <col:22> 'int' 4
| |-EnumConstantDecl 0x55dd3fb5dd20 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e118 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5dd00 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55dd3fb5dce0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55dd3fb5ddb0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e130 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5dd90 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd3fb5dd70 <col:22> 'int' 16
| |-EnumConstantDecl 0x55dd3fb5de40 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e148 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5de20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55dd3fb5de00 <col:19> 'int' 32
| |-EnumConstantDecl 0x55dd3fb5ded0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e160 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5deb0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55dd3fb5de90 <col:17> 'int' 64
| |-EnumConstantDecl 0x55dd3fb5df60 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e178 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5df40 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55dd3fb5df20 <col:14> 'int' 128
| |-EnumConstantDecl 0x55dd3fb5dff0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55dd3fb5e190 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb5dfd0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55dd3fb5dfb0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55dd3fb5e080 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55dd3fb5e1a8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fb5e060 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55dd3fb5e040 <col:12> 'int' 1024
|-CXXMethodDecl 0x55dd3fb5e3b8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55dd3fb5e1d0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55dd3fb5e270 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55dd3fb5e540 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55dd3fb5e478 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55dd3fb5e5e8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55dd3fb5e628 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55dd3fb5e688 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55dd3fb5e700 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55dd3fb5eb00 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55dd3fb5e778 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55dd3fb5e7f8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55dd3fb5e878 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55dd3fb5e8f0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55dd3fb5e968 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55dd3fb5e9e0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55dd3fb5ec28 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55dd3fb5ec28
| `-ParmVarDecl 0x55dd3fb5ed38 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55dd3fb60e58 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55dd3fb60e58
  `-ParmVarDecl 0x55dd3fb60f68 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3f9089a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55dd3f908b78 prev 0x55dd3f9089a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dd3f908c08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dd3f908c30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3f90ad30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55dd3f90ace0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55dd3f90acc0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55dd3f908e48 'type'
|     `-SubstTemplateTypeParmType 0x55dd3f908e10 'String' sugar
|       |-TemplateTypeParmType 0x55dd3f87af50 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f87af00 'T'
|       `-RecordType 0x55dd3f8b6460 'String'
|         `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90ade8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55dd3f90adb0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55dd3f90ad90 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55dd3f90ad30 'type'
|     `-ElaboratedType 0x55dd3f90ace0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55dd3f90acc0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55dd3f908e48 'type'
|         `-SubstTemplateTypeParmType 0x55dd3f908e10 'String' sugar
|           |-TemplateTypeParmType 0x55dd3f87af50 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd3f87af00 'T'
|           `-RecordType 0x55dd3f8b6460 'String'
|             `-CXXRecord 0x55dd3f8b63d0 'String'
|-CXXMethodDecl 0x55dd3f90af68 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55dd3f90ae78 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55dd3f90b058 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dd3f90b138 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55dd3f90b408 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55dd3f90b310 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55dd3f90b648 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd3f90b4c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3f90b538 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90b818 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd3f90b708 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3f90b780 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90b978 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55dd3f90ba48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55dd3f90bc98 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd3f90bb08 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55dd3f90bb80 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90bef8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55dd3f90bd68 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55dd3f90bde0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90c0b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55dd3f90bfc8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90c278 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55dd3f90c180 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90c330 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd3f90c3e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dd3f90c618 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dd3f90c490 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dd3f90c508 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dd3f90c8b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55dd3f90c7c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55dd3f90c980 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55dd3f90c9d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dd3f90ca20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3f8ea800 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55dd3f907408 prev 0x55dd3f8ea800 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dd3f908910 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55dd3f9088c0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55dd3f9088a0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55dd3f908750 'type'
|     `-SubstTemplateTypeParmType 0x55dd3f9085e0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55dd3f7a4780 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55dd3f7a4728 'F'
|       `-RecordType 0x55dd3f908240 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55dd3f908160 'typed_array_memory'
|-FieldDecl 0x55dd3f90ca70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55dd3f90cac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dd3f90caf8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|   |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dd3f887c28 'T'
|   `-RecordType 0x55dd3f8b6460 'String'
|     `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90cb88 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55dd3f90cb50 'String &'
|   `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-RecordType 0x55dd3f8b6460 'String'
|       `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90cc18 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55dd3f90cbe0 'const String &'
|   `-QualType 0x55dd3f9074a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3f8b6460 'String'
|         `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90cca8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55dd3f90cc70 'String *'
|   `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-RecordType 0x55dd3f8b6460 'String'
|       `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90cd38 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55dd3f90cd00 'const String *'
|   `-QualType 0x55dd3f9074a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3f8b6460 'String'
|         `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90d990 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55dd3f90d940 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55dd3f90d920 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55dd3f90d858 'type'
|     `-LValueReferenceType 0x55dd3f90d820 'const String &'
|       `-QualType 0x55dd3f90d5c1 'const String' const
|         `-SubstTemplateTypeParmType 0x55dd3f90d5c0 'String' sugar
|           |-TemplateTypeParmType 0x55dd3f7acab0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dd3f7aca58 'T'
|           `-RecordType 0x55dd3f8b6460 'String'
|             `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90d9f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55dd3f90cbe0 'const String &'
|   `-QualType 0x55dd3f9074a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3f8b6460 'String'
|         `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90da50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dd3f586580 'int'
|-TypedefDecl 0x55dd3f90dab8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55dd3f90cc70 'String *'
|   `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|     |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dd3f887c28 'T'
|     `-RecordType 0x55dd3f8b6460 'String'
|       `-CXXRecord 0x55dd3f8b63d0 'String'
|-TypedefDecl 0x55dd3f90db20 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55dd3f90cd00 'const String *'
|   `-QualType 0x55dd3f9074a1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dd3f9074a0 'String' sugar
|       |-TemplateTypeParmType 0x55dd3f887c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dd3f887c28 'T'
|       `-RecordType 0x55dd3f8b6460 'String'
|         `-CXXRecord 0x55dd3f8b63d0 'String'
|-EnumDecl 0x55dd3f90db78 <line:134:5> col:5
| `-EnumConstantDecl 0x55dd3f90dc70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dd3f90dc50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dd3f889668 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dd3f889640 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dd3f889620 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dd3f90dcf8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55dd3f90df88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3f90ddb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3f90de50 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55dd3f90e218 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55dd3f90e100 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55dd3f90e4d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55dd3f90e3c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55dd3f90f1c0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55dd3f90f0a0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55dd3f90f4d0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55dd3f90f3b0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55dd3f90f7c0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3f90f608 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3f90f680 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd3f90f8e8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55dd3f90f998 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3f90f9f0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3f90fa38 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55dd3f90fae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3f90fb40 <col:30> Inherited
|-CXXMethodDecl 0x55dd3f90fc08 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd3f90fcb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3f90fd10 <col:30> Inherited
|-CXXMethodDecl 0x55dd3f90fd58 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd3f90fe08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3f90fe60 <col:30> Inherited
|-CXXMethodDecl 0x55dd3f90fea8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd3f90ff58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3f90ffb0 <col:30> Inherited
|-CXXMethodDecl 0x55dd3f90fff8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dd3f9100a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dd3f910100 <col:30> Inherited
|-CXXMethodDecl 0x55dd3f910128 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd3f9101d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dd3f910288 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dd3f910448 <line:160:5, col:64> col:17 used resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3f910338 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dd3f9103b0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &' cinit
|   `-ExprWithCleanups 0x55dd3fceb010 <col:61, col:63> 'const String':'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dd3fceaff8 <col:61, col:63> 'const String':'const String' lvalue
|       `-ImplicitCastExpr 0x55dd3fceafe0 <col:61, col:63> 'const String':'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dd3fceafc0 <col:61, col:63> 'String':'String' (CXXTemporary 0x55dd3fceafc0)
|           `-CXXTemporaryObjectExpr 0x55dd3fceaf88 <col:61, col:63> 'String':'String' 'void ()'
|-CXXMethodDecl 0x55dd3f910598 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3f910508 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3f910748 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55dd3f910650 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd3f910800 <col:20>
| `-OptimizeNoneAttr 0x55dd3f910858 <col:30>
|-CXXMethodDecl 0x55dd3f910978 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55dd3f910880 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dd3f910a30 <col:20>
| `-OptimizeNoneAttr 0x55dd3f910a88 <col:30>
|-CXXMethodDecl 0x55dd3f910b40 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3f910ab0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3f910c88 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd3f910bf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3f910db8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55dd3f910ee8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55dd3f910fb8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55dd3f911088 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55dd3f9111c8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dd3f911138 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3f911310 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dd3f911280 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dd3f911458 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dd3f9113c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd3f911510 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dd3f911610 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dd3f911580 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dd3f9116c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dd3f911788 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55dd3f911888 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55dd3f911a08 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd3f911948 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55dd3f9121c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dd3f911ac0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55dd3f912128 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55dd3f912028 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55dd3f9122a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dd3f9123f8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55dd3f912368 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd3f9124b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dd3f9126f8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dd3f912570 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55dd3f9125e8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dd3f912888 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55dd3f9127c8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55dd3f912a98 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55dd3f912950 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55dd3f9129c8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55dd3f912b58 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55dd3f912db8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55dd3f912cc0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55dd3f912e88 <line:111:7> col:7 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55dd3fcea140 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb3ec20 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fb3ed38 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55dd3fb3edc8 <col:16, col:22> col:16 public
|-EnumDecl 0x55dd3fb3edf0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55dd3fb3eef0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dd3fb3f140 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb3eed0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fb3eeb0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55dd3fb3ef80 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dd3fb3f158 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb3ef60 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55dd3fb3ef40 <col:24> 'int' 22
| |-EnumConstantDecl 0x55dd3fb3f010 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dd3fb3f170 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb3eff0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55dd3fb3efd0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55dd3fb3f0a0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dd3fb3f188 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb3f080 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55dd3fb3f060 <col:25> 'int' 95
| `-EnumConstantDecl 0x55dd3fb3f0f0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55dd3fb40b00 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3fb40f38 <col:7>
|-CXXConstructorDecl 0x55dd3fb40c08 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55dd3fb40c08
| `-ParmVarDecl 0x55dd3fb40d18 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55dd3fb40db8 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55dd3fb40db8
| `-ParmVarDecl 0x55dd3fb40ec8 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55dd3fb43028 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb3f1b8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55dd3fb3f318 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55dd3fb3f3a8 <col:32, col:38> col:32 public
|-TypedefDecl 0x55dd3fb3f3e0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55dd3f6df3d0 'uint32_t' sugar
|   |-Typedef 0x55dd3f5ef4c8 'uint32_t'
|   `-TypedefType 0x55dd3f5c85a0 '__uint32_t' sugar
|     |-Typedef 0x55dd3f5c8198 '__uint32_t'
|     `-BuiltinType 0x55dd3f586620 'unsigned int'
|-CXXConstructorDecl 0x55dd3fb3f528 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55dd3fb3f450 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55dd3fb40a08 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55dd3fb40f48 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55dd3fb402c0 'base' 'int'
| | `-ImplicitCastExpr 0x55dd3fb40aa8 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3fb40a68 <col:16> 'int' lvalue ParmVar 0x55dd3fb3f450 'b' 'int'
| `-CompoundStmt 0x55dd3fb40fb8 <col:19, line:1046:5>
|-CXXMethodDecl 0x55dd3fb3fa20 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55dd3fb3f5f0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55dd3fb3f670 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55dd3fb3f6e8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55dd3fb3f768 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55dd3fb3f828 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55dd3fb3f8a8 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55dd3fb3fe78 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55dd3fb3faf0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x55dd3fb3fdd8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x55dd3fb3fb98 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x55dd3fb3fc38 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x55dd3fb3fcb0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x55dd3fb40a28 <col:82> 'const ArgContext' lvalue Var 0x55dd3fb36568 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x55dd3fb41ed8 <col:94, line:1067:5>
|     |-DeclStmt 0x55dd3fb41148 <line:1054:9, col:64>
|     | `-VarDecl 0x55dd3fb40fd8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x55dd3fb41100 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x55dd3fb41368 <line:1055:9, col:91>
|     | `-VarDecl 0x55dd3fb41178 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55dd3fb41340 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x55dd3fb41320 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x55dd3fb412d0 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x55dd3fb412b0 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x55dd3fb41258 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x55dd3fb41208 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x55dd3fb41238 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x55dd3fb41298 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x55dd3fb41278 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x55dd3fb41300 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55dd3fb414c8 <line:1056:9, col:27>
|     | `-VarDecl 0x55dd3fb41460 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x55dd3fb41900 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x55dd3fb41830 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55dd3fb417c0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55dd3f926710 0x55dd3f8e4d00 0x55dd3f8e49b0 0x55dd3f8e42a0 0x55dd3f8b5520 0x55dd3f871820
|     | | |-CallExpr 0x55dd3fb41700 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x55dd3fb414f0 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x55dd3fb415a0 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55dd3fb41570 <col:19, col:23> '<bound member function type>' .begin 0x55dd3f8d26b8
|     | | | |   `-DeclRefExpr 0x55dd3fb41550 <col:19> 'const String' lvalue ParmVar 0x55dd3fb3fb98 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55dd3fb41610 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55dd3fb415e0 <col:32, col:36> '<bound member function type>' .end 0x55dd3f8d28d0
|     | | | |   `-DeclRefExpr 0x55dd3fb415c0 <col:32> 'const String' lvalue ParmVar 0x55dd3fb3fb98 'str' 'const String &'
|     | | | |-DeclRefExpr 0x55dd3fb41630 <col:43> 'const bool' lvalue Var 0x55dd3fb40fd8 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x55dd3fb41698 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x55dd3fb41678 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x55dd3fb416c0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55dd3fb41460 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x55dd3fb416e0 <col:73> 'const int' lvalue Var 0x55dd3fb41178 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x55dd3fb417a0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55dd3fb41770 <col:16, col:20> '<bound member function type>' .end 0x55dd3f8d28d0
|     | |     `-DeclRefExpr 0x55dd3fb41750 <col:16> 'const String' lvalue ParmVar 0x55dd3fb3fb98 'str' 'const String &'
|     | `-BinaryOperator 0x55dd3fb418e0 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55dd3fb41878 <col:13> 'int' lvalue ->status 0x55dd3fb40328
|     |   | `-CXXThisExpr 0x55dd3fb41868 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55dd3fb418c8 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55dd3fb418a8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dd3fb3ef80 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55dd3fb41b50 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55dd3fb41a38 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55dd3fb41a20 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55dd3fb41a08 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55dd3fb41928 <col:13> 'int' lvalue ->status 0x55dd3fb40328
|     | | |     `-CXXThisExpr 0x55dd3fb41918 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55dd3fb419e8 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55dd3fb419b8 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55dd3fb41968 <col:23> 'int' lvalue ->status 0x55dd3fb40328
|     | |   |   `-CXXThisExpr 0x55dd3fb41958 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55dd3fb419d0 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55dd3fb41998 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dd3fb3f010 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55dd3fb41b30 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55dd3fb41ad0 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55dd3fb41a78 <col:13, col:18> '<bound member function type>' .error 0x55dd3faf2fe0
|     |   | | `-DeclRefExpr 0x55dd3fb41a58 <col:13> 'const ArgContext' lvalue ParmVar 0x55dd3fb3fcb0 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55dd3fb41af8 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55dd3fb41aa8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55dd3fb41b20 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55dd3fb41b10 <col:20> 'bool' false
|     |-DeclStmt 0x55dd3fb41d28 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55dd3fb41cd0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x55dd3fb41c60 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x55dd3fb41e88 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55dd3fb41d40 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55dd3f7c7d58
|     | |-DeclRefExpr 0x55dd3fb41d88 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55dd3fb41460 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x55dd3fb41e58 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x55dd3fb41dd0 <col:64> 'V' lvalue ParmVar 0x55dd3fb3fc38 'result' 'V &'
|     `-ReturnStmt 0x55dd3fb41ec8 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55dd3fb41eb8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55dd3fb40238 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55dd3fb3fee8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55dd3fb40198 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55dd3fb3ff98 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55dd3fb40038 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55dd3fb400b0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55dd3fb40a48 <col:71> 'const ArgContext' lvalue Var 0x55dd3fb36568 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55dd3fb42648 <col:83, line:1083:5>
| |   |-DeclStmt 0x55dd3fb41fa0 <line:1071:9, col:12>
| |   | `-VarDecl 0x55dd3fb41f38 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55dd3fb42620 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55dd3fb42230 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55dd3fb420b8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55dd3fb42080 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55dd3fb41fc8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55dd3fb42020 <col:31> 'const String' lvalue ParmVar 0x55dd3fb3ff98 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55dd3fb42040 <col:36> 'V' lvalue Var 0x55dd3fb41f38 'x' 'V'
| |     | |   `-DeclRefExpr 0x55dd3fb42060 <col:39> 'const ArgContext' lvalue ParmVar 0x55dd3fb400b0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55dd3fb42210 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55dd3fb421f0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55dd3fb421d8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55dd3fb421c0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55dd3fb420e0 <col:17> 'int' lvalue ->status 0x55dd3fb40328
| |     |     |     `-CXXThisExpr 0x55dd3fb420d0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55dd3fb421a0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55dd3fb42170 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55dd3fb42120 <col:27> 'int' lvalue ->status 0x55dd3fb40328
| |     |       |   `-CXXThisExpr 0x55dd3fb42110 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55dd3fb42188 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55dd3fb42150 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dd3fb3f010 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55dd3fb42260 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55dd3fb42250 <col:20> 'bool' false
| |     `-IfStmt 0x55dd3fb425f8 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55dd3fb42300 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55dd3fb422d0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55dd3fb42280 <col:18> 'int' lvalue ->status 0x55dd3fb40328
| |       | |   `-CXXThisExpr 0x55dd3fb42270 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55dd3fb422e8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55dd3fb422b0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dd3fb3f010 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55dd3fb42538 <col:42, line:1079:9>
| |       | |-CallExpr 0x55dd3fb424e0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55dd3fb42330 <line:1076:13> '<bound member function type>' ->range_error 0x55dd3fb40938
| |       | | | `-CXXThisExpr 0x55dd3fb42320 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55dd3fb42360 <col:25> 'const ArgContext' lvalue ParmVar 0x55dd3fb400b0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55dd3fb42440 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55dd3fb424b8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55dd3fb42498 <col:43> 'V' lvalue Var 0x55dd3fb41f38 'x' 'V'
| |       | `-ReturnStmt 0x55dd3fb42528 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55dd3fb42518 <col:20> 'bool' false
| |       `-CompoundStmt 0x55dd3fb425d8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55dd3fb42598 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55dd3fb42558 <col:13> 'V' lvalue ParmVar 0x55dd3fb40038 'result' 'V &'
| |         | `-DeclRefExpr 0x55dd3fb42578 <col:22> 'V' lvalue Var 0x55dd3fb41f38 'x' 'V'
| |         `-ReturnStmt 0x55dd3fb425c8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55dd3fb425b8 <col:20> 'bool' true
| `-CXXMethodDecl 0x55dd3fceaa78 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55dd3fcea858 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x55dd3fcea928 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x55dd3fcea990 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x55dd3fb40a48 <col:71> 'const ArgContext' lvalue Var 0x55dd3fb36568 'blank_args' 'const ArgContext'
|-FieldDecl 0x55dd3fb402c0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x55dd3fb40328 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55dd3fb40378 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55dd3fb40630 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55dd3fb403b8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55dd3fb40438 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55dd3fb404b0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55dd3fb40530 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55dd3fb40938 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55dd3fb40700 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55dd3fb40778 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55dd3fb40810 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55dd3fb42ea8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55dd3fb42ea8
| `-ParmVarDecl 0x55dd3fb42fb8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55dd3fb43138 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x55dd3fb43138
| `-ParmVarDecl 0x55dd3fb43248 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x55dd3fcea470 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3faf26a0 prev 0x55dd3faf1208 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dd3faf2798 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55dd3faf2828 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55dd3faf2968 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55dd3faf2860 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55dd3faf3db0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3faf3d90 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faf3930 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55dd3faf3e40 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3faf3e00 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55dd3faf2860 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55dd3faf3998 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55dd3faf3ec0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3faf3e80 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faf39f8 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55dd3faf3f00 <col:54> 'bool' false
| `-CompoundStmt 0x55dd3faf4008 <col:61, line:38:5>
|   `-BinaryOperator 0x55dd3faf3fe8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55dd3faf3f80 <col:9> 'const Element *' lvalue ->_context 0x55dd3faf38d0
|     | `-CXXThisExpr 0x55dd3faf3f70 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55dd3faf3fd0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55dd3faf3fb0 <col:20> 'int' 0
|-CXXConstructorDecl 0x55dd3faf2b78 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55dd3faf2a28 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55dd3faf2aa0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55dd3faf3de8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3faf3dc8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faf38d0 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55dd3faf4060 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3faf4020 <col:20> 'const Element *' lvalue ParmVar 0x55dd3faf2a28 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55dd3faf3930 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55dd3faf40e0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dd3faf40a0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55dd3faf2aa0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55dd3faf3998 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55dd3faf4160 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55dd3faf4120 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55dd3faf39f8 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55dd3faf41a0 <col:73> 'bool' false
| `-CompoundStmt 0x55dd3faf4218 <col:80, line:46:5>
|-CXXMethodDecl 0x55dd3faf2ca8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55dd3faf4290 <col:36, line:51:5>
|   `-ReturnStmt 0x55dd3faf4280 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55dd3faf4268 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55dd3faf4238 <col:16> 'const Element *const' lvalue ->_context 0x55dd3faf38d0
|         `-CXXThisExpr 0x55dd3faf4228 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55dd3faf2d98 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55dd3faf4310 <col:32, line:57:5>
|   `-ReturnStmt 0x55dd3faf4300 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55dd3faf42e8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55dd3faf42b8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55dd3faf3930
|         `-CXXThisExpr 0x55dd3faf42a8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55dd3faf2e58 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55dd3faf2fe0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55dd3faf2f10 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55dd3faf3130 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55dd3faf30a0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55dd3faf3280 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55dd3faf31f0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55dd3faf3488 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55dd3faf3338 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55dd3faf33b0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55dd3faf37e0 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55dd3faf3548 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55dd3faf35c8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55dd3faf3690 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55dd3faf3898 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55dd3faf38d0 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55dd3faf3930 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55dd3faf3998 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55dd3faf39f8 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55dd3faf3a48 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55dd3faf3a48
| `-ParmVarDecl 0x55dd3faf3b58 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x55dd3faf3bf8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55dd3faf3bf8
  `-ParmVarDecl 0x55dd3faf3d08 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class chash_t<int>
         0 |   size_t num_servers
         8 |   size_t num_nodes
        16 |   jvtree_t<chash_node_t<int>, int, &chash_node_t<int>::key> * tree
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fce7f98 <../elements/ip/siphmapper.hh:125:1, line:182:1> line:126:7 class chash_t definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55dd3fceea00 prev 0x55dd3fce7f98 <col:1, col:7> col:7 implicit class chash_t
|-AccessSpecDecl 0x55dd3fceea90 <line:127:1, col:7> col:1 public
|-CXXConstructorDecl 0x55dd3fceecd0 <line:128:3, line:169:3> line:128:3 chash_t 'void (size_t, unsigned short *, size_t, int)'
| |-ParmVarDecl 0x55dd3fceeab8 <col:12, col:19> col:19 ns 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dd3fceeb20 <col:23, col:39> col:39 ids 'unsigned short *'
| |-ParmVarDecl 0x55dd3fceeb88 <col:44, col:51> col:51 nn 'size_t':'unsigned long'
| `-ParmVarDecl 0x55dd3fceebf0 <col:55, col:66> col:59 seed 'int'
|-CXXMethodDecl 0x55dd3fceeeb0 <line:171:3, col:67> col:18 hash 'unsigned short (int) const'
| `-ParmVarDecl 0x55dd3fceede8 <col:24, col:26> col:26 k 'int':'int'
|-CXXMethodDecl 0x55dd3fcef010 <line:172:3, col:73> col:18 hash2ind 'unsigned short (int) const'
| `-ParmVarDecl 0x55dd3fceef78 <col:28, col:30> col:30 k 'int':'int'
|-CXXDestructorDecl 0x55dd3fcef0f0 <line:174:3, line:177:3> line:174:3 ~chash_t 'void ()' noexcept-unevaluated 0x55dd3fcef0f0
|-AccessSpecDecl 0x55dd3fcef1e0 <line:179:1, col:8> col:1 private
|-FieldDecl 0x55dd3fcef208 <line:180:3, col:10> col:10 num_servers 'size_t':'unsigned long'
|-FieldDecl 0x55dd3fcef258 <col:3, col:23> col:23 num_nodes 'size_t':'unsigned long'
`-FieldDecl 0x55dd3fcefed0 <line:181:3, col:56> col:56 tree 'jvtree_t<chash_node_t<int>, int, &chash_node_t<int>::key> *'

Layout: <CGRecordLayout
  LLVMType:%class.chash_t = type { i64, i64, %class.jvtree_t* }
  NonVirtualBaseLLVMType:%class.chash_t = type { i64, i64, %class.jvtree_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f8aab00 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3f8aac18 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55dd3f8aaca8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55dd3f8aad78 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55dd3f8aae60 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3f8ab078 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55dd3f8aaf20 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8ab228 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55dd3f8ab130 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55dd3f8ab370 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55dd3f8ab2e0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55dd3f8ab4b8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55dd3f8ab428 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8ab600 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55dd3f8ab570 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8ab6c8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55dd3f8ab810 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55dd3f8ab780 <col:28> col:31 'int'
|-CXXMethodDecl 0x55dd3f8ab8d8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55dd3f8aba20 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55dd3f8ab990 <col:28> col:31 'int'
|-CXXMethodDecl 0x55dd3f8abb98 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55dd3f8abad8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8abce0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55dd3f8abc50 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8abda8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55dd3f8abf68 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55dd3f8abe58 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd3f8abed0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8ac1b8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55dd3f8ac028 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3f8ac0a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3f8ac268 <col:86> "" ""
|-CXXMethodDecl 0x55dd3f8ac4d8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3f8ac348 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55dd3f8ac3c0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8ac688 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55dd3f8ac598 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55dd3f8ac838 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55dd3f8ac740 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55dd3f8acb08 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3f8ac8f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55dd3f8ac968 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd3f8ac9e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8acde8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3f8acbd0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55dd3f8acc48 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3f8accc0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3f8acea0 <col:115> "" ""
|-AccessSpecDecl 0x55dd3f8acf10 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55dd3f8acf48 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3f8ad3f8 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55dd3f8ad3f8
| `-ParmVarDecl 0x55dd3f8ad508 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55dd3f8ad5a8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55dd3f8ad5a8
| `-ParmVarDecl 0x55dd3f8ad6b8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55dd3f8e43a8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3fba3780 <col:7>
|-CXXConstructorDecl 0x55dd3f8e4480 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55dd3f8e4480
| `-ParmVarDecl 0x55dd3f8e4598 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55dd3f8e4608 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55dd3f8e4608
| `-ParmVarDecl 0x55dd3f8e4718 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55dd3fba6190 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb88b68 prev 0x55dd3fb7ea80 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fb88c60 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55dd3fb88d50 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55dd3fb88e00 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55dd3fb88f88 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55dd3fb89108 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55dd3fb89288 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55dd3fba3988 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3fba41f8 <col:11>
|-CXXDestructorDecl 0x55dd3fba3a60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55dd3fba3b98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55dd3fba3b98
| `-ParmVarDecl 0x55dd3fba3ca8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55dd3fba3d48 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd3fba3d48
| `-ParmVarDecl 0x55dd3fba3e58 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55dd3fba6b88 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fba6c98 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55dd3fba6f18 <col:11>
|   `-ReturnStmt 0x55dd3fba6f08 <col:11>
|     `-UnaryOperator 0x55dd3fba6ef0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dd3fba6ee0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55dd3fba6d08 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd3fba6d08
  `-ParmVarDecl 0x55dd3fba6e18 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb892f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3fb89408 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55dd3fb894a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55dd3fb89510 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55dd3fb89578 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55dd3fb895e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55dd3fb89640 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55dd3fb89700 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55dd3fb89760 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55dd3fb897c0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55dd3fba3890 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55dd3fb894a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55dd3fba4208 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55dd3fba4260 <col:12>
|-CXXConstructorDecl 0x55dd3fba3ec8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55dd3fba3ec8
| `-ParmVarDecl 0x55dd3fba3fd8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55dd3fba4078 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55dd3fba4078
| `-ParmVarDecl 0x55dd3fba4188 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55dd3fba6270 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3fb78190 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dd3fb782a8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55dd3fb78338 <col:16, col:22> col:16 public
|-EnumDecl 0x55dd3fb78360 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55dd3fb784a0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55dd3fb78580 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb78440 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55dd3fb78420 <col:21> 'int' 28
| `-EnumConstantDecl 0x55dd3fb78530 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55dd3fb78598 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fb78510 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55dd3fb784f0 <col:22> 'int' 64
|-CXXMethodDecl 0x55dd3fb788d8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55dd3fb785c0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3fb78640 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55dd3fb786b8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3fb78730 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd3fb78998 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb78b98 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55dd3fb78a10 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55dd3fb78a88 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd3fb78c48 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb78da8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55dd3fb78cb8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd3fb78e50 <col:72> warn_unused_result ""
|-TypedefDecl 0x55dd3fb79180 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55dd3fb79110 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55dd3fb790b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55dd3fb79070 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55dd3f5864e0 'void'
|       |-PointerType 0x55dd3f85ecc0 'unsigned char *'
|       | `-BuiltinType 0x55dd3f5865e0 'unsigned char'
|       |-TypedefType 0x55dd3f62f120 'size_t' sugar
|       | |-Typedef 0x55dd3f5f6be0 'size_t'
|       | `-BuiltinType 0x55dd3f586640 'unsigned long'
|       `-PointerType 0x55dd3f586ce0 'void *'
|         `-BuiltinType 0x55dd3f5864e0 'void'
|-CXXMethodDecl 0x55dd3fb795f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55dd3fb791f0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55dd3fb79268 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3fb79300 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55dd3fb79380 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55dd3fb9c810 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55dd3fb9c7f8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55dd3fb9c7c0 <col:58> 'int' 0
| |-ParmVarDecl 0x55dd3fb79400 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55dd3fb9c838 <col:76> 'int' 0
| |-ParmVarDecl 0x55dd3fb79480 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55dd3fb9c858 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55dd3fb796c8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb79748 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55dd3fb79808 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55dd3fb798a8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb79900 <col:30>
|-CXXMethodDecl 0x55dd3fb79978 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55dd3fb79a18 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb79a70 <col:30>
|-CXXMethodDecl 0x55dd3fb79ae8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55dd3fb79b88 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb79c38 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55dd3fb79cd8 <col:20>
| |-OptimizeNoneAttr 0x55dd3fb79d30 <col:30>
| `-WarnUnusedResultAttr 0x55dd3fb79d58 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb79db0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd3fb79e50 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb79ea8 <col:30>
|-CXXMethodDecl 0x55dd3fb79ef8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd3fb79f98 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb79ff0 <col:30>
|-CXXMethodDecl 0x55dd3fb7a038 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55dd3fb7a0d8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7a130 <col:30>
|-CXXMethodDecl 0x55dd3fb7a178 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb7a238 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb7a300 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd3fb7a3c8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd3fb7a488 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb7a5a8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55dd3fb9c920 <col:54, line:99:5>
|   `-ReturnStmt 0x55dd3fb9c910 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55dd3fb9c8f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55dd3fb9c8c8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55dd3fb89af8
|         `-CXXThisExpr 0x55dd3fb9c8b8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55dd3fb7a748 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55dd3fb7a658 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55dd3fb9c9d0 <col:67, line:103:5>
|   `-BinaryOperator 0x55dd3fb9c9b0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55dd3fb9c948 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55dd3fb89af8
|     | `-CXXThisExpr 0x55dd3fb9c938 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55dd3fb9c998 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fb9c978 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55dd3fb7a658 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55dd3fb7a840 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55dd3fb9ca50 <col:33, line:107:5>
|   `-ReturnStmt 0x55dd3fb9ca40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55dd3fb9ca28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55dd3fb9c9f8 <col:16> 'void *' lvalue ->_destructor_argument 0x55dd3fb89b60
|         `-CXXThisExpr 0x55dd3fb9c9e8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55dd3fb7a900 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55dd3fb9d080 <col:25, line:113:5>
|   |-ParenExpr 0x55dd3fb9cdc8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55dd3fb9cd98 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9cb08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55dd3fb9cae0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55dd3fb9caa8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55dd3fb9ca78 <col:24> '<bound member function type>' ->shared 0x55dd3fb79978
|   |   |       `-ImplicitCastExpr 0x55dd3fb9cac8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55dd3fb9ca68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9cb68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9cb48 <col:42> 'int' 0
|   |   `-CallExpr 0x55dd3fb9ccf8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fb9cce0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fb9ccc0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fb9cd38 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9cbd8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55dd3fb9cd50 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9cc00 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fb9cd68 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9cc38 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55dd3fb9cd80 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fb9cca8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fb9cc90 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9cc58 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55dd3fb9cfc8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55dd3fb9cdf8 <col:2> 'unsigned char *' lvalue ->_head 0x55dd3fb89900
|   | | `-CXXThisExpr 0x55dd3fb9cde8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55dd3fb9cfb0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55dd3fb9cf90 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55dd3fb9ce38 <col:10> 'unsigned char *' lvalue ->_data 0x55dd3fb89968
|   |     | `-CXXThisExpr 0x55dd3fb9ce28 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55dd3fb9cf78 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55dd3fb9cf58 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55dd3fb9ce78 <col:18> 'unsigned char *' lvalue ->_tail 0x55dd3fb899d0
|   |         | `-CXXThisExpr 0x55dd3fb9ce68 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55dd3fb9cf40 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55dd3fb9cf20 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55dd3fb9ceb8 <col:26> 'unsigned char *' lvalue ->_end 0x55dd3fb89a38
|   |             | `-CXXThisExpr 0x55dd3fb9cea8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55dd3fb9cf08 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55dd3fb9cee8 <col:33> 'int' 0
|   `-BinaryOperator 0x55dd3fb9d060 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55dd3fb9cff8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55dd3fb89af8
|     | `-CXXThisExpr 0x55dd3fb9cfe8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55dd3fb9d048 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55dd3fb9d028 <col:16> 'int' 0
|-CXXMethodDecl 0x55dd3fb7aa40 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55dd3fb7a9b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb7aae8 <col:20>
| |-OptimizeNoneAttr 0x55dd3fb7ab40 <col:30>
| `-WarnUnusedResultAttr 0x55dd3fb7ab68 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb7ac38 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55dd3fb7aba8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb7ace0 <col:20>
| |-OptimizeNoneAttr 0x55dd3fb7ad38 <col:30>
| `-WarnUnusedResultAttr 0x55dd3fb7ad60 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb7ae98 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55dd3fb7ada0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd3fb7af40 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb7b040 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55dd3fb7afb0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb7b0e8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7b140 <col:30>
|-CXXMethodDecl 0x55dd3fb7b208 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55dd3fb7b178 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd3fb7b2b0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb7b3b0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55dd3fb7b320 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55dd3fb7b458 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb7b558 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55dd3fb7b4c8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb7b600 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7b658 <col:30>
|-CXXMethodDecl 0x55dd3fb7b7e8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55dd3fb7b698 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55dd3fb7b710 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55dd3fb9c878 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55dd3fb7b898 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55dd3fb7ba98 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fb7b910 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55dd3fb7b988 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb7bca8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fb7bb58 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd3fb7bbd0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb7beb8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55dd3fb7bd68 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55dd3fb7bde8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55dd3fb9c888 <col:39> 'int' 0
|-CXXMethodDecl 0x55dd3fb7bf88 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55dd3fb7c050 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55dd3fb7c118 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd3fb7c1d8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb7c2a0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55dd3fb7c3e8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55dd3fb7c358 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55dd3fb7c5b8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fb7c4a8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55dd3fb7c520 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb7c688 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55dd3fb7c748 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55dd3fb7c7e8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7c840 <col:30>
|-CXXMethodDecl 0x55dd3fb7c890 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd3fb7c930 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7c988 <col:30>
|-CXXMethodDecl 0x55dd3fb7c9d8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd3fb7ca98 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb7cb60 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55dd3fb7cc00 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7cc58 <col:30>
|-CXXMethodDecl 0x55dd3fb7cda8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fb7cc98 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55dd3fb7cd10 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb7cef8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55dd3fb7ce68 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb7cfc0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55dd3fb7d080 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55dd3fb7d120 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7d178 <col:30>
|-CXXMethodDecl 0x55dd3fb7d1c8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55dd3fb7d268 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7d2c0 <col:30>
|-CXXMethodDecl 0x55dd3fb7d310 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd3fb7d3d8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55dd3fb7d478 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7d4d0 <col:30>
|-CXXMethodDecl 0x55dd3fb7d518 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55dd3fb7d638 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55dd3fb7d7a8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55dd3fb7d6e8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55dd3fb7d898 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55dd3fb7d938 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7d990 <col:30>
|-CXXMethodDecl 0x55dd3fb7d9e0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55dd3fb7daa0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55dd3fb7dcd8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55dd3fb7db50 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55dd3fb7dbc8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb7dd88 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7dde0 <col:30>
|-CXXMethodDecl 0x55dd3fb7de88 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55dd3fb7df28 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7df80 <col:30>
|-CXXMethodDecl 0x55dd3fb7dfd0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55dd3fb7e070 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7e0c8 <col:30>
|-CXXMethodDecl 0x55dd3fb7e110 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55dd3fb7e1b0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7e208 <col:30>
|-CXXMethodDecl 0x55dd3fb7e308 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55dd3fb7e240 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55dd3fb7e3b0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7e408 <col:30>
|-CXXMethodDecl 0x55dd3fb7e5c8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55dd3fb7e440 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55dd3fb7e4b8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb7e678 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7e6d0 <col:30>
|-CXXMethodDecl 0x55dd3fb7e778 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55dd3fb7e898 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55dd3fb7e9b8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55dd3fb7ea58 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd3fb7ea80 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55dd3fb7eba8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55dd3fb7ec48 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7eca0 <col:30>
|-CXXMethodDecl 0x55dd3fb7ed48 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55dd3fb7ede8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7ee40 <col:30>
|-AccessSpecDecl 0x55dd3fb7ee68 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55dd3fb7ee90 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55dd3fb7ef90 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55dd3fb7efe0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fb7ef70 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55dd3fb7ef50 <col:14> 'int' 48
|-CXXMethodDecl 0x55dd3fb7f048 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55dd3fb7f0e8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7f140 <col:30>
|-CXXMethodDecl 0x55dd3fb7f1b8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55dd3fb7f258 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7f2b0 <col:30>
|-CXXMethodDecl 0x55dd3fb7f378 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55dd3fb7f2e8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55dd3fb7f518 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55dd3fb7f6b8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55dd3fb7f5c8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55dd3fb7f760 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55dd3fb7f860 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd3fb7fc10 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb7f840 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fb7f820 <col:9> 'int' 0
| |-EnumConstantDecl 0x55dd3fb7f8f0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd3fb7fc28 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb7f8d0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55dd3fb7f8b0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55dd3fb7f980 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd3fb7fc40 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb7f960 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55dd3fb7f940 <col:14> 'int' 2
| |-EnumConstantDecl 0x55dd3fb7fa10 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd3fb7fc58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb7f9f0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55dd3fb7f9d0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55dd3fb7faa0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd3fb7fc70 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb7fa80 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd3fb7fa60 <col:13> 'int' 4
| |-EnumConstantDecl 0x55dd3fb7fb30 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55dd3fb7fc88 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb7fb10 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55dd3fb7faf0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55dd3fb7fbc0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55dd3fb7fca0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fb7fba0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55dd3fb7fb80 <col:14> 'int' 6
|-CXXMethodDecl 0x55dd3fb7fd08 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55dd3fb7fda8 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7fe00 <col:30>
|-CXXMethodDecl 0x55dd3fb7fef8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55dd3fb7fe38 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55dd3fb7ffa0 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb7fff8 <col:30>
|-CXXMethodDecl 0x55dd3fb80068 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55dd3fb80190 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55dd3fb80308 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55dd3fb80240 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55dd3fb803d0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55dd3fb81cd0 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55dd3fb81e10 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55dd3fb81d80 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55dd3fb81eb8 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55dd3fb81fc0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55dd3fb821c0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb81fa0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fb81f80 <col:23> 'int' 0
| |-EnumConstantDecl 0x55dd3fb82050 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55dd3fb821d8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb82030 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55dd3fb82010 <col:45> 'int' 4
| |-EnumConstantDecl 0x55dd3fb820e0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55dd3fb821f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb820c0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fb820a0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55dd3fb82170 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55dd3fb82208 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fb82150 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55dd3fb82130 <col:47> 'int' 16
|-CXXMethodDecl 0x55dd3fb82268 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55dd3fb823d8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55dd3fb82318 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55dd3fb82480 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb824d8 <col:30>
|-CXXMethodDecl 0x55dd3fb82528 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55dd3fb9d1a0 <col:18, col:36>
|   `-ReturnStmt 0x55dd3fb9d190 <col:20, col:33>
|     `-ImplicitCastExpr 0x55dd3fb9d178 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55dd3fb9d158 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55dd3fb9d128 <col:27> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|           `-CXXThisExpr 0x55dd3fb9d118 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55dd3fb82620 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55dd3fb9d2b0 <col:30, col:48>
|   `-ReturnStmt 0x55dd3fb9d2a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55dd3fb9d288 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55dd3fb9d268 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55dd3fb9d238 <col:39> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|           `-CXXThisExpr 0x55dd3fb9d228 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55dd3fb82708 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55dd3fb9d448 <col:24, col:50>
|   `-ReturnStmt 0x55dd3fb9d438 <col:26, col:47>
|     `-UnaryOperator 0x55dd3fb9d420 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd3fb9d400 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55dd3fb9d3e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd3fb9d398 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55dd3fb88e00
|         |   `-CXXMemberCallExpr 0x55dd3fb9d378 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55dd3fb9d348 <col:34> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|         |       `-CXXThisExpr 0x55dd3fb9d338 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55dd3fb9d3c8 <col:46> 'int' 0
|-CXXMethodDecl 0x55dd3fb827f8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55dd3fb9d5e0 <col:36, col:62>
|   `-ReturnStmt 0x55dd3fb9d5d0 <col:38, col:59>
|     `-UnaryOperator 0x55dd3fb9d5b8 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd3fb9d598 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55dd3fb9d580 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd3fb9d530 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55dd3fb88e00
|         |   `-CXXMemberCallExpr 0x55dd3fb9d510 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55dd3fb9d4e0 <col:46> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|         |       `-CXXThisExpr 0x55dd3fb9d4d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55dd3fb9d560 <col:58> 'int' 0
|-CXXMethodDecl 0x55dd3fb82918 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55dd3fb9d778 <col:26, col:53>
|   `-ReturnStmt 0x55dd3fb9d768 <col:28, col:50>
|     `-UnaryOperator 0x55dd3fb9d750 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd3fb9d730 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55dd3fb9d718 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd3fb9d6c8 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55dd3fb89108
|         |   `-CXXMemberCallExpr 0x55dd3fb9d6a8 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55dd3fb9d678 <col:36> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|         |       `-CXXThisExpr 0x55dd3fb9d668 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55dd3fb9d6f8 <col:49> 'int' 0
|-CXXMethodDecl 0x55dd3fb82a38 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55dd3fb9d948 <col:38, col:65>
|   `-ReturnStmt 0x55dd3fb9d938 <col:40, col:62>
|     `-UnaryOperator 0x55dd3fb9d920 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55dd3fb9d900 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55dd3fb9d8e8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd3fb9d860 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55dd3fb89108
|         |   `-CXXMemberCallExpr 0x55dd3fb9d840 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55dd3fb9d810 <col:48> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|         |       `-CXXThisExpr 0x55dd3fb9d800 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55dd3fb9d890 <col:61> 'int' 0
|-CXXMethodDecl 0x55dd3fb82be8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55dd3fb82af0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55dd3fb9e018 <col:34, line:463:5>
|   |-ParenExpr 0x55dd3fb9de60 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55dd3fb9de30 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9da98 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fb9da68 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fb9d9b8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fb9d9a0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fb9d960 <col:23> 'int' lvalue ParmVar 0x55dd3fb82af0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fb9d980 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fb9da48 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fb9da18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fb9d9d8 <col:33> 'int' lvalue ParmVar 0x55dd3fb82af0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55dd3fb9da30 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55dd3fb9d9f8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9daf8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9dad8 <col:56> 'int' 0
|   |   `-CallExpr 0x55dd3fb9dd90 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fb9dd78 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fb9dd58 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fb9ddd0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9dbe8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55dd3fb9dde8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9dc18 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fb9de00 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9dc50 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55dd3fb9de18 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fb9dd40 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fb9dd28 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9dce8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55dd3fb9e008 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55dd3fb9dff0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55dd3fb9dfd0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55dd3fb9dfa0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55dd3fb9df50 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55dd3fb88e00
|         |   `-CXXMemberCallExpr 0x55dd3fb9df30 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55dd3fb9df00 <col:9> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|         |       `-CXXThisExpr 0x55dd3fb9def0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55dd3fb9dfb8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55dd3fb9df80 <col:21> 'int' lvalue ParmVar 0x55dd3fb82af0 'i' 'int'
|-CXXMethodDecl 0x55dd3fb82e38 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55dd3fb82ca8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55dd3fb82d20 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55dd3fb9e6a8 <col:40, line:472:5>
|   |-ParenExpr 0x55dd3fb9e4c0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55dd3fb9e490 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9e170 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fb9e140 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fb9e090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fb9e078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fb9e038 <col:23> 'int' lvalue ParmVar 0x55dd3fb82ca8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fb9e058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fb9e120 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fb9e0f0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fb9e0b0 <col:33> 'int' lvalue ParmVar 0x55dd3fb82ca8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55dd3fb9e108 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55dd3fb9e0d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9e1d0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9e1b0 <col:56> 'int' 0
|   |   `-CallExpr 0x55dd3fb9e3f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fb9e3d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fb9e3b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fb9e430 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9e240 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55dd3fb9e448 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9e270 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fb9e460 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9e2a8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55dd3fb9e478 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fb9e3a0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fb9e388 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9e348 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55dd3fb9e688 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55dd3fb9e630 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55dd3fb9e600 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55dd3fb9e5b0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55dd3fb88e00
|     | |   `-CXXMemberCallExpr 0x55dd3fb9e590 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55dd3fb9e560 <col:2> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|     | |       `-CXXThisExpr 0x55dd3fb9e550 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55dd3fb9e618 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55dd3fb9e5e0 <col:14> 'int' lvalue ParmVar 0x55dd3fb82ca8 'i' 'int'
|     `-ImplicitCastExpr 0x55dd3fb9e670 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fb9e650 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55dd3fb82d20 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55dd3fb82ff8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55dd3fb82f00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55dd3fb9ee28 <col:36, line:485:5>
|   |-ParenExpr 0x55dd3fb9eb90 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fb9eb60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9e840 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fb9e810 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fb9e720 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fb9e708 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fb9e6c8 <col:23> 'int' lvalue ParmVar 0x55dd3fb82f00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fb9e6e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fb9e7f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fb9e7d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fb9e740 <col:33> 'int' lvalue ParmVar 0x55dd3fb82f00 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fb9e7b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fb9e7a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fb9e760 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fb9e780 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9e8a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9e880 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fb9eac0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fb9eaa8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fb9ea88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fb9eb00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9e910 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd3fb9eb18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9e948 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fb9eb30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9e980 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55dd3fb9eb48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fb9ea70 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fb9ea58 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9ea18 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55dd3fb9ee18 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55dd3fb9ee00 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fb9ede8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd3fb9edb8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55dd3fb9ed58 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd3fb9ed28 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fb9eca0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55dd3fb88d50
|             |   `-CXXMemberCallExpr 0x55dd3fb9ec80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd3fb9ec50 <col:61> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|             |       `-CXXThisExpr 0x55dd3fb9ec40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd3fb9ed40 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd3fb9ecd0 <col:74> 'int' lvalue ParmVar 0x55dd3fb82f00 'i' 'int'
|-CXXMethodDecl 0x55dd3fb83248 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55dd3fb830b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd3fb83130 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55dd3fb9f578 <col:42, line:500:5>
|   |-ParenExpr 0x55dd3fb9f310 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fb9f2e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9efc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fb9ef90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fb9eea0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fb9ee88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fb9ee48 <col:23> 'int' lvalue ParmVar 0x55dd3fb830b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fb9ee68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fb9ef70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fb9ef58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fb9eec0 <col:33> 'int' lvalue ParmVar 0x55dd3fb830b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fb9ef38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fb9ef20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fb9eee0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fb9ef00 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9f020 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9f000 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fb9f240 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fb9f228 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fb9f208 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fb9f280 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9f090 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd3fb9f298 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9f0c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fb9f2b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9f100 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55dd3fb9f2c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fb9f1f0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fb9f1d8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9f198 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55dd3fb9f558 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55dd3fb9f508 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd3fb9f4d8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd3fb9f480 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd3fb9f450 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd3fb9f400 <col:48, col:57> 'char [48]' lvalue ->c 0x55dd3fb88d50
|     |     |   `-CXXMemberCallExpr 0x55dd3fb9f3e0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd3fb9f3b0 <col:48> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|     |     |       `-CXXThisExpr 0x55dd3fb9f3a0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd3fb9f468 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd3fb9f430 <col:61> 'int' lvalue ParmVar 0x55dd3fb830b8 'i' 'int'
|     `-ImplicitCastExpr 0x55dd3fb9f540 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fb9f520 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55dd3fb83130 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55dd3fb83408 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55dd3fb83310 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55dd3fb9fcd8 <col:35, line:513:5>
|   |-ParenExpr 0x55dd3fb9f9e8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fb9f9b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9f710 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fb9f6e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fb9f5f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fb9f5d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fb9f598 <col:23> 'int' lvalue ParmVar 0x55dd3fb83310 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fb9f5b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fb9f6c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fb9f6a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fb9f610 <col:33> 'int' lvalue ParmVar 0x55dd3fb83310 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fb9f688 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fb9f670 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fb9f630 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fb9f650 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9f770 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9f750 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fb9f918 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fb9f900 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fb9f8e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fb9f958 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9f7e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd3fb9f970 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9f818 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fb9f988 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9f850 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55dd3fb9f9a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fb9f8c8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fb9f8b0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9f870 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55dd3fb9fcc8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55dd3fb9fcb0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fb9fc98 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd3fb9fc68 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55dd3fb9fbe0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd3fb9fbb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fb9fb60 <col:60, col:69> 'char const[48]' lvalue ->c 0x55dd3fb88d50
|             |   `-CXXMemberCallExpr 0x55dd3fb9fb40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd3fb9fb10 <col:60> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|             |       `-CXXThisExpr 0x55dd3fb9fb00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd3fb9fbc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd3fb9fb90 <col:73> 'int' lvalue ParmVar 0x55dd3fb83310 'i' 'int'
|-CXXMethodDecl 0x55dd3fb83658 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55dd3fb834c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd3fb83540 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55dd3fba03b8 <col:41, line:528:5>
|   |-ParenExpr 0x55dd3fba0148 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fba0118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fb9fe70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fb9fe40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fb9fd50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fb9fd38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fb9fcf8 <col:23> 'int' lvalue ParmVar 0x55dd3fb834c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fb9fd18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fb9fe20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fb9fe08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fb9fd70 <col:33> 'int' lvalue ParmVar 0x55dd3fb834c8 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fb9fde8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fb9fdd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fb9fd90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fb9fdb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55dd3fb9fed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fb9feb0 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fba0078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba0060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba0040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba00b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9ff40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55dd3fba00d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fb9ff78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba00e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fb9ffb0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55dd3fba0100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba0028 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba0010 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fb9ffd0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55dd3fba0398 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55dd3fba0348 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd3fba0318 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd3fba02b8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd3fba0288 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd3fba0238 <col:47, col:56> 'char [48]' lvalue ->c 0x55dd3fb88d50
|     |     |   `-CXXMemberCallExpr 0x55dd3fba0218 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd3fba01e8 <col:47> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|     |     |       `-CXXThisExpr 0x55dd3fba01d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd3fba02a0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd3fba0268 <col:60> 'int' lvalue ParmVar 0x55dd3fb834c8 'i' 'int'
|     `-ImplicitCastExpr 0x55dd3fba0380 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fba0360 <col:65> 'int16_t':'short' lvalue ParmVar 0x55dd3fb83540 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55dd3fb83818 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55dd3fb83720 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55dd3fba0a88 <col:36, line:541:5>
|   |-ParenExpr 0x55dd3fba0828 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fba07f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba0550 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba0520 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba0430 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba0418 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba03d8 <col:23> 'int' lvalue ParmVar 0x55dd3fb83720 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba03f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba0500 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fba04e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba0450 <col:33> 'int' lvalue ParmVar 0x55dd3fb83720 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba04c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba04b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba0470 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fba0490 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55dd3fba05b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba0590 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fba0758 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba0740 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba0720 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba0798 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba0620 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55dd3fba07b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba0658 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba07c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba0690 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55dd3fba07e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba0708 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba06f0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba06b0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55dd3fba0a78 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55dd3fba0a60 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fba0a48 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd3fba0a18 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55dd3fba09c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd3fba0990 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fba0940 <col:61, col:70> 'char const[48]' lvalue ->c 0x55dd3fb88d50
|             |   `-CXXMemberCallExpr 0x55dd3fba0920 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd3fba08f0 <col:61> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|             |       `-CXXThisExpr 0x55dd3fba08e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd3fba09a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd3fba0970 <col:74> 'int' lvalue ParmVar 0x55dd3fb83720 'i' 'int'
|-CXXMethodDecl 0x55dd3fb839e8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55dd3fb838d8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55dd3fb83950 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55dd3fb83a98 <col:20>
| `-OptimizeNoneAttr 0x55dd3fb83af0 <col:30>
|-CXXMethodDecl 0x55dd3fb83c28 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55dd3fb83b30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55dd3fba1158 <col:35, line:562:5>
|   |-ParenExpr 0x55dd3fba0ef8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fba0ec8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba0c20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba0bf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba0b00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba0ae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba0aa8 <col:23> 'int' lvalue ParmVar 0x55dd3fb83b30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba0ac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba0bd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fba0bb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba0b20 <col:33> 'int' lvalue ParmVar 0x55dd3fb83b30 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba0b98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba0b80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba0b40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fba0b60 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55dd3fba0c80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba0c60 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fba0e28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba0e10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba0df0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba0e68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba0cf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55dd3fba0e80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba0d28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba0e98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba0d60 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55dd3fba0eb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba0dd8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba0dc0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba0d80 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55dd3fba1148 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55dd3fba1130 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fba1118 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd3fba10e8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55dd3fba1090 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd3fba1060 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fba1010 <col:60, col:69> 'char const[48]' lvalue ->c 0x55dd3fb88d50
|             |   `-CXXMemberCallExpr 0x55dd3fba0ff0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd3fba0fc0 <col:60> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|             |       `-CXXThisExpr 0x55dd3fba0fb0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd3fba1078 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd3fba1040 <col:73> 'int' lvalue ParmVar 0x55dd3fb83b30 'i' 'int'
|-CXXMethodDecl 0x55dd3fb83e38 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55dd3fb83ce8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd3fb83d60 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55dd3fba1838 <col:41, line:577:5>
|   |-ParenExpr 0x55dd3fba15c8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fba1598 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba12f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba12c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba11d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba11b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba1178 <col:23> 'int' lvalue ParmVar 0x55dd3fb83ce8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba1198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba12a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fba1288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba11f0 <col:33> 'int' lvalue ParmVar 0x55dd3fb83ce8 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba1268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba1250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba1210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fba1230 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55dd3fba1350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba1330 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fba14f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba14e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba14c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba1538 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba13c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55dd3fba1550 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba13f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba1568 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba1430 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55dd3fba1580 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba14a8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba1490 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba1450 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55dd3fba1818 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55dd3fba17c8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd3fba1798 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd3fba1738 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd3fba1708 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd3fba16b8 <col:47, col:56> 'char [48]' lvalue ->c 0x55dd3fb88d50
|     |     |   `-CXXMemberCallExpr 0x55dd3fba1698 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd3fba1668 <col:47> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|     |     |       `-CXXThisExpr 0x55dd3fba1658 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd3fba1720 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd3fba16e8 <col:60> 'int' lvalue ParmVar 0x55dd3fb83ce8 'i' 'int'
|     `-ImplicitCastExpr 0x55dd3fba1800 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fba17e0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55dd3fb83d60 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55dd3fb83ff8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55dd3fb83f00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55dd3fba1f68 <col:36, line:591:5>
|   |-ParenExpr 0x55dd3fba1ca8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fba1c78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba19d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba19a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba18b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba1898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba1858 <col:23> 'int' lvalue ParmVar 0x55dd3fb83f00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba1878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba1980 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fba1968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba18d0 <col:33> 'int' lvalue ParmVar 0x55dd3fb83f00 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba1948 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba1930 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba18f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fba1910 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55dd3fba1a30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba1a10 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fba1bd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba1bc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba1ba0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba1c18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba1aa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55dd3fba1c30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba1ad8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba1c48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba1b10 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55dd3fba1c60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba1b88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba1b70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba1b30 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55dd3fba1f58 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55dd3fba1f40 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fba1f28 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd3fba1ef8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55dd3fba1e70 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd3fba1e40 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fba1df0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55dd3fb88d50
|             |   `-CXXMemberCallExpr 0x55dd3fba1dd0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd3fba1da0 <col:61> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|             |       `-CXXThisExpr 0x55dd3fba1d90 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd3fba1e58 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd3fba1e20 <col:74> 'int' lvalue ParmVar 0x55dd3fb83f00 'i' 'int'
|-CXXMethodDecl 0x55dd3fb84248 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55dd3fb840b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd3fb84130 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55dd3fba2648 <col:42, line:606:5>
|   |-ParenExpr 0x55dd3fba23d8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55dd3fba23a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba2100 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba20d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba1fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba1fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba1f88 <col:23> 'int' lvalue ParmVar 0x55dd3fb840b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba1fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba20b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55dd3fba2098 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba2000 <col:33> 'int' lvalue ParmVar 0x55dd3fb840b8 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba2078 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba2060 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba2020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55dd3fba2040 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55dd3fba2160 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba2140 <col:60> 'int' 0
|   |   `-CallExpr 0x55dd3fba2308 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba22f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba22d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba2348 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba21d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55dd3fba2360 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba2208 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba2378 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba2240 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55dd3fba2390 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba22b8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba22a0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba2260 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55dd3fba2628 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55dd3fba25d8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd3fba25a8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd3fba2548 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd3fba2518 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd3fba24c8 <col:48, col:57> 'char [48]' lvalue ->c 0x55dd3fb88d50
|     |     |   `-CXXMemberCallExpr 0x55dd3fba24a8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd3fba2478 <col:48> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|     |     |       `-CXXThisExpr 0x55dd3fba2468 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd3fba2530 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd3fba24f8 <col:61> 'int' lvalue ParmVar 0x55dd3fb840b8 'i' 'int'
|     `-ImplicitCastExpr 0x55dd3fba2610 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55dd3fba25f0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55dd3fb84130 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55dd3fb843e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55dd3fb84310 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55dd3fba2eb8 <col:33, line:620:5>
|   |-ParenExpr 0x55dd3fba2c30 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55dd3fba2c00 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba2850 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba2820 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba26c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba26a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba2668 <col:23> 'int' lvalue ParmVar 0x55dd3fb84310 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba2688 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba2800 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55dd3fba27e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba26e0 <col:33> 'int' lvalue ParmVar 0x55dd3fb84310 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba27c8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba27b0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba2700 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55dd3fba2788 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55dd3fba2770 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55dd3fba2738 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55dd3fba28b0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba2890 <col:79> 'int' 0
|   |   `-CallExpr 0x55dd3fba2b60 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba2b48 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba2b28 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba2ba0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba2998 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55dd3fba2bb8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba29e0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba2bd0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba2a18 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55dd3fba2be8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba2b10 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba2af8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba2ab8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55dd3fba2ea8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55dd3fba2e90 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55dd3fba2e78 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55dd3fba2e48 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55dd3fba2dc0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55dd3fba2d90 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55dd3fba2d40 <col:67, col:76> 'char const[48]' lvalue ->c 0x55dd3fb88d50
|             |   `-CXXMemberCallExpr 0x55dd3fba2d20 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55dd3fba2cf0 <col:67> '<bound member function type>' ->xanno 0x55dd3fb7eba8
|             |       `-CXXThisExpr 0x55dd3fba2ce0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55dd3fba2da8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55dd3fba2d70 <col:80> 'int' lvalue ParmVar 0x55dd3fb84310 'i' 'int'
|-CXXMethodDecl 0x55dd3fb845f8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55dd3fb844a0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55dd3fb84520 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55dd3fba36e0 <col:45, line:635:5>
|   |-ParenExpr 0x55dd3fba3428 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55dd3fba33f8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55dd3fba30c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55dd3fba3090 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55dd3fba2f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55dd3fba2f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55dd3fba2ed8 <col:23> 'int' lvalue ParmVar 0x55dd3fb844a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55dd3fba2ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55dd3fba3070 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55dd3fba3058 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55dd3fba2f50 <col:33> 'int' lvalue ParmVar 0x55dd3fb844a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55dd3fba3038 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55dd3fba3020 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55dd3fba2f70 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55dd3fb7ef90 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55dd3fba2ff8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55dd3fba2fe0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55dd3fba2fa8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55dd3fba3120 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dd3fba3100 <col:79> 'int' 0
|   |   `-CallExpr 0x55dd3fba3358 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55dd3fba3340 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dd3fba3320 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dd3f625e80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dd3fba3398 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba3190 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55dd3fba33b0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dd3fba31d8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55dd3fba33c8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dd3fba3210 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55dd3fba33e0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dd3fba3308 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dd3fba32f0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dd3fba32a8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55dd3fba36c0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55dd3fba3628 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55dd3fba35f8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55dd3fba3598 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55dd3fba3568 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55dd3fba3518 <col:54, col:63> 'char [48]' lvalue ->c 0x55dd3fb88d50
|     |     |   `-CXXMemberCallExpr 0x55dd3fba34f8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55dd3fba34c8 <col:54> '<bound member function type>' ->xanno 0x55dd3fb7ed48
|     |     |       `-CXXThisExpr 0x55dd3fba34b8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55dd3fba3580 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55dd3fba3548 <col:67> 'int' lvalue ParmVar 0x55dd3fb844a0 'i' 'int'
|     `-CXXConstCastExpr 0x55dd3fba3690 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55dd3fba3678 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55dd3fba3640 <col:91> 'const void *' lvalue ParmVar 0x55dd3fb84520 'x' 'const void *'
|-CXXMethodDecl 0x55dd3fb846c8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55dd3fba3768 <col:34, line:640:5>
|   `-ReturnStmt 0x55dd3fba3758 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55dd3fba3740 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55dd3fba3710 <col:16> 'Packet *' lvalue ->_data_packet 0x55dd3fb89898
|         `-CXXThisExpr 0x55dd3fba3700 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55dd3fb84808 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55dd3fb84778 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dd3fb9c8a8 <col:46> 'bool' true
|-CXXMethodDecl 0x55dd3fb84988 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55dd3fb848c0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55dd3fb84a30 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55dd3fb851e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55dd3fb84b30 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb85250 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84b10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55dd3fb84af0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55dd3fb784a0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55dd3fb84bc0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb85268 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84ba0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55dd3fb84b80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55dd3fb78530 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55dd3fb84c50 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb85280 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84c30 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55dd3fb84c10 <col:21> 'int' 0
| |-EnumConstantDecl 0x55dd3fb84ce0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb85298 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84cc0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd3fb84ca0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55dd3fb84d70 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb852b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84d50 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55dd3fb84d30 <col:21> 'int' 16
| |-EnumConstantDecl 0x55dd3fb84e00 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb852c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84de0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55dd3fb84dc0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55dd3fb84e90 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb852e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84e70 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55dd3fb84e50 <col:19> 'int' EnumConstant 0x55dd3fb84ce0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55dd3fb84f20 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb852f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84f00 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55dd3fb84ee0 <col:19> 'int' EnumConstant 0x55dd3fb84e00 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55dd3fb84ff0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb85310 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb84fd0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55dd3fb84fb0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55dd3fb84f70 <col:23> 'int' EnumConstant 0x55dd3fb84f20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55dd3fb84f90 <col:40> 'int' 2
| |-EnumConstantDecl 0x55dd3fb850c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55dd3fb85328 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dd3fb850a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55dd3fb85080 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55dd3fb85040 <col:23> 'int' EnumConstant 0x55dd3fb84f20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55dd3fb85060 <col:40> 'int' 4
| `-EnumConstantDecl 0x55dd3fb85190 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55dd3fb85340 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dd3fb85170 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55dd3fb85150 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55dd3fb85110 <col:23> 'int' EnumConstant 0x55dd3fb84f20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55dd3fb85130 <col:40> 'int' 8
|-CXXMethodDecl 0x55dd3fb85380 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55dd3fb85420 <col:68> "" ""
|-CXXMethodDecl 0x55dd3fb854b8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55dd3fb85558 <col:45> "" ""
|-CXXMethodDecl 0x55dd3fb855f0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55dd3fb85690 <col:57> "" ""
|-CXXMethodDecl 0x55dd3fb85728 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55dd3fb857c8 <col:45> "" ""
|-CXXMethodDecl 0x55dd3fb85860 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55dd3fb85900 <col:57> "" ""
|-CXXMethodDecl 0x55dd3fb85990 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55dd3fb85a30 <col:51> "" ""
|-CXXMethodDecl 0x55dd3fb85ac0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55dd3fb85b60 <col:63> "" ""
|-CXXMethodDecl 0x55dd3fb85bf0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55dd3fb85c90 <col:53> "" ""
|-CXXMethodDecl 0x55dd3fb85d20 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55dd3fb85dc0 <col:65> "" ""
|-CXXMethodDecl 0x55dd3fb85ed8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb85e48 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55dd3fb85f80 <col:61> "" ""
|-CXXMethodDecl 0x55dd3fb86118 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55dd3fb86008 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55dd3fb86080 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55dd3fb861c8 <col:67> "" ""
|-CXXMethodDecl 0x55dd3fb862e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb86250 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55dd3fb86388 <col:63> "" ""
|-CXXMethodDecl 0x55dd3fb86520 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55dd3fb86410 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd3fb86488 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55dd3fb865d0 <col:69> "" ""
|-CXXMethodDecl 0x55dd3fb866e8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb86658 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55dd3fb86790 <col:63> "" ""
|-CXXMethodDecl 0x55dd3fb86928 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fb86818 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd3fb86890 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3fb869d8 <col:69> "" ""
|-CXXMethodDecl 0x55dd3fb86af0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb86a60 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55dd3fb86b98 <col:62> "" ""
|-CXXMethodDecl 0x55dd3fb86d30 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55dd3fb86c20 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd3fb86c98 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55dd3fb86de0 <col:68> "" ""
|-CXXMethodDecl 0x55dd3fb86ef8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb86e68 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55dd3fb86fa0 <col:63> "" ""
|-CXXMethodDecl 0x55dd3fb87138 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55dd3fb87028 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55dd3fb870a0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55dd3fb871e8 <col:69> "" ""
|-CXXMethodDecl 0x55dd3fb87278 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55dd3fb87318 <col:64> "" ""
|-CXXMethodDecl 0x55dd3fb873a8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55dd3fb87448 <col:52> "" ""
|-CXXMethodDecl 0x55dd3fb874d8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55dd3fb87578 <col:67> "" ""
|-CXXMethodDecl 0x55dd3fb87608 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55dd3fb876a8 <col:55> "" ""
|-CXXMethodDecl 0x55dd3fb877c0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb87730 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55dd3fb87868 <col:58> "" ""
|-CXXMethodDecl 0x55dd3fb87a00 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55dd3fb878f0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd3fb87968 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55dd3fb87ab0 <col:62> "" ""
|-CXXMethodDecl 0x55dd3fb87bc8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb87b38 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55dd3fb87c70 <col:58> "" ""
|-CXXMethodDecl 0x55dd3fb87e08 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55dd3fb87cf8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd3fb87d70 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55dd3fb87eb8 <col:62> "" ""
|-CXXMethodDecl 0x55dd3fb87fd0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb87f40 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55dd3fb88078 <col:60> "" ""
|-CXXMethodDecl 0x55dd3fb88210 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55dd3fb88100 <col:34> col:37 'int'
| |-ParmVarDecl 0x55dd3fb88178 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55dd3fb882c0 <col:64> "" ""
|-CXXMethodDecl 0x55dd3fb883d8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb88348 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55dd3fb88480 <col:58> "" ""
|-CXXMethodDecl 0x55dd3fb88618 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55dd3fb88508 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd3fb88580 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55dd3fb886c8 <col:62> "" ""
|-CXXMethodDecl 0x55dd3fb887e0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55dd3fb88750 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55dd3fb88888 <col:59> "" ""
|-CXXMethodDecl 0x55dd3fb88a20 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55dd3fb88910 <col:33> col:36 'int'
| |-ParmVarDecl 0x55dd3fb88988 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55dd3fb88ad0 <col:63> "" ""
|-AccessSpecDecl 0x55dd3fb88b40 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55dd3fb88b68 prev 0x55dd3fb7ea80 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd3fb88c60 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55dd3fb88d50 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55dd3fb88e00 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55dd3fb88f88 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55dd3fb89108 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55dd3fb89288 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55dd3fba3988 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dd3fba41f8 <col:11>
| |-CXXDestructorDecl 0x55dd3fba3a60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55dd3fba3b98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55dd3fba3b98
| | `-ParmVarDecl 0x55dd3fba3ca8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55dd3fba3d48 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd3fba3d48
| | `-ParmVarDecl 0x55dd3fba3e58 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55dd3fba6b88 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dd3fba6c98 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55dd3fba6f18 <col:11>
| |   `-ReturnStmt 0x55dd3fba6f08 <col:11>
| |     `-UnaryOperator 0x55dd3fba6ef0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dd3fba6ee0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55dd3fba6d08 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55dd3fba6d08
|   `-ParmVarDecl 0x55dd3fba6e18 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55dd3fb892f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dd3fb89408 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55dd3fb894a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55dd3fb89510 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55dd3fb89578 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55dd3fb895e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55dd3fb89640 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55dd3fb89700 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55dd3fb89760 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55dd3fb897c0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55dd3fba3890 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55dd3fb894a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55dd3fba4208 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55dd3fba4260 <col:12>
| |-CXXConstructorDecl 0x55dd3fba3ec8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55dd3fba3ec8
| | `-ParmVarDecl 0x55dd3fba3fd8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55dd3fba4078 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55dd3fba4078
| | `-ParmVarDecl 0x55dd3fba4188 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55dd3fba6270 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55dd3fb89838 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55dd3fb89898 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55dd3fb89900 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55dd3fb89968 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55dd3fb899d0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55dd3fb89a38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55dd3fb89a98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55dd3fb89af8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55dd3fb89b60 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55dd3fb89be8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55dd3fb89838 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55dd3fba3790 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55dd3fb89a98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55dd3fba4270 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55dd3fba42d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55dd3fb9b948 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55dd3fb9b880 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55dd3fb9ba40 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55dd3fb9bc28 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55dd3fb9bb30 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55dd3fb9bef8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55dd3fb9bce0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dd3fb9bd58 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dd3fb9bdd0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb9c118 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55dd3fb9bfc8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55dd3fb9c040 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55dd3fb9c3e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55dd3fb9c1d8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55dd3fb9c250 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55dd3fb9c2c8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55dd3fb9c540 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55dd3fb9c4b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55dd3fb9c688 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55dd3fb9c5f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55dd3fb9c780 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dd3f852a18 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dd3f852b38 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55dd3f852c00 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55dd3fb6f020 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dd3fb71158 <col:8>
|-CXXConstructorDecl 0x55dd3fb6f128 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55dd3fb6f128
| `-ParmVarDecl 0x55dd3fb6f238 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55dd3fb6f2d8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55dd3fb6f3e8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55dd3f852c00 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55dd3fb71370 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55dd3fb71340 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55dd3f852c00
| |     `-CXXStaticCastExpr 0x55dd3fb71310 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55dd3fb712e0 <col:8> 'in_addr' lvalue ParmVar 0x55dd3fb6f3e8 '' 'in_addr &&'
| `-CompoundStmt 0x55dd3fb713b8 <col:8>
`-CXXDestructorDecl 0x55dd3fb715f0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3f79a3d0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55dd3fd50198 <line:167:18>
|-CXXRecordDecl 0x55dd3fd50258 prev 0x55dd3f79a3d0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55dd3fd50368 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.2 = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.2 = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<56>
         0 |   char [56] x
           | [sizeof=56, dsize=56, align=1,
           |  nvsize=56, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fcc2bd0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 56
|-PackedAttr 0x55dd3fd58ac8 <line:167:18>
|-CXXRecordDecl 0x55dd3fd58b88 prev 0x55dd3fcc2bd0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55dd3fd58c98 <line:166:5, col:13> col:10 x 'char [56]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [56 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [56 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class jvtree_t<class chash_node_t<int>, int, &chash_node_t<int>::key>
         0 |   int num
         8 |   class chash_node_t<int> * tree
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class chash_node_t<int>
         0 |   int key
         4 |   unsigned short val
         6 |   unsigned short index
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fcef2b8 <../elements/ip/siphmapper.hh:112:1, line:120:1> line:113:7 class chash_node_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55dd3fcef5a0 prev 0x55dd3fcef2b8 <col:1, col:7> col:7 implicit class chash_node_t
|-AccessSpecDecl 0x55dd3fcef630 <line:114:1, col:7> col:1 public
|-CXXConstructorDecl 0x55dd3fcef690 <line:115:3, col:20> col:3 chash_node_t 'void ()'
|-CXXConstructorDecl 0x55dd3fcef8e8 <line:116:3, col:71> col:3 chash_node_t 'void (int, unsigned short)'
| |-ParmVarDecl 0x55dd3fcef788 <col:17, col:19> col:19 k 'int':'int'
| `-ParmVarDecl 0x55dd3fcef7f0 <col:22, col:37> col:37 v 'unsigned short'
|-FieldDecl 0x55dd3fcef9c0 <line:117:3, col:5> col:5 referenced key 'int':'int'
|-FieldDecl 0x55dd3fcefa10 <line:118:3, col:18> col:18 val 'unsigned short'
`-FieldDecl 0x55dd3fcefa60 <line:119:3, col:18> col:18 index 'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%class.chash_node_t = type { i32, i16, i16 }
  NonVirtualBaseLLVMType:%class.chash_node_t = type { i32, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dd3fcefc70 <../elements/ip/siphmapper.hh:41:1, line:110:1> line:42:7 class jvtree_t definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'chash_node_t<int>'
|-TemplateArgument type 'int'
|-TemplateArgument decl
| `-Field 0x55dd3fcef9c0 'key' 'int':'int'
|-CXXRecordDecl 0x55dd3fd64ee0 prev 0x55dd3fcefc70 <col:1, col:7> col:7 implicit class jvtree_t
|-AccessSpecDecl 0x55dd3fd64f70 <line:44:1, col:7> col:1 public
|-CXXConstructorDecl 0x55dd3fd651b0 <line:45:3, line:70:3> line:45:3 jvtree_t 'void (int, chash_node_t<int> *)'
| |-ParmVarDecl 0x55dd3fd64f98 <col:13, col:17> col:17 sz 'int'
| `-ParmVarDecl 0x55dd3fd65068 <col:21, col:24> col:24 arr 'chash_node_t<int> *'
|-CXXMethodDecl 0x55dd3fd65310 <line:74:3, line:82:3> line:74:7 next2pow 'int (int)'
| `-ParmVarDecl 0x55dd3fd65278 <col:17, col:21> col:21 i 'int'
|-CXXDestructorDecl 0x55dd3fd653f0 <line:84:3, col:34> col:3 ~jvtree_t 'void ()' noexcept-unevaluated 0x55dd3fd653f0
|-CXXMethodDecl 0x55dd3fd655e8 <line:87:3, line:106:3> line:87:6 search 'chash_node_t<int> *(int) const'
| `-ParmVarDecl 0x55dd3fd654f0 <col:14, col:16> col:16 k 'int':'int'
|-AccessSpecDecl 0x55dd3fd656a0 <line:107:1, col:8> col:1 private
|-FieldDecl 0x55dd3fd656c8 <line:108:3, col:7> col:7 num 'int'
`-FieldDecl 0x55dd3fd65728 <line:109:3, col:6> col:6 tree 'chash_node_t<int> *'

Layout: <CGRecordLayout
  LLVMType:%class.jvtree_t = type { i32, %class.chash_node_t* }
  NonVirtualBaseLLVMType:%class.jvtree_t = type { i32, %class.chash_node_t* }
  IsZeroInitializable:1
  BitFields:[
]>
