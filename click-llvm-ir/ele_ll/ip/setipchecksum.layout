
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f18e1948 prev 0x5628f18d90e8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5628f18e1a40 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5628f18e1ad0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5628f18e1b48 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5628f18e1c08 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5628f18e1cd0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5628f18e1e48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5628f18e1d80 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5628f18e1ef0 <col:24>
| `-OptimizeNoneAttr 0x5628f18e1f48 <col:34>
|-CXXMethodDecl 0x5628f18e1f90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5628f18e2248 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5628f18e2040 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5628f18e20b8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5628f18e2138 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5628f18e2300 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5628f18e2338 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5628f18e23a0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5628f18e2428 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5628f18e2748 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5628f18e24e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5628f18e2558 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5628f18e25d0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5628f18e2650 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5628f18e2860 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5628f18ea1d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5628f18ea1d8
| `-ParmVarDecl 0x5628f18ea2e8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5628f18ea388 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5628f18ea388
| `-ParmVarDecl 0x5628f18ea498 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5628f18ee230 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f18d4960 prev 0x5628f18d46e0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5628f18d4a58 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5628f18d4ae8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5628f18d4b48 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5628f18d4c38 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5628f18d4d38 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5628f18d4f08 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5628f18d4db8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5628f18d4e30 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5628f18d5098 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5628f18d4fd0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5628f18d5140 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5628f18d5278 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5628f18d51b0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5628f18d5418 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5628f18d5358 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5628f18d55b8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5628f18d54f8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5628f18d5660 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5628f18d5760 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5628f18d5840 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18d5740 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5628f18d5720 <col:26> 'int' 1
| `-EnumConstantDecl 0x5628f18d57f0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5628f18d5858 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18d57d0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5628f18d57b0 <col:44> 'int' 2
|-CXXMethodDecl 0x5628f18d59a0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5628f18d5888 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5628f18d5908 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5628f18d5af8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5628f18d5a68 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5628f18d5d38 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5628f18d5bb8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5628f18d5c30 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5628f18d5de8 <col:20>
| `-OptimizeNoneAttr 0x5628f18d5e40 <col:30>
|-CXXMethodDecl 0x5628f18d5f48 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5628f18d5e80 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5628f18d5ff0 <col:20>
| `-OptimizeNoneAttr 0x5628f18d6048 <col:30>
|-CXXMethodDecl 0x5628f18d6098 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5628f18d6160 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5628f18d6278 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5628f18d6300 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5628f18d6388 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5628f18d6410 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x5628f18d6498 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5628f18d6528 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5628f18d65e8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5628f18d6670 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5628f18d66f8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5628f18d6780 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5628f18d6808 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5628f18d6890 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5628f18d6920 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5628f18d69e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5628f18d6a70 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5628f18d6bc0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5628f18d6b28 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5628f18d6d50 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5628f18d6c80 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5628f18d7000 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5628f18d6e08 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5628f18d6e88 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5628f18d6f08 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5628f18d70b8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5628f18d71c0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5628f18d7450 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18d71a0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5628f18d7180 <col:33> 'int' 0
| |-EnumConstantDecl 0x5628f18d7250 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5628f18d7468 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18d7230 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5628f18d7210 <col:32> 'int' 20
| |-EnumConstantDecl 0x5628f18d72e0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5628f18d7480 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18d72c0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5628f18d72a0 <col:38> 'int' 90
| |-EnumConstantDecl 0x5628f18d7370 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5628f18d7498 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18d7350 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5628f18d7330 <col:35> 'int' 100
| `-EnumConstantDecl 0x5628f18d7400 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5628f18d74b0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18d73e0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5628f18d73c0 <col:32> 'int' 2000
|-CXXMethodDecl 0x5628f18d74f0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5628f18d7930 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5628f18d77a0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5628f18d7818 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18d7a00 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5628f18d7b80 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5628f18d7ab0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18d7d88 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5628f18d7c38 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5628f18d7cb0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18d7e88 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5628f18d7f28 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5628f18d7ff0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5628f18d8080 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5628f18d82b0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18d8060 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5628f18d8040 <col:36> 'int' EnumConstant 0x5628f18d7ff0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5628f18d80d0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5628f18d8120 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5628f18d8170 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5628f18d81c0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5628f18d8210 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5628f18d8260 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5628f18d8398 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5628f18d82d8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5628f18d8460 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5628f18d8520 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5628f18d85e0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5628f18d86a0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5628f18d87b8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5628f18d8880 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5628f18d8a00 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5628f18d8930 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5628f18d8b28 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5628f18d8d28 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5628f18d8bd8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5628f18d8c58 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5628f18e6678 <col:54, line:127:5>
|   |-ParenExpr 0x5628f18e6528 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5628f18e64f8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18e61e8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5628f18e61c0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5628f18e61a8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5628f18e6190 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5628f18e6160 <col:31> 'Router *' lvalue ->_router 0x5628f18e4040
|   |   |         `-CXXThisExpr 0x5628f18e6150 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5628f18e6248 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18e6228 <col:48> 'int' 0
|   |   `-CallExpr 0x5628f18e6458 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5628f18e6440 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18e6420 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18e6498 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18e62b8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5628f18e64b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18e62d8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5628f18e64c8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18e6310 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5628f18e64e0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18e6408 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18e63f0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18e63a8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5628f18e65c0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5628f18e6558 <col:9> 'Router *' lvalue ->_router 0x5628f18e4040
|   | | `-CXXThisExpr 0x5628f18e6548 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5628f18e65a8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5628f18e6588 <col:19> 'Router *' lvalue ParmVar 0x5628f18d8bd8 'r' 'Router *'
|   `-BinaryOperator 0x5628f18e6658 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5628f18e65f0 <col:9> 'int' lvalue ->_eindex 0x5628f18e40a8
|     | `-CXXThisExpr 0x5628f18e65e0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5628f18e6640 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18e6620 <col:19> 'int' lvalue ParmVar 0x5628f18d8c58 'eindex' 'int'
|-CXXMethodDecl 0x5628f18d8eb0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5628f18d8de8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5628f18d8f80 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5628f18d9048 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5628f18d90e8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5628f18d9338 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5628f18d91b0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5628f18d9230 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5628f18d93e8 <col:20>
| `-OptimizeNoneAttr 0x5628f18d9440 <col:30>
|-CXXMethodDecl 0x5628f18d9548 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5628f18d9480 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5628f18d95f0 <col:20>
| `-OptimizeNoneAttr 0x5628f18d9648 <col:30>
|-CXXMethodDecl 0x5628f18d9718 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5628f18d9688 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5628f18d97c0 <col:20>
| `-OptimizeNoneAttr 0x5628f18d9818 <col:30>
|-CXXMethodDecl 0x5628f18d99a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5628f18d9850 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5628f18d98d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5628f18d9b38 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5628f18d9a70 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5628f18d9c88 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5628f18d9bf8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5628f18d9dd8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5628f18d9d48 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5628f18d9f28 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5628f18d9e98 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5628f18da1e8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5628f18d9fe0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5628f18da060 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5628f18da108 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5628f18da2c0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5628f18da380 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5628f18da650 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5628f18da500 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5628f18da578 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18da778 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5628f18da950 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5628f18da830 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5628f18da8b0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5628f18dab38 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5628f18daa18 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5628f18daa98 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5628f18daea8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5628f18dabf8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5628f18dac70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5628f18dacf0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5628f18e5c60 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5628f18e5c40 <col:106> 'int' 0
| `-ParmVarDecl 0x5628f18dad68 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5628f18e5c98 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5628f18e5c78 <col:126> 'int' 0
|-CXXMethodDecl 0x5628f18db248 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5628f18daf78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5628f18db010 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5628f18db090 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5628f18db108 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5628f18e5cd0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5628f18e5cb0 <col:114> 'int' 0
|-CXXMethodDecl 0x5628f18db5d8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5628f18db320 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5628f18db398 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5628f18db418 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5628f18e5ce8 <col:96> 'int' 0
| `-ParmVarDecl 0x5628f18db490 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5628f18e5d28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5628f18e5d08 <col:116> 'int' 0
|-CXXMethodDecl 0x5628f18db958 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5628f18db6a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5628f18db720 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18db7a0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5628f18e5d60 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5628f18e5d40 <col:109> 'int' 0
| `-ParmVarDecl 0x5628f18db818 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5628f18e5d98 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5628f18e5d78 <col:129> 'int' 0
|-CXXMethodDecl 0x5628f18dbcd8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5628f18dba28 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5628f18dbaa0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18dbb20 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5628f18dbb98 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5628f18e5dd0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5628f18e5db0 <col:117> 'int' 0
|-CXXMethodDecl 0x5628f18dc068 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5628f18dbdb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18dbe28 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18dbea8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5628f18e5de8 <col:99> 'int' 0
| `-ParmVarDecl 0x5628f18dbf20 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5628f18e5e28 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5628f18e5e08 <col:119> 'int' 0
|-CXXMethodDecl 0x5628f18dc488 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5628f18dc138 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5628f18dc1b8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5628f18dc230 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18dc2b0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5628f18e5e60 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5628f18e5e40 <col:108> 'int' 0
| `-ParmVarDecl 0x5628f18dc330 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5628f18e5e98 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5628f18e5e78 <col:141> 'int' 0
|-CXXMethodDecl 0x5628f18dc8a8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5628f18dc560 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5628f18dc5e0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5628f18dc658 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18dc6d8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5628f18dc758 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5628f18e5eb0 <col:121> 'int' 0
|-CXXMethodDecl 0x5628f18dccd8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5628f18dc988 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5628f18dca08 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5628f18dca80 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18dcb00 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5628f18e5ed0 <col:98> 'int' 0
| `-ParmVarDecl 0x5628f18dcb80 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5628f18e5ef0 <col:123> 'int' 0
|-CXXMethodDecl 0x5628f18dcfa0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5628f18dcdb0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5628f18dce30 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5628f18dceb0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5628f18e5f10 <col:80> 'int' 0
|-EnumDecl 0x5628f18dd058 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5628f18dd160 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5628f18dd3f0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18dd140 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5628f18dd120 <col:42> 'int' 1
| |-EnumConstantDecl 0x5628f18dd1f0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5628f18dd408 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18dd1d0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5628f18dd1b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5628f18dd280 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5628f18dd420 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18dd260 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5628f18dd240 <col:44> 'int' 4
| |-EnumConstantDecl 0x5628f18dd310 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5628f18dd438 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18dd2f0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5628f18dd2d0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5628f18dd3a0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5628f18dd450 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18dd380 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5628f18dd360 <col:34> 'int' 6
|-CXXMethodDecl 0x5628f18dd708 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5628f18dd478 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5628f18dd518 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5628f18dd598 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5628f18dd610 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5628f18e5fc8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5628f18e5fb0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5628f18e5f98 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5628f18e5f78 <col:98, col:105> 'String' (CXXTemporary 0x5628f18e5f78)
|           `-CXXTemporaryObjectExpr 0x5628f18e5f40 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5628f18dd9a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5628f18dd7d8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5628f18dd850 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5628f18dd8c8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5628f18e6078 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5628f18e6060 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5628f18e6048 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5628f18e6028 <col:94, col:101> 'String' (CXXTemporary 0x5628f18e6028)
| |         `-CXXTemporaryObjectExpr 0x5628f18e5ff0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5628f18e6860 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5628f18e67d8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5628f18e67a8 <col:9> '<bound member function type>' ->add_task_handlers 0x5628f18dd708
|     | `-CXXThisExpr 0x5628f18e6798 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5628f18e6818 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5628f18e6718 <col:27> 'Task *' lvalue ParmVar 0x5628f18dd7d8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5628f18e6830 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5628f18e6738 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5628f18dd850 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5628f18e6848 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5628f18e6758 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5628f18dd3a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5628f18e6778 <col:62> 'const String' lvalue ParmVar 0x5628f18dd8c8 'prefix' 'const String &'
|-CXXMethodDecl 0x5628f18ddbb8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5628f18dda70 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5628f18ddae8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5628f18e6128 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5628f18e6110 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5628f18e60f8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5628f18e60d8 <col:70, col:77> 'String' (CXXTemporary 0x5628f18e60d8)
| |         `-CXXTemporaryObjectExpr 0x5628f18e60a0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5628f18e6a38 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5628f18e69b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5628f18e6980 <col:9> '<bound member function type>' ->add_task_handlers 0x5628f18dd708
|     | `-CXXThisExpr 0x5628f18e6970 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5628f18e69f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5628f18e68f0 <col:27> 'Task *' lvalue ParmVar 0x5628f18dda70 'task' 'Task *'
|     |-ImplicitCastExpr 0x5628f18e6a08 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5628f18e6910 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5628f18e6a20 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5628f18e6930 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5628f18dd3a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5628f18e6950 <col:57> 'const String' lvalue ParmVar 0x5628f18ddae8 'prefix' 'const String &'
|-CXXMethodDecl 0x5628f18dde98 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5628f18ddc80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18ddd00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18ddd78 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5628f18de148 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5628f18ddf68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18ddfe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18de068 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5628f18de438 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5628f18de218 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18de298 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18de310 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5628f18de6e8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5628f18de508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18de588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18de608 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5628f18de998 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5628f18de7b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18de838 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18de8b8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5628f18dec48 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5628f18dea68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18deae8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18deb60 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5628f18deef8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5628f18ded18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18ded98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18dee18 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5628f18df208 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5628f18df020 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18df0a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18df120 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5628f18df4e8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5628f18df2d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18df358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18df400 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5628f18df7c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5628f18df5b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18df638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18df6e0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5628f18dfa30 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5628f18df898 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5628f18df918 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5628f18df990 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5628f18dfcd8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5628f18dfb00 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5628f18dfb80 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5628f18dfbf8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5628f18dff88 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5628f18dfda8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18dfe28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18dfea8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5628f18e0238 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5628f18e0058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18e00d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18e0150 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5628f18e04e8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5628f18e0308 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18e0388 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18e0400 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5628f18e07b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5628f18e05b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18e0638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5628f18e06d8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5628f18e0ae8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5628f18e0888 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5628f18e0908 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5628f18e0980 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5628f18e09f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5628f18e6140 <col:93> 'bool' false
|-CXXMethodDecl 0x5628f18e0cd0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5628f18e0bb8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5628f18e0c38 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5628f18e0ea8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5628f18e0d90 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5628f18e0e10 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5628f18e1188 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5628f18e0f68 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5628f18e0fe0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5628f18e1060 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5628f18e10d8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18e1478 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5628f18e1258 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5628f18e12d0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5628f18e1350 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5628f18e13c8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18e16b0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5628f18e1550 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5628f18e15d0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5628f18e1898 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5628f18e1778 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5628f18e17f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5628f18e1948 prev 0x5628f18d90e8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5628f18e1a40 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5628f18e1ad0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5628f18e1b48 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5628f18e1c08 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5628f18e1cd0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5628f18e1e48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5628f18e1d80 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5628f18e1ef0 <col:24>
| | `-OptimizeNoneAttr 0x5628f18e1f48 <col:34>
| |-CXXMethodDecl 0x5628f18e1f90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5628f18e2248 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5628f18e2040 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5628f18e20b8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5628f18e2138 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5628f18e2300 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5628f18e2338 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5628f18e23a0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5628f18e2428 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5628f18e2748 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5628f18e24e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5628f18e2558 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5628f18e25d0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5628f18e2650 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5628f18e2860 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5628f18ea1d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5628f18ea1d8
| | `-ParmVarDecl 0x5628f18ea2e8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5628f18ea388 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5628f18ea388
| | `-ParmVarDecl 0x5628f18ea498 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5628f18ee230 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5628f18e28d8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5628f18e2978 <col:38> "" ""
|-CXXMethodDecl 0x5628f18e2a08 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5628f18e2aa8 <col:44> "" ""
|-AccessSpecDecl 0x5628f18e2b18 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5628f18e2b40 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5628f18e2c40 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5628f18e2c90 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18e2c20 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5628f18e2c00 <col:27> 'int' 4
|-FieldDecl 0x5628f18e2d48 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5628f18e2ef8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5628f18e2fb0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5628f18e4040 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5628f18e40a8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5628f18e41f8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5628f18e4138 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5628f18e43a8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5628f18e42b8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5628f18e4588 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5628f18e4468 <col:20> col:23 'int'
| `-ParmVarDecl 0x5628f18e44e8 <col:25> col:28 'int'
|-CXXMethodDecl 0x5628f18e4830 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5628f18e4650 <col:23> col:26 'int'
| |-ParmVarDecl 0x5628f18e46d0 <col:28> col:31 'int'
| `-ParmVarDecl 0x5628f18e4748 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5628f18e48e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5628f18e49b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5628f18e4a00 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5628f18e4a50 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5628f18e4c30 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5628f18e4ae0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5628f18e4b58 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18e4ed8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5628f18e4cf8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5628f18e4d78 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5628f18e4df0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5628f18e50f8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5628f18e4fa8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5628f18e5028 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5628f18e5430 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5628f18e51b8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5628f18e5238 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5628f18e52b0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5628f18e5330 <col:57> col:60 'int'
|-CXXMethodDecl 0x5628f18e5618 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5628f18e5500 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5628f18e5580 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5628f18e5768 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5628f18e56d8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5628f18e5ae8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5628f18e5828 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5628f18e58a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5628f18e5920 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5628f18e59a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5628f18e5c00 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SetIPChecksum
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   unsigned int _drops
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f18ed348 <../elements/ip/setipchecksum.hh:22:1, line:37:1> line:22:7 class SetIPChecksum definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5628f18ed4a8 <col:1, col:7> col:7 implicit referenced class SetIPChecksum
|-AccessSpecDecl 0x5628f18ed538 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x5628f18ed5c0 <line:24:5, col:19> col:5 SetIPChecksum 'void ()'
|-CXXDestructorDecl 0x5628f18ed6b0 <line:25:5, col:20> col:5 ~SetIPChecksum 'void ()' noexcept-unevaluated 0x5628f18ed6b0
| `-Overrides: [ 0x5628f18d4c38 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5628f18ed7e0 <line:27:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5628f18d6098 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5628f18edf88 <col:36, col:62>
|   `-ReturnStmt 0x5628f18edf78 <col:38, col:45>
|     `-ImplicitCastExpr 0x5628f18edf60 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5628f18edf38 <col:45> 'const char [14]' lvalue "SetIPChecksum"
|-CXXMethodDecl 0x5628f18ed8a8 <line:28:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5628f18d6160 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5628f18edfe8 <col:36, col:56>
|   `-ReturnStmt 0x5628f18edfd8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5628f18edfc0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5628f18edfa0 <col:45> 'const char []' lvalue Var 0x5628f18d6410 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x5628f18ed968 <line:29:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5628f18d7a00 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5628f18edaa8 <line:31:5, col:36> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x5628f18d5278 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x5628f18eda18 <col:27, col:35> col:35 p 'Packet *'
|-AccessSpecDecl 0x5628f18edb50 <line:33:3, col:10> col:3 private
|-FieldDecl 0x5628f18edb90 <line:35:5, col:14> col:14 _drops 'unsigned int'
|-CXXConstructorDecl 0x5628f18edc08 <line:22:7> col:7 implicit SetIPChecksum 'void (const SetIPChecksum &)' inline default_delete noexcept-unevaluated 0x5628f18edc08
| `-ParmVarDecl 0x5628f18edd18 <col:7> col:7 'const SetIPChecksum &'
`-CXXMethodDecl 0x5628f18eddb8 <col:7> col:7 implicit operator= 'SetIPChecksum &(const SetIPChecksum &)' inline default_delete noexcept-unevaluated 0x5628f18eddb8
  `-ParmVarDecl 0x5628f18edec8 <col:7> col:7 'const SetIPChecksum &'

Layout: <CGRecordLayout
  LLVMType:%class.SetIPChecksum = type { %class.Element.base, i32 }
  NonVirtualBaseLLVMType:%class.SetIPChecksum = type { %class.Element.base, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f1693410 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5628f1693528 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5628f16935b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5628f1693688 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5628f1693770 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f1693988 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5628f1693830 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f1693b38 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5628f1693a40 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5628f1693c80 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5628f1693bf0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5628f1693dc8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5628f1693d38 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f1693f10 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5628f1693e80 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f1693fd8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5628f1694120 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5628f1694090 <col:28> col:31 'int'
|-CXXMethodDecl 0x5628f16941e8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5628f1694330 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5628f16942a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5628f16944a8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5628f16943e8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f16945f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5628f1694560 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f16946b8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5628f1694878 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5628f1694768 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5628f16947e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f1694ac8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5628f1694938 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f16949b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5628f1694b78 <col:86> "" ""
|-CXXMethodDecl 0x5628f1694de8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5628f1694c58 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5628f1694cd0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f1694f98 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5628f1694ea8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5628f1695148 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5628f1695050 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5628f1695418 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5628f1695200 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5628f1695278 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5628f16952f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f16956f8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5628f16954e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5628f1695558 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f16955d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5628f16957b0 <col:115> "" ""
|-AccessSpecDecl 0x5628f1695820 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5628f1695858 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f1695d60 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5628f1695d60
| `-ParmVarDecl 0x5628f1695e68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5628f1695f08 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5628f1695f08
| `-ParmVarDecl 0x5628f1696018 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5628f16cb648 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5628f18be450 <col:7>
|-CXXConstructorDecl 0x5628f16cb720 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5628f16cb720
| `-ParmVarDecl 0x5628f16cb838 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5628f16cb8a8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5628f16cb8a8
| `-ParmVarDecl 0x5628f16cb9b8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5628f18c0e50 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f18acff8 prev 0x5628f18a2200 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5628f18ad0f0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5628f18ad1e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5628f18ad308 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5628f18ad488 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5628f18ad608 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5628f18ad788 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5628f18be5b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5628f18bee28 <col:11>
|-CXXDestructorDecl 0x5628f18be690 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5628f18be7c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5628f18be7c8
| `-ParmVarDecl 0x5628f18be8d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5628f18be978 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5628f18be978
| `-ParmVarDecl 0x5628f18bea88 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5628f18c1848 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5628f18c1958 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5628f18c1bd8 <col:11>
|   `-ReturnStmt 0x5628f18c1bc8 <col:11>
|     `-UnaryOperator 0x5628f18c1bb0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5628f18c1ba0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5628f18c19c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5628f18c19c8
  `-ParmVarDecl 0x5628f18c1ad8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f18ad7f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5628f18ad908 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5628f18ad9a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5628f18ada10 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5628f18ada78 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5628f18adae0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5628f18adb40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5628f18adc00 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5628f18adc60 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5628f18adcc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5628f18be4c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5628f18ad9a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5628f18bee38 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5628f18bee90 <col:12>
|-CXXConstructorDecl 0x5628f18beaf8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5628f18beaf8
| `-ParmVarDecl 0x5628f18bec08 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5628f18beca8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5628f18beca8
| `-ParmVarDecl 0x5628f18bedb8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5628f18c0f30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f189b910 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5628f189ba28 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5628f189bab8 <col:16, col:22> col:16 public
|-EnumDecl 0x5628f189bae0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5628f189bbe0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5628f189bcc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f189bbc0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5628f189bba0 <col:21> 'int' 28
| `-EnumConstantDecl 0x5628f189bc70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5628f189bcd8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f189bc50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5628f189bc30 <col:22> 'int' 64
|-CXXMethodDecl 0x5628f189c018 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5628f189bd00 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f189bd80 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5628f189bdf8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f189be70 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5628f189c0d8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5628f189c2d8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5628f189c150 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5628f189c1c8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5628f189c388 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5628f189c4e8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5628f189c3f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5628f189c590 <col:72> warn_unused_result ""
|-TypedefDecl 0x5628f189c8f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5628f189c880 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5628f189c820 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5628f189c7e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5628f13754e0 'void'
|       |-PointerType 0x5628f161bcb0 'unsigned char *'
|       | `-BuiltinType 0x5628f13755e0 'unsigned char'
|       |-TypedefType 0x5628f1418280 'size_t' sugar
|       | |-Typedef 0x5628f13e5be0 'size_t'
|       | `-BuiltinType 0x5628f1375640 'unsigned long'
|       `-PointerType 0x5628f1375ce0 'void *'
|         `-BuiltinType 0x5628f13754e0 'void'
|-CXXMethodDecl 0x5628f189cd68 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5628f189c960 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5628f189c9d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f189ca70 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5628f189caf0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5628f18b7460 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5628f18b7448 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5628f18b7410 <col:58> 'int' 0
| |-ParmVarDecl 0x5628f189cb70 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5628f18b7488 <col:76> 'int' 0
| |-ParmVarDecl 0x5628f189cbf0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5628f18b74a8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5628f189ce38 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5628f189ceb8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5628f189cf78 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5628f189d018 <col:20>
| `-OptimizeNoneAttr 0x5628f189d070 <col:30>
|-CXXMethodDecl 0x5628f189d0e8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5628f189d188 <col:20>
| `-OptimizeNoneAttr 0x5628f189d1e0 <col:30>
|-CXXMethodDecl 0x5628f189d258 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5628f189d2f8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5628f189d3a8 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5628f189d448 <col:20>
| |-OptimizeNoneAttr 0x5628f189d4a0 <col:30>
| `-WarnUnusedResultAttr 0x5628f189d4c8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5628f189d520 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5628f189d5c0 <col:20>
| `-OptimizeNoneAttr 0x5628f189d618 <col:30>
|-CXXMethodDecl 0x5628f189d668 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5628f189d708 <col:20>
| `-OptimizeNoneAttr 0x5628f189d760 <col:30>
|-CXXMethodDecl 0x5628f189d7a8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5628f189d848 <col:20>
| `-OptimizeNoneAttr 0x5628f189d8a0 <col:30>
|-CXXMethodDecl 0x5628f189d8e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f189d9a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f189da70 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5628f189db38 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5628f189dbf8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f189dd18 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5628f18b7570 <col:54, line:99:5>
|   `-ReturnStmt 0x5628f18b7560 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5628f18b7548 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5628f18b7518 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5628f18adff8
|         `-CXXThisExpr 0x5628f18b7508 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5628f189deb8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5628f189ddc8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5628f18b7620 <col:67, line:103:5>
|   `-BinaryOperator 0x5628f18b7600 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5628f18b7598 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5628f18adff8
|     | `-CXXThisExpr 0x5628f18b7588 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5628f18b75e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18b75c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5628f189ddc8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5628f189dfb0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5628f18b76a0 <col:33, line:107:5>
|   `-ReturnStmt 0x5628f18b7690 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5628f18b7678 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5628f18b7648 <col:16> 'void *' lvalue ->_destructor_argument 0x5628f18ae060
|         `-CXXThisExpr 0x5628f18b7638 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5628f189e070 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5628f18b7cd0 <col:25, line:113:5>
|   |-ParenExpr 0x5628f18b7a18 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5628f18b79e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18b7758 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5628f18b7730 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5628f18b76f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5628f18b76c8 <col:24> '<bound member function type>' ->shared 0x5628f189d0e8
|   |   |       `-ImplicitCastExpr 0x5628f18b7718 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5628f18b76b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5628f18b77b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18b7798 <col:42> 'int' 0
|   |   `-CallExpr 0x5628f18b7948 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5628f18b7930 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18b7910 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18b7988 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b7828 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5628f18b79a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b7850 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18b79b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18b7888 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5628f18b79d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18b78f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18b78e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18b78a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5628f18b7c18 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5628f18b7a48 <col:2> 'unsigned char *' lvalue ->_head 0x5628f18ade00
|   | | `-CXXThisExpr 0x5628f18b7a38 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5628f18b7c00 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5628f18b7be0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5628f18b7a88 <col:10> 'unsigned char *' lvalue ->_data 0x5628f18ade68
|   |     | `-CXXThisExpr 0x5628f18b7a78 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5628f18b7bc8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5628f18b7ba8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5628f18b7ac8 <col:18> 'unsigned char *' lvalue ->_tail 0x5628f18aded0
|   |         | `-CXXThisExpr 0x5628f18b7ab8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5628f18b7b90 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5628f18b7b70 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5628f18b7b08 <col:26> 'unsigned char *' lvalue ->_end 0x5628f18adf38
|   |             | `-CXXThisExpr 0x5628f18b7af8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5628f18b7b58 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5628f18b7b38 <col:33> 'int' 0
|   `-BinaryOperator 0x5628f18b7cb0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5628f18b7c48 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5628f18adff8
|     | `-CXXThisExpr 0x5628f18b7c38 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5628f18b7c98 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5628f18b7c78 <col:16> 'int' 0
|-CXXMethodDecl 0x5628f189e1b0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5628f189e120 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f189e258 <col:20>
| |-OptimizeNoneAttr 0x5628f189e2b0 <col:30>
| `-WarnUnusedResultAttr 0x5628f189e2d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5628f189e3a8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5628f189e318 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f189e450 <col:20>
| |-OptimizeNoneAttr 0x5628f189e4a8 <col:30>
| `-WarnUnusedResultAttr 0x5628f189e4d0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5628f189e608 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5628f189e510 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5628f189e6b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5628f189e7b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5628f189e720 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f189e858 <col:20>
| `-OptimizeNoneAttr 0x5628f189e8b0 <col:30>
|-CXXMethodDecl 0x5628f189e978 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5628f189e8e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5628f189ea20 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5628f189eb20 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5628f189ea90 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5628f189ebc8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5628f189ecc8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5628f189ec38 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f189ed70 <col:20>
| `-OptimizeNoneAttr 0x5628f189edc8 <col:30>
|-CXXMethodDecl 0x5628f189ef58 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5628f189ee08 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5628f189ee80 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5628f18b74c8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5628f189f008 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5628f189f208 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5628f189f080 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5628f189f0f8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f189f418 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5628f189f2c8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5628f189f340 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f189f628 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5628f189f4d8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5628f189f558 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5628f18b74d8 <col:39> 'int' 0
|-CXXMethodDecl 0x5628f189f6f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5628f189f7c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5628f189f888 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5628f189f948 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f189fa10 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5628f189fb58 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5628f189fac8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5628f189fd28 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5628f189fc18 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5628f189fc90 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f189fdf8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5628f189feb8 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x5628f189ff58 <col:20>
| `-OptimizeNoneAttr 0x5628f189ffb0 <col:30>
|-CXXMethodDecl 0x5628f18a0000 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5628f18a00a0 <col:20>
| `-OptimizeNoneAttr 0x5628f18a00f8 <col:30>
|-CXXMethodDecl 0x5628f18a0148 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5628f18a0208 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f18a02d0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5628f18a0370 <col:20>
| `-OptimizeNoneAttr 0x5628f18a03c8 <col:30>
|-CXXMethodDecl 0x5628f18a0518 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5628f18a0408 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5628f18a0480 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f18a0668 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5628f18a05d8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f18a0740 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5628f18a0800 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5628f18a08a0 <col:20>
| `-OptimizeNoneAttr 0x5628f18a08f8 <col:30>
|-CXXMethodDecl 0x5628f18a0948 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5628f18a09e8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a0a40 <col:30>
|-CXXMethodDecl 0x5628f18a0a90 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5628f18a0b58 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5628f18a0bf8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a0c50 <col:30>
|-CXXMethodDecl 0x5628f18a0c98 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5628f18a0db8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5628f18a0f28 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5628f18a0e68 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5628f18a1018 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5628f18a10b8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1110 <col:30>
|-CXXMethodDecl 0x5628f18a1160 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5628f18a1220 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f18a1458 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5628f18a12d0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5628f18a1348 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f18a1508 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1560 <col:30>
|-CXXMethodDecl 0x5628f18a1608 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5628f18a16a8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1700 <col:30>
|-CXXMethodDecl 0x5628f18a1750 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5628f18a17f0 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1848 <col:30>
|-CXXMethodDecl 0x5628f18a1890 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5628f18a1930 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1988 <col:30>
|-CXXMethodDecl 0x5628f18a1a88 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5628f18a19c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5628f18a1b30 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1b88 <col:30>
|-CXXMethodDecl 0x5628f18a1d48 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5628f18a1bc0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5628f18a1c38 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f18a1df8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a1e50 <col:30>
|-CXXMethodDecl 0x5628f18a1ef8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5628f18a2018 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5628f18a2138 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5628f18a21d8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5628f18a2200 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5628f18a2328 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5628f18a23c8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a2420 <col:30>
|-CXXMethodDecl 0x5628f18a24c8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5628f18a2568 <col:20>
| `-OptimizeNoneAttr 0x5628f18a25c0 <col:30>
|-AccessSpecDecl 0x5628f18a25e8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5628f18a2610 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5628f18a2710 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5628f18a2760 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18a26f0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5628f18a26d0 <col:14> 'int' 48
|-CXXMethodDecl 0x5628f18a27c8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5628f18a2868 <col:20>
| `-OptimizeNoneAttr 0x5628f18a28c0 <col:30>
|-CXXMethodDecl 0x5628f18a2938 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5628f18a29d8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a2a30 <col:30>
|-CXXMethodDecl 0x5628f18a2af8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5628f18a2a68 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5628f18a2c98 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5628f18a2e38 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5628f18a2d48 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5628f18a2ee0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5628f18a2fe0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5628f18a3390 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a2fc0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5628f18a2fa0 <col:9> 'int' 0
| |-EnumConstantDecl 0x5628f18a3070 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5628f18a33a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a3050 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5628f18a3030 <col:14> 'int' 1
| |-EnumConstantDecl 0x5628f18a3100 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5628f18a33c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a30e0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5628f18a30c0 <col:14> 'int' 2
| |-EnumConstantDecl 0x5628f18a3190 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5628f18a33d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a3170 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5628f18a3150 <col:14> 'int' 3
| |-EnumConstantDecl 0x5628f18a3220 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5628f18a33f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a3200 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5628f18a31e0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5628f18a32b0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5628f18a3408 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a3290 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5628f18a3270 <col:13> 'int' 5
| `-EnumConstantDecl 0x5628f18a3340 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5628f18a3420 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18a3320 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5628f18a3300 <col:14> 'int' 6
|-CXXMethodDecl 0x5628f18a3488 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5628f18a3528 <col:20>
| `-OptimizeNoneAttr 0x5628f18a3580 <col:30>
|-CXXMethodDecl 0x5628f18a3678 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5628f18a35b8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5628f18a3720 <col:20>
| `-OptimizeNoneAttr 0x5628f18a3778 <col:30>
|-CXXMethodDecl 0x5628f18a37e8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5628f18a3910 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5628f18a3a88 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5628f18a39c0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5628f18a3b50 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5628f18a3c18 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5628f18a3d58 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5628f18a3cc8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5628f18a3e00 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5628f18a3f00 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5628f18a4100 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a3ee0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5628f18a3ec0 <col:23> 'int' 0
| |-EnumConstantDecl 0x5628f18a3f90 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5628f18a4118 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a3f70 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5628f18a3f50 <col:45> 'int' 4
| |-EnumConstantDecl 0x5628f18a4020 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5628f18a4130 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a4000 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5628f18a3fe0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5628f18a40b0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5628f18a4148 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18a4090 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5628f18a4070 <col:47> 'int' 16
|-CXXMethodDecl 0x5628f18a41a8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5628f18a4318 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5628f18a4258 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5628f18a43c0 <col:20>
| `-OptimizeNoneAttr 0x5628f18a4418 <col:30>
|-CXXMethodDecl 0x5628f18a4468 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5628f18b7df0 <col:18, col:36>
|   `-ReturnStmt 0x5628f18b7de0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5628f18b7dc8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5628f18b7da8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5628f18b7d78 <col:27> '<bound member function type>' ->xanno 0x5628f18a24c8
|           `-CXXThisExpr 0x5628f18b7d68 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5628f18a4560 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5628f18b7f00 <col:30, col:48>
|   `-ReturnStmt 0x5628f18b7ef0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5628f18b7ed8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5628f18b7eb8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5628f18b7e88 <col:39> '<bound member function type>' ->xanno 0x5628f18a2328
|           `-CXXThisExpr 0x5628f18b7e78 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5628f18a4648 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5628f18b8098 <col:24, col:50>
|   `-ReturnStmt 0x5628f18b8088 <col:26, col:47>
|     `-UnaryOperator 0x5628f18b8070 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5628f18b8050 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5628f18b8038 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5628f18b7fe8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5628f18ad308
|         |   `-CXXMemberCallExpr 0x5628f18b7fc8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5628f18b7f98 <col:34> '<bound member function type>' ->xanno 0x5628f18a24c8
|         |       `-CXXThisExpr 0x5628f18b7f88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5628f18b8018 <col:46> 'int' 0
|-CXXMethodDecl 0x5628f18a4750 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5628f18b8268 <col:36, col:62>
|   `-ReturnStmt 0x5628f18b8258 <col:38, col:59>
|     `-UnaryOperator 0x5628f18b8240 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5628f18b8220 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5628f18b8208 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5628f18b8180 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5628f18ad308
|         |   `-CXXMemberCallExpr 0x5628f18b8160 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5628f18b8130 <col:46> '<bound member function type>' ->xanno 0x5628f18a2328
|         |       `-CXXThisExpr 0x5628f18b8120 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5628f18b81b0 <col:58> 'int' 0
|-CXXMethodDecl 0x5628f18a4868 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5628f18b8400 <col:26, col:53>
|   `-ReturnStmt 0x5628f18b83f0 <col:28, col:50>
|     `-UnaryOperator 0x5628f18b83d8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5628f18b83b8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5628f18b83a0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5628f18b8350 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5628f18ad608
|         |   `-CXXMemberCallExpr 0x5628f18b8330 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5628f18b8300 <col:36> '<bound member function type>' ->xanno 0x5628f18a24c8
|         |       `-CXXThisExpr 0x5628f18b82f0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5628f18b8380 <col:49> 'int' 0
|-CXXMethodDecl 0x5628f18a4988 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5628f18b85d8 <col:38, col:65>
|   `-ReturnStmt 0x5628f18b85c8 <col:40, col:62>
|     `-UnaryOperator 0x5628f18b85b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5628f18b8590 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5628f18b8578 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5628f18b84e8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5628f18ad608
|         |   `-CXXMemberCallExpr 0x5628f18b84c8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5628f18b8498 <col:48> '<bound member function type>' ->xanno 0x5628f18a2328
|         |       `-CXXThisExpr 0x5628f18b8488 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5628f18b8518 <col:61> 'int' 0
|-CXXMethodDecl 0x5628f18a4b38 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5628f18a4a40 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5628f18b8ca8 <col:34, line:463:5>
|   |-ParenExpr 0x5628f18b8af0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5628f18b8ac0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18b8728 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18b86f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18b8648 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18b8630 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18b85f0 <col:23> 'int' lvalue ParmVar 0x5628f18a4a40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18b8610 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18b86d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18b86a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18b8668 <col:33> 'int' lvalue ParmVar 0x5628f18a4a40 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5628f18b86c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5628f18b8688 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5628f18b8788 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18b8768 <col:56> 'int' 0
|   |   `-CallExpr 0x5628f18b8a20 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5628f18b8a08 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18b89e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18b8a60 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b8878 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5628f18b8a78 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b88a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18b8a90 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18b88e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5628f18b8aa8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18b89d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18b89b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18b8978 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5628f18b8c98 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5628f18b8c80 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5628f18b8c60 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5628f18b8c30 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5628f18b8be0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5628f18ad308
|         |   `-CXXMemberCallExpr 0x5628f18b8bc0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5628f18b8b90 <col:9> '<bound member function type>' ->xanno 0x5628f18a2328
|         |       `-CXXThisExpr 0x5628f18b8b80 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5628f18b8c48 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5628f18b8c10 <col:21> 'int' lvalue ParmVar 0x5628f18a4a40 'i' 'int'
|-CXXMethodDecl 0x5628f18a4d88 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5628f18a4bf8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5628f18a4c70 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5628f18b9338 <col:40, line:472:5>
|   |-ParenExpr 0x5628f18b9150 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5628f18b9120 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18b8e00 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18b8dd0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18b8d20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18b8d08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18b8cc8 <col:23> 'int' lvalue ParmVar 0x5628f18a4bf8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18b8ce8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18b8db0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18b8d80 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18b8d40 <col:33> 'int' lvalue ParmVar 0x5628f18a4bf8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5628f18b8d98 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5628f18b8d60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5628f18b8e60 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18b8e40 <col:56> 'int' 0
|   |   `-CallExpr 0x5628f18b9080 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5628f18b9068 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18b9048 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18b90c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b8ed0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5628f18b90d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b8f00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18b90f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18b8f38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5628f18b9108 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18b9030 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18b9018 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18b8fd8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5628f18b9318 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5628f18b92c0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5628f18b9290 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5628f18b9240 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5628f18ad308
|     | |   `-CXXMemberCallExpr 0x5628f18b9220 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5628f18b91f0 <col:2> '<bound member function type>' ->xanno 0x5628f18a24c8
|     | |       `-CXXThisExpr 0x5628f18b91e0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5628f18b92a8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5628f18b9270 <col:14> 'int' lvalue ParmVar 0x5628f18a4bf8 'i' 'int'
|     `-ImplicitCastExpr 0x5628f18b9300 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18b92e0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5628f18a4c70 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5628f18a4f48 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5628f18a4e50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5628f18b9ab8 <col:36, line:485:5>
|   |-ParenExpr 0x5628f18b9820 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18b97f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18b94d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18b94a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18b93b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18b9398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18b9358 <col:23> 'int' lvalue ParmVar 0x5628f18a4e50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18b9378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18b9480 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18b9468 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18b93d0 <col:33> 'int' lvalue ParmVar 0x5628f18a4e50 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18b9448 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18b9430 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18b93f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18b9410 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5628f18b9530 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18b9510 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18b9750 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18b9738 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18b9718 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18b9790 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b95a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5628f18b97a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b95d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18b97c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18b9610 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5628f18b97d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18b9700 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18b96e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18b96a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5628f18b9aa8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5628f18b9a90 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5628f18b9a78 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5628f18b9a48 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5628f18b99e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5628f18b99b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5628f18b9930 <col:61, col:70> 'char const[48]' lvalue ->c 0x5628f18ad1e0
|             |   `-CXXMemberCallExpr 0x5628f18b9910 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5628f18b98e0 <col:61> '<bound member function type>' ->xanno 0x5628f18a2328
|             |       `-CXXThisExpr 0x5628f18b98d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5628f18b99d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5628f18b9960 <col:74> 'int' lvalue ParmVar 0x5628f18a4e50 'i' 'int'
|-CXXMethodDecl 0x5628f18a5198 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5628f18a5008 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5628f18a5080 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5628f18ba208 <col:42, line:500:5>
|   |-ParenExpr 0x5628f18b9fa0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18b9f70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18b9c50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18b9c20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18b9b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18b9b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18b9ad8 <col:23> 'int' lvalue ParmVar 0x5628f18a5008 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18b9af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18b9c00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18b9be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18b9b50 <col:33> 'int' lvalue ParmVar 0x5628f18a5008 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18b9bc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18b9bb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18b9b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18b9b90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5628f18b9cb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18b9c90 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18b9ed0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18b9eb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18b9e98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18b9f10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b9d20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5628f18b9f28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18b9d58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18b9f40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18b9d90 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5628f18b9f58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18b9e80 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18b9e68 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18b9e28 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5628f18ba1e8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5628f18ba198 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5628f18ba168 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5628f18ba110 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5628f18ba0e0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5628f18ba090 <col:48, col:57> 'char [48]' lvalue ->c 0x5628f18ad1e0
|     |     |   `-CXXMemberCallExpr 0x5628f18ba070 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5628f18ba040 <col:48> '<bound member function type>' ->xanno 0x5628f18a24c8
|     |     |       `-CXXThisExpr 0x5628f18ba030 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5628f18ba0f8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5628f18ba0c0 <col:61> 'int' lvalue ParmVar 0x5628f18a5008 'i' 'int'
|     `-ImplicitCastExpr 0x5628f18ba1d0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18ba1b0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5628f18a5080 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5628f18a5358 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5628f18a5260 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5628f18ba968 <col:35, line:513:5>
|   |-ParenExpr 0x5628f18ba678 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18ba648 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18ba3a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18ba370 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18ba280 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18ba268 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18ba228 <col:23> 'int' lvalue ParmVar 0x5628f18a5260 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18ba248 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18ba350 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18ba338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18ba2a0 <col:33> 'int' lvalue ParmVar 0x5628f18a5260 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18ba318 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18ba300 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18ba2c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18ba2e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5628f18ba400 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18ba3e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18ba5a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18ba590 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18ba570 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18ba5e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18ba470 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5628f18ba600 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18ba4a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18ba618 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18ba4e0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5628f18ba630 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18ba558 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18ba540 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18ba500 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5628f18ba958 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5628f18ba940 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5628f18ba928 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5628f18ba8f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5628f18ba870 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5628f18ba840 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5628f18ba7f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5628f18ad1e0
|             |   `-CXXMemberCallExpr 0x5628f18ba7d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5628f18ba7a0 <col:60> '<bound member function type>' ->xanno 0x5628f18a2328
|             |       `-CXXThisExpr 0x5628f18ba790 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5628f18ba858 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5628f18ba820 <col:73> 'int' lvalue ParmVar 0x5628f18a5260 'i' 'int'
|-CXXMethodDecl 0x5628f18a55a8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5628f18a5418 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5628f18a5490 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5628f18bb088 <col:41, line:528:5>
|   |-ParenExpr 0x5628f18bae10 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18bade0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bab00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18baad0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18ba9e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18ba9c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18ba988 <col:23> 'int' lvalue ParmVar 0x5628f18a5418 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18ba9a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18baab0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18baa98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18baa00 <col:33> 'int' lvalue ParmVar 0x5628f18a5418 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18baa78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18baa60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18baa20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18baa40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5628f18bab60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bab40 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18bad40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bad28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bad08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bad80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18babd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5628f18bad98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bac08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18badb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bac40 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5628f18badc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bacf0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bacd8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bac98 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5628f18bb068 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5628f18bb018 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5628f18bafe8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5628f18baf90 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5628f18baf50 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5628f18baf00 <col:47, col:56> 'char [48]' lvalue ->c 0x5628f18ad1e0
|     |     |   `-CXXMemberCallExpr 0x5628f18baee0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5628f18baeb0 <col:47> '<bound member function type>' ->xanno 0x5628f18a24c8
|     |     |       `-CXXThisExpr 0x5628f18baea0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5628f18baf68 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5628f18baf30 <col:60> 'int' lvalue ParmVar 0x5628f18a5418 'i' 'int'
|     `-ImplicitCastExpr 0x5628f18bb050 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18bb030 <col:65> 'int16_t':'short' lvalue ParmVar 0x5628f18a5490 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5628f18a5768 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5628f18a5670 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5628f18bb758 <col:36, line:541:5>
|   |-ParenExpr 0x5628f18bb4f8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18bb4c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bb220 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bb1f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bb100 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bb0e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bb0a8 <col:23> 'int' lvalue ParmVar 0x5628f18a5670 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bb0c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bb1d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18bb1b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bb120 <col:33> 'int' lvalue ParmVar 0x5628f18a5670 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bb198 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bb180 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bb140 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18bb160 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5628f18bb280 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bb260 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18bb428 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bb410 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bb3f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bb468 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bb2f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5628f18bb480 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bb328 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18bb498 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bb360 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5628f18bb4b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bb3d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bb3c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bb380 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5628f18bb748 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5628f18bb730 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5628f18bb718 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5628f18bb6e8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5628f18bb690 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5628f18bb660 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5628f18bb610 <col:61, col:70> 'char const[48]' lvalue ->c 0x5628f18ad1e0
|             |   `-CXXMemberCallExpr 0x5628f18bb5f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5628f18bb5c0 <col:61> '<bound member function type>' ->xanno 0x5628f18a2328
|             |       `-CXXThisExpr 0x5628f18bb5b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5628f18bb678 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5628f18bb640 <col:74> 'int' lvalue ParmVar 0x5628f18a5670 'i' 'int'
|-CXXMethodDecl 0x5628f18a5938 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5628f18a5828 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5628f18a58a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5628f18a59e8 <col:20>
| `-OptimizeNoneAttr 0x5628f18a5a40 <col:30>
|-CXXMethodDecl 0x5628f18a5b78 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5628f18a5a80 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5628f18bbe28 <col:35, line:562:5>
|   |-ParenExpr 0x5628f18bbbc8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18bbb98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bb8f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bb8c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bb7d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bb7b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bb778 <col:23> 'int' lvalue ParmVar 0x5628f18a5a80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bb798 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bb8a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18bb888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bb7f0 <col:33> 'int' lvalue ParmVar 0x5628f18a5a80 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bb868 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bb850 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bb810 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18bb830 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5628f18bb950 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bb930 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18bbaf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bbae0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bbac0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bbb38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bb9c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5628f18bbb50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bb9f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18bbb68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bba30 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5628f18bbb80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bbaa8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bba90 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bba50 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5628f18bbe18 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5628f18bbe00 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5628f18bbde8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5628f18bbdb8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5628f18bbd60 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5628f18bbd30 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5628f18bbce0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5628f18ad1e0
|             |   `-CXXMemberCallExpr 0x5628f18bbcc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5628f18bbc90 <col:60> '<bound member function type>' ->xanno 0x5628f18a2328
|             |       `-CXXThisExpr 0x5628f18bbc80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5628f18bbd48 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5628f18bbd10 <col:73> 'int' lvalue ParmVar 0x5628f18a5a80 'i' 'int'
|-CXXMethodDecl 0x5628f18a5d88 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5628f18a5c38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5628f18a5cb0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5628f18bc508 <col:41, line:577:5>
|   |-ParenExpr 0x5628f18bc298 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18bc268 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bbfc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bbf90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bbea0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bbe88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bbe48 <col:23> 'int' lvalue ParmVar 0x5628f18a5c38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bbe68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bbf70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18bbf58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bbec0 <col:33> 'int' lvalue ParmVar 0x5628f18a5c38 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bbf38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bbf20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bbee0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18bbf00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5628f18bc020 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bc000 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18bc1c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bc1b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bc190 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bc208 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bc090 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5628f18bc220 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bc0c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18bc238 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bc100 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5628f18bc250 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bc178 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bc160 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bc120 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5628f18bc4e8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5628f18bc498 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5628f18bc468 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5628f18bc408 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5628f18bc3d8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5628f18bc388 <col:47, col:56> 'char [48]' lvalue ->c 0x5628f18ad1e0
|     |     |   `-CXXMemberCallExpr 0x5628f18bc368 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5628f18bc338 <col:47> '<bound member function type>' ->xanno 0x5628f18a24c8
|     |     |       `-CXXThisExpr 0x5628f18bc328 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5628f18bc3f0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5628f18bc3b8 <col:60> 'int' lvalue ParmVar 0x5628f18a5c38 'i' 'int'
|     `-ImplicitCastExpr 0x5628f18bc4d0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18bc4b0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5628f18a5cb0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5628f18a5f48 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5628f18a5e50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5628f18bcc38 <col:36, line:591:5>
|   |-ParenExpr 0x5628f18bc978 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18bc948 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bc6a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bc670 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bc580 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bc568 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bc528 <col:23> 'int' lvalue ParmVar 0x5628f18a5e50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bc548 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bc650 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18bc638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bc5a0 <col:33> 'int' lvalue ParmVar 0x5628f18a5e50 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bc618 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bc600 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bc5c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18bc5e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5628f18bc700 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bc6e0 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18bc8a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bc890 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bc870 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bc8e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bc770 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5628f18bc900 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bc7a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18bc918 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bc7e0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5628f18bc930 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bc858 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bc840 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bc800 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5628f18bcc28 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5628f18bcc10 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5628f18bcbf8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5628f18bcbc8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5628f18bcb40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5628f18bcb10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5628f18bcac0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5628f18ad1e0
|             |   `-CXXMemberCallExpr 0x5628f18bcaa0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5628f18bca70 <col:61> '<bound member function type>' ->xanno 0x5628f18a2328
|             |       `-CXXThisExpr 0x5628f18bca60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5628f18bcb28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5628f18bcaf0 <col:74> 'int' lvalue ParmVar 0x5628f18a5e50 'i' 'int'
|-CXXMethodDecl 0x5628f18a6198 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5628f18a6008 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5628f18a6080 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5628f18bd318 <col:42, line:606:5>
|   |-ParenExpr 0x5628f18bd0a8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5628f18bd078 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bcdd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bcda0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bccb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bcc98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bcc58 <col:23> 'int' lvalue ParmVar 0x5628f18a6008 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bcc78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bcd80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5628f18bcd68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bccd0 <col:33> 'int' lvalue ParmVar 0x5628f18a6008 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bcd48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bcd30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bccf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5628f18bcd10 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5628f18bce30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bce10 <col:60> 'int' 0
|   |   `-CallExpr 0x5628f18bcfd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bcfc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bcfa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bd018 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bcea0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5628f18bd030 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bced8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18bd048 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bcf10 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5628f18bd060 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bcf88 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bcf70 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bcf30 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5628f18bd2f8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5628f18bd2a8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5628f18bd278 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5628f18bd218 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5628f18bd1e8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5628f18bd198 <col:48, col:57> 'char [48]' lvalue ->c 0x5628f18ad1e0
|     |     |   `-CXXMemberCallExpr 0x5628f18bd178 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5628f18bd148 <col:48> '<bound member function type>' ->xanno 0x5628f18a24c8
|     |     |       `-CXXThisExpr 0x5628f18bd138 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5628f18bd200 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5628f18bd1c8 <col:61> 'int' lvalue ParmVar 0x5628f18a6008 'i' 'int'
|     `-ImplicitCastExpr 0x5628f18bd2e0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5628f18bd2c0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5628f18a6080 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5628f18a6330 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5628f18a6260 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5628f18bdb88 <col:33, line:620:5>
|   |-ParenExpr 0x5628f18bd900 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5628f18bd8d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bd520 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bd4f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bd390 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bd378 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bd338 <col:23> 'int' lvalue ParmVar 0x5628f18a6260 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bd358 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bd4d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5628f18bd4b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bd3b0 <col:33> 'int' lvalue ParmVar 0x5628f18a6260 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bd498 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bd480 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bd3d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5628f18bd458 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5628f18bd440 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5628f18bd408 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5628f18bd580 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bd560 <col:79> 'int' 0
|   |   `-CallExpr 0x5628f18bd830 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5628f18bd818 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bd7f8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18bd870 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bd668 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5628f18bd888 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bd6b0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18bd8a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bd6e8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5628f18bd8b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bd7e0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bd7c8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bd788 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5628f18bdb78 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5628f18bdb60 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5628f18bdb48 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5628f18bdb18 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5628f18bda90 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5628f18bda60 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5628f18bda10 <col:67, col:76> 'char const[48]' lvalue ->c 0x5628f18ad1e0
|             |   `-CXXMemberCallExpr 0x5628f18bd9f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5628f18bd9c0 <col:67> '<bound member function type>' ->xanno 0x5628f18a2328
|             |       `-CXXThisExpr 0x5628f18bd9b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5628f18bda78 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5628f18bda40 <col:80> 'int' lvalue ParmVar 0x5628f18a6260 'i' 'int'
|-CXXMethodDecl 0x5628f18a6548 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5628f18a63f0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5628f18a6470 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5628f18be3b0 <col:45, line:635:5>
|   |-ParenExpr 0x5628f18be0f8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5628f18be0c8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5628f18bdd90 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5628f18bdd60 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5628f18bdc00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5628f18bdbe8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5628f18bdba8 <col:23> 'int' lvalue ParmVar 0x5628f18a63f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5628f18bdbc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5628f18bdd40 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5628f18bdd28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5628f18bdc20 <col:33> 'int' lvalue ParmVar 0x5628f18a63f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5628f18bdd08 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5628f18bdcf0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5628f18bdc40 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5628f18a2710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5628f18bdcc8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5628f18bdcb0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5628f18bdc78 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5628f18bddf0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5628f18bddd0 <col:79> 'int' 0
|   |   `-CallExpr 0x5628f18be028 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5628f18be010 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5628f18bdff0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5628f18be068 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bde60 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5628f18be080 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5628f18bdea8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5628f18be098 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5628f18bdee0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5628f18be0b0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5628f18bdfd8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5628f18bdfc0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5628f18bdf78 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5628f18be390 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5628f18be2f8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5628f18be2c8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5628f18be268 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5628f18be238 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5628f18be1e8 <col:54, col:63> 'char [48]' lvalue ->c 0x5628f18ad1e0
|     |     |   `-CXXMemberCallExpr 0x5628f18be1c8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5628f18be198 <col:54> '<bound member function type>' ->xanno 0x5628f18a24c8
|     |     |       `-CXXThisExpr 0x5628f18be188 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5628f18be250 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5628f18be218 <col:67> 'int' lvalue ParmVar 0x5628f18a63f0 'i' 'int'
|     `-CXXConstCastExpr 0x5628f18be360 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5628f18be348 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5628f18be310 <col:91> 'const void *' lvalue ParmVar 0x5628f18a6470 'x' 'const void *'
|-CXXMethodDecl 0x5628f18a6618 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5628f18be438 <col:34, line:640:5>
|   `-ReturnStmt 0x5628f18be428 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5628f18be410 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5628f18be3e0 <col:16> 'Packet *' lvalue ->_data_packet 0x5628f18add98
|         `-CXXThisExpr 0x5628f18be3d0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5628f18a6758 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5628f18a66c8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5628f18b74f8 <col:46> 'bool' true
|-CXXMethodDecl 0x5628f18a68d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5628f18a6810 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5628f18a6980 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5628f18a7130 <line:660:22> "" ""
| |-EnumConstantDecl 0x5628f18a6a80 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a71a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6a60 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5628f18a6a40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5628f189bbe0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5628f18a6b10 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a71b8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6af0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5628f18a6ad0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5628f189bc70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5628f18a6ba0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a71d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6b80 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5628f18a6b60 <col:21> 'int' 0
| |-EnumConstantDecl 0x5628f18a6c30 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a71e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6c10 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5628f18a6bf0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5628f18a6cc0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a7200 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6ca0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5628f18a6c80 <col:21> 'int' 16
| |-EnumConstantDecl 0x5628f18a6d50 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a7218 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6d30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5628f18a6d10 <col:19> 'int' 32
| |-EnumConstantDecl 0x5628f18a6de0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a7230 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6dc0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5628f18a6da0 <col:19> 'int' EnumConstant 0x5628f18a6c30 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5628f18a6e70 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a7248 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6e50 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5628f18a6e30 <col:19> 'int' EnumConstant 0x5628f18a6d50 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5628f18a6f40 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a7260 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6f20 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5628f18a6f00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5628f18a6ec0 <col:23> 'int' EnumConstant 0x5628f18a6e70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5628f18a6ee0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5628f18a7010 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5628f18a7278 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5628f18a6ff0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5628f18a6fd0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5628f18a6f90 <col:23> 'int' EnumConstant 0x5628f18a6e70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5628f18a6fb0 <col:40> 'int' 4
| `-EnumConstantDecl 0x5628f18a70e0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5628f18a7290 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f18a70c0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5628f18a70a0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5628f18a7060 <col:23> 'int' EnumConstant 0x5628f18a6e70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5628f18a7080 <col:40> 'int' 8
|-CXXMethodDecl 0x5628f18a72d0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5628f18a7370 <col:68> "" ""
|-CXXMethodDecl 0x5628f18a7408 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5628f18a74a8 <col:45> "" ""
|-CXXMethodDecl 0x5628f18a7540 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5628f18a75e0 <col:57> "" ""
|-CXXMethodDecl 0x5628f18a7678 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5628f18a7718 <col:45> "" ""
|-CXXMethodDecl 0x5628f18a77b0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5628f18a7850 <col:57> "" ""
|-CXXMethodDecl 0x5628f18a78e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5628f18a7980 <col:51> "" ""
|-CXXMethodDecl 0x5628f18a7a10 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5628f18a7ab0 <col:63> "" ""
|-CXXMethodDecl 0x5628f18a7b40 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5628f18a7be0 <col:53> "" ""
|-CXXMethodDecl 0x5628f18a7c70 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5628f18a7d10 <col:65> "" ""
|-CXXMethodDecl 0x5628f18a7e28 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5628f18a7d98 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5628f18a7ed0 <col:61> "" ""
|-CXXMethodDecl 0x5628f18a8068 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5628f18a7f58 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5628f18a7fd0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5628f18a8118 <col:67> "" ""
|-CXXMethodDecl 0x5628f18a8230 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5628f18a81a0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5628f18a82d8 <col:63> "" ""
|-CXXMethodDecl 0x5628f18a8470 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5628f18a8360 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5628f18a83d8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5628f18a8520 <col:69> "" ""
|-CXXMethodDecl 0x5628f18a8638 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5628f18a85a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5628f18a86e0 <col:63> "" ""
|-CXXMethodDecl 0x5628f18aadb8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5628f18aaca8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5628f18aad20 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5628f18aae68 <col:69> "" ""
|-CXXMethodDecl 0x5628f18aaf80 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5628f18aaef0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5628f18ab028 <col:62> "" ""
|-CXXMethodDecl 0x5628f18ab1c0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5628f18ab0b0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5628f18ab128 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5628f18ab270 <col:68> "" ""
|-CXXMethodDecl 0x5628f18ab388 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5628f18ab2f8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5628f18ab430 <col:63> "" ""
|-CXXMethodDecl 0x5628f18ab5c8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5628f18ab4b8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5628f18ab530 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5628f18ab678 <col:69> "" ""
|-CXXMethodDecl 0x5628f18ab708 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5628f18ab7a8 <col:64> "" ""
|-CXXMethodDecl 0x5628f18ab838 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5628f18ab8d8 <col:52> "" ""
|-CXXMethodDecl 0x5628f18ab968 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5628f18aba08 <col:67> "" ""
|-CXXMethodDecl 0x5628f18aba98 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5628f18abb38 <col:55> "" ""
|-CXXMethodDecl 0x5628f18abc50 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5628f18abbc0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5628f18abcf8 <col:58> "" ""
|-CXXMethodDecl 0x5628f18abe90 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5628f18abd80 <col:33> col:36 'int'
| |-ParmVarDecl 0x5628f18abdf8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5628f18abf40 <col:62> "" ""
|-CXXMethodDecl 0x5628f18ac058 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5628f18abfc8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5628f18ac100 <col:58> "" ""
|-CXXMethodDecl 0x5628f18ac298 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5628f18ac188 <col:33> col:36 'int'
| |-ParmVarDecl 0x5628f18ac200 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5628f18ac348 <col:62> "" ""
|-CXXMethodDecl 0x5628f18ac460 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5628f18ac3d0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5628f18ac508 <col:60> "" ""
|-CXXMethodDecl 0x5628f18ac6a0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5628f18ac590 <col:34> col:37 'int'
| |-ParmVarDecl 0x5628f18ac608 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5628f18ac750 <col:64> "" ""
|-CXXMethodDecl 0x5628f18ac868 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5628f18ac7d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5628f18ac910 <col:58> "" ""
|-CXXMethodDecl 0x5628f18acaa8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5628f18ac998 <col:33> col:36 'int'
| |-ParmVarDecl 0x5628f18aca10 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5628f18acb58 <col:62> "" ""
|-CXXMethodDecl 0x5628f18acc70 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5628f18acbe0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5628f18acd18 <col:59> "" ""
|-CXXMethodDecl 0x5628f18aceb0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5628f18acda0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5628f18ace18 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5628f18acf60 <col:63> "" ""
|-AccessSpecDecl 0x5628f18acfd0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5628f18acff8 prev 0x5628f18a2200 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5628f18ad0f0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5628f18ad1e0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5628f18ad308 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5628f18ad488 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5628f18ad608 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5628f18ad788 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5628f18be5b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5628f18bee28 <col:11>
| |-CXXDestructorDecl 0x5628f18be690 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5628f18be7c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5628f18be7c8
| | `-ParmVarDecl 0x5628f18be8d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5628f18be978 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5628f18be978
| | `-ParmVarDecl 0x5628f18bea88 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5628f18c1848 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5628f18c1958 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5628f18c1bd8 <col:11>
| |   `-ReturnStmt 0x5628f18c1bc8 <col:11>
| |     `-UnaryOperator 0x5628f18c1bb0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5628f18c1ba0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5628f18c19c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5628f18c19c8
|   `-ParmVarDecl 0x5628f18c1ad8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5628f18ad7f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5628f18ad908 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5628f18ad9a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5628f18ada10 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5628f18ada78 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5628f18adae0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5628f18adb40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5628f18adc00 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5628f18adc60 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5628f18adcc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5628f18be4c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5628f18ad9a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5628f18bee38 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5628f18bee90 <col:12>
| |-CXXConstructorDecl 0x5628f18beaf8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5628f18beaf8
| | `-ParmVarDecl 0x5628f18bec08 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5628f18beca8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5628f18beca8
| | `-ParmVarDecl 0x5628f18bedb8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5628f18c0f30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5628f18add38 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5628f18add98 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5628f18ade00 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5628f18ade68 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5628f18aded0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5628f18adf38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5628f18adf98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5628f18adff8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5628f18ae060 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5628f18ae0e8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5628f18add38 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5628f18be460 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5628f18adf98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5628f18beea0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5628f18bef00 <col:21, line:755:5>
|-CXXConstructorDecl 0x5628f18ae288 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5628f18ae1c8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5628f18ae380 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5628f18ae568 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5628f18ae470 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5628f18ae838 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5628f18ae620 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f18ae698 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5628f18ae710 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f18aea58 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5628f18ae908 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5628f18ae980 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5628f18b7038 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5628f18aeb18 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5628f18aeb90 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5628f18aec08 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5628f18b7190 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5628f18b7100 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f18b72d8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5628f18b7248 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5628f18b73d0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f18befa0 prev 0x5628f189b860 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x5628f18bf0d8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x5628f18bf168 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x5628f18bf210 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x5628f18bf2b0 <col:20>
| `-OptimizeNoneAttr 0x5628f18bf308 <col:30>
|-CXXMethodDecl 0x5628f18bf358 <line:781:5, col:66> col:55 used end_data 'unsigned char *() const'
| |-NoInlineAttr 0x5628f18bf3f8 <col:20>
| `-OptimizeNoneAttr 0x5628f18bf450 <col:30>
|-CXXMethodDecl 0x5628f18bf4a0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5628f18bf568 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5628f18bf630 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5628f18bf748 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x5628f18bf810 <line:786:5, col:72> col:55 used network_header 'unsigned char *() const'
| |-NoInlineAttr 0x5628f18bf8b0 <col:20>
| `-OptimizeNoneAttr 0x5628f18bf908 <col:30>
|-CXXMethodDecl 0x5628f18bf978 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x5628f18bfa18 <col:20>
| `-OptimizeNoneAttr 0x5628f18bfa70 <col:30>
|-CXXMethodDecl 0x5628f18bfb18 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x5628f18bfbb8 <col:20>
| `-OptimizeNoneAttr 0x5628f18bfc10 <col:30>
|-CXXMethodDecl 0x5628f18bfc60 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5628f18bfd78 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x5628f18bfe98 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x5628f18bffb8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x5628f18c0080 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x5628f18c0120 <col:62> "" ""
|-AccessSpecDecl 0x5628f18c0190 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x5628f18c01f0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x5628f18c0de8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x5628f18c1010 <col:29, col:31>
|-CXXMethodDecl 0x5628f18c02b8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x5628f18c03f8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x5628f18c0368 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x5628f18c04f0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x5628f18c1020 <col:23, col:25>
|-CXXMethodDecl 0x5628f18c06a8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x5628f18c05e0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x5628f18c0978 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5628f18c0760 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5628f18c07d8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5628f18c0850 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5628f18c0b08 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x5628f18c0a40 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x5628f18c0c00 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x5628f18c0c68 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x5628f18c0c68
  `-ParmVarDecl 0x5628f18c0d78 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f1609538 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5628f1609658 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x5628f1609720 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x5628f16d9cf0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5628f16df008 <col:8>
|-CXXConstructorDecl 0x5628f16d9df8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x5628f16d9df8
| `-ParmVarDecl 0x5628f16d9f08 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x5628f16d9fa8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5628f16da0b8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x5628f1609720 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x5628f16df220 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5628f16df1f0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x5628f1609720
| |     `-CXXStaticCastExpr 0x5628f16df1c0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x5628f16df190 <col:8> 'in_addr' lvalue ParmVar 0x5628f16da0b8 '' 'in_addr &&'
| `-CompoundStmt 0x5628f16df268 <col:8>
`-CXXDestructorDecl 0x5628f16df4a0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f16d19d8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5628f16d1af8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x5628f16d1be0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x5628f16d1bc0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x5628f16d1b88 <col:22> 'int' 4
|-FieldDecl 0x5628f16d1c88 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x5628f16d1c68 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x5628f16d1c30 <col:21> 'int' 4
|-FieldDecl 0x5628f16d1ce8 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x5628f16d1d48 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x5628f16d1da8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x5628f16d1e08 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x5628f16d1e68 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x5628f16d1ec8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x5628f16d1f28 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x5628f16d1f98 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x5628f16d2008 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f16a77f0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5628f16a7908 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5628f16a79a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5628f16a7a08 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5628f16a7a68 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5628f16a7b18 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f16a7e20 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5628f16a7f38 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5628f16a7fe0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5628f16a8048 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5628f16a80d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5628f16ae170 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5628f16ae5a8 <col:12>
|-CXXConstructorDecl 0x5628f16ae278 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5628f16ae388 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5628f16a7fe0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5628f16b0b30 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5628f16b0b00 <col:12> 'const char *const' lvalue .data 0x5628f16a7fe0
| |     `-DeclRefExpr 0x5628f16b0ae0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16ae388 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5628f16a8048 'length' 'int'
| | `-ImplicitCastExpr 0x5628f16b0bc0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5628f16b0b90 <col:12> 'const int' lvalue .length 0x5628f16a8048
| |     `-DeclRefExpr 0x5628f16b0b70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16ae388 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5628f16a80d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5628f16b0c50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5628f16b0c20 <col:12> 'String::memo_t *const' lvalue .memo 0x5628f16a80d8
| |     `-DeclRefExpr 0x5628f16b0c00 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16ae388 '' 'const String::rep_t &'
| `-CompoundStmt 0x5628f16b0ca8 <col:12>
|-CXXConstructorDecl 0x5628f16ae428 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5628f16ae428
| `-ParmVarDecl 0x5628f16ae538 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5628f16b3a90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5628f16bf4a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5628f16bf5b8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5628f16bfad0 <col:12>
|   |-BinaryOperator 0x5628f16bf8e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5628f16bf8a0 <col:12> 'const char *' lvalue ->data 0x5628f16a7fe0
|   | | `-CXXThisExpr 0x5628f16bf890 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5628f16bf8d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5628f16bf860 <col:12> 'const char *const' lvalue .data 0x5628f16a7fe0
|   |     `-DeclRefExpr 0x5628f16bf840 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16bf5b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5628f16bf9b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5628f16bf968 <col:12> 'int' lvalue ->length 0x5628f16a8048
|   | | `-CXXThisExpr 0x5628f16bf958 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5628f16bf998 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5628f16bf928 <col:12> 'const int' lvalue .length 0x5628f16a8048
|   |     `-DeclRefExpr 0x5628f16bf908 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16bf5b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5628f16bfa78 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5628f16bfa30 <col:12> 'String::memo_t *' lvalue ->memo 0x5628f16a80d8
|   | | `-CXXThisExpr 0x5628f16bfa20 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5628f16bfa60 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5628f16bf9f0 <col:12> 'String::memo_t *const' lvalue .memo 0x5628f16a80d8
|   |     `-DeclRefExpr 0x5628f16bf9d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16bf5b8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5628f16bfac0 <col:12>
|     `-UnaryOperator 0x5628f16bfaa8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5628f16bfa98 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5628f16bf628 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5628f16bf628
  `-ParmVarDecl 0x5628f16bf738 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5628f169ed60 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5628f169ee78 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5628f169ef08 <col:16, col:22> col:16 public
|-TypedefDecl 0x5628f169ef48 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5628f1375fd0 'const char *'
|   `-QualType 0x5628f1375521 'const char' const
|     `-BuiltinType 0x5628f1375520 'char'
|-TypedefDecl 0x5628f169efd0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5628f169efa0 'String::const_iterator' sugar
|   |-Typedef 0x5628f169ef48 'const_iterator'
|   `-PointerType 0x5628f1375fd0 'const char *'
|     `-QualType 0x5628f1375521 'const char' const
|       `-BuiltinType 0x5628f1375520 'char'
|-TypedefDecl 0x5628f169f140 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5628f169f0b0 'int (String::*)() const'
|   |-RecordType 0x5628f169edf0 'String'
|   | `-CXXRecord 0x5628f169ed60 'String'
|   `-ParenType 0x5628f169f050 'int () const' sugar
|     `-FunctionProtoType 0x5628f1673bf0 'int () const' const cdecl
|       `-BuiltinType 0x5628f1375580 'int'
|-TypedefDecl 0x5628f169f1a8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5628f14c87d0 'int64_t' sugar
|   |-Typedef 0x5628f13de390 'int64_t'
|   `-TypedefType 0x5628f13b7630 '__int64_t' sugar
|     |-Typedef 0x5628f13b7208 '__int64_t'
|     `-BuiltinType 0x5628f13755a0 'long'
|-TypedefDecl 0x5628f169f210 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5628f14c86f0 'uint64_t' sugar
|   |-Typedef 0x5628f13de530 'uint64_t'
|   `-TypedefType 0x5628f13b76c0 '__uint64_t' sugar
|     |-Typedef 0x5628f13b7278 '__uint64_t'
|     `-BuiltinType 0x5628f1375640 'unsigned long'
|-TypedefDecl 0x5628f169f2a0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5628f169f270 'String::intmax_t' sugar
|   |-Typedef 0x5628f169f1a8 'intmax_t'
|   `-TypedefType 0x5628f14c87d0 'int64_t' sugar
|     |-Typedef 0x5628f13de390 'int64_t'
|     `-TypedefType 0x5628f13b7630 '__int64_t' sugar
|       |-Typedef 0x5628f13b7208 '__int64_t'
|       `-BuiltinType 0x5628f13755a0 'long'
|-TypedefDecl 0x5628f169f330 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5628f169f300 'String::uintmax_t' sugar
|   |-Typedef 0x5628f169f210 'uintmax_t'
|   `-TypedefType 0x5628f14c86f0 'uint64_t' sugar
|     |-Typedef 0x5628f13de530 'uint64_t'
|     `-TypedefType 0x5628f13b76c0 '__uint64_t' sugar
|       |-Typedef 0x5628f13b7278 '__uint64_t'
|       `-BuiltinType 0x5628f1375640 'unsigned long'
|-CXXConstructorDecl 0x5628f169f3f0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5628f169f598 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5628f169f4d8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5628f169f748 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5628f169f688 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5628f169f8a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5628f169f810 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5628f169fab8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5628f169f968 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5628f169f9e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5628f169fcd8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5628f169fb88 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5628f169fc08 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5628f169fef8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5628f169fda8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5628f169fe28 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5628f16a0118 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5628f169ffc8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5628f16a0048 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5628f16a02a8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5628f16a01e0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5628f16a0428 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5628f16a0368 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5628f16a05b8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5628f16a04f0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5628f16a0710 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5628f16a0680 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5628f16a0868 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5628f16a07d8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5628f16a09c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5628f16a0930 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5628f16a0b48 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5628f16a0a88 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5628f16a0cd8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5628f16a0c10 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5628f16a0e68 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5628f16a0da0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5628f16a0ff8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5628f16a0f30 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5628f16a10f0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5628f16a1218 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5628f16a1398 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5628f16a12d0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5628f16a14e8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5628f16a1458 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5628f16a15a0 <col:63> "" ""
|-CXXMethodDecl 0x5628f16a16e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5628f16a1628 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5628f16a18f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5628f16a17a8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5628f16a1828 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5628f16a1b18 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5628f16a19c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5628f16a1a40 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5628f16a1df8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5628f16a1bd8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5628f16a1c58 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5628f16adc40 <col:55> 'int' 10
| `-ParmVarDecl 0x5628f16a1cd0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5628f16adc60 <col:76> 'bool' true
|-CXXMethodDecl 0x5628f16a20d8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5628f16a1ec0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5628f16a1f40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5628f16adc70 <col:56> 'int' 10
| `-ParmVarDecl 0x5628f16a1fb8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5628f16adc90 <col:77> 'bool' true
|-CXXMethodDecl 0x5628f16a21e0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5628f16a22a8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5628f16a2370 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5628f16a2410 <col:20>
| `-OptimizeNoneAttr 0x5628f16a2468 <col:30>
|-CXXConversionDecl 0x5628f16a2558 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5628f16a2628 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5628f16a26e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5628f16a27d8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5628f16a2898 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5628f16a2a18 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5628f16a2950 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5628f16a2b68 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5628f16a2ad8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5628f16a2c58 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5628f16a2d18 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5628f16a2f68 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5628f16a2dd0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5628f16a2e50 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5628f16a31c8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5628f16a3030 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5628f16a30b0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5628f16a3298 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5628f16a34a8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5628f16a3350 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5628f16a33d0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5628f16a36c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5628f16a3570 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5628f16a35f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5628f16a3858 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5628f16a3790 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5628f16a3948 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5628f16a3ab8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5628f16a39f8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5628f16a3cc8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5628f16a3b78 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5628f16a3bf8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5628f16a3ee0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5628f16a3d88 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5628f16a3e00 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5628f16a4070 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5628f16a3fa0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5628f16a4290 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5628f16a4130 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5628f16a41b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5628f16a43e0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5628f16a4350 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5628f16a45b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5628f16a44a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5628f16a4520 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5628f16a4708 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5628f16a4678 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5628f16a4920 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5628f16a47c0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5628f16a4840 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5628f16adca0 <col:39> 'int' 0
|-CXXMethodDecl 0x5628f16a4b40 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5628f16a49e0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5628f16a4a60 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5628f16adcc0 <col:48> 'int' 0
|-CXXMethodDecl 0x5628f16a4d20 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5628f16a4c00 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5628f16a4c80 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5628f16adce0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5628f16a4df0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5628f16a4eb0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5628f16a4f70 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5628f16a5030 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5628f16a50f0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5628f16a5298 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5628f16a51a0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5628f16a5418 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5628f16a5350 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5628f16a55f0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5628f16a54d8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5628f16a5768 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5628f16a56a8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5628f16a58b0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5628f16a5820 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5628f16a5a00 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5628f16a5970 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5628f16a5bd8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5628f16a5ac0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5628f16a5b40 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5628f16a5db8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5628f16a5ca0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5628f16a5d20 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5628f16a5f08 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5628f16a5e78 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5628f16a6118 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5628f16a5fc8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5628f16a6048 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5628f16a6278 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5628f16a61e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5628f16a63d0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5628f16a6338 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5628f16a6478 <col:57> "" ""
|-CXXMethodDecl 0x5628f16a6588 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5628f16a64f8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5628f16a66d8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5628f16a6648 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5628f16a6858 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5628f16a6790 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5628f16a6920 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5628f16a69e0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5628f16a6aa0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5628f16a6b40 <col:49> "" ""
|-CXXMethodDecl 0x5628f16a6bd0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5628f16a6c90 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5628f16a6d80 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5628f16a6e48 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5628f16a6f08 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5628f16a6fc8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5628f16a70c0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5628f16a7188 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5628f16a7250 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5628f16a7428 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5628f16a7308 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5628f16a7388 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5628f16a7650 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5628f16a74f0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5628f16a7570 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5628f16a7760 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5628f16a77c8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5628f16a77f0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5628f16a7908 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5628f16a79a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5628f16a7a08 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5628f16a7a68 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5628f16a7b18 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5628f16a7b80 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5628f16a7db8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5628f16a7e08 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f16a7d98 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5628f16a7ca8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5628f16a7c50 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5628f16a7c90 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5628f16a7c70 <col:32> 'int' 8
|-CXXRecordDecl 0x5628f16a7e20 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5628f16a7f38 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5628f16a7fe0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5628f16a8048 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5628f16a80d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5628f16ae170 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5628f16ae5a8 <col:12>
| |-CXXConstructorDecl 0x5628f16ae278 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5628f16ae388 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5628f16a7fe0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5628f16b0b30 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5628f16b0b00 <col:12> 'const char *const' lvalue .data 0x5628f16a7fe0
| | |     `-DeclRefExpr 0x5628f16b0ae0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16ae388 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5628f16a8048 'length' 'int'
| | | `-ImplicitCastExpr 0x5628f16b0bc0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5628f16b0b90 <col:12> 'const int' lvalue .length 0x5628f16a8048
| | |     `-DeclRefExpr 0x5628f16b0b70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16ae388 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5628f16a80d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5628f16b0c50 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5628f16b0c20 <col:12> 'String::memo_t *const' lvalue .memo 0x5628f16a80d8
| | |     `-DeclRefExpr 0x5628f16b0c00 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16ae388 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5628f16b0ca8 <col:12>
| |-CXXConstructorDecl 0x5628f16ae428 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5628f16ae428
| | `-ParmVarDecl 0x5628f16ae538 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5628f16b3a90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5628f16bf4a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5628f16bf5b8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5628f16bfad0 <col:12>
| |   |-BinaryOperator 0x5628f16bf8e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5628f16bf8a0 <col:12> 'const char *' lvalue ->data 0x5628f16a7fe0
| |   | | `-CXXThisExpr 0x5628f16bf890 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5628f16bf8d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5628f16bf860 <col:12> 'const char *const' lvalue .data 0x5628f16a7fe0
| |   |     `-DeclRefExpr 0x5628f16bf840 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16bf5b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5628f16bf9b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5628f16bf968 <col:12> 'int' lvalue ->length 0x5628f16a8048
| |   | | `-CXXThisExpr 0x5628f16bf958 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5628f16bf998 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5628f16bf928 <col:12> 'const int' lvalue .length 0x5628f16a8048
| |   |     `-DeclRefExpr 0x5628f16bf908 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16bf5b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5628f16bfa78 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5628f16bfa30 <col:12> 'String::memo_t *' lvalue ->memo 0x5628f16a80d8
| |   | | `-CXXThisExpr 0x5628f16bfa20 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5628f16bfa60 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5628f16bf9f0 <col:12> 'String::memo_t *const' lvalue .memo 0x5628f16a80d8
| |   |     `-DeclRefExpr 0x5628f16bf9d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5628f16bf5b8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5628f16bfac0 <col:12>
| |     `-UnaryOperator 0x5628f16bfaa8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5628f16bfa98 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5628f16bf628 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5628f16bf628
|   `-ParmVarDecl 0x5628f16bf738 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5628f16a8150 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5628f16a8398 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5628f16a81b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5628f16a8238 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5628f16a82b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5628f16ae130 <col:79, line:261:5>
|   |-BinaryOperator 0x5628f16adda8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5628f16add40 <col:2, col:5> 'const char *' lvalue .data 0x5628f16a7fe0
|   | | `-MemberExpr 0x5628f16add10 <col:2> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|   | |   `-CXXThisExpr 0x5628f16add00 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5628f16add90 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5628f16add70 <col:12> 'const char *' lvalue ParmVar 0x5628f16a81b8 'data' 'const char *'
|   |-BinaryOperator 0x5628f16ade70 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5628f16ade08 <col:2, col:5> 'int' lvalue .length 0x5628f16a8048
|   | | `-MemberExpr 0x5628f16addd8 <col:2> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|   | |   `-CXXThisExpr 0x5628f16addc8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5628f16ade58 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5628f16ade38 <col:14> 'int' lvalue ParmVar 0x5628f16a8238 'length' 'int'
|   `-IfStmt 0x5628f16ae118 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5628f16adf90 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5628f16adf78 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5628f16adf58 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5628f16adf38 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5628f16aded0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|     |       | `-MemberExpr 0x5628f16adea0 <col:7> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|     |       |   `-CXXThisExpr 0x5628f16ade90 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5628f16adf20 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5628f16adf00 <col:17> 'String::memo_t *' lvalue ParmVar 0x5628f16a82b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5628f16ae0f0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5628f16ae0d8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5628f16adfe0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5628f1696dc8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5628f16ae048 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5628f16a79a8
|         `-ImplicitCastExpr 0x5628f16ae030 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5628f16ae010 <col:27> 'String::memo_t *' lvalue ParmVar 0x5628f16a82b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5628f16a8648 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5628f16a8468 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5628f16a84e8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5628f16a8560 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5628f16a8150 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5628f16ae5b8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5628f16ae748 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5628f16ae6b0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5628f16ae620 <col:2> '<bound member function type>' ->assign_memo 0x5628f16a8398
|     | `-ImplicitCastExpr 0x5628f16ae6e8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5628f16ae610 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5628f16ae700 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5628f16ae650 <col:14> 'const char *' lvalue ParmVar 0x5628f16a8468 'data' 'const char *'
|     |-ImplicitCastExpr 0x5628f16ae718 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5628f16ae670 <col:20> 'int' lvalue ParmVar 0x5628f16a84e8 'length' 'int'
|     `-ImplicitCastExpr 0x5628f16ae730 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5628f16ae690 <col:28> 'String::memo_t *' lvalue ParmVar 0x5628f16a8560 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5628f16a87d8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5628f16a8718 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5628f16ae9a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5628f16ae920 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5628f16ae770 <col:2> '<bound member function type>' ->assign_memo 0x5628f16a8398
|     | `-CXXThisExpr 0x5628f16ae760 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5628f16ae958 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5628f16ae7f0 <col:14, col:19> 'const char *' lvalue .data 0x5628f16a7fe0
|     |   `-MemberExpr 0x5628f16ae7c0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5628f16a8150
|     |     `-DeclRefExpr 0x5628f16ae7a0 <col:14> 'const String' lvalue ParmVar 0x5628f16a8718 'x' 'const String &'
|     |-ImplicitCastExpr 0x5628f16ae970 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5628f16ae870 <col:25, col:30> 'int' lvalue .length 0x5628f16a8048
|     |   `-MemberExpr 0x5628f16ae840 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5628f16a8150
|     |     `-DeclRefExpr 0x5628f16ae820 <col:25> 'const String' lvalue ParmVar 0x5628f16a8718 'x' 'const String &'
|     `-ImplicitCastExpr 0x5628f16ae988 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5628f16ae8f0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|         `-MemberExpr 0x5628f16ae8c0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5628f16a8150
|           `-DeclRefExpr 0x5628f16ae8a0 <col:38> 'const String' lvalue ParmVar 0x5628f16a8718 'x' 'const String &'
|-CXXMethodDecl 0x5628f16a88a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5628f16af360 <col:31, line:278:5>
|   `-IfStmt 0x5628f16af348 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5628f16aea40 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5628f16aea28 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5628f16ae9f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|     |     `-MemberExpr 0x5628f16ae9c8 <col:6> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|     |       `-CXXThisExpr 0x5628f16ae9b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5628f16af320 <col:15, line:277:2>
|       |-ParenExpr 0x5628f16aeef0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5628f16aeec0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5628f16aeb50 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5628f16aeb38 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5628f16aeb20 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5628f16aeae0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5628f16a79a8
|       |   |       `-ImplicitCastExpr 0x5628f16aeac8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5628f16aea98 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|       |   |           `-MemberExpr 0x5628f16aea68 <col:27> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|       |   |             `-CXXThisExpr 0x5628f16aea58 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5628f16aebb0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5628f16aeb90 <col:54> 'int' 0
|       |   `-CallExpr 0x5628f16aee20 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5628f16aee08 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5628f16aed88 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5628f140efe0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5628f16aee60 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5628f16aec98 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5628f16aee78 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5628f16aecc8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5628f16aee90 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5628f16aed00 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5628f16aeea8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5628f16aed70 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5628f16aed58 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5628f16aed20 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5628f16af240 <line:274:6, line:275:22>
|       | |-CallExpr 0x5628f16af100 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5628f16af0e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5628f16af060 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5628f1698210 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5628f16af030 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5628f16a79a8
|       | |   `-ImplicitCastExpr 0x5628f16af018 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5628f16aefe8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|       | |       `-MemberExpr 0x5628f16aefb8 <col:40> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|       | |         `-CXXThisExpr 0x5628f16aefa8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5628f16af200 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5628f16af1e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5628f16af128 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5628f16ad080 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5628f16af228 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5628f16af188 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|       |       `-MemberExpr 0x5628f16af158 <col:15> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|       |         `-CXXThisExpr 0x5628f16af148 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5628f16af300 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5628f16af298 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5628f16a80d8
|         | `-MemberExpr 0x5628f16af268 <col:6> 'String::rep_t' lvalue ->_r 0x5628f16a8150
|         |   `-CXXThisExpr 0x5628f16af258 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5628f16af2e8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5628f16af2c8 <col:16> 'int' 0
|-CXXMethodDecl 0x5628f16a8b38 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5628f16a8958 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5628f16a89d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5628f16a8a50 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5628f16a8c10 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5628f16a8e60 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5628f16a8cc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5628f16a8d48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5628f16a8dc0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5628f16a9048 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5628f16a8f30 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5628f16a8fb0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5628f16a9148 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5628f16af438 <col:41, line:286:5>
|   `-ReturnStmt 0x5628f16af428 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5628f16af3f8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5628f16af3c0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5628f16af3a8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5628f16af388 <col:46> 'int' 1
|-CXXMethodDecl 0x5628f16a93e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5628f16a9200 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5628f16a9280 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5628f16a9300 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5628f16ad080 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5628f16a94b0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5628f16ad150 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5628f16ad320 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5628f16ad208 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5628f16ad288 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5628f16ad3e0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5628f16ad4a8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5628f16ad5a8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5628f16ad620 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5628f16ad698 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5628f16ad700 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5628f16ad800 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5628f16ad850 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5628f16ad7e0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5628f16ad7c0 <col:22> 'int' 14
|-CXXMethodDecl 0x5628f16ada68 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5628f16ad880 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5628f16ad900 <col:38> col:41 'int'
| `-ParmVarDecl 0x5628f16ad980 <col:43> col:46 'int'
|-FriendDecl 0x5628f16adb70 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5628f16adc00 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
