
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2bcd748 prev 0x55d7d2bc4ee8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2bcd840 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55d7d2bcd8d0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55d7d2bcd948 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55d7d2bcda08 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55d7d2bcdad0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55d7d2bcdc48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55d7d2bcdb80 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55d7d2bcdcf0 <col:24>
| `-OptimizeNoneAttr 0x55d7d2bcdd48 <col:34>
|-CXXMethodDecl 0x55d7d2bcdd90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55d7d2bce048 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55d7d2bcde40 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2bcdeb8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55d7d2bcdf38 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55d7d2bce100 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55d7d2bce138 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55d7d2bce1a0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55d7d2bce228 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55d7d2bce548 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55d7d2bce2e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2bce358 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55d7d2bce3d0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55d7d2bce450 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55d7d2bce660 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55d7d2bd5fd8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55d7d2bd5fd8
| `-ParmVarDecl 0x55d7d2bd60e8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55d7d2bd6188 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55d7d2bd6188
| `-ParmVarDecl 0x55d7d2bd6298 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55d7d2a777a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d297f210 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d297f328 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55d7d297f3b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55d7d297f488 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55d7d297f570 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d297f788 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55d7d297f630 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d297f938 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55d7d297f840 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55d7d297fa80 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55d7d297f9f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55d7d297fbc8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55d7d297fb38 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d297fd10 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55d7d297fc80 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d297fdd8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55d7d297ff20 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55d7d297fe90 <col:28> col:31 'int'
|-CXXMethodDecl 0x55d7d297ffe8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55d7d2980130 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55d7d29800a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55d7d29802a8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55d7d29801e8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d29803f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55d7d2980360 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d29804b8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55d7d2980678 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2980568 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d7d29805e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d29808c8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2980738 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d29807b0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2980978 <col:86> "" ""
|-CXXMethodDecl 0x55d7d2980be8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2980a58 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55d7d2980ad0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2980d98 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55d7d2980ca8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55d7d2980f48 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55d7d2980e50 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55d7d2981218 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2981000 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55d7d2981078 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d7d29810f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d29814f8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d29812e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55d7d2981358 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d29813d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d29815b0 <col:115> "" ""
|-AccessSpecDecl 0x55d7d2981620 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55d7d2981658 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2981b60 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55d7d2981b60
| `-ParmVarDecl 0x55d7d2981c68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55d7d2981d08 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55d7d2981d08
| `-ParmVarDecl 0x55d7d2981e18 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55d7d29b7448 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d2baa250 <col:7>
|-CXXConstructorDecl 0x55d7d29b7520 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55d7d29b7520
| `-ParmVarDecl 0x55d7d29b7638 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55d7d29b76a8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55d7d29b76a8
| `-ParmVarDecl 0x55d7d29b77b8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55d7d2bacc50 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2cec1b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55d7d2cec388 prev 0x55d7d2cec1b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d7d2cec418 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d7d2cec440 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2cee010 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55d7d2cedfc0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55d7d2cec8f0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55d7d2cec7f0 'type'
|     `-TemplateSpecializationType 0x55d7d2cec780 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55d7d2cec660 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55d7d2cec640 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55d7d2cec620 <col:24> 'unsigned long' 8
|       `-RecordType 0x55d7d2cec760 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55d7d2cec680 'char_array'
|-TypedefDecl 0x55d7d2cee0c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55d7d2cee090 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55d7d2cee070 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55d7d2cee010 'type'
|     `-ElaboratedType 0x55d7d2cedfc0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55d7d2cec8f0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55d7d2cec7f0 'type'
|         `-TemplateSpecializationType 0x55d7d2cec780 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55d7d2cec660 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55d7d2cec640 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55d7d2cec620 <col:24> 'unsigned long' 8
|           `-RecordType 0x55d7d2cec760 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55d7d2cec680 'char_array'
|-CXXMethodDecl 0x55d7d2cee248 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55d7d2cee158 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55d7d2cee338 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d7d2cee418 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55d7d2cee418
|-CXXMethodDecl 0x55d7d2cee6e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55d7d2cee5f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55d7d2cee928 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55d7d2cee7a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2cee818 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2ceeaf8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55d7d2cee9e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2ceea60 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2ceec58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55d7d2ceed28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55d7d2cf03b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55d7d2ceede8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55d7d2cf02a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2cf0618 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55d7d2cf0488 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55d7d2cf0500 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2cf07d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55d7d2cf06e8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2cf0998 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55d7d2cf08a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2cf0a50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2cf0b00 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2cf0d38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55d7d2cf0bb0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2cf0c28 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55d7d2cf0fd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55d7d2cf0ee0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55d7d2cf10a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55d7d2cf10f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d7d2cf1140 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d55128 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55d7d2d62b68 prev 0x55d7d2d55128 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d63b80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55d7d2d63b30 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55d7d2d63b10 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55d7d2d639c0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cebd80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2ceb8d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55d7d2ceb7e8 'sized_array_memory'
|-FieldDecl 0x55d7d2d63c80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55d7d2d63cd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d63d08 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-PointerType 0x55d7d2bb6c90 'Element *'
|     `-RecordType 0x55d7d2bb6a10 'Element'
|       `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d63d98 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55d7d2d63d60 'Element *&'
|   `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2bb6c90 'Element *'
|       `-RecordType 0x55d7d2bb6a10 'Element'
|         `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d63e58 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55d7d2d63e20 'Element *const &'
|   `-QualType 0x55d7d2d62c01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bb6c90 'Element *'
|         `-RecordType 0x55d7d2bb6a10 'Element'
|           `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d63ee8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55d7d2d63eb0 'Element **'
|   `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2bb6c90 'Element *'
|       `-RecordType 0x55d7d2bb6a10 'Element'
|         `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d63fa8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55d7d2d63f70 'Element *const *'
|   `-QualType 0x55d7d2d62c01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bb6c90 'Element *'
|         `-RecordType 0x55d7d2bb6a10 'Element'
|           `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d64b80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55d7d2d64b30 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55d7d2d64b10 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55d7d2d64aa0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d64860 'Element *' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-PointerType 0x55d7d2bb6c90 'Element *'
|         `-RecordType 0x55d7d2bb6a10 'Element'
|           `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d64be8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55d7d2d63e20 'Element *const &'
|   `-QualType 0x55d7d2d62c01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bb6c90 'Element *'
|         `-RecordType 0x55d7d2bb6a10 'Element'
|           `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d64c40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d64ca8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55d7d2d63eb0 'Element **'
|   `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2bb6c90 'Element *'
|       `-RecordType 0x55d7d2bb6a10 'Element'
|         `-CXXRecord 0x55d7d2bc0760 'Element'
|-TypedefDecl 0x55d7d2d64d10 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55d7d2d63f70 'Element *const *'
|   `-QualType 0x55d7d2d62c01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d62c00 'Element *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bb6c90 'Element *'
|         `-RecordType 0x55d7d2bb6a10 'Element'
|           `-CXXRecord 0x55d7d2bc0760 'Element'
|-EnumDecl 0x55d7d2d64d68 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d64e60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d64e40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d64ee8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d65178 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d64fa0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d65040 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55d7d2d65408 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55d7d2d652f0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55d7d2d656c8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55d7d2d655b0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55d7d2d659e0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55d7d2d658c0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55d7d2d65cf0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55d7d2d65bd0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55d7d2d65fe0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d65e28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d65ea0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55d7d2d66138 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55d7d2d66218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d66270 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d662b8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55d7d2d66368 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d663c0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d66488 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d66538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d66590 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d665d8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d66688 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d666e0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d66728 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d667d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d66830 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d66878 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d66928 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d66980 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d669a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d66a58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d66b08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d66cc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d66bb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d66c30 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55d7d2d66e18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d66d88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d66fc8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d66ed0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d67080 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d670d8 <col:30>
|-CXXMethodDecl 0x55d7d2d671f8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d67100 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d672b0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d67308 <col:30>
|-CXXMethodDecl 0x55d7d2d673c0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d67330 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d67508 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d67478 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d67638 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55d7d2d67768 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55d7d2d67838 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55d7d2d67908 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55d7d2d67a48 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d679b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d6cf30 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d67b00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d6d078 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d6cfe8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d6d130 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d6d230 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d6d1a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d6d2e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d6d3a8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55d7d2d6d4a8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55d7d2d6d628 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d6d568 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55d7d2d6dde8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d6d6e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55d7d2d6dd48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55d7d2d6dc48 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55d7d2d6dec8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d6e018 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d6df88 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55d7d2d6e0d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d6e318 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d6e190 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55d7d2d6e208 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55d7d2d6e4d8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d6e3e8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55d7d2d6e728 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d6e5a0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55d7d2d6e618 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55d7d2d6e7e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d6ea48 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55d7d2d6e950 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55d7d2d6eb18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d6eb18

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d29935f0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2993708 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55d7d29937a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55d7d2993808 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55d7d2993868 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55d7d2993918 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2993c20 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2993d38 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55d7d2993de0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55d7d2993e48 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55d7d2993ed8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55d7d2999f70 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d299a3a8 <col:12>
|-CXXConstructorDecl 0x55d7d299a078 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d299a188 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2993de0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55d7d299c930 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55d7d299c900 <col:12> 'const char *const' lvalue .data 0x55d7d2993de0
| |     `-DeclRefExpr 0x55d7d299c8e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d299a188 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2993e48 'length' 'int'
| | `-ImplicitCastExpr 0x55d7d299c9c0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d299c990 <col:12> 'const int' lvalue .length 0x55d7d2993e48
| |     `-DeclRefExpr 0x55d7d299c970 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d299a188 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2993ed8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55d7d299ca50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55d7d299ca20 <col:12> 'String::memo_t *const' lvalue .memo 0x55d7d2993ed8
| |     `-DeclRefExpr 0x55d7d299ca00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d299a188 '' 'const String::rep_t &'
| `-CompoundStmt 0x55d7d299caa8 <col:12>
|-CXXConstructorDecl 0x55d7d299a228 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d7d299a228
| `-ParmVarDecl 0x55d7d299a338 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55d7d299f890 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55d7d29ab2a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d29ab3b8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55d7d29ab8d0 <col:12>
|   |-BinaryOperator 0x55d7d29ab6e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55d7d29ab6a0 <col:12> 'const char *' lvalue ->data 0x55d7d2993de0
|   | | `-CXXThisExpr 0x55d7d29ab690 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55d7d29ab6d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d29ab660 <col:12> 'const char *const' lvalue .data 0x55d7d2993de0
|   |     `-DeclRefExpr 0x55d7d29ab640 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d29ab3b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55d7d29ab7b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55d7d29ab768 <col:12> 'int' lvalue ->length 0x55d7d2993e48
|   | | `-CXXThisExpr 0x55d7d29ab758 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55d7d29ab798 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d29ab728 <col:12> 'const int' lvalue .length 0x55d7d2993e48
|   |     `-DeclRefExpr 0x55d7d29ab708 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d29ab3b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55d7d29ab878 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55d7d29ab830 <col:12> 'String::memo_t *' lvalue ->memo 0x55d7d2993ed8
|   | | `-CXXThisExpr 0x55d7d29ab820 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55d7d29ab860 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d29ab7f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55d7d2993ed8
|   |     `-DeclRefExpr 0x55d7d29ab7d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d29ab3b8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55d7d29ab8c0 <col:12>
|     `-UnaryOperator 0x55d7d29ab8a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d29ab898 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55d7d29ab428 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d7d29ab428
  `-ParmVarDecl 0x55d7d29ab538 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d298ab60 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d298ac78 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55d7d298ad08 <col:16, col:22> col:16 public
|-TypedefDecl 0x55d7d298ad48 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55d7d265afd0 'const char *'
|   `-QualType 0x55d7d265a521 'const char' const
|     `-BuiltinType 0x55d7d265a520 'char'
|-TypedefDecl 0x55d7d298add0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55d7d298ada0 'String::const_iterator' sugar
|   |-Typedef 0x55d7d298ad48 'const_iterator'
|   `-PointerType 0x55d7d265afd0 'const char *'
|     `-QualType 0x55d7d265a521 'const char' const
|       `-BuiltinType 0x55d7d265a520 'char'
|-TypedefDecl 0x55d7d298af40 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55d7d298aeb0 'int (String::*)() const'
|   |-RecordType 0x55d7d298abf0 'String'
|   | `-CXXRecord 0x55d7d298ab60 'String'
|   `-ParenType 0x55d7d298ae50 'int () const' sugar
|     `-FunctionProtoType 0x55d7d295f9f0 'int () const' const cdecl
|       `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d298afa8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55d7d27b45d0 'int64_t' sugar
|   |-Typedef 0x55d7d26c3390 'int64_t'
|   `-TypedefType 0x55d7d269c630 '__int64_t' sugar
|     |-Typedef 0x55d7d269c208 '__int64_t'
|     `-BuiltinType 0x55d7d265a5a0 'long'
|-TypedefDecl 0x55d7d298b010 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55d7d27b44f0 'uint64_t' sugar
|   |-Typedef 0x55d7d26c3530 'uint64_t'
|   `-TypedefType 0x55d7d269c6c0 '__uint64_t' sugar
|     |-Typedef 0x55d7d269c278 '__uint64_t'
|     `-BuiltinType 0x55d7d265a640 'unsigned long'
|-TypedefDecl 0x55d7d298b0a0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55d7d298b070 'String::intmax_t' sugar
|   |-Typedef 0x55d7d298afa8 'intmax_t'
|   `-TypedefType 0x55d7d27b45d0 'int64_t' sugar
|     |-Typedef 0x55d7d26c3390 'int64_t'
|     `-TypedefType 0x55d7d269c630 '__int64_t' sugar
|       |-Typedef 0x55d7d269c208 '__int64_t'
|       `-BuiltinType 0x55d7d265a5a0 'long'
|-TypedefDecl 0x55d7d298b130 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55d7d298b100 'String::uintmax_t' sugar
|   |-Typedef 0x55d7d298b010 'uintmax_t'
|   `-TypedefType 0x55d7d27b44f0 'uint64_t' sugar
|     |-Typedef 0x55d7d26c3530 'uint64_t'
|     `-TypedefType 0x55d7d269c6c0 '__uint64_t' sugar
|       |-Typedef 0x55d7d269c278 '__uint64_t'
|       `-BuiltinType 0x55d7d265a640 'unsigned long'
|-CXXConstructorDecl 0x55d7d298b1f0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55d7d298b398 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55d7d298b2d8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55d7d298b548 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55d7d298b488 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55d7d298b6a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55d7d298b610 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55d7d298b8b8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55d7d298b768 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55d7d298b7e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55d7d298bad8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55d7d298b988 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55d7d298ba08 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55d7d298bcf8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55d7d298bba8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55d7d298bc28 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55d7d298bf18 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55d7d298bdc8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55d7d298be48 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55d7d298c0a8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55d7d298bfe0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55d7d298c228 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55d7d298c168 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55d7d298c3b8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55d7d298c2f0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55d7d298c510 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55d7d298c480 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55d7d298c668 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55d7d298c5d8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55d7d298c7c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55d7d298c730 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55d7d298c948 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55d7d298c888 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55d7d298cad8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55d7d298ca10 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55d7d298cc68 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55d7d298cba0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55d7d298cdf8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55d7d298cd30 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55d7d298cef0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55d7d298d018 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55d7d298d198 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55d7d298d0d0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55d7d298d2e8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55d7d298d258 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55d7d298d3a0 <col:63> "" ""
|-CXXMethodDecl 0x55d7d298d4e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55d7d298d428 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55d7d298d6f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55d7d298d5a8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55d7d298d628 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55d7d298d918 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55d7d298d7c0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55d7d298d840 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55d7d298dbf8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55d7d298d9d8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55d7d298da58 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55d7d2999a40 <col:55> 'int' 10
| `-ParmVarDecl 0x55d7d298dad0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2999a60 <col:76> 'bool' true
|-CXXMethodDecl 0x55d7d298ded8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55d7d298dcc0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55d7d298dd40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55d7d2999a70 <col:56> 'int' 10
| `-ParmVarDecl 0x55d7d298ddb8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2999a90 <col:77> 'bool' true
|-CXXMethodDecl 0x55d7d298dfe0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55d7d298e0a8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55d7d298e170 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55d7d298e210 <col:20>
| `-OptimizeNoneAttr 0x55d7d298e268 <col:30>
|-CXXConversionDecl 0x55d7d298e358 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55d7d298e428 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d298e4e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55d7d298e5d8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55d7d298e698 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55d7d298e818 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55d7d298e750 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55d7d298e968 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55d7d298e8d8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55d7d298ea58 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55d7d298eb18 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55d7d298ed68 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55d7d298ebd0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55d7d298ec50 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55d7d298efc8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55d7d298ee30 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55d7d298eeb0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55d7d298f098 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d298f2a8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55d7d298f150 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55d7d298f1d0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55d7d298f4c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55d7d298f370 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55d7d298f3f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55d7d298f658 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55d7d298f590 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55d7d298f748 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55d7d298f8b8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55d7d298f7f8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55d7d298fac8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55d7d298f978 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55d7d298f9f8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55d7d298fce0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55d7d298fb88 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55d7d298fc00 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55d7d298fe70 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55d7d298fda0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55d7d2990090 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55d7d298ff30 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55d7d298ffb0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55d7d29901e0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55d7d2990150 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55d7d29903b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55d7d29902a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55d7d2990320 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55d7d2990508 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55d7d2990478 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55d7d2990720 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55d7d29905c0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55d7d2990640 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55d7d2999aa0 <col:39> 'int' 0
|-CXXMethodDecl 0x55d7d2990940 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55d7d29907e0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55d7d2990860 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55d7d2999ac0 <col:48> 'int' 0
|-CXXMethodDecl 0x55d7d2990b20 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55d7d2990a00 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55d7d2990a80 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55d7d2999ae0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55d7d2990bf0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55d7d2990cb0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55d7d2990d70 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55d7d2990e30 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55d7d2990ef0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55d7d2991098 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55d7d2990fa0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55d7d2991218 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55d7d2991150 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55d7d29913f0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55d7d29912d8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55d7d2991568 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55d7d29914a8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55d7d29916b0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55d7d2991620 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55d7d2991800 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55d7d2991770 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55d7d29919d8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55d7d29918c0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55d7d2991940 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55d7d2991bb8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55d7d2991aa0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55d7d2991b20 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55d7d2991d08 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55d7d2991c78 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55d7d2991f18 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55d7d2991dc8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55d7d2991e48 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55d7d2992078 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55d7d2991fe0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55d7d29921d0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55d7d2992138 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55d7d2992278 <col:57> "" ""
|-CXXMethodDecl 0x55d7d2992388 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55d7d29922f8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55d7d29924d8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55d7d2992448 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55d7d2992658 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55d7d2992590 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55d7d2992720 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55d7d29927e0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55d7d29928a0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55d7d2992940 <col:49> "" ""
|-CXXMethodDecl 0x55d7d29929d0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55d7d2992a90 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55d7d2992b80 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55d7d2992c48 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55d7d2992d08 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55d7d2992dc8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55d7d2992ec0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55d7d2992f88 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55d7d2993050 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55d7d2993228 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55d7d2993108 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55d7d2993188 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55d7d2993450 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55d7d29932f0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2993370 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55d7d2993560 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55d7d29935c8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d29935f0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2993708 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55d7d29937a8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55d7d2993808 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55d7d2993868 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55d7d2993918 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55d7d2993980 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55d7d2993bb8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55d7d2993c08 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2993b98 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55d7d2993aa8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55d7d2993a50 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55d7d2993a90 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55d7d2993a70 <col:32> 'int' 8
|-CXXRecordDecl 0x55d7d2993c20 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2993d38 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55d7d2993de0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55d7d2993e48 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55d7d2993ed8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55d7d2999f70 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55d7d299a3a8 <col:12>
| |-CXXConstructorDecl 0x55d7d299a078 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d299a188 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55d7d2993de0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55d7d299c930 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55d7d299c900 <col:12> 'const char *const' lvalue .data 0x55d7d2993de0
| | |     `-DeclRefExpr 0x55d7d299c8e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d299a188 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55d7d2993e48 'length' 'int'
| | | `-ImplicitCastExpr 0x55d7d299c9c0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55d7d299c990 <col:12> 'const int' lvalue .length 0x55d7d2993e48
| | |     `-DeclRefExpr 0x55d7d299c970 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d299a188 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55d7d2993ed8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55d7d299ca50 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55d7d299ca20 <col:12> 'String::memo_t *const' lvalue .memo 0x55d7d2993ed8
| | |     `-DeclRefExpr 0x55d7d299ca00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d299a188 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55d7d299caa8 <col:12>
| |-CXXConstructorDecl 0x55d7d299a228 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d7d299a228
| | `-ParmVarDecl 0x55d7d299a338 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55d7d299f890 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55d7d29ab2a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d29ab3b8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55d7d29ab8d0 <col:12>
| |   |-BinaryOperator 0x55d7d29ab6e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55d7d29ab6a0 <col:12> 'const char *' lvalue ->data 0x55d7d2993de0
| |   | | `-CXXThisExpr 0x55d7d29ab690 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55d7d29ab6d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55d7d29ab660 <col:12> 'const char *const' lvalue .data 0x55d7d2993de0
| |   |     `-DeclRefExpr 0x55d7d29ab640 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d29ab3b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55d7d29ab7b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55d7d29ab768 <col:12> 'int' lvalue ->length 0x55d7d2993e48
| |   | | `-CXXThisExpr 0x55d7d29ab758 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55d7d29ab798 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55d7d29ab728 <col:12> 'const int' lvalue .length 0x55d7d2993e48
| |   |     `-DeclRefExpr 0x55d7d29ab708 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d29ab3b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55d7d29ab878 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55d7d29ab830 <col:12> 'String::memo_t *' lvalue ->memo 0x55d7d2993ed8
| |   | | `-CXXThisExpr 0x55d7d29ab820 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55d7d29ab860 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55d7d29ab7f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55d7d2993ed8
| |   |     `-DeclRefExpr 0x55d7d29ab7d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d7d29ab3b8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55d7d29ab8c0 <col:12>
| |     `-UnaryOperator 0x55d7d29ab8a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55d7d29ab898 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55d7d29ab428 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d7d29ab428
|   `-ParmVarDecl 0x55d7d29ab538 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55d7d2993f50 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55d7d2994198 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55d7d2993fb8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55d7d2994038 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55d7d29940b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55d7d2999f30 <col:79, line:261:5>
|   |-BinaryOperator 0x55d7d2999ba8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55d7d2999b40 <col:2, col:5> 'const char *' lvalue .data 0x55d7d2993de0
|   | | `-MemberExpr 0x55d7d2999b10 <col:2> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|   | |   `-CXXThisExpr 0x55d7d2999b00 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2999b90 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d7d2999b70 <col:12> 'const char *' lvalue ParmVar 0x55d7d2993fb8 'data' 'const char *'
|   |-BinaryOperator 0x55d7d2999c70 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55d7d2999c08 <col:2, col:5> 'int' lvalue .length 0x55d7d2993e48
|   | | `-MemberExpr 0x55d7d2999bd8 <col:2> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|   | |   `-CXXThisExpr 0x55d7d2999bc8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2999c58 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d7d2999c38 <col:14> 'int' lvalue ParmVar 0x55d7d2994038 'length' 'int'
|   `-IfStmt 0x55d7d2999f18 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55d7d2999d90 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55d7d2999d78 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55d7d2999d58 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55d7d2999d38 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55d7d2999cd0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|     |       | `-MemberExpr 0x55d7d2999ca0 <col:7> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|     |       |   `-CXXThisExpr 0x55d7d2999c90 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55d7d2999d20 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55d7d2999d00 <col:17> 'String::memo_t *' lvalue ParmVar 0x55d7d29940b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55d7d2999ef0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55d7d2999ed8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2999de0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55d7d2982bc8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55d7d2999e48 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55d7d29937a8
|         `-ImplicitCastExpr 0x55d7d2999e30 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55d7d2999e10 <col:27> 'String::memo_t *' lvalue ParmVar 0x55d7d29940b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55d7d2994448 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55d7d2994268 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55d7d29942e8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55d7d2994360 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55d7d2993f50 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55d7d299a3b8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d299a548 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55d7d299a4b0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55d7d299a420 <col:2> '<bound member function type>' ->assign_memo 0x55d7d2994198
|     | `-ImplicitCastExpr 0x55d7d299a4e8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55d7d299a410 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55d7d299a500 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d299a450 <col:14> 'const char *' lvalue ParmVar 0x55d7d2994268 'data' 'const char *'
|     |-ImplicitCastExpr 0x55d7d299a518 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d299a470 <col:20> 'int' lvalue ParmVar 0x55d7d29942e8 'length' 'int'
|     `-ImplicitCastExpr 0x55d7d299a530 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d299a490 <col:28> 'String::memo_t *' lvalue ParmVar 0x55d7d2994360 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55d7d29945d8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55d7d2994518 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55d7d299a7a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55d7d299a720 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55d7d299a570 <col:2> '<bound member function type>' ->assign_memo 0x55d7d2994198
|     | `-CXXThisExpr 0x55d7d299a560 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55d7d299a758 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55d7d299a5f0 <col:14, col:19> 'const char *' lvalue .data 0x55d7d2993de0
|     |   `-MemberExpr 0x55d7d299a5c0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55d7d2993f50
|     |     `-DeclRefExpr 0x55d7d299a5a0 <col:14> 'const String' lvalue ParmVar 0x55d7d2994518 'x' 'const String &'
|     |-ImplicitCastExpr 0x55d7d299a770 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55d7d299a670 <col:25, col:30> 'int' lvalue .length 0x55d7d2993e48
|     |   `-MemberExpr 0x55d7d299a640 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55d7d2993f50
|     |     `-DeclRefExpr 0x55d7d299a620 <col:25> 'const String' lvalue ParmVar 0x55d7d2994518 'x' 'const String &'
|     `-ImplicitCastExpr 0x55d7d299a788 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55d7d299a6f0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|         `-MemberExpr 0x55d7d299a6c0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55d7d2993f50
|           `-DeclRefExpr 0x55d7d299a6a0 <col:38> 'const String' lvalue ParmVar 0x55d7d2994518 'x' 'const String &'
|-CXXMethodDecl 0x55d7d29946a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55d7d299b160 <col:31, line:278:5>
|   `-IfStmt 0x55d7d299b148 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55d7d299a840 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55d7d299a828 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55d7d299a7f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|     |     `-MemberExpr 0x55d7d299a7c8 <col:6> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|     |       `-CXXThisExpr 0x55d7d299a7b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55d7d299b120 <col:15, line:277:2>
|       |-ParenExpr 0x55d7d299acf0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55d7d299acc0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55d7d299a950 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55d7d299a938 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55d7d299a920 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55d7d299a8e0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55d7d29937a8
|       |   |       `-ImplicitCastExpr 0x55d7d299a8c8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55d7d299a898 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|       |   |           `-MemberExpr 0x55d7d299a868 <col:27> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|       |   |             `-CXXThisExpr 0x55d7d299a858 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55d7d299a9b0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55d7d299a990 <col:54> 'int' 0
|       |   `-CallExpr 0x55d7d299ac20 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55d7d299ac08 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55d7d299ab88 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55d7d299ac60 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55d7d299aa98 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55d7d299ac78 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55d7d299aac8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55d7d299ac90 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55d7d299ab00 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55d7d299aca8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55d7d299ab70 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55d7d299ab58 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55d7d299ab20 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55d7d299b040 <line:274:6, line:275:22>
|       | |-CallExpr 0x55d7d299af00 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55d7d299aee8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55d7d299ae60 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55d7d2984010 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55d7d299ae30 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55d7d29937a8
|       | |   `-ImplicitCastExpr 0x55d7d299ae18 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55d7d299ade8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|       | |       `-MemberExpr 0x55d7d299adb8 <col:40> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|       | |         `-CXXThisExpr 0x55d7d299ada8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55d7d299b000 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55d7d299afe8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55d7d299af28 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55d7d2998e80 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55d7d299b028 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55d7d299af88 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|       |       `-MemberExpr 0x55d7d299af58 <col:15> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|       |         `-CXXThisExpr 0x55d7d299af48 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55d7d299b100 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55d7d299b098 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55d7d2993ed8
|         | `-MemberExpr 0x55d7d299b068 <col:6> 'String::rep_t' lvalue ->_r 0x55d7d2993f50
|         |   `-CXXThisExpr 0x55d7d299b058 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55d7d299b0e8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55d7d299b0c8 <col:16> 'int' 0
|-CXXMethodDecl 0x55d7d2994938 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55d7d2994758 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55d7d29947d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55d7d2994850 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55d7d2994a10 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55d7d2994c60 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55d7d2994ac8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55d7d2994b48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55d7d2994bc0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55d7d2994e48 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55d7d2994d30 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55d7d2994db0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55d7d2994f48 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55d7d299b238 <col:41, line:286:5>
|   `-ReturnStmt 0x55d7d299b228 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55d7d299b1f8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55d7d299b1c0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55d7d299b1a8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55d7d299b188 <col:46> 'int' 1
|-CXXMethodDecl 0x55d7d29951e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55d7d2995000 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55d7d2995080 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55d7d2995100 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55d7d2998e80 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55d7d29952b0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55d7d2998f50 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55d7d2999120 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55d7d2999008 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55d7d2999088 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55d7d29991e0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55d7d29992a8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55d7d29993a8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55d7d2999420 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55d7d2999498 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55d7d2999500 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55d7d2999600 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55d7d2999650 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d29995e0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55d7d29995c0 <col:22> 'int' 14
|-CXXMethodDecl 0x55d7d2999868 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55d7d2999680 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55d7d2999700 <col:38> col:41 'int'
| `-ParmVarDecl 0x55d7d2999780 <col:43> col:46 'int'
|-FriendDecl 0x55d7d2999970 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55d7d2999a00 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2c0a150 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55d7d2c0a328 prev 0x55d7d2c0a150 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d7d2c0a3b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d7d2c0a3e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c0bd80 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55d7d2c0bd30 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55d7d2c0bd10 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55d7d2c0a5f8 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2c0a5c0 'String' sugar
|       |-TemplateTypeParmType 0x55d7d294f410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d294f3c0 'T'
|       `-RecordType 0x55d7d298abf0 'String'
|         `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0be38 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55d7d2c0be00 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55d7d2c0bde0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55d7d2c0bd80 'type'
|     `-ElaboratedType 0x55d7d2c0bd30 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55d7d2c0bd10 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55d7d2c0a5f8 'type'
|         `-SubstTemplateTypeParmType 0x55d7d2c0a5c0 'String' sugar
|           |-TemplateTypeParmType 0x55d7d294f410 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d294f3c0 'T'
|           `-RecordType 0x55d7d298abf0 'String'
|             `-CXXRecord 0x55d7d298ab60 'String'
|-CXXMethodDecl 0x55d7d2c0bfb8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55d7d2c0bec8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55d7d2c0c0a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d7d2c0c188 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55d7d2c0c458 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55d7d2c0c360 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55d7d2c0c698 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d7d2c0c510 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2c0c588 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0c868 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d7d2c0c758 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2c0c7d0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0c9c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55d7d2c0ca98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55d7d2c0cce8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d7d2c0cb58 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55d7d2c0cbd0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0cf48 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55d7d2c0cdb8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55d7d2c0ce30 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0d108 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55d7d2c0d018 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0d2c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55d7d2c0d1d0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0d380 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2c0d430 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2c0d668 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d7d2c0d4e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2c0d558 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d7d2c0d908 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55d7d2c0d810 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55d7d2c0d9d0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55d7d2c0da20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d7d2c0da70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2bc33a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55d7d2c08bb8 prev 0x55d7d2bc33a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2c0a0c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55d7d2c0a070 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55d7d2c0a050 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55d7d2c09f00 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2c09d90 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55d7d29251c0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55d7d2925168 'F'
|       `-RecordType 0x55d7d2c099f0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55d7d2c09910 'typed_array_memory'
|-FieldDecl 0x55d7d2c0dac0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55d7d2c0db10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2c0db48 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-RecordType 0x55d7d298abf0 'String'
|     `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0dbd8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55d7d2c0dba0 'String &'
|   `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d298abf0 'String'
|       `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0dc68 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55d7d2c0dc30 'const String &'
|   `-QualType 0x55d7d2c08c51 'const String' const
|     `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d298abf0 'String'
|         `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0dcf8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55d7d2c0dcc0 'String *'
|   `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d298abf0 'String'
|       `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0dd88 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55d7d2c0dd50 'const String *'
|   `-QualType 0x55d7d2c08c51 'const String' const
|     `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d298abf0 'String'
|         `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0e9e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55d7d2c0e990 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55d7d2c0e970 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55d7d2c0e8a8 'type'
|     `-LValueReferenceType 0x55d7d2c0e870 'const String &'
|       `-QualType 0x55d7d2c0e611 'const String' const
|         `-SubstTemplateTypeParmType 0x55d7d2c0e610 'String' sugar
|           |-TemplateTypeParmType 0x55d7d292f110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d292f0b8 'T'
|           `-RecordType 0x55d7d298abf0 'String'
|             `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0ea48 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55d7d2c0dc30 'const String &'
|   `-QualType 0x55d7d2c08c51 'const String' const
|     `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d298abf0 'String'
|         `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0eaa0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c0eb08 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55d7d2c0dcc0 'String *'
|   `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d298abf0 'String'
|       `-CXXRecord 0x55d7d298ab60 'String'
|-TypedefDecl 0x55d7d2c0eb70 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55d7d2c0dd50 'const String *'
|   `-QualType 0x55d7d2c08c51 'const String' const
|     `-SubstTemplateTypeParmType 0x55d7d2c08c50 'String' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d298abf0 'String'
|         `-CXXRecord 0x55d7d298ab60 'String'
|-EnumDecl 0x55d7d2c0ebc8 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2c0ecc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2c0eca0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2c0ed48 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2c0efd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c0ee00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2c0eea0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55d7d2c0f268 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55d7d2c0f150 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55d7d2c0f528 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55d7d2c0f410 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55d7d2c0f840 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55d7d2c0f720 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55d7d2c0fb50 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55d7d2c0fa30 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55d7d2c0fe40 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c0fc88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2c0fd00 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d7d2c0ff68 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55d7d2c10018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c10070 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c100b8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55d7d2c10168 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c101c0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c10288 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c10338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c10390 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c103d8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c10488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c104e0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c10528 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c105d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c10630 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c10678 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c10728 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c10780 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c107a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2c10858 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2c10908 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2c10ac8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c109b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2c10a30 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d7d2c10c18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2c10b88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c10dc8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2c10cd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2c10e80 <col:20>
| `-OptimizeNoneAttr 0x55d7d2c10ed8 <col:30>
|-CXXMethodDecl 0x55d7d2c10ff8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2c10f00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2c110b0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2c11108 <col:30>
|-CXXMethodDecl 0x55d7d2c111c0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2c11130 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c11308 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2c11278 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c11438 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55d7d2c11538 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55d7d2c11608 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55d7d2c116d8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55d7d2c11818 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2c11788 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c11960 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2c118d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c11aa8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2c11a18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2c11b60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2c11c60 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2c11bd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2c11d18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2c11dd8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55d7d2c11ed8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55d7d2c12058 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2c11f98 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55d7d2c12818 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2c12110 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55d7d2c12778 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55d7d2c12678 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55d7d2c128f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2c12a48 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2c129b8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d7d2c12b00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2c12d48 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c12bc0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55d7d2c12c38 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d7d2c12ed8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55d7d2c12e18 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55d7d2c130e8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55d7d2c12fa0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55d7d2c13018 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55d7d2c131a8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2c13408 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55d7d2c13310 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55d7d2c134d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55d7d2a72788 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2c4d4c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55d7d2c4d698 prev 0x55d7d2c4d4c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d7d2c4d728 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d7d2c4d750 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c4f320 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55d7d2c4f2d0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55d7d2c4dc00 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55d7d2c4db00 'type'
|     `-TemplateSpecializationType 0x55d7d2c4da90 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55d7d2c4d970 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55d7d2c4d950 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55d7d2c4d930 <col:24> 'unsigned long' 4
|       `-RecordType 0x55d7d2c4da70 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55d7d2c4d990 'char_array'
|-TypedefDecl 0x55d7d2c4f3d8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55d7d2c4f3a0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55d7d2c4f380 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55d7d2c4f320 'type'
|     `-ElaboratedType 0x55d7d2c4f2d0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55d7d2c4dc00 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55d7d2c4db00 'type'
|         `-TemplateSpecializationType 0x55d7d2c4da90 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55d7d2c4d970 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55d7d2c4d950 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55d7d2c4d930 <col:24> 'unsigned long' 4
|           `-RecordType 0x55d7d2c4da70 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55d7d2c4d990 'char_array'
|-CXXMethodDecl 0x55d7d2c4f558 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55d7d2c4f468 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55d7d2c4f648 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d7d2c4f728 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55d7d2c4f728
|-CXXMethodDecl 0x55d7d2c58df0 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55d7d2c4f900 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55d7d2c59038 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d7d2c58ea8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2c58f20 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c59208 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d7d2c590f8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2c59170 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c59368 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55d7d2c59438 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55d7d2c59688 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d7d2c594f8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55d7d2c59570 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c598e8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55d7d2c59758 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55d7d2c597d0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c59aa8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55d7d2c599b8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c59c68 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55d7d2c59b70 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c59d20 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2c59dd0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2c5a008 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d7d2c59e80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2c59ef8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d7d2c5a2a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55d7d2c5a1b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55d7d2c5a370 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55d7d2c5a3c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d7d2c5a410 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d6ee60 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55d7d2d6f068 prev 0x55d7d2d6ee60 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d70080 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55d7d2d70030 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55d7d2d70010 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55d7d2d6fec0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2c4d090 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2c4cbe0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55d7d2c4caf8 'sized_array_memory'
|-FieldDecl 0x55d7d2d70180 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55d7d2d701d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d70208 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d70298 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55d7d2d70260 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d70358 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55d7d2d70320 'const unsigned int &'
|   `-QualType 0x55d7d2d6f101 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d703e8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55d7d2d703b0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d70478 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55d7d2d70440 'const unsigned int *'
|   `-QualType 0x55d7d2d6f101 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d71060 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55d7d2d71010 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55d7d2d70ff0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55d7d2d70f80 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d70d40 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d710c8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55d7d2d70320 'const unsigned int &'
|   `-QualType 0x55d7d2d6f101 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d71120 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d71188 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55d7d2d703b0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-BuiltinType 0x55d7d265a620 'unsigned int'
|-TypedefDecl 0x55d7d2d711f0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55d7d2d70440 'const unsigned int *'
|   `-QualType 0x55d7d2d6f101 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55d7d2d6f100 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a620 'unsigned int'
|-EnumDecl 0x55d7d2d71248 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d71340 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d71320 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d713c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d71618 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d71480 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d71520 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55d7d2d718d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55d7d2d717c0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55d7d2d71b98 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55d7d2d71a80 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55d7d2d71ee0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55d7d2d71dc0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55d7d2d721f0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55d7d2d720d0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55d7d2d724e0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d72328 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d723a0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55d7d2d72608 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55d7d2d726e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d72740 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d72788 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55d7d2d72838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d72890 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d72928 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d729d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d72a30 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d72a78 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d72b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d72b80 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d72bc8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d72c78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d72cd0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d72d18 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d72dc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d72e20 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d72e48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d72ef8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d72fa8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d73168 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d73058 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d730d0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55d7d2d732b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d73228 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d73468 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d73370 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d73520 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d73578 <col:30>
|-CXXMethodDecl 0x55d7d2d73698 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d735a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d73750 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d737a8 <col:30>
|-CXXMethodDecl 0x55d7d2d73860 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d737d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d739a8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d73918 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d73ad8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55d7d2d73c08 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55d7d2d73cd8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55d7d2d73da8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55d7d2d73ee8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d73e58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d74030 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d73fa0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d74178 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d740e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d74230 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d74330 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d742a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d743e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d744a8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55d7d2d745a8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55d7d2d74728 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d74668 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55d7d2d76460 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d747e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55d7d2d74e48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55d7d2d74d48 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55d7d2d76540 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d76690 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d76600 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55d7d2d76748 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d76998 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d76808 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55d7d2d76880 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55d7d2d76b58 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d76a68 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55d7d2d76da8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d76c20 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55d7d2d76c98 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55d7d2d76e68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d770c8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55d7d2d76fd0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55d7d2d77198 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d77198

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2c4bec8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55d7d2c4c0d8 prev 0x55d7d2c4bec8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2c4d430 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55d7d2c4d3e0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55d7d2c4d3c0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55d7d2c4d270 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2c4d090 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2c4cbe0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55d7d2c4caf8 'sized_array_memory'
|-FieldDecl 0x55d7d2c5a460 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55d7d2c5a4b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2c5a4e8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5a578 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55d7d2c5a540 'int &'
|   `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5a638 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55d7d2c5a600 'const int &'
|   `-QualType 0x55d7d2c4c171 'const int' const
|     `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5a6c8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55d7d2c5a690 'int *'
|   `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5a758 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55d7d2c5a720 'const int *'
|   `-QualType 0x55d7d2c4c171 'const int' const
|     `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5b340 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55d7d2c5b2f0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55d7d2c5b2d0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55d7d2c5b260 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2c5b020 'int' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5b3a8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55d7d2c5a600 'const int &'
|   `-QualType 0x55d7d2c4c171 'const int' const
|     `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5b400 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5b468 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55d7d2c5a690 'int *'
|   `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2c5b4d0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55d7d2c5a720 'const int *'
|   `-QualType 0x55d7d2c4c171 'const int' const
|     `-SubstTemplateTypeParmType 0x55d7d2c4c170 'int' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-BuiltinType 0x55d7d265a580 'int'
|-EnumDecl 0x55d7d2c5b528 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2c5b620 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2c5b600 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2c5b6a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2c5b8f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c5b760 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2c5b800 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55d7d2c5bbb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55d7d2c5baa0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55d7d2c5be78 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55d7d2c5bd60 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55d7d2c5c1c0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55d7d2c5c0a0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55d7d2c5c4d0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55d7d2c5c3b0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55d7d2c5c7c0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c5c608 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2c5c680 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55d7d2c5c8e8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55d7d2c5c9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c5ca20 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c5ca68 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55d7d2c5cb18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c5cb70 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c5cc38 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c5cce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c5cd40 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c5cd88 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c5ce38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c5ce90 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c5ced8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c5cf88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c5cfe0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c5d028 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2c5d0d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2c5d130 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2c5d158 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2c5d208 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2c5d2b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2c5d478 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c5d368 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2c5d3e0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55d7d2c5d5c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2c5d538 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c5d778 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2c5d680 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2c5d830 <col:20>
| `-OptimizeNoneAttr 0x55d7d2c5d888 <col:30>
|-CXXMethodDecl 0x55d7d2c5d9a8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2c5d8b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2c5da60 <col:20>
| `-OptimizeNoneAttr 0x55d7d2c5dab8 <col:30>
|-CXXMethodDecl 0x55d7d2c5db70 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2c5dae0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c5dcb8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2c5dc28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c5dde8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55d7d2c5df18 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55d7d2c5dfe8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55d7d2c5e0b8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55d7d2c5e1f8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2c5e168 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c5e340 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2c5e2b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2c5e488 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2c5e3f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2c5e540 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2c5e640 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2c5e5b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2c5e6f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2c5e7b8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55d7d2c5e8b8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55d7d2c5ea38 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2c5e978 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55d7d2c5f1f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2c5eaf0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55d7d2c5f158 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55d7d2c5f058 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55d7d2c5f2d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2c5f428 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2c5f398 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55d7d2c5f4e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2c5f728 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2c5f5a0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55d7d2c5f618 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55d7d2c5f8e8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55d7d2c5f7f8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55d7d2c5fb38 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55d7d2c5f9b0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55d7d2c5fa28 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55d7d2c5fbf8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2c5fe58 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55d7d2c5fd60 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55d7d2c5ff28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2c5ff28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2d773e0 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55d7d2d774f8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55d7d2d77598 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55d7d2d775f8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55d7d2d77690 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55d7d2d77690
| `-ParmVarDecl 0x55d7d2d777a8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55d7d2d77848 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55d7d2d77848
| `-ParmVarDecl 0x55d7d2d77958 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55d7d2d779f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55d7d2d779f8
| `-ParmVarDecl 0x55d7d2d77b08 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55d7d2d77b78 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55d7d2d77b78
| `-ParmVarDecl 0x55d7d2d77c88 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55d7d2d77d10 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55d7d2d77d10

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d792a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55d7d2d79478 prev 0x55d7d2d792a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d7d2d79508 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d7d2d79530 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d7aef0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55d7d2d7aea0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55d7d2d7ae80 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55d7d2d79748 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d79710 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55d7d294f410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d294f3c0 'T'
|       `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|         `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7afa8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55d7d2d7af70 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55d7d2d7af50 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55d7d2d7aef0 'type'
|     `-ElaboratedType 0x55d7d2d7aea0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55d7d2d7ae80 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55d7d2d79748 'type'
|         `-SubstTemplateTypeParmType 0x55d7d2d79710 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55d7d294f410 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d294f3c0 'T'
|           `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|             `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-CXXMethodDecl 0x55d7d2d7b128 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55d7d2d7b038 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55d7d2d7b218 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d7d2d7b2f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55d7d2d7b2f8
|-CXXMethodDecl 0x55d7d2d7b5c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55d7d2d7b4d0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55d7d2d7b808 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55d7d2d7b680 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2d7b6f8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7b9d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55d7d2d7b8c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2d7b940 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7bb38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55d7d2d7bc08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55d7d2d7be58 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55d7d2d7bcc8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55d7d2d7bd40 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7c0b8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55d7d2d7bf28 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55d7d2d7bfa0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7c278 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55d7d2d7c188 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7c438 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55d7d2d7c340 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7c4f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d7c5a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d7c7d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55d7d2d7c650 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2d7c6c8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55d7d2d7ca78 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55d7d2d7c980 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55d7d2d7cb40 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55d7d2d7cb90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d7d2d7cbe0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d77e00 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55d7d2d78008 prev 0x55d7d2d77e00 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d79210 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55d7d2d791c0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55d7d2d791a0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55d7d2d79050 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d78ee0 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55d7d29251c0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55d7d2925168 'F'
|       `-RecordType 0x55d7d2d78b40 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55d7d2d78a60 'typed_array_memory'
|-FieldDecl 0x55d7d2d7cc30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55d7d2d7cc80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d7ccb8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|     `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7cd48 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55d7d2d7cd10 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|       `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7cdd8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55d7d2d7cda0 'const Router::element_landmark_t &'
|   `-QualType 0x55d7d2d780a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|         `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7ce68 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55d7d2d7ce30 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|       `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7cef8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55d7d2d7cec0 'const Router::element_landmark_t *'
|   `-QualType 0x55d7d2d780a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|         `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7db50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55d7d2d7db00 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55d7d2d7dae0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55d7d2d7da18 'type'
|     `-LValueReferenceType 0x55d7d2d7d9e0 'const Router::element_landmark_t &'
|       `-QualType 0x55d7d2d7d781 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55d7d2d7d780 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55d7d292f110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d292f0b8 'T'
|           `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|             `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7dbb8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55d7d2d7cda0 'const Router::element_landmark_t &'
|   `-QualType 0x55d7d2d780a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|         `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7dc10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d7dc78 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55d7d2d7ce30 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|       `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-TypedefDecl 0x55d7d2d7dce0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55d7d2d7cec0 'const Router::element_landmark_t *'
|   `-QualType 0x55d7d2d780a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55d7d2d780a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d77470 'Router::element_landmark_t'
|         `-CXXRecord 0x55d7d2d773e0 'element_landmark_t'
|-EnumDecl 0x55d7d2d7dd38 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d7de30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d7de10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d7deb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d7e148 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d7df70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d7e010 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55d7d2d80b40 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55d7d2d7e2f0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55d7d2d80df8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55d7d2d80ce0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55d7d2d81140 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55d7d2d81020 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55d7d2d81450 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55d7d2d81330 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55d7d2d81740 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d81588 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d81600 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55d7d2d81868 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55d7d2d81948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d819a0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d819e8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55d7d2d81a98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d81af0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d81bb8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d81c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d81cc0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d81d08 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d81db8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d81e10 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d81e58 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d81f08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d81f60 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d81fa8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d82058 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d820b0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d820d8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d82188 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d82238 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d823f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d822e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d82360 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55d7d2d82548 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d824b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d826f8 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d82600 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d827b0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d82808 <col:30>
|-CXXMethodDecl 0x55d7d2d82928 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d82830 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d829e0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d82a38 <col:30>
|-CXXMethodDecl 0x55d7d2d82af0 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d82a60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d82c38 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d82ba8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d82d68 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55d7d2d82e98 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55d7d2d82f68 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55d7d2d83038 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55d7d2d83178 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d830e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d832c0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d83230 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d83408 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d83378 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d834c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d835c0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d83530 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d83678 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d83738 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55d7d2d83838 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55d7d2d839b8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d838f8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55d7d2d84148 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d83a70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55d7d2d840a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55d7d2d83fa8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55d7d2d84228 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d84378 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d842e8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55d7d2d84430 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d84678 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d844f0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55d7d2d84568 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55d7d2d84808 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d84748 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55d7d2d84a18 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d848d0 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55d7d2d84948 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55d7d2d84ad8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d84d38 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55d7d2d84c40 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55d7d2d84e08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d84e08

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2cdfa00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55d7d2cdfbd8 prev 0x55d7d2cdfa00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d7d2cdfc68 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d7d2cdfc90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2ce1860 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55d7d2ce1810 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55d7d2ce0140 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55d7d2ce0040 'type'
|     `-TemplateSpecializationType 0x55d7d2cdffd0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55d7d2cdfeb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55d7d2cdfe90 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55d7d2cdfe70 <col:24> 'unsigned long' 16
|       `-RecordType 0x55d7d2cdffb0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55d7d2cdfed0 'char_array'
|-TypedefDecl 0x55d7d2ce1918 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55d7d2ce18e0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55d7d2ce18c0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55d7d2ce1860 'type'
|     `-ElaboratedType 0x55d7d2ce1810 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55d7d2ce0140 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55d7d2ce0040 'type'
|         `-TemplateSpecializationType 0x55d7d2cdffd0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55d7d2cdfeb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55d7d2cdfe90 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55d7d2cdfe70 <col:24> 'unsigned long' 16
|           `-RecordType 0x55d7d2cdffb0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55d7d2cdfed0 'char_array'
|-CXXMethodDecl 0x55d7d2ce1a98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55d7d2ce19a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55d7d2ce1b88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d7d2ce1c68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55d7d2ce1c68
|-CXXMethodDecl 0x55d7d2ce1f38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55d7d2ce1e40 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55d7d2ce2178 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55d7d2ce1ff0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2ce2068 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce2348 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55d7d2ce2238 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2ce22b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce24a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55d7d2ce2578 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55d7d2ce27c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55d7d2ce2638 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55d7d2ce26b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce2a28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55d7d2ce2898 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55d7d2ce2910 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce2be8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55d7d2ce2af8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce2da8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55d7d2ce2cb0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce2e60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2ce2f10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2ce3148 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55d7d2ce2fc0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2ce3038 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55d7d2ce33e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55d7d2ce32f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55d7d2ce34b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55d7d2ce3500 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d7d2ce3550 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d85520 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55d7d2d85728 prev 0x55d7d2d85520 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d867f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55d7d2d867a0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55d7d2d86780 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55d7d2d86630 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cdf5d0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2cdf120 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55d7d2cdf038 'sized_array_memory'
|-FieldDecl 0x55d7d2d868f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55d7d2d86940 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d86978 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-RecordType 0x55d7d2d61200 'Router::Connection'
|     `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d86a38 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55d7d2d86a00 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d61200 'Router::Connection'
|       `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d86ac8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55d7d2d86a90 'const Router::Connection &'
|   `-QualType 0x55d7d2d857c1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d61200 'Router::Connection'
|         `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d86b58 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55d7d2d86b20 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d61200 'Router::Connection'
|       `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d86be8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55d7d2d86bb0 'const Router::Connection *'
|   `-QualType 0x55d7d2d857c1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d61200 'Router::Connection'
|         `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d87840 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55d7d2d877f0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55d7d2d877d0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55d7d2d87708 'type'
|     `-LValueReferenceType 0x55d7d2d876d0 'const Router::Connection &'
|       `-QualType 0x55d7d2d87471 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55d7d2d87470 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55d7d292f110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d292f0b8 'T'
|           `-RecordType 0x55d7d2d61200 'Router::Connection'
|             `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d878a8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55d7d2d86a90 'const Router::Connection &'
|   `-QualType 0x55d7d2d857c1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d61200 'Router::Connection'
|         `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d87900 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d87968 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55d7d2d86b20 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d61200 'Router::Connection'
|       `-CXXRecord 0x55d7d2d61170 'Connection'
|-TypedefDecl 0x55d7d2d879d0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55d7d2d86bb0 'const Router::Connection *'
|   `-QualType 0x55d7d2d857c1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55d7d2d857c0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d61200 'Router::Connection'
|         `-CXXRecord 0x55d7d2d61170 'Connection'
|-EnumDecl 0x55d7d2d87a28 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d87b20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d87b00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d87ba8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d87e38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d87c60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d87d00 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55d7d2d880f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55d7d2d87fe0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55d7d2d883b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55d7d2d882a0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55d7d2d88700 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55d7d2d885e0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55d7d2d88a10 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55d7d2d888f0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55d7d2d8a2b0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d8a0f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d8a170 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55d7d2d8a408 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55d7d2d8a4e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d8a540 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d8a588 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55d7d2d8a638 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d8a690 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d8a758 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d8a808 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d8a860 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d8a8a8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d8a958 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d8a9b0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d8a9f8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d8aaa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d8ab00 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d8ab48 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d8abf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d8ac50 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d8ac78 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d8ad28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d8add8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d8af98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d8ae88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d8af00 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55d7d2d8b0e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d8b058 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d8b298 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d8b1a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d8b350 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d8b3a8 <col:30>
|-CXXMethodDecl 0x55d7d2d8b4c8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d8b3d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d8b580 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d8b5d8 <col:30>
|-CXXMethodDecl 0x55d7d2d8b690 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d8b600 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d8b7d8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d8b748 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d8b908 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55d7d2d8ba38 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55d7d2d8bb08 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55d7d2d8bbd8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55d7d2d8bd18 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d8bc88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d8be60 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d8bdd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d8bfa8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d8bf18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d8c060 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d8c160 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d8c0d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d8c218 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d8c2d8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55d7d2d8c3d8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55d7d2d8c588 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d8c498 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55d7d2d8cd48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d8c640 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55d7d2d8cca8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55d7d2d8cba8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55d7d2d8ce28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d8cf78 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d8cee8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55d7d2d8d030 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d8d278 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d8d0f0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55d7d2d8d168 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55d7d2d8d438 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d8d348 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55d7d2d8d688 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d8d500 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55d7d2d8d578 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55d7d2d8d748 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d8d9a8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55d7d2d8d8b0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55d7d2d8da78 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d8da78

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c91d68 prev 0x55d7d2b42008 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2c91e60 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55d7d2c91ef0 <col:22, col:28> col:22 public
|-EnumDecl 0x55d7d2c91f18 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55d7d2c92038 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c92018 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55d7d2c92000 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d7d2c91fe0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55d7d2c920e0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c920c0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55d7d2c920a8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d7d2c92088 <col:14> 'int' 1
| |-EnumConstantDecl 0x55d7d2c92170 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c92150 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55d7d2c92130 <col:17> 'int' 0
| |-EnumConstantDecl 0x55d7d2c92200 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c921e0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55d7d2c921c0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55d7d2c92290 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c92270 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55d7d2c92250 <col:16> 'int' 2
| |-EnumConstantDecl 0x55d7d2c92320 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c92300 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55d7d2c922e0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55d7d2c923b0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c92390 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55d7d2c92370 <col:15> 'int' 4
| |-EnumConstantDecl 0x55d7d2c92440 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c92420 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55d7d2c92400 <col:14> 'int' 5
| |-EnumConstantDecl 0x55d7d2c924d0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d7d2c924b0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55d7d2c92490 <col:12> 'int' 6
| `-EnumConstantDecl 0x55d7d2c92560 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55d7d2c92540 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55d7d2c92520 <col:13> 'int' 7
|-VarDecl 0x55d7d2c925d0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55d7d2c92658 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55d7d2c926e0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55d7d2c92768 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55d7d2c927f0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55d7d2c92878 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55d7d2c92900 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55d7d2c92988 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55d7d2c92a10 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55d7d2c92a98 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55d7d2c92b20 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55d7d2c92c20 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55d7d2c97f68 '_nerrors' 'int'
| | `-IntegerLiteral 0x55d7d2c986f8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55d7d2c98768 <col:16, line:129:5>
|-CXXDestructorDecl 0x55d7d2c92d10 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55d7d2c98778 <col:29, line:132:5>
|-CXXMethodDecl 0x55d7d2c92ec8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55d7d2c92e00 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2c92f90 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55d7d2c93078 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55d7d2c987d0 <col:44, line:161:5>
|   `-ReturnStmt 0x55d7d2c987c0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2c987a8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2c98788 <col:9> 'ErrorHandler *' lvalue Var 0x55d7d2c97fc8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2c931b8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55d7d2c93128 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2c93280 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55d7d2c98830 <col:43, line:173:5>
|   `-ReturnStmt 0x55d7d2c98820 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2c98808 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2c987e8 <col:9> 'ErrorHandler *' lvalue Var 0x55d7d2c98040 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55d7d2c93338 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55d7d2c933b8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55d7d2c934c8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55d7d2c93438 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c93618 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55d7d2c93588 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c93770 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55d7d2c936d8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c938c8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55d7d2c93830 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c93a20 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55d7d2c93988 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c93c30 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d7d2c93ad8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55d7d2c93b58 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c93e08 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d7d2c93cf0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55d7d2c93d70 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c94028 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d7d2c93ec8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55d7d2c93f48 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c94208 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d7d2c940e8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55d7d2c94168 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c943e8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d7d2c942c8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55d7d2c94348 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c94570 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55d7d2c944a8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55d7d2c94740 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55d7d2c94628 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55d7d2c946a0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55d7d2c98a88 <col:57, line:234:5>
|   `-ReturnStmt 0x55d7d2c98a78 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55d7d2c98a60 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55d7d2c98a08 <col:9, col:41> 'int'
|         |-MemberExpr 0x55d7d2c989d8 <col:9> '<bound member function type>' ->xmessage 0x55d7d2c94570
|         | `-CXXThisExpr 0x55d7d2c989c8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55d7d2c98a48 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55d7d2c98a30 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55d7d2c989a8 <col:18, col:40> 'String' (CXXTemporary 0x55d7d2c989a8)
|               `-CallExpr 0x55d7d2c98970 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55d7d2c98958 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55d7d2c988d0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55d7d2c96798 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55d7d2c988f0 <col:31> 'const String' lvalue ParmVar 0x55d7d2c946a0 'str' 'const String &'
|                 `-DeclRefExpr 0x55d7d2c98910 <col:36> 'const String' lvalue ParmVar 0x55d7d2c94628 'anno' 'const String &'
|-CXXMethodDecl 0x55d7d2c94a20 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55d7d2c94800 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55d7d2c94880 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55d7d2c948f8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55d7d2c98d18 <col:68, line:243:5>
|   `-ReturnStmt 0x55d7d2c98d08 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55d7d2c98cf0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55d7d2c98c90 <col:9, col:41> 'int'
|         |-MemberExpr 0x55d7d2c98c60 <col:9> '<bound member function type>' ->xmessage 0x55d7d2c94740
|         | `-CXXThisExpr 0x55d7d2c98c50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55d7d2c98b28 <col:18> 'const String' lvalue ParmVar 0x55d7d2c94800 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55d7d2c98cd8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55d7d2c98cc0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55d7d2c98c30 <col:24, col:40> 'String' (CXXTemporary 0x55d7d2c98c30)
|               `-CXXMemberCallExpr 0x55d7d2c98bc8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55d7d2c98b58 <col:24> '<bound member function type>' ->vformat 0x55d7d2c95c00
|                 | `-CXXThisExpr 0x55d7d2c98b48 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55d7d2c98bf8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55d7d2c98b88 <col:32> 'const char *' lvalue ParmVar 0x55d7d2c94880 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55d7d2c98c10 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55d7d2c98ba8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55d7d2c948f8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d7d2c94cc0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55d7d2c94ae8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55d7d2c94b60 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55d7d2c94bd8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55d7d2c99058 <col:23, line:254:5>
|   `-ReturnStmt 0x55d7d2c99048 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55d7d2c99030 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55d7d2c98fd0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55d7d2c98fa0 <col:9> '<bound member function type>' ->xmessage 0x55d7d2c94740
|         | `-CXXThisExpr 0x55d7d2c98f90 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55d7d2c99018 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55d7d2c99000 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55d7d2c98f50 <col:18, col:65> 'String' (CXXTemporary 0x55d7d2c98f50)
|         |     `-CallExpr 0x55d7d2c98ee8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55d7d2c98ed0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55d7d2c98db8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55d7d2c96798 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55d7d2c98dd8 <col:31> 'const String' lvalue ParmVar 0x55d7d2c94b60 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55d7d2c98f30 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55d7d2c98f18 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55d7d2c98eb0 <col:37, col:64> 'String' (CXXTemporary 0x55d7d2c98eb0)
|         |             `-CallExpr 0x55d7d2c98e80 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55d7d2c98e68 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55d7d2c98df8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55d7d2c96de8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55d7d2c98e18 <col:56> 'const String' lvalue ParmVar 0x55d7d2c94ae8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55d7d2c98f70 <col:68> 'const String' lvalue ParmVar 0x55d7d2c94bd8 'str' 'const String &'
|-CXXMethodDecl 0x55d7d2c95040 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55d7d2c94d88 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55d7d2c94e00 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55d7d2c94e80 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55d7d2c94ef8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55d7d2c99310 <col:34, line:267:5>
|   `-ReturnStmt 0x55d7d2c99300 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55d7d2c992e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55d7d2c99280 <col:9, col:51> 'int'
|         |-MemberExpr 0x55d7d2c99250 <col:9> '<bound member function type>' ->xmessage 0x55d7d2c94cc0
|         | `-CXXThisExpr 0x55d7d2c99240 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55d7d2c990f8 <col:18> 'const String' lvalue ParmVar 0x55d7d2c94d88 'landmark' 'const String &'
|         |-DeclRefExpr 0x55d7d2c99118 <col:28> 'const String' lvalue ParmVar 0x55d7d2c94e00 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55d7d2c992d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55d7d2c992b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55d7d2c99220 <col:34, col:50> 'String' (CXXTemporary 0x55d7d2c99220)
|               `-CXXMemberCallExpr 0x55d7d2c991b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55d7d2c99148 <col:34> '<bound member function type>' ->vformat 0x55d7d2c95c00
|                 | `-CXXThisExpr 0x55d7d2c99138 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55d7d2c991e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55d7d2c99178 <col:42> 'const char *' lvalue ParmVar 0x55d7d2c94e80 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55d7d2c99200 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55d7d2c99198 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55d7d2c94ef8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d7d2c95150 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55d7d2c99390 <col:25, line:288:5>
|   `-ReturnStmt 0x55d7d2c99380 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2c99368 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55d7d2c99338 <col:9> 'const int' lvalue ->_nerrors 0x55d7d2c97f68
|         `-CXXThisExpr 0x55d7d2c99328 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55d7d2c95360 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55d7d2c95208 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55d7d2c95288 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c95648 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55d7d2c95428 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55d7d2c954a8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55d7d2c95520 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d7d2c957e0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55d7d2c95718 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c95a28 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55d7d2c958a0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55d7d2c95918 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55d7d2c995f0 <col:58, line:357:5>
|   `-ReturnStmt 0x55d7d2c995e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55d7d2c995c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55d7d2c99598 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2c99580 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55d7d2c99560 <col:9, col:29> 'String' (CXXTemporary 0x55d7d2c99560)
|             `-CallExpr 0x55d7d2c994f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55d7d2c994d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55d7d2c99458 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55d7d2c95648 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55d7d2c993f8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55d7d2c99528 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55d7d2c99418 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c958a0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55d7d2c99540 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2c99438 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55d7d2c95918 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d7d2c95c00 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55d7d2c95af0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55d7d2c95b68 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d7d2c95d58 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55d7d2c95cc8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2c95ea0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55d7d2c95e10 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55d7d2c96140 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55d7d2c95f58 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55d7d2c95fd8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55d7d2c96050 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55d7d2c962a0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55d7d2c96210 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55d7d2c99708 <col:37, line:441:5>
|   `-IfStmt 0x55d7d2c996f0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55d7d2c99678 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55d7d2c99648 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55d7d2c99608 <col:6> 'int' lvalue ParmVar 0x55d7d2c96210 'level' 'int'
|     | `-ImplicitCastExpr 0x55d7d2c99660 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55d7d2c99628 <col:15> 'ErrorHandler::Level' EnumConstant 0x55d7d2c92320 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55d7d2c996d8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55d7d2c996a8 <col:8> 'int' lvalue ->_nerrors 0x55d7d2c97f68
|         `-CXXThisExpr 0x55d7d2c99698 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55d7d2c96368 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55d7d2c997a0 <col:26, line:448:5>
|   `-BinaryOperator 0x55d7d2c99780 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55d7d2c99730 <col:2> 'int' lvalue ->_nerrors 0x55d7d2c97f68
|     | `-CXXThisExpr 0x55d7d2c99720 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55d7d2c99760 <col:13> 'int' 0
|-CXXMethodDecl 0x55d7d2c96588 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55d7d2c96420 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55d7d2c964f0 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55d7d2c96798 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55d7d2c96648 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55d7d2c966c0 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55d7d2c96a48 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55d7d2c96858 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55d7d2c968d8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55d7d2c96958 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55d7d2c96b00 <col:59> 0 0
|-CXXMethodDecl 0x55d7d2c96c98 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55d7d2c96b78 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55d7d2c96bf8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55d7d2c99e10 <col:70, line:534:5>
|   |-DeclStmt 0x55d7d2c99910 <line:528:2, col:20>
|   | |-VarDecl 0x55d7d2c997c8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55d7d2c99830 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55d7d2c99868 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55d7d2c998d0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55d7d2c999e0 <line:529:2, col:23>
|   | `-VarDecl 0x55d7d2c99940 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55d7d2c999c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d7d2c999a8 <col:18> 'const char *' lvalue ParmVar 0x55d7d2c96b78 'begin' 'const char *'
|   |-DoStmt 0x55d7d2c99da8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55d7d2c99cd8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55d7d2c99cc0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55d7d2c99ca0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55d7d2c999f8 <col:6> 'const char *' lvalue Var 0x55d7d2c99940 'x' 'const char *'
|   | |     `-CallExpr 0x55d7d2c99bf0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55d7d2c99bd8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55d7d2c99b90 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55d7d2c98440 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55d7d2c99c58 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55d7d2c99c40 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55d7d2c99ab0 <col:20, col:27> 'String' (CXXTemporary 0x55d7d2c99ab0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55d7d2c99a78 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55d7d2c99c70 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55d7d2c99ad0 <col:30> 'const char *' lvalue Var 0x55d7d2c99940 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55d7d2c99c88 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55d7d2c99af0 <col:33> 'const char *' lvalue ParmVar 0x55d7d2c96bf8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55d7d2c99b30 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55d7d2c99b10 <col:39> 'String' lvalue Var 0x55d7d2c997c8 'name' 'String'
|   | |       |-UnaryOperator 0x55d7d2c99b68 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55d7d2c99b48 <col:46> 'String' lvalue Var 0x55d7d2c99868 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55d7d2c99b80 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55d7d2c99d90 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55d7d2c99d78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55d7d2c99d58 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55d7d2c99d28 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|   |         `-ImplicitCastExpr 0x55d7d2c99d10 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55d7d2c99cf0 <col:11> 'String' lvalue Var 0x55d7d2c997c8 'name' 'String'
|   `-ReturnStmt 0x55d7d2c99e00 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2c99de8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2c99dc8 <col:9> 'const char *' lvalue Var 0x55d7d2c99940 'x' 'const char *'
|-CXXMethodDecl 0x55d7d2c96de8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55d7d2c96d58 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55d7d2c9a418 <col:55, line:550:5>
|   `-IfStmt 0x55d7d2c9a3f0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55d7d2c9a050 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55d7d2c9a038 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55d7d2c9a020 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55d7d2c9a000 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55d7d2c99fd0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|     | |       `-DeclRefExpr 0x55d7d2c99e70 <col:6> 'const String' lvalue ParmVar 0x55d7d2c96d58 'x' 'const String &'
|     | `-BinaryOperator 0x55d7d2c99fb0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55d7d2c99f80 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55d7d2c99f30 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55d7d2c99f18 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55d7d2c99ed0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55d7d29a7b90 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55d7d2c99e90 <col:11> 'const String' lvalue ParmVar 0x55d7d2c96d58 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55d7d2c99eb0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55d7d2c99f98 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55d7d2c99f68 <col:19> 'char' 123
|     |-ReturnStmt 0x55d7d2c9a0c0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55d7d2c9a090 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55d7d2c9a070 <col:13> 'const String' lvalue ParmVar 0x55d7d2c96d58 'x' 'const String &'
|     `-IfStmt 0x55d7d2c9a3c8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55d7d2c9a158 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55d7d2c9a140 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55d7d2c9a120 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55d7d2c9a0f0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |       `-DeclRefExpr 0x55d7d2c9a0d0 <col:11> 'const String' lvalue ParmVar 0x55d7d2c96d58 'x' 'const String &'
|       |-ReturnStmt 0x55d7d2c9a2e0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55d7d2c9a2c8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55d7d2c9a298 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55d7d2c9a280 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55d7d2c9a260 <col:13, col:29> 'String' (CXXTemporary 0x55d7d2c9a260)
|       |         `-CallExpr 0x55d7d2c9a210 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55d7d2c9a1f8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55d7d2c9a170 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55d7d2c96588 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55d7d2c9a240 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55d7d2c9a190 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55d7d2c9a1b0 <col:28> 'const String' lvalue ParmVar 0x55d7d2c96d58 'x' 'const String &'
|       `-ReturnStmt 0x55d7d2c9a3b8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55d7d2c9a3a0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55d7d2c9a370 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55d7d2c9a358 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55d7d2c9a338 <col:13, col:20> 'String' (CXXTemporary 0x55d7d2c9a338)
|                 `-CXXTemporaryObjectExpr 0x55d7d2c9a300 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2c96fb0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55d7d2c96ea0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55d7d2c96f18 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2c986e8 <col:71> 'bool' false
|-CXXRecordDecl 0x55d7d2c97060 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55d7d2c97358 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55d7d2c972f0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55d7d2c97290 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55d7d2c97250 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55d7d298abf0 'String'
|       | `-CXXRecord 0x55d7d298ab60 'String'
|       |-BuiltinType 0x55d7d265a580 'int'
|       `-DecayedType 0x55d7d2b43050 '__va_list_tag *' sugar
|         |-TypedefType 0x55d7d2b43020 'va_list' sugar
|         | |-Typedef 0x55d7d287ccb0 'va_list'
|         | `-TypedefType 0x55d7d287cc60 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55d7d27b4888 '__gnuc_va_list'
|         |   `-TypedefType 0x55d7d27b47f0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55d7d269bd38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55d7d269bce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55d7d265b2d0 '__va_list_tag'
|         |         `-CXXRecord 0x55d7d265b238 '__va_list_tag'
|         `-PointerType 0x55d7d2882550 '__va_list_tag *'
|           `-RecordType 0x55d7d265b2d0 '__va_list_tag'
|             `-CXXRecord 0x55d7d265b238 '__va_list_tag'
|-EnumDecl 0x55d7d2c973b0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55d7d2c974b0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97a10 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c97490 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2c97470 <col:16> 'int' 1
| |-EnumConstantDecl 0x55d7d2c97540 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97a28 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c97520 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55d7d2c97500 <col:21> 'int' 2
| |-EnumConstantDecl 0x55d7d2c975d0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97a40 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c975b0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55d7d2c97590 <col:22> 'int' 4
| |-EnumConstantDecl 0x55d7d2c97660 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97a58 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c97640 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55d7d2c97620 <col:17> 'int' 8
| |-EnumConstantDecl 0x55d7d2c976f0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97a70 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c976d0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55d7d2c976b0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55d7d2c97780 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97a88 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c97760 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55d7d2c97740 <col:19> 'int' 32
| |-EnumConstantDecl 0x55d7d2c97810 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97aa0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c977f0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55d7d2c977d0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55d7d2c978a0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97ab8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c97880 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55d7d2c97860 <col:14> 'int' 128
| |-EnumConstantDecl 0x55d7d2c97930 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d7d2c97ad0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c97910 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55d7d2c978f0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55d7d2c979c0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55d7d2c97ae8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2c979a0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55d7d2c97980 <col:12> 'int' 1024
|-CXXMethodDecl 0x55d7d2c97cf8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55d7d2c97b10 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55d7d2c97bb0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55d7d2c97e80 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55d7d2c97db8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55d7d2c97f28 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55d7d2c97f68 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55d7d2c97fc8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55d7d2c98040 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55d7d2c98440 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55d7d2c980b8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55d7d2c98138 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55d7d2c981b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55d7d2c98230 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55d7d2c982a8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55d7d2c98320 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55d7d2c98568 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55d7d2c98568
| `-ParmVarDecl 0x55d7d2c98678 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55d7d2c9a778 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55d7d2c9a778
  `-ParmVarDecl 0x55d7d2c9a888 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2bbbcc0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55d7d2bbbe10 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55d7d2bbbe90 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55d7d2bbcc88 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbcc88
| `-ParmVarDecl 0x55d7d2bbcd98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55d7d2bbce38 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbce38
| `-ParmVarDecl 0x55d7d2bbcf48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55d7d2bbcfb8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2bbcfb8
|-CXXMethodDecl 0x55d7d2bbd888 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbd888
| `-ParmVarDecl 0x55d7d2bbd998 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55d7d2bbda08 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbda08
| `-ParmVarDecl 0x55d7d2bbdb18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55d7d2da7ee0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55d7d2da7fc0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2bbbfc0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55d7d2bbc0e8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55d7d2bbc170 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55d7d2bbd0e8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbd0e8
| `-ParmVarDecl 0x55d7d2bbd1f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55d7d2bbd298 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbd298
| `-ParmVarDecl 0x55d7d2bbd3a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55d7d2bbd418 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2bbd418
|-CXXMethodDecl 0x55d7d2bbdbb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbdbb8
| `-ParmVarDecl 0x55d7d2bbdcc8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55d7d2bbdd38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbdd38
| `-ParmVarDecl 0x55d7d2bbde48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55d7d2da8020 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55d7d2da8100 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2bb7648 prev 0x55d7d2bb6ae0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55d7d2bb7740 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55d7d2bb77d0 <col:17, col:23> col:17 public
|-EnumDecl 0x55d7d2bb77f8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55d7d2bb7900 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8650 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb78e0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2bb78c0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55d7d2bb7990 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8668 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7970 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55d7d2bb7950 <col:12> 'int' 2
| |-EnumConstantDecl 0x55d7d2bb7a20 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8680 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7a00 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55d7d2bb79e0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55d7d2bb7ab0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8698 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7a90 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2bb7a70 <col:16> 'int' 0
| |-EnumConstantDecl 0x55d7d2bb7b40 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb86b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7b20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55d7d2bb7b00 <col:19> 'int' 32
| |-EnumConstantDecl 0x55d7d2bb7bd0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb86c8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7bb0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55d7d2bb7b90 <col:10> 'int' 64
| |-EnumConstantDecl 0x55d7d2bb7c60 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb86e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7c40 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55d7d2bb7c20 <col:19> 'int' 128
| |-EnumConstantDecl 0x55d7d2bb7cf0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb86f8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7cd0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55d7d2bb7cb0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55d7d2bb7d80 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8710 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7d60 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55d7d2bb7d40 <col:17> 'int' 512
| |-EnumConstantDecl 0x55d7d2bb7e10 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8728 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7df0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55d7d2bb7dd0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55d7d2bb7ea0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8740 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7e80 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55d7d2bb7e60 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55d7d2bb7f30 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8758 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7f10 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55d7d2bb7ef0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55d7d2bb7fc0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8770 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb7fa0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55d7d2bb7f80 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55d7d2bb8050 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb8788 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb8030 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55d7d2bb8010 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55d7d2bb8120 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55d7d2bb8100 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55d7d2bb80e0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55d7d2bb80a0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55d7d2bb80c0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55d7d2bb81f0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55d7d2bb81d0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55d7d2bb81b0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55d7d2bb8170 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55d7d2bb8190 <col:27> 'int' 27
| |-EnumConstantDecl 0x55d7d2bb8280 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb87a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb8260 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55d7d2bb8240 <col:17> 'int' 28
| |-EnumConstantDecl 0x55d7d2bb8350 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55d7d2bb8330 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55d7d2bb8310 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55d7d2bb82d0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55d7d2bb82f0 <col:18> 'int' EnumConstant 0x55d7d2bb8280 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bb83e0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb87b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb83c0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55d7d2bb83a0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55d7d2bb8470 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55d7d2bb87d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bb8450 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55d7d2bb8430 <col:26> 'int' 16
| `-EnumConstantDecl 0x55d7d2bb8600 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55d7d2bb87e8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bb85e0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55d7d2bb85c0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55d7d2bb8580 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55d7d2bb8540 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55d7d2bb8500 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55d7d2bb84c0 <col:14> 'int' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55d7d2bb84e0 <col:23> 'int' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55d7d2bb8520 <col:33> 'int' EnumConstant 0x55d7d2bb7a20 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55d7d2bb8560 <col:48> 'int' EnumConstant 0x55d7d2bb83e0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55d7d2bb85a0 <col:71> 'int' EnumConstant 0x55d7d2bb8470 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb8848 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55d7d2bbe268 <col:39, line:64:5>
|   `-ReturnStmt 0x55d7d2bbe258 <line:63:2, col:9>
|     `-MemberExpr 0x55d7d2bbe228 <col:9> 'const String' lvalue ->_name 0x55d7d2bbbc70
|       `-CXXThisExpr 0x55d7d2bbe218 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55d7d2bb8908 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55d7d2bbe2e8 <col:35, line:71:5>
|   `-ReturnStmt 0x55d7d2bbe2d8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2bbe2c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55d7d2bbe290 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|         `-CXXThisExpr 0x55d7d2bbe280 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55d7d2bb8a58 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55d7d2bb89c0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55d7d2bbe468 <col:42, line:77:5>
|   `-ReturnStmt 0x55d7d2bbe458 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55d7d2bbe440 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55d7d2bbe410 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55d7d2bbe370 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55d7d2bbe340 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55d7d2bbe300 <col:9> 'int' lvalue ParmVar 0x55d7d2bb89c0 'op' 'int'
|         | `-ImplicitCastExpr 0x55d7d2bbe358 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55d7d2bbe320 <col:15> 'Handler::Flags' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55d7d2bbe3a0 <col:25> 'void *const' lvalue ->_write_user_data 0x55d7d2bbc320
|         | `-CXXThisExpr 0x55d7d2bbe390 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55d7d2bbe3e0 <col:44> 'void *const' lvalue ->_read_user_data 0x55d7d2bbc2b8
|           `-CXXThisExpr 0x55d7d2bbe3d0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55d7d2bb8b28 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55d7d2bbe4e8 <col:41, line:82:5>
|   `-ReturnStmt 0x55d7d2bbe4d8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2bbe4c0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2bbe490 <col:9> 'void *const' lvalue ->_read_user_data 0x55d7d2bbc2b8
|         `-CXXThisExpr 0x55d7d2bbe480 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55d7d2bb8bf0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55d7d2bbe568 <col:42, line:87:5>
|   `-ReturnStmt 0x55d7d2bbe558 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2bbe540 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2bbe510 <col:9> 'void *const' lvalue ->_write_user_data 0x55d7d2bbc320
|         `-CXXThisExpr 0x55d7d2bbe500 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55d7d2bb8cb8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55d7d2bb8d58 <col:52> "" ""
|-CXXMethodDecl 0x55d7d2bb8df0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55d7d2bb8e90 <col:52> "" ""
|-CXXMethodDecl 0x55d7d2bb8f20 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbe658 <col:34, line:98:5>
|   `-ReturnStmt 0x55d7d2bbe648 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55d7d2bbe630 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55d7d2bbe610 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55d7d2bbe5e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55d7d2bbe590 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|         |   `-CXXThisExpr 0x55d7d2bbe580 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55d7d2bbe5f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55d7d2bbe5c0 <col:18> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb8fe0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbe748 <col:36, line:104:5>
|   `-ReturnStmt 0x55d7d2bbe738 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55d7d2bbe720 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55d7d2bbe700 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55d7d2bbe6d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55d7d2bbe680 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|         |   `-CXXThisExpr 0x55d7d2bbe670 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55d7d2bbe6e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55d7d2bbe6b0 <col:18> 'Handler::Flags' EnumConstant 0x55d7d2bb7a20 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb90a0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbe928 <col:38, line:113:5>
|   `-ReturnStmt 0x55d7d2bbe918 <line:112:2, col:49>
|     `-BinaryOperator 0x55d7d2bbe8f8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55d7d2bbe8a0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55d7d2bbe880 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55d7d2bbe850 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55d7d2bbe770 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|       |   |   `-CXXThisExpr 0x55d7d2bbe760 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55d7d2bbe868 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55d7d2bbe830 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55d7d2bbe810 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55d7d2bbe7e0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55d7d2bbe7a0 <col:20> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55d7d2bbe7f8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55d7d2bbe7c0 <col:29> 'Handler::Flags' EnumConstant 0x55d7d2bb7c60 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55d7d2bbe8e0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55d7d2bbe8c0 <col:49> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb9160 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbea18 <col:34, line:118:5>
|   `-ReturnStmt 0x55d7d2bbea08 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55d7d2bbe9f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55d7d2bbe9d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55d7d2bbe9a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55d7d2bbe950 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|         |   `-CXXThisExpr 0x55d7d2bbe940 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55d7d2bbe9b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55d7d2bbe980 <col:18> 'Handler::Flags' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb9220 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbebf8 <col:39, line:127:5>
|   `-ReturnStmt 0x55d7d2bbebe8 <line:126:2, col:51>
|     `-BinaryOperator 0x55d7d2bbebc8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55d7d2bbeb70 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55d7d2bbeb50 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55d7d2bbeb20 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55d7d2bbea40 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|       |   |   `-CXXThisExpr 0x55d7d2bbea30 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55d7d2bbeb38 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55d7d2bbeb00 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55d7d2bbeae0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55d7d2bbeab0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55d7d2bbea70 <col:20> 'Handler::Flags' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55d7d2bbeac8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55d7d2bbea90 <col:30> 'Handler::Flags' EnumConstant 0x55d7d2bb7cf0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55d7d2bbebb0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55d7d2bbeb90 <col:51> 'Handler::Flags' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb92e0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbed00 <col:33, line:132:5>
|   `-ReturnStmt 0x55d7d2bbecf0 <line:131:2, col:41>
|     `-BinaryOperator 0x55d7d2bbecd0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55d7d2bbec50 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55d7d2bbec20 <col:9> '<bound member function type>' ->read_visible 0x55d7d2bb90a0
|       |   `-CXXThisExpr 0x55d7d2bbec10 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55d7d2bbecb0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55d7d2bbec80 <col:27> '<bound member function type>' ->write_visible 0x55d7d2bb9220
|           `-CXXThisExpr 0x55d7d2bbec70 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55d7d2bb93a0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbee38 <col:51, line:138:5>
|   `-ReturnStmt 0x55d7d2bbee28 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55d7d2bbee10 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55d7d2bbedf0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55d7d2bbeda8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55d7d2bbed78 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55d7d2bbed28 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|           |   `-CXXThisExpr 0x55d7d2bbed18 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55d7d2bbed90 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55d7d2bbed58 <col:26> 'Handler::Flags' EnumConstant 0x55d7d2bb7b40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb9460 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbef48 <col:50, line:144:5>
|   `-ReturnStmt 0x55d7d2bbef38 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55d7d2bbef20 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55d7d2bbef00 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55d7d2bbeee0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55d7d2bbeeb0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55d7d2bbee60 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|           |   `-CXXThisExpr 0x55d7d2bbee50 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55d7d2bbeec8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55d7d2bbee90 <col:26> 'Handler::Flags' EnumConstant 0x55d7d2bb7b40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb9520 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55d7d2bbf038 <col:29, line:166:5>
|   `-ReturnStmt 0x55d7d2bbf028 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55d7d2bbf010 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55d7d2bbeff0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55d7d2bbefc0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55d7d2bbef70 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|         |   `-CXXThisExpr 0x55d7d2bbef60 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55d7d2bbefd8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55d7d2bbefa0 <col:18> 'Handler::Flags' EnumConstant 0x55d7d2bb7bd0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bb97a8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55d7d2bb95d0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55d7d2bb9648 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55d7d2bb96c0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bb99b8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55d7d2bb9870 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55d7d2bb98e8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55d7d2bbe150 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2bbe130 <col:62> 'int' 0
| `-CompoundStmt 0x55d7d2bbf2d8 <col:71, line:188:5>
|   `-ReturnStmt 0x55d7d2bbf2c8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55d7d2bbf2b0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55d7d2bbf280 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2bbf268 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55d7d2bbf248 <col:9, col:36> 'String' (CXXTemporary 0x55d7d2bbf248)
|             `-CXXMemberCallExpr 0x55d7d2bbf1a8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55d7d2bbf178 <col:9> '<bound member function type>' ->call_read 0x55d7d2bb97a8
|               | `-CXXThisExpr 0x55d7d2bbf168 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55d7d2bbf1e0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55d7d2bbf0c0 <col:19> 'Element *' lvalue ParmVar 0x55d7d2bb9870 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55d7d2bbf210 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55d7d2bbf1f8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55d7d2bbf128 <col:22, col:29> 'String' (CXXTemporary 0x55d7d2bbf128)
|               |     `-CXXTemporaryObjectExpr 0x55d7d2bbf0f0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55d7d2bbf228 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2bbf148 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55d7d2bb98e8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bb9c50 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55d7d2bb9a78 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55d7d2bb9af0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55d7d2bb9b68 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bb9dd8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55d7d2bb9d18 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55d7d2bba008 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55d7d2bb9e90 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55d7d2bb9f08 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55d7d2bba108 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55d7d2bbf338 <col:50, line:225:5>
|   `-ReturnStmt 0x55d7d2bbf328 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2bbf310 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2bbf2f0 <col:9> 'const Handler *' lvalue Var 0x55d7d2bbc4b0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55d7d2bba1a8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55d7d2bba2b0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbae50 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba290 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55d7d2bba270 <col:11> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba340 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbae68 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba320 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55d7d2bba300 <col:12> 'Handler::Flags' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba3d0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbae80 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba3b0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55d7d2bba390 <col:17> 'Handler::Flags' EnumConstant 0x55d7d2bb7a20 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba460 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbae98 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba440 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55d7d2bba420 <col:16> 'Handler::Flags' EnumConstant 0x55d7d2bb7ab0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba4f0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaeb0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba4d0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55d7d2bba4b0 <col:19> 'Handler::Flags' EnumConstant 0x55d7d2bb7b40 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba580 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaec8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba560 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55d7d2bba540 <col:10> 'Handler::Flags' EnumConstant 0x55d7d2bb7bd0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba610 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaee0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba5f0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55d7d2bba5d0 <col:19> 'Handler::Flags' EnumConstant 0x55d7d2bb7c60 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba6a0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaef8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba680 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55d7d2bba660 <col:20> 'Handler::Flags' EnumConstant 0x55d7d2bb7cf0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba730 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaf10 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba710 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55d7d2bba6f0 <col:17> 'Handler::Flags' EnumConstant 0x55d7d2bb7d80 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba7c0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaf28 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba7a0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55d7d2bba780 <col:15> 'Handler::Flags' EnumConstant 0x55d7d2bb7e10 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba850 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaf40 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba830 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55d7d2bba810 <col:11> 'Handler::Flags' EnumConstant 0x55d7d2bb7ea0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba8e0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaf58 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba8c0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55d7d2bba8a0 <col:16> 'Handler::Flags' EnumConstant 0x55d7d2bb7f30 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bba970 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaf70 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba950 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55d7d2bba930 <col:13> 'Handler::Flags' EnumConstant 0x55d7d2bb7fc0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbaa00 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbaf88 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bba9e0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55d7d2bba9c0 <col:15> 'Handler::Flags' EnumConstant 0x55d7d2bb8050 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbaa90 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbafa0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbaa70 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55d7d2bbaa50 <col:20> 'Handler::Flags' EnumConstant 0x55d7d2bb8120 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbab20 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbafb8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbab00 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55d7d2bbaae0 <col:27> 'Handler::Flags' EnumConstant 0x55d7d2bb81f0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbabb0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbafd0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbab90 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55d7d2bbab70 <col:22> 'Handler::Flags' EnumConstant 0x55d7d2bb8280 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbac40 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbafe8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbac20 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55d7d2bbac00 <col:18> 'Handler::Flags' EnumConstant 0x55d7d2bb8350 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbacd0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbb000 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbacb0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55d7d2bbac90 <col:25> 'Handler::Flags' EnumConstant 0x55d7d2bb83e0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbad60 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55d7d2bbb018 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbad40 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55d7d2bbad20 <col:26> 'Handler::Flags' EnumConstant 0x55d7d2bb8470 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55d7d2bbae00 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55d7d2bbb030 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bbade0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55d7d2bbadb0 <col:20> 'Handler::Flags' EnumConstant 0x55d7d2bb8600 'f_special' 'Handler::Flags'
|-EnumDecl 0x55d7d2bbb048 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55d7d2bbb150 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb6b0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb130 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55d7d2bbb110 <col:12> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb1e0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb6c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb1c0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55d7d2bbb1a0 <col:13> 'Handler::Flags' EnumConstant 0x55d7d2bb7990 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb270 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb6e0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb250 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55d7d2bbb230 <col:15> 'Handler::Flags' EnumConstant 0x55d7d2bb7a20 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb300 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb6f8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb2e0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55d7d2bbb2c0 <col:8> 'Handler::Flags' EnumConstant 0x55d7d2bb7bd0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb390 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb710 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb370 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55d7d2bbb350 <col:9> 'Handler::Flags' EnumConstant 0x55d7d2bb7ea0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb420 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb728 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb400 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55d7d2bbb3e0 <col:14> 'Handler::Flags' EnumConstant 0x55d7d2bb7f30 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb4b0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb740 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb490 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55d7d2bbb470 <col:11> 'Handler::Flags' EnumConstant 0x55d7d2bb7fc0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb540 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb758 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb520 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55d7d2bbb500 <col:13> 'Handler::Flags' EnumConstant 0x55d7d2bb8050 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55d7d2bbb5d0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55d7d2bbb770 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb5b0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55d7d2bbb590 <col:20> 'Handler::Flags' EnumConstant 0x55d7d2bb8280 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55d7d2bbb660 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55d7d2bbb788 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bbb640 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55d7d2bbb620 <col:16> 'Handler::Flags' EnumConstant 0x55d7d2bb8350 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55d7d2bbb7a0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55d7d2bbb860 <col:25> "" ""
| |-EnumConstantDecl 0x55d7d2bbb910 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55d7d2bbb9f0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bbb8f0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55d7d2bbb8d0 <col:14> 'Handler::Flags' EnumConstant 0x55d7d2bb7ab0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55d7d2bbb9a0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55d7d2bbba08 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bbb980 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55d7d2bbb960 <col:17> 'Handler::Flags' EnumConstant 0x55d7d2bb7b40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55d7d2bbbb88 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55d7d2bbba30 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55d7d2bbbab0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55d7d2bbf9f8 <col:70, line:284:5>
|   |-ParenExpr 0x55d7d2bbf818 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55d7d2bbf7e8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2bbf518 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2bbf4e8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55d7d2bbf490 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55d7d2bbf470 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55d7d2bbf440 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55d7d2bbf360 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55d7d2bbc380
|   |   |   |   |   `-CXXThisExpr 0x55d7d2bbf350 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55d7d2bbf458 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55d7d2bbf420 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55d7d2bbf400 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55d7d2bbf3d0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55d7d2bbf390 <col:34> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55d7d2bbf3e8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55d7d2bbf3b0 <col:43> 'Handler::Flags' EnumConstant 0x55d7d2bb83e0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55d7d2bbf4d0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55d7d2bbf4b0 <col:69> 'Handler::Flags' EnumConstant 0x55d7d2bb7900 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55d7d2bbf578 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2bbf558 <col:85> 'int' 0
|   |   `-CallExpr 0x55d7d2bbf748 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2bbf730 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2bbf710 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2bbf788 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2bbf5e8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55d7d2bbf7a0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2bbf638 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55d7d2bbf7b8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2bbf670 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55d7d2bbf7d0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2bbf6f8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2bbf6e0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2bbf690 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55d7d2bbf9e8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55d7d2bbf9d0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55d7d2bbf9a0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2bbf988 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55d7d2bbf968 <col:9, col:38> 'String' (CXXTemporary 0x55d7d2bbf968)
|             `-CallExpr 0x55d7d2bbf900 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55d7d2bbf8e8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55d7d2bbf878 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55d7d2bbbe90
|               |   `-MemberExpr 0x55d7d2bbf848 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55d7d2bbbf58
|               |     `-CXXThisExpr 0x55d7d2bbf838 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55d7d2bbf930 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55d7d2bbf8a8 <col:22> 'Element *' lvalue ParmVar 0x55d7d2bbba30 'e' 'Element *'
|               `-ImplicitCastExpr 0x55d7d2bbf948 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2bbf8c8 <col:25> 'void *' lvalue ParmVar 0x55d7d2bbbab0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55d7d2bbbc38 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55d7d2bbbc70 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55d7d2bbbcc0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55d7d2bbbe10 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55d7d2bbbe90 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55d7d2bbcc88 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbcc88
| | `-ParmVarDecl 0x55d7d2bbcd98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55d7d2bbce38 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbce38
| | `-ParmVarDecl 0x55d7d2bbcf48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55d7d2bbcfb8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2bbcfb8
| |-CXXMethodDecl 0x55d7d2bbd888 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbd888
| | `-ParmVarDecl 0x55d7d2bbd998 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55d7d2bbda08 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbda08
| | `-ParmVarDecl 0x55d7d2bbdb18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55d7d2da7ee0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55d7d2da7fc0 <col:5>
|-FieldDecl 0x55d7d2bbbf58 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55d7d2bbbfc0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55d7d2bbc0e8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55d7d2bbc170 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55d7d2bbd0e8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbd0e8
| | `-ParmVarDecl 0x55d7d2bbd1f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55d7d2bbd298 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbd298
| | `-ParmVarDecl 0x55d7d2bbd3a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55d7d2bbd418 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2bbd418
| |-CXXMethodDecl 0x55d7d2bbdbb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55d7d2bbdbb8
| | `-ParmVarDecl 0x55d7d2bbdcc8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55d7d2bbdd38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55d7d2bbdd38
| | `-ParmVarDecl 0x55d7d2bbde48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55d7d2da8020 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55d7d2da8100 <col:5>
|-FieldDecl 0x55d7d2bbc238 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55d7d2bbc2b8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55d7d2bbc320 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55d7d2bbc380 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55d7d2bbc3e8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55d7d2bbc450 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55d7d2bbc4b0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55d7d2bbc5d0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55d7d2bbc528 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55d7d2bbe200 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d7d2bbe1e8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d7d2bbe1d0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d7d2bbe1b0 <col:30, col:37> 'String' (CXXTemporary 0x55d7d2bbe1b0)
|           `-CXXTemporaryObjectExpr 0x55d7d2bbe178 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2bbc778 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55d7d2bbc6b8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55d7d2bbc8f8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55d7d2bbc830 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55d7d2bbcab8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55d7d2bbcaf8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55d7d2bbcaf8
| `-ParmVarDecl 0x55d7d2bbcbd8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55d7d2bbd528 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55d7d2bbd528
| `-ParmVarDecl 0x55d7d2bbd638 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55d7d2bbd6d8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55d7d2bbd6d8
| `-ParmVarDecl 0x55d7d2bbd7e8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55d7d2bbdeb8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55d7d2bbdeb8
| `-ParmVarDecl 0x55d7d2bbdfc8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55d7d2bbe050 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55d7d2bbe050

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d8e5e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55d7d2d8e7f8 prev 0x55d7d2d8e5e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d8f810 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55d7d2d8f7c0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55d7d2d8f7a0 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55d7d2d8f650 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cebd80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2ceb8d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55d7d2ceb7e8 'sized_array_memory'
|-FieldDecl 0x55d7d2d8f910 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55d7d2d8f960 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d8f998 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-PointerType 0x55d7d265ace0 'void *'
|     `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d8fa28 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55d7d2d8f9f0 'void *&'
|   `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d265ace0 'void *'
|       `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d8fae8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55d7d2d8fab0 'void *const &'
|   `-QualType 0x55d7d2d8e891 'void *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d265ace0 'void *'
|         `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d8fb78 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55d7d2d8fb40 'void **'
|   `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d265ace0 'void *'
|       `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d8fc08 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55d7d2d8fbd0 'void *const *'
|   `-QualType 0x55d7d2d8e891 'void *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d265ace0 'void *'
|         `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d907f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55d7d2d907a0 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55d7d2d90780 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55d7d2d90710 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d904d0 'void *' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-PointerType 0x55d7d265ace0 'void *'
|         `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d90858 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55d7d2d8fab0 'void *const &'
|   `-QualType 0x55d7d2d8e891 'void *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d265ace0 'void *'
|         `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d908b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d90918 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55d7d2d8fb40 'void **'
|   `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d265ace0 'void *'
|       `-BuiltinType 0x55d7d265a4e0 'void'
|-TypedefDecl 0x55d7d2d90980 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55d7d2d8fbd0 'void *const *'
|   `-QualType 0x55d7d2d8e891 'void *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2d8e890 'void *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d265ace0 'void *'
|         `-BuiltinType 0x55d7d265a4e0 'void'
|-EnumDecl 0x55d7d2d909d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d90ad0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d90ab0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d90b58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d90da8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d90c10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d90cb0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55d7d2d91068 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55d7d2d90f50 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55d7d2d91328 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55d7d2d91210 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55d7d2d91670 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55d7d2d91550 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55d7d2d91980 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55d7d2d91860 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55d7d2d91c70 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d91ab8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d91b30 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55d7d2d91dc8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55d7d2d91ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d91f00 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d91f48 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55d7d2d91ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d92050 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d932d8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d93388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d933e0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d93428 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d934d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d93530 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d93578 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d93628 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d93680 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d936c8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d93778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d937d0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d937f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d938a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d93958 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d93b18 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d93a08 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d93a80 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55d7d2d93c68 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d93bd8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d93e18 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d93d20 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d93ed0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d93f28 <col:30>
|-CXXMethodDecl 0x55d7d2d94048 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d93f50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d94100 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d94158 <col:30>
|-CXXMethodDecl 0x55d7d2d94210 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d94180 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d94358 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d942c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d94488 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55d7d2d945b8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55d7d2d94688 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55d7d2d94758 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55d7d2d94898 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d94808 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d949e0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d94950 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d94b28 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d94a98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d94be0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d94ce0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d94c50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d94d98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d94e58 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55d7d2d94f58 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55d7d2d950d8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d95018 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55d7d2d95898 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d95190 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55d7d2d957f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55d7d2d956f8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55d7d2d95978 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d95ac8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d95a38 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55d7d2d95b80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d95dc8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d95c40 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55d7d2d95cb8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55d7d2d95f88 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d95e98 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55d7d2d961d8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d96050 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55d7d2d960c8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55d7d2d96298 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d964f8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55d7d2d96400 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55d7d2d965c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d965c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2d967c0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55d7d2d968d8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55d7d2d96968 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55d7d2d96a70 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55d7d2d96ac0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2d96a50 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55d7d2d96a30 <col:27> 'int' 4096
|-FieldDecl 0x55d7d2d96ae8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55d7d2d96b50 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55d7d2d96d48 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55d7d2d96dd8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55d7d2d96f98 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55d7d2d96e38 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55d7d2d96eb0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55d7d2d96ae8 'name' 'String'
| | `-CXXConstructExpr 0x55d7d2da1a48 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55d7d2da1a08 <col:20> 'const String' lvalue ParmVar 0x55d7d2d96e38 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55d7d2d96b50 'nsig' 'int'
| | `-IntegerLiteral 0x55d7d2da1aa0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2d96d48 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55d7d2da1b88 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55d7d2d96dd8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55d7d2da1b48 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d2da1b08 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55d7d2d96eb0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55d7d2da1e18 <col:42, line:289:9>
|   `-CallExpr 0x55d7d2da1dc8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55d7d2da1db0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55d7d2da1d90 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55d7d28bf0f8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55d7d2da1e00 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55d7d2da1cd8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55d7d2da1cb8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55d7d2da1ca0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d7d2da1c50 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55d7d2d96d48
|     |     |   `-CXXThisExpr 0x55d7d2da1c40 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55d7d2da1c80 <col:25> 'int' 0
|     |-IntegerLiteral 0x55d7d2da1cf0 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55d7d2da1d70 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55d7d2da1d50 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55d7d2da1d20 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55d7d2d96d48 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55d7d2da1d10 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55d7d2d97078 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55d7d2d97078
| `-ParmVarDecl 0x55d7d2d97188 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55d7d2d97228 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55d7d2d97228
| `-ParmVarDecl 0x55d7d2d97338 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55d7d2d973d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55d7d2d973d8
| `-ParmVarDecl 0x55d7d2d974e8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55d7d2d97558 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55d7d2d97558
| `-ParmVarDecl 0x55d7d2d97668 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55d7d2d976f0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55d7d2d976f0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2d52fd0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2d530e8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55d7d2d53178 <col:21, col:27> col:21 public
|-EnumDecl 0x55d7d2d531a0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55d7d2d532b8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55d7d2d53298 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55d7d2d53280 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d7d2d53260 <col:32> 'int' 1
| `-EnumConstantDecl 0x55d7d2d53360 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55d7d2d53340 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55d7d2d53328 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55d7d2d53308 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55d7d2d53410 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55d7d2d53948 <col:19, col:21>
|-CXXDestructorDecl 0x55d7d2d53500 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55d7d2d53958 <col:28, col:30>
|-CXXMethodDecl 0x55d7d2d536c0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55d7d2d535f0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55d7d2d537c8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55d7d2d537c8
  `-ParmVarDecl 0x55d7d2d538d8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2dabb30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x55d7d2dabd38 prev 0x55d7d2dabb30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2dacd50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55d7d2dacd00 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x55d7d2dacce0 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x55d7d2dacb90 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cebd80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2ceb8d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55d7d2ceb7e8 'sized_array_memory'
|-FieldDecl 0x55d7d2dace50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55d7d2dacea0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2daced8 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-PointerType 0x55d7d2da9cc0 'NameDB *'
|     `-RecordType 0x55d7d2da8470 'NameDB'
|       `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dacf98 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x55d7d2dacf60 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2da9cc0 'NameDB *'
|       `-RecordType 0x55d7d2da8470 'NameDB'
|         `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dad058 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x55d7d2dad020 'NameDB *const &'
|   `-QualType 0x55d7d2dabdd1 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2da9cc0 'NameDB *'
|         `-RecordType 0x55d7d2da8470 'NameDB'
|           `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dad118 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x55d7d2dad0e0 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2da9cc0 'NameDB *'
|       `-RecordType 0x55d7d2da8470 'NameDB'
|         `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dad1d8 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x55d7d2dad1a0 'NameDB *const *'
|   `-QualType 0x55d7d2dabdd1 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2da9cc0 'NameDB *'
|         `-RecordType 0x55d7d2da8470 'NameDB'
|           `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2daddb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x55d7d2dadd60 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x55d7d2dadd40 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x55d7d2dadcd0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2dada90 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-PointerType 0x55d7d2da9cc0 'NameDB *'
|         `-RecordType 0x55d7d2da8470 'NameDB'
|           `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dade18 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x55d7d2dad020 'NameDB *const &'
|   `-QualType 0x55d7d2dabdd1 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2da9cc0 'NameDB *'
|         `-RecordType 0x55d7d2da8470 'NameDB'
|           `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dade70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2daded8 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x55d7d2dad0e0 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2da9cc0 'NameDB *'
|       `-RecordType 0x55d7d2da8470 'NameDB'
|         `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-TypedefDecl 0x55d7d2dadf40 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x55d7d2dad1a0 'NameDB *const *'
|   `-QualType 0x55d7d2dabdd1 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2dabdd0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2da9cc0 'NameDB *'
|         `-RecordType 0x55d7d2da8470 'NameDB'
|           `-CXXRecord 0x55d7d2db34b8 'NameDB'
|-EnumDecl 0x55d7d2dadf98 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2dae090 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2dae070 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2dae118 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2dae3a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2dae1d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2dae270 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x55d7d2dae668 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55d7d2dae550 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x55d7d2dae928 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55d7d2dae810 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55d7d2daec70 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55d7d2daeb50 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x55d7d2daef80 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55d7d2daee60 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55d7d2daf270 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2daf0b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2daf130 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55d7d2daf3c8 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55d7d2daf4a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2daf500 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2daf548 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55d7d2daf5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2daf650 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2daf718 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2daf7c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2daf820 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2daf868 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2daf918 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2daf970 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2daf9b8 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2dafa68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2dafac0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2dafb08 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2dafbb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2dafc10 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2dafc38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2dafce8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2dafd98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2daffa0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2dafe90 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2daff08 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55d7d2db00f0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2db0060 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2db0298 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2db01a8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2db0350 <col:20>
| `-OptimizeNoneAttr 0x55d7d2db03a8 <col:30>
|-CXXMethodDecl 0x55d7d2db04c8 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2db03d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2db0580 <col:20>
| `-OptimizeNoneAttr 0x55d7d2db05d8 <col:30>
|-CXXMethodDecl 0x55d7d2db0690 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2db0600 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2db07d8 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2db0748 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2db0908 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x55d7d2db0a38 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55d7d2db0b08 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x55d7d2db0bd8 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55d7d2db0d18 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2db0c88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2db0e60 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2db0dd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2db0fa8 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2db0f18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2db1060 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2db1160 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2db10d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2db1218 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2db12d8 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x55d7d2db13d8 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x55d7d2db1558 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2db1498 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x55d7d2db1d18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2db1610 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x55d7d2db1c78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x55d7d2db1b78 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x55d7d2db1df8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2db1f48 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2db1eb8 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55d7d2db2000 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2db2248 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2db20c0 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55d7d2db2138 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55d7d2db2408 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x55d7d2db2318 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55d7d2db2658 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x55d7d2db24d0 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55d7d2db2548 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55d7d2db2718 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2db2978 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55d7d2db2880 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x55d7d2db2a48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2db2a48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2da8520 prev 0x55d7d2d544b0 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2da8618 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x55d7d2da86a8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55d7d2da8708 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x55d7d2da87f8 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x55d7d2da87f8
|-CXXMethodDecl 0x55d7d2da8900 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55d7d2da89c0 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x55d7d2da8a60 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x55d7d2da8b60 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da98a0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8b40 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2da8b20 <col:11> 'int' 0
| |-EnumConstantDecl 0x55d7d2da8bf0 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da98b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8bd0 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2da8bb0 <col:19> 'int' 1
| |-EnumConstantDecl 0x55d7d2da8c80 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da98d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8c60 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x55d7d2da8c40 <col:17> 'int' 2
| |-EnumConstantDecl 0x55d7d2da8d10 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da98e8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8cf0 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x55d7d2da8cd0 <col:18> 'int' 3
| |-EnumConstantDecl 0x55d7d2da8da0 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9900 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8d80 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x55d7d2da8d60 <col:12> 'int' 4
| |-EnumConstantDecl 0x55d7d2da8e30 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9918 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8e10 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x55d7d2da8df0 <col:15> 'int' 5
| |-EnumConstantDecl 0x55d7d2da8ec0 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9930 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8ea0 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x55d7d2da8e80 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x55d7d2da8f50 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9948 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8f30 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x55d7d2da8f10 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x55d7d2da8fe0 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9960 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da8fc0 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x55d7d2da8fa0 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x55d7d2da9070 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9978 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9050 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x55d7d2da9030 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x55d7d2da9100 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9990 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da90e0 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x55d7d2da90c0 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x55d7d2da9190 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da99a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9170 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x55d7d2da9150 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x55d7d2da9220 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da99c0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9200 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x55d7d2da91e0 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x55d7d2da92b0 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da99d8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9290 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x55d7d2da9270 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x55d7d2da9340 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da99f0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9320 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x55d7d2da9300 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x55d7d2da93d0 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da93b0 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x55d7d2da9390 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x55d7d2da9460 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a20 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9440 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x55d7d2da9420 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x55d7d2da94f0 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da94d0 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x55d7d2da94b0 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x55d7d2da9580 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a50 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9560 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x55d7d2da9540 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x55d7d2da9610 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a68 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da95f0 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x55d7d2da95d0 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x55d7d2da96a0 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a80 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9680 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x55d7d2da9660 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x55d7d2da9730 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9a98 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da9710 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x55d7d2da96f0 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x55d7d2da97c0 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55d7d2da9ab0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2da97a0 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x55d7d2da9780 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x55d7d2da9850 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x55d7d2da9ac8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2da9830 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x55d7d2da9810 <col:17> 'int' 100663298
|-CXXMethodDecl 0x55d7d2da9dc8 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x55d7d2da9af0 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2da9b68 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x55d7d2da9be0 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55d7d2da9c58 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x55d7d2da9fe8 <line:104:5, col:61> col:17 installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x55d7d2da9e98 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x55d7d2da9f10 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x55d7d2daa168 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x55d7d2daa0a8 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x55d7d2daa558 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x55d7d2daa220 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2daa298 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x55d7d2daa310 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x55d7d2daa390 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x55d7d2daa408 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55d7d2daa8d8 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x55d7d2daa630 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2daa6a8 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55d7d2daa720 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55d7d2daa798 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x55d7d2daac58 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x55d7d2daa9a8 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2daaa20 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55d7d2daaa98 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55d7d2daab10 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x55d7d2daafd8 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x55d7d2daad28 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2daada0 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x55d7d2daae20 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x55d7d2daae98 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55d7d2dab2b8 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x55d7d2dab0a8 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2dab120 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x55d7d2dab198 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x55d7d2dab6b8 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x55d7d2dab380 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2dab3f8 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x55d7d2dab470 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x55d7d2dab4f0 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x55d7d2dab568 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55d7d2daba38 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x55d7d2dab790 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2dab808 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x55d7d2dab880 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x55d7d2dab8f8 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x55d7d2dabaf8 <line:230:3, col:10> col:3 private
|-FieldDecl 0x55d7d2db2b30 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x55d7d2db2c30 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x55d7d2db2cc8 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x55d7d2db34a0 <col:47, col:73>
|   `-ReturnStmt 0x55d7d2db3490 <col:49, col:67>
|     `-CStyleCastExpr 0x55d7d2db3468 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x55d7d2db3448 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x55d7d2db3028 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x55d7d2db2d78 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2db2df0 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d7d2db2e68 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x55d7d2db2ee0 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x55d7d2db3118 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x55d7d2db3118
| `-ParmVarDecl 0x55d7d2db3228 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x55d7d2db32c8 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x55d7d2db32c8
  `-ParmVarDecl 0x55d7d2db33d8 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2d54560 prev 0x55d7d2d27410 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55d7d2d54658 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55d7d2d546e8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55d7d2d54758 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55d7d2d54818 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d548d8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d54998 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d54a58 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55d7d2d54af8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55d7d2d54c58 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55d7d2d54c38 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55d7d2d54c18 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55d7d2d54be0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55d7d2d54bc0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55d7d2d54bf8 <col:42> 'int' 1
|-CXXMethodDecl 0x55d7d2d54cf8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55d7d2d54e68 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55d7d2d54da8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55d7d2d54fb0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55d7d2d54f20 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55d7d2d55078 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55d7d2d553a0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55d7d2d55468 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55d7d2d555e8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55d7d2d55520 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55d7d2d556b0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55d7d2d558b8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55d7d2d55760 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55d7d2d557e0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55d7d2d55a10 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55d7d2d55980 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55d7d2d55b60 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55d7d2d55ad0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55d7d2d55cb0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55d7d2d55c20 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55d7d2d55e00 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55d7d2d55d70 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55d7d2d55fd0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55d7d2d55ec0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55d7d2d55f38 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55d7d2d561d8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55d7d2d56090 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55d7d2d56108 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2d9af90 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2d9af70 <col:60> 'int' 0
|-CXXMethodDecl 0x55d7d2d56468 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55d7d2d56298 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55d7d2d56310 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55d7d2d56388 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2d9afc8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2d9afa8 <col:76> 'int' 0
|-CXXMethodDecl 0x55d7d2d56708 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55d7d2d56530 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55d7d2d565a8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55d7d2d56620 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2d9b000 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2d9afe0 <col:84> 'int' 0
|-CXXMethodDecl 0x55d7d2d56a60 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55d7d2d567d0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55d7d2d56848 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2d568c8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55d7d2d56968 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55d7d2d56d10 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55d7d2d56b30 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55d7d2d56bb0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55d7d2d56c28 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55d7d2d56f78 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55d7d2d56dd8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55d7d2d56e58 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55d7d2d56ed0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55d7d2d57430 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55d7d2d57040 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55d7d2d570c0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55d7d2d57168 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55d7d2d572e0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55d7d2d574f0 <col:115> "" ""
|-CXXMethodDecl 0x55d7d2d578b0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55d7d2d57570 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55d7d2d575f0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55d7d2d57668 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55d7d2d577b0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55d7d2d57970 <col:113> "" ""
|-CXXMethodDecl 0x55d7d2d57ac0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55d7d2d579f8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55d7d2d57c90 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55d7d2d57b80 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55d7d2d57bf8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55d7d2d57e98 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55d7d2d57d50 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55d7d2d57dc8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55d7d2d58298 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55d7d2d57f58 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55d7d2d57fd0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55d7d2d58048 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d7d2d580c8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55d7d2d58140 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2d9b038 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2d9b018 <col:137> 'int' 0
|-CXXMethodDecl 0x55d7d2d586a8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55d7d2d58370 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55d7d2d583e8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55d7d2d58460 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2d584e0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55d7d2d58558 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2d9b070 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2d9b050 <col:139> 'int' 0
|-CXXMethodDecl 0x55d7d2d58b58 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55d7d2d58780 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55d7d2d587f8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55d7d2d58870 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2d588e8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2d58968 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55d7d2d9b0a8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2d9b088 <col:133> 'int' 0
| `-ParmVarDecl 0x55d7d2d589e8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55d7d2d9b0e0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2d9b0c0 <col:160> 'int' 0
|-CXXMethodDecl 0x55d7d2d58ef0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55d7d2d58c38 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55d7d2d58cb0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55d7d2d58d28 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d7d2d58da0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2d9b118 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2d9b0f8 <col:116> 'int' 0
|-EnumDecl 0x55d7d2d58fb0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55d7d2d590b0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55d7d2d59100 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2d59090 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55d7d2d59070 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55d7d2d59280 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55d7d2d59128 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55d7d2d591a0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55d7d2d59498 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55d7d2d59340 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55d7d2d593c0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55d7d2d597c8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55d7d2d59558 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55d7d2d596b0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55d7d2d59950 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55d7d2d59888 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55d7d2d59ad0 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55d7d2d59a08 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55d7d2d59ce0 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55d7d2d59b88 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55d7d2d59c08 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55d7d2d59e68 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55d7d2d59da0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55d7d2d59f88 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55d7d2d5a078 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55d7d2d5a1e8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55d7d2d5a128 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55d7d2d5a370 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55d7d2d5a2a0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55d7d2d5a578 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55d7d2d5a428 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55d7d2d5a4a8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55d7d2d5a6a8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55d7d2d5a798 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55d7d2d5a858 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55d7d2d5aa58 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55d7d2d5a908 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55d7d2d5a980 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55d7d2d9b1c8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d7d2d9b1b0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d7d2d9b198 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d7d2d9b178 <col:58, col:65> 'String' (CXXTemporary 0x55d7d2d9b178)
|           `-CXXTemporaryObjectExpr 0x55d7d2d9b140 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2d5ac28 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55d7d2d5ab18 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55d7d2d5ab90 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55d7d2d9b278 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d7d2d9b260 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d7d2d9b248 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d7d2d9b228 <col:71, col:78> 'String' (CXXTemporary 0x55d7d2d9b228)
|           `-CXXTemporaryObjectExpr 0x55d7d2d9b1f0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2d5adf8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55d7d2d5ace8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55d7d2d5ad60 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55d7d2d9ea28 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d7d2d9ea10 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d7d2d9e9f8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d7d2d9e9d8 <col:71, col:78> 'String' (CXXTemporary 0x55d7d2d9e9d8)
|           `-CXXTemporaryObjectExpr 0x55d7d2d9e9a0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2d5afc8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55d7d2d5aeb8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55d7d2d5af30 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55d7d2d9ead8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d7d2d9eac0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d7d2d9eaa8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d7d2d9ea88 <col:70, col:77> 'String' (CXXTemporary 0x55d7d2d9ea88)
|           `-CXXTemporaryObjectExpr 0x55d7d2d9ea50 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2d5b148 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55d7d2d5b088 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55d7d2d5b368 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55d7d2d5b200 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55d7d2d5b278 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55d7d2d5b468 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55d7d2d5b468
|-CXXMethodDecl 0x55d7d2d5b570 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55d7d2d5b630 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55d7d2d5b6f0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55d7d2d5b7b0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55d7d2d5b9a8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55d7d2d5b860 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55d7d2d5b8d8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55d7d2d5bd60 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55d7d2d5ba68 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55d7d2d5bae0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55d7d2d5bb58 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55d7d2d5bbd0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55d7d2d5bc50 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55d7d2d5c0c0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55d7d2d5be40 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55d7d2d5bec0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55d7d2d5bf40 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55d7d2d5bfc0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55d7d2d5c1a0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55d7d2d5fbe0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55d7d2d5c250 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55d7d2d5fd30 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2d5fc98 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d5ff38 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2d5fde8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55d7d2d5fe60 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d60088 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55d7d2d5fff8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d601d0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55d7d2d60140 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55d7d2d60410 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55d7d2d60290 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55d7d2d60338 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55d7d2d60598 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55d7d2d604d0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55d7d2d60640 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2d60758 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55d7d2d60800 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55d7d2d60868 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55d7d2d60920 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55d7d2d9eb00 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55d7d2d60af8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55d7d2d609e0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55d7d2d60a60 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55d7d2d60800 'idx' 'int'
| | | `-ImplicitCastExpr 0x55d7d2d9eb50 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55d7d2d9eb10 <col:19> 'int' lvalue ParmVar 0x55d7d2d609e0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55d7d2d60868 'port' 'int'
| | | `-ImplicitCastExpr 0x55d7d2d9ebd0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55d7d2d9eb90 <col:28> 'int' lvalue ParmVar 0x55d7d2d60a60 'p' 'int'
| | `-CompoundStmt 0x55d7d2d9ec20 <col:31, line:153:9>
| |-CXXMethodDecl 0x55d7d2d60cd8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55d7d2d60be8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55d7d2d9ee20 <col:46, line:157:9>
| |   `-ReturnStmt 0x55d7d2d9ee10 <line:156:13, col:46>
| |     `-BinaryOperator 0x55d7d2d9edf0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55d7d2d9ecf0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55d7d2d9ecc0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55d7d2d9ec40 <col:20> 'const int' lvalue ->idx 0x55d7d2d60800
| |       | |   `-CXXThisExpr 0x55d7d2d9ec30 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55d7d2d9ecd8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55d7d2d9ec90 <col:27, col:29> 'const int' lvalue .idx 0x55d7d2d60800
| |       |     `-DeclRefExpr 0x55d7d2d9ec70 <col:27> 'const Router::Port' lvalue ParmVar 0x55d7d2d60be8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55d7d2d9edd0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55d7d2d9eda0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55d7d2d9ed20 <col:36> 'const int' lvalue ->port 0x55d7d2d60868
| |         |   `-CXXThisExpr 0x55d7d2d9ed10 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55d7d2d9edb8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55d7d2d9ed70 <col:44, col:46> 'const int' lvalue .port 0x55d7d2d60868
| |             `-DeclRefExpr 0x55d7d2d9ed50 <col:44> 'const Router::Port' lvalue ParmVar 0x55d7d2d60be8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55d7d2d60e20 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55d7d2d60d90 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55d7d2d9f028 <col:46, line:160:9>
| |   `-ReturnStmt 0x55d7d2d9f018 <line:159:13, col:46>
| |     `-BinaryOperator 0x55d7d2d9eff8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55d7d2d9eef8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55d7d2d9eec8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55d7d2d9ee48 <col:20> 'const int' lvalue ->idx 0x55d7d2d60800
| |       | |   `-CXXThisExpr 0x55d7d2d9ee38 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55d7d2d9eee0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55d7d2d9ee98 <col:27, col:29> 'const int' lvalue .idx 0x55d7d2d60800
| |       |     `-DeclRefExpr 0x55d7d2d9ee78 <col:27> 'const Router::Port' lvalue ParmVar 0x55d7d2d60d90 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55d7d2d9efd8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55d7d2d9efa8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55d7d2d9ef28 <col:36> 'const int' lvalue ->port 0x55d7d2d60868
| |         |   `-CXXThisExpr 0x55d7d2d9ef18 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55d7d2d9efc0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55d7d2d9ef78 <col:44, col:46> 'const int' lvalue .port 0x55d7d2d60868
| |             `-DeclRefExpr 0x55d7d2d9ef58 <col:44> 'const Router::Port' lvalue ParmVar 0x55d7d2d60d90 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55d7d2d60f68 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55d7d2d60ed8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55d7d2d9f350 <col:45, line:163:9>
| |   `-ReturnStmt 0x55d7d2d9f340 <line:162:13, col:65>
| |     `-BinaryOperator 0x55d7d2d9f320 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55d7d2d9f100 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55d7d2d9f0d0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55d7d2d9f050 <col:20> 'const int' lvalue ->idx 0x55d7d2d60800
| |       | |   `-CXXThisExpr 0x55d7d2d9f040 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55d7d2d9f0e8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55d7d2d9f0a0 <col:26, col:28> 'const int' lvalue .idx 0x55d7d2d60800
| |       |     `-DeclRefExpr 0x55d7d2d9f080 <col:26> 'const Router::Port' lvalue ParmVar 0x55d7d2d60ed8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55d7d2d9f300 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55d7d2d9f2e0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55d7d2d9f1e0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55d7d2d9f1b0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55d7d2d9f130 <col:36> 'const int' lvalue ->idx 0x55d7d2d60800
| |           | |   `-CXXThisExpr 0x55d7d2d9f120 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55d7d2d9f1c8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55d7d2d9f180 <col:43, col:45> 'const int' lvalue .idx 0x55d7d2d60800
| |           |     `-DeclRefExpr 0x55d7d2d9f160 <col:43> 'const Router::Port' lvalue ParmVar 0x55d7d2d60ed8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55d7d2d9f2c0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55d7d2d9f290 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55d7d2d9f210 <col:52> 'const int' lvalue ->port 0x55d7d2d60868
| |             |   `-CXXThisExpr 0x55d7d2d9f200 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55d7d2d9f2a8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55d7d2d9f260 <col:59, col:61> 'const int' lvalue .port 0x55d7d2d60868
| |                 `-DeclRefExpr 0x55d7d2d9f240 <col:59> 'const Router::Port' lvalue ParmVar 0x55d7d2d60ed8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55d7d2d610b0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55d7d2d61020 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55d7d2d9f678 <col:46, line:166:9>
| |   `-ReturnStmt 0x55d7d2d9f668 <line:165:13, col:66>
| |     `-BinaryOperator 0x55d7d2d9f648 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55d7d2d9f428 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55d7d2d9f3f8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55d7d2d9f378 <col:20> 'const int' lvalue ->idx 0x55d7d2d60800
| |       | |   `-CXXThisExpr 0x55d7d2d9f368 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55d7d2d9f410 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55d7d2d9f3c8 <col:26, col:28> 'const int' lvalue .idx 0x55d7d2d60800
| |       |     `-DeclRefExpr 0x55d7d2d9f3a8 <col:26> 'const Router::Port' lvalue ParmVar 0x55d7d2d61020 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55d7d2d9f628 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55d7d2d9f608 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55d7d2d9f508 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55d7d2d9f4d8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55d7d2d9f458 <col:36> 'const int' lvalue ->idx 0x55d7d2d60800
| |           | |   `-CXXThisExpr 0x55d7d2d9f448 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55d7d2d9f4f0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55d7d2d9f4a8 <col:43, col:45> 'const int' lvalue .idx 0x55d7d2d60800
| |           |     `-DeclRefExpr 0x55d7d2d9f488 <col:43> 'const Router::Port' lvalue ParmVar 0x55d7d2d61020 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55d7d2d9f5e8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55d7d2d9f5b8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55d7d2d9f538 <col:52> 'const int' lvalue ->port 0x55d7d2d60868
| |             |   `-CXXThisExpr 0x55d7d2d9f528 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55d7d2d9f5d0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55d7d2d9f588 <col:60, col:62> 'const int' lvalue .port 0x55d7d2d60868
| |                 `-DeclRefExpr 0x55d7d2d9f568 <col:60> 'const Router::Port' lvalue ParmVar 0x55d7d2d61020 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55d7d2d9f690 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55d7d2d9f690
| | `-ParmVarDecl 0x55d7d2d9f7a8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55d7d2d9f848 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55d7d2d9f848
| | `-ParmVarDecl 0x55d7d2d9f958 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55d7d2d9f9f0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55d7d2d9fcc0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55d7d2d9fcc0
| | `-ParmVarDecl 0x55d7d2d9fdc8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55d7d2d9fe38 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55d7d2d9ff48 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55d7d2da0268 <col:12>
|     |-BinaryOperator 0x55d7d2da0108 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55d7d2da00c0 <col:12> 'int' lvalue ->idx 0x55d7d2d60800
|     | | `-CXXThisExpr 0x55d7d2da00b0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55d7d2da00f0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55d7d2da0080 <col:12> 'int' xvalue .idx 0x55d7d2d60800
|     |     `-CXXStaticCastExpr 0x55d7d2da0050 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55d7d2da0020 <col:12> 'Router::Port' lvalue ParmVar 0x55d7d2d9ff48 '' 'Router::Port &&'
|     |-BinaryOperator 0x55d7d2da0210 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55d7d2da01c8 <col:12> 'int' lvalue ->port 0x55d7d2d60868
|     | | `-CXXThisExpr 0x55d7d2da01b8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55d7d2da01f8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55d7d2da0188 <col:12> 'int' xvalue .port 0x55d7d2d60868
|     |     `-CXXStaticCastExpr 0x55d7d2da0158 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55d7d2da0128 <col:12> 'Router::Port' lvalue ParmVar 0x55d7d2d9ff48 '' 'Router::Port &&'
|     `-ReturnStmt 0x55d7d2da0258 <col:12>
|       `-UnaryOperator 0x55d7d2da0240 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2da0230 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55d7d2d61170 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2d61288 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55d7d2d61478 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55d7d2d61530 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55d7d2d61478 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55d7d2d9f9c8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55d7d2d9fb00 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55d7d2d61868 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55d7d2d615f0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55d7d2d61670 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55d7d2d616f0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55d7d2d61770 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55d7d2d61478 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55d7d2d9fb10 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55d7d2da0548 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55d7d2da0338 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55d7d2da0300 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55d7d2da02e8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55d7d2d9ffd0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55d7d2d9fe38 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55d7d2d9fbe0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55d7d2d9fbc8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55d7d2d9fb78 <col:13> 'Router::Port [2]' lvalue ->p 0x55d7d2d61478
| |   |   | |   `-CXXThisExpr 0x55d7d2d9fb68 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55d7d2d9fba8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55d7d2d9ffb8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55d7d2d9fc80 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55d7d2d9fc50 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55d7d2d9fc10 <col:25> 'int' lvalue ParmVar 0x55d7d2d616f0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55d7d2d9fc68 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55d7d2d9fc30 <col:33> 'int' lvalue ParmVar 0x55d7d2d61770 'to_port' 'int'
| |   `-ExprWithCleanups 0x55d7d2da0530 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55d7d2da04f8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55d7d2da04e0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55d7d2da04c0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55d7d2d9fe38 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55d7d2da03c8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55d7d2da03b0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55d7d2da0360 <col:13> 'Router::Port [2]' lvalue ->p 0x55d7d2d61478
| |       | |   `-CXXThisExpr 0x55d7d2da0350 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55d7d2da0390 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55d7d2da04a8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55d7d2da0468 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55d7d2da0438 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55d7d2da03f8 <col:25> 'int' lvalue ParmVar 0x55d7d2d615f0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55d7d2da0450 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55d7d2da0418 <col:35> 'int' lvalue ParmVar 0x55d7d2d61670 'from_port' 'int'
| |-CXXMethodDecl 0x55d7d2d61a38 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55d7d2d61948 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55d7d2da0b08 <col:45, line:182:9>
| |   |-ParenExpr 0x55d7d2da09e8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55d7d2da09b8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55d7d2da0688 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55d7d2da0658 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55d7d2da05c0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55d7d2da05a8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55d7d2da0568 <col:34> 'int' lvalue ParmVar 0x55d7d2d61948 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55d7d2da0588 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55d7d2da0638 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55d7d2da0620 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55d7d2da05e0 <col:44> 'int' lvalue ParmVar 0x55d7d2d61948 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55d7d2da0600 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55d7d2da06e8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55d7d2da06c8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55d7d2da0918 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55d7d2da0900 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55d7d2da08e0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55d7d2da0958 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55d7d2da0758 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55d7d2da0970 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55d7d2da0780 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55d7d2da0988 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55d7d2da07b8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55d7d2da09a0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55d7d2da08c8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55d7d2da08b0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55d7d2da0858 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55d7d2da0af8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55d7d2da0ad8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55d7d2da0aa8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55d7d2da0a18 <col:20> 'Router::Port const[2]' lvalue ->p 0x55d7d2d61478
| |       |   `-CXXThisExpr 0x55d7d2da0a08 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55d7d2da0ac0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55d7d2da0a48 <col:22> 'int' lvalue ParmVar 0x55d7d2d61948 'i' 'int'
| |-CXXMethodDecl 0x55d7d2d61be8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55d7d2d61af8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55d7d2da1080 <col:33, line:186:9>
| |   |-ParenExpr 0x55d7d2da0fa0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55d7d2da0f70 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55d7d2da0c48 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55d7d2da0c18 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55d7d2da0b80 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55d7d2da0b68 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55d7d2da0b28 <col:34> 'int' lvalue ParmVar 0x55d7d2d61af8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55d7d2da0b48 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55d7d2da0bf8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55d7d2da0be0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55d7d2da0ba0 <col:44> 'int' lvalue ParmVar 0x55d7d2d61af8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55d7d2da0bc0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55d7d2da0ca8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55d7d2da0c88 <col:59> 'int' 0
| |   |   `-CallExpr 0x55d7d2da0ed0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55d7d2da0eb8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55d7d2da0e98 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55d7d2da0f10 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55d7d2da0d18 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55d7d2da0f28 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55d7d2da0d40 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55d7d2da0f40 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55d7d2da0d78 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55d7d2da0f58 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55d7d2da0e80 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55d7d2da0e68 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55d7d2da0e18 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55d7d2da1070 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55d7d2da1050 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55d7d2da1020 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55d7d2da0fd0 <col:20> 'Router::Port [2]' lvalue ->p 0x55d7d2d61478
| |       |   `-CXXThisExpr 0x55d7d2da0fc0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55d7d2da1038 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55d7d2da1000 <col:22> 'int' lvalue ParmVar 0x55d7d2d61af8 'i' 'int'
| |-CXXMethodDecl 0x55d7d2d61d88 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55d7d2d61cc8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55d7d2da1458 <col:52, line:190:9>
| |   `-ReturnStmt 0x55d7d2da1448 <line:189:13, col:51>
| |     `-BinaryOperator 0x55d7d2da1428 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55d7d2da1240 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55d7d2da1228 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55d7d2da11e0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55d7d2d60cd8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55d7d2da1118 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55d7d2da1100 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55d7d2da10b0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55d7d2d61478
| |       | | |   `-CXXThisExpr 0x55d7d2da10a0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55d7d2da10e0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55d7d2da11c0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55d7d2da11a8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55d7d2da1158 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55d7d2d61478
| |       |   |   `-DeclRefExpr 0x55d7d2da1138 <col:28> 'const Router::Connection' lvalue ParmVar 0x55d7d2d61cc8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55d7d2da1188 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55d7d2da13f0 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55d7d2da13d8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55d7d2da13b8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55d7d2d60cd8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55d7d2da12f0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55d7d2da12d8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55d7d2da1288 <col:38> 'Router::Port const[2]' lvalue ->p 0x55d7d2d61478
| |         | |   `-CXXThisExpr 0x55d7d2da1278 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55d7d2da12b8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55d7d2da1398 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55d7d2da1380 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55d7d2da1330 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55d7d2d61478
| |           |   `-DeclRefExpr 0x55d7d2da1310 <col:46> 'const Router::Connection' lvalue ParmVar 0x55d7d2d61cc8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55d7d2da1360 <col:50> 'int' 1
| `-CXXMethodDecl 0x55d7d2d61ed0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55d7d2d61e40 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55d7d2da19f0 <col:51, line:193:9>
|     `-ReturnStmt 0x55d7d2da19e0 <line:192:13, col:69>
|       `-BinaryOperator 0x55d7d2da19c0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55d7d2da15e8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55d7d2da15d0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55d7d2da15b0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55d7d2d60f68 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55d7d2da14e8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55d7d2da14d0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55d7d2da1480 <col:20> 'Router::Port const[2]' lvalue ->p 0x55d7d2d61478
|         | | |   `-CXXThisExpr 0x55d7d2da1470 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55d7d2da14b0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55d7d2da1590 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55d7d2da1578 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55d7d2da1528 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55d7d2d61478
|         |   |   `-DeclRefExpr 0x55d7d2da1508 <col:27> 'const Router::Connection' lvalue ParmVar 0x55d7d2d61e40 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55d7d2da1558 <col:31> 'int' 0
|         `-ParenExpr 0x55d7d2da19a0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55d7d2da1980 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55d7d2da1798 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55d7d2da1780 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55d7d2da1760 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55d7d2d60cd8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55d7d2da1698 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55d7d2da1680 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55d7d2da1630 <col:38> 'Router::Port const[2]' lvalue ->p 0x55d7d2d61478
|             | | |   `-CXXThisExpr 0x55d7d2da1620 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55d7d2da1660 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55d7d2da1740 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55d7d2da1728 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55d7d2da16d8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55d7d2d61478
|             |   |   `-DeclRefExpr 0x55d7d2da16b8 <col:46> 'const Router::Connection' lvalue ParmVar 0x55d7d2d61e40 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55d7d2da1708 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55d7d2da1948 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55d7d2da1930 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55d7d2da1910 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55d7d2d60f68 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55d7d2da1848 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55d7d2da1830 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55d7d2da17e0 <col:56> 'Router::Port const[2]' lvalue ->p 0x55d7d2d61478
|               | |   `-CXXThisExpr 0x55d7d2da17d0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55d7d2da1810 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55d7d2da18f0 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55d7d2da18d8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55d7d2da1888 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55d7d2d61478
|                 |   `-DeclRefExpr 0x55d7d2da1868 <col:63> 'const Router::Connection' lvalue ParmVar 0x55d7d2d61e40 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55d7d2da18b8 <col:67> 'int' 1
|-AccessSpecDecl 0x55d7d2d61f90 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d2d61fb8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55d7d2d62070 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55d7d2d62130 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55d7d2d62180 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55d7d2d621d0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55d7d2d62220 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55d7d2d62270 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55d7d2d622c0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55d7d2d623d8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55d7d2d623b8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55d7d2d623a0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d7d2d62380 <col:25> 'int' 2
| |-EnumConstantDecl 0x55d7d2d62480 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55d7d2d62460 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55d7d2d62448 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d7d2d62428 <col:48> 'int' 1
| |-EnumConstantDecl 0x55d7d2d62510 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55d7d2d624f0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55d7d2d624d0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55d7d2d625a0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55d7d2d62580 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55d7d2d62560 <col:30> 'int' 1
| `-EnumConstantDecl 0x55d7d2d62630 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55d7d2d62610 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55d7d2d625f0 <col:50> 'int' 2
|-FieldDecl 0x55d7d2d62690 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55d7d2d626f0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55d7d2d62758 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55d7d2d627f8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55d7d2d627d8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2d627a8 <col:30> 'int' 1
|-FieldDecl 0x55d7d2d62898 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55d7d2d62878 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2d62848 <col:33> 'int' 1
|-FieldDecl 0x55d7d2d62938 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55d7d2d62918 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2d628e8 <col:32> 'int' 1
|-FieldDecl 0x55d7d2d629a0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55d7d2d62a00 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55d7d2d6ec00 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55d7d2d6ed00 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55d7d2d6ee00 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55d7d2d77280 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55d7d2d77390 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55d7d2d773e0 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55d7d2d774f8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55d7d2d77598 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55d7d2d775f8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55d7d2d77690 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55d7d2d77690
| | `-ParmVarDecl 0x55d7d2d777a8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55d7d2d77848 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55d7d2d77848
| | `-ParmVarDecl 0x55d7d2d77958 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55d7d2d779f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55d7d2d779f8
| | `-ParmVarDecl 0x55d7d2d77b08 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55d7d2d77b78 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55d7d2d77b78
| | `-ParmVarDecl 0x55d7d2d77c88 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55d7d2d77d10 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55d7d2d77d10
|-FieldDecl 0x55d7d2d84ef0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55d7d2d84f50 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55d7d2d85060 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55d7d2d853b8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55d7d2d854c0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55d7d2d8db60 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55d7d2d8dc70 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55d7d2d8dd70 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55d7d2d8de80 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55d7d2d8df90 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55d7d2d8e0a0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55d7d2d8e1b0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55d7d2d8e200 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55d7d2d8e300 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55d7d2d8e350 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2d8e2e0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55d7d2d8e2c0 <col:29> 'int' 256
|-FieldDecl 0x55d7d2d8e3b0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55d7d2d8e418 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55d7d2d8e480 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55d7d2d8e580 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55d7d2d966b0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55d7d2d96710 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55d7d2d96770 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55d7d2d967c0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55d7d2d968d8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55d7d2d96968 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55d7d2d96a70 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55d7d2d96ac0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55d7d2d96a50 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55d7d2d96a30 <col:27> 'int' 4096
| |-FieldDecl 0x55d7d2d96ae8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55d7d2d96b50 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55d7d2d96d48 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55d7d2d96dd8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55d7d2d96f98 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55d7d2d96e38 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55d7d2d96eb0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55d7d2d96ae8 'name' 'String'
| | | `-CXXConstructExpr 0x55d7d2da1a48 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55d7d2da1a08 <col:20> 'const String' lvalue ParmVar 0x55d7d2d96e38 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55d7d2d96b50 'nsig' 'int'
| | | `-IntegerLiteral 0x55d7d2da1aa0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55d7d2d96d48 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55d7d2da1b88 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55d7d2d96dd8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55d7d2da1b48 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55d7d2da1b08 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55d7d2d96eb0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55d7d2da1e18 <col:42, line:289:9>
| |   `-CallExpr 0x55d7d2da1dc8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55d7d2da1db0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55d7d2da1d90 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55d7d28bf0f8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55d7d2da1e00 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55d7d2da1cd8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55d7d2da1cb8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55d7d2da1ca0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55d7d2da1c50 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55d7d2d96d48
| |     |     |   `-CXXThisExpr 0x55d7d2da1c40 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55d7d2da1c80 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55d7d2da1cf0 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55d7d2da1d70 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55d7d2da1d50 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55d7d2da1d20 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55d7d2d96d48 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55d7d2da1d10 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55d7d2d97078 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55d7d2d97078
| | `-ParmVarDecl 0x55d7d2d97188 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55d7d2d97228 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55d7d2d97228
| | `-ParmVarDecl 0x55d7d2d97338 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55d7d2d973d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55d7d2d973d8
| | `-ParmVarDecl 0x55d7d2d974e8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55d7d2d97558 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55d7d2d97558
| | `-ParmVarDecl 0x55d7d2d97668 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55d7d2d976f0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55d7d2d976f0
|-FieldDecl 0x55d7d2d977e0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55d7d2d97840 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55d7d2d978a0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55d7d2d97900 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55d7d2d97960 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55d7d2d97a70 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55d7d2d97b70 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55d7d2d97bd0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55d7d2d97d18 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55d7d2d97c58 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55d7d2d97ec8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55d7d2d97dd8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55d7d2d98010 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55d7d2d97f80 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55d7d2d983b8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55d7d2d980c8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55d7d2d98140 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2d981c0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55d7d2d98238 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55d7d2d982b0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2d9eaf0 <col:57> 'bool' false
|-CXXMethodDecl 0x55d7d2d98528 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2d98490 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d98678 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2d985e0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d987c8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2d98730 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d98920 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55d7d2d98888 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55d7d2d98c40 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2d989d8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55d7d2d98a50 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55d7d2d98ad0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55d7d2d98b48 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d98da8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2d98d10 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2d98e70 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55d7d2d98f30 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55d7d2d99130 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55d7d2d98fe0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55d7d2d99058 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55d7d2d99200 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55d7d2d99348 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55d7d2d992b0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55d7d2da2050 <col:42, line:326:5>
|   `-ReturnStmt 0x55d7d2da2040 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55d7d2da2028 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55d7d2da2008 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55d7d2da1fd8 <col:16, col:45> '<bound member function type>' .back 0x55d7d2c5e0b8
|           `-ArraySubscriptExpr 0x55d7d2da1f58 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55d7d2da1f28 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2da1e40 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55d7d2d853b8
|             |   `-CXXThisExpr 0x55d7d2da1e30 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55d7d2da1f40 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2da1e70 <col:38> 'bool' lvalue ParmVar 0x55d7d2d992b0 'isout' 'bool'
|-CXXMethodDecl 0x55d7d2d99518 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55d7d2d99400 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55d7d2d99478 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55d7d2d99670 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55d7d2d995d8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55d7d2d99918 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55d7d2d99728 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55d7d2d997a0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55d7d2d99820 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55d7d2d99af0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55d7d2d999e0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55d7d2d99a58 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55d7d2d99c78 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55d7d2d99bb8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55d7d2d99f10 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55d7d2d99d38 <col:23> col:26 'int'
| |-ParmVarDecl 0x55d7d2d99db0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55d7d2d99e28 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55d7d2d9a128 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55d7d2d99fd8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55d7d2d9a050 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55d7d2d9a338 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55d7d2d9a1f0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55d7d2d9a268 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55d7d2d9a4b8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55d7d2d9a3f8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55d7d2d9a6b8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55d7d2d9a570 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55d7d2d9a5e8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55d7d2d9a890 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d7d2d9a778 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55d7d2d9a7f8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55d7d2d9ab70 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55d7d2d9a950 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55d7d2d9a9c8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55d7d2d9aa48 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55d7d2d9aac0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55d7d2d9ac50 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55d7d2d9acb0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55d7d2d9af30 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55d7d2d9ae30 parent 0x55d7d2bc0760 prev 0x55d7d2bd0388 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55d7d2d9ad10 <col:36> col:39 'int'
    `-ParmVarDecl 0x55d7d2d9ad90 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2bc0760 prev 0x55d7d2bc04e0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2bc0858 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55d7d2bc08e8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55d7d2bc0948 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55d7d2bc0a38 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55d7d2bc0b38 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55d7d2bc0d08 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55d7d2bc0bb8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55d7d2bc0c30 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55d7d2bc0e98 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55d7d2bc0dd0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55d7d2bc0f40 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2bc1078 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55d7d2bc0fb0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55d7d2bc1218 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55d7d2bc1158 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55d7d2bc13b8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55d7d2bc12f8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55d7d2bc1460 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55d7d2bc1560 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55d7d2bc1640 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc1540 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2bc1520 <col:26> 'int' 1
| `-EnumConstantDecl 0x55d7d2bc15f0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55d7d2bc1658 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bc15d0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55d7d2bc15b0 <col:44> 'int' 2
|-CXXMethodDecl 0x55d7d2bc17a0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55d7d2bc1688 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55d7d2bc1708 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55d7d2bc18f8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55d7d2bc1868 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55d7d2bc1b38 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55d7d2bc19b8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55d7d2bc1a30 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55d7d2bc1be8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2bc1c40 <col:30>
|-CXXMethodDecl 0x55d7d2bc1d48 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55d7d2bc1c80 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55d7d2bc1df0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2bc1e48 <col:30>
|-CXXMethodDecl 0x55d7d2bc1e98 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55d7d2bc1f60 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55d7d2bc2078 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55d7d2bc2100 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55d7d2bc2188 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55d7d2bc2210 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55d7d2bc2298 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55d7d2bc2328 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55d7d2bc23e8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55d7d2bc2470 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55d7d2bc24f8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55d7d2bc2580 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55d7d2bc2608 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55d7d2bc2690 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55d7d2bc2720 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55d7d2bc27e0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55d7d2bc2870 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55d7d2bc29c0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55d7d2bc2928 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55d7d2bc2b50 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55d7d2bc2a80 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55d7d2bc2e00 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55d7d2bc2c08 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2bc2c88 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55d7d2bc2d08 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55d7d2bc2eb8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55d7d2bc2fc0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d7d2bc3250 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc2fa0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2bc2f80 <col:33> 'int' 0
| |-EnumConstantDecl 0x55d7d2bc3050 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d7d2bc3268 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc3030 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55d7d2bc3010 <col:32> 'int' 20
| |-EnumConstantDecl 0x55d7d2bc30e0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d7d2bc3280 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc30c0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55d7d2bc30a0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55d7d2bc3170 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d7d2bc3298 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc3150 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55d7d2bc3130 <col:35> 'int' 100
| `-EnumConstantDecl 0x55d7d2bc3200 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55d7d2bc32b0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bc31e0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55d7d2bc31c0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55d7d2bc32f0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55d7d2bc3730 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55d7d2bc35a0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55d7d2bc3618 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bc3800 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55d7d2bc3980 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55d7d2bc38b0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bc3b88 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55d7d2bc3a38 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55d7d2bc3ab0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bc3c88 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55d7d2bc3d28 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55d7d2bc3df0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d7d2bc3e80 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55d7d2bc40b0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc3e60 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55d7d2bc3e40 <col:36> 'int' EnumConstant 0x55d7d2bc3df0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d7d2bc3ed0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d7d2bc3f20 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d7d2bc3f70 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d7d2bc3fc0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d7d2bc4010 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55d7d2bc4060 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55d7d2bc4198 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55d7d2bc40d8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55d7d2bc4260 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55d7d2bc4320 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55d7d2bc43e0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55d7d2bc44a0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55d7d2bc45b8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55d7d2bc4680 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55d7d2bc4800 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55d7d2bc4730 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55d7d2bc4928 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55d7d2bc4b28 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55d7d2bc49d8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55d7d2bc4a58 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55d7d2bd2478 <col:54, line:127:5>
|   |-ParenExpr 0x55d7d2bd2328 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55d7d2bd22f8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2bd1fe8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55d7d2bd1fc0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55d7d2bd1fa8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55d7d2bd1f90 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55d7d2bd1f60 <col:31> 'Router *' lvalue ->_router 0x55d7d2bcfe40
|   |   |         `-CXXThisExpr 0x55d7d2bd1f50 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55d7d2bd2048 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2bd2028 <col:48> 'int' 0
|   |   `-CallExpr 0x55d7d2bd2258 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2bd2240 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2bd2220 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2bd2298 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2bd20b8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55d7d2bd22b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2bd20d8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55d7d2bd22c8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2bd2110 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55d7d2bd22e0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2bd2208 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2bd21f0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2bd21a8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55d7d2bd23c0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55d7d2bd2358 <col:9> 'Router *' lvalue ->_router 0x55d7d2bcfe40
|   | | `-CXXThisExpr 0x55d7d2bd2348 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2bd23a8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d7d2bd2388 <col:19> 'Router *' lvalue ParmVar 0x55d7d2bc49d8 'r' 'Router *'
|   `-BinaryOperator 0x55d7d2bd2458 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55d7d2bd23f0 <col:9> 'int' lvalue ->_eindex 0x55d7d2bcfea8
|     | `-CXXThisExpr 0x55d7d2bd23e0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55d7d2bd2440 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2bd2420 <col:19> 'int' lvalue ParmVar 0x55d7d2bc4a58 'eindex' 'int'
|-CXXMethodDecl 0x55d7d2bc4cb0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55d7d2bc4be8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55d7d2bc4d80 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55d7d2bc4e48 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55d7d2bc4ee8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55d7d2bc5138 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55d7d2bc4fb0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2bc5030 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55d7d2bc51e8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2bc5240 <col:30>
|-CXXMethodDecl 0x55d7d2bc5348 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55d7d2bc5280 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55d7d2bc53f0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2bc5448 <col:30>
|-CXXMethodDecl 0x55d7d2bc5518 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55d7d2bc5488 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55d7d2bc55c0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2bc5618 <col:30>
|-CXXMethodDecl 0x55d7d2bc57a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55d7d2bc5650 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55d7d2bc56d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55d7d2bc5938 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55d7d2bc5870 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55d7d2bc5a88 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55d7d2bc59f8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55d7d2bc5bd8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55d7d2bc5b48 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55d7d2bc5d28 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55d7d2bc5c98 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55d7d2bc5fe8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55d7d2bc5de0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2bc5e60 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55d7d2bc5f08 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55d7d2bc60c0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55d7d2bc6180 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55d7d2bc6450 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55d7d2bc6300 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55d7d2bc6378 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bc6578 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55d7d2bc6750 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55d7d2bc6630 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55d7d2bc66b0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55d7d2bc6938 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55d7d2bc6818 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55d7d2bc6898 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55d7d2bc6ca8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55d7d2bc69f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc6a70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d7d2bc6af0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55d7d2bd1a60 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2bd1a40 <col:106> 'int' 0
| `-ParmVarDecl 0x55d7d2bc6b68 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1a98 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2bd1a78 <col:126> 'int' 0
|-CXXMethodDecl 0x55d7d2bc7048 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d7d2bc6d78 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc6e10 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d7d2bc6e90 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55d7d2bc6f08 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1ad0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2bd1ab0 <col:114> 'int' 0
|-CXXMethodDecl 0x55d7d2bc73d8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d7d2bc7120 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55d7d2bc7198 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d7d2bc7218 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55d7d2bd1ae8 <col:96> 'int' 0
| `-ParmVarDecl 0x55d7d2bc7290 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1b28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2bd1b08 <col:116> 'int' 0
|-CXXMethodDecl 0x55d7d2bc7758 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55d7d2bc74a8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc7520 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bc75a0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55d7d2bd1b60 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2bd1b40 <col:109> 'int' 0
| `-ParmVarDecl 0x55d7d2bc7618 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1b98 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2bd1b78 <col:129> 'int' 0
|-CXXMethodDecl 0x55d7d2bc7ad8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d7d2bc7828 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc78a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bc7920 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55d7d2bc7998 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1bd0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2bd1bb0 <col:117> 'int' 0
|-CXXMethodDecl 0x55d7d2bc7e68 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d7d2bc7bb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bc7c28 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bc7ca8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55d7d2bd1be8 <col:99> 'int' 0
| `-ParmVarDecl 0x55d7d2bc7d20 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1c28 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d7d2bd1c08 <col:119> 'int' 0
|-CXXMethodDecl 0x55d7d2bc8288 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55d7d2bc7f38 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc7fb8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55d7d2bc8030 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bc80b0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55d7d2bd1c60 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2bd1c40 <col:108> 'int' 0
| `-ParmVarDecl 0x55d7d2bc8130 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55d7d2bd1c98 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2bd1c78 <col:141> 'int' 0
|-CXXMethodDecl 0x55d7d2bc86a8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55d7d2bc8360 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc83e0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55d7d2bc8458 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bc84d8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55d7d2bc8558 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55d7d2bd1cb0 <col:121> 'int' 0
|-CXXMethodDecl 0x55d7d2bc8ad8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55d7d2bc8788 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55d7d2bc8808 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55d7d2bc8880 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bc8900 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55d7d2bd1cd0 <col:98> 'int' 0
| `-ParmVarDecl 0x55d7d2bc8980 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55d7d2bd1cf0 <col:123> 'int' 0
|-CXXMethodDecl 0x55d7d2bc8da0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55d7d2bc8bb0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55d7d2bc8c30 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55d7d2bc8cb0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55d7d2bd1d10 <col:80> 'int' 0
|-EnumDecl 0x55d7d2bc8e58 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55d7d2bc8f60 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d7d2bc91f0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc8f40 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2bc8f20 <col:42> 'int' 1
| |-EnumConstantDecl 0x55d7d2bc8ff0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d7d2bc9208 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc8fd0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55d7d2bc8fb0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55d7d2bc9080 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d7d2bc9220 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc9060 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55d7d2bc9040 <col:44> 'int' 4
| |-EnumConstantDecl 0x55d7d2bc9110 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d7d2bc9238 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2bc90f0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55d7d2bc90d0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55d7d2bc91a0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55d7d2bc9250 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bc9180 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55d7d2bc9160 <col:34> 'int' 6
|-CXXMethodDecl 0x55d7d2bc9508 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55d7d2bc9278 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55d7d2bc9318 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55d7d2bc9398 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55d7d2bc9410 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55d7d2bd1dc8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d7d2bd1db0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d7d2bd1d98 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d7d2bd1d78 <col:98, col:105> 'String' (CXXTemporary 0x55d7d2bd1d78)
|           `-CXXTemporaryObjectExpr 0x55d7d2bd1d40 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55d7d2bc97a8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55d7d2bc95d8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55d7d2bc9650 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55d7d2bc96c8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55d7d2bd1e78 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55d7d2bd1e60 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55d7d2bd1e48 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55d7d2bd1e28 <col:94, col:101> 'String' (CXXTemporary 0x55d7d2bd1e28)
| |         `-CXXTemporaryObjectExpr 0x55d7d2bd1df0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55d7d2bd2660 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55d7d2bd25d8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55d7d2bd25a8 <col:9> '<bound member function type>' ->add_task_handlers 0x55d7d2bc9508
|     | `-CXXThisExpr 0x55d7d2bd2598 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55d7d2bd2618 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d2bd2518 <col:27> 'Task *' lvalue ParmVar 0x55d7d2bc95d8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55d7d2bd2630 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d2bd2538 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55d7d2bc9650 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55d7d2bd2648 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55d7d2bd2558 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55d7d2bc91a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55d7d2bd2578 <col:62> 'const String' lvalue ParmVar 0x55d7d2bc96c8 'prefix' 'const String &'
|-CXXMethodDecl 0x55d7d2bc99b8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55d7d2bc9870 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55d7d2bc98e8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55d7d2bd1f28 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55d7d2bd1f10 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55d7d2bd1ef8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55d7d2bd1ed8 <col:70, col:77> 'String' (CXXTemporary 0x55d7d2bd1ed8)
| |         `-CXXTemporaryObjectExpr 0x55d7d2bd1ea0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55d7d2bd2838 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55d7d2bd27b0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55d7d2bd2780 <col:9> '<bound member function type>' ->add_task_handlers 0x55d7d2bc9508
|     | `-CXXThisExpr 0x55d7d2bd2770 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55d7d2bd27f0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d2bd26f0 <col:27> 'Task *' lvalue ParmVar 0x55d7d2bc9870 'task' 'Task *'
|     |-ImplicitCastExpr 0x55d7d2bd2808 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55d7d2bd2710 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55d7d2bd2820 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55d7d2bd2730 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55d7d2bc91a0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55d7d2bd2750 <col:57> 'const String' lvalue ParmVar 0x55d7d2bc98e8 'prefix' 'const String &'
|-CXXMethodDecl 0x55d7d2bc9c98 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55d7d2bc9a80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bc9b00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bc9b78 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55d7d2bc9f48 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55d7d2bc9d68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bc9de8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bc9e68 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55d7d2bca238 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55d7d2bca018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bca098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bca110 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55d7d2bca4e8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55d7d2bca308 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bca388 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bca408 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55d7d2bca798 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55d7d2bca5b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bca638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bca6b8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55d7d2bcaa48 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55d7d2bca868 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bca8e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bca960 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55d7d2bcacf8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55d7d2bcab18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcab98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcac18 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55d7d2bcb008 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55d7d2bcae20 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcaea0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcaf20 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55d7d2bcb2e8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55d7d2bcb0d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcb158 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcb200 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55d7d2bcb5c8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55d7d2bcb3b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcb438 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcb4e0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55d7d2bcb830 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55d7d2bcb698 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcb718 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55d7d2bcb790 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55d7d2bcbad8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55d7d2bcb900 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcb980 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55d7d2bcb9f8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55d7d2bcbd88 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55d7d2bcbba8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcbc28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcbca8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55d7d2bcc038 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55d7d2bcbe58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcbed8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcbf50 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55d7d2bcc2e8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55d7d2bcc108 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcc188 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcc200 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55d7d2bcc5b8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55d7d2bcc3b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcc438 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d7d2bcc4d8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55d7d2bcc8e8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55d7d2bcc688 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d7d2bcc708 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55d7d2bcc780 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55d7d2bcc7f8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2bd1f40 <col:93> 'bool' false
|-CXXMethodDecl 0x55d7d2bccad0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d7d2bcc9b8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55d7d2bcca38 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55d7d2bccca8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d7d2bccb90 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55d7d2bccc10 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55d7d2bccf88 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55d7d2bccd68 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55d7d2bccde0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55d7d2bcce60 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55d7d2bcced8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bcd278 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55d7d2bcd058 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55d7d2bcd0d0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55d7d2bcd150 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55d7d2bcd1c8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bcd4b0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55d7d2bcd350 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55d7d2bcd3d0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55d7d2bcd698 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55d7d2bcd578 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55d7d2bcd5f8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55d7d2bcd748 prev 0x55d7d2bc4ee8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2bcd840 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55d7d2bcd8d0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55d7d2bcd948 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55d7d2bcda08 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55d7d2bcdad0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55d7d2bcdc48 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55d7d2bcdb80 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55d7d2bcdcf0 <col:24>
| | `-OptimizeNoneAttr 0x55d7d2bcdd48 <col:34>
| |-CXXMethodDecl 0x55d7d2bcdd90 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55d7d2bce048 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55d7d2bcde40 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55d7d2bcdeb8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55d7d2bcdf38 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55d7d2bce100 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55d7d2bce138 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55d7d2bce1a0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55d7d2bce228 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55d7d2bce548 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55d7d2bce2e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55d7d2bce358 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55d7d2bce3d0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55d7d2bce450 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55d7d2bce660 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55d7d2bd5fd8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55d7d2bd5fd8
| | `-ParmVarDecl 0x55d7d2bd60e8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55d7d2bd6188 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55d7d2bd6188
| | `-ParmVarDecl 0x55d7d2bd6298 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55d7d2a777a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55d7d2bce6d8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55d7d2bce778 <col:38> "" ""
|-CXXMethodDecl 0x55d7d2bce808 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55d7d2bce8a8 <col:44> "" ""
|-AccessSpecDecl 0x55d7d2bce918 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55d7d2bce940 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55d7d2bcea40 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55d7d2bcea90 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2bcea20 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55d7d2bcea00 <col:27> 'int' 4
|-FieldDecl 0x55d7d2bceb48 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55d7d2bcecf8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55d7d2bcedb0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55d7d2bcfe40 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55d7d2bcfea8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55d7d2bcfff8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55d7d2bcff38 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55d7d2bd01a8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55d7d2bd00b8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55d7d2bd0388 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55d7d2bd0268 <col:20> col:23 'int'
| `-ParmVarDecl 0x55d7d2bd02e8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55d7d2bd0630 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2bd0450 <col:23> col:26 'int'
| |-ParmVarDecl 0x55d7d2bd04d0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55d7d2bd0548 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55d7d2bd06e8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55d7d2bd07b0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55d7d2bd0800 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55d7d2bd0850 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55d7d2bd0a30 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55d7d2bd08e0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55d7d2bd0958 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bd0cd8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55d7d2bd0af8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55d7d2bd0b78 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55d7d2bd0bf0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bd0ef8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55d7d2bd0da8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55d7d2bd0e28 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55d7d2bd1230 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55d7d2bd0fb8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55d7d2bd1038 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55d7d2bd10b0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55d7d2bd1130 <col:57> col:60 'int'
|-CXXMethodDecl 0x55d7d2bd1418 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d7d2bd1300 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55d7d2bd1380 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55d7d2bd1568 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55d7d2bd14d8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55d7d2bd18e8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55d7d2bd1628 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55d7d2bd16a8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55d7d2bd1720 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2bd17a0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55d7d2bd1a00 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPPrint
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   _Bool _swap
       109 |   _Bool _active
       112 |   class String _label
       112 |     struct String::rep_t _r
       112 |       const char * data
       120 |       int length
       128 |       struct String::memo_t * memo
       136 |   int _bytes
   140:0-0 |   _Bool _print_id
   140:1-1 |   _Bool _print_timestamp
   140:2-2 |   _Bool _print_paint
   140:3-3 |   _Bool _print_tos
   140:4-4 |   _Bool _print_ttl
   140:5-5 |   _Bool _print_len
   140:6-6 |   _Bool _print_aggregate
   140:7-7 |   _Bool _payload
   141:0-1 |   unsigned int _contents
       144 |   class String _outfilename
       144 |     struct String::rep_t _r
       144 |       const char * data
       152 |       int length
       160 |       struct String::memo_t * memo
       168 |   FILE * _outfile
       176 |   class ErrorHandler * _errh
           | [sizeof=184, dsize=184, align=8,
           |  nvsize=184, nvalign=8]

*** Dumping AST Record Layout
         0 | struct _IO_FILE
         0 |   int _flags
         8 |   char * _IO_read_ptr
        16 |   char * _IO_read_end
        24 |   char * _IO_read_base
        32 |   char * _IO_write_base
        40 |   char * _IO_write_ptr
        48 |   char * _IO_write_end
        56 |   char * _IO_buf_base
        64 |   char * _IO_buf_end
        72 |   char * _IO_save_base
        80 |   char * _IO_backup_base
        88 |   char * _IO_save_end
        96 |   struct _IO_marker * _markers
       104 |   struct _IO_FILE * _chain
       112 |   int _fileno
       116 |   int _flags2
       120 |   __off_t _old_offset
       128 |   unsigned short _cur_column
       130 |   signed char _vtable_offset
       131 |   char [1] _shortbuf
       136 |   _IO_lock_t * _lock
       144 |   __off64_t _offset
       152 |   struct _IO_codecvt * _codecvt
       160 |   struct _IO_wide_data * _wide_data
       168 |   struct _IO_FILE * _freeres_list
       176 |   void * _freeres_buf
       184 |   size_t __pad5
       192 |   int _mode
       196 |   char [20] _unused2
           | [sizeof=216, dsize=216, align=8,
           |  nvsize=216, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d287aa98 prev 0x55d7d287a790 </usr/include/bits/types/struct_FILE.h:49:1, line:99:1> line:49:8 struct _IO_FILE definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d287ab90 <col:1, col:8> col:8 implicit struct _IO_FILE
|-FieldDecl 0x55d7d287ac38 <line:51:3, col:7> col:7 _flags 'int'
|-FieldDecl 0x55d7d287aca0 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
|-FieldDecl 0x55d7d287ad08 <line:55:3, col:9> col:9 _IO_read_end 'char *'
|-FieldDecl 0x55d7d287ad70 <line:56:3, col:9> col:9 _IO_read_base 'char *'
|-FieldDecl 0x55d7d287add8 <line:57:3, col:9> col:9 _IO_write_base 'char *'
|-FieldDecl 0x55d7d287ae40 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
|-FieldDecl 0x55d7d287aea8 <line:59:3, col:9> col:9 _IO_write_end 'char *'
|-FieldDecl 0x55d7d287af10 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
|-FieldDecl 0x55d7d287af78 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
|-FieldDecl 0x55d7d287afe0 <line:64:3, col:9> col:9 _IO_save_base 'char *'
|-FieldDecl 0x55d7d287b048 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
|-FieldDecl 0x55d7d287b0b0 <line:66:3, col:9> col:9 _IO_save_end 'char *'
|-FieldDecl 0x55d7d287b1b0 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
|-FieldDecl 0x55d7d287b280 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
|-FieldDecl 0x55d7d287b2e8 <line:72:3, col:7> col:7 _fileno 'int'
|-FieldDecl 0x55d7d287b350 <line:73:3, col:7> col:7 _flags2 'int'
|-FieldDecl 0x55d7d287b3b0 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
|-FieldDecl 0x55d7d287b418 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
|-FieldDecl 0x55d7d287b480 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
|-FieldDecl 0x55d7d287b568 <line:79:3, col:19> col:8 _shortbuf 'char [1]'
|-FieldDecl 0x55d7d287b618 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
|-FieldDecl 0x55d7d287b678 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
|-FieldDecl 0x55d7d287b780 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
|-FieldDecl 0x55d7d287b880 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
|-FieldDecl 0x55d7d287b8f8 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
|-FieldDecl 0x55d7d287b960 <line:94:3, col:9> col:9 _freeres_buf 'void *'
|-FieldDecl 0x55d7d287b9c0 <line:95:3, col:10> col:10 __pad5 'size_t':'unsigned long'
|-FieldDecl 0x55d7d287ba28 <line:96:3, col:7> col:7 _mode 'int'
`-FieldDecl 0x55d7d287bc88 <line:98:3, col:74> col:8 _unused2 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
  NonVirtualBaseLLVMType:%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2bd9148 <../elements/ip/ipprint.hh:99:1, line:141:1> line:99:7 class IPPrint definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55d7d2bd92a8 <col:1, col:7> col:7 implicit referenced class IPPrint
|-AccessSpecDecl 0x55d7d2bd9338 <col:34, col:40> col:34 public
|-CXXConstructorDecl 0x55d7d2bd93c0 <line:101:3, col:11> col:3 IPPrint 'void ()'
|-CXXDestructorDecl 0x55d7d2bd94b0 <line:102:3, col:12> col:3 ~IPPrint 'void ()' noexcept-unevaluated 0x55d7d2bd94b0
| `-Overrides: [ 0x55d7d2bc0a38 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55d7d2bd95e0 <line:104:3, col:54> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55d7d2bc1e98 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55d7d2bdb460 <col:34, col:54>
|   `-ReturnStmt 0x55d7d2bdb450 <col:36, col:43>
|     `-ImplicitCastExpr 0x55d7d2bdb438 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55d7d2bdb418 <col:43> 'const char [8]' lvalue "IPPrint"
|-CXXMethodDecl 0x55d7d2bd96a8 <line:105:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55d7d2bc1f60 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55d7d2bdb4c0 <col:34, col:54>
|   `-ReturnStmt 0x55d7d2bdb4b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55d7d2bdb498 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55d7d2bdb478 <col:43> 'const char []' lvalue Var 0x55d7d2bc2210 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55d7d2bd9980 <line:107:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55d7d2bc3730 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55d7d2bd9830 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55d7d2bd98a8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bd9ad8 <line:108:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55d7d2bc3980 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55d7d2bd9a40 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bd9c20 <line:109:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55d7d2bc4198 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55d7d2bd9b90 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x55d7d2bd9ce8 <line:110:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55d7d2bc3800 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55d7d2bd9e28 <line:112:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55d7d2bc1078 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55d7d2bd9d98 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x55d7d2bd9ed0 <line:114:2, col:9> col:2 private
|-FieldDecl 0x55d7d2bd9f08 <line:116:3, col:8> col:8 _swap 'bool'
|-FieldDecl 0x55d7d2bd9f68 <line:117:3, col:8> col:8 _active 'bool'
|-FieldDecl 0x55d7d2bd9fc8 <line:118:3, col:10> col:10 _label 'String'
|-FieldDecl 0x55d7d2bda030 <line:119:3, col:7> col:7 _bytes 'int'
|-FieldDecl 0x55d7d2bda0d0 <line:120:3, col:20> col:8 _print_id 'bool'
| `-ConstantExpr 0x55d7d2bda0b0 <col:20> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda080 <col:20> 'int' 1
|-FieldDecl 0x55d7d2bda170 <line:121:3, col:27> col:8 _print_timestamp 'bool'
| `-ConstantExpr 0x55d7d2bda150 <col:27> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda120 <col:27> 'int' 1
|-FieldDecl 0x55d7d2bda210 <line:122:3, col:23> col:8 _print_paint 'bool'
| `-ConstantExpr 0x55d7d2bda1f0 <col:23> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda1c0 <col:23> 'int' 1
|-FieldDecl 0x55d7d2bda2b0 <line:123:3, col:21> col:8 _print_tos 'bool'
| `-ConstantExpr 0x55d7d2bda290 <col:21> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda260 <col:21> 'int' 1
|-FieldDecl 0x55d7d2bda350 <line:124:3, col:21> col:8 _print_ttl 'bool'
| `-ConstantExpr 0x55d7d2bda330 <col:21> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda300 <col:21> 'int' 1
|-FieldDecl 0x55d7d2bda3f0 <line:125:3, col:21> col:8 _print_len 'bool'
| `-ConstantExpr 0x55d7d2bda3d0 <col:21> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda3a0 <col:21> 'int' 1
|-FieldDecl 0x55d7d2bda490 <line:126:3, col:27> col:8 _print_aggregate 'bool'
| `-ConstantExpr 0x55d7d2bda470 <col:27> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda440 <col:27> 'int' 1
|-FieldDecl 0x55d7d2bda530 <line:127:3, col:19> col:8 _payload 'bool'
| `-ConstantExpr 0x55d7d2bda510 <col:19> 'int' Int: 1
|   `-IntegerLiteral 0x55d7d2bda4e0 <col:19> 'int' 1
|-FieldDecl 0x55d7d2bda5d8 <line:128:3, col:24> col:12 _contents 'unsigned int'
| `-ConstantExpr 0x55d7d2bda5b8 <col:24> 'int' Int: 2
|   `-IntegerLiteral 0x55d7d2bda580 <col:24> 'int' 2
|-FieldDecl 0x55d7d2bda638 <line:131:3, col:10> col:10 _outfilename 'String'
|-FieldDecl 0x55d7d2bda698 <line:132:3, col:9> col:9 referenced _outfile 'FILE *'
|-FieldDecl 0x55d7d2bda6f8 <line:134:3, col:17> col:17 _errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d7d2bda8a8 <line:136:5, col:74> col:25 address_pair 'StringAccum &(StringAccum &, const click_ip *)' static
| |-ParmVarDecl 0x55d7d2bda758 <col:38, col:51> col:51 sa 'StringAccum &'
| `-ParmVarDecl 0x55d7d2bda7d0 <col:55, col:71> col:71 iph 'const click_ip *'
|-CXXMethodDecl 0x55d7d2bdab48 <line:137:5, col:69> col:10 tcp_line 'void (StringAccum &, const Packet *, int) const'
| |-ParmVarDecl 0x55d7d2bda968 <col:19, col:31> col:32 'StringAccum &'
| |-ParmVarDecl 0x55d7d2bda9e0 <col:34, col:47> col:48 'const Packet *'
| `-ParmVarDecl 0x55d7d2bdaa60 <col:50, col:54> col:54 transport_len 'int'
|-CXXMethodDecl 0x55d7d2bdada8 <line:138:5, col:69> col:10 udp_line 'void (StringAccum &, const Packet *, int) const'
| |-ParmVarDecl 0x55d7d2bdac10 <col:19, col:31> col:32 'StringAccum &'
| |-ParmVarDecl 0x55d7d2bdac88 <col:34, col:47> col:48 'const Packet *'
| `-ParmVarDecl 0x55d7d2bdad08 <col:50, col:54> col:54 transport_len 'int'
|-CXXMethodDecl 0x55d7d2bdb008 <line:139:5, col:70> col:10 icmp_line 'void (StringAccum &, const Packet *, int) const'
| |-ParmVarDecl 0x55d7d2bdae70 <col:20, col:32> col:33 'StringAccum &'
| |-ParmVarDecl 0x55d7d2bdaee8 <col:35, col:48> col:49 'const Packet *'
| `-ParmVarDecl 0x55d7d2bdaf68 <col:51, col:55> col:55 transport_len 'int'
|-CXXConstructorDecl 0x55d7d2bdb0e8 <line:99:7> col:7 implicit IPPrint 'void (const IPPrint &)' inline default_delete noexcept-unevaluated 0x55d7d2bdb0e8
| `-ParmVarDecl 0x55d7d2bdb1f8 <col:7> col:7 'const IPPrint &'
`-CXXMethodDecl 0x55d7d2bdb298 <col:7> col:7 implicit operator= 'IPPrint &(const IPPrint &)' inline default_delete noexcept-unevaluated 0x55d7d2bdb298
  `-ParmVarDecl 0x55d7d2bdb3a8 <col:7> col:7 'const IPPrint &'

Layout: <CGRecordLayout
  LLVMType:%class.IPPrint = type { %class.Element.base, i8, i8, %class.String, i32, i16, %class.String, %struct._IO_FILE*, %class.ErrorHandler* }
  NonVirtualBaseLLVMType:%class.IPPrint = type { %class.Element.base, i8, i8, %class.String, i32, i16, %class.String, %struct._IO_FILE*, %class.ErrorHandler* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:3 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:4 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:5 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:6 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:7 Size:1 IsSigned:0 StorageSize:16 StorageOffset:140>
    <CGBitFieldInfo Offset:8 Size:2 IsSigned:0 StorageSize:16 StorageOffset:140>
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2b42098 prev 0x55d7d2b85e48 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2b42190 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55d7d2b42220 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55d7d2b42358 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2b42258 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55d7d2b43780 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2b43760 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b432f8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55d7d2b43810 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d2b437d0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55d7d2b42258 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55d7d2b43360 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55d7d2b43890 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2b43850 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b433c0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55d7d2b438d0 <col:54> 'bool' false
| `-CompoundStmt 0x55d7d2b439d8 <col:61, line:38:5>
|   `-BinaryOperator 0x55d7d2b439b8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55d7d2b43950 <col:9> 'const Element *' lvalue ->_context 0x55d7d2b43298
|     | `-CXXThisExpr 0x55d7d2b43940 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55d7d2b439a0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55d7d2b43980 <col:20> 'int' 0
|-CXXConstructorDecl 0x55d7d2b42568 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2b42418 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55d7d2b42490 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55d7d2b437b8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2b43798 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b43298 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55d7d2b43a30 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d2b439f0 <col:20> 'const Element *' lvalue ParmVar 0x55d7d2b42418 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55d7d2b432f8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55d7d2b43ab0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d2b43a70 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55d7d2b42490 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55d7d2b43360 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55d7d2b43b30 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55d7d2b43af0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b433c0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55d7d2b43b70 <col:73> 'bool' false
| `-CompoundStmt 0x55d7d2b43be8 <col:80, line:46:5>
|-CXXMethodDecl 0x55d7d2b42698 <line:49:5, line:51:5> line:49:20 used context 'const Element *() const'
| `-CompoundStmt 0x55d7d2b43c60 <col:36, line:51:5>
|   `-ReturnStmt 0x55d7d2b43c50 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2b43c38 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2b43c08 <col:16> 'const Element *const' lvalue ->_context 0x55d7d2b43298
|         `-CXXThisExpr 0x55d7d2b43bf8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55d7d2b42788 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55d7d2b43ce0 <col:32, line:57:5>
|   `-ReturnStmt 0x55d7d2b43cd0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2b43cb8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2b43c88 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55d7d2b432f8
|         `-CXXThisExpr 0x55d7d2b43c78 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55d7d2b42848 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55d7d2b429d0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55d7d2b42900 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2b42b20 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55d7d2b42a90 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2b42c70 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55d7d2b42be0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55d7d2b42e78 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55d7d2b42d28 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55d7d2b42da0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55d7d2b431a8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55d7d2b42f38 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55d7d2b42fb8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55d7d2b43080 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55d7d2b43260 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55d7d2b43298 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55d7d2b432f8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55d7d2b43360 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55d7d2b433c0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55d7d2b43410 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55d7d2b43410
| `-ParmVarDecl 0x55d7d2b43528 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55d7d2b435c8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55d7d2b435c8
| `-ParmVarDecl 0x55d7d2b436d8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55d7d2dd1988 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c4a038 prev 0x55d7d2c2ece8 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2c4a130 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55d7d2c4a220 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55d7d2c71a80 <col:16, line:828:9>
|-CXXDestructorDecl 0x55d7d2c4a310 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55d7d2c71a90 <col:25, line:830:9>
|-CXXMethodDecl 0x55d7d2c4a410 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55d7d2c4a4c0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55d7d2c4a568 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55d7d2c4a568
| `-ParmVarDecl 0x55d7d2c4a678 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55d7d2c4ae38 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55d7d2c4ae38
  `-ParmVarDecl 0x55d7d2c4af48 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c2eaf8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55d7d2c2ec58 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55d7d2c2ece8 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55d7d2c2eda0 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55d7d2c2eea8 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55d7d2c2edd8 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2c62dd8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2c62db8 <col:31> 'int' 0
|-CXXConstructorDecl 0x55d7d2c2f1c8 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2c2f040 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55d7d2c2f0b8 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2c62e10 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2c62df0 <col:59> 'int' 0
|-CXXConstructorDecl 0x55d7d2c2f3a0 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2c2f290 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55d7d2c2f308 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2c62e48 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2c62e28 <col:55> 'int' 0
|-CXXConstructorDecl 0x55d7d2c2f758 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55d7d2c2f540 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55d7d2c2f5b8 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55d7d2c2f630 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55d7d2c62e80 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55d7d2c62e60 <col:31> 'int' 0
|-CXXConstructorDecl 0x55d7d2c2f918 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55d7d2c2f858 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55d7d2c2fa10 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55d7d2c2fbf8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55d7d2c2fb00 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55d7d2c2fce8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55d7d2c63230 <col:24, line:291:5>
|   `-ReturnStmt 0x55d7d2c63220 <line:290:9, col:79>
|     `-BinaryOperator 0x55d7d2c63200 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55d7d2c630d8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55d7d2c63030 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55d7d2c63010 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55d7d2c62f08 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55d7d2c62ef0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55d7d2c62ed8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55d7d2c62ea8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55d7d2c4be60
|       | |   |       `-CXXThisExpr 0x55d7d2c62e98 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55d7d2c62ff8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55d7d2c62fe0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55d7d2c62fa8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55d7d2c62f78 <col:28, col:35> '<bound member function type>' ->size 0x55d7d2c107a8
|       | |           `-ImplicitCastExpr 0x55d7d2c62fc8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55d7d2c62f60 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55d7d2c62f30 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55d7d2c4be60
|       | |                 `-CXXThisExpr 0x55d7d2c62f20 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55d7d2c630c0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55d7d2c630a8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55d7d2c63090 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55d7d2c63060 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55d7d2c60070
|       |         `-CXXThisExpr 0x55d7d2c63050 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55d7d2c631e0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55d7d2c631c8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55d7d2c631b0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55d7d2c63170 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55d7d2c63158 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55d7d2c63108 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55d7d2c60120
|         |     |   `-CXXThisExpr 0x55d7d2c630f8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55d7d2c63138 <col:73> 'int' 0
|         `-IntegerLiteral 0x55d7d2c63190 <col:79> 'int' 0
|-CXXMethodDecl 0x55d7d2c2fda8 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55d7d2c63408 <col:32, line:296:5>
|   `-ReturnStmt 0x55d7d2c633f8 <line:295:9, col:49>
|     `-BinaryOperator 0x55d7d2c633d8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55d7d2c632b8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55d7d2c632a0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55d7d2c63288 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55d7d2c63258 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55d7d2c60070
|       |       `-CXXThisExpr 0x55d7d2c63248 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55d7d2c633b8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55d7d2c633a0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55d7d2c63388 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55d7d2c63348 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55d7d2c63330 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55d7d2c632e0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55d7d2c60120
|         |     |   `-CXXThisExpr 0x55d7d2c632d0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55d7d2c63310 <col:43> 'int' 0
|         `-IntegerLiteral 0x55d7d2c63368 <col:49> 'int' 0
|-CXXMethodDecl 0x55d7d2c2fe98 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55d7d2c63618 <col:19, line:306:5>
|   |-IfStmt 0x55d7d2c63538 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55d7d2c63478 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55d7d2c63460 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55d7d2c63430 <col:13> 'Vector<String> *' lvalue ->_conf 0x55d7d2c4be60
|   | |     `-CXXThisExpr 0x55d7d2c63420 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55d7d2c63518 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55d7d2c634e8 <col:13, col:20> '<bound member function type>' ->clear 0x55d7d2c131a8
|   |     `-ImplicitCastExpr 0x55d7d2c634d0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55d7d2c634a0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55d7d2c4be60
|   |         `-CXXThisExpr 0x55d7d2c63490 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55d7d2c635c0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55d7d2c63590 <col:9, col:16> '<bound member function type>' .clear 0x55d7d2c5fbf8
|   |   `-MemberExpr 0x55d7d2c63560 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55d7d2c60010
|   |     `-CXXThisExpr 0x55d7d2c63550 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55d7d2c63608 <line:305:9, col:17>
|     `-UnaryOperator 0x55d7d2c635f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2c635e0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55d7d2c30118 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55d7d2c30020 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55d7d2c30298 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55d7d2c301d0 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55d7d2c30618 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55d7d2c30340 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55d7d2c30578 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55d7d2c303e8 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55d7d2c30460 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55d7d2c63938 <col:67, line:327:5>
|     |-WhileStmt 0x55d7d2c638e8 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55d7d2c63700 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55d7d2c63680 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55d7d2b7e318 0x55d7d29c78f8 0x55d7d29c75d0 0x55d7d29b7da0 0x55d7d29b7a50 0x55d7d29b7340 0x55d7d2989cb0 0x55d7d2917180
|     | | |-DeclRefExpr 0x55d7d2c63640 <col:16> 'Iter' lvalue ParmVar 0x55d7d2c303e8 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55d7d2c63660 <col:25> 'Iter' lvalue ParmVar 0x55d7d2c30460 'end' 'Iter'
|     | `-CompoundStmt 0x55d7d2c638c8 <col:30, line:325:9>
|     |   |-CallExpr 0x55d7d2c63868 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55d7d2c63748 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55d7d2c63838 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55d7d2c637c8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|     |   |   `-DeclRefExpr 0x55d7d2c637a8 <col:24> 'Iter' lvalue ParmVar 0x55d7d2c303e8 'begin' 'Iter'
|     |   `-UnaryOperator 0x55d7d2c638b0 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55d7d2c63890 <col:15> 'Iter' lvalue ParmVar 0x55d7d2c303e8 'begin' 'Iter'
|     `-ReturnStmt 0x55d7d2c63928 <line:326:9, col:17>
|       `-UnaryOperator 0x55d7d2c63910 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c63900 <col:17> 'Args *' this
|-CXXMethodDecl 0x55d7d2c30720 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55d7d2c30690 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55d7d2c30868 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55d7d2c307d8 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55d7d2c30930 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55d7d2c63a18 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55d7d2c639b8 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55d7d2c63968 <col:9> '<bound member function type>' ->reset_from 0x55d7d2c60498
|   | | `-CXXThisExpr 0x55d7d2c63958 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55d7d2c63998 <col:20> 'int' 0
|   `-ReturnStmt 0x55d7d2c63a08 <line:352:9, col:17>
|     `-UnaryOperator 0x55d7d2c639f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2c639e0 <col:17> 'Args *' this
|-VarDecl 0x55d7d2c309e8 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55d7d2c30a50 <col:38> 'int' 1
|-VarDecl 0x55d7d2c30ae0 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55d7d2c30b48 <col:39> 'int' 2
|-VarDecl 0x55d7d2c30bd8 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55d7d2c30c40 <col:39> 'int' 4
|-VarDecl 0x55d7d2c30cd0 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55d7d2c30d38 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55d7d2c310b8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55d7d2c30db0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55d7d2c31018 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55d7d2c30e60 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55d7d2c30f08 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55d7d2c63b70 <col:43, line:371:5>
| |   `-ReturnStmt 0x55d7d2c63b60 <line:370:9, col:34>
| |     `-CallExpr 0x55d7d2c63b28 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55d7d2c63a48 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55d7d2c63ac8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c30e60 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55d7d2c63ae8 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55d7d2c63b08 <col:33> 'T' lvalue ParmVar 0x55d7d2c30f08 'x' 'T &'
| |-CXXMethodDecl 0x55d7d2dd3188 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, int &)'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x55d7d2dd2fa8 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x55d7d2dd3078 <col:37, col:40> col:40 x 'int &'
| `-CXXMethodDecl 0x55d7d2dd37a8 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55d7d2dd35c8 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55d7d2dd3698 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x55d7d2c313e8 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55d7d2c31120 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c31348 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55d7d2c311d0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c31278 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c63cc0 <col:45, line:375:5>
|     `-ReturnStmt 0x55d7d2c63cb0 <line:374:9, col:42>
|       `-CallExpr 0x55d7d2c63c78 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c63b98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c63c18 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c311d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c63c38 <col:30> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55d7d2c63c58 <col:41> 'T' lvalue ParmVar 0x55d7d2c31278 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c31718 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55d7d2c31450 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55d7d2c31678 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55d7d2c31500 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55d7d2c315a8 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x55d7d2c63e10 <col:45, line:379:5>
| |   `-ReturnStmt 0x55d7d2c63e00 <line:378:9, col:43>
| |     `-CallExpr 0x55d7d2c63dc8 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55d7d2c63ce8 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55d7d2c63d68 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c31500 'keyword' 'const char *'
| |       |-DeclRefExpr 0x55d7d2c63d88 <col:30> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int'
| |       `-DeclRefExpr 0x55d7d2c63da8 <col:42> 'T' lvalue ParmVar 0x55d7d2c315a8 'x' 'T &'
| `-CXXMethodDecl 0x55d7d2dd1e18 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, String &)'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x55d7d2dd1c30 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x55d7d2dd1d08 <col:39, col:42> col:42 x 'String &'
|-FunctionTemplateDecl 0x55d7d2c31a48 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55d7d2c31780 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c319a8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55d7d2c31830 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c318d8 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c64010 <col:46, line:383:5>
|     `-ReturnStmt 0x55d7d2c64000 <line:382:9, col:55>
|       `-CallExpr 0x55d7d2c63fc8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c63e38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c63eb8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c31830 'keyword' 'const char *'
|         |-BinaryOperator 0x55d7d2c63f88 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55d7d2c63f38 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55d7d2c63f18 <col:30> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55d7d2c63f70 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55d7d2c63f50 <col:42> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55d7d2c63fa8 <col:54> 'T' lvalue ParmVar 0x55d7d2c318d8 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c31e48 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55d7d2c31ab0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c31da8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55d7d2c31b60 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c31be0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c31c88 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c64150 <col:54, line:388:5>
|     |-CallExpr 0x55d7d2c640d8 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c64028 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55d7d2c64068 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c64078 <col:30> 'const char *' lvalue ParmVar 0x55d7d2c31b60 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55d7d2c64098 <col:39> 'int' lvalue ParmVar 0x55d7d2c31be0 'flags' 'int'
|     | `-DeclRefExpr 0x55d7d2c640b8 <col:46> 'T' lvalue ParmVar 0x55d7d2c31c88 'x' 'T &'
|     `-ReturnStmt 0x55d7d2c64140 <line:387:9, col:17>
|       `-UnaryOperator 0x55d7d2c64128 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c64118 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c322f8 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55d7d2c31eb8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55d7d2c31f38 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55d7d2c32258 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c31ff8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c32098 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c32138 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55d7d2c642c0 <col:74, line:403:5>
|     `-ReturnStmt 0x55d7d2c642b0 <line:402:9, col:56>
|       `-CallExpr 0x55d7d2c64270 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c64180 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c641f0 <col:28> 'const char *' lvalue ParmVar 0x55d7d2c31ff8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c64210 <col:37> 'int' 0
|         |-DeclRefExpr 0x55d7d2c64230 <col:40> 'T' lvalue ParmVar 0x55d7d2c32098 'x' 'T &'
|         `-DeclRefExpr 0x55d7d2c64250 <col:43> 'const V' lvalue ParmVar 0x55d7d2c32138 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55d7d2c32768 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55d7d2c32368 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55d7d2c323e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55d7d2c326c8 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c324a8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c32548 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c325e8 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55d7d2c64428 <col:76, line:407:5>
|     `-ReturnStmt 0x55d7d2c64418 <line:406:9, col:65>
|       `-CallExpr 0x55d7d2c643d8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c642e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c64358 <col:28> 'const char *' lvalue ParmVar 0x55d7d2c324a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c64378 <col:37> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int'
|         |-DeclRefExpr 0x55d7d2c64398 <col:49> 'T' lvalue ParmVar 0x55d7d2c32548 'x' 'T &'
|         `-DeclRefExpr 0x55d7d2c643b8 <col:52> 'const V' lvalue ParmVar 0x55d7d2c325e8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55d7d2c32cb8 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55d7d2c327d8 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55d7d2c32858 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55d7d2c32c18 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c32918 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c32998 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c32a38 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c32ad8 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55d7d2c64590 <col:85, line:412:5>
|     |-CallExpr 0x55d7d2c64510 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c64440 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55d7d2c64480 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c64490 <col:37> 'const char *' lvalue ParmVar 0x55d7d2c32918 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55d7d2c644b0 <col:46> 'int' lvalue ParmVar 0x55d7d2c32998 'flags' 'int'
|     | |-DeclRefExpr 0x55d7d2c644d0 <col:53> 'T' lvalue ParmVar 0x55d7d2c32a38 'x' 'T &'
|     | `-DeclRefExpr 0x55d7d2c644f0 <col:56> 'const V' lvalue ParmVar 0x55d7d2c32ad8 'default_value' 'const V &'
|     `-ReturnStmt 0x55d7d2c64580 <line:411:9, col:17>
|       `-UnaryOperator 0x55d7d2c64568 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c64558 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c33148 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55d7d2c32d30 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c32da8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55d7d2c330a8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55d7d2c32e68 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55d7d2c32ee0 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55d7d2c32f88 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55d7d2c64710 <col:53, line:425:5>
| |   `-ReturnStmt 0x55d7d2c64700 <line:424:9, col:42>
| |     `-CallExpr 0x55d7d2c646c0 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55d7d2c645c0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55d7d2c64640 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c32e68 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55d7d2c64660 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55d7d2c64680 <col:33> 'P' lvalue ParmVar 0x55d7d2c32ee0 'parser' 'P'
| |       `-DeclRefExpr 0x55d7d2c646a0 <col:41> 'T' lvalue ParmVar 0x55d7d2c32f88 'x' 'T &'
| |-CXXMethodDecl 0x55d7d2dd2968 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, WordArg, String &)'
| | |-TemplateArgument type 'WordArg'
| | |-TemplateArgument type 'String'
| | |-ParmVarDecl 0x55d7d2dd26d0 <col:16, col:28> col:28 keyword 'const char *'
| | |-ParmVarDecl 0x55d7d2dd2778 <col:37, col:39> col:39 parser 'WordArg':'WordArg'
| | `-ParmVarDecl 0x55d7d2dd2848 <col:47, col:50> col:50 x 'String &'
| `-CXXMethodDecl 0x55d7d2dd4f58 <col:5, line:425:5> line:423:11 used read 'Args &(const char *, FilenameArg, String &)'
|   |-TemplateArgument type 'FilenameArg'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x55d7d2dd4d10 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2dd4db8 <col:37, col:39> col:39 parser 'FilenameArg':'FilenameArg'
|   `-ParmVarDecl 0x55d7d2dd4e30 <col:47, col:50> col:50 x 'String &'
|-FunctionTemplateDecl 0x55d7d2c33598 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55d7d2c331b8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c33238 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c334f8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c332f8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c33370 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c33418 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c64888 <col:55, line:429:5>
|     `-ReturnStmt 0x55d7d2c64878 <line:428:9, col:50>
|       `-CallExpr 0x55d7d2c64838 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c64738 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c647b8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c332f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c647d8 <col:30> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55d7d2c647f8 <col:41> 'P' lvalue ParmVar 0x55d7d2c33370 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c64818 <col:49> 'T' lvalue ParmVar 0x55d7d2c33418 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c339e8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55d7d2c33608 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c33688 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c33948 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c33748 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c337c0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c33868 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c64a00 <col:55, line:433:5>
|     `-ReturnStmt 0x55d7d2c649f0 <line:432:9, col:51>
|       `-CallExpr 0x55d7d2c649b0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c648b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c64930 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c33748 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c64950 <col:30> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int'
|         |-DeclRefExpr 0x55d7d2c64970 <col:42> 'P' lvalue ParmVar 0x55d7d2c337c0 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c64990 <col:50> 'T' lvalue ParmVar 0x55d7d2c33868 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c33e38 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55d7d2c33a58 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c33ad8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c33d98 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c33b98 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c33c10 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c33cb8 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c64c28 <col:56, line:437:5>
|     `-ReturnStmt 0x55d7d2c64c18 <line:436:9, col:63>
|       `-CallExpr 0x55d7d2c64bd8 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c64a28 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c64aa8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c33b98 'keyword' 'const char *'
|         |-BinaryOperator 0x55d7d2c64b78 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55d7d2c64b28 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55d7d2c64b08 <col:30> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55d7d2c64b60 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55d7d2c64b40 <col:42> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55d7d2c64b98 <col:54> 'P' lvalue ParmVar 0x55d7d2c33c10 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c64bb8 <col:62> 'T' lvalue ParmVar 0x55d7d2c33cb8 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c34368 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55d7d2c33ea8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c33f28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c342c8 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55d7d2c33fe8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c34068 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c340e0 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c34188 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c64d90 <col:64, line:442:5>
|     |-CallExpr 0x55d7d2c64d10 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c64c40 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55d7d2c64c80 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c64c90 <col:30> 'const char *' lvalue ParmVar 0x55d7d2c33fe8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55d7d2c64cb0 <col:39> 'int' lvalue ParmVar 0x55d7d2c34068 'flags' 'int'
|     | |-DeclRefExpr 0x55d7d2c64cd0 <col:46> 'P' lvalue ParmVar 0x55d7d2c340e0 'parser' 'P'
|     | `-DeclRefExpr 0x55d7d2c64cf0 <col:54> 'T' lvalue ParmVar 0x55d7d2c34188 'x' 'T &'
|     `-ReturnStmt 0x55d7d2c64d80 <line:441:9, col:17>
|       `-UnaryOperator 0x55d7d2c64d68 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c64d58 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c34968 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55d7d2c343e0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c34458 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55d7d2c344d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55d7d2c348c8 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c345a0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c34618 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c346b8 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c34788 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55d7d2c64f28 <col:84, line:458:5>
|     `-ReturnStmt 0x55d7d2c64f18 <line:457:9, col:64>
|       `-CallExpr 0x55d7d2c64ed0 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c64dc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c64e30 <col:28> 'const char *' lvalue ParmVar 0x55d7d2c345a0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c64e50 <col:37> 'int' 0
|         |-DeclRefExpr 0x55d7d2c64e70 <col:40> 'P' lvalue ParmVar 0x55d7d2c34618 'parser' 'P'
|         |-DeclRefExpr 0x55d7d2c64e90 <col:48> 'T' lvalue ParmVar 0x55d7d2c346b8 'x' 'T &'
|         `-DeclRefExpr 0x55d7d2c64eb0 <col:51> 'const V' lvalue ParmVar 0x55d7d2c34788 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55d7d2c34ee8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55d7d2c349e0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c34a58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55d7d2c34ad8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55d7d2c34e48 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c34ba0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c34c18 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c34cb8 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c34d58 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55d7d2c650b8 <col:86, line:462:5>
|     `-ReturnStmt 0x55d7d2c650a8 <line:461:9, col:73>
|       `-CallExpr 0x55d7d2c65060 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c64f50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c64fc0 <col:28> 'const char *' lvalue ParmVar 0x55d7d2c34ba0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c64fe0 <col:37> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int'
|         |-DeclRefExpr 0x55d7d2c65000 <col:49> 'P' lvalue ParmVar 0x55d7d2c34c18 'parser' 'P'
|         |-DeclRefExpr 0x55d7d2c65020 <col:57> 'T' lvalue ParmVar 0x55d7d2c34cb8 'x' 'T &'
|         `-DeclRefExpr 0x55d7d2c65040 <col:60> 'const V' lvalue ParmVar 0x55d7d2c34d58 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55d7d2c35548 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55d7d2c34f60 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c34fd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55d7d2c35058 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55d7d2c354a8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c35120 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c351a0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c35218 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c352b8 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c35358 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55d7d2c65248 <col:95, line:467:5>
|     |-CallExpr 0x55d7d2c651c0 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c650d0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55d7d2c65110 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c65120 <col:37> 'const char *' lvalue ParmVar 0x55d7d2c35120 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55d7d2c65140 <col:46> 'int' lvalue ParmVar 0x55d7d2c351a0 'flags' 'int'
|     | |-DeclRefExpr 0x55d7d2c65160 <col:53> 'P' lvalue ParmVar 0x55d7d2c35218 'parser' 'P'
|     | |-DeclRefExpr 0x55d7d2c65180 <col:61> 'T' lvalue ParmVar 0x55d7d2c352b8 'x' 'T &'
|     | `-DeclRefExpr 0x55d7d2c651a0 <col:64> 'const V' lvalue ParmVar 0x55d7d2c35358 'default_value' 'const V &'
|     `-ReturnStmt 0x55d7d2c65238 <line:466:9, col:17>
|       `-UnaryOperator 0x55d7d2c65220 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c65210 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c39868 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55d7d2c355c8 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c35648 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55d7d2c356c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55d7d2c397c8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55d7d2c35790 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c35808 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c358a8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55d7d2c35948 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55d7d2c653f0 <col:63, line:481:5>
|     `-ReturnStmt 0x55d7d2c653e0 <line:480:9, col:47>
|       `-CallExpr 0x55d7d2c65398 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65278 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c652f8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c35790 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c65318 <col:30> 'int' 0
|         |-DeclRefExpr 0x55d7d2c65338 <col:33> 'P' lvalue ParmVar 0x55d7d2c35808 'parser' 'P'
|         |-DeclRefExpr 0x55d7d2c65358 <col:41> 'T1' lvalue ParmVar 0x55d7d2c358a8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55d7d2c65378 <col:45> 'T2' lvalue ParmVar 0x55d7d2c35948 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55d7d2c39de8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55d7d2c398e0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c39958 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55d7d2c399d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55d7d2c39d48 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55d7d2c39aa0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c39b18 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c39bb8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55d7d2c39c58 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55d7d2c65590 <col:65, line:485:5>
|     `-ReturnStmt 0x55d7d2c65580 <line:484:9, col:55>
|       `-CallExpr 0x55d7d2c65538 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65418 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c65498 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c39aa0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c654b8 <col:30> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55d7d2c654d8 <col:41> 'P' lvalue ParmVar 0x55d7d2c39b18 'parser' 'P'
|         |-DeclRefExpr 0x55d7d2c654f8 <col:49> 'T1' lvalue ParmVar 0x55d7d2c39bb8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55d7d2c65518 <col:53> 'T2' lvalue ParmVar 0x55d7d2c39c58 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55d7d2c3a368 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55d7d2c39e60 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c39ed8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55d7d2c39f58 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55d7d2c3a2c8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55d7d2c3a020 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3a098 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3a138 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55d7d2c3a1d8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55d7d2c65730 <col:65, line:489:5>
|     `-ReturnStmt 0x55d7d2c65720 <line:488:9, col:56>
|       `-CallExpr 0x55d7d2c656d8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c655b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c65638 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c3a020 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c65658 <col:30> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int'
|         |-DeclRefExpr 0x55d7d2c65678 <col:42> 'P' lvalue ParmVar 0x55d7d2c3a098 'parser' 'P'
|         |-DeclRefExpr 0x55d7d2c65698 <col:50> 'T1' lvalue ParmVar 0x55d7d2c3a138 'x1' 'T1 &'
|         `-DeclRefExpr 0x55d7d2c656b8 <col:54> 'T2' lvalue ParmVar 0x55d7d2c3a1d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55d7d2c3a8e8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55d7d2c3a3e0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3a458 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55d7d2c3a4d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55d7d2c3a848 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55d7d2c3a5a0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3a618 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3a6b8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55d7d2c3a758 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55d7d2c65980 <col:66, line:493:5>
|     `-ReturnStmt 0x55d7d2c65970 <line:492:9, col:68>
|       `-CallExpr 0x55d7d2c65928 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65758 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c657d8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c3a5a0 'keyword' 'const char *'
|         |-BinaryOperator 0x55d7d2c658a8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55d7d2c65858 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55d7d2c65838 <col:30> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55d7d2c65890 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55d7d2c65870 <col:42> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55d7d2c658c8 <col:54> 'P' lvalue ParmVar 0x55d7d2c3a618 'parser' 'P'
|         |-DeclRefExpr 0x55d7d2c658e8 <col:62> 'T1' lvalue ParmVar 0x55d7d2c3a6b8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55d7d2c65908 <col:66> 'T2' lvalue ParmVar 0x55d7d2c3a758 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55d7d2c3af48 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55d7d2c3a960 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3a9d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55d7d2c3aa58 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55d7d2c3aea8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55d7d2c3ab20 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3aba0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3ac18 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3acb8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55d7d2c3ad58 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55d7d2c65b10 <col:74, line:498:5>
|     |-CallExpr 0x55d7d2c65a88 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c65998 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55d7d2c659d8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c659e8 <col:30> 'const char *' lvalue ParmVar 0x55d7d2c3ab20 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55d7d2c65a08 <col:39> 'int' lvalue ParmVar 0x55d7d2c3aba0 'flags' 'int'
|     | |-DeclRefExpr 0x55d7d2c65a28 <col:46> 'P' lvalue ParmVar 0x55d7d2c3ac18 'parser' 'P'
|     | |-DeclRefExpr 0x55d7d2c65a48 <col:54> 'T1' lvalue ParmVar 0x55d7d2c3acb8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55d7d2c65a68 <col:58> 'T2' lvalue ParmVar 0x55d7d2c3ad58 'x2' 'T2 &'
|     `-ReturnStmt 0x55d7d2c65b00 <line:497:9, col:17>
|       `-UnaryOperator 0x55d7d2c65ae8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c65ad8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c3b2a8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55d7d2c3afc8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3b208 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55d7d2c3b080 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3b0f8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c65c58 <col:52, line:509:5>
|     `-ReturnStmt 0x55d7d2c65c48 <line:508:9, col:44>
|       `-CallExpr 0x55d7d2c65c10 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65b40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c65bb0 <col:26> 'const char *' lvalue ParmVar 0x55d7d2c3b080 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c65bd0 <col:35> 'int' 0
|         `-DeclRefExpr 0x55d7d2c65bf0 <col:38> 'P' lvalue ParmVar 0x55d7d2c3b0f8 'parser' 'P'
|-FunctionTemplateDecl 0x55d7d2c3b5a8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55d7d2c3b310 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3b508 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55d7d2c3b3c0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3b438 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c65d98 <col:54, line:513:5>
|     `-ReturnStmt 0x55d7d2c65d88 <line:512:9, col:52>
|       `-CallExpr 0x55d7d2c65d50 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65c80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c65cf0 <col:26> 'const char *' lvalue ParmVar 0x55d7d2c3b3c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c65d10 <col:35> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55d7d2c65d30 <col:46> 'P' lvalue ParmVar 0x55d7d2c3b438 'parser' 'P'
|-FunctionTemplateDecl 0x55d7d2c3b8a8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55d7d2c3b610 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3b808 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55d7d2c3b6c0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3b738 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c65ed8 <col:54, line:517:5>
|     `-ReturnStmt 0x55d7d2c65ec8 <line:516:9, col:53>
|       `-CallExpr 0x55d7d2c65e90 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65dc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c65e30 <col:26> 'const char *' lvalue ParmVar 0x55d7d2c3b6c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c65e50 <col:35> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int'
|         `-DeclRefExpr 0x55d7d2c65e70 <col:47> 'P' lvalue ParmVar 0x55d7d2c3b738 'parser' 'P'
|-FunctionTemplateDecl 0x55d7d2c3bba8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55d7d2c3b910 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3bb08 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55d7d2c3b9c0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3ba38 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c660c8 <col:55, line:521:5>
|     `-ReturnStmt 0x55d7d2c660b8 <line:520:9, col:65>
|       `-CallExpr 0x55d7d2c66080 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c65f00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c65f70 <col:26> 'const char *' lvalue ParmVar 0x55d7d2c3b9c0 'keyword' 'const char *'
|         |-BinaryOperator 0x55d7d2c66040 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55d7d2c65ff0 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55d7d2c65fd0 <col:35> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55d7d2c66028 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55d7d2c66008 <col:47> 'const int' lvalue Var 0x55d7d2c30ae0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55d7d2c66060 <col:59> 'P' lvalue ParmVar 0x55d7d2c3ba38 'parser' 'P'
|-FunctionTemplateDecl 0x55d7d2c3bf78 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55d7d2c3bc10 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3bed8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55d7d2c3bcc0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3bd40 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3bdb8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c66208 <col:63, line:526:5>
|     |-CallExpr 0x55d7d2c66190 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c660e0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55d7d2c66120 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c66130 <col:35> 'const char *' lvalue ParmVar 0x55d7d2c3bcc0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55d7d2c66150 <col:44> 'int' lvalue ParmVar 0x55d7d2c3bd40 'flags' 'int'
|     | `-DeclRefExpr 0x55d7d2c66170 <col:51> 'P' lvalue ParmVar 0x55d7d2c3bdb8 'parser' 'P'
|     `-ReturnStmt 0x55d7d2c661f8 <line:525:9, col:17>
|       `-UnaryOperator 0x55d7d2c661e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c661d0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c3c3c8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55d7d2c3bfe8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3c068 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3c328 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3c128 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3c1a0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3c248 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c66360 <col:58, line:541:5>
|     `-ReturnStmt 0x55d7d2c66350 <line:540:9, col:39>
|       `-CallExpr 0x55d7d2c66318 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c66238 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c662b8 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c3c128 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c662d8 <col:30> 'P' lvalue ParmVar 0x55d7d2c3c1a0 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c662f8 <col:38> 'T' lvalue ParmVar 0x55d7d2c3c248 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c3c818 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55d7d2c3c438 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3c4b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3c778 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3c578 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3c5f0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3c698 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c66498 <col:60, line:545:5>
|     `-ReturnStmt 0x55d7d2c66488 <line:544:9, col:41>
|       `-CallExpr 0x55d7d2c66450 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c66388 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c663f0 <col:23> 'const char *' lvalue ParmVar 0x55d7d2c3c578 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c66410 <col:32> 'P' lvalue ParmVar 0x55d7d2c3c5f0 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c66430 <col:40> 'T' lvalue ParmVar 0x55d7d2c3c698 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c3cc68 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55d7d2c3c888 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3c908 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3cbc8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3c9c8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3ca40 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3cae8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c665d0 <col:60, line:549:5>
|     `-ReturnStmt 0x55d7d2c665c0 <line:548:9, col:41>
|       `-CallExpr 0x55d7d2c66588 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c664c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c66528 <col:23> 'const char *' lvalue ParmVar 0x55d7d2c3c9c8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c66548 <col:32> 'P' lvalue ParmVar 0x55d7d2c3ca40 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c66568 <col:40> 'T' lvalue ParmVar 0x55d7d2c3cae8 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c3d0b8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55d7d2c3ccd8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3cd58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3d018 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3ce18 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3ce90 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3cf38 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c66708 <col:61, line:553:5>
|     `-ReturnStmt 0x55d7d2c666f8 <line:552:9, col:42>
|       `-CallExpr 0x55d7d2c666c0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c665f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c66660 <col:24> 'const char *' lvalue ParmVar 0x55d7d2c3ce18 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c66680 <col:33> 'P' lvalue ParmVar 0x55d7d2c3ce90 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c666a0 <col:41> 'T' lvalue ParmVar 0x55d7d2c3cf38 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c3d598 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55d7d2c3d128 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3d1a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3d4f8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3d268 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3d2e8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3d360 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3d408 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c66880 <col:69, line:557:5>
|     `-ReturnStmt 0x55d7d2c66870 <line:556:9, col:46>
|       `-CallExpr 0x55d7d2c66830 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c66730 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c667b0 <col:21> 'const char *' lvalue ParmVar 0x55d7d2c3d268 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c667d0 <col:30> 'int' lvalue ParmVar 0x55d7d2c3d2e8 'flags' 'int'
|         |-DeclRefExpr 0x55d7d2c667f0 <col:37> 'P' lvalue ParmVar 0x55d7d2c3d360 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c66810 <col:45> 'T' lvalue ParmVar 0x55d7d2c3d408 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c3d8a8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55d7d2c3d610 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3d808 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55d7d2c3d6c0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3d738 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c669c0 <col:56, line:571:5>
|     `-ReturnStmt 0x55d7d2c669b0 <line:570:9, col:48>
|       `-CallExpr 0x55d7d2c66978 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c668a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c66918 <col:30> 'const char *' lvalue ParmVar 0x55d7d2c3d6c0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c66938 <col:39> 'int' 0
|         `-DeclRefExpr 0x55d7d2c66958 <col:42> 'P' lvalue ParmVar 0x55d7d2c3d738 'parser' 'P'
|-FunctionTemplateDecl 0x55d7d2c3dc38 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55d7d2c3d910 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c3db98 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55d7d2c3d9c0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3da40 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3dab8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c66b90 <col:67, line:576:5>
|     |-CallExpr 0x55d7d2c66b18 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c669d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55d7d2c66a18 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c66a28 <col:39> 'const char *' lvalue ParmVar 0x55d7d2c3d9c0 'keyword' 'const char *'
|     | |-BinaryOperator 0x55d7d2c66ad8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55d7d2c66a88 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55d7d2c66a48 <col:48> 'int' lvalue ParmVar 0x55d7d2c3da40 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55d7d2c66ac0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55d7d2c66aa0 <col:56> 'const int' lvalue Var 0x55d7d2c30cd0 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55d7d2c66af8 <col:68> 'P' lvalue ParmVar 0x55d7d2c3dab8 'parser' 'P'
|     `-ReturnStmt 0x55d7d2c66b80 <line:575:9, col:17>
|       `-UnaryOperator 0x55d7d2c66b68 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c66b58 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c3e088 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55d7d2c3dca8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3dd28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3dfe8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3dde8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3de60 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3df08 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c66d00 <col:62, line:592:5>
|     `-ReturnStmt 0x55d7d2c66cf0 <line:591:9, col:51>
|       `-CallExpr 0x55d7d2c66cb0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c66bc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c66c30 <col:30> 'const char *' lvalue ParmVar 0x55d7d2c3dde8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c66c50 <col:39> 'int' 0
|         |-DeclRefExpr 0x55d7d2c66c70 <col:42> 'P' lvalue ParmVar 0x55d7d2c3de60 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c66c90 <col:50> 'T' lvalue ParmVar 0x55d7d2c3df08 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c3e568 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55d7d2c3e0f8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3e178 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3e4c8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55d7d2c3e238 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3e2b8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3e330 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3e3d8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c66ef8 <col:73, line:597:5>
|     |-CallExpr 0x55d7d2c66e78 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c66d18 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55d7d2c66d58 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c66d68 <col:39> 'const char *' lvalue ParmVar 0x55d7d2c3e238 'keyword' 'const char *'
|     | |-BinaryOperator 0x55d7d2c66e18 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55d7d2c66dc8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55d7d2c66d88 <col:48> 'int' lvalue ParmVar 0x55d7d2c3e2b8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55d7d2c66e00 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55d7d2c66de0 <col:56> 'const int' lvalue Var 0x55d7d2c30cd0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55d7d2c66e38 <col:68> 'P' lvalue ParmVar 0x55d7d2c3e330 'parser' 'P'
|     | `-DeclRefExpr 0x55d7d2c66e58 <col:76> 'T' lvalue ParmVar 0x55d7d2c3e3d8 'x' 'T &'
|     `-ReturnStmt 0x55d7d2c66ee8 <line:596:9, col:17>
|       `-UnaryOperator 0x55d7d2c66ed0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c66ec0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c3eb18 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55d7d2c3e5e0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3e658 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3ea78 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55d7d2c3e718 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3e790 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3e950 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55d7d2c67068 <col:65, line:614:5>
|     `-ReturnStmt 0x55d7d2c67058 <line:613:9, col:46>
|       `-CallExpr 0x55d7d2c67018 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c66f28 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c66f98 <col:25> 'const char *' lvalue ParmVar 0x55d7d2c3e718 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c66fb8 <col:34> 'int' 0
|         |-DeclRefExpr 0x55d7d2c66fd8 <col:37> 'P' lvalue ParmVar 0x55d7d2c3e790 'parser' 'P'
|         `-DeclRefExpr 0x55d7d2c66ff8 <col:45> 'Vector<T>' lvalue ParmVar 0x55d7d2c3e950 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55d7d2c3ef48 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55d7d2c3eb88 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c3eea8 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55d7d2c3ec40 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3ed90 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55d7d2c67280 <col:55, line:618:5>
|     `-ReturnStmt 0x55d7d2c67270 <line:617:9, col:55>
|       `-CallExpr 0x55d7d2c67230 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c67090 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c67100 <col:25> 'const char *' lvalue ParmVar 0x55d7d2c3ec40 'keyword' 'const char *'
|         |-IntegerLiteral 0x55d7d2c67120 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55d7d2c671f0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55d7d2c67210 <col:54> 'Vector<T>' lvalue ParmVar 0x55d7d2c3ed90 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55d7d2c3f518 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55d7d2c3efb0 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3f028 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3f478 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55d7d2c3f0e8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3f168 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3f1e0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c3f330 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55d7d2c67478 <col:76, line:623:5>
|     |-CallExpr 0x55d7d2c673f8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55d7d2c67298 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55d7d2c672d8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55d7d2c672e8 <col:34> 'const char *' lvalue ParmVar 0x55d7d2c3f0e8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55d7d2c67398 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55d7d2c67348 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55d7d2c67308 <col:43> 'int' lvalue ParmVar 0x55d7d2c3f168 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55d7d2c67380 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55d7d2c67360 <col:51> 'const int' lvalue Var 0x55d7d2c30cd0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55d7d2c673b8 <col:63> 'P' lvalue ParmVar 0x55d7d2c3f1e0 'parser' 'P'
|     | `-DeclRefExpr 0x55d7d2c673d8 <col:71> 'Vector<T>' lvalue ParmVar 0x55d7d2c3f330 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55d7d2c67468 <line:622:9, col:17>
|       `-UnaryOperator 0x55d7d2c67450 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c67440 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c3fa58 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55d7d2c3f590 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c3f608 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c3f9b8 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55d7d2c3f6c8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c3f748 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c3f890 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55d7d2c676e0 <col:66, line:627:5>
|     `-ReturnStmt 0x55d7d2c676d0 <line:626:9, col:59>
|       `-CallExpr 0x55d7d2c67690 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55d7d2c674a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55d7d2c67518 <col:25> 'const char *' lvalue ParmVar 0x55d7d2c3f6c8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55d7d2c67538 <col:34> 'int' lvalue ParmVar 0x55d7d2c3f748 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55d7d2c67650 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55d7d2c67670 <col:58> 'Vector<T>' lvalue ParmVar 0x55d7d2c3f890 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55d7d2c3fae8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55d7d2c67760 <col:25, line:633:5>
|   `-ReturnStmt 0x55d7d2c67750 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2c67738 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55d7d2c67708 <col:16> 'const bool' lvalue ->_status 0x55d7d2c4bcc8
|         `-CXXThisExpr 0x55d7d2c676f8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55d7d2c3fc68 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55d7d2c3fba0 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55d7d2c67848 <col:27, line:639:5>
|   |-BinaryOperator 0x55d7d2c677f0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55d7d2c67778 <col:9> 'bool' lvalue ParmVar 0x55d7d2c3fba0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55d7d2c677d8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d2c677a8 <col:13> 'bool' lvalue ->_status 0x55d7d2c4bcc8
|   |     `-CXXThisExpr 0x55d7d2c67798 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55d7d2c67838 <line:638:9, col:17>
|     `-UnaryOperator 0x55d7d2c67820 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2c67810 <col:17> 'Args *' this
|-CXXMethodDecl 0x55d7d2c3fde8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55d7d2c3fd28 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55d7d2c67938 <col:39, line:644:5>
|   |-BinaryOperator 0x55d7d2c678e0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55d7d2c67868 <col:9> 'bool' lvalue ParmVar 0x55d7d2c3fd28 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55d7d2c678c8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d2c67898 <col:13> 'const bool' lvalue ->_status 0x55d7d2c4bcc8
|   |     `-CXXThisExpr 0x55d7d2c67888 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55d7d2c67928 <line:643:9, col:17>
|     `-UnaryOperator 0x55d7d2c67910 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2c67900 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55d7d2c3feb0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55d7d2c679e0 <col:30, line:651:5>
|   `-ReturnStmt 0x55d7d2c679d0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2c679b8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55d7d2c67988 <col:16> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|         `-ImplicitCastExpr 0x55d7d2c67968 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55d7d2c67958 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55d7d2c3fff8 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55d7d2c3ff68 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55d7d2c67ae8 <col:32, line:658:5>
|   |-BinaryOperator 0x55d7d2c67a90 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55d7d2c679f8 <col:9> 'bool' lvalue ParmVar 0x55d7d2c3ff68 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55d7d2c67a78 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d2c67a48 <col:13> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|   |     `-ImplicitCastExpr 0x55d7d2c67a28 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55d7d2c67a18 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55d7d2c67ad8 <line:657:9, col:17>
|     `-UnaryOperator 0x55d7d2c67ac0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2c67ab0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55d7d2c40148 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55d7d2c400b8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55d7d2c67bf8 <col:44, line:663:5>
|   |-BinaryOperator 0x55d7d2c67ba0 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55d7d2c67b08 <col:9> 'bool' lvalue ParmVar 0x55d7d2c400b8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55d7d2c67b88 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55d7d2c67b58 <col:13> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|   |     `-ImplicitCastExpr 0x55d7d2c67b38 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55d7d2c67b28 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55d7d2c67be8 <line:662:9, col:17>
|     `-UnaryOperator 0x55d7d2c67bd0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2c67bc0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55d7d2c40210 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55d7d2c402d8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55d7d2c403a0 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55d7d2c40468 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55d7d2c40778 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55d7d2c40508 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c406d8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55d7d2c405e8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c67fb0 <col:19, line:706:5>
|     `-IfStmt 0x55d7d2c67f88 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55d7d2c67cf8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55d7d2c67eb8 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55d7d2c67e88 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55d7d2c67e48 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55d7d2c67d50 <col:42> '<bound member function type>' ->simple_slot 0x55d7d2c62a40
|       |     | `-CXXThisExpr 0x55d7d2c67d40 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55d7d2c67de8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55d7d2c67da0 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55d7d29cc398
|       |     | `-DeclRefExpr 0x55d7d2c67d80 <col:55> 'T' lvalue ParmVar 0x55d7d2c405e8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55d7d2c67e28 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55d7d2c67f78 <line:705:13, col:34>
|         `-CallExpr 0x55d7d2c67f50 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55d7d2c67ed8 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55d7d2c67f30 <col:33> 'T' lvalue ParmVar 0x55d7d2c405e8 'x' 'T &'
|-FunctionTemplateDecl 0x55d7d2c40a48 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55d7d2c407d8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c409a8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55d7d2c408b8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55d7d2c68390 <col:31, line:717:5>
|     |-DeclStmt 0x55d7d2c680f0 <line:713:9, col:23>
|     | `-VarDecl 0x55d7d2c67fd8 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55d7d2c680c8 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55d7d2c68050 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55d7d2c680a8 <col:21> 'T' lvalue ParmVar 0x55d7d2c408b8 'x' 'T &'
|     |-IfStmt 0x55d7d2c68340 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55d7d2c681e8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55d7d2c68320 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55d7d2c682c0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55d7d2c68250 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|     |   | `-DeclRefExpr 0x55d7d2c68230 <col:14> 'T *' lvalue Var 0x55d7d2c67fd8 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55d7d2c68300 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55d7d2c68378 <line:716:9, col:16>
|       `-DeclRefExpr 0x55d7d2c68358 <col:16> 'T *' lvalue Var 0x55d7d2c67fd8 's' 'T *'
|-FunctionTemplateDecl 0x55d7d2c40e58 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55d7d2c40aa8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55d7d2c40b28 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55d7d2c40db8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c40c08 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55d7d2c40ca8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55d7d2c686a0 <col:37, line:726:5>
|     |-IfStmt 0x55d7d2c68630 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55d7d2c68650 <line:723:13, col:26>
|     | | `-VarDecl 0x55d7d2c683f8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55d7d2c684e8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55d7d2c68470 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55d7d2c684c8 <col:25> 'T' lvalue ParmVar 0x55d7d2c40c08 'x' 'T &'
|     | |-DeclRefExpr 0x55d7d2c68510 <col:16> 'T *' lvalue Var 0x55d7d2c683f8 's' 'T *'
|     | `-BinaryOperator 0x55d7d2c68610 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55d7d2c685c0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55d7d2c68550 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|     |   | `-DeclRefExpr 0x55d7d2c68530 <col:14> 'T *' lvalue Var 0x55d7d2c683f8 's' 'T *'
|     |   `-DeclRefExpr 0x55d7d2c685f0 <col:18> 'const V' lvalue ParmVar 0x55d7d2c40ca8 'value' 'const V &'
|     `-ReturnStmt 0x55d7d2c68690 <line:725:9, col:17>
|       `-UnaryOperator 0x55d7d2c68678 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2c68668 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55d7d2c41258 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55d7d2c40ec0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55d7d2c411b8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55d7d2c40f70 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c40ff0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c41098 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55d7d2c694c0 <col:65, line:737:5>
|     |-DeclStmt 0x55d7d2c68738 <line:732:9, col:26>
|     | `-VarDecl 0x55d7d2c686d0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55d7d2c69488 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55d7d2c694a8 <line:733:13, col:58>
|       | `-VarDecl 0x55d7d2c68760 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55d7d2c68940 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55d7d2c68910 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55d7d2c688f8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55d7d2c688d8 <col:26, col:58> 'String' (CXXTemporary 0x55d7d2c688d8)
|       |           `-CXXMemberCallExpr 0x55d7d2c68868 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55d7d2c687d8 <col:26> '<bound member function type>' ->find 0x55d7d2c60768
|       |             | `-CXXThisExpr 0x55d7d2c687c8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55d7d2c688a0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c68808 <col:31> 'const char *' lvalue ParmVar 0x55d7d2c40f70 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55d7d2c688b8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c68828 <col:40> 'int' lvalue ParmVar 0x55d7d2c40ff0 'flags' 'int'
|       |             `-DeclRefExpr 0x55d7d2c68848 <col:47> 'Args::Slot *' lvalue Var 0x55d7d2c686d0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55d7d2c689f8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55d7d2c689e0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55d7d2c689c0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55d7d2c68990 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |       `-ImplicitCastExpr 0x55d7d2c68978 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55d7d2c68958 <col:20> 'String' lvalue Var 0x55d7d2c68760 'str' 'String'
|       `-CompoundStmt 0x55d7d2c69468 <col:61, line:736:9>
|         |-DeclStmt 0x55d7d2c68eb0 <line:734:13, col:76>
|         | `-VarDecl 0x55d7d2c68a48 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55d7d2c68e80 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55d7d2c68df0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55d7d2c68e38 <col:60> 'T' lvalue ParmVar 0x55d7d2c41098 'variable' 'T &'
|         |     `-UnaryOperator 0x55d7d2c68e68 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55d7d2c68e58 <col:71> 'Args *' this
|         `-CallExpr 0x55d7d2c69438 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55d7d2c68ed8 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|           | `-CXXThisExpr 0x55d7d2c68ec8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55d7d2c693f8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55d7d2c68f08 <col:23> 'T *' lvalue Var 0x55d7d2c68a48 's' 'T *'
|           | `-CallExpr 0x55d7d2c693b8 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55d7d2c69190 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55d7d2c69290 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55d7d2c692b0 <col:86> 'String' lvalue Var 0x55d7d2c68760 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55d7d2c69360 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55d7d2c692f0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|           |   | `-DeclRefExpr 0x55d7d2c692d0 <col:92> 'T *' lvalue Var 0x55d7d2c68a48 's' 'T *'
|           |   `-UnaryOperator 0x55d7d2c693a0 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55d7d2c69390 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55d7d2c69418 <col:103> 'Args::Slot *' lvalue Var 0x55d7d2c686d0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55d7d2c47b40 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55d7d2c412c8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55d7d2c41348 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55d7d2c47aa0 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c41408 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c41488 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c41528 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55d7d2c415c8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55d7d2c6a360 <col:88, line:745:5>
|     |-DeclStmt 0x55d7d2c69558 <line:741:9, col:26>
|     | `-VarDecl 0x55d7d2c694f0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c69778 <line:742:9, col:55>
|     | `-VarDecl 0x55d7d2c69580 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55d7d2c69760 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55d7d2c69730 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55d7d2c69718 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55d7d2c696f8 <col:22, col:54> 'String' (CXXTemporary 0x55d7d2c696f8)
|     |           `-CXXMemberCallExpr 0x55d7d2c69688 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55d7d2c695f8 <col:22> '<bound member function type>' ->find 0x55d7d2c60768
|     |             | `-CXXThisExpr 0x55d7d2c695e8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55d7d2c696c0 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55d7d2c69628 <col:27> 'const char *' lvalue ParmVar 0x55d7d2c41408 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55d7d2c696d8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55d7d2c69648 <col:36> 'int' lvalue ParmVar 0x55d7d2c41488 'flags' 'int'
|     |             `-DeclRefExpr 0x55d7d2c69668 <col:43> 'Args::Slot *' lvalue Var 0x55d7d2c694f0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c69b50 <line:743:9, col:72>
|     | `-VarDecl 0x55d7d2c697c8 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55d7d2c69b20 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55d7d2c69a90 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55d7d2c69ad8 <col:56> 'T' lvalue ParmVar 0x55d7d2c41528 'variable' 'T &'
|     |     `-UnaryOperator 0x55d7d2c69b08 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55d7d2c69af8 <col:67> 'Args *' this
|     `-CallExpr 0x55d7d2c6a330 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55d7d2c69b78 <col:9> '<bound member function type>' ->postparse 0x55d7d2c60978
|       | `-CXXThisExpr 0x55d7d2c69b68 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55d7d2c6a2f0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55d7d2c69ba8 <col:19> 'T *' lvalue Var 0x55d7d2c697c8 's' 'T *'
|       | `-ParenExpr 0x55d7d2c6a2d0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55d7d2c6a2a0 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55d7d2c6a288 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55d7d2c6a270 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55d7d2c6a250 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55d7d2c6a220 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |     |       `-ImplicitCastExpr 0x55d7d2c6a208 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55d7d2c69bc8 <col:25> 'String' lvalue Var 0x55d7d2c69580 'str' 'String'
|       |     |-CallExpr 0x55d7d2c6a078 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55d7d2c69e50 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55d7d2c69f50 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55d7d2c69f70 <col:89> 'String' lvalue Var 0x55d7d2c69580 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55d7d2c6a020 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55d7d2c69fb0 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|       |     | | `-DeclRefExpr 0x55d7d2c69f90 <col:95> 'T *' lvalue Var 0x55d7d2c697c8 's' 'T *'
|       |     | `-UnaryOperator 0x55d7d2c6a060 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55d7d2c6a050 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55d7d2c6a1e8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55d7d2c6a1c8 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55d7d2c6a198 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55d7d2c6a148 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55d7d2c6a0d8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|       |         | | `-DeclRefExpr 0x55d7d2c6a0b8 <col:109> 'T *' lvalue Var 0x55d7d2c697c8 's' 'T *'
|       |         | `-DeclRefExpr 0x55d7d2c6a178 <col:113> 'const V' lvalue ParmVar 0x55d7d2c415c8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55d7d2c6a1b8 <col:120> 'bool' true
|       `-DeclRefExpr 0x55d7d2c6a310 <col:128> 'Args::Slot *' lvalue Var 0x55d7d2c694f0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55d7d2c48078 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55d7d2c47bb8 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c47c38 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c47fd8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55d7d2c47cf8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c47d78 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c47df0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c47e98 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55d7d2c6d0b8 <col:75, line:754:5>
|     |-DeclStmt 0x55d7d2c6a408 <line:749:9, col:26>
|     | `-VarDecl 0x55d7d2c6a3a0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55d7d2c6d080 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55d7d2c6d0a0 <line:750:13, col:58>
|       | `-VarDecl 0x55d7d2c6a430 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55d7d2c6a610 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55d7d2c6a5e0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55d7d2c6a5c8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55d7d2c6a5a8 <col:26, col:58> 'String' (CXXTemporary 0x55d7d2c6a5a8)
|       |           `-CXXMemberCallExpr 0x55d7d2c6a538 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55d7d2c6a4a8 <col:26> '<bound member function type>' ->find 0x55d7d2c60768
|       |             | `-CXXThisExpr 0x55d7d2c6a498 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55d7d2c6a570 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c6a4d8 <col:31> 'const char *' lvalue ParmVar 0x55d7d2c47cf8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55d7d2c6a588 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c6a4f8 <col:40> 'int' lvalue ParmVar 0x55d7d2c47d78 'flags' 'int'
|       |             `-DeclRefExpr 0x55d7d2c6a518 <col:47> 'Args::Slot *' lvalue Var 0x55d7d2c6a3a0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55d7d2c6a6c8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55d7d2c6a6b0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55d7d2c6a690 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55d7d2c6a660 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |       `-ImplicitCastExpr 0x55d7d2c6a648 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55d7d2c6a628 <col:20> 'String' lvalue Var 0x55d7d2c6a430 'str' 'String'
|       `-CompoundStmt 0x55d7d2c6d060 <col:61, line:753:9>
|         |-DeclStmt 0x55d7d2c6cc00 <line:751:13, col:63>
|         | `-VarDecl 0x55d7d2c6c878 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55d7d2c6cbd0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55d7d2c6cb40 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55d7d2c6cb88 <col:47> 'T' lvalue ParmVar 0x55d7d2c47e98 'variable' 'T &'
|         |     `-UnaryOperator 0x55d7d2c6cbb8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55d7d2c6cba8 <col:58> 'Args *' this
|         `-CallExpr 0x55d7d2c6d030 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55d7d2c6cc28 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|           | `-CXXThisExpr 0x55d7d2c6cc18 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55d7d2c6cff0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55d7d2c6cc58 <col:23> 'T *' lvalue Var 0x55d7d2c6c878 's' 'T *'
|           | `-CallExpr 0x55d7d2c6cfb0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55d7d2c6ce40 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55d7d2c6ce88 <col:56> 'P' lvalue ParmVar 0x55d7d2c47df0 'parser' 'P'
|           |   |-DeclRefExpr 0x55d7d2c6cea8 <col:64> 'String' lvalue Var 0x55d7d2c6a430 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55d7d2c6cf58 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55d7d2c6cee8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|           |   | `-DeclRefExpr 0x55d7d2c6cec8 <col:70> 'T *' lvalue Var 0x55d7d2c6c878 's' 'T *'
|           |   `-UnaryOperator 0x55d7d2c6cf98 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55d7d2c6cf88 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55d7d2c6d010 <col:81> 'Args::Slot *' lvalue Var 0x55d7d2c6a3a0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55d7d2c486d8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55d7d2c480f0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55d7d2c48168 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55d7d2c481e8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55d7d2c48638 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55d7d2c482b0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c48330 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c483a8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c48448 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55d7d2c484e8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55d7d2c6de48 <col:98, line:762:5>
|     |-DeclStmt 0x55d7d2c6d150 <line:758:9, col:26>
|     | `-VarDecl 0x55d7d2c6d0e8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c6d370 <line:759:9, col:55>
|     | `-VarDecl 0x55d7d2c6d178 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55d7d2c6d358 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55d7d2c6d328 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55d7d2c6d310 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55d7d2c6d2f0 <col:22, col:54> 'String' (CXXTemporary 0x55d7d2c6d2f0)
|     |           `-CXXMemberCallExpr 0x55d7d2c6d280 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55d7d2c6d1f0 <col:22> '<bound member function type>' ->find 0x55d7d2c60768
|     |             | `-CXXThisExpr 0x55d7d2c6d1e0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55d7d2c6d2b8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55d7d2c6d220 <col:27> 'const char *' lvalue ParmVar 0x55d7d2c482b0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55d7d2c6d2d0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55d7d2c6d240 <col:36> 'int' lvalue ParmVar 0x55d7d2c48330 'flags' 'int'
|     |             `-DeclRefExpr 0x55d7d2c6d260 <col:43> 'Args::Slot *' lvalue Var 0x55d7d2c6d0e8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c6d790 <line:760:9, col:59>
|     | `-VarDecl 0x55d7d2c6d3c8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55d7d2c6d760 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55d7d2c6d6d0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55d7d2c6d718 <col:43> 'T' lvalue ParmVar 0x55d7d2c48448 'variable' 'T &'
|     |     `-UnaryOperator 0x55d7d2c6d748 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55d7d2c6d738 <col:54> 'Args *' this
|     `-CallExpr 0x55d7d2c6de18 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55d7d2c6d7b8 <col:9> '<bound member function type>' ->postparse 0x55d7d2c60978
|       | `-CXXThisExpr 0x55d7d2c6d7a8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55d7d2c6ddd8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55d7d2c6d7e8 <col:19> 'T *' lvalue Var 0x55d7d2c6d3c8 's' 'T *'
|       | `-ParenExpr 0x55d7d2c6ddb8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55d7d2c6dd88 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55d7d2c6dd70 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55d7d2c6dd58 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55d7d2c6dd38 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55d7d2c6dd08 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |     |       `-ImplicitCastExpr 0x55d7d2c6dcf0 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55d7d2c6d808 <col:25> 'String' lvalue Var 0x55d7d2c6d178 'str' 'String'
|       |     |-CallExpr 0x55d7d2c6db60 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55d7d2c6d9f0 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55d7d2c6da38 <col:59> 'P' lvalue ParmVar 0x55d7d2c483a8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55d7d2c6da58 <col:67> 'String' lvalue Var 0x55d7d2c6d178 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55d7d2c6db08 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55d7d2c6da98 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|       |     | | `-DeclRefExpr 0x55d7d2c6da78 <col:73> 'T *' lvalue Var 0x55d7d2c6d3c8 's' 'T *'
|       |     | `-UnaryOperator 0x55d7d2c6db48 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55d7d2c6db38 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55d7d2c6dcd0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55d7d2c6dcb0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55d7d2c6dc80 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55d7d2c6dc30 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55d7d2c6dbc0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|       |         | | `-DeclRefExpr 0x55d7d2c6dba0 <col:87> 'T *' lvalue Var 0x55d7d2c6d3c8 's' 'T *'
|       |         | `-DeclRefExpr 0x55d7d2c6dc60 <col:91> 'const V' lvalue ParmVar 0x55d7d2c484e8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55d7d2c6dca0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55d7d2c6ddf8 <col:106> 'Args::Slot *' lvalue Var 0x55d7d2c6d0e8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55d7d2c48d48 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55d7d2c48758 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c487d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55d7d2c48858 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55d7d2c48ca8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55d7d2c48920 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c489a0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c48a18 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c48ab8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55d7d2c48b58 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55d7d2c6ee28 <col:60, line:773:5>
|     |-DeclStmt 0x55d7d2c6def0 <line:767:9, col:26>
|     | `-VarDecl 0x55d7d2c6de88 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55d7d2c6edf0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55d7d2c6ee10 <line:768:13, col:58>
|       | `-VarDecl 0x55d7d2c6df18 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55d7d2c6e0f8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55d7d2c6e0c8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55d7d2c6e0b0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55d7d2c6e090 <col:26, col:58> 'String' (CXXTemporary 0x55d7d2c6e090)
|       |           `-CXXMemberCallExpr 0x55d7d2c6e020 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55d7d2c6df90 <col:26> '<bound member function type>' ->find 0x55d7d2c60768
|       |             | `-CXXThisExpr 0x55d7d2c6df80 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55d7d2c6e058 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c6dfc0 <col:31> 'const char *' lvalue ParmVar 0x55d7d2c48920 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55d7d2c6e070 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c6dfe0 <col:40> 'int' lvalue ParmVar 0x55d7d2c489a0 'flags' 'int'
|       |             `-DeclRefExpr 0x55d7d2c6e000 <col:47> 'Args::Slot *' lvalue Var 0x55d7d2c6de88 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55d7d2c6e1b0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55d7d2c6e198 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55d7d2c6e178 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55d7d2c6e148 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |       `-ImplicitCastExpr 0x55d7d2c6e130 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55d7d2c6e110 <col:20> 'String' lvalue Var 0x55d7d2c6df18 'str' 'String'
|       `-CompoundStmt 0x55d7d2c6edc8 <col:61, line:772:9>
|         |-DeclStmt 0x55d7d2c6e4f0 <line:769:13, col:66>
|         | `-VarDecl 0x55d7d2c6e208 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55d7d2c6e4c0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55d7d2c6e430 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55d7d2c6e478 <col:49> 'T1' lvalue ParmVar 0x55d7d2c48ab8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55d7d2c6e4a8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55d7d2c6e498 <col:61> 'Args *' this
|         |-DeclStmt 0x55d7d2c6e860 <line:770:13, col:66>
|         | `-VarDecl 0x55d7d2c6e578 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55d7d2c6e830 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55d7d2c6e7a0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55d7d2c6e7e8 <col:49> 'T2' lvalue ParmVar 0x55d7d2c48b58 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55d7d2c6e818 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55d7d2c6e808 <col:61> 'Args *' this
|         `-CallExpr 0x55d7d2c6ed98 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55d7d2c6e888 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|           | `-CXXThisExpr 0x55d7d2c6e878 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55d7d2c6ed58 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55d7d2c6e8f8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55d7d2c6e8b8 <col:23> 'T1 *' lvalue Var 0x55d7d2c6e208 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55d7d2c6e8d8 <col:29> 'T2 *' lvalue Var 0x55d7d2c6e578 's2' 'T2 *'
|           | `-CallExpr 0x55d7d2c6ed10 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55d7d2c6eae0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55d7d2c6eb28 <col:63> 'P' lvalue ParmVar 0x55d7d2c48a18 'parser' 'P'
|           |   |-DeclRefExpr 0x55d7d2c6eb48 <col:71> 'String' lvalue Var 0x55d7d2c6df18 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55d7d2c6ebf8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55d7d2c6eb88 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|           |   | `-DeclRefExpr 0x55d7d2c6eb68 <col:77> 'T1 *' lvalue Var 0x55d7d2c6e208 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55d7d2c6ecb8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55d7d2c6ec48 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|           |   | `-DeclRefExpr 0x55d7d2c6ec28 <col:82> 'T2 *' lvalue Var 0x55d7d2c6e578 's2' 'T2 *'
|           |   `-UnaryOperator 0x55d7d2c6ecf8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55d7d2c6ece8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55d7d2c6ed78 <col:94> 'Args::Slot *' lvalue Var 0x55d7d2c6de88 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55d7d2c49138 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55d7d2c48dc8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c49098 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55d7d2c48e80 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c48f00 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c48f78 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c6f340 <col:67, line:780:5>
|     |-DeclStmt 0x55d7d2c6eec0 <line:777:9, col:26>
|     | `-VarDecl 0x55d7d2c6ee58 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55d7d2c6f308 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55d7d2c6f328 <line:778:13, col:58>
|       | `-VarDecl 0x55d7d2c6eee8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55d7d2c6f0c8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55d7d2c6f098 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55d7d2c6f080 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55d7d2c6f060 <col:26, col:58> 'String' (CXXTemporary 0x55d7d2c6f060)
|       |           `-CXXMemberCallExpr 0x55d7d2c6eff0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55d7d2c6ef60 <col:26> '<bound member function type>' ->find 0x55d7d2c60768
|       |             | `-CXXThisExpr 0x55d7d2c6ef50 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55d7d2c6f028 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c6ef90 <col:31> 'const char *' lvalue ParmVar 0x55d7d2c48e80 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55d7d2c6f040 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55d7d2c6efb0 <col:40> 'int' lvalue ParmVar 0x55d7d2c48f00 'flags' 'int'
|       |             `-DeclRefExpr 0x55d7d2c6efd0 <col:47> 'Args::Slot *' lvalue Var 0x55d7d2c6ee58 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55d7d2c6f180 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55d7d2c6f168 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55d7d2c6f148 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55d7d2c6f118 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|       |       `-ImplicitCastExpr 0x55d7d2c6f100 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55d7d2c6f0e0 <col:20> 'String' lvalue Var 0x55d7d2c6eee8 'str' 'String'
|       `-CallExpr 0x55d7d2c6f2d8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55d7d2c6f1a8 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|         | `-CXXThisExpr 0x55d7d2c6f198 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55d7d2c6f288 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55d7d2c6f1f8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55d7d2c6f1d8 <col:23> 'P' lvalue ParmVar 0x55d7d2c48f78 'parser' 'P'
|         | |-DeclRefExpr 0x55d7d2c6f240 <col:36> 'String' lvalue Var 0x55d7d2c6eee8 'str' 'String'
|         | `-UnaryOperator 0x55d7d2c6f270 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55d7d2c6f260 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55d7d2c6f2b8 <col:49> 'Args::Slot *' lvalue Var 0x55d7d2c6ee58 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55d7d2c494d8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55d7d2c491a8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55d7d2c49438 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55d7d2c49260 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c492e0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c49358 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55d7d2c6fcb0 <col:71, line:792:5>
|     |-DeclStmt 0x55d7d2c6f3d8 <line:784:9, col:26>
|     | `-VarDecl 0x55d7d2c6f370 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c6f4a8 <line:785:9, col:29>
|     | `-VarDecl 0x55d7d2c6f408 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55d7d2c6f490 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55d7d2c6f470 <col:28> 'int' 1
|     |-WhileStmt 0x55d7d2c6fb60 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55d7d2c6fb80 <line:786:16, col:61>
|     | | `-VarDecl 0x55d7d2c6f4d0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55d7d2c6f6b0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55d7d2c6f680 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55d7d2c6f668 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55d7d2c6f648 <col:29, col:61> 'String' (CXXTemporary 0x55d7d2c6f648)
|     | |           `-CXXMemberCallExpr 0x55d7d2c6f5d8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55d7d2c6f548 <col:29> '<bound member function type>' ->find 0x55d7d2c60768
|     | |             | `-CXXThisExpr 0x55d7d2c6f538 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55d7d2c6f610 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55d7d2c6f578 <col:34> 'const char *' lvalue ParmVar 0x55d7d2c49260 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55d7d2c6f628 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55d7d2c6f598 <col:43> 'int' lvalue ParmVar 0x55d7d2c492e0 'flags' 'int'
|     | |             `-DeclRefExpr 0x55d7d2c6f5b8 <col:50> 'Args::Slot *' lvalue Var 0x55d7d2c6f370 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55d7d2c6f768 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55d7d2c6f750 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55d7d2c6f730 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55d7d2c6f700 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|     | |       `-ImplicitCastExpr 0x55d7d2c6f6e8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55d7d2c6f6c8 <col:23> 'String' lvalue Var 0x55d7d2c6f4d0 'str' 'String'
|     | `-CompoundStmt 0x55d7d2c6fb38 <col:64, line:790:9>
|     |   |-CallExpr 0x55d7d2c6f8c0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55d7d2c6f790 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|     |   | | `-CXXThisExpr 0x55d7d2c6f780 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55d7d2c6f870 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55d7d2c6f7e0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55d7d2c6f7c0 <col:23> 'P' lvalue ParmVar 0x55d7d2c49358 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55d7d2c6f828 <col:36> 'String' lvalue Var 0x55d7d2c6f4d0 'str' 'String'
|     |   | | `-UnaryOperator 0x55d7d2c6f858 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55d7d2c6f848 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55d7d2c6f8a0 <col:49> 'Args::Slot *' lvalue Var 0x55d7d2c6f370 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55d7d2c6fa58 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55d7d2c6f8f0 <col:13> 'int' lvalue Var 0x55d7d2c6f408 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55d7d2c6fa40 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55d7d2c6fa20 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55d7d2c6f988 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55d7d2c6f968 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55d7d2c6f950 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55d7d2c6f910 <col:28> 'int' lvalue Var 0x55d7d2c6f408 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55d7d2c6f930 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55d7d2c6fa08 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55d7d2c6f9d8 <col:49> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|     |   |         `-ImplicitCastExpr 0x55d7d2c6f9b8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55d7d2c6f9a8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55d7d2c6fb08 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55d7d2c6fa78 <col:13> 'int' lvalue ParmVar 0x55d7d2c492e0 'flags' 'int'
|     |     `-UnaryOperator 0x55d7d2c6faf0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55d7d2c6fad8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55d7d2c6fab8 <col:23> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55d7d2c6fc90 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55d7d2c6fbc8 <col:9> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|       | `-ImplicitCastExpr 0x55d7d2c6fba8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55d7d2c6fb98 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55d7d2c6fc70 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55d7d2c6fc50 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55d7d2c6fc38 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55d7d2c6fbf8 <col:25> 'int' lvalue Var 0x55d7d2c6f408 'read_status' 'int'
|           `-IntegerLiteral 0x55d7d2c6fc18 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55d7d2c499b8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55d7d2c49548 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c495c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c49918 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55d7d2c49688 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c49708 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c49780 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c49828 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55d7d2c70c40 <col:84, line:805:5>
|     |-DeclStmt 0x55d7d2c6fd58 <line:796:9, col:26>
|     | `-VarDecl 0x55d7d2c6fcf0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c6fe28 <line:797:9, col:29>
|     | `-VarDecl 0x55d7d2c6fd88 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55d7d2c6fe10 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55d7d2c6fdf0 <col:28> 'int' 1
|     |-DeclStmt 0x55d7d2c70160 <line:798:9, col:71>
|     | `-VarDecl 0x55d7d2c6fe78 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55d7d2c70130 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55d7d2c700a0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55d7d2c700e8 <col:55> 'T' lvalue ParmVar 0x55d7d2c49828 'variable' 'T &'
|     |     `-UnaryOperator 0x55d7d2c70118 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55d7d2c70108 <col:66> 'Args *' this
|     |-WhileStmt 0x55d7d2c70af0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55d7d2c70b10 <line:799:16, col:61>
|     | | `-VarDecl 0x55d7d2c70188 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55d7d2c70368 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55d7d2c70338 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55d7d2c70320 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55d7d2c70300 <col:29, col:61> 'String' (CXXTemporary 0x55d7d2c70300)
|     | |           `-CXXMemberCallExpr 0x55d7d2c70290 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55d7d2c70200 <col:29> '<bound member function type>' ->find 0x55d7d2c60768
|     | |             | `-CXXThisExpr 0x55d7d2c701f0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55d7d2c702c8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55d7d2c70230 <col:34> 'const char *' lvalue ParmVar 0x55d7d2c49688 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55d7d2c702e0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55d7d2c70250 <col:43> 'int' lvalue ParmVar 0x55d7d2c49708 'flags' 'int'
|     | |             `-DeclRefExpr 0x55d7d2c70270 <col:50> 'Args::Slot *' lvalue Var 0x55d7d2c6fcf0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55d7d2c70420 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55d7d2c70408 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55d7d2c703e8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55d7d2c703b8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|     | |       `-ImplicitCastExpr 0x55d7d2c703a0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55d7d2c70380 <col:23> 'String' lvalue Var 0x55d7d2c70188 'str' 'String'
|     | `-CompoundStmt 0x55d7d2c70ac8 <col:64, line:803:9>
|     |   |-CallExpr 0x55d7d2c70850 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55d7d2c70448 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|     |   | | `-CXXThisExpr 0x55d7d2c70438 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55d7d2c70810 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55d7d2c70478 <col:23> 'T *' lvalue Var 0x55d7d2c6fe78 's' 'T *'
|     |   | | `-CallExpr 0x55d7d2c707d0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55d7d2c70660 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55d7d2c706a8 <col:56> 'P' lvalue ParmVar 0x55d7d2c49780 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55d7d2c706c8 <col:64> 'String' lvalue Var 0x55d7d2c70188 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55d7d2c70778 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55d7d2c70708 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|     |   | |   | `-DeclRefExpr 0x55d7d2c706e8 <col:70> 'T *' lvalue Var 0x55d7d2c6fe78 's' 'T *'
|     |   | |   `-UnaryOperator 0x55d7d2c707b8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55d7d2c707a8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55d7d2c70830 <col:81> 'Args::Slot *' lvalue Var 0x55d7d2c6fcf0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55d7d2c709e8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55d7d2c70880 <col:13> 'int' lvalue Var 0x55d7d2c6fd88 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55d7d2c709d0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55d7d2c709b0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55d7d2c70918 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55d7d2c708f8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55d7d2c708e0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55d7d2c708a0 <col:28> 'int' lvalue Var 0x55d7d2c6fd88 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55d7d2c708c0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55d7d2c70998 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55d7d2c70968 <col:49> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|     |   |         `-ImplicitCastExpr 0x55d7d2c70948 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55d7d2c70938 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55d7d2c70a98 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55d7d2c70a08 <col:13> 'int' lvalue ParmVar 0x55d7d2c49708 'flags' 'int'
|     |     `-UnaryOperator 0x55d7d2c70a80 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55d7d2c70a68 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55d7d2c70a48 <col:23> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55d7d2c70c20 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55d7d2c70b58 <col:9> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|       | `-ImplicitCastExpr 0x55d7d2c70b38 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55d7d2c70b28 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55d7d2c70c00 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55d7d2c70be0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55d7d2c70bc8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55d7d2c70b88 <col:25> 'int' lvalue Var 0x55d7d2c6fd88 'read_status' 'int'
|           `-IntegerLiteral 0x55d7d2c70ba8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55d7d2c49f98 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55d7d2c49a30 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55d7d2c49aa8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55d7d2c49ef8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55d7d2c49b68 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55d7d2c49be8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55d7d2c49c60 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55d7d2c49db0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55d7d2c71a48 <col:87, line:821:5>
|     |-DeclStmt 0x55d7d2c70cf0 <line:809:9, col:26>
|     | `-VarDecl 0x55d7d2c70c88 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55d7d2c70dc0 <line:810:9, col:29>
|     | `-VarDecl 0x55d7d2c70d20 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55d7d2c70da8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55d7d2c70d88 <col:28> 'int' 1
|     |-DeclStmt 0x55d7d2c71008 <line:811:9, col:38>
|     | `-VarDecl 0x55d7d2c70ef0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55d7d2c70fe0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55d7d2c70f68 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55d7d2c70fc0 <col:29> 'Vector<T>' lvalue ParmVar 0x55d7d2c49db0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55d7d2c718f8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55d7d2c71918 <line:812:16, col:61>
|     | | `-VarDecl 0x55d7d2c71030 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55d7d2c71210 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55d7d2c711e0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55d7d2c711c8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55d7d2c711a8 <col:29, col:61> 'String' (CXXTemporary 0x55d7d2c711a8)
|     | |           `-CXXMemberCallExpr 0x55d7d2c71138 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55d7d2c710a8 <col:29> '<bound member function type>' ->find 0x55d7d2c60768
|     | |             | `-CXXThisExpr 0x55d7d2c71098 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55d7d2c71170 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55d7d2c710d8 <col:34> 'const char *' lvalue ParmVar 0x55d7d2c49b68 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55d7d2c71188 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55d7d2c710f8 <col:43> 'int' lvalue ParmVar 0x55d7d2c49be8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55d7d2c71118 <col:50> 'Args::Slot *' lvalue Var 0x55d7d2c70c88 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55d7d2c712c8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55d7d2c712b0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55d7d2c71290 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55d7d2c71260 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55d7d298e358
|     | |       `-ImplicitCastExpr 0x55d7d2c71248 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55d7d2c71228 <col:23> 'String' lvalue Var 0x55d7d2c71030 'str' 'String'
|     | `-CompoundStmt 0x55d7d2c718c0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55d7d2c71388 <line:813:13, col:23>
|     |   | `-VarDecl 0x55d7d2c712f0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55d7d2c71368 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55d7d2c71508 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55d7d2c713b0 <col:13> '<bound member function type>' ->postparse 0x55d7d2c60978
|     |   | | `-CXXThisExpr 0x55d7d2c713a0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55d7d2c714b0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55d7d2c71400 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55d7d2c713e0 <col:23> 'P' lvalue ParmVar 0x55d7d2c49c60 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55d7d2c71448 <col:36> 'String' lvalue Var 0x55d7d2c71030 'str' 'String'
|     |   | | |-DeclRefExpr 0x55d7d2c71468 <col:41> 'T' lvalue Var 0x55d7d2c712f0 'sx' 'T'
|     |   | | `-UnaryOperator 0x55d7d2c71498 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55d7d2c71488 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55d7d2c714e8 <col:53> 'Args::Slot *' lvalue Var 0x55d7d2c70c88 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55d7d2c71660 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55d7d2c71598 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55d7d2c71568 <col:17> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|     |   | |   `-ImplicitCastExpr 0x55d7d2c71548 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55d7d2c71538 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55d7d2c71638 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55d7d2c715d0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55d7d2c715b0 <col:17> 'Vector<T> *' lvalue Var 0x55d7d2c70ef0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55d7d2c71618 <col:30> 'T' lvalue Var 0x55d7d2c712f0 'sx' 'T'
|     |   |-BinaryOperator 0x55d7d2c717e0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55d7d2c71678 <col:13> 'int' lvalue Var 0x55d7d2c70d20 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55d7d2c717c8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55d7d2c717a8 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55d7d2c71710 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55d7d2c716f0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55d7d2c716d8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55d7d2c71698 <col:28> 'int' lvalue Var 0x55d7d2c70d20 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55d7d2c716b8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55d7d2c71790 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55d7d2c71760 <col:49> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|     |   |         `-ImplicitCastExpr 0x55d7d2c71740 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55d7d2c71730 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55d7d2c71890 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55d7d2c71800 <col:13> 'int' lvalue ParmVar 0x55d7d2c49be8 'flags' 'int'
|     |     `-UnaryOperator 0x55d7d2c71878 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55d7d2c71860 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55d7d2c71840 <col:23> 'const int' lvalue Var 0x55d7d2c309e8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55d7d2c71a28 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55d7d2c71960 <col:9> 'bool' lvalue ->_read_status 0x55d7d2b433c0
|       | `-ImplicitCastExpr 0x55d7d2c71940 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55d7d2c71930 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55d7d2c71a08 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55d7d2c719e8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55d7d2c719d0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55d7d2c71990 <col:25> 'int' lvalue Var 0x55d7d2c70d20 'read_status' 'int'
|           `-IntegerLiteral 0x55d7d2c719b0 <col:40> 'int' 1
|-AccessSpecDecl 0x55d7d2c4a010 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d2c4a038 prev 0x55d7d2c2ece8 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55d7d2c4a130 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55d7d2c4a220 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55d7d2c71a80 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55d7d2c4a310 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55d7d2c71a90 <col:25, line:830:9>
| |-CXXMethodDecl 0x55d7d2c4a410 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55d7d2c4a4c0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55d7d2c4a568 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55d7d2c4a568
| | `-ParmVarDecl 0x55d7d2c4a678 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55d7d2c4ae38 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55d7d2c4ae38
|   `-ParmVarDecl 0x55d7d2c4af48 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55d7d2c4a6e8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55d7d2c4a848 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55d7d2c4aa40 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55d7d2c4a8f0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55d7d2c4a968 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55d7d2c71c70 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55d7d2c4acf8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55d7d2c71ae0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55d7d2c71aa0 <col:20> 'void *' lvalue ParmVar 0x55d7d2c4a8f0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55d7d2c4ad60 '_slot' 'char *'
| | | `-CXXNewExpr 0x55d7d2c71b68 <col:32, col:45> 'char *' array Function 0x55d7d27b1fd8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55d7d2c71b50 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55d7d2c71b20 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55d7d2c4a968 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55d7d2c4adc0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55d7d2c71c30 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55d7d2c71bf0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55d7d2c4a968 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55d7d2c71cf0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55d7d2c4ab40 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55d7d2c4a310 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55d7d2c71d78 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55d7d2c71d58 <line:840:13, col:22> 'void' array Function 0x55d7d27b2338 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55d7d2c71d40 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55d7d2c71d10 <col:22> 'char *' lvalue ->_slot 0x55d7d2c4ad60
| |         `-CXXThisExpr 0x55d7d2c71d00 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55d7d2c4ac40 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55d7d2c4a410 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55d7d2c71f68 <col:22, line:844:9>
| |   `-CallExpr 0x55d7d2c71ed0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55d7d2c71eb8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55d7d2c71e98 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55d7d28bddb8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55d7d2c71f08 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55d7d2c71de8 <col:20> 'void *' lvalue ->_ptr 0x55d7d2c4acf8
| |     |   `-CXXThisExpr 0x55d7d2c71dd8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55d7d2c71f38 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55d7d2c71f20 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55d7d2c71e28 <col:26> 'char *' lvalue ->_slot 0x55d7d2c4ad60
| |     |     `-CXXThisExpr 0x55d7d2c71e18 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55d7d2c71f50 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55d7d2c71e68 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55d7d2c4adc0
| |         `-CXXThisExpr 0x55d7d2c71e58 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55d7d2c4acf8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55d7d2c4ad60 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55d7d2c4adc0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55d7d2c4afb8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55d7d2c4afb8
| | `-ParmVarDecl 0x55d7d2c4b0c8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55d7d2c4b168 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55d7d2c4b168
|   `-ParmVarDecl 0x55d7d2c4b278 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55d7d2c4b418 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55d7d2c4b2e8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55d7d2c4b388 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55d7d2c4b6b0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55d7d2c4b8a8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55d7d2c4b778 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55d7d2c4ba28 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55d7d2c71fa0 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55d7d2c71f80 <col:20> 'T *' lvalue ParmVar 0x55d7d2c4b778 'ptr' 'T *'
|   | `-CompoundStmt 0x55d7d2c71ff0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55d7d2c4b978 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55d7d2c4a410 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55d7d2c721a0 <col:22, line:857:9>
|   |   `-CallExpr 0x55d7d2c72170 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55d7d2c72000 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55d7d29764e8 0x55d7d2920818
|   |     |-CXXOperatorCallExpr 0x55d7d2c72100 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55d7d2c72090 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55d7d2b83498 0x55d7d2b830b8 0x55d7d2b82ce8 0x55d7d2b82908 0x55d7d2b82528 0x55d7d2b82158
|   |     | `-MemberExpr 0x55d7d2c72060 <col:29> 'T *' lvalue ->_ptr 0x55d7d2c4ba28
|   |     |   `-CXXThisExpr 0x55d7d2c72050 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55d7d2c72140 <col:35> 'T' lvalue ->_slot 0x55d7d2c4ba88
|   |       `-CXXThisExpr 0x55d7d2c72130 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55d7d2c4ba28 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55d7d2c4ba88 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55d7d2c4baf0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55d7d2c4bbf0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55d7d2c4bc40 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2c4bbd0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55d7d2c4bbb0 <col:31> 'int' 48
|-FieldDecl 0x55d7d2c4bc68 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55d7d2c4bcc8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55d7d2c4bd28 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2c4be60 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55d7d2c60010 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55d7d2c60070 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55d7d2c60120 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55d7d2c60348 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55d7d2c60250 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55d7d2c60498 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55d7d2c60408 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55d7d2c60768 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55d7d2c60558 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55d7d2c605d8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55d7d2c60680 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55d7d2c60978 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55d7d2c60830 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55d7d2c608a8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55d7d2c60a48 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55d7d2c60b98 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55d7d2c60b00 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55d7d2c62818 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55d7d2c60c58 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55d7d2c60cd8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55d7d2c60d80 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55d7d2c62728 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55d7d2c62a40 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55d7d2c628f0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55d7d2c62968 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55d7d2c62d58 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55d7d2c62af0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55d7d2c62cb8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55d7d2c62bc8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WordArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c8f9a8 <../dummy_inc/click/args.hh:1369:1, line:1373:1> line:1369:7 referenced class WordArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2c8fac8 <col:1, col:7> col:7 implicit class WordArg
|-AccessSpecDecl 0x55d7d2c8fb58 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55d7d2c8fd50 <line:1370:5, line:1372:5> line:1370:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55d7d2c8fb90 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55d7d2c8fc08 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x55d7d2c8fc80 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55d7d2c8fe20 <col:79> 'const ArgContext' lvalue Var 0x55d7d2c721c8 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55d7d2c8ff98 <col:91, line:1372:5>
|   `-ReturnStmt 0x55d7d2c8ff88 <line:1371:9, col:39>
|     `-CallExpr 0x55d7d2c8ff38 <col:16, col:39> 'bool'
|       |-ImplicitCastExpr 0x55d7d2c8ff20 <col:16> 'bool (*)(const String &, String *, String *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2c8ff00 <col:16> 'bool (const String &, String *, String *)' lvalue Function 0x55d7d2c8f8f0 'cp_word' 'bool (const String &, String *, String *)'
|       |-DeclRefExpr 0x55d7d2c8fe88 <col:24> 'const String' lvalue ParmVar 0x55d7d2c8fb90 'str' 'const String &'
|       |-UnaryOperator 0x55d7d2c8fec8 <col:29, col:30> 'String *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55d7d2c8fea8 <col:30> 'String' lvalue ParmVar 0x55d7d2c8fc08 'result' 'String &'
|       `-ImplicitCastExpr 0x55d7d2c8ff70 <col:38> 'String *' <NullToPointer>
|         `-IntegerLiteral 0x55d7d2c8fee0 <col:38> 'int' 0
|-CXXConstructorDecl 0x55d7d2dd2078 <line:1369:7> col:7 implicit referenced constexpr WordArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2dd2178 <col:7> col:7 implicit constexpr WordArg 'void (const WordArg &)' inline default trivial noexcept-unevaluated 0x55d7d2dd2178
| `-ParmVarDecl 0x55d7d2dd2288 <col:7> col:7 'const WordArg &'
|-CXXConstructorDecl 0x55d7d2dd2328 <col:7> col:7 implicit used constexpr WordArg 'void (WordArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2dd2438 <col:7> col:7 'WordArg &&'
| `-CompoundStmt 0x55d7d2dd2b70 <col:7>
`-CXXDestructorDecl 0x55d7d2dd24d8 <col:7> col:7 implicit referenced ~WordArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.WordArg = type { i8 }
  NonVirtualBaseLLVMType:%class.WordArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class FilenameArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c8ffb0 <../dummy_inc/click/args.hh:1379:1, line:1381:1> line:1379:7 referenced class FilenameArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2c900c8 <col:1, col:7> col:7 implicit class FilenameArg
|-AccessSpecDecl 0x55d7d2c90158 <col:21, col:27> col:21 public
|-CXXMethodDecl 0x55d7d2c90350 <line:1380:5, col:93> col:17 parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55d7d2c90190 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55d7d2c90208 <col:42, col:50> col:50 result 'String &'
| `-ParmVarDecl 0x55d7d2c90280 <col:58, col:83> col:76 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55d7d2c90420 <col:83> 'const ArgContext' lvalue Var 0x55d7d2c721c8 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x55d7d2dd4718 <line:1379:7> col:7 implicit referenced constexpr FilenameArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2dd4818 <col:7> col:7 implicit constexpr FilenameArg 'void (const FilenameArg &)' inline default trivial noexcept-unevaluated 0x55d7d2dd4818
| `-ParmVarDecl 0x55d7d2dd4928 <col:7> col:7 'const FilenameArg &'
|-CXXConstructorDecl 0x55d7d2dd49c8 <col:7> col:7 implicit used constexpr FilenameArg 'void (FilenameArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2dd4ad8 <col:7> col:7 'FilenameArg &&'
| `-CompoundStmt 0x55d7d2dd5160 <col:7>
`-CXXDestructorDecl 0x55d7d2dd4b78 <col:7> col:7 implicit referenced ~FilenameArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.FilenameArg = type { i8 }
  NonVirtualBaseLLVMType:%class.FilenameArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c8a220 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2c8a338 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55d7d2c8a3c8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55d7d2c8a608 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55d7d2c8a400 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55d7d2c8a480 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55d7d2c8a4f8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55d7d2c8a820 <col:81> 'const ArgContext' lvalue Var 0x55d7d2c721c8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55d7d2c8a760 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55d7d2c8a6d0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55d7d2c8a978 <col:35, line:1261:5>
|   `-ReturnStmt 0x55d7d2c8a968 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55d7d2c8a950 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55d7d2c8a920 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2c8a908 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55d7d2c8a8e0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55d7d2c8a8c0 <col:16, col:24> 'String' (CXXTemporary 0x55d7d2c8a8c0)
|               `-CXXConstructExpr 0x55d7d2c8a888 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55d7d2c8a870 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55d7d2c8a850 <col:23> 'bool' lvalue ParmVar 0x55d7d2c8a6d0 'x' 'bool'
|-CXXConstructorDecl 0x55d7d2dd5520 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2dd5628 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55d7d2dd5628
| `-ParmVarDecl 0x55d7d2dd5738 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x55d7d2dd57d8 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x55d7d2dd57d8
| `-ParmVarDecl 0x55d7d2dd58e8 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x55d7d2dd5988 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2ca7f20 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2ca8038 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55d7d2ca80e0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55d7d2ca8148 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55d7d2ca81b0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55d7d2ca8260 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55d7d2ca80e0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55d7d2ca90e0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55d7d2ca9098 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55d7d2ca9060 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55d7d2ca9048 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55d7d2ca8ff0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55d7d29b0e40 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55d7d2ca8148 'len' 'int'
| | `-IntegerLiteral 0x55d7d2ca9158 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2ca81b0 'cap' 'int'
| | `-IntegerLiteral 0x55d7d2ca91c0 <col:20> 'int' 0
| `-CompoundStmt 0x55d7d2ca9240 <col:23, line:119:2>
|-CXXConstructorDecl 0x55d7d2ca83d8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55d7d2ca8318 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55d7d2ca9250 <col:37, line:121:2>
|-CXXConstructorDecl 0x55d7d2cab468 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2cab578 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2ca80e0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55d7d2cacf30 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55d7d2cacf00 <col:12> 'unsigned char *const' lvalue .s 0x55d7d2ca80e0
| |     `-DeclRefExpr 0x55d7d2cacee0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55d7d2cab578 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2ca8148 'len' 'int'
| | `-ImplicitCastExpr 0x55d7d2cacfc0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d2cacf90 <col:12> 'const int' lvalue .len 0x55d7d2ca8148
| |     `-DeclRefExpr 0x55d7d2cacf70 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55d7d2cab578 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2ca81b0 'cap' 'int'
| | `-ImplicitCastExpr 0x55d7d2cad050 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d2cad020 <col:12> 'const int' lvalue .cap 0x55d7d2ca81b0
| |     `-DeclRefExpr 0x55d7d2cad000 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55d7d2cab578 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55d7d2cad0a8 <col:12>
|-CXXConstructorDecl 0x55d7d2cab618 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d7d2cab618
| `-ParmVarDecl 0x55d7d2cab728 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55d7d2cad360 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2ca3698 prev 0x55d7d2bdb688 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2ca3790 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55d7d2ca3820 <col:21, col:27> col:21 public
|-TypedefDecl 0x55d7d2ca3860 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55d7d265afd0 'const char *'
|   `-QualType 0x55d7d265a521 'const char' const
|     `-BuiltinType 0x55d7d265a520 'char'
|-TypedefDecl 0x55d7d2ca38d0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55d7d265b1a0 'char *'
|   `-BuiltinType 0x55d7d265a520 'char'
|-TypedefDecl 0x55d7d2ca3a10 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55d7d2ca3980 'int (StringAccum::*)() const'
|   |-RecordType 0x55d7d291c710 'StringAccum'
|   | `-CXXRecord 0x55d7d2ca3698 'StringAccum'
|   `-ParenType 0x55d7d298ae50 'int () const' sugar
|     `-FunctionProtoType 0x55d7d295f9f0 'int () const' const cdecl
|       `-BuiltinType 0x55d7d265a580 'int'
|-CXXConstructorDecl 0x55d7d2ca3ad0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55d7d2ca3c20 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55d7d2ca3b90 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55d7d2ca3d70 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55d7d2ca3ce0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55d7d2ca3f18 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55d7d2ca3e58 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55d7d2ca40c8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55d7d2ca4008 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55d7d2ca41c0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55d7d2ca4378 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55d7d2ca42b0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55d7d2ca44f8 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55d7d2ca4430 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55d7d2ca45f0 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55d7d2ca46b8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55d7d2ca4780 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55d7d2ca4848 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55d7d2ca4910 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55d7d2ca4a78 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55d7d2ca4b48 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2ca4c08 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55d7d2ca4d18 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55d7d2ca4e28 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55d7d2ca4ee8 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55d7d2ca4fa8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55d7d2ca50f0 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55d7d2ca5060 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55d7d2ca5280 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55d7d2ca51b0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55d7d2ca5348 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55d7d2ca5440 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55d7d2ca5500 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55d7d2ca55c8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55d7d2ca5688 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55d7d2ca5748 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55d7d2ca5808 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2ca5958 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55d7d2ca58c0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55d7d2ca5aa8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55d7d2ca5a18 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55d7d2ca5c00 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55d7d2ca5b68 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55d7d2ca5d50 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55d7d2ca5cc0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55d7d2ca5f70 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55d7d2ca5e10 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55d7d2ca5e90 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55d7d2ca8f18 <col:53> 'int' 0
|-CXXMethodDecl 0x55d7d2ca60c8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55d7d2ca6038 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55d7d2ca8f38 <col:34> 'int' 1
|-CXXMethodDecl 0x55d7d2ca6210 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55d7d2ca6180 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55d7d2ca6360 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55d7d2ca62d0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55d7d2ca64b0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55d7d2ca6420 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55d7d2ca6600 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55d7d2ca6570 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55d7d2ca67d8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55d7d2ca66c0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55d7d2ca6740 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55d7d2ca69b8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55d7d2ca68a0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2ca6920 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55d7d2ca6b98 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55d7d2ca6a80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55d7d2ca6b00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55d7d2ca6d78 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55d7d2ca6c60 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2ca6ce0 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55d7d2ca6f58 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55d7d2ca6e40 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55d7d2ca6ec0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55d7d2ca72b8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55d7d2ca70a0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55d7d2ca7120 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55d7d2ca8f58 <col:56> 'int' 10
| `-ParmVarDecl 0x55d7d2ca7198 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2ca8f78 <col:77> 'bool' true
|-CXXMethodDecl 0x55d7d2ca7648 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55d7d2ca7400 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55d7d2ca7480 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55d7d2ca8f88 <col:57> 'int' 10
| `-ParmVarDecl 0x55d7d2ca7520 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2ca8fa8 <col:78> 'bool' true
|-CXXMethodDecl 0x55d7d2ca7870 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55d7d2ca7718 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55d7d2ca7798 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55d7d2ca7968 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x55d7d2ca7ad8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55d7d2ca7a18 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55d7d2ca7c28 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55d7d2ca7b98 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55d7d2ca7cd0 <col:51> "" ""
|-AccessSpecDecl 0x55d7d2ca7d40 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55d7d2ca7d68 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55d7d2ca7eb8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55d7d2ca7f08 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2ca7e98 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55d7d2ca7e68 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55d7d2993bb8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55d7d2ca7f20 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2ca8038 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55d7d2ca80e0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55d7d2ca8148 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55d7d2ca81b0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55d7d2ca8260 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55d7d2ca80e0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55d7d2ca90e0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55d7d2ca9098 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55d7d2ca9060 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55d7d2ca9048 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55d7d2ca8ff0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55d7d29b0e40 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55d7d2ca8148 'len' 'int'
| | | `-IntegerLiteral 0x55d7d2ca9158 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55d7d2ca81b0 'cap' 'int'
| | | `-IntegerLiteral 0x55d7d2ca91c0 <col:20> 'int' 0
| | `-CompoundStmt 0x55d7d2ca9240 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55d7d2ca83d8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55d7d2ca8318 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55d7d2ca9250 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55d7d2cab468 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d2cab578 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55d7d2ca80e0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55d7d2cacf30 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55d7d2cacf00 <col:12> 'unsigned char *const' lvalue .s 0x55d7d2ca80e0
| | |     `-DeclRefExpr 0x55d7d2cacee0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55d7d2cab578 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55d7d2ca8148 'len' 'int'
| | | `-ImplicitCastExpr 0x55d7d2cacfc0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55d7d2cacf90 <col:12> 'const int' lvalue .len 0x55d7d2ca8148
| | |     `-DeclRefExpr 0x55d7d2cacf70 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55d7d2cab578 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55d7d2ca81b0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55d7d2cad050 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55d7d2cad020 <col:12> 'const int' lvalue .cap 0x55d7d2ca81b0
| | |     `-DeclRefExpr 0x55d7d2cad000 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55d7d2cab578 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55d7d2cad0a8 <col:12>
| |-CXXConstructorDecl 0x55d7d2cab618 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d7d2cab618
| | `-ParmVarDecl 0x55d7d2cab728 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55d7d2cad360 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55d7d2ca84b0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55d7d2ca85b0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55d7d2ca8518 <col:16> col:19 'int'
|-CXXMethodDecl 0x55d7d2ca8790 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55d7d2ca8670 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55d7d2ca86f0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55d7d2ca8970 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55d7d2ca8858 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55d7d2ca88d8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55d7d2ca8ac8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55d7d2ca8a38 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55d7d2ca8c18 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55d7d2ca8b88 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55d7d2ca8ed8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55d7d2ca8e18 parent 0x55d7d265a488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55d7d2ca8cd0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55d7d2ca8d48 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d28f5338 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d28f5458 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55d7d28f5520 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d29c5af0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d29cae08 <col:8>
|-CXXConstructorDecl 0x55d7d29c5bf8 <col:8> col:8 implicit used constexpr in_addr 'void (const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d29c5d08 <col:8> col:8 used 'const in_addr &'
| |-CXXCtorInitializer Field 0x55d7d28f5520 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d2de1c50 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d2de1c20 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55d7d28f5520
| |     `-DeclRefExpr 0x55d7d2de1c00 <col:8> 'const in_addr' lvalue ParmVar 0x55d7d29c5d08 '' 'const in_addr &'
| `-CompoundStmt 0x55d7d2de1c98 <col:8>
|-CXXConstructorDecl 0x55d7d29c5da8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d29c5eb8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55d7d28f5520 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29cb020 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d29caff0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55d7d28f5520
| |     `-CXXStaticCastExpr 0x55d7d29cafc0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d29caf90 <col:8> 'in_addr' lvalue ParmVar 0x55d7d29c5eb8 '' 'in_addr &&'
| `-CompoundStmt 0x55d7d29cb068 <col:8>
`-CXXDestructorDecl 0x55d7d29cb2a0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d29bd7d8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d29bd8f8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55d7d29bd9e0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55d7d29bd9c0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55d7d29bd988 <col:22> 'int' 4
|-FieldDecl 0x55d7d29bda88 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55d7d29bda68 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55d7d29bda30 <col:21> 'int' 4
|-FieldDecl 0x55d7d29bdae8 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d29bdb48 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d29bdba8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d29bdc08 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d29bdc68 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d29bdcc8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d29bdd28 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d29bdd98 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55d7d29bde08 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d29c0720 prev 0x55d7d2926768 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d29c0818 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55d7d29c08a8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55d7d29c08e0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55d7d27b4040 'uninitialized_type'
|   `-CXXRecord 0x55d7d27b3fa8 'uninitialized_type'
|-CXXConstructorDecl 0x55d7d29c09a0 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c51a8 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d29c5168 <col:10> 'int' 0
| `-CompoundStmt 0x55d7d29c51f0 <col:13, line:22:5>
|-CXXConstructorDecl 0x55d7d29c0af0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55d7d29c0a60 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c5240 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d29c5200 <col:10> 'unsigned int' lvalue ParmVar 0x55d7d29c0a60 'x' 'unsigned int'
| `-CompoundStmt 0x55d7d29c5288 <col:13, line:27:5>
|-CXXConstructorDecl 0x55d7d29c0c48 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55d7d29c0bb8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c52f0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55d7d29c52d8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55d7d29c5298 <col:10> 'int' lvalue ParmVar 0x55d7d29c0bb8 'x' 'int'
| `-CompoundStmt 0x55d7d29c5338 <col:13, line:31:5>
|-CXXConstructorDecl 0x55d7d29c0da0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55d7d29c0d10 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c53a0 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55d7d29c5388 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55d7d29c5348 <col:10> 'unsigned long' lvalue ParmVar 0x55d7d29c0d10 'x' 'unsigned long'
| `-CompoundStmt 0x55d7d29c53e8 <col:13, line:35:5>
|-CXXConstructorDecl 0x55d7d29c0ef8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55d7d29c0e68 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c5450 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55d7d29c5438 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55d7d29c53f8 <col:10> 'long' lvalue ParmVar 0x55d7d29c0e68 'x' 'long'
| `-CompoundStmt 0x55d7d29c5498 <col:13, line:39:5>
|-CXXConstructorDecl 0x55d7d29c10b8 <line:42:5, line:44:5> line:42:12 used IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55d7d29c0fc8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c5518 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d29c54c8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55d7d28f5520
| |     `-DeclRefExpr 0x55d7d29c54a8 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55d7d29c0fc8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55d7d29c5560 <col:20, line:44:5>
|-CXXConstructorDecl 0x55d7d29c1248 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55d7d29c1180 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55d7d29c56c8 <col:51, line:56:5>
|   `-BinaryOperator 0x55d7d29c56a8 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55d7d29c5580 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55d7d29c5100
|     | `-CXXThisExpr 0x55d7d29c5570 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55d7d29c5690 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55d7d29c5678 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55d7d29c5658 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55d7d29c5628 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55d7d29c5610 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55d7d29c55b0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55d7d29c1180 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55d7d29c1398 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55d7d29c1308 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55d7d29c1548 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55d7d29c1488 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55d7d29c5738 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55d7d29c5710 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55d7d29c56e0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55d7d29c1488 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55d7d29c16d8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55d7d29c1610 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55d7d29c17c8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55d7d29c66f8 <col:46, line:83:5>
|   `-ReturnStmt 0x55d7d29c66e8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55d7d29c66d0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55d7d29c66a0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d29c6558 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55d7d29c6440 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55d7d29c6328 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55d7d29c5760 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55d7d29c18b8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55d7d29c67a8 <col:31, line:88:5>
|   `-ReturnStmt 0x55d7d29c6798 <line:87:2, col:10>
|     `-UnaryOperator 0x55d7d29c6780 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55d7d29c6768 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55d7d29c6750 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55d7d29c6720 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55d7d29c5100
|             `-CXXThisExpr 0x55d7d29c6710 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55d7d29c1978 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55d7d29c6828 <col:34, line:93:5>
|   `-ReturnStmt 0x55d7d29c6818 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55d7d29c6800 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55d7d29c67d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55d7d29c5100
|         `-CXXThisExpr 0x55d7d29c67c0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55d7d29c1a48 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55d7d29c68a8 <col:38, line:101:5>
|   `-ReturnStmt 0x55d7d29c6898 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55d7d29c6880 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55d7d29c6850 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55d7d29c5100
|         `-CXXThisExpr 0x55d7d29c6840 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55d7d29c1b18 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55d7d29c6b78 <col:38, line:108:5>
|   `-ReturnStmt 0x55d7d29c6b68 <line:107:2, col:58>
|     `-BinaryOperator 0x55d7d29c6b48 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55d7d29c6a60 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55d7d29c6a40 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55d7d29c6a28 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55d7d29c68d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55d7d29c5100
|       |   |   `-CXXThisExpr 0x55d7d29c68c0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55d7d29c6a00 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55d7d29c69e8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55d7d29c6968 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55d7d2903a58 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55d7d29c6948 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55d7d29c6b20 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55d7d29c6b08 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55d7d29c6ae8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55d7d2903a58 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55d7d29c6ac8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55d7d29c1bd8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55d7d29c6de8 <col:39, line:112:5>
|   `-ReturnStmt 0x55d7d29c6dd8 <line:111:2, col:56>
|     `-BinaryOperator 0x55d7d29c6db8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55d7d29c6cd0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55d7d29c6cb0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55d7d29c6c98 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55d7d29c6ba0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55d7d29c5100
|       |   |   `-CXXThisExpr 0x55d7d29c6b90 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55d7d29c6c70 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55d7d29c6c58 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55d7d29c6c38 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55d7d2903a58 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55d7d29c6c18 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55d7d29c6d90 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55d7d29c6d78 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55d7d29c6d58 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55d7d2903a58 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55d7d29c6d38 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55d7d29c1d08 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55d7d29c1e10 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55d7d29c1f20 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55d7d29c3ff8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d7d29c40b8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d29c4180 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55d7d29c4378 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55d7d29c4230 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55d7d29c42a8 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55d7d29c44f8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55d7d29c4438 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55d7d29c4640 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55d7d29c45b0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55d7d29c47e8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55d7d29c46f8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55d7d29c4930 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55d7d29c48a0 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55d7d29c4a78 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55d7d29c49e8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55d7d29c4b40 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55d7d29c4c00 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55d7d29c4d78 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55d7d29c4cb0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55d7d29c4e40 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55d7d29c4f28 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55d7d29c4fd0 <col:51> "" ""
|-TypedefDecl 0x55d7d29c5070 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55d7d2926800 'IPAddress'
|   `-CXXRecord 0x55d7d29c0720 'IPAddress'
|-AccessSpecDecl 0x55d7d29c50c8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55d7d29c5100 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d29c57a8 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x55d7d29c57a8
| `-ParmVarDecl 0x55d7d29c58b8 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x55d7d29c5958 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d29c5a68 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55d7d29c5100 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55d7d29c6648 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d29c6600 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55d7d29c5100
| |     `-CXXStaticCastExpr 0x55d7d29c65d0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d29c65a0 <col:7> 'IPAddress' lvalue ParmVar 0x55d7d29c5a68 '' 'IPAddress &&'
| `-CompoundStmt 0x55d7d29c6690 <col:7>
`-CXXDestructorDecl 0x55d7d29c6358 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2b98df8 prev 0x55d7d2b8e000 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2b98ef0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55d7d2b98fe0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55d7d2b99108 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55d7d2b99288 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55d7d2b99408 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55d7d2b99588 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55d7d2baa3b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d2baac28 <col:11>
|-CXXDestructorDecl 0x55d7d2baa490 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2baa5c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55d7d2baa5c8
| `-ParmVarDecl 0x55d7d2baa6d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55d7d2baa778 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d7d2baa778
| `-ParmVarDecl 0x55d7d2baa888 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55d7d2bad648 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2bad758 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55d7d2bad9d8 <col:11>
|   `-ReturnStmt 0x55d7d2bad9c8 <col:11>
|     `-UnaryOperator 0x55d7d2bad9b0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2bad9a0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55d7d2bad7c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d7d2bad7c8
  `-ParmVarDecl 0x55d7d2bad8d8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2b995f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2b99708 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55d7d2b997a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55d7d2b99810 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55d7d2b99878 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55d7d2b998e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55d7d2b99940 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55d7d2b99a00 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55d7d2b99a60 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55d7d2b99ac0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55d7d2baa2c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55d7d2b997a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55d7d2baac38 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55d7d2baac90 <col:12>
|-CXXConstructorDecl 0x55d7d2baa8f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55d7d2baa8f8
| `-ParmVarDecl 0x55d7d2baaa08 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55d7d2baaaa8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55d7d2baaaa8
| `-ParmVarDecl 0x55d7d2baabb8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55d7d2bacd30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2b87710 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2b87828 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55d7d2b878b8 <col:16, col:22> col:16 public
|-EnumDecl 0x55d7d2b878e0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55d7d2b879e0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55d7d2b87ac0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b879c0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55d7d2b879a0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55d7d2b87a70 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55d7d2b87ad8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b87a50 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55d7d2b87a30 <col:22> 'int' 64
|-CXXMethodDecl 0x55d7d2b87e18 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55d7d2b87b00 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2b87b80 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55d7d2b87bf8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2b87c70 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d7d2b87ed8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b880d8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b87f50 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55d7d2b87fc8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d7d2b88188 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b882e8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b881f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d7d2b88390 <col:72> warn_unused_result ""
|-TypedefDecl 0x55d7d2b886f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55d7d2b88680 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55d7d2b88620 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55d7d2b885e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55d7d265a4e0 'void'
|       |-PointerType 0x55d7d2907ab0 'unsigned char *'
|       | `-BuiltinType 0x55d7d265a5e0 'unsigned char'
|       |-TypedefType 0x55d7d2704080 'size_t' sugar
|       | |-Typedef 0x55d7d26cabe0 'size_t'
|       | `-BuiltinType 0x55d7d265a640 'unsigned long'
|       `-PointerType 0x55d7d265ace0 'void *'
|         `-BuiltinType 0x55d7d265a4e0 'void'
|-CXXMethodDecl 0x55d7d2b88b68 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55d7d2b88760 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55d7d2b887d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2b88870 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55d7d2b888f0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55d7d2ba3260 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55d7d2ba3248 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55d7d2ba3210 <col:58> 'int' 0
| |-ParmVarDecl 0x55d7d2b88970 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55d7d2ba3288 <col:76> 'int' 0
| |-ParmVarDecl 0x55d7d2b889f0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55d7d2ba32a8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55d7d2b88c38 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b88cb8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55d7d2b88d78 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55d7d2b88e18 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b88e70 <col:30>
|-CXXMethodDecl 0x55d7d2b88ee8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55d7d2b88f88 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b88fe0 <col:30>
|-CXXMethodDecl 0x55d7d2b89058 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55d7d2b890f8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b891a8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55d7d2b89248 <col:20>
| |-OptimizeNoneAttr 0x55d7d2b892a0 <col:30>
| `-WarnUnusedResultAttr 0x55d7d2b892c8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b89320 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55d7d2b893c0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b89418 <col:30>
|-CXXMethodDecl 0x55d7d2b89468 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55d7d2b89508 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b89560 <col:30>
|-CXXMethodDecl 0x55d7d2b895a8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x55d7d2b89648 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b896a0 <col:30>
|-CXXMethodDecl 0x55d7d2b896e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b897a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b89870 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d7d2b89938 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d7d2b899f8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b89b18 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55d7d2ba3370 <col:54, line:99:5>
|   `-ReturnStmt 0x55d7d2ba3360 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2ba3348 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55d7d2ba3318 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55d7d2b99df8
|         `-CXXThisExpr 0x55d7d2ba3308 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55d7d2b89cb8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55d7d2b89bc8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55d7d2ba3420 <col:67, line:103:5>
|   `-BinaryOperator 0x55d7d2ba3400 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55d7d2ba3398 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55d7d2b99df8
|     | `-CXXThisExpr 0x55d7d2ba3388 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55d7d2ba33e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2ba33c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55d7d2b89bc8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55d7d2b89db0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55d7d2ba34a0 <col:33, line:107:5>
|   `-ReturnStmt 0x55d7d2ba3490 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2ba3478 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2ba3448 <col:16> 'void *' lvalue ->_destructor_argument 0x55d7d2b99e60
|         `-CXXThisExpr 0x55d7d2ba3438 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55d7d2b89e70 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55d7d2ba3ad0 <col:25, line:113:5>
|   |-ParenExpr 0x55d7d2ba3818 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55d7d2ba37e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba3558 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55d7d2ba3530 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55d7d2ba34f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55d7d2ba34c8 <col:24> '<bound member function type>' ->shared 0x55d7d2b88ee8
|   |   |       `-ImplicitCastExpr 0x55d7d2ba3518 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55d7d2ba34b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba35b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba3598 <col:42> 'int' 0
|   |   `-CallExpr 0x55d7d2ba3748 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba3730 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba3710 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba3788 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba3628 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55d7d2ba37a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba3650 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba37b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba3688 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55d7d2ba37d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba36f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba36e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba36a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55d7d2ba3a18 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55d7d2ba3848 <col:2> 'unsigned char *' lvalue ->_head 0x55d7d2b99c00
|   | | `-CXXThisExpr 0x55d7d2ba3838 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2ba3a00 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55d7d2ba39e0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55d7d2ba3888 <col:10> 'unsigned char *' lvalue ->_data 0x55d7d2b99c68
|   |     | `-CXXThisExpr 0x55d7d2ba3878 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55d7d2ba39c8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55d7d2ba39a8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55d7d2ba38c8 <col:18> 'unsigned char *' lvalue ->_tail 0x55d7d2b99cd0
|   |         | `-CXXThisExpr 0x55d7d2ba38b8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55d7d2ba3990 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55d7d2ba3970 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55d7d2ba3908 <col:26> 'unsigned char *' lvalue ->_end 0x55d7d2b99d38
|   |             | `-CXXThisExpr 0x55d7d2ba38f8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55d7d2ba3958 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55d7d2ba3938 <col:33> 'int' 0
|   `-BinaryOperator 0x55d7d2ba3ab0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55d7d2ba3a48 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55d7d2b99df8
|     | `-CXXThisExpr 0x55d7d2ba3a38 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55d7d2ba3a98 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55d7d2ba3a78 <col:16> 'int' 0
|-CXXMethodDecl 0x55d7d2b89fb0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55d7d2b89f20 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b8a058 <col:20>
| |-OptimizeNoneAttr 0x55d7d2b8a0b0 <col:30>
| `-WarnUnusedResultAttr 0x55d7d2b8a0d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b8a1a8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55d7d2b8a118 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b8a250 <col:20>
| |-OptimizeNoneAttr 0x55d7d2b8a2a8 <col:30>
| `-WarnUnusedResultAttr 0x55d7d2b8a2d0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b8a408 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55d7d2b8a310 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d7d2b8a4b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b8a5b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55d7d2b8a520 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b8a658 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8a6b0 <col:30>
|-CXXMethodDecl 0x55d7d2b8a778 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55d7d2b8a6e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d7d2b8a820 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b8a920 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55d7d2b8a890 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d7d2b8a9c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b8aac8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55d7d2b8aa38 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b8ab70 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8abc8 <col:30>
|-CXXMethodDecl 0x55d7d2b8ad58 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55d7d2b8ac08 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55d7d2b8ac80 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55d7d2ba32c8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55d7d2b8ae08 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55d7d2b8b008 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b8ae80 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2b8aef8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b8b218 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b8b0c8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d7d2b8b140 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b8b428 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55d7d2b8b2d8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55d7d2b8b358 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55d7d2ba32d8 <col:39> 'int' 0
|-CXXMethodDecl 0x55d7d2b8b4f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55d7d2b8b5c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d7d2b8b688 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d7d2b8b748 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b8b810 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55d7d2b8b958 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55d7d2b8b8c8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55d7d2b8bb28 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b8ba18 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2b8ba90 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b8bbf8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55d7d2b8bcb8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55d7d2b8bd58 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8bdb0 <col:30>
|-CXXMethodDecl 0x55d7d2b8be00 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55d7d2b8bea0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8bef8 <col:30>
|-CXXMethodDecl 0x55d7d2b8bf48 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d7d2b8c008 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b8c0d0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55d7d2b8c170 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8c1c8 <col:30>
|-CXXMethodDecl 0x55d7d2b8c318 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b8c208 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2b8c280 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b8c468 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55d7d2b8c3d8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b8c540 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55d7d2b8c600 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55d7d2b8c6a0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8c6f8 <col:30>
|-CXXMethodDecl 0x55d7d2b8c748 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55d7d2b8c7e8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8c840 <col:30>
|-CXXMethodDecl 0x55d7d2b8c890 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d7d2b8c958 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55d7d2b8c9f8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8ca50 <col:30>
|-CXXMethodDecl 0x55d7d2b8ca98 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55d7d2b8cbb8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55d7d2b8cd28 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55d7d2b8cc68 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55d7d2b8ce18 <line:307:5, col:68> col:56 used ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55d7d2b8ceb8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8cf10 <col:30>
|-CXXMethodDecl 0x55d7d2b8cf60 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d7d2b8d020 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b8d258 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55d7d2b8d0d0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55d7d2b8d148 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b8d308 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8d360 <col:30>
|-CXXMethodDecl 0x55d7d2b8d408 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55d7d2b8d4a8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8d500 <col:30>
|-CXXMethodDecl 0x55d7d2b8d550 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55d7d2b8d5f0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8d648 <col:30>
|-CXXMethodDecl 0x55d7d2b8d690 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55d7d2b8d730 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8d788 <col:30>
|-CXXMethodDecl 0x55d7d2b8d888 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55d7d2b8d7c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55d7d2b8d930 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8d988 <col:30>
|-CXXMethodDecl 0x55d7d2b8db48 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55d7d2b8d9c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55d7d2b8da38 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b8dbf8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8dc50 <col:30>
|-CXXMethodDecl 0x55d7d2b8dcf8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55d7d2b8de18 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55d7d2b8df38 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55d7d2b8dfd8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d2b8e000 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55d7d2b8e128 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55d7d2b8e1c8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8e220 <col:30>
|-CXXMethodDecl 0x55d7d2b8e2c8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55d7d2b8e368 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8e3c0 <col:30>
|-AccessSpecDecl 0x55d7d2b8e3e8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55d7d2b8e410 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55d7d2b8e510 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55d7d2b8e560 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b8e4f0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55d7d2b8e4d0 <col:14> 'int' 48
|-CXXMethodDecl 0x55d7d2b8e5c8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55d7d2b8e668 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8e6c0 <col:30>
|-CXXMethodDecl 0x55d7d2b8e738 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55d7d2b8e7d8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8e830 <col:30>
|-CXXMethodDecl 0x55d7d2b8e8f8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55d7d2b8e868 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2b8ea98 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55d7d2b8ec38 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55d7d2b8eb48 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55d7d2b8ece0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55d7d2b8ede0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d7d2b8f190 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8edc0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2b8eda0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55d7d2b8ee70 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d7d2b8f1a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8ee50 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2b8ee30 <col:14> 'int' 1
| |-EnumConstantDecl 0x55d7d2b8ef00 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d7d2b8f1c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8eee0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55d7d2b8eec0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55d7d2b8ef90 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d7d2b8f1d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8ef70 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55d7d2b8ef50 <col:14> 'int' 3
| |-EnumConstantDecl 0x55d7d2b8f020 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d7d2b8f1f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8f000 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55d7d2b8efe0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55d7d2b8f0b0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d7d2b8f208 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8f090 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55d7d2b8f070 <col:13> 'int' 5
| `-EnumConstantDecl 0x55d7d2b8f140 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55d7d2b8f220 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b8f120 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55d7d2b8f100 <col:14> 'int' 6
|-CXXMethodDecl 0x55d7d2b8f288 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55d7d2b8f328 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8f380 <col:30>
|-CXXMethodDecl 0x55d7d2b8f478 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55d7d2b8f3b8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55d7d2b8f520 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b8f578 <col:30>
|-CXXMethodDecl 0x55d7d2b8f5e8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55d7d2b8f710 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55d7d2b8f888 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55d7d2b8f7c0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55d7d2b8f950 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55d7d2b8fa18 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55d7d2b8fb58 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55d7d2b8fac8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55d7d2b8fc00 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55d7d2b8fd00 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55d7d2b8ff00 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8fce0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2b8fcc0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55d7d2b8fd90 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55d7d2b8ff18 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8fd70 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55d7d2b8fd50 <col:45> 'int' 4
| |-EnumConstantDecl 0x55d7d2b8fe20 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55d7d2b8ff30 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b8fe00 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2b8fde0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55d7d2b8feb0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55d7d2b8ff48 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b8fe90 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55d7d2b8fe70 <col:47> 'int' 16
|-CXXMethodDecl 0x55d7d2b8ffa8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55d7d2b90118 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55d7d2b90058 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55d7d2b901c0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b90218 <col:30>
|-CXXMethodDecl 0x55d7d2b90268 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55d7d2ba3bf0 <col:18, col:36>
|   `-ReturnStmt 0x55d7d2ba3be0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55d7d2ba3bc8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55d7d2ba3ba8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55d7d2ba3b78 <col:27> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|           `-CXXThisExpr 0x55d7d2ba3b68 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55d7d2b90360 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55d7d2ba3d00 <col:30, col:48>
|   `-ReturnStmt 0x55d7d2ba3cf0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55d7d2ba3cd8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55d7d2ba3cb8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55d7d2ba3c88 <col:39> '<bound member function type>' ->xanno 0x55d7d2b8e128
|           `-CXXThisExpr 0x55d7d2ba3c78 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55d7d2b90448 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55d7d2ba3e98 <col:24, col:50>
|   `-ReturnStmt 0x55d7d2ba3e88 <col:26, col:47>
|     `-UnaryOperator 0x55d7d2ba3e70 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d7d2ba3e50 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55d7d2ba3e38 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d7d2ba3de8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55d7d2b99108
|         |   `-CXXMemberCallExpr 0x55d7d2ba3dc8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55d7d2ba3d98 <col:34> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|         |       `-CXXThisExpr 0x55d7d2ba3d88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55d7d2ba3e18 <col:46> 'int' 0
|-CXXMethodDecl 0x55d7d2b90550 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55d7d2ba4068 <col:36, col:62>
|   `-ReturnStmt 0x55d7d2ba4058 <col:38, col:59>
|     `-UnaryOperator 0x55d7d2ba4040 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d7d2ba4020 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55d7d2ba4008 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d7d2ba3f80 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55d7d2b99108
|         |   `-CXXMemberCallExpr 0x55d7d2ba3f60 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55d7d2ba3f30 <col:46> '<bound member function type>' ->xanno 0x55d7d2b8e128
|         |       `-CXXThisExpr 0x55d7d2ba3f20 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55d7d2ba3fb0 <col:58> 'int' 0
|-CXXMethodDecl 0x55d7d2b90668 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55d7d2ba4200 <col:26, col:53>
|   `-ReturnStmt 0x55d7d2ba41f0 <col:28, col:50>
|     `-UnaryOperator 0x55d7d2ba41d8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d7d2ba41b8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55d7d2ba41a0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d7d2ba4150 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55d7d2b99408
|         |   `-CXXMemberCallExpr 0x55d7d2ba4130 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55d7d2ba4100 <col:36> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|         |       `-CXXThisExpr 0x55d7d2ba40f0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55d7d2ba4180 <col:49> 'int' 0
|-CXXMethodDecl 0x55d7d2b90788 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55d7d2ba43d8 <col:38, col:65>
|   `-ReturnStmt 0x55d7d2ba43c8 <col:40, col:62>
|     `-UnaryOperator 0x55d7d2ba43b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d7d2ba4390 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55d7d2ba4378 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d7d2ba42e8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55d7d2b99408
|         |   `-CXXMemberCallExpr 0x55d7d2ba42c8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55d7d2ba4298 <col:48> '<bound member function type>' ->xanno 0x55d7d2b8e128
|         |       `-CXXThisExpr 0x55d7d2ba4288 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55d7d2ba4318 <col:61> 'int' 0
|-CXXMethodDecl 0x55d7d2b90938 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55d7d2b90840 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55d7d2ba4aa8 <col:34, line:463:5>
|   |-ParenExpr 0x55d7d2ba48f0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55d7d2ba48c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba4528 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba44f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba4448 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba4430 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba43f0 <col:23> 'int' lvalue ParmVar 0x55d7d2b90840 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba4410 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba44d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba44a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba4468 <col:33> 'int' lvalue ParmVar 0x55d7d2b90840 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55d7d2ba44c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55d7d2ba4488 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba4588 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba4568 <col:56> 'int' 0
|   |   `-CallExpr 0x55d7d2ba4820 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba4808 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba47e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba4860 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba4678 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55d7d2ba4878 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba46a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba4890 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba46e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55d7d2ba48a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba47d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba47b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba4778 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55d7d2ba4a98 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55d7d2ba4a80 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55d7d2ba4a60 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55d7d2ba4a30 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d7d2ba49e0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55d7d2b99108
|         |   `-CXXMemberCallExpr 0x55d7d2ba49c0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55d7d2ba4990 <col:9> '<bound member function type>' ->xanno 0x55d7d2b8e128
|         |       `-CXXThisExpr 0x55d7d2ba4980 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55d7d2ba4a48 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55d7d2ba4a10 <col:21> 'int' lvalue ParmVar 0x55d7d2b90840 'i' 'int'
|-CXXMethodDecl 0x55d7d2b90b88 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55d7d2b909f8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55d7d2b90a70 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55d7d2ba5138 <col:40, line:472:5>
|   |-ParenExpr 0x55d7d2ba4f50 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55d7d2ba4f20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba4c00 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba4bd0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba4b20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba4b08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba4ac8 <col:23> 'int' lvalue ParmVar 0x55d7d2b909f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba4ae8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba4bb0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba4b80 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba4b40 <col:33> 'int' lvalue ParmVar 0x55d7d2b909f8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55d7d2ba4b98 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55d7d2ba4b60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba4c60 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba4c40 <col:56> 'int' 0
|   |   `-CallExpr 0x55d7d2ba4e80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba4e68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba4e48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba4ec0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba4cd0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55d7d2ba4ed8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba4d00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba4ef0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba4d38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55d7d2ba4f08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba4e30 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba4e18 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba4dd8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55d7d2ba5118 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55d7d2ba50c0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55d7d2ba5090 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55d7d2ba5040 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55d7d2b99108
|     | |   `-CXXMemberCallExpr 0x55d7d2ba5020 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55d7d2ba4ff0 <col:2> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|     | |       `-CXXThisExpr 0x55d7d2ba4fe0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55d7d2ba50a8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55d7d2ba5070 <col:14> 'int' lvalue ParmVar 0x55d7d2b909f8 'i' 'int'
|     `-ImplicitCastExpr 0x55d7d2ba5100 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2ba50e0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55d7d2b90a70 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55d7d2b90d48 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55d7d2b90c50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55d7d2ba58b8 <col:36, line:485:5>
|   |-ParenExpr 0x55d7d2ba5620 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba55f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba52d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba52a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba51b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba5198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba5158 <col:23> 'int' lvalue ParmVar 0x55d7d2b90c50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba5178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba5280 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba5268 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba51d0 <col:33> 'int' lvalue ParmVar 0x55d7d2b90c50 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba5248 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba5230 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba51f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba5210 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba5330 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba5310 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba5550 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba5538 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba5518 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba5590 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba53a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d7d2ba55a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba53d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba55c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba5410 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55d7d2ba55d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba5500 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba54e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba54a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55d7d2ba58a8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55d7d2ba5890 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55d7d2ba5878 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d7d2ba5848 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55d7d2ba57e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d7d2ba57b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2ba5730 <col:61, col:70> 'char const[48]' lvalue ->c 0x55d7d2b98fe0
|             |   `-CXXMemberCallExpr 0x55d7d2ba5710 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d7d2ba56e0 <col:61> '<bound member function type>' ->xanno 0x55d7d2b8e128
|             |       `-CXXThisExpr 0x55d7d2ba56d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d7d2ba57d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2ba5760 <col:74> 'int' lvalue ParmVar 0x55d7d2b90c50 'i' 'int'
|-CXXMethodDecl 0x55d7d2b90f98 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55d7d2b90e08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d7d2b90e80 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55d7d2ba6008 <col:42, line:500:5>
|   |-ParenExpr 0x55d7d2ba5da0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba5d70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba5a50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba5a20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba5930 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba5918 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba58d8 <col:23> 'int' lvalue ParmVar 0x55d7d2b90e08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba58f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba5a00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba59e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba5950 <col:33> 'int' lvalue ParmVar 0x55d7d2b90e08 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba59c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba59b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba5970 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba5990 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba5ab0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba5a90 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba5cd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba5cb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba5c98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba5d10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba5b20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d7d2ba5d28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba5b58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba5d40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba5b90 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55d7d2ba5d58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba5c80 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba5c68 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba5c28 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55d7d2ba5fe8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55d7d2ba5f98 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d7d2ba5f68 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55d7d2ba5f10 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d7d2ba5ee0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d7d2ba5e90 <col:48, col:57> 'char [48]' lvalue ->c 0x55d7d2b98fe0
|     |     |   `-CXXMemberCallExpr 0x55d7d2ba5e70 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d7d2ba5e40 <col:48> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|     |     |       `-CXXThisExpr 0x55d7d2ba5e30 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d7d2ba5ef8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d7d2ba5ec0 <col:61> 'int' lvalue ParmVar 0x55d7d2b90e08 'i' 'int'
|     `-ImplicitCastExpr 0x55d7d2ba5fd0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2ba5fb0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55d7d2b90e80 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55d7d2b91158 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55d7d2b91060 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55d7d2ba6768 <col:35, line:513:5>
|   |-ParenExpr 0x55d7d2ba6478 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba6448 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba61a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba6170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba6080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba6068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba6028 <col:23> 'int' lvalue ParmVar 0x55d7d2b91060 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba6048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba6150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba6138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba60a0 <col:33> 'int' lvalue ParmVar 0x55d7d2b91060 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba6118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba6100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba60c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba60e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba6200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba61e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba63a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba6390 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba6370 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba63e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba6270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d7d2ba6400 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba62a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba6418 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba62e0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55d7d2ba6430 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba6358 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba6340 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba6300 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55d7d2ba6758 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55d7d2ba6740 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55d7d2ba6728 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d7d2ba66f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55d7d2ba6670 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d7d2ba6640 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2ba65f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55d7d2b98fe0
|             |   `-CXXMemberCallExpr 0x55d7d2ba65d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d7d2ba65a0 <col:60> '<bound member function type>' ->xanno 0x55d7d2b8e128
|             |       `-CXXThisExpr 0x55d7d2ba6590 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d7d2ba6658 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2ba6620 <col:73> 'int' lvalue ParmVar 0x55d7d2b91060 'i' 'int'
|-CXXMethodDecl 0x55d7d2b913a8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55d7d2b91218 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d7d2b91290 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55d7d2ba6e88 <col:41, line:528:5>
|   |-ParenExpr 0x55d7d2ba6c10 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba6be0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba6900 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba68d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba67e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba67c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba6788 <col:23> 'int' lvalue ParmVar 0x55d7d2b91218 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba67a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba68b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba6898 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba6800 <col:33> 'int' lvalue ParmVar 0x55d7d2b91218 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba6878 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba6860 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba6820 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba6840 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba6960 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba6940 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba6b40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba6b28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba6b08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba6b80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba69d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d7d2ba6b98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba6a08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba6bb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba6a40 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55d7d2ba6bc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba6af0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba6ad8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba6a98 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55d7d2ba6e68 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55d7d2ba6e18 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d7d2ba6de8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55d7d2ba6d90 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d7d2ba6d50 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d7d2ba6d00 <col:47, col:56> 'char [48]' lvalue ->c 0x55d7d2b98fe0
|     |     |   `-CXXMemberCallExpr 0x55d7d2ba6ce0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d7d2ba6cb0 <col:47> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|     |     |       `-CXXThisExpr 0x55d7d2ba6ca0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d7d2ba6d68 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d7d2ba6d30 <col:60> 'int' lvalue ParmVar 0x55d7d2b91218 'i' 'int'
|     `-ImplicitCastExpr 0x55d7d2ba6e50 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2ba6e30 <col:65> 'int16_t':'short' lvalue ParmVar 0x55d7d2b91290 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55d7d2b91568 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55d7d2b91470 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55d7d2ba7558 <col:36, line:541:5>
|   |-ParenExpr 0x55d7d2ba72f8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba72c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba7020 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba6ff0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba6f00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba6ee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba6ea8 <col:23> 'int' lvalue ParmVar 0x55d7d2b91470 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba6ec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba6fd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba6fb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba6f20 <col:33> 'int' lvalue ParmVar 0x55d7d2b91470 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba6f98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba6f80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba6f40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba6f60 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba7080 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba7060 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba7228 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba7210 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba71f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba7268 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba70f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55d7d2ba7280 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba7128 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba7298 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba7160 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55d7d2ba72b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba71d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba71c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba7180 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55d7d2ba7548 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55d7d2ba7530 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55d7d2ba7518 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d7d2ba74e8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55d7d2ba7490 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d7d2ba7460 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2ba7410 <col:61, col:70> 'char const[48]' lvalue ->c 0x55d7d2b98fe0
|             |   `-CXXMemberCallExpr 0x55d7d2ba73f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d7d2ba73c0 <col:61> '<bound member function type>' ->xanno 0x55d7d2b8e128
|             |       `-CXXThisExpr 0x55d7d2ba73b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d7d2ba7478 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2ba7440 <col:74> 'int' lvalue ParmVar 0x55d7d2b91470 'i' 'int'
|-CXXMethodDecl 0x55d7d2b91738 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55d7d2b91628 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55d7d2b916a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d7d2b917e8 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b91840 <col:30>
|-CXXMethodDecl 0x55d7d2b91978 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55d7d2b91880 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55d7d2ba7c28 <col:35, line:562:5>
|   |-ParenExpr 0x55d7d2ba79c8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba7998 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba76f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba76c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba75d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba75b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba7578 <col:23> 'int' lvalue ParmVar 0x55d7d2b91880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba7598 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba76a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba7688 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba75f0 <col:33> 'int' lvalue ParmVar 0x55d7d2b91880 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba7668 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba7650 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba7610 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba7630 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba7750 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba7730 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba78f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba78e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba78c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba7938 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba77c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55d7d2ba7950 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba77f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba7968 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba7830 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55d7d2ba7980 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba78a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba7890 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba7850 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55d7d2ba7c18 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55d7d2ba7c00 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55d7d2ba7be8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d7d2ba7bb8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55d7d2ba7b60 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d7d2ba7b30 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2ba7ae0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55d7d2b98fe0
|             |   `-CXXMemberCallExpr 0x55d7d2ba7ac0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d7d2ba7a90 <col:60> '<bound member function type>' ->xanno 0x55d7d2b8e128
|             |       `-CXXThisExpr 0x55d7d2ba7a80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d7d2ba7b48 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2ba7b10 <col:73> 'int' lvalue ParmVar 0x55d7d2b91880 'i' 'int'
|-CXXMethodDecl 0x55d7d2b91b88 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55d7d2b91a38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d7d2b91ab0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55d7d2ba8308 <col:41, line:577:5>
|   |-ParenExpr 0x55d7d2ba8098 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba8068 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba7dc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba7d90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba7ca0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba7c88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba7c48 <col:23> 'int' lvalue ParmVar 0x55d7d2b91a38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba7c68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba7d70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba7d58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba7cc0 <col:33> 'int' lvalue ParmVar 0x55d7d2b91a38 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba7d38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba7d20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba7ce0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba7d00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba7e20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba7e00 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba7fc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba7fb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba7f90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba8008 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba7e90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55d7d2ba8020 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba7ec8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba8038 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba7f00 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55d7d2ba8050 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba7f78 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba7f60 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba7f20 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55d7d2ba82e8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55d7d2ba8298 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d7d2ba8268 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55d7d2ba8208 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d7d2ba81d8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d7d2ba8188 <col:47, col:56> 'char [48]' lvalue ->c 0x55d7d2b98fe0
|     |     |   `-CXXMemberCallExpr 0x55d7d2ba8168 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d7d2ba8138 <col:47> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|     |     |       `-CXXThisExpr 0x55d7d2ba8128 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d7d2ba81f0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d7d2ba81b8 <col:60> 'int' lvalue ParmVar 0x55d7d2b91a38 'i' 'int'
|     `-ImplicitCastExpr 0x55d7d2ba82d0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2ba82b0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55d7d2b91ab0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55d7d2b91d48 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55d7d2b91c50 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55d7d2ba8a38 <col:36, line:591:5>
|   |-ParenExpr 0x55d7d2ba8778 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba8748 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba84a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba8470 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba8380 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba8368 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba8328 <col:23> 'int' lvalue ParmVar 0x55d7d2b91c50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba8348 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba8450 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba8438 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba83a0 <col:33> 'int' lvalue ParmVar 0x55d7d2b91c50 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba8418 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba8400 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba83c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba83e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba8500 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba84e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba86a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba8690 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba8670 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba86e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba8570 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55d7d2ba8700 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba85a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba8718 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba85e0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55d7d2ba8730 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba8658 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba8640 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba8600 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55d7d2ba8a28 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55d7d2ba8a10 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55d7d2ba89f8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d7d2ba89c8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55d7d2ba8940 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d7d2ba8910 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2ba88c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55d7d2b98fe0
|             |   `-CXXMemberCallExpr 0x55d7d2ba88a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d7d2ba8870 <col:61> '<bound member function type>' ->xanno 0x55d7d2b8e128
|             |       `-CXXThisExpr 0x55d7d2ba8860 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d7d2ba8928 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2ba88f0 <col:74> 'int' lvalue ParmVar 0x55d7d2b91c50 'i' 'int'
|-CXXMethodDecl 0x55d7d2b91f98 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55d7d2b91e08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d7d2b91e80 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55d7d2ba9118 <col:42, line:606:5>
|   |-ParenExpr 0x55d7d2ba8ea8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d7d2ba8e78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba8bd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba8ba0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba8ab0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba8a98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba8a58 <col:23> 'int' lvalue ParmVar 0x55d7d2b91e08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba8a78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba8b80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d7d2ba8b68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba8ad0 <col:33> 'int' lvalue ParmVar 0x55d7d2b91e08 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba8b48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba8b30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba8af0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d7d2ba8b10 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba8c30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba8c10 <col:60> 'int' 0
|   |   `-CallExpr 0x55d7d2ba8dd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba8dc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba8da0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba8e18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba8ca0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55d7d2ba8e30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba8cd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba8e48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba8d10 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55d7d2ba8e60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba8d88 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba8d70 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba8d30 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55d7d2ba90f8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55d7d2ba90a8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d7d2ba9078 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55d7d2ba9018 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d7d2ba8fe8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d7d2ba8f98 <col:48, col:57> 'char [48]' lvalue ->c 0x55d7d2b98fe0
|     |     |   `-CXXMemberCallExpr 0x55d7d2ba8f78 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d7d2ba8f48 <col:48> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|     |     |       `-CXXThisExpr 0x55d7d2ba8f38 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d7d2ba9000 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d7d2ba8fc8 <col:61> 'int' lvalue ParmVar 0x55d7d2b91e08 'i' 'int'
|     `-ImplicitCastExpr 0x55d7d2ba90e0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2ba90c0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55d7d2b91e80 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55d7d2b92130 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55d7d2b92060 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55d7d2ba9988 <col:33, line:620:5>
|   |-ParenExpr 0x55d7d2ba9700 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55d7d2ba96d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba9320 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba92f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba9190 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba9178 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba9138 <col:23> 'int' lvalue ParmVar 0x55d7d2b92060 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba9158 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba92d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55d7d2ba92b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba91b0 <col:33> 'int' lvalue ParmVar 0x55d7d2b92060 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba9298 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba9280 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba91d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55d7d2ba9258 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55d7d2ba9240 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55d7d2ba9208 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba9380 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba9360 <col:79> 'int' 0
|   |   `-CallExpr 0x55d7d2ba9630 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba9618 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba95f8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba9670 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba9468 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55d7d2ba9688 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba94b0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba96a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba94e8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55d7d2ba96b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba95e0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba95c8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba9588 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55d7d2ba9978 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55d7d2ba9960 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55d7d2ba9948 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d7d2ba9918 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55d7d2ba9890 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d7d2ba9860 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d7d2ba9810 <col:67, col:76> 'char const[48]' lvalue ->c 0x55d7d2b98fe0
|             |   `-CXXMemberCallExpr 0x55d7d2ba97f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d7d2ba97c0 <col:67> '<bound member function type>' ->xanno 0x55d7d2b8e128
|             |       `-CXXThisExpr 0x55d7d2ba97b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d7d2ba9878 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d7d2ba9840 <col:80> 'int' lvalue ParmVar 0x55d7d2b92060 'i' 'int'
|-CXXMethodDecl 0x55d7d2b92348 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55d7d2b921f0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d7d2b92270 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55d7d2baa1b0 <col:45, line:635:5>
|   |-ParenExpr 0x55d7d2ba9ef8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55d7d2ba9ec8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55d7d2ba9b90 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d7d2ba9b60 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d7d2ba9a00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d7d2ba99e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d7d2ba99a8 <col:23> 'int' lvalue ParmVar 0x55d7d2b921f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d7d2ba99c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d7d2ba9b40 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55d7d2ba9b28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d7d2ba9a20 <col:33> 'int' lvalue ParmVar 0x55d7d2b921f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55d7d2ba9b08 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d7d2ba9af0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d7d2ba9a40 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d7d2b8e510 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55d7d2ba9ac8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55d7d2ba9ab0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55d7d2ba9a78 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55d7d2ba9bf0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d7d2ba9bd0 <col:79> 'int' 0
|   |   `-CallExpr 0x55d7d2ba9e28 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55d7d2ba9e10 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2ba9df0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d7d2ba9e68 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba9c60 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55d7d2ba9e80 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d7d2ba9ca8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d7d2ba9e98 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d7d2ba9ce0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55d7d2ba9eb0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d7d2ba9dd8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d7d2ba9dc0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d7d2ba9d78 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55d7d2baa190 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55d7d2baa0f8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d7d2baa0c8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55d7d2baa068 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d7d2baa038 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d7d2ba9fe8 <col:54, col:63> 'char [48]' lvalue ->c 0x55d7d2b98fe0
|     |     |   `-CXXMemberCallExpr 0x55d7d2ba9fc8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d7d2ba9f98 <col:54> '<bound member function type>' ->xanno 0x55d7d2b8e2c8
|     |     |       `-CXXThisExpr 0x55d7d2ba9f88 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d7d2baa050 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d7d2baa018 <col:67> 'int' lvalue ParmVar 0x55d7d2b921f0 'i' 'int'
|     `-CXXConstCastExpr 0x55d7d2baa160 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55d7d2baa148 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55d7d2baa110 <col:91> 'const void *' lvalue ParmVar 0x55d7d2b92270 'x' 'const void *'
|-CXXMethodDecl 0x55d7d2b92418 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55d7d2baa238 <col:34, line:640:5>
|   `-ReturnStmt 0x55d7d2baa228 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2baa210 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2baa1e0 <col:16> 'Packet *' lvalue ->_data_packet 0x55d7d2b99b98
|         `-CXXThisExpr 0x55d7d2baa1d0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55d7d2b92558 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55d7d2b924c8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2ba32f8 <col:46> 'bool' true
|-CXXMethodDecl 0x55d7d2b926d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55d7d2b92610 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55d7d2b92780 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55d7d2b92f30 <line:660:22> "" ""
| |-EnumConstantDecl 0x55d7d2b92880 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b92fa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92860 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55d7d2b92840 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55d7d2b879e0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55d7d2b92910 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b92fb8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b928f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55d7d2b928d0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55d7d2b87a70 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55d7d2b929a0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b92fd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92980 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2b92960 <col:21> 'int' 0
| |-EnumConstantDecl 0x55d7d2b92a30 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b92fe8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92a10 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55d7d2b929f0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55d7d2b92ac0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b93000 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92aa0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55d7d2b92a80 <col:21> 'int' 16
| |-EnumConstantDecl 0x55d7d2b92b50 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b93018 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92b30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55d7d2b92b10 <col:19> 'int' 32
| |-EnumConstantDecl 0x55d7d2b92be0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b93030 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92bc0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55d7d2b92ba0 <col:19> 'int' EnumConstant 0x55d7d2b92a30 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55d7d2b92c70 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b93048 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92c50 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55d7d2b92c30 <col:19> 'int' EnumConstant 0x55d7d2b92b50 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55d7d2b92d40 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b93060 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92d20 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55d7d2b92d00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55d7d2b92cc0 <col:23> 'int' EnumConstant 0x55d7d2b92c70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55d7d2b92ce0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55d7d2b92e10 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d7d2b93078 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b92df0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55d7d2b92dd0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55d7d2b92d90 <col:23> 'int' EnumConstant 0x55d7d2b92c70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55d7d2b92db0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55d7d2b92ee0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55d7d2b93090 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b92ec0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55d7d2b92ea0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55d7d2b92e60 <col:23> 'int' EnumConstant 0x55d7d2b92c70 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55d7d2b92e80 <col:40> 'int' 8
|-CXXMethodDecl 0x55d7d2b930d0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55d7d2b93170 <col:68> "" ""
|-CXXMethodDecl 0x55d7d2b93208 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55d7d2b932a8 <col:45> "" ""
|-CXXMethodDecl 0x55d7d2b93340 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55d7d2b933e0 <col:57> "" ""
|-CXXMethodDecl 0x55d7d2b93478 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55d7d2b93518 <col:45> "" ""
|-CXXMethodDecl 0x55d7d2b935b0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55d7d2b93650 <col:57> "" ""
|-CXXMethodDecl 0x55d7d2b936e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55d7d2b93780 <col:51> "" ""
|-CXXMethodDecl 0x55d7d2b93810 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55d7d2b938b0 <col:63> "" ""
|-CXXMethodDecl 0x55d7d2b93940 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55d7d2b939e0 <col:53> "" ""
|-CXXMethodDecl 0x55d7d2b93a70 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55d7d2b93b10 <col:65> "" ""
|-CXXMethodDecl 0x55d7d2b93c28 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b93b98 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55d7d2b93cd0 <col:61> "" ""
|-CXXMethodDecl 0x55d7d2b93e68 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55d7d2b93d58 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55d7d2b93dd0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55d7d2b93f18 <col:67> "" ""
|-CXXMethodDecl 0x55d7d2b94030 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b93fa0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55d7d2b940d8 <col:63> "" ""
|-CXXMethodDecl 0x55d7d2b94270 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55d7d2b94160 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d7d2b941d8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55d7d2b94320 <col:69> "" ""
|-CXXMethodDecl 0x55d7d2b94438 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b943a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55d7d2b944e0 <col:63> "" ""
|-CXXMethodDecl 0x55d7d2b96bb8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b96aa8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d7d2b96b20 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2b96c68 <col:69> "" ""
|-CXXMethodDecl 0x55d7d2b96d80 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b96cf0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55d7d2b96e28 <col:62> "" ""
|-CXXMethodDecl 0x55d7d2b96fc0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55d7d2b96eb0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d7d2b96f28 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55d7d2b97070 <col:68> "" ""
|-CXXMethodDecl 0x55d7d2b97188 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b970f8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55d7d2b97230 <col:63> "" ""
|-CXXMethodDecl 0x55d7d2b973c8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55d7d2b972b8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d7d2b97330 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55d7d2b97478 <col:69> "" ""
|-CXXMethodDecl 0x55d7d2b97508 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55d7d2b975a8 <col:64> "" ""
|-CXXMethodDecl 0x55d7d2b97638 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55d7d2b976d8 <col:52> "" ""
|-CXXMethodDecl 0x55d7d2b97768 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55d7d2b97808 <col:67> "" ""
|-CXXMethodDecl 0x55d7d2b97898 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55d7d2b97938 <col:55> "" ""
|-CXXMethodDecl 0x55d7d2b97a50 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b979c0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55d7d2b97af8 <col:58> "" ""
|-CXXMethodDecl 0x55d7d2b97c90 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55d7d2b97b80 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d7d2b97bf8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55d7d2b97d40 <col:62> "" ""
|-CXXMethodDecl 0x55d7d2b97e58 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b97dc8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55d7d2b97f00 <col:58> "" ""
|-CXXMethodDecl 0x55d7d2b98098 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55d7d2b97f88 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d7d2b98000 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55d7d2b98148 <col:62> "" ""
|-CXXMethodDecl 0x55d7d2b98260 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b981d0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55d7d2b98308 <col:60> "" ""
|-CXXMethodDecl 0x55d7d2b984a0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55d7d2b98390 <col:34> col:37 'int'
| |-ParmVarDecl 0x55d7d2b98408 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55d7d2b98550 <col:64> "" ""
|-CXXMethodDecl 0x55d7d2b98668 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b985d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55d7d2b98710 <col:58> "" ""
|-CXXMethodDecl 0x55d7d2b988a8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55d7d2b98798 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d7d2b98810 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55d7d2b98958 <col:62> "" ""
|-CXXMethodDecl 0x55d7d2b98a70 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55d7d2b989e0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55d7d2b98b18 <col:59> "" ""
|-CXXMethodDecl 0x55d7d2b98cb0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b98ba0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d7d2b98c18 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2b98d60 <col:63> "" ""
|-AccessSpecDecl 0x55d7d2b98dd0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d2b98df8 prev 0x55d7d2b8e000 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2b98ef0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55d7d2b98fe0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55d7d2b99108 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55d7d2b99288 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55d7d2b99408 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55d7d2b99588 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55d7d2baa3b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55d7d2baac28 <col:11>
| |-CXXDestructorDecl 0x55d7d2baa490 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55d7d2baa5c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55d7d2baa5c8
| | `-ParmVarDecl 0x55d7d2baa6d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55d7d2baa778 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d7d2baa778
| | `-ParmVarDecl 0x55d7d2baa888 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55d7d2bad648 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d2bad758 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55d7d2bad9d8 <col:11>
| |   `-ReturnStmt 0x55d7d2bad9c8 <col:11>
| |     `-UnaryOperator 0x55d7d2bad9b0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55d7d2bad9a0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55d7d2bad7c8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d7d2bad7c8
|   `-ParmVarDecl 0x55d7d2bad8d8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55d7d2b995f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2b99708 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55d7d2b997a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55d7d2b99810 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55d7d2b99878 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55d7d2b998e0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55d7d2b99940 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55d7d2b99a00 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55d7d2b99a60 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55d7d2b99ac0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55d7d2baa2c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55d7d2b997a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55d7d2baac38 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55d7d2baac90 <col:12>
| |-CXXConstructorDecl 0x55d7d2baa8f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55d7d2baa8f8
| | `-ParmVarDecl 0x55d7d2baaa08 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55d7d2baaaa8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55d7d2baaaa8
| | `-ParmVarDecl 0x55d7d2baabb8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55d7d2bacd30 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55d7d2b99b38 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55d7d2b99b98 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55d7d2b99c00 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55d7d2b99c68 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55d7d2b99cd0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55d7d2b99d38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55d7d2b99d98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55d7d2b99df8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55d7d2b99e60 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55d7d2b99ee8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55d7d2b99b38 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55d7d2baa260 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55d7d2b99d98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55d7d2baaca0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55d7d2baad00 <col:21, line:755:5>
|-CXXConstructorDecl 0x55d7d2b9a088 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55d7d2b99fc8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55d7d2b9a180 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55d7d2b9a368 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55d7d2b9a270 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55d7d2b9a638 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55d7d2b9a420 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d7d2b9a498 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d7d2b9a510 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b9a858 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55d7d2b9a708 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55d7d2b9a780 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55d7d2ba2e38 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55d7d2b9a918 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55d7d2b9a990 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55d7d2b9aa08 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55d7d2ba2f90 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55d7d2ba2f00 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2ba30d8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55d7d2ba3048 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55d7d2ba31d0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2a76c18 prev 0x55d7d2b87450 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2a76d10 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55d7d2a76db0 <line:25:5, col:14> col:14 referenced th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a76e10 <line:26:5, col:14> col:14 referenced th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a76e90 <line:27:5, col:15> col:15 referenced th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55d7d2a76ef0 <line:28:5, col:15> col:15 referenced th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55d7d2a76f98 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55d7d2a76f78 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55d7d2a76f40 <col:26> 'int' 4
|-FieldDecl 0x55d7d2a77040 <line:31:5, col:23> col:14 referenced th_off 'unsigned int'
| `-ConstantExpr 0x55d7d2a77020 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55d7d2a76fe8 <col:23> 'int' 4
|-FieldDecl 0x55d7d2a770a0 <line:39:5, col:13> col:13 referenced th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a77100 <line:48:5, col:14> col:14 referenced th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a77160 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55d7d2a771c0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2a77228 prev 0x55d7d2b87500 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2a77320 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x55d7d2a773c0 <line:12:5, col:14> col:14 referenced uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a77420 <line:13:5, col:14> col:14 referenced uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a77480 <line:14:5, col:14> col:14 referenced uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x55d7d2a774e0 <line:15:5, col:14> col:14 uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint32_t padding
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2a75118 prev 0x55d7d2b872f0 <../dummy_inc/clicknet/icmp.h:17:1, line:23:1> line:17:8 referenced struct click_icmp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2a75210 <col:1, col:8> col:8 implicit struct click_icmp
|-FieldDecl 0x55d7d2a752b0 <line:18:5, col:13> col:13 referenced icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a75310 <line:19:5, col:13> col:13 referenced icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a75370 <line:20:5, col:14> col:14 icmp_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x55d7d2a753d0 <line:21:5, col:14> col:14 padding 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp_sequenced
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint16_t icmp_identifier
         6 |   uint16_t icmp_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2a75438 <../dummy_inc/clicknet/icmp.h:27:1, line:33:1> line:27:8 referenced struct click_icmp_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2a75558 <col:1, col:8> col:8 implicit struct click_icmp_sequenced
|-FieldDecl 0x55d7d2a755f8 <line:28:5, col:13> col:13 icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a75658 <line:29:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a756b8 <line:30:5, col:14> col:14 icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a75718 <line:31:5, col:14> col:14 referenced icmp_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x55d7d2a75778 <line:32:5, col:14> col:14 referenced icmp_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp_needfrag
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint16_t padding
         6 |   uint16_t icmp_nextmtu
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2a76460 <../dummy_inc/clicknet/icmp.h:67:1, line:74:1> line:67:8 referenced struct click_icmp_needfrag definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2a76578 <col:1, col:8> col:8 implicit struct click_icmp_needfrag
|-FieldDecl 0x55d7d2a76618 <line:68:5, col:13> col:13 icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a76678 <line:69:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2a766d8 <line:70:5, col:14> col:14 icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x55d7d2a76738 <line:71:5, col:14> col:14 padding 'uint16_t':'unsigned short'
`-FieldDecl 0x55d7d2a76798 <line:72:5, col:14> col:14 referenced icmp_nextmtu 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_needfrag = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp_needfrag = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2b59090 prev 0x55d7d2b4fed0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2b59188 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55d7d2b59228 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55d7d2b5fff0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d2b603d8 <col:11>
|-CXXConstructorDecl 0x55d7d2b600d0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2b601b8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55d7d2b60b20 <col:11>
|-CXXConstructorDecl 0x55d7d2b60258 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2b60368 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55d7d2b62378 <col:11>
|-CXXDestructorDecl 0x55d7d2b61688 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55d7d2868238 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2868348 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55d7d2868c10 <col:11>
|   `-ReturnStmt 0x55d7d2868c00 <col:11>
|     `-UnaryOperator 0x55d7d2868be8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2868bd8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55d7d28683b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55d7d28684c8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55d7d2cd4cd0 <col:11>
    `-ReturnStmt 0x55d7d2cd4cc0 <col:11>
      `-UnaryOperator 0x55d7d2cd4ca8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55d7d2cd4c98 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2b4f088 prev 0x55d7d2b4ed98 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2b4f180 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55d7d2b4f210 <col:19, col:25> col:19 public
|-TypedefDecl 0x55d7d2b4f248 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55d7d27b4410 'int32_t' sugar
|   |-Typedef 0x55d7d26c3328 'int32_t'
|   `-TypedefType 0x55d7d269c510 '__int32_t' sugar
|     |-Typedef 0x55d7d269c128 '__int32_t'
|     `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2b4f2b0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55d7d27b45d0 'int64_t' sugar
|   |-Typedef 0x55d7d26c3390 'int64_t'
|   `-TypedefType 0x55d7d269c630 '__int64_t' sugar
|     |-Typedef 0x55d7d269c208 '__int64_t'
|     `-BuiltinType 0x55d7d265a5a0 'long'
|-EnumDecl 0x55d7d2b4f308 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55d7d2b4f480 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55d7d2b4f460 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55d7d2b4f438 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55d7d2b4f420 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55d7d2b4f3f0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55d7d2b4f578 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55d7d2b4f558 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55d7d2b4f530 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55d7d2b4f518 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55d7d2b4f4f0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55d7d2b4f4d0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55d7d2b4f5c8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55d7d2b4f6d0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fc20 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4f6b0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55d7d2b4f690 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55d7d2b4f760 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fc38 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4f740 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55d7d2b4f720 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55d7d2b4f7f0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fc50 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4f7d0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55d7d2b4f7b0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55d7d2b4f880 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fc68 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4f860 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55d7d2b4f840 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55d7d2b4f910 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fc80 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4f8f0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55d7d2b4f8d0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55d7d2b4f9a0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fc98 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4f980 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55d7d2b4f960 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55d7d2b4fa30 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fcb0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4fa10 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55d7d2b4f9f0 <col:26> 'int' EnumConstant 0x55d7d2b4f6d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55d7d2b4fb00 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55d7d2b4fcc8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b4fae0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55d7d2b4fac0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55d7d2b4fa80 <col:27> 'int' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55d7d2b4faa0 <col:44> 'int' EnumConstant 0x55d7d2b4f9a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55d7d2b4fbd0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55d7d2b4fce0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b4fbb0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55d7d2b4fb90 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55d7d2b4fb50 <col:27> 'int' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55d7d2b4fb70 <col:44> 'int' EnumConstant 0x55d7d2b4f880 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55d7d2b4fcf8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55d7d2b4fe00 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55d7d2b4fe50 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b4fde0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55d7d2b4fdc0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55d7d2b4fe78 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55d7d27b4040 'uninitialized_type'
|   `-CXXRecord 0x55d7d27b3fa8 'uninitialized_type'
|-CXXRecordDecl 0x55d7d2b4fed0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55d7d2b4ffe0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b603e8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d2b60508 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55d7d2b604c0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55d7d2b60450 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b60440 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55d7d2b60480 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55d7d2b604f0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55d7d2b604a0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55d7d2b50228 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b500a0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55d7d2b50118 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55d7d2b5bd20 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d2b5bd00 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b60520 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d2b60670 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55d7d2b605f8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55d7d2b60588 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b60578 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55d7d2b60640 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55d7d2b60628 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55d7d2b605b8 <col:16> 'long' lvalue ParmVar 0x55d7d2b500a0 'sec' 'long'
|     `-ImplicitCastExpr 0x55d7d2b60658 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2b605d8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b50118 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d2b50488 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b502f8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55d7d2b50370 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55d7d2b5bd58 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d2b5bd38 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b60688 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d2b607c0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55d7d2b60760 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55d7d2b606f0 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b606e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55d7d2b60790 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d2b60720 <col:16> 'int' lvalue ParmVar 0x55d7d2b502f8 'sec' 'int'
|     `-ImplicitCastExpr 0x55d7d2b607a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2b60740 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b50370 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d2b506e8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b50558 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55d7d2b505d0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55d7d2b5bd90 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d2b5bd70 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b607d8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d2b60928 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55d7d2b608b0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55d7d2b60840 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b60830 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55d7d2b608f8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55d7d2b608e0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55d7d2b60870 <col:16> 'unsigned long' lvalue ParmVar 0x55d7d2b50558 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55d7d2b60910 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2b60890 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b505d0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d2b51880 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b507b8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55d7d2b50830 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55d7d2b5bdc8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d2b5bda8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b60940 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d2b60a90 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55d7d2b60a18 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55d7d2b609a8 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b60998 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55d7d2b60a60 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55d7d2b60a48 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55d7d2b609d8 <col:16> 'unsigned int' lvalue ParmVar 0x55d7d2b507b8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55d7d2b60a78 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2b609f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b50830 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d2b519e0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55d7d2b51950 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55d7d2b51b78 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55d7d2b51ab8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55d7d2b51da8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55d7d2b51cb0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55d7d2b51f58 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55d7d2b51e98 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b60b30 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55d7d2b60aa8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55d7d2b51e98 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55d7d2b60b90 <col:19, line:214:5>
|-CXXConstructorDecl 0x55d7d2b52128 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55d7d2b52068 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b60ba0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d7d2b60c50 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55d7d2b60c28 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55d7d2b60bf8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55d7d2b52068 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55d7d2b52318 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55d7d2b52290 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55d7d2b4ee30 'Timestamp'
|   | `-CXXRecord 0x55d7d2b4f088 'Timestamp'
|   `-ParenType 0x55d7d2b52230 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55d7d2b52200 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55d7d2b4f3d0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55d7d2b4f248 'seconds_type'
|         `-TypedefType 0x55d7d27b4410 'int32_t' sugar
|           |-Typedef 0x55d7d26c3328 'int32_t'
|           `-TypedefType 0x55d7d269c510 '__int32_t' sugar
|             |-Typedef 0x55d7d269c128 '__int32_t'
|             `-BuiltinType 0x55d7d265a580 'int'
|-CXXConversionDecl 0x55d7d2b52458 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55d7d2b52528 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55d7d2b60d58 <col:37, line:231:5>
|   `-ReturnStmt 0x55d7d2b60d48 <line:227:9, col:23>
|     `-BinaryOperator 0x55d7d2b60d28 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55d7d2b60cf8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2b60ca8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55d7d2b59228
|       |   `-MemberExpr 0x55d7d2b60c78 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
|       |     `-CXXThisExpr 0x55d7d2b60c68 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55d7d2b60d10 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55d7d2b60cd8 <col:23> 'int' 0
|-CXXMethodDecl 0x55d7d2b525e8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55d7d2b526a8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b52768 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b52828 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b528e8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55d7d2b52a58 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55d7d2b52998 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55d7d2b52ba0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55d7d2b52b10 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b52c68 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55d7d2b52d08 <col:54> "" ""
|-CXXMethodDecl 0x55d7d2b52d98 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55d7d2b52e38 <col:54> "" ""
|-CXXMethodDecl 0x55d7d2b52ec8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55d7d2b52f68 <col:54> "" ""
|-CXXMethodDecl 0x55d7d2b53068 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55d7d2b53138 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55d7d2b53268 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55d7d2b53360 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55d7d2b53498 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55d7d2b60f70 <col:39, line:271:5>
|   `-ReturnStmt 0x55d7d2b60f60 <line:267:9, col:61>
|     `-CallExpr 0x55d7d2b60f00 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55d7d2b60ee8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2b60d70 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55d7d2b5a508 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55d7d2b60f30 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2b60dd0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55d7d2b59228
|       |   `-MemberExpr 0x55d7d2b60da0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
|       |     `-CXXThisExpr 0x55d7d2b60d90 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55d7d2b60f48 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55d7d2b60e70 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55d7d2b60e40 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55d7d2b60e00 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55d7d2b60e58 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55d7d2b60e20 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f9a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b53558 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55d7d2b61130 <col:39, line:279:5>
|   `-ReturnStmt 0x55d7d2b61120 <line:275:9, col:61>
|     `-CallExpr 0x55d7d2b610c0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55d7d2b610a8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2b60f88 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55d7d2b5a508 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55d7d2b610f0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2b60fe8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55d7d2b59228
|       |   `-MemberExpr 0x55d7d2b60fb8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
|       |     `-CXXThisExpr 0x55d7d2b60fa8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55d7d2b61108 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55d7d2b61088 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55d7d2b61058 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55d7d2b61018 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55d7d2b61070 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55d7d2b61038 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f880 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b53618 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55d7d2b612c8 <col:39, line:287:5>
|   `-ReturnStmt 0x55d7d2b612b8 <line:283:9, col:53>
|     `-BinaryOperator 0x55d7d2b61298 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55d7d2b61268 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2b61188 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55d7d2b59228
|       |   `-MemberExpr 0x55d7d2b61158 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
|       |     `-CXXThisExpr 0x55d7d2b61148 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55d7d2b61280 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55d7d2b61248 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55d7d2b61228 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b611f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b611b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f6d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b61210 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b611d8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b53708 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55d7d2b62560 <col:40, line:293:5>
|   |-DeclStmt 0x55d7d2b61410 <line:291:9, col:48>
|   | `-VarDecl 0x55d7d2b612f0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55d7d2b613f0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55d7d2b61398 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55d7d2b61368 <col:22> '<bound member function type>' ->subsec 0x55d7d2b526a8
|   |     |   `-CXXThisExpr 0x55d7d2b61358 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55d7d2b613d8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55d7d2b613b8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fb00 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55d7d2b62550 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55d7d2b62538 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b62508 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b624f0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55d7d2b624d0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55d7d2b624a0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55d7d2b62238 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55d7d2b62220 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55d7d2b61428 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55d7d2b612f0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55d7d2b62440 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55d7d2b62428 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55d7d2b623f8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55d7d2b62250 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55d7d2b621c0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55d7d2b621a8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55d7d2b62158 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55d7d2b4efd8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55d7d2b620f8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55d7d2b61458 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55d7d2b61448 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55d7d2b62140 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55d7d2b62128 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55d7d2b61918 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55d7d2b61480 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55d7d2b61510 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55d7d2b614e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55d7d2b614a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fb00 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55d7d2b614f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55d7d2b614c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55d7d2b612f0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55d7d2b62470 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55d7d2b62208 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55d7d2b621f8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55d7d2b537c8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55d7d2b62ab8 <col:40, line:302:5>
|   |-DeclStmt 0x55d7d2b626b0 <line:297:9, col:48>
|   | `-VarDecl 0x55d7d2b62590 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55d7d2b62690 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55d7d2b62638 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55d7d2b62608 <col:22> '<bound member function type>' ->subsec 0x55d7d2b526a8
|   |     |   `-CXXThisExpr 0x55d7d2b625f8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55d7d2b62678 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55d7d2b62658 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fbd0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55d7d2b62aa8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55d7d2b62a90 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b62a60 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b62a48 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55d7d2b62a28 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55d7d2b629f8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55d7d2b62920 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55d7d2b62908 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55d7d2b626c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55d7d2b62590 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55d7d2b62998 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55d7d2b62980 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55d7d2b62950 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55d7d2b62938 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55d7d2b628a8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55d7d2b62890 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55d7d2b62870 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55d7d2b4efd8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55d7d2b62810 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55d7d2b626f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55d7d2b626e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55d7d2b62858 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55d7d2b62840 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55d7d2b627d0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55d7d2b62720 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55d7d2b627b0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55d7d2b62780 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55d7d2b62740 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fbd0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55d7d2b62798 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55d7d2b62760 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55d7d2b62590 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55d7d2b629c8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55d7d2b628f0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55d7d2b628e0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55d7d2b53888 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55d7d2b62b40 <col:40, line:306:5>
|   `-ReturnStmt 0x55d7d2b62b30 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55d7d2b62b00 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55d7d2b62ae8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2b62ad8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55d7d2b53a28 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55d7d2b53938 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b53bf8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55d7d2b53b00 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55d7d2b53ce8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55d7d2b53e58 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55d7d2b53d98 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55d7d2b62c88 <col:56, line:320:5>
|   `-ReturnStmt 0x55d7d2b62c78 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55d7d2b62c60 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b62c30 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b62c18 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55d7d2b62bd8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55d7d2b62ba8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55d7d2b62b68 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b53d98 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55d7d2b62bc0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55d7d2b62b88 <col:31> 'int' 0
|-CXXMethodDecl 0x55d7d2b54098 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b53f10 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b53f88 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b62e58 <col:72, line:326:5>
|   `-ReturnStmt 0x55d7d2b62e48 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55d7d2b62e30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b62e00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b62de8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55d7d2b62da8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55d7d2b62d90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55d7d2b62cb0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b53f10 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55d7d2b62d50 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55d7d2b62d38 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55d7d2b62cd0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55d7d2b58980 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55d7d2b62d78 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2b62cf0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b53f88 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b54248 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55d7d2b54158 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55d7d2b63520 <col:56, line:337:5>
|   |-DeclStmt 0x55d7d2b63158 <line:329:9, col:51>
|   | `-VarDecl 0x55d7d2b62e80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55d7d2b63140 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55d7d2b63110 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55d7d2b630f8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55d7d2b630e0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55d7d2b630b0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55d7d2b63098 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55d7d2b63080 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55d7d2b62f70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55d7d2b63310 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55d7d2b631c0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55d7d2b59228
|   | | `-MemberExpr 0x55d7d2b63190 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55d7d2b5a1d8
|   | |   `-DeclRefExpr 0x55d7d2b63170 <col:9> 'Timestamp' lvalue Var 0x55d7d2b62e80 't' 'Timestamp'
|   | `-BinaryOperator 0x55d7d2b632f0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55d7d2b632c0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d7d2b631f0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55d7d2b54158 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55d7d2b632d8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55d7d2b632a0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55d7d2b63280 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55d7d2b63250 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55d7d2b63210 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55d7d2b63268 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55d7d2b63230 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f9a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55d7d2b63508 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55d7d2b634d8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55d7d2b634c0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55d7d2b634a0 <col:16> 'Timestamp' lvalue Var 0x55d7d2b62e80 't' 'Timestamp'
|-CXXMethodDecl 0x55d7d2b54410 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b54300 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b54378 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b636d8 <col:72, line:343:5>
|   `-ReturnStmt 0x55d7d2b636c8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55d7d2b636b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b63680 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b63668 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55d7d2b63628 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55d7d2b63610 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55d7d2b63558 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b54300 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55d7d2b635d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55d7d2b635b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55d7d2b63578 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55d7d2b58ac8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55d7d2b635f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2b63598 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b54378 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b54560 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55d7d2b544d0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55d7d2b63b20 <col:56, line:354:5>
|   |-DeclStmt 0x55d7d2b638c8 <line:346:9, col:51>
|   | `-VarDecl 0x55d7d2b63700 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55d7d2b638b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55d7d2b63880 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55d7d2b63868 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55d7d2b63850 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55d7d2b63820 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55d7d2b63808 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55d7d2b637f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55d7d2b637c0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55d7d2b63a80 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55d7d2b63930 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55d7d2b59228
|   | | `-MemberExpr 0x55d7d2b63900 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55d7d2b5a1d8
|   | |   `-DeclRefExpr 0x55d7d2b638e0 <col:9> 'Timestamp' lvalue Var 0x55d7d2b63700 't' 'Timestamp'
|   | `-BinaryOperator 0x55d7d2b63a60 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55d7d2b63a30 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d7d2b63960 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55d7d2b544d0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55d7d2b63a48 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55d7d2b63a10 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55d7d2b639f0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55d7d2b639c0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55d7d2b63980 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55d7d2b639d8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55d7d2b639a0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f880 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55d7d2b63b08 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55d7d2b63ad8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55d7d2b63ac0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55d7d2b63aa0 <col:16> 'Timestamp' lvalue Var 0x55d7d2b63700 't' 'Timestamp'
|-CXXMethodDecl 0x55d7d2b54728 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b54618 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b54690 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b63cd8 <col:72, line:360:5>
|   `-ReturnStmt 0x55d7d2b63cc8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55d7d2b63cb0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b63c80 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b63c68 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55d7d2b63c28 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55d7d2b63c10 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55d7d2b63b58 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b54618 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55d7d2b63bd0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55d7d2b63bb8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55d7d2b63b78 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55d7d2b58c10 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55d7d2b63bf8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2b63b98 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b54690 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b54878 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55d7d2b547e8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55d7d2b70648 <col:56, line:371:5>
|   |-DeclStmt 0x55d7d2b63ec8 <line:363:9, col:51>
|   | `-VarDecl 0x55d7d2b63d00 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55d7d2b63eb0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55d7d2b63e80 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55d7d2b63e68 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55d7d2b63e50 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55d7d2b63e20 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55d7d2b63e08 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55d7d2b63df0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55d7d2b63dc0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55d7d2b705a8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55d7d2b63f30 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55d7d2b59228
|   | | `-MemberExpr 0x55d7d2b63f00 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55d7d2b5a1d8
|   | |   `-DeclRefExpr 0x55d7d2b63ee0 <col:9> 'Timestamp' lvalue Var 0x55d7d2b63d00 't' 'Timestamp'
|   | `-CallExpr 0x55d7d2b70548 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55d7d2b70530 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55d7d2b63f60 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55d7d2b5a508 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55d7d2b70578 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d7d2b63f80 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55d7d2b547e8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55d7d2b70590 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55d7d2b70510 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55d7d2b704e0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55d7d2b63fa0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f6d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55d7d2b704f8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55d7d2b63fc0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55d7d2b70630 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55d7d2b70600 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55d7d2b705e8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55d7d2b705c8 <col:16> 'Timestamp' lvalue Var 0x55d7d2b63d00 't' 'Timestamp'
|-CXXMethodDecl 0x55d7d2b54968 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55d7d2b70788 <col:39, line:377:5>
|   `-ReturnStmt 0x55d7d2b70778 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55d7d2b70760 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2b70730 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2b70718 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55d7d2b706d8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55d7d2b70680 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55d7d2b706c0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55d7d2b706a0 <col:29> 'int' 1
|-CXXMethodDecl 0x55d7d2b54a28 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55d7d2b70868 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55d7d2b70820 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55d7d2b707b0 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b707a0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55d7d2b707e0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55d7d2b70850 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55d7d2b70800 <col:19> 'int' 0
|-CXXMethodDecl 0x55d7d2b54c28 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b54ad8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b54b50 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55d7d2b5be00 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d2b5bde0 <col:60> 'int' 0
| `-CompoundStmt 0x55d7d2b70a60 <col:63, line:395:5>
|   `-BinaryOperator 0x55d7d2b70a40 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55d7d2b708c0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55d7d2b59228
|     | `-MemberExpr 0x55d7d2b70890 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
|     |   `-CXXThisExpr 0x55d7d2b70880 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55d7d2b70a20 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55d7d2b709b0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55d7d2b70950 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55d7d2b70938 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55d7d2b70920 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55d7d2b708f0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b54ad8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55d7d2b70998 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55d7d2b70978 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55d7d2b70a08 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55d7d2b709f0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55d7d2b709d0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b54b50 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b54df8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b54ce8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b54d60 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b70bb8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55d7d2b70b70 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55d7d2b70a88 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b70a78 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55d7d2b70ba0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d2b70ab8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b54ce8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55d7d2b70b30 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55d7d2b70b18 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2b70ad8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55d7d2b58ac8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55d7d2b70b58 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d7d2b70af8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b54d60 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b54fc8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b54eb8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b54f30 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b70d10 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55d7d2b70cc8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55d7d2b70be0 <col:9> '<bound member function type>' ->assign 0x55d7d2b54c28
|     | `-CXXThisExpr 0x55d7d2b70bd0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55d7d2b70cf8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55d7d2b70c10 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55d7d2b54eb8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55d7d2b70c88 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55d7d2b70c70 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2b70c30 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55d7d2b58c10 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55d7d2b70cb0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d7d2b70c50 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b54f30 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b55198 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b55088 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b55100 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55d7d2b5be38 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55d7d2b5be18 <col:57> 'int' 0
| `-DeprecatedAttr 0x55d7d2b55248 <col:75> "" ""
|-CXXMethodDecl 0x55d7d2b553d8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b552c8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b55340 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2b55488 <col:74> "" ""
|-CXXMethodDecl 0x55d7d2b55618 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55d7d2b55508 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55d7d2b55580 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2b556c8 <col:74> "" ""
|-CXXMethodDecl 0x55d7d2b55758 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55d7d2b557f8 <col:42> "" ""
|-CXXMethodDecl 0x55d7d2b58030 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55d7d2b57f10 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55d7d2b57f90 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55d7d2b58100 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55d7d2b581c0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55d7d2b58260 <col:20>
| `-OptimizeNoneAttr 0x55d7d2b582b8 <col:30>
|-CXXMethodDecl 0x55d7d2b58300 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55d7d2b583c0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55d7d2b58480 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55d7d2b58540 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55d7d2b58600 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55d7d2b586c0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55d7d2b58780 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55d7d2b58840 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55d7d2b58980 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b588f0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b70e58 <col:58, line:512:5>
|   `-ReturnStmt 0x55d7d2b70e48 <line:511:9, col:53>
|     `-BinaryOperator 0x55d7d2b70e28 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55d7d2b70df8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b70d28 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b588f0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55d7d2b70e10 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55d7d2b70dd8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55d7d2b70db8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b70d88 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b70d48 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b70da0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b70d68 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f9a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b58ac8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b58a38 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b70fa0 <col:58, line:516:5>
|   `-ReturnStmt 0x55d7d2b70f90 <line:515:9, col:53>
|     `-BinaryOperator 0x55d7d2b70f70 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55d7d2b70f40 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b70e70 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b58a38 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55d7d2b70f58 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55d7d2b70f20 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55d7d2b70f00 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b70ed0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b70e90 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b70ee8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b70eb0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f880 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b58c10 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b58b80 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b710e8 <col:58, line:520:5>
|   `-ReturnStmt 0x55d7d2b710d8 <line:519:9, col:53>
|     `-BinaryOperator 0x55d7d2b710b8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55d7d2b71088 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b70fb8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b58b80 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55d7d2b710a0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55d7d2b71068 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55d7d2b71048 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b71018 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b70fd8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f6d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b71030 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b70ff8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b58d58 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b58cc8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b71230 <col:60, line:524:5>
|   `-ReturnStmt 0x55d7d2b71220 <line:523:9, col:55>
|     `-BinaryOperator 0x55d7d2b71200 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55d7d2b711d0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b71100 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b58cc8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55d7d2b711e8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55d7d2b711b0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55d7d2b71190 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b71160 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b71120 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b71178 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b71140 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f9a0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b58ea0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b58e10 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b71378 <col:60, line:528:5>
|   `-ReturnStmt 0x55d7d2b71368 <line:527:9, col:55>
|     `-BinaryOperator 0x55d7d2b71348 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55d7d2b71318 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b71248 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b58e10 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55d7d2b71330 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55d7d2b712f8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55d7d2b712d8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b712a8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b71268 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b712c0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b71288 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f880 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55d7d2b58fe8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b58f58 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b714c0 <col:60, line:532:5>
|   `-ReturnStmt 0x55d7d2b714b0 <line:531:9, col:55>
|     `-BinaryOperator 0x55d7d2b71490 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55d7d2b71460 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b71390 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b58f58 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55d7d2b71478 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55d7d2b71440 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55d7d2b71420 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55d7d2b713f0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55d7d2b713b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4f6d0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55d7d2b71408 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55d7d2b713d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55d7d2b4fa30 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55d7d2b59090 prev 0x55d7d2b4fed0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2b59188 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55d7d2b59228 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55d7d2b5fff0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55d7d2b603d8 <col:11>
| |-CXXConstructorDecl 0x55d7d2b600d0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d2b601b8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55d7d2b60b20 <col:11>
| |-CXXConstructorDecl 0x55d7d2b60258 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d2b60368 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55d7d2b62378 <col:11>
| |-CXXDestructorDecl 0x55d7d2b61688 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55d7d2868238 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d7d2868348 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55d7d2868c10 <col:11>
| |   `-ReturnStmt 0x55d7d2868c00 <col:11>
| |     `-UnaryOperator 0x55d7d2868be8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55d7d2868bd8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55d7d28683b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55d7d28684c8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55d7d2cd4cd0 <col:11>
|     `-ReturnStmt 0x55d7d2cd4cc0 <col:11>
|       `-UnaryOperator 0x55d7d2cd4ca8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55d7d2cd4c98 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55d7d2b59290 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55d7d2b59390 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55d7d2b59590 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b59370 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2b59350 <col:21> 'int' 0
| |-EnumConstantDecl 0x55d7d2b59420 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55d7d2b595a8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b59400 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55d7d2b593e0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55d7d2b594b0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55d7d2b595c0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2b59490 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55d7d2b59470 <col:23> 'int' 2
| `-EnumConstantDecl 0x55d7d2b59540 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55d7d2b595d8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2b59520 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55d7d2b59500 <col:27> 'int' 3
|-CXXMethodDecl 0x55d7d2b59618 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55d7d2b596e0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55d7d2b598e8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55d7d2b59790 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55d7d2b59810 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55d7d2b5be50 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55d7d2b59af8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55d7d2b599a8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55d7d2b59a20 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2b59bc8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55d7d2b59c88 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55d7d2b59df8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55d7d2b59d38 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2b59ec0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55d7d2b59f80 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55d7d2b5a040 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55d7d2b5a100 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55d7d2b5a1a0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55d7d2b5a1d8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55d7d2b5a248 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55d7d2b714d8 <col:27, line:684:5>
|-CXXMethodDecl 0x55d7d2b5a308 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55d7d2b714e8 <col:27, line:696:5>
|-CXXMethodDecl 0x55d7d2b5a508 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b5a3b8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55d7d2b5a430 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b71670 <col:66, line:700:5>
|   `-ReturnStmt 0x55d7d2b71660 <line:699:9, col:31>
|     `-CallExpr 0x55d7d2b71600 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55d7d2b715e8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2b71598 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55d7d29dc8b8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55d7d2b71630 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55d7d2b71558 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55d7d2b5a3b8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55d7d2b71648 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d7d2b71578 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b5a430 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2b5a878 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55d7d2b5a5c8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55d7d2b5a640 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55d7d2b5a6b8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55d7d2b5a730 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2b719c0 <col:64, line:707:5>
|   |-DeclStmt 0x55d7d2b71700 <line:704:9, col:24>
|   | `-VarDecl 0x55d7d2b71698 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55d7d2b71910 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55d7d2b71718 <col:9> 'int32_t':'int' lvalue ParmVar 0x55d7d2b5a640 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55d7d2b718f8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55d7d2b71890 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55d7d2b71878 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d7d2b717f8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55d7d29e1b88 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55d7d2b718c8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55d7d2b71798 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55d7d2b5a6b8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55d7d2b718e0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55d7d2b717b8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2b5a730 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55d7d2b717d8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55d7d2b71698 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55d7d2b719a0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55d7d2b71930 <col:9> 'int32_t':'int' lvalue ParmVar 0x55d7d2b5a5c8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55d7d2b71988 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55d7d2b71970 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55d7d2b71950 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55d7d2b71698 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55d7d2b5ab18 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55d7d2b5a948 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55d7d2b5a9c0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55d7d2b5aa38 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55d7d2b5adb8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55d7d2b5abe0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55d7d2b5ac58 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55d7d2b5acd0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2b5af48 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55d7d2b5ae80 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55d7d2b5b148 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55d7d2b5b000 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55d7d2b5b078 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55d7d2b5b418 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55d7d2b5b358 parent 0x55d7d265a488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55d7d2b5b208 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55d7d2b5b280 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55d7d2b5b638 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55d7d2b5b578 parent 0x55d7d265a488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55d7d2b5b468 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55d7d2b5b4e0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55d7d2b5b800 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55d7d2b5b748 parent 0x55d7d265a488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55d7d2b5b688 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55d7d2b5ba88 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55d7d2b5b9c8 parent 0x55d7d265a488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55d7d2b5b878 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55d7d2b5b8f0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55d7d2b5bca8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55d7d2b5bbe8 parent 0x55d7d265a488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55d7d2b5bad8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55d7d2b5bb50 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55d7d2b61530 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2b61618 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b62088 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55d7d2b62040 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55d7d2b5a1d8
| |     `-DeclRefExpr 0x55d7d2b62020 <col:7> 'const Timestamp' lvalue ParmVar 0x55d7d2b61618 '' 'const Timestamp &'
| `-CompoundStmt 0x55d7d2b620e8 <col:7>
|-CXXConstructorDecl 0x55d7d2b61798 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2b618a8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55d7d2b5a1d8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55d7d2b62388 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55d7d2b62330 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55d7d2b5a1d8
| |     `-CXXStaticCastExpr 0x55d7d2b62300 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2b622d0 <col:7> 'Timestamp' lvalue ParmVar 0x55d7d2b618a8 '' 'Timestamp &&'
| `-CompoundStmt 0x55d7d2b623e8 <col:7>
|-CXXDestructorDecl 0x55d7d2b61958 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55d7d2868088 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2868198 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55d7d2868c88 <col:7>
|   |-CXXMemberCallExpr 0x55d7d2868c28 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55d7d2868b68 <col:7> '<bound member function type>' .operator= 0x55d7d2868238
|   | | `-MemberExpr 0x55d7d2868a78 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
|   | |   `-CXXThisExpr 0x55d7d2868a68 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55d7d2868b38 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55d7d2b5a1d8
|   |   `-DeclRefExpr 0x55d7d2868b18 <col:7> 'const Timestamp' lvalue ParmVar 0x55d7d2868198 '' 'const Timestamp &'
|   `-ReturnStmt 0x55d7d2868c78 <col:7>
|     `-UnaryOperator 0x55d7d2868c60 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d7d2868c50 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55d7d2868538 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55d7d2868648 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55d7d2cd4d48 <col:7>
    |-CXXMemberCallExpr 0x55d7d2cd4ce8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55d7d2cd4c50 <col:7> '<bound member function type>' .operator= 0x55d7d28683b8
    | | `-MemberExpr 0x55d7d2cd4b20 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55d7d2b5a1d8
    | |   `-CXXThisExpr 0x55d7d2cd4b10 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55d7d2cd4c20 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55d7d2b5a1d8
    |   `-CXXStaticCastExpr 0x55d7d2cd4bf0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55d7d2cd4bc0 <col:7> 'Timestamp' lvalue ParmVar 0x55d7d2868648 '' 'Timestamp &&'
    `-ReturnStmt 0x55d7d2cd4d38 <col:7>
      `-UnaryOperator 0x55d7d2cd4d20 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55d7d2cd4d10 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cd69d0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2cd6ae8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55d7d2cd6bb8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55d7d2cd6c18 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55d7d2cd6c80 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55d7d2cd6d08 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55d7d2cd6f70 <col:16, line:46:5>
|   |-BinaryOperator 0x55d7d2cd6eb8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55d7d2cd6dd8 <col:9> 'TaskLink *' lvalue ->_prev 0x55d7d2cd6bb8
|   | | `-CXXThisExpr 0x55d7d2cd6dc8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cd6ea0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55d7d2cd6e80 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55d7d2cd6e18 <col:17> 'TaskLink *' lvalue ->_next 0x55d7d2cd6c18
|   |     | `-CXXThisExpr 0x55d7d2cd6e08 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55d7d2cd6e68 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55d7d2cd6e48 <col:25> 'int' 0
|   `-BinaryOperator 0x55d7d2cd6f50 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55d7d2cd6ee8 <col:9> 'unsigned int' lvalue ->_pass 0x55d7d2cd6c80
|     | `-CXXThisExpr 0x55d7d2cd6ed8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cd6f38 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55d7d2cd6f18 <col:17> 'int' 0
|-CXXConstructorDecl 0x55d7d2d43f98 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55d7d2d43f98
| `-ParmVarDecl 0x55d7d2d440a8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55d7d2d44148 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55d7d2d44148
| `-ParmVarDecl 0x55d7d2d44258 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55d7d2d44448 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d44448
|-CXXMethodDecl 0x55d7d2d44c48 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55d7d2d44c48
| `-ParmVarDecl 0x55d7d2d44d58 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55d7d2d44dc8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55d7d2d44dc8
  `-ParmVarDecl 0x55d7d2d44ed8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cd94d8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55d7d2cd9608 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55d7d2cd9668 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2cd96c8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55d7d2d4e928 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55d7d2d4ea00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d4ea00
|-CXXConstructorDecl 0x55d7d2d4ecb8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55d7d2d4ecb8
| `-ParmVarDecl 0x55d7d2d4edc8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55d7d2d4ee68 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55d7d2d4ee68
  `-ParmVarDecl 0x55d7d2d4ef78 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cd9330 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d7d2cd9448 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55d7d2cd94d8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55d7d2cd9608 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55d7d2cd9668 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55d7d2cd96c8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55d7d2d4e928 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55d7d2d4ea00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d4ea00
| |-CXXConstructorDecl 0x55d7d2d4ecb8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55d7d2d4ecb8
| | `-ParmVarDecl 0x55d7d2d4edc8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55d7d2d4ee68 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55d7d2d4ee68
|   `-ParmVarDecl 0x55d7d2d4ef78 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55d7d2cd9788 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55d7d2cd97e8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55d7d2cd9788 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55d7d2cd9608 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55d7d2cd9840 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55d7d2cd9788 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55d7d2cd9668 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55d7d2cd9898 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55d7d2cd9788 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55d7d2cd96c8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55d7d2cd98f0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55d7d2d4e838 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d2d4f198 <col:11>
|-CXXConstructorDecl 0x55d7d2d4eb08 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55d7d2d4eb08
| `-ParmVarDecl 0x55d7d2d4ec18 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55d7d2d4f018 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55d7d2d4f018
  `-ParmVarDecl 0x55d7d2d4f128 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2cde558 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55d7d2cde768 prev 0x55d7d2cde558 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2cdf970 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55d7d2cdf920 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55d7d2cdf900 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55d7d2cdf7b0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cdf5d0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2cdf120 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55d7d2cdf038 'sized_array_memory'
|-FieldDecl 0x55d7d2ce35a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55d7d2ce35f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2ce3628 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|     `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce36e8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55d7d2ce36b0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|       `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce3778 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55d7d2ce3740 'const TimerSet::heap_element &'
|   `-QualType 0x55d7d2cde801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|         `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce3808 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55d7d2ce37d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|       `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce38c8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55d7d2ce3890 'const TimerSet::heap_element *'
|   `-QualType 0x55d7d2cde801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|         `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce4520 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55d7d2ce44d0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55d7d2ce44b0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55d7d2ce43e8 'type'
|     `-LValueReferenceType 0x55d7d2ce43b0 'const TimerSet::heap_element &'
|       `-QualType 0x55d7d2ce4151 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55d7d2ce4150 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55d7d292f110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d292f0b8 'T'
|           `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|             `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce4588 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55d7d2ce3740 'const TimerSet::heap_element &'
|   `-QualType 0x55d7d2cde801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|         `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce45e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2ce4648 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55d7d2ce37d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|       `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-TypedefDecl 0x55d7d2ce46b0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55d7d2ce3890 'const TimerSet::heap_element *'
|   `-QualType 0x55d7d2cde801 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55d7d2cde800 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2cdd760 'TimerSet::heap_element'
|         `-CXXRecord 0x55d7d2cdd6d0 'heap_element'
|-EnumDecl 0x55d7d2ce4708 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2ce4800 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2ce47e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2ce4888 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2ce4b18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2ce4940 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2ce49e0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55d7d2ce4dd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55d7d2ce4cc0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55d7d2ce5098 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55d7d2ce4f80 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55d7d2ce6ec0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55d7d2ce52c0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55d7d2ce71d0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55d7d2ce70b0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55d7d2ce74c0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2ce7308 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2ce7380 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55d7d2ce7618 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55d7d2ce76f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2ce7750 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2ce7798 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55d7d2ce7848 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2ce78a0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2ce7968 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2ce7a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2ce7a70 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2ce7ab8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2ce7b68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2ce7bc0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2ce7c08 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2ce7cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2ce7d10 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2ce7d58 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2ce7e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2ce7e60 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2ce7e88 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2ce7f38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2ce7fe8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2ce81a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2ce8098 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2ce8110 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55d7d2ce82f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2ce8268 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2ce84a8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2ce83b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2ce8560 <col:20>
| `-OptimizeNoneAttr 0x55d7d2ce85b8 <col:30>
|-CXXMethodDecl 0x55d7d2ce86d8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2ce85e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2ce8790 <col:20>
| `-OptimizeNoneAttr 0x55d7d2ce87e8 <col:30>
|-CXXMethodDecl 0x55d7d2ce88a0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2ce8810 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2ce89e8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2ce8958 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2ce8b18 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55d7d2ce8c48 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55d7d2ce8d18 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55d7d2ce8de8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55d7d2ce8f28 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2ce8e98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2ce9070 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2ce8fe0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2ce91b8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2ce9128 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2ce9270 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2ce9370 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2ce92e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2ce9428 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2ce94e8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55d7d2ce95e8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55d7d2ce9798 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2ce96a8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55d7d2ce9f58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2ce9850 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55d7d2ce9eb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55d7d2ce9db8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55d7d2cea038 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2cea188 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2cea0f8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55d7d2cea240 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2cea488 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2cea300 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55d7d2cea378 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55d7d2cea648 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55d7d2cea558 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55d7d2cea898 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55d7d2cea710 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55d7d2cea788 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55d7d2cea958 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2ceabb8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55d7d2ceaac0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55d7d2ceac88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2ceac88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2ceadd0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55d7d2ceafd8 prev 0x55d7d2ceadd0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2cec120 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55d7d2cec0d0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55d7d2cec0b0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55d7d2cebf60 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cebd80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2ceb8d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55d7d2ceb7e8 'sized_array_memory'
|-FieldDecl 0x55d7d2cf1190 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55d7d2cf11e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2cf1218 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-PointerType 0x55d7d2bc12c0 'Timer *'
|     `-RecordType 0x55d7d2bc0410 'Timer'
|       `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf12d8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55d7d2cf12a0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2bc12c0 'Timer *'
|       `-RecordType 0x55d7d2bc0410 'Timer'
|         `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf1398 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55d7d2cf1360 'Timer *const &'
|   `-QualType 0x55d7d2ceb071 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bc12c0 'Timer *'
|         `-RecordType 0x55d7d2bc0410 'Timer'
|           `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf1458 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55d7d2cf1420 'Timer **'
|   `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2bc12c0 'Timer *'
|       `-RecordType 0x55d7d2bc0410 'Timer'
|         `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf1518 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55d7d2cf14e0 'Timer *const *'
|   `-QualType 0x55d7d2ceb071 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bc12c0 'Timer *'
|         `-RecordType 0x55d7d2bc0410 'Timer'
|           `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf20f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55d7d2cf20a0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55d7d2cf2080 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55d7d2cf2010 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cf1dd0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-PointerType 0x55d7d2bc12c0 'Timer *'
|         `-RecordType 0x55d7d2bc0410 'Timer'
|           `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf2158 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55d7d2cf1360 'Timer *const &'
|   `-QualType 0x55d7d2ceb071 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bc12c0 'Timer *'
|         `-RecordType 0x55d7d2bc0410 'Timer'
|           `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf21b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2cf2218 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55d7d2cf1420 'Timer **'
|   `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-PointerType 0x55d7d2bc12c0 'Timer *'
|       `-RecordType 0x55d7d2bc0410 'Timer'
|         `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-TypedefDecl 0x55d7d2cf2280 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55d7d2cf14e0 'Timer *const *'
|   `-QualType 0x55d7d2ceb071 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55d7d2ceb070 'Timer *' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-PointerType 0x55d7d2bc12c0 'Timer *'
|         `-RecordType 0x55d7d2bc0410 'Timer'
|           `-CXXRecord 0x55d7d2cc39f8 'Timer'
|-EnumDecl 0x55d7d2cf22d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2cf23d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2cf23b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2cf2458 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2cf26e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2cf2510 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2cf25b0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55d7d2cf29a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55d7d2cf2890 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55d7d2cf2c68 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55d7d2cf2b50 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55d7d2cf2fb0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55d7d2cf2e90 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55d7d2cf32c0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55d7d2cf31a0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55d7d2cf35b0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2cf33f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2cf3470 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55d7d2cf3708 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55d7d2cf37e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2cf3840 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2cf3888 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55d7d2cf3938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2cf3990 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2cf3a58 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2cf3b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2cf3b60 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2cf3ba8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2cf3c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2cf3cb0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2cf3cf8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2cf3da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2cf3e00 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2cf3e48 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2cf3ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2cf3f50 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2cf3f78 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2cf4028 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2cf40d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2cf4298 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2cf4188 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2cf4200 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55d7d2cf43e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2cf4358 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2cf4598 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2cf44a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2cf4650 <col:20>
| `-OptimizeNoneAttr 0x55d7d2cf46a8 <col:30>
|-CXXMethodDecl 0x55d7d2cf47c8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2cf46d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2cf4880 <col:20>
| `-OptimizeNoneAttr 0x55d7d2cf48d8 <col:30>
|-CXXMethodDecl 0x55d7d2cf4990 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2cf4900 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2cf4ad8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2cf4a48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2cf4c08 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55d7d2cf4d38 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55d7d2cf4e08 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55d7d2cf4ed8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55d7d2cf5018 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2cf4f88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2cf5160 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2cf50d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2cf52a8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2cf5218 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2cf5360 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2cf5460 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2cf53d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2cf5518 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2cf55d8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55d7d2cf56d8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55d7d2cf5858 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2cf5798 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55d7d2cf6018 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2cf5910 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55d7d2cf5f78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55d7d2cf5e78 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55d7d2cf60f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2cf6248 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2cf61b8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55d7d2cf6300 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2cf6548 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2cf63c0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55d7d2cf6438 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55d7d2cf6708 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55d7d2cf6618 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55d7d2cf6958 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55d7d2cf67d0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55d7d2cf6848 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55d7d2cf6a18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2cf6c78 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55d7d2cf6b80 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55d7d2cf6d48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2cf6d48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cbdcd0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2cbdde8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55d7d2cbde78 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55d7d2cbdf00 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55d7d2cbdff0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55d7d2cbe0f0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55d7d2cbe1b0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55d7d2cbe270 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55d7d2cbe398 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55d7d2cbe398
| `-ParmVarDecl 0x55d7d2cbe4a8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55d7d2cf7af8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55d7d2cf7af8
  `-ParmVarDecl 0x55d7d2cf7c08 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cdbc00 prev 0x55d7d2cc7c08 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55d7d2cdbcf8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55d7d2cdbd88 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55d7d2cdbe10 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55d7d2cdbf08 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55d7d2cf7f70 <col:43, col:67>
|   `-ReturnStmt 0x55d7d2cf7f60 <col:45, col:52>
|     `-CXXConstructExpr 0x55d7d2cf7f30 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55d7d2cf7f00 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55d7d2cde340
|         `-CXXThisExpr 0x55d7d2cf7ef0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55d7d2cdbfc8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55d7d2cdc1d0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55d7d2cdc078 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55d7d2cdc0f0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55d7d2cdc2c8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55d7d2cdc390 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55d7d2cf7ff0 <col:39, col:67>
|   `-ReturnStmt 0x55d7d2cf7fe0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55d7d2cf7fc8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cf7f98 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55d7d2cde428
|         `-CXXThisExpr 0x55d7d2cf7f88 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55d7d2cdc458 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55d7d2cf8070 <col:35, col:59>
|   `-ReturnStmt 0x55d7d2cf8060 <col:37, col:44>
|     `-ImplicitCastExpr 0x55d7d2cf8048 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cf8018 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55d7d2cde490
|         `-CXXThisExpr 0x55d7d2cf8008 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55d7d2cdc5a0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55d7d2cdc510 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55d7d2cdc6e8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55d7d2cdc658 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55d7d2cdd538 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55d7d2cdc7a0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55d7d2cdd460 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55d7d2cdd608 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55d7d2cdd6a8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d2cdd6d0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2cdd7e8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55d7d2cdd888 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55d7d2cdd8e8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55d7d2cdda18 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55d7d2cdd948 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55d7d2cdd888 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55d7d2cf8148 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55d7d2cf80f0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55d7d2cf80c0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55d7d2cc5068
|   |       `-ImplicitCastExpr 0x55d7d2cf8110 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55d7d2cf80a8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55d7d2cf8088 <col:17> 'Timer *' lvalue ParmVar 0x55d7d2cdd948 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55d7d2cdd8e8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55d7d2cf81e0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d7d2cf81a0 <col:41> 'Timer *' lvalue ParmVar 0x55d7d2cdd948 't_' 'Timer *'
|   `-CompoundStmt 0x55d7d2cf8230 <col:45, line:44:2>
|-CXXRecordDecl 0x55d7d2cddae0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2cddbf8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55d7d2cdde48 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55d7d2cddcc8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55d7d2cddd40 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55d7d2cfafa0 <col:71, line:49:2>
|     `-ReturnStmt 0x55d7d2cfaf90 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55d7d2cfaf58 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55d7d2cfaf40 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55d7d2cfaf20 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55d7d2b7e628 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55d7d2cf8260 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55d7d2cdd888
|         | `-DeclRefExpr 0x55d7d2cf8240 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55d7d2cddcc8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55d7d2cfaef0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55d7d2cdd888
|           `-DeclRefExpr 0x55d7d2cfaed0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55d7d2cddd40 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55d7d2cddf10 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2cde028 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55d7d2cde248 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55d7d2cde0c8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55d7d2cde140 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55d7d2cfb1a8 <col:63, line:54:2>
|     `-BinaryOperator 0x55d7d2cfb188 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55d7d2cfb038 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55d7d2cc70a8
|       | `-ImplicitCastExpr 0x55d7d2cfb020 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55d7d2cfaff0 <col:6, col:9> 'Timer *' lvalue ->t 0x55d7d2cdd8e8
|       |     `-ImplicitCastExpr 0x55d7d2cfafd8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55d7d2cfafb8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55d7d2cde140 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55d7d2cfb170 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55d7d2cfb150 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55d7d2cfb0f8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55d7d2cfb0d8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55d7d2cfb0a8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55d7d2cfb068 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55d7d2cde140 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55d7d2cfb0c0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55d7d2cfb088 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55d7d2cde0c8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55d7d2cfb138 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55d7d2cfb118 <col:39> 'int' 1
|-FieldDecl 0x55d7d2cde340 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55d7d2cde3b0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55d7d2cde390 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55d7d2cde310 <col:52> 'int' 8
|-FieldDecl 0x55d7d2cde428 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55d7d2cde490 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55d7d2cde4f8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55d7d2cead70 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55d7d2cf6e30 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55d7d2cf6e90 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55d7d2cf6ef0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55d7d2cf6f50 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2cf7040 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55d7d2cf6fb0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55d7d2cf7108 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55d7d2cfb600 <col:29, line:81:5>
|   `-IfStmt 0x55d7d2cfb5d8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55d7d2cfb290 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55d7d2cfb230 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55d7d2cfb200 <col:6, col:18> '<bound member function type>' .size 0x55d7d2ce7e88
|     |     `-ImplicitCastExpr 0x55d7d2cfb278 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55d7d2cfb1d0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55d7d2cead70
|     |         `-CXXThisExpr 0x55d7d2cfb1c0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55d7d2cfb480 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55d7d2cfb468 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55d7d2cfb448 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55d7d2868088 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55d7d2cfb2b8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55d7d2cde340
|     | | `-CXXThisExpr 0x55d7d2cfb2a8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55d7d2cfb430 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55d7d2cfb400 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55d7d2cdd888
|     |     `-CXXMemberCallExpr 0x55d7d2cfb3d8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55d7d2cfb3a8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55d7d2ce8f28
|     |       | `-MemberExpr 0x55d7d2cfb2f8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55d7d2cead70
|     |       |   `-CXXThisExpr 0x55d7d2cfb2e8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55d7d2cfb388 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55d7d2cfb5c0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55d7d2cfb588 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55d7d2cfb570 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55d7d2cfb550 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55d7d2868538 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55d7d2cfb4c8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55d7d2cde340
|         | `-CXXThisExpr 0x55d7d2cfb4b8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55d7d2cfb538 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55d7d2cfb508 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55d7d2cf7248 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55d7d2cf71b8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55d7d2cf7310 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55d7d2cf73d0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55d7d2cf7490 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55d7d2cf7580 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55d7d2cf75e8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55d7d2cf75e8
| `-ParmVarDecl 0x55d7d2cf76f8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55d7d2cf7798 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55d7d2cf7798
| `-ParmVarDecl 0x55d7d2cf78a8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55d7d2cf7948 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55d7d2cf7948
| `-ParmVarDecl 0x55d7d2cf7a58 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55d7d2cf7c78 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55d7d2cf7c78
| `-ParmVarDecl 0x55d7d2cf7d88 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55d7d2cf7e10 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55d7d2cf7e10

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d28878 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55d7d2d28a88 prev 0x55d7d2d28878 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d29b60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55d7d2d29b10 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55d7d2d29af0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55d7d2d299a0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2cebd80 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2ceb8d0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55d7d2ceb7e8 'sized_array_memory'
|-FieldDecl 0x55d7d2d29c60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55d7d2d29cb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d29ce8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-RecordType 0x55d7d2d26930 'pollfd'
|     `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d29da8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55d7d2d29d70 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d26930 'pollfd'
|       `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d29e68 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55d7d2d29e30 'const pollfd &'
|   `-QualType 0x55d7d2d28b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d26930 'pollfd'
|         `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d29ef8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55d7d2d29ec0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d26930 'pollfd'
|       `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d29fb8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55d7d2d29f80 'const pollfd *'
|   `-QualType 0x55d7d2d28b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d26930 'pollfd'
|         `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d2ab90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55d7d2d2ab40 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55d7d2d2ab20 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55d7d2d2aab0 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d2a870 'pollfd' sugar
|       |-TemplateTypeParmType 0x55d7d292f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d292f7f0 'T'
|       `-RecordType 0x55d7d2d26930 'pollfd'
|         `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d2abf8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55d7d2d29e30 'const pollfd &'
|   `-QualType 0x55d7d2d28b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d26930 'pollfd'
|         `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d2ac50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d2acb8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55d7d2d29ec0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d26930 'pollfd'
|       `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-TypedefDecl 0x55d7d2d2ad20 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55d7d2d29f80 'const pollfd *'
|   `-QualType 0x55d7d2d28b21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55d7d2d28b20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d26930 'pollfd'
|         `-CXXRecord 0x55d7d2d268a0 'pollfd'
|-EnumDecl 0x55d7d2d2ad78 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d2ae70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d2ae50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d2aef8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d2b188 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d2afb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d2b050 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55d7d2d2b448 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55d7d2d2b330 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55d7d2d2b708 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55d7d2d2b5f0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55d7d2d2ba50 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55d7d2d2b930 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55d7d2d2bd60 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55d7d2d2bc40 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55d7d2d2d0c0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d2be98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d2cf80 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55d7d2d2d218 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55d7d2d2d2f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d2d350 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d2d398 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55d7d2d2d448 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d2d4a0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d2d568 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d2d618 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d2d670 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d2d6b8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d2d768 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d2d7c0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d2d808 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d2d8b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d2d910 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d2d958 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d2da08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d2da60 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d2da88 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d2db38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d2dbe8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d2dda8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d2dc98 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d2dd10 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55d7d2d2def8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d2de68 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d2e0a8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d2dfb0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d2e160 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d2e1b8 <col:30>
|-CXXMethodDecl 0x55d7d2d2e2d8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d2e1e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d2e390 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d2e3e8 <col:30>
|-CXXMethodDecl 0x55d7d2d2e4a0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d2e410 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d2e5e8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d2e558 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d2e718 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55d7d2d2e848 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55d7d2d2e918 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55d7d2d2e9e8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55d7d2d2eb28 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d2ea98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d2ec70 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d2ebe0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d2edb8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d2ed28 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d2ee70 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d2ef70 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d2eee0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d2f028 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d2f0e8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55d7d2d2f1e8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55d7d2d2f398 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d2f2a8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55d7d2d2fb58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d2f450 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55d7d2d2fab8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55d7d2d2f9b8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55d7d2d2fc38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d2fd88 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d2fcf8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55d7d2d2fe40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d30088 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d2ff00 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55d7d2d2ff78 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55d7d2d30248 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d30158 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55d7d2d30498 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d30310 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55d7d2d30388 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55d7d2d30558 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d307b8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55d7d2d306c0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55d7d2d30888 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d30888

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d31d70 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55d7d2d31f48 prev 0x55d7d2d31d70 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d7d2d31fd8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d7d2d32000 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d33bd0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55d7d2d33b80 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55d7d2d324b0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55d7d2d323b0 'type'
|     `-TemplateSpecializationType 0x55d7d2d32340 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55d7d2d32220 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55d7d2d32200 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55d7d2d321e0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55d7d2d32320 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55d7d2d32240 'char_array'
|-TypedefDecl 0x55d7d2d33c88 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55d7d2d33c50 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55d7d2d33c30 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55d7d2d33bd0 'type'
|     `-ElaboratedType 0x55d7d2d33b80 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55d7d2d324b0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55d7d2d323b0 'type'
|         `-TemplateSpecializationType 0x55d7d2d32340 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55d7d2d32220 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55d7d2d32200 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55d7d2d321e0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55d7d2d32320 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55d7d2d32240 'char_array'
|-CXXMethodDecl 0x55d7d2d33e08 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55d7d2d33d18 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55d7d2d33ef8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d7d2d33fd8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55d7d2d33fd8
|-CXXMethodDecl 0x55d7d2d342a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55d7d2d341b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55d7d2d344e8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55d7d2d34360 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2d343d8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d346b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55d7d2d345a8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2d34620 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d34818 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55d7d2d348e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55d7d2d34b38 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55d7d2d349a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55d7d2d34a20 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d34d98 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55d7d2d34c08 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55d7d2d34c80 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d357c0 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55d7d2d34e68 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d35978 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55d7d2d35888 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d35a30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d35ae0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d35d18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55d7d2d35b90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d7d2d35c08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55d7d2d35fb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55d7d2d35ec0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55d7d2d36080 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55d7d2d360d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d7d2d36120 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2d309d0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55d7d2d30bd8 prev 0x55d7d2d309d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d7d2d31ce0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55d7d2d31c90 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55d7d2d31c70 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55d7d2d31b20 'type'
|     `-SubstTemplateTypeParmType 0x55d7d2d31940 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55d7d2924a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d29249e8 'T'
|       `-RecordType 0x55d7d2c09870 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55d7d2c09788 'sized_array_memory'
|-FieldDecl 0x55d7d2d36170 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55d7d2d361c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d7d2d361f8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|   `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d362b8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55d7d2d36280 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d36378 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55d7d2d36340 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55d7d2d30c71 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d36408 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55d7d2d363d0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d364c8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55d7d2d36490 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55d7d2d30c71 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d37120 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55d7d2d370d0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55d7d2d370b0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55d7d2d36fe8 'type'
|     `-LValueReferenceType 0x55d7d2d36fb0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55d7d2d36d51 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55d7d2d36d50 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55d7d292f110 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d7d292f0b8 'T'
|           `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d37188 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55d7d2d36340 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55d7d2d30c71 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d371e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-TypedefDecl 0x55d7d2d37248 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55d7d2d363d0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|     `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-TypedefDecl 0x55d7d2d372b0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55d7d2d36490 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55d7d2d30c71 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55d7d2d30c70 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55d7d295c730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d7d295c6d8 'T'
|       `-RecordType 0x55d7d2d283e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55d7d2d28350 'SelectorInfo'
|-EnumDecl 0x55d7d2d37308 <line:134:5> col:5
| `-EnumConstantDecl 0x55d7d2d37400 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d7d2d373e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d7d295ddb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d7d295dd90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d7d295dd70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d7d2d37488 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d37718 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d37540 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d375e0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55d7d2d379d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55d7d2d378c0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55d7d2d37c98 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55d7d2d37b80 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55d7d2d37fe0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55d7d2d37ec0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55d7d2d382f0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55d7d2d381d0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55d7d2d385e0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d38428 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d384a0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55d7d2d38738 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55d7d2d38818 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d38870 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d388b8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55d7d2d38968 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d389c0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d38a88 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d38b38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d38b90 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d38bd8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d38c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d38ce0 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d38d28 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d38dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d38e30 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d38e78 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55d7d2d38f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d7d2d38f80 <col:30> Inherited
|-CXXMethodDecl 0x55d7d2d38fa8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d39058 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d7d2d39108 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d392c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d391b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d7d2d39230 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55d7d2d39418 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d39388 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d395c8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55d7d2d394d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d39680 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d396d8 <col:30>
|-CXXMethodDecl 0x55d7d2d397f8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55d7d2d39700 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d7d2d398b0 <col:20>
| `-OptimizeNoneAttr 0x55d7d2d39908 <col:30>
|-CXXMethodDecl 0x55d7d2d399c0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d39930 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d39b08 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d39a78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d39c38 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55d7d2d39d68 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55d7d2d39e38 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55d7d2d39f08 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55d7d2d3a048 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d7d2d39fb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d3a190 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d7d2d3a100 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d7d2d3a2d8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d7d2d3a248 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d3a390 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d3a490 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d7d2d3a400 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d7d2d3a548 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d7d2d3a608 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55d7d2d3a708 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55d7d2d3a8b8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d3a7c8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55d7d2d3b078 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d7d2d3a970 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55d7d2d3afd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55d7d2d3aed8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55d7d2d3b158 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d7d2d3b2a8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55d7d2d3b218 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55d7d2d3b360 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d7d2d3b5a8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55d7d2d3b420 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55d7d2d3b498 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55d7d2d3b768 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55d7d2d3b678 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55d7d2d3b9b8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55d7d2d3b830 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55d7d2d3b8a8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55d7d2d3ba78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d7d2d3bcd8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55d7d2d3bbe0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55d7d2d3bda8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d7d2d3bda8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2d27530 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2d27648 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55d7d2d276d8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55d7d2d27760 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55d7d2d27850 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55d7d2d27850
|-CXXMethodDecl 0x55d7d2d27950 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55d7d2d27bf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55d7d2d27a08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55d7d2d27a80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55d7d2d27b00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55d7d2d27e60 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55d7d2d27cc0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55d7d2d27d38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55d7d2d27db8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55d7d2d27fb8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55d7d2d27f28 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55d7d2d28080 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55d7d2d3d458 <col:34, line:50:5>
|   |-BinaryOperator 0x55d7d2d3ce28 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55d7d2d3cde8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55d7d2d28808
|   | | `-CXXThisExpr 0x55d7d2d3cdd8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55d7d2d3ce18 <col:23> 'bool' true
|   `-CallExpr 0x55d7d2d3d430 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55d7d2d3d418 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55d7d2d3d398 <col:2> 'void (long)' lvalue Function 0x55d7d2d3d298 'ignore_result' 'void (long)' (FunctionTemplate 0x55d7d291f9e8 'ignore_result')
|     `-CallExpr 0x55d7d2d3d040 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55d7d2d3d028 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2d3cfa8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55d7d2cfe628 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55d7d2d3d078 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55d7d2d3cf50 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55d7d2d3cf38 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55d7d2d3cee8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55d7d2d287a8
|       |   |   `-CXXThisExpr 0x55d7d2d3ced8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55d7d2d3cf18 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55d7d2d3d0a8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55d7d2d3d090 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55d7d2d3cf70 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55d7d2d3d0c0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55d7d2d3cf88 <col:41> 'int' 1
|-CXXMethodDecl 0x55d7d2d281c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55d7d2d28130 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55d7d2d28288 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55d7d2d28328 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55d7d2d28350 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2d28468 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55d7d2d28508 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55d7d2d28568 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55d7d2d285d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55d7d2d28680 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55d7d2d28508 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55d7d2d3d4b8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55d7d2d3d478 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55d7d2d28568 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55d7d2d3d538 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55d7d2d3d4f8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55d7d2d285d0 'pollfd' 'int'
|   | `-UnaryOperator 0x55d7d2d3d598 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55d7d2d3d578 <col:35> 'int' 1
|   `-CompoundStmt 0x55d7d2d3d610 <line:64:2, line:65:2>
|-FieldDecl 0x55d7d2d287a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55d7d2d28808 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55d7d2d30970 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55d7d2d3be90 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55d7d2d3c0c8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55d7d2d3bef8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55d7d2d3bf70 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55d7d2d3bfe8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55d7d2d3c2b0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55d7d2d3c198 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55d7d2d3c218 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55d7d2d3c4f8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55d7d2d3c378 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55d7d2d3c3f8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55d7d2d3c708 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55d7d2d3c5b8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55d7d2d3c630 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55d7d2d3c858 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55d7d2d3c7c8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55d7d2d3c920 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55d7d2d3c9e0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55d7d2d3caa8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55d7d2d3caa8
| `-ParmVarDecl 0x55d7d2d3cbb8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55d7d2d3cc58 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55d7d2d3cc58
  `-ParmVarDecl 0x55d7d2d3cd68 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cbcc38 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2cbcd58 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55d7d2cbcde8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55d7d2cbce70 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55d7d2cbcf60 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55d7d2cbd060 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55d7d2cbd120 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55d7d2cbd1e0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55d7d2cbd2c8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55d7d2cbd3e8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55d7d2cbd3e8
| `-ParmVarDecl 0x55d7d2cbd4f8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55d7d2d44f78 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55d7d2d44f78
  `-ParmVarDecl 0x55d7d2d45088 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cd9ba8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2cd9cc8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55d7d2cd9d68 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55d7d2cd9dc8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55d7d2d44578 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55d7d2d44578
| `-ParmVarDecl 0x55d7d2d44688 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55d7d2d44728 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55d7d2d44728
| `-ParmVarDecl 0x55d7d2d44838 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55d7d2d448a8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d448a8
|-CXXMethodDecl 0x55d7d2d45128 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55d7d2d45128
| `-ParmVarDecl 0x55d7d2d45238 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55d7d2d452a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55d7d2d452a8
| `-ParmVarDecl 0x55d7d2d453b8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55d7d2d4f1f8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55d7d2d4f2d0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cbeb30 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2cbec48 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55d7d2cbecd8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55d7d2cbed60 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55d7d2cbee20 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55d7d265a580 'int'
|-CXXMethodDecl 0x55d7d2cbeee8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55d7d2cbef88 <col:45> always_inline
|-CXXMethodDecl 0x55d7d2cbf0b8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55d7d2cbeff0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55d7d2cbf160 <col:49> always_inline
|-CXXConstructorDecl 0x55d7d2cbf258 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55d7d2cbf258
| `-ParmVarDecl 0x55d7d2cbf368 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55d7d2cbf408 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55d7d2cbf408
| `-ParmVarDecl 0x55d7d2cc1c70 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55d7d2d44990 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d44990
|-CXXMethodDecl 0x55d7d2d45458 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55d7d2d45458
| `-ParmVarDecl 0x55d7d2d45568 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55d7d2d455d8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55d7d2d455d8
  `-ParmVarDecl 0x55d7d2d456e8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2d407e8 prev 0x55d7d2d274a0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55d7d2d408e0 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55d7d2d40970 <col:22, col:28> col:22 public
|-EnumDecl 0x55d7d2d40998 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55d7d2d40ab8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55d7d2d40a98 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55d7d2d40a80 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d7d2d40a60 <col:32> 'int' 1
| `-EnumConstantDecl 0x55d7d2d40b60 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55d7d2d40b40 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55d7d2d40b28 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55d7d2d40b08 <col:53> 'int' 1000
|-CXXMethodDecl 0x55d7d2d40c00 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55d7d2d40cc0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55d7d2d40da8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55d7d2d457a8 <col:34, col:52>
|   `-ReturnStmt 0x55d7d2d45798 <col:36, col:43>
|     `-MemberExpr 0x55d7d2d45768 <col:43> 'TimerSet' lvalue ->_timers 0x55d7d2d42a78
|       `-CXXThisExpr 0x55d7d2d45758 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55d7d2d40e98 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55d7d2d45810 <col:46, col:64>
|   `-ReturnStmt 0x55d7d2d45800 <col:48, col:55>
|     `-MemberExpr 0x55d7d2d457d0 <col:55> 'const TimerSet' lvalue ->_timers 0x55d7d2d42a78
|       `-CXXThisExpr 0x55d7d2d457c0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55d7d2d40f88 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55d7d2d45878 <col:36, col:55>
|   `-ReturnStmt 0x55d7d2d45868 <col:38, col:45>
|     `-MemberExpr 0x55d7d2d45838 <col:45> 'SelectSet' lvalue ->_selects 0x55d7d2d42ad8
|       `-CXXThisExpr 0x55d7d2d45828 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55d7d2d41078 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55d7d2d458e0 <col:48, col:67>
|   `-ReturnStmt 0x55d7d2d458d0 <col:50, col:57>
|     `-MemberExpr 0x55d7d2d458a0 <col:57> 'const SelectSet' lvalue ->_selects 0x55d7d2d42ad8
|       `-CXXThisExpr 0x55d7d2d45890 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55d7d2d41138 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d41228 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55d7d2d41398 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55d7d2d412d8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55d7d2d41460 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55d7d2d418a8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55d7d2d41510 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55d7d2d41790 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55d7d2d41978 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55d7d2d41a38 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55d7d2d41af8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55d7d2d41c38 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55d7d2d41ba8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55d7d2d41d00 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55d7d2d41dc0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d41e80 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55d7d2d41f40 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55d7d2d42080 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55d7d2d41ff0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55d7d2d42148 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55d7d2d42208 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55d7d2d422a8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55d7d2d42370 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d423c0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d42410 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d42460 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d424b0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d42500 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d42550 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d425a0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d425f0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55d7d2d42640 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55d7d2d42690 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55d7d2d42788 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55d7d2d426f8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55d7d2d428d8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55d7d2d42848 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55d7d2d42980 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55d7d2d429b8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55d7d2d42a18 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55d7d2d42a78 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55d7d2d42ad8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55d7d2d42b58 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55d7d2d42bc8 <col:40, col:50> aligned
|   `-ConstantExpr 0x55d7d2d42ba8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55d7d2d42b28 <col:48> 'int' 64
|-FieldDecl 0x55d7d2d42c38 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55d7d2d42c98 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55d7d2d42d90 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55d7d2d42ea0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55d7d2d42f00 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55d7d2d42f80 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55d7d2d42ff0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55d7d2d42fd0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55d7d2d42f50 <col:44> 'int' 64
|-FieldDecl 0x55d7d2d43068 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55d7d2d430c8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55d7d2d43118 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55d7d2d43158 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55d7d2d431c0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55d7d2d43210 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55d7d2d433b8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55d7d2d43248 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55d7d2d432c8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55d7d2d434b8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55d7d2d434b8
|-CXXMethodDecl 0x55d7d2d435c0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55d7d2d43688 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55d7d2d459d8 <col:34, line:217:5>
|   `-ReturnStmt 0x55d7d2d459c8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55d7d2d459b0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55d7d2d45980 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55d7d2cd6c80
|         `-ImplicitCastExpr 0x55d7d2d45968 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55d7d2d45938 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55d7d2cd6c18
|             `-MemberExpr 0x55d7d2d45908 <col:16> 'const TaskLink' lvalue ->_task_link 0x55d7d2d429b8
|               `-CXXThisExpr 0x55d7d2d458f8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55d7d2d43748 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55d7d2d43808 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55d7d2d46100 <col:39, line:226:5>
|   |-DeclStmt 0x55d7d2d45c28 <line:223:9, col:68>
|   | `-VarDecl 0x55d7d2d45a00 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55d7d2d45be0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55d7d2d45bb0 <col:24, col:38> '<bound member function type>' .compare_swap 0x55d7d2985020
|   |     | `-MemberExpr 0x55d7d2d45a78 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55d7d2d42c38
|   |     |   `-CXXThisExpr 0x55d7d2d45a68 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55d7d2d45b68 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55d7d2d45b50 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55d7d2d45b28 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55d7d2d45b08 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55d7d2d45c10 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55d7d2d45b90 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55d7d2d45c70 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55d7d2d45c40 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55d7d2d45a00 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55d7d2d460e0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55d7d2d460b0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55d7d2d45d88 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55d7d2d45d58 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55d7d2d45d40 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55d7d2d45c98 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55d7d2d45a00 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55d7d2d45d18 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55d7d2d45d00 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55d7d2d45cd8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55d7d2d45cb8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55d7d2d45de8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55d7d2d45dc8 <col:60> 'int' 0
|       `-CallExpr 0x55d7d2d46010 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55d7d2d45ff8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55d7d2d45fd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d7d26fade0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55d7d2d46050 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55d7d2d45ed8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55d7d2d46068 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55d7d2d45f08 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55d7d2d46080 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55d7d2d45f48 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55d7d2d46098 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55d7d2d45fc0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55d7d2d45fa8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55d7d2d45f68 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55d7d2d43950 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55d7d2d438c0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55d7d2d43a18 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55d7d2d43ad8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55d7d2d43b98 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55d7d2d43c58 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55d7d2d43d18 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55d7d2d43e10 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55d7d2d43e70 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55d7d2d43f00 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55d7d2d442c8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55d7d2d442c8
| `-ParmVarDecl 0x55d7d2d443d8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55d7d2d44a98 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55d7d2d44a98
  `-ParmVarDecl 0x55d7d2d44ba8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cd6f90 prev 0x55d7d2bc02d0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55d7d2cd70c8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55d7d2cd7158 <col:33, col:39> col:33 public
|-EnumDecl 0x55d7d2cd7180 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55d7d2cd72c0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55d7d2cd72a0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55d7d2cd7280 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55d7d2cd7240 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55d7d2cd7260 <col:26> 'int' 16
| `-EnumConstantDecl 0x55d7d2cd7390 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55d7d2cd7370 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55d7d2cd7350 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55d7d2cd7310 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55d7d2cd7330 <col:47> 'int' 31
|-EnumDecl 0x55d7d2cd73e0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55d7d2cd7520 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55d7d2cd7640 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2cd7500 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55d7d2cd74e0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55d7d2cd74a0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55d7d2cd74c0 <col:29> 'int' 15
| `-EnumConstantDecl 0x55d7d2cd75f0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55d7d2cd7658 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2cd75d0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55d7d2cd75b0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55d7d2cd7570 <col:51> 'int' 1
|         `-IntegerLiteral 0x55d7d2cd7590 <col:54> 'int' 10
|-CXXConstructorDecl 0x55d7d2cd7828 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55d7d2cd7680 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55d7d2cd7700 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55d7d2cd7980 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55d7d2cd78f0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55d7d2cd7a78 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55d7d2cd7a78
|-CXXMethodDecl 0x55d7d2cd7c08 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55d7d2cdad08 <col:42, line:100:5>
|   `-ReturnStmt 0x55d7d2cdacf8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2cdace0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cdacb0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55d7d2cd9a30
|         `-CXXThisExpr 0x55d7d2cdaca0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55d7d2cd7cd0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55d7d2cdad88 <col:36, line:105:5>
|   `-ReturnStmt 0x55d7d2cdad78 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2cdad60 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cdad30 <col:16> 'void *const' lvalue ->_thunk 0x55d7d2cd9a98
|         `-CXXThisExpr 0x55d7d2cdad20 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55d7d2cd7d90 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55d7d2cdae08 <col:37, line:110:5>
|   `-ReturnStmt 0x55d7d2cdadf8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55d7d2cdade0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cdadb0 <col:16> 'Element *const' lvalue ->_owner 0x55d7d2cd9b58
|         `-CXXThisExpr 0x55d7d2cdada0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55d7d2cd7e50 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55d7d2cd7f18 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55d7d2cd7fd8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55d7d2cd8098 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55d7d2cdaef0 <col:35, line:137:5>
|   `-ReturnStmt 0x55d7d2cdaee0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55d7d2cdaea8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55d7d2cdae78 <col:16, col:24> '<bound member function type>' ->router 0x55d7d2bd2ae0
|         `-ImplicitCastExpr 0x55d7d2cdaec8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55d7d2cdae60 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55d7d2cdae30 <col:16> 'Element *const' lvalue ->_owner 0x55d7d2cd9b58
|               `-CXXThisExpr 0x55d7d2cdae20 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55d7d2cd8158 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55d7d2cd8318 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55d7d2cd8208 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55d7d2cd8280 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55d7d2cd8528 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55d7d2cd83d8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55d7d2cd8450 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55d7d2cd85f8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55d7d2cdb000 <col:35, line:181:5>
|   `-ReturnStmt 0x55d7d2cdaff0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55d7d2cdafd8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55d7d2cdafc0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55d7d2cdaf90 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55d7d2cd9668
|           `-MemberExpr 0x55d7d2cdaf48 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|             `-MemberExpr 0x55d7d2cdaf18 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55d7d2cd99b8
|               `-CXXThisExpr 0x55d7d2cdaf08 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55d7d2cd86b8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55d7d2cdb118 <col:30, line:192:5>
|   `-BinaryOperator 0x55d7d2cdb0f8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55d7d2cdb0a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55d7d2cd9668
|     | `-MemberExpr 0x55d7d2cdb058 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|     |   `-MemberExpr 0x55d7d2cdb028 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55d7d2cd99b8
|     |     `-CXXThisExpr 0x55d7d2cdb018 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cdb0e0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55d7d2cdb0d0 <col:32> 'bool' false
|-CXXMethodDecl 0x55d7d2cd8778 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55d7d2cdb468 <col:30, line:206:5>
|   |-BinaryOperator 0x55d7d2cdb210 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55d7d2cdb1b8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55d7d2cd9668
|   | | `-MemberExpr 0x55d7d2cdb170 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|   | |   `-MemberExpr 0x55d7d2cdb140 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55d7d2cd99b8
|   | |     `-CXXThisExpr 0x55d7d2cdb130 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cdb1f8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55d7d2cdb1e8 <col:32> 'bool' true
|   |-CallExpr 0x55d7d2cdb2b0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55d7d2cdb298 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d7d2cdb278 <col:9> 'void ()' lvalue Function 0x55d7d2cbc7f0 'click_fence' 'void ()'
|   `-IfStmt 0x55d7d2cdb450 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55d7d2cdb390 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55d7d2cdb360 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55d7d2cdb310 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55d7d2cd9dc8
|     | |   `-MemberExpr 0x55d7d2cdb2e0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55d7d2cd9e40
|     | |     `-CXXThisExpr 0x55d7d2cdb2d0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55d7d2cdb378 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55d7d2cdb340 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55d7d2cdb410 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55d7d2cdb3c0 <col:13> '<bound member function type>' ->complete_schedule 0x55d7d2cda840
|       | `-CXXThisExpr 0x55d7d2cdb3b0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55d7d2cdb438 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55d7d2cdb3f0 <col:31> 'int' 0
|-CXXMethodDecl 0x55d7d2cd8838 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55d7d2cdb590 <col:35, line:240:5>
|   `-BinaryOperator 0x55d7d2cdb570 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55d7d2cdb518 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55d7d2cd9668
|     | `-MemberExpr 0x55d7d2cdb4d0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|     |   `-MemberExpr 0x55d7d2cdb4a0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55d7d2cd99b8
|     |     `-CXXThisExpr 0x55d7d2cdb490 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cdb558 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55d7d2cdb548 <col:32> 'bool' true
|-CXXMethodDecl 0x55d7d2cd88f8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55d7d2cdb7a8 <col:37, line:253:5>
|   |-BinaryOperator 0x55d7d2cdb688 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55d7d2cdb630 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55d7d2cd9668
|   | | `-MemberExpr 0x55d7d2cdb5e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|   | |   `-MemberExpr 0x55d7d2cdb5b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55d7d2cd99b8
|   | |     `-CXXThisExpr 0x55d7d2cdb5a8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cdb670 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55d7d2cdb660 <col:32> 'bool' false
|   `-BinaryOperator 0x55d7d2cdb788 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55d7d2cdb730 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55d7d2cd96c8
|     | `-MemberExpr 0x55d7d2cdb6e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|     |   `-MemberExpr 0x55d7d2cdb6b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55d7d2cd99b8
|     |     `-CXXThisExpr 0x55d7d2cdb6a8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cdb770 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55d7d2cdb760 <col:41> 'bool' true
|-CXXMethodDecl 0x55d7d2cd89b8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55d7d2cdb928 <col:37, line:264:5>
|   |-BinaryOperator 0x55d7d2cdb8a8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55d7d2cdb850 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55d7d2cd96c8
|   | | `-MemberExpr 0x55d7d2cdb808 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55d7d2cd9788
|   | |   `-MemberExpr 0x55d7d2cdb7d8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55d7d2cd99b8
|   | |     `-CXXThisExpr 0x55d7d2cdb7c8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cdb890 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55d7d2cdb880 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55d7d2cdb908 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55d7d2cdb8d8 <col:9> '<bound member function type>' ->reschedule 0x55d7d2cd8778
|       `-CXXThisExpr 0x55d7d2cdb8c8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55d7d2cd8b00 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55d7d2cd8a70 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55d7d2cd8bd0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55d7d2cd8d18 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55d7d2cd8c88 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55d7d2cd8e68 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55d7d2cd8dd8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55d7d2cd8f30 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55d7d2cd8ff0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55d7d2cd9090 <col:53> "" ""
|-CXXMethodDecl 0x55d7d2cd9128 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55d7d2cd91c8 <col:47> "" ""
|-AccessSpecDecl 0x55d7d2cd9238 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55d7d2cd9278 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55d7d2cd92e0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55d7d2cd9330 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d7d2cd9448 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55d7d2cd94d8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55d7d2cd9608 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55d7d2cd9668 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55d7d2cd96c8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55d7d2d4e928 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55d7d2d4ea00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d4ea00
| | |-CXXConstructorDecl 0x55d7d2d4ecb8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55d7d2d4ecb8
| | | `-ParmVarDecl 0x55d7d2d4edc8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55d7d2d4ee68 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55d7d2d4ee68
| |   `-ParmVarDecl 0x55d7d2d4ef78 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55d7d2cd9788 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55d7d2cd97e8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55d7d2cd9788 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55d7d2cd9608 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55d7d2cd9840 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55d7d2cd9788 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55d7d2cd9668 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55d7d2cd9898 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55d7d2cd9788 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55d7d2cd96c8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55d7d2cd98f0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55d7d2d4e838 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55d7d2d4f198 <col:11>
| |-CXXConstructorDecl 0x55d7d2d4eb08 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55d7d2d4eb08
| | `-ParmVarDecl 0x55d7d2d4ec18 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55d7d2d4f018 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55d7d2d4f018
|   `-ParmVarDecl 0x55d7d2d4f128 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55d7d2cd99b8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55d7d2cd9a30 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55d7d2cd9a98 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55d7d2cd9af8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55d7d2cd9b58 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55d7d2cd9ba8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d7d2cd9cc8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55d7d2cd9d68 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55d7d2cd9dc8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55d7d2d44578 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55d7d2d44578
| | `-ParmVarDecl 0x55d7d2d44688 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55d7d2d44728 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55d7d2d44728
| | `-ParmVarDecl 0x55d7d2d44838 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55d7d2d448a8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55d7d2d448a8
| |-CXXMethodDecl 0x55d7d2d45128 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55d7d2d45128
| | `-ParmVarDecl 0x55d7d2d45238 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55d7d2d452a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55d7d2d452a8
| | `-ParmVarDecl 0x55d7d2d453b8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55d7d2d4f1f8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55d7d2d4f2d0 <col:11>
|-FieldDecl 0x55d7d2cd9e40 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55d7d2cd9f88 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55d7d2cd9ec8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55d7d2cda138 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55d7d2cda048 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55d7d2cda200 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55d7d2cda2c0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55d7d2cda380 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55d7d2cdba38 <col:41, line:355:5>
|   `-ReturnStmt 0x55d7d2cdba28 <line:354:9, col:38>
|     `-BinaryOperator 0x55d7d2cdba08 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55d7d2cdb9d8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2cdb988 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55d7d2cd9dc8
|       |   `-MemberExpr 0x55d7d2cdb958 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55d7d2cd9e40
|       |     `-CXXThisExpr 0x55d7d2cdb948 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55d7d2cdb9f0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55d7d2cdb9b8 <col:38> 'int' 0
|-CXXMethodDecl 0x55d7d2cda440 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55d7d2cda580 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55d7d2cda4f0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55d7d2cda6f8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55d7d2cda638 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55d7d2cda840 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55d7d2cda7b0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55d7d2cda908 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55d7d2cdaad0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55d7d2cda9b8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55d7d2cdaa38 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55d7d2cdabd0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55d7d2cdac60 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cc7158 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55d7d2cc7288 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55d7d2cc7d78 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.20 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2cc39f8 prev 0x55d7d2bc0380 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d7d2cc3af0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55d7d2cc3b80 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55d7d2cc3be0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55d7d2cc3c88 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55d7d2cc3da8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55d7d2cc3f48 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55d7d2cc3e88 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55d7d2cc4198 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55d7d2cc4008 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55d7d2cc4088 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55d7d2cc4328 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55d7d2cc4260 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55d7d2cc44a8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55d7d2cc43e8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55d7d2cc4658 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55d7d2cc4598 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55d7d2cc4750 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55d7d2cc7f50 <col:21, line:58:5>
|   `-IfStmt 0x55d7d2cc7f38 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55d7d2cc7ea0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55d7d2cc7e70 <col:6> '<bound member function type>' ->scheduled 0x55d7d2cc4fa8
|     |   `-ImplicitCastExpr 0x55d7d2cc7ec0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55d7d2cc7e60 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55d7d2cc7f18 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55d7d2cc7ee8 <col:6> '<bound member function type>' ->unschedule 0x55d7d2cc6600
|         `-CXXThisExpr 0x55d7d2cc7ed8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc4850 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55d7d2cc80f0 <col:26, line:65:5>
|   |-BinaryOperator 0x55d7d2cc8010 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55d7d2cc7fa8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55d7d2cc7288
|   | | `-MemberExpr 0x55d7d2cc7f78 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55d7d2cc7348
|   | |   `-CXXThisExpr 0x55d7d2cc7f68 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cc7ff8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d7d2cc7fd8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55d7d2cc77a8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55d7d2cc80d0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55d7d2cc8040 <col:2> 'void *' lvalue ->_thunk 0x55d7d2cc73c8
|     | `-CXXThisExpr 0x55d7d2cc8030 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55d7d2cc80a8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55d7d2cc8070 <col:20> 'int' 1
|-CXXMethodDecl 0x55d7d2cc4990 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55d7d2cc4900 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55d7d2cc8250 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55d7d2cc8140 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55d7d2cc8110 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55d7d2cc4900 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55d7d2cc8230 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55d7d2cc8200 <col:2> '<bound member function type>' ->assign 0x55d7d2cc4850
|       `-CXXThisExpr 0x55d7d2cc81f0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc4b60 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55d7d2cc4a48 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55d7d2cc4ac8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55d7d2cc83d0 <col:58, line:79:5>
|   |-BinaryOperator 0x55d7d2cc8318 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55d7d2cc82b0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55d7d2cc7288
|   | | `-MemberExpr 0x55d7d2cc8280 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55d7d2cc7348
|   | |   `-CXXThisExpr 0x55d7d2cc8270 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cc8300 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d7d2cc82e0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55d7d2cc4a48 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55d7d2cc83b0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55d7d2cc8348 <col:2> 'void *' lvalue ->_thunk 0x55d7d2cc73c8
|     | `-CXXThisExpr 0x55d7d2cc8338 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cc8398 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55d7d2cc8378 <col:11> 'void *' lvalue ParmVar 0x55d7d2cc4ac8 'user_data' 'void *'
|-CXXMethodDecl 0x55d7d2cc4cb0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55d7d2cc4c20 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55d7d2cc8568 <col:35, line:87:5>
|   |-BinaryOperator 0x55d7d2cc8498 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55d7d2cc8430 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55d7d2cc7288
|   | | `-MemberExpr 0x55d7d2cc8400 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55d7d2cc7348
|   | |   `-CXXThisExpr 0x55d7d2cc83f0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cc8480 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d7d2cc8460 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55d7d2cc7980 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55d7d2cc8548 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55d7d2cc84c8 <col:2> 'void *' lvalue ->_thunk 0x55d7d2cc73c8
|     | `-CXXThisExpr 0x55d7d2cc84b8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cc8530 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55d7d2cc8518 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55d7d2cc84f8 <col:11> 'Element *' lvalue ParmVar 0x55d7d2cc4c20 'element' 'Element *'
|-CXXMethodDecl 0x55d7d2cc4df8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55d7d2cc4d68 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55d7d2cc8700 <col:29, line:94:5>
|   |-BinaryOperator 0x55d7d2cc8630 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55d7d2cc85c8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55d7d2cc7288
|   | | `-MemberExpr 0x55d7d2cc8598 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55d7d2cc7348
|   | |   `-CXXThisExpr 0x55d7d2cc8588 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55d7d2cc8618 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d7d2cc85f8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55d7d2cc7b58 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55d7d2cc86e0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55d7d2cc8660 <col:2> 'void *' lvalue ->_thunk 0x55d7d2cc73c8
|     | `-CXXThisExpr 0x55d7d2cc8650 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55d7d2cc86c8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55d7d2cc86b0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55d7d2cc8690 <col:11> 'Task *' lvalue ParmVar 0x55d7d2cc4d68 'task' 'Task *'
|-CXXMethodDecl 0x55d7d2cc4ee8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55d7d2cc87e0 <col:37, line:100:5>
|   `-ReturnStmt 0x55d7d2cc87d0 <line:99:2, col:19>
|     `-BinaryOperator 0x55d7d2cc87b0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55d7d2cc8780 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2cc8730 <col:9> 'Element *const' lvalue ->_owner 0x55d7d2cc7428
|       |   `-CXXThisExpr 0x55d7d2cc8720 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55d7d2cc8798 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55d7d2cc8760 <col:19> 'int' 0
|-CXXMethodDecl 0x55d7d2cc4fa8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55d7d2cc88a0 <col:35, line:105:5>
|   `-ReturnStmt 0x55d7d2cc8890 <line:104:2, col:23>
|     `-BinaryOperator 0x55d7d2cc8870 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55d7d2cc8858 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55d7d2cc8808 <col:9> 'const int' lvalue ->_schedpos1 0x55d7d2cc70a8
|       |   `-CXXThisExpr 0x55d7d2cc87f8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55d7d2cc8838 <col:23> 'int' 0
|-CXXMethodDecl 0x55d7d2cc5068 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55d7d2cc8908 <col:51, line:118:5>
|   `-ReturnStmt 0x55d7d2cc88f8 <line:117:2, col:9>
|     `-MemberExpr 0x55d7d2cc88c8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|       `-CXXThisExpr 0x55d7d2cc88b8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc5128 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55d7d2cc8e60 <col:37, line:136:5>
|   `-IfStmt 0x55d7d2cc8e38 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55d7d2cc89c8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55d7d2cc89b0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55d7d2cc8990 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55d7d2cc8960 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55d7d2b52458
|     |       `-MemberExpr 0x55d7d2cc8930 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|     |         `-CXXThisExpr 0x55d7d2cc8920 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55d7d2cc8da8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55d7d2cc8d90 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55d7d2cc8d60 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55d7d2cc8d48 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55d7d2cc8d10 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55d7d2cc8cf8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55d7d2cc8cd8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55d7d2b80c30 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55d7d2cc8c78 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55d7d2cc8c60 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55d7d2cc8b88 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55d7d2cc8b70 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55d7d2cc8b50 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55d7d2b808f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55d7d2cc8af0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55d7d2cc89f0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|     |         |     |   `-CXXThisExpr 0x55d7d2cc89e0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55d7d2cc8b38 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55d7d2cc8b20 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55d7d2cc8ad0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55d7d2cc8ab8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55d7d2cc8a58 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55d7d2b73f50 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55d7d2cc8cc0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55d7d2cc8ca8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55d7d2cc8c40 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55d7d2cc8c28 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55d7d2cc8bf8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55d7d29cf4a0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55d7d2cc8e28 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55d7d2cc8df8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55d7d2cc8dc8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|           `-CXXThisExpr 0x55d7d2cc8db8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc51e8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55d7d2cc8f48 <col:35, line:141:5>
|   `-ReturnStmt 0x55d7d2cc8f38 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55d7d2cc8f00 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55d7d2cc8ed0 <col:9, col:17> '<bound member function type>' ->router 0x55d7d2bd2ae0
|         `-ImplicitCastExpr 0x55d7d2cc8f20 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55d7d2cc8eb8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55d7d2cc8e88 <col:9> 'Element *const' lvalue ->_owner 0x55d7d2cc7428
|               `-CXXThisExpr 0x55d7d2cc8e78 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc52a8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55d7d2cc8fc8 <col:37, line:146:5>
|   `-ReturnStmt 0x55d7d2cc8fb8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2cc8fa0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cc8f70 <col:9> 'Element *const' lvalue ->_owner 0x55d7d2cc7428
|         `-CXXThisExpr 0x55d7d2cc8f60 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc5368 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55d7d2cc9048 <col:41, line:151:5>
|   `-ReturnStmt 0x55d7d2cc9038 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55d7d2cc9020 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55d7d2cc8ff0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55d7d2cc7488
|         `-CXXThisExpr 0x55d7d2cc8fe0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc5430 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55d7d2cc5628 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55d7d2cc54e0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55d7d2cc5558 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d7d2cc7d68 <col:50> 'bool' false
|-CXXMethodDecl 0x55d7d2cc57a8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55d7d2cc56e8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55d7d2cc58f0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55d7d2cc5860 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2cc5a38 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55d7d2cc59a8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2cc5b80 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55d7d2cc5af0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2cc5cc8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55d7d2cc5c38 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2cc5d90 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55d7d2cc91b0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55d7d2cc9198 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55d7d2cc9140 <col:2, col:47> 'void'
|       |-MemberExpr 0x55d7d2cc9070 <col:2> '<bound member function type>' ->schedule_at_steady 0x55d7d2cc58f0
|       | `-CXXThisExpr 0x55d7d2cc9060 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cc9180 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55d7d2cc9168 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55d7d2cc9120 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55d7d2cc9108 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55d7d2cc90d8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55d7d29cf4a0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55d7d2cc5ed0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55d7d2cc5e40 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2cc6018 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc5f88 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2cc9338 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55d7d2cc9320 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55d7d2cc92c8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55d7d2cc91d8 <col:2> '<bound member function type>' ->schedule_after 0x55d7d2cc5ed0
|       | `-CXXThisExpr 0x55d7d2cc91c8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cc9308 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55d7d2cc92f0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55d7d2cc9288 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55d7d2cc9258 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55d7d2cc9218 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2cc5f88 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55d7d2cc9270 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55d7d2cc9238 <col:38> 'int' 0
|-CXXMethodDecl 0x55d7d2cc6160 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc60d0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2cc95a8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55d7d2cc9590 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55d7d2cc9538 <col:2, col:49> 'void'
|       |-MemberExpr 0x55d7d2cc9360 <col:2> '<bound member function type>' ->schedule_after 0x55d7d2cc5ed0
|       | `-CXXThisExpr 0x55d7d2cc9350 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cc9578 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55d7d2cc9560 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55d7d2cc94e0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55d7d2cc94c8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55d7d2cc9438 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55d7d2b54248 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55d7d2cc9520 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55d7d2cc9508 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55d7d2cc9418 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2cc60d0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2cc62a8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55d7d2cc6218 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55d7d2cc9788 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55d7d2cc9770 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55d7d2cc9718 <col:2, col:38> 'void'
|       |-MemberExpr 0x55d7d2cc95d0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55d7d2cc58f0
|       | `-CXXThisExpr 0x55d7d2cc95c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cc9758 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55d7d2cc9740 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55d7d2cc96e0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55d7d2cc96c8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55d7d2cc96a8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55d7d2b808f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55d7d2cc9678 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55d7d2cc9660 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55d7d2cc9610 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|             |     `-CXXThisExpr 0x55d7d2cc9600 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55d7d2cc9640 <col:33> 'const Timestamp' lvalue ParmVar 0x55d7d2cc6218 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55d7d2cc63f0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc6360 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2cc9a60 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55d7d2cc9a48 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55d7d2cc99f0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55d7d2cc97b0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55d7d2cc58f0
|       | `-CXXThisExpr 0x55d7d2cc97a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cc9a30 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55d7d2cc9a18 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55d7d2cc99b0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55d7d2cc98e8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55d7d2cc98d0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55d7d2cc9860 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55d7d2cc9830 <col:31, col:41> '<bound member function type>' .sec 0x55d7d29d0f98
|             | |     `-ImplicitCastExpr 0x55d7d2cc9880 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55d7d2cc9800 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|             | |         `-CXXThisExpr 0x55d7d2cc97f0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55d7d2cc98b8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55d7d2cc9898 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2cc6360 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55d7d2cc9978 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55d7d2cc9948 <col:60, col:70> '<bound member function type>' .subsec 0x55d7d29d1690
|                 `-ImplicitCastExpr 0x55d7d2cc9998 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55d7d2cc9918 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|                     `-CXXThisExpr 0x55d7d2cc9908 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55d7d2cc6538 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc64a8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55d7d2cd4970 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55d7d2cd4958 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55d7d2cd4900 <col:2, col:65> 'void'
|       |-MemberExpr 0x55d7d2cc9a88 <col:2> '<bound member function type>' ->schedule_at_steady 0x55d7d2cc58f0
|       | `-CXXThisExpr 0x55d7d2cc9a78 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cd4940 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55d7d2cd4928 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55d7d2cd48c8 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55d7d2cd48b0 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55d7d2cd4890 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55d7d2b808f0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55d7d2cd4830 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55d7d2cc9c40 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55d7d2cc9ac8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|             |     `-CXXThisExpr 0x55d7d2cc9ab8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55d7d2cd4878 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55d7d2cd4860 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55d7d2cc9be8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55d7d2cc9bd0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55d7d2cc9ba0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55d7d2b54248 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55d7d2cc9c28 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55d7d2cc9c10 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55d7d2cc9b80 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55d7d2cc64a8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d7d2cc6600 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55d7d2cc66c0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55d7d2cd4e30 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55d7d2cd49c8 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55d7d2cd4998 <col:2> '<bound member function type>' ->unschedule 0x55d7d2cc6600
|   |   `-CXXThisExpr 0x55d7d2cd4988 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55d7d2cd4e18 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55d7d2cd4de0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55d7d2cd4dc8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2cd4a80 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55d7d2868538 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55d7d2cd49f8 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55d7d2cc7108
|       | `-CXXThisExpr 0x55d7d2cd49e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55d7d2cd4a68 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55d7d2cd4a38 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55d7d2cc6780 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55d7d2cd5188 <col:42, line:310:5>
|   |-IfStmt 0x55d7d2cd4fd0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55d7d2cd4f00 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55d7d2cd4ee8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55d7d2cd4e88 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55d7d2b723c0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55d7d2cd4fc0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55d7d2cd4fa8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55d7d2cd4f78 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55d7d2cd4f60 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55d7d2cd4f30 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55d7d2cd5178 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55d7d2cd5160 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55d7d2cd5130 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55d7d2cd5118 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55d7d2cd50d8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55d7d2cd50c0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55d7d2cd5090 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55d7d2b54560 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55d7d2cd5100 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55d7d2cd5070 <col:30> 'int' 500
|-CXXMethodDecl 0x55d7d2cc68c0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc6830 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2cc6968 <col:69> "" ""
|-CXXMethodDecl 0x55d7d2cc6a78 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc69e8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2cc6b20 <col:70> "" ""
|-CXXMethodDecl 0x55d7d2cc6c30 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc6ba0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2cc6cd8 <col:71> "" ""
|-CXXMethodDecl 0x55d7d2cc6de8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55d7d2cc6d58 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d7d2cc6e90 <col:72> "" ""
|-EnumDecl 0x55d7d2cc6f00 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55d7d2cc7000 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55d7d2cc7050 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d7d2cc6fe0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55d7d2cc6fc0 <col:25> 'int' 1
|-AccessSpecDecl 0x55d7d2cc7068 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55d7d2cc70a8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55d7d2cc7108 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55d7d2cc7158 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55d7d2cc7288 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55d7d2cc7d78 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55d7d2cc7348 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55d7d2cc73c8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55d7d2cc7428 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55d7d2cc7488 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55d7d2cc75d8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55d7d2cc74e8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55d7d2cc77a8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55d7d2cc7690 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55d7d2cc7710 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55d7d2cc7980 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55d7d2cc7868 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55d7d2cc78e8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55d7d2cc7b58 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55d7d2cc7a40 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55d7d2cc7ac0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55d7d2cc7d28 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.20, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2cdfed0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55d7d2e983c8 <line:167:18>
|-CXXRecordDecl 0x55d7d2e98488 prev 0x55d7d2cdfed0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55d7d2e98598 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class StringArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class String> (empty)
         0 |   class StringArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c8e598 <../dummy_inc/click/args.hh:1345:1, line:1349:1> line:1345:7 referenced class StringArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2c8e6b8 <col:1, col:7> col:7 implicit class StringArg
|-AccessSpecDecl 0x55d7d2c8e748 <col:19, col:25> col:19 public
|-CXXMethodDecl 0x55d7d2c8e940 <line:1346:5, line:1348:5> line:1346:17 used parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55d7d2c8e780 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55d7d2c8e7f8 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x55d7d2c8e870 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55d7d2c8ea10 <col:79> 'const ArgContext' lvalue Var 0x55d7d2c721c8 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55d7d2c8ebb0 <col:91, line:1348:5>
|   `-ReturnStmt 0x55d7d2c8eba0 <line:1347:9, col:41>
|     `-CallExpr 0x55d7d2c8eb50 <col:16, col:41> 'bool'
|       |-ImplicitCastExpr 0x55d7d2c8eb38 <col:16> 'bool (*)(const String &, String *, String *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d7d2c8eaf0 <col:16> 'bool (const String &, String *, String *)' lvalue Function 0x55d7d2c8e4e0 'cp_string' 'bool (const String &, String *, String *)'
|       |-DeclRefExpr 0x55d7d2c8ea78 <col:26> 'const String' lvalue ParmVar 0x55d7d2c8e780 'str' 'const String &'
|       |-UnaryOperator 0x55d7d2c8eab8 <col:31, col:32> 'String *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55d7d2c8ea98 <col:32> 'String' lvalue ParmVar 0x55d7d2c8e7f8 'result' 'String &'
|       `-ImplicitCastExpr 0x55d7d2c8eb88 <col:40> 'String *' <NullToPointer>
|         `-IntegerLiteral 0x55d7d2c8ead0 <col:40> 'int' 0
|-CXXConstructorDecl 0x55d7d2ea0ff8 <line:1345:7> col:7 implicit constexpr StringArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55d7d2ea10d0 <col:7> col:7 implicit ~StringArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2ea1208 <col:7> col:7 implicit constexpr StringArg 'void (const StringArg &)' inline default trivial noexcept-unevaluated 0x55d7d2ea1208
| `-ParmVarDecl 0x55d7d2ea1318 <col:7> col:7 'const StringArg &'
`-CXXConstructorDecl 0x55d7d2ea13b8 <col:7> col:7 implicit used constexpr StringArg 'void (StringArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55d7d2ea14c8 <col:7> col:7 'StringArg &&'
  `-CompoundStmt 0x55d7d2ea2120 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.StringArg = type { i8 }
  NonVirtualBaseLLVMType:%class.StringArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2c8ebf0 <../dummy_inc/click/args.hh:1351:1, col:58> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'StringArg'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55d7d2c8ee48 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55d7d2ea0f08 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2ea1538 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<String> &)' inline default trivial noexcept-unevaluated 0x55d7d2ea1538
| `-ParmVarDecl 0x55d7d2ea1648 <col:19> col:19 'const DefaultArg<String> &'
|-CXXConstructorDecl 0x55d7d2ea16e8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<String> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2ea17f8 <col:19> col:19 used 'DefaultArg<String> &&'
| |-CXXCtorInitializer 'StringArg'
| | `-CXXConstructExpr 0x55d7d2ea2130 <col:19> 'StringArg' 'void (StringArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55d7d2ea2100 <col:19> 'StringArg' xvalue <UncheckedDerivedToBase (StringArg)>
| |     `-CXXStaticCastExpr 0x55d7d2ea20d0 <col:19> 'DefaultArg<String>' xvalue static_cast<struct DefaultArg<class String> &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2ea20a0 <col:19> 'DefaultArg<String>' lvalue ParmVar 0x55d7d2ea17f8 '' 'DefaultArg<String> &&'
| `-CompoundStmt 0x55d7d2ea21a0 <col:19>
`-CXXDestructorDecl 0x55d7d2ea1898 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2ea4098 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55d7d2ea4498 prev 0x55d7d2ea4098 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x55d7d2ea4690 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x55d7d2ea4598 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x55d7d2ea55d8 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x55d7d2ea4810 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x55d7d2ea5598 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d2ea5558 <col:20> 'String *' lvalue ParmVar 0x55d7d2ea4598 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x55d7d2ea4870 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x55d7d2ea5638 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x55d7d2c71ff0 <line:853:25, line:854:9>
|-CXXMethodDecl 0x55d7d2ea4750 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x55d7d2c4a410 Slot::store 'void ()' ]
| `-CompoundStmt 0x55d7d2ea5d78 <col:22, line:857:9>
|   `-CallExpr 0x55d7d2ea5d30 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x55d7d2ea5d18 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55d7d2ea5c98 <col:13> 'void (String &, const String &)' lvalue Function 0x55d7d2ea5b78 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x55d7d2920818 'assign_consume')
|     |-UnaryOperator 0x55d7d2ea57c8 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x55d7d2ea57b0 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x55d7d2ea5780 <col:29> 'String *' lvalue ->_ptr 0x55d7d2ea4810
|     |     `-CXXThisExpr 0x55d7d2ea5770 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x55d7d2ea5d60 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x55d7d2ea57f0 <col:35> 'String':'String' lvalue ->_slot 0x55d7d2ea4870
|         `-CXXThisExpr 0x55d7d2ea57e0 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x55d7d2ea4810 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x55d7d2ea4870 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x55d7d2ea48e8 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55d7d2ea48e8
| `-ParmVarDecl 0x55d7d2ea49f8 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x55d7d2ea4a98 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55d7d2ea4a98
| `-ParmVarDecl 0x55d7d2ea4ba8 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x55d7d2ea4c48 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55d7d2ea4c48
| `-ParmVarDecl 0x55d7d2ea4d58 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x55d7d2ea4dc8 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55d7d2ea4dc8
| `-ParmVarDecl 0x55d7d2ea4ed8 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x55d7d2ea4f60 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x55d7d2c4a310 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x55d7d2ea56a0 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c7c550 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d7d2c7c668 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55d7d2c7c6f8 <col:16, col:22> col:16 public
|-EnumDecl 0x55d7d2c7c720 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55d7d2c7c820 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55d7d2c7ca70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c7c800 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55d7d2c7c7e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55d7d2c7c8b0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55d7d2c7ca88 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c7c890 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55d7d2c7c870 <col:24> 'int' 22
| |-EnumConstantDecl 0x55d7d2c7c940 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55d7d2c7caa0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c7c920 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55d7d2c7c900 <col:24> 'int' 34
| |-EnumConstantDecl 0x55d7d2c7c9d0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55d7d2c7cab8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d7d2c7c9b0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55d7d2c7c990 <col:25> 'int' 95
| `-EnumConstantDecl 0x55d7d2c7ca20 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55d7d2c7e4c0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d7d2c7e8f8 <col:7>
|-CXXConstructorDecl 0x55d7d2c7e5c8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55d7d2c7e5c8
| `-ParmVarDecl 0x55d7d2c7e6d8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55d7d2c7e778 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2c7e888 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55d7d2eb4fb0 <col:7>
`-CXXDestructorDecl 0x55d7d2c809f8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d7d2c7cae8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55d7d2c7cc48 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55d7d2c7ccd8 <col:32, col:38> col:32 public
|-TypedefDecl 0x55d7d2c7cd10 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55d7d27b4330 'uint32_t' sugar
|   |-Typedef 0x55d7d26c34c8 'uint32_t'
|   `-TypedefType 0x55d7d269c5a0 '__uint32_t' sugar
|     |-Typedef 0x55d7d269c198 '__uint32_t'
|     `-BuiltinType 0x55d7d265a620 'unsigned int'
|-CXXConstructorDecl 0x55d7d2c7ce58 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55d7d2c7cd80 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55d7d2c7e338 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55d7d2c7e908 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55d7d2c7dbf0 'base' 'int'
| | `-ImplicitCastExpr 0x55d7d2c7e3d8 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55d7d2c7e398 <col:16> 'int' lvalue ParmVar 0x55d7d2c7cd80 'b' 'int'
| `-CompoundStmt 0x55d7d2c7e978 <col:19, line:1046:5>
|-CXXMethodDecl 0x55d7d2c7d350 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55d7d2c7cf20 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55d7d2c7cfa0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55d7d2c7d018 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55d7d2c7d098 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55d7d2c7d158 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55d7d2c7d1d8 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55d7d2c7d7a8 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55d7d2c7d420 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55d7d2c7d708 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55d7d2c7d4c8 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x55d7d2c7d568 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x55d7d2c7d5e0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55d7d2c7e358 <col:82> 'const ArgContext' lvalue Var 0x55d7d2c721c8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55d7d2c7f8a8 <col:94, line:1067:5>
| |   |-DeclStmt 0x55d7d2c7eb08 <line:1054:9, col:64>
| |   | `-VarDecl 0x55d7d2c7e998 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x55d7d2c7eac0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x55d7d2c7ed28 <line:1055:9, col:91>
| |   | `-VarDecl 0x55d7d2c7eb38 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x55d7d2c7ed00 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x55d7d2c7ece0 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x55d7d2c7ec90 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x55d7d2c7ec70 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x55d7d2c7ec18 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x55d7d2c7ebc8 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x55d7d2c7ebf8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x55d7d2c7ec58 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x55d7d2c7ec38 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x55d7d2c7ecc0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x55d7d2c7ee88 <line:1056:9, col:27>
| |   | `-VarDecl 0x55d7d2c7ee20 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x55d7d2c7f2d0 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x55d7d2c7f200 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x55d7d2c7f180 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55d7d2b7e318 0x55d7d29c78f8 0x55d7d29c75d0 0x55d7d29b7da0 0x55d7d29b7a50 0x55d7d29b7340 0x55d7d2989cb0 0x55d7d2917180
| |   | | |-CallExpr 0x55d7d2c7f0c0 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x55d7d2c7eeb0 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x55d7d2c7ef60 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55d7d2c7ef30 <col:19, col:23> '<bound member function type>' .begin 0x55d7d29a6fa8
| |   | | | |   `-DeclRefExpr 0x55d7d2c7ef10 <col:19> 'const String' lvalue ParmVar 0x55d7d2c7d4c8 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x55d7d2c7efd0 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55d7d2c7efa0 <col:32, col:36> '<bound member function type>' .end 0x55d7d29a71c0
| |   | | | |   `-DeclRefExpr 0x55d7d2c7ef80 <col:32> 'const String' lvalue ParmVar 0x55d7d2c7d4c8 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x55d7d2c7eff0 <col:43> 'const bool' lvalue Var 0x55d7d2c7e998 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x55d7d2c7f058 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x55d7d2c7f038 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x55d7d2c7f080 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55d7d2c7ee20 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x55d7d2c7f0a0 <col:73> 'const int' lvalue Var 0x55d7d2c7eb38 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x55d7d2c7f160 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x55d7d2c7f130 <col:16, col:20> '<bound member function type>' .end 0x55d7d29a71c0
| |   | |     `-DeclRefExpr 0x55d7d2c7f110 <col:16> 'const String' lvalue ParmVar 0x55d7d2c7d4c8 'str' 'const String &'
| |   | `-BinaryOperator 0x55d7d2c7f2b0 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x55d7d2c7f248 <col:13> 'int' lvalue ->status 0x55d7d2c7dc58
| |   |   | `-CXXThisExpr 0x55d7d2c7f238 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x55d7d2c7f298 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x55d7d2c7f278 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c8b0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x55d7d2c7f520 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x55d7d2c7f408 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x55d7d2c7f3f0 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x55d7d2c7f3d8 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x55d7d2c7f2f8 <col:13> 'int' lvalue ->status 0x55d7d2c7dc58
| |   | | |     `-CXXThisExpr 0x55d7d2c7f2e8 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x55d7d2c7f3b8 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x55d7d2c7f388 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x55d7d2c7f338 <col:23> 'int' lvalue ->status 0x55d7d2c7dc58
| |   | |   |   `-CXXThisExpr 0x55d7d2c7f328 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x55d7d2c7f3a0 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x55d7d2c7f368 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c940 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x55d7d2c7f500 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x55d7d2c7f4a0 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x55d7d2c7f448 <col:13, col:18> '<bound member function type>' .error 0x55d7d2b429d0
| |   |   | | `-DeclRefExpr 0x55d7d2c7f428 <col:13> 'const ArgContext' lvalue ParmVar 0x55d7d2c7d5e0 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x55d7d2c7f4c8 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x55d7d2c7f478 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x55d7d2c7f4f0 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x55d7d2c7f4e0 <col:20> 'bool' false
| |   |-DeclStmt 0x55d7d2c7f6f8 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x55d7d2c7f6a0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x55d7d2c7f630 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x55d7d2c7f858 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x55d7d2c7f710 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55d7d294b148
| |   | |-DeclRefExpr 0x55d7d2c7f758 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55d7d2c7ee20 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x55d7d2c7f828 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x55d7d2c7f7a0 <col:64> 'V' lvalue ParmVar 0x55d7d2c7d568 'result' 'V &'
| |   `-ReturnStmt 0x55d7d2c7f898 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x55d7d2c7f888 <col:16> 'bool' true
| `-CXXMethodDecl 0x55d7d2e99b28 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55d7d2e99900 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x55d7d2e999d8 <col:46, col:49> col:49 used result 'int &'
|   |-ParmVarDecl 0x55d7d2e99a40 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x55d7d2e9b8e0 <col:94, line:1067:5>
|     |-DeclStmt 0x55d7d2e9a338 <line:1054:9, col:64>
|     | `-VarDecl 0x55d7d2e9a158 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x55d7d2e9a2c8 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x55d7d2e9a298 <col:36, col:55> 'const bool' lvalue Var 0x55d7d293b0b8 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x55d7d2e9a518 <line:1055:9, col:91>
|     | `-VarDecl 0x55d7d2e9a350 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55d7d2e9a498 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x55d7d2e9a480 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x55d7d2e9a460 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x55d7d2e9a440 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x55d7d2e9a420 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x55d7d2e9a3e8 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x55d7d2e9a3c8 <col:36, col:44> 'unsigned long' sizeof 'int':'int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x55d7d2c7ebf8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x55d7d2e9a408 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x55d7d2c7ec38 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x55d7d2c7ecc0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55d7d2e9a6d8 <line:1056:9, col:27>
|     | `-VarDecl 0x55d7d2e9a670 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x55d7d2e9ab60 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x55d7d2e9ab08 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x55d7d2e9a9c0 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x55d7d2e9a990 <col:13> '<bound member function type>' ->parse 0x55d7d2c7d350
|     | | | | `-CXXThisExpr 0x55d7d2e9a980 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x55d7d2e9a820 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55d7d2e9a7f0 <col:19, col:23> '<bound member function type>' .begin 0x55d7d29a6fa8
|     | | | |   `-DeclRefExpr 0x55d7d2e9a7d0 <col:19> 'const String' lvalue ParmVar 0x55d7d2e99900 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55d7d2e9a890 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55d7d2e9a860 <col:32, col:36> '<bound member function type>' .end 0x55d7d29a71c0
|     | | | |   `-DeclRefExpr 0x55d7d2e9a840 <col:32> 'const String' lvalue ParmVar 0x55d7d2e99900 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x55d7d2e9aa30 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x55d7d2e9aa10 <col:43> 'const bool' lvalue Var 0x55d7d2e9a158 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x55d7d2e9a918 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x55d7d2e9a900 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x55d7d2e9a8e0 <col:58, col:66> 'unsigned long' sizeof 'int':'int'
|     | | | |-ImplicitCastExpr 0x55d7d2e9aa48 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x55d7d2e9a940 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x55d7d2e9a670 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x55d7d2e9aa80 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x55d7d2e9aa60 <col:73> 'const int' lvalue Var 0x55d7d2e9a350 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x55d7d2e9aae8 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55d7d2e9aab8 <col:16, col:20> '<bound member function type>' .end 0x55d7d29a71c0
|     | |     `-DeclRefExpr 0x55d7d2e9aa98 <col:16> 'const String' lvalue ParmVar 0x55d7d2e99900 'str' 'const String &'
|     | `-BinaryOperator 0x55d7d2e9ab40 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55d7d2c7f248 <col:13> 'int' lvalue ->status 0x55d7d2c7dc58
|     |   | `-CXXThisExpr 0x55d7d2c7f238 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55d7d2e9ab28 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55d7d2c7f278 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c8b0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55d7d2e9acd8 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55d7d2e9abf8 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55d7d2e9abe0 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55d7d2e9abc8 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55d7d2c7f2f8 <col:13> 'int' lvalue ->status 0x55d7d2c7dc58
|     | | |     `-CXXThisExpr 0x55d7d2c7f2e8 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55d7d2e9aba8 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55d7d2e9ab78 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55d7d2c7f338 <col:23> 'int' lvalue ->status 0x55d7d2c7dc58
|     | |   |   `-CXXThisExpr 0x55d7d2c7f328 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55d7d2e9ab90 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55d7d2c7f368 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c940 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55d7d2e9acb8 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55d7d2e9ac68 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55d7d2e9ac38 <col:13, col:18> '<bound member function type>' .error 0x55d7d2b429d0
|     |   | | `-DeclRefExpr 0x55d7d2e9ac18 <col:13> 'const ArgContext' lvalue ParmVar 0x55d7d2e99a40 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55d7d2e9ac90 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55d7d2c7f478 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55d7d2e9aca8 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55d7d2c7f4e0 <col:20> 'bool' false
|     |-DeclStmt 0x55d7d2e9b218 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55d7d2e9b1c0 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<int>::type':'unsigned int'
|     |   `-ElaboratedType 0x55d7d2e9b170 'typename make_unsigned<int>::type' sugar
|     |     `-TypedefType 0x55d7d2e9b150 'make_unsigned<int>::type' sugar
|     |       |-Typedef 0x55d7d2e9b0e0 'type'
|     |       `-ElaboratedType 0x55d7d2e9b090 'typename integer_traits<int>::unsigned_type' sugar
|     |         `-TypedefType 0x55d7d2e9b070 'integer_traits<int>::unsigned_type' sugar
|     |           |-Typedef 0x55d7d293b210 'unsigned_type'
|     |           `-BuiltinType 0x55d7d265a620 'unsigned int'
|     |-CallExpr 0x55d7d2e9b870 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x55d7d2e9b858 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55d7d2e9b7d8 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x55d7d2e9b6b8 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x55d7d294b148 'extract_integer')
|     | |-ImplicitCastExpr 0x55d7d2e9b8b8 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x55d7d2e9b8a0 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x55d7d2e9b278 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x55d7d2e9a670 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x55d7d2e9b348 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <LValueBitCast>
|     |   `-DeclRefExpr 0x55d7d2e9b2f8 <col:64> 'int':'int' lvalue ParmVar 0x55d7d2e999d8 'result' 'int &'
|     `-ReturnStmt 0x55d7d2e9b8d0 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55d7d2c7f888 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55d7d2c7db68 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55d7d2c7d818 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55d7d2c7dac8 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55d7d2c7d8c8 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55d7d2c7d968 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55d7d2c7d9e0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55d7d2c7e378 <col:71> 'const ArgContext' lvalue Var 0x55d7d2c721c8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55d7d2c80018 <col:83, line:1083:5>
| |   |-DeclStmt 0x55d7d2c7f970 <line:1071:9, col:12>
| |   | `-VarDecl 0x55d7d2c7f908 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55d7d2c7fff0 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55d7d2c7fc00 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55d7d2c7fa88 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55d7d2c7fa50 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55d7d2c7f998 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55d7d2c7f9f0 <col:31> 'const String' lvalue ParmVar 0x55d7d2c7d8c8 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55d7d2c7fa10 <col:36> 'V' lvalue Var 0x55d7d2c7f908 'x' 'V'
| |     | |   `-DeclRefExpr 0x55d7d2c7fa30 <col:39> 'const ArgContext' lvalue ParmVar 0x55d7d2c7d9e0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55d7d2c7fbe0 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55d7d2c7fbc0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55d7d2c7fba8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55d7d2c7fb90 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55d7d2c7fab0 <col:17> 'int' lvalue ->status 0x55d7d2c7dc58
| |     |     |     `-CXXThisExpr 0x55d7d2c7faa0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55d7d2c7fb70 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55d7d2c7fb40 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55d7d2c7faf0 <col:27> 'int' lvalue ->status 0x55d7d2c7dc58
| |     |       |   `-CXXThisExpr 0x55d7d2c7fae0 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55d7d2c7fb58 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55d7d2c7fb20 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c940 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55d7d2c7fc30 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55d7d2c7fc20 <col:20> 'bool' false
| |     `-IfStmt 0x55d7d2c7ffc8 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55d7d2c7fcd0 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55d7d2c7fca0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55d7d2c7fc50 <col:18> 'int' lvalue ->status 0x55d7d2c7dc58
| |       | |   `-CXXThisExpr 0x55d7d2c7fc40 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55d7d2c7fcb8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55d7d2c7fc80 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c940 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55d7d2c7ff08 <col:42, line:1079:9>
| |       | |-CallExpr 0x55d7d2c7feb0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55d7d2c7fd00 <line:1076:13> '<bound member function type>' ->range_error 0x55d7d2c7e268
| |       | | | `-CXXThisExpr 0x55d7d2c7fcf0 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55d7d2c7fd30 <col:25> 'const ArgContext' lvalue ParmVar 0x55d7d2c7d9e0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55d7d2c7fe10 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55d7d2c7fe88 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55d7d2c7fe68 <col:43> 'V' lvalue Var 0x55d7d2c7f908 'x' 'V'
| |       | `-ReturnStmt 0x55d7d2c7fef8 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55d7d2c7fee8 <col:20> 'bool' false
| |       `-CompoundStmt 0x55d7d2c7ffa8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55d7d2c7ff68 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55d7d2c7ff28 <col:13> 'V' lvalue ParmVar 0x55d7d2c7d968 'result' 'V &'
| |         | `-DeclRefExpr 0x55d7d2c7ff48 <col:22> 'V' lvalue Var 0x55d7d2c7f908 'x' 'V'
| |         `-ReturnStmt 0x55d7d2c7ff98 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55d7d2c7ff88 <col:20> 'bool' true
| `-CXXMethodDecl 0x55d7d2a74f28 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55d7d2a74d08 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x55d7d2a74dd8 <col:35, col:38> col:38 used result 'int &'
|   |-ParmVarDecl 0x55d7d2a74e40 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x55d7d2e9a138 <col:83, line:1083:5>
|     |-DeclStmt 0x55d7d2e99770 <line:1071:9, col:12>
|     | `-VarDecl 0x55d7d2e99708 <col:9, col:11> col:11 used x 'int':'int'
|     `-IfStmt 0x55d7d2e9a110 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x55d7d2e99da0 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x55d7d2e99cc8 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x55d7d2e99c90 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x55d7d2e99c48 <col:14> '<bound member function type>' ->parse_saturating 0x55d7d2e99b28
|       | |   | `-CXXThisExpr 0x55d7d2e99c38 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x55d7d2e997e0 <col:31> 'const String' lvalue ParmVar 0x55d7d2a74d08 'str' 'const String &'
|       | |   |-DeclRefExpr 0x55d7d2e99800 <col:36> 'int':'int' lvalue Var 0x55d7d2e99708 'x' 'int':'int'
|       | |   `-DeclRefExpr 0x55d7d2e99820 <col:39> 'const ArgContext' lvalue ParmVar 0x55d7d2a74e40 'args' 'const ArgContext &'
|       | `-ParenExpr 0x55d7d2e99d80 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x55d7d2e99d60 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x55d7d2e99d48 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x55d7d2e99d30 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x55d7d2c7fab0 <col:17> 'int' lvalue ->status 0x55d7d2c7dc58
|       |     |     `-CXXThisExpr 0x55d7d2c7faa0 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x55d7d2e99d10 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x55d7d2e99ce0 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x55d7d2c7faf0 <col:27> 'int' lvalue ->status 0x55d7d2c7dc58
|       |       |   `-CXXThisExpr 0x55d7d2c7fae0 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x55d7d2e99cf8 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x55d7d2c7fb20 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c940 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x55d7d2e99dc0 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x55d7d2c7fc20 <col:20> 'bool' false
|       `-IfStmt 0x55d7d2e9a0e8 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x55d7d2e99e00 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x55d7d2e99dd0 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x55d7d2c7fc50 <col:18> 'int' lvalue ->status 0x55d7d2c7dc58
|         | |   `-CXXThisExpr 0x55d7d2c7fc40 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x55d7d2e99de8 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55d7d2c7fc80 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55d7d2c7c940 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x55d7d2e9a020 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x55d7d2e99f90 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x55d7d2c7fd00 <line:1076:13> '<bound member function type>' ->range_error 0x55d7d2c7e268
|         | | | `-CXXThisExpr 0x55d7d2c7fcf0 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x55d7d2e99e20 <col:25> 'const ArgContext' lvalue ParmVar 0x55d7d2a74e40 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x55d7d2e99ff8 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x55d7d2e99fc8 <col:31, col:50> 'const bool' lvalue Var 0x55d7d293b0b8 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x55d7d2e99f68 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x55d7d2e99f50 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x55d7d2e99f38 <col:43> 'int':'int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x55d7d2e99f18 <col:43> 'int':'int' lvalue Var 0x55d7d2e99708 'x' 'int':'int'
|         | `-ReturnStmt 0x55d7d2e9a010 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x55d7d2c7fee8 <col:20> 'bool' false
|         `-CompoundStmt 0x55d7d2e9a0c8 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x55d7d2e9a098 <line:1080:13, col:22> 'int':'int' lvalue '='
|           | |-DeclRefExpr 0x55d7d2e9a040 <col:13> 'int':'int' lvalue ParmVar 0x55d7d2a74dd8 'result' 'int &'
|           | `-ImplicitCastExpr 0x55d7d2e9a080 <col:22> 'int':'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x55d7d2e9a060 <col:22> 'int':'int' lvalue Var 0x55d7d2e99708 'x' 'int':'int'
|           `-ReturnStmt 0x55d7d2e9a0b8 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x55d7d2c7ff88 <col:20> 'bool' true
|-FieldDecl 0x55d7d2c7dbf0 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x55d7d2c7dc58 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55d7d2c7dca8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55d7d2c7df60 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55d7d2c7dce8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55d7d2c7dd68 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55d7d2c7dde0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55d7d2c7de60 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55d7d2c7e268 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55d7d2c7e030 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55d7d2c7e0a8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55d7d2c7e140 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55d7d2c80878 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55d7d2c80878
| `-ParmVarDecl 0x55d7d2c80988 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55d7d2c80b08 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2c80c18 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55d7d2eb4fc0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55d7d2eb4f90 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55d7d2eb4f60 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2eb4f30 <col:7> 'IntArg' lvalue ParmVar 0x55d7d2c80c18 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55d7d2c7dbf0 'base' 'int'
| | `-ImplicitCastExpr 0x55d7d2eb50b8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d2eb5088 <col:7> 'int' xvalue .base 0x55d7d2c7dbf0
| |     `-CXXStaticCastExpr 0x55d7d2eb5058 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2eb5028 <col:7> 'IntArg' lvalue ParmVar 0x55d7d2c80c18 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x55d7d2c7dc58 'status' 'int'
| | `-ImplicitCastExpr 0x55d7d2eb5188 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55d7d2eb5158 <col:7> 'int' xvalue .status 0x55d7d2c7dc58
| |     `-CXXStaticCastExpr 0x55d7d2eb5128 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2eb50f8 <col:7> 'IntArg' lvalue ParmVar 0x55d7d2c80c18 '' 'IntArg &&'
| `-CompoundStmt 0x55d7d2eb51e0 <col:7>
`-CXXDestructorDecl 0x55d7d2a74a88 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2c85140 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55d7d2c85398 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55d7d2eb4128 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55d7d2eb45c0 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55d7d2eb45a0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55d7d2eb4630 <col:19>
|-CXXConstructorDecl 0x55d7d2eb4228 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x55d7d2eb4228
| `-ParmVarDecl 0x55d7d2eb4338 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x55d7d2eb43d8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2eb44e8 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55d7d2eb51f0 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55d7d2eb4f10 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55d7d2eb4ee0 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2eb4eb0 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x55d7d2eb44e8 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x55d7d2eb5260 <col:19>
`-CXXDestructorDecl 0x55d7d2eb4670 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d7d2c8a9b8 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55d7d2c8ac18 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55d7d2ec0348 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d7d2ec0448 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55d7d2ec0448
| `-ParmVarDecl 0x55d7d2ec0558 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55d7d2ec05f8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55d7d2ec0708 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55d7d2ec1040 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55d7d2ec1010 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55d7d2ec0fe0 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55d7d2ec0fb0 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55d7d2ec0708 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55d7d2ec10b0 <col:19>
`-CXXDestructorDecl 0x55d7d2ec07a8 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.22 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.22 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
