
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct ArchiveElement
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int date
        28 |   int uid
        32 |   int gid
        36 |   int mode
        40 |   class String data
        40 |     struct String::rep_t _r
        40 |       const char * data
        48 |       int length
        56 |       struct String::memo_t * memo
           | [sizeof=64, dsize=64, align=8,
           |  nvsize=64, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameDB
         0 |   (NameDB vtable pointer)
         8 |   uint32_t _type
        16 |   class String _context
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   size_t _value_size
        48 |   class NameDB * _context_parent
        56 |   class NameDB * _context_sibling
        64 |   class NameDB * _context_child
        72 |   class NameInfo * _installed
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class DynamicNameDB
         0 |   class NameDB (primary base)
         0 |     (NameDB vtable pointer)
         8 |     uint32_t _type
        16 |     class String _context
        16 |       struct String::rep_t _r
        16 |         const char * data
        24 |         int length
        32 |         struct String::memo_t * memo
        40 |     size_t _value_size
        48 |     class NameDB * _context_parent
        56 |     class NameDB * _context_sibling
        64 |     class NameDB * _context_child
        72 |     class NameInfo * _installed
        80 |   class Vector<class String> _names
        80 |     class vector_memory<class typed_array_memory<class String> > vm_
        80 |       vector_memory<class typed_array_memory<class String> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class StringAccum _values
        96 |     struct StringAccum::rep_t r_
        96 |       unsigned char * s
       104 |       int len
       108 |       int cap
       112 |   int _sorted
           | [sizeof=120, dsize=116, align=8,
           |  nvsize=116, nvalign=8]

*** Dumping AST Record Layout
         0 | class (anonymous namespace)::ServicesNameDB
         0 |   class NameDB (primary base)
         0 |     (NameDB vtable pointer)
         8 |     uint32_t _type
        16 |     class String _context
        16 |       struct String::rep_t _r
        16 |         const char * data
        24 |         int length
        32 |         struct String::memo_t * memo
        40 |     size_t _value_size
        48 |     class NameDB * _context_parent
        56 |     class NameDB * _context_sibling
        64 |     class NameDB * _context_child
        72 |     class NameInfo * _installed
        80 |   class DynamicNameDB * _db
        88 |   _Bool _read_db
        96 |   class (anonymous namespace)::ServicesNameDB * _next
       104 |   class (anonymous namespace)::ServicesNameDB * _prev
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StaticNameDB::Entry
         0 |   const char * name
         8 |   uint32_t value
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class StaticNameDB
         0 |   class NameDB (primary base)
         0 |     (NameDB vtable pointer)
         8 |     uint32_t _type
        16 |     class String _context
        16 |       struct String::rep_t _r
        16 |         const char * data
        24 |         int length
        32 |         struct String::memo_t * memo
        40 |     size_t _value_size
        48 |     class NameDB * _context_parent
        56 |     class NameDB * _context_sibling
        64 |     class NameDB * _context_child
        72 |     class NameInfo * _installed
        80 |   const struct StaticNameDB::Entry * _entries
        88 |   size_t _nentries
           | [sizeof=96, dsize=96, align=8,
           |  nvsize=96, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd58d9f00 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dbd58da018 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55dbd58da0b8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55dbd58da118 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55dbd58da178 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55dbd58da228 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd58da530 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dbd58da648 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55dbd58da6f0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55dbd58da758 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55dbd58da7e8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55dbd58e0880 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dbd58e0cb8 <col:12>
|-CXXConstructorDecl 0x55dbd58e0988 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dbd58e0a98 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dbd58da6f0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55dbd58e3240 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55dbd58e3210 <col:12> 'const char *const' lvalue .data 0x55dbd58da6f0
| |     `-DeclRefExpr 0x55dbd58e31f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58e0a98 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dbd58da758 'length' 'int'
| | `-ImplicitCastExpr 0x55dbd58e32d0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55dbd58e32a0 <col:12> 'const int' lvalue .length 0x55dbd58da758
| |     `-DeclRefExpr 0x55dbd58e3280 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58e0a98 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55dbd58da7e8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55dbd58e3360 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55dbd58e3330 <col:12> 'String::memo_t *const' lvalue .memo 0x55dbd58da7e8
| |     `-DeclRefExpr 0x55dbd58e3310 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58e0a98 '' 'const String::rep_t &'
| `-CompoundStmt 0x55dbd58e33b8 <col:12>
|-CXXConstructorDecl 0x55dbd58e0b38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dbd58e0b38
| `-ParmVarDecl 0x55dbd58e0c48 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55dbd58e61a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55dbd58f1bb8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dbd58f1cc8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55dbd58f21e0 <col:12>
|   |-BinaryOperator 0x55dbd58f1ff8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55dbd58f1fb0 <col:12> 'const char *' lvalue ->data 0x55dbd58da6f0
|   | | `-CXXThisExpr 0x55dbd58f1fa0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dbd58f1fe0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55dbd58f1f70 <col:12> 'const char *const' lvalue .data 0x55dbd58da6f0
|   |     `-DeclRefExpr 0x55dbd58f1f50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58f1cc8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55dbd58f20c0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55dbd58f2078 <col:12> 'int' lvalue ->length 0x55dbd58da758
|   | | `-CXXThisExpr 0x55dbd58f2068 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dbd58f20a8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55dbd58f2038 <col:12> 'const int' lvalue .length 0x55dbd58da758
|   |     `-DeclRefExpr 0x55dbd58f2018 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58f1cc8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55dbd58f2188 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55dbd58f2140 <col:12> 'String::memo_t *' lvalue ->memo 0x55dbd58da7e8
|   | | `-CXXThisExpr 0x55dbd58f2130 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55dbd58f2170 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55dbd58f2100 <col:12> 'String::memo_t *const' lvalue .memo 0x55dbd58da7e8
|   |     `-DeclRefExpr 0x55dbd58f20e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58f1cc8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55dbd58f21d0 <col:12>
|     `-UnaryOperator 0x55dbd58f21b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55dbd58f21a8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55dbd58f1d38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dbd58f1d38
  `-ParmVarDecl 0x55dbd58f1e48 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd58d1470 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dbd58d1588 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55dbd58d1618 <col:16, col:22> col:16 public
|-TypedefDecl 0x55dbd58d1658 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55dbd55a4fd0 'const char *'
|   `-QualType 0x55dbd55a4521 'const char' const
|     `-BuiltinType 0x55dbd55a4520 'char'
|-TypedefDecl 0x55dbd58d16e0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55dbd58d16b0 'String::const_iterator' sugar
|   |-Typedef 0x55dbd58d1658 'const_iterator'
|   `-PointerType 0x55dbd55a4fd0 'const char *'
|     `-QualType 0x55dbd55a4521 'const char' const
|       `-BuiltinType 0x55dbd55a4520 'char'
|-TypedefDecl 0x55dbd58d1850 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55dbd58d17c0 'int (String::*)() const'
|   |-RecordType 0x55dbd58d1500 'String'
|   | `-CXXRecord 0x55dbd58d1470 'String'
|   `-ParenType 0x55dbd58d1760 'int () const' sugar
|     `-FunctionProtoType 0x55dbd58a6300 'int () const' const cdecl
|       `-BuiltinType 0x55dbd55a4580 'int'
|-TypedefDecl 0x55dbd58d18b8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55dbd56faee0 'int64_t' sugar
|   |-Typedef 0x55dbd560d390 'int64_t'
|   `-TypedefType 0x55dbd55e6630 '__int64_t' sugar
|     |-Typedef 0x55dbd55e6208 '__int64_t'
|     `-BuiltinType 0x55dbd55a45a0 'long'
|-TypedefDecl 0x55dbd58d1920 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55dbd56fae00 'uint64_t' sugar
|   |-Typedef 0x55dbd560d530 'uint64_t'
|   `-TypedefType 0x55dbd55e66c0 '__uint64_t' sugar
|     |-Typedef 0x55dbd55e6278 '__uint64_t'
|     `-BuiltinType 0x55dbd55a4640 'unsigned long'
|-TypedefDecl 0x55dbd58d19b0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55dbd58d1980 'String::intmax_t' sugar
|   |-Typedef 0x55dbd58d18b8 'intmax_t'
|   `-TypedefType 0x55dbd56faee0 'int64_t' sugar
|     |-Typedef 0x55dbd560d390 'int64_t'
|     `-TypedefType 0x55dbd55e6630 '__int64_t' sugar
|       |-Typedef 0x55dbd55e6208 '__int64_t'
|       `-BuiltinType 0x55dbd55a45a0 'long'
|-TypedefDecl 0x55dbd58d1a40 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55dbd58d1a10 'String::uintmax_t' sugar
|   |-Typedef 0x55dbd58d1920 'uintmax_t'
|   `-TypedefType 0x55dbd56fae00 'uint64_t' sugar
|     |-Typedef 0x55dbd560d530 'uint64_t'
|     `-TypedefType 0x55dbd55e66c0 '__uint64_t' sugar
|       |-Typedef 0x55dbd55e6278 '__uint64_t'
|       `-BuiltinType 0x55dbd55a4640 'unsigned long'
|-CXXConstructorDecl 0x55dbd58d1b00 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55dbd58d1ca8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55dbd58d1be8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55dbd58d1e58 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55dbd58d1d98 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55dbd58d1fb0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55dbd58d1f20 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55dbd58d21c8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dbd58d2078 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55dbd58d20f8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55dbd58d23e8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55dbd58d2298 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55dbd58d2318 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55dbd58d2608 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dbd58d24b8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55dbd58d2538 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55dbd58d2828 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55dbd58d26d8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55dbd58d2758 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55dbd58d29b8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55dbd58d28f0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55dbd58d2b38 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55dbd58d2a78 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55dbd58d2cc8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55dbd58d2c00 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55dbd58d2e20 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55dbd58d2d90 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55dbd58d2f78 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55dbd58d2ee8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55dbd58d30d0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55dbd58d3040 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55dbd58d3258 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55dbd58d3198 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55dbd58d33e8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55dbd58d3320 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55dbd58d3578 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55dbd58d34b0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55dbd58d3708 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55dbd58d3640 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55dbd58d3800 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55dbd58d3928 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55dbd58d3aa8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55dbd58d39e0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55dbd58d3bf8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55dbd58d3b68 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55dbd58d3cb0 <col:63> "" ""
|-CXXMethodDecl 0x55dbd58d3df8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55dbd58d3d38 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55dbd58d4008 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55dbd58d3eb8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55dbd58d3f38 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55dbd58d4228 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55dbd58d40d0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55dbd58d4150 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55dbd58d4508 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55dbd58d42e8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55dbd58d4368 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55dbd58e0350 <col:55> 'int' 10
| `-ParmVarDecl 0x55dbd58d43e0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dbd58e0370 <col:76> 'bool' true
|-CXXMethodDecl 0x55dbd58d47e8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55dbd58d45d0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55dbd58d4650 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55dbd58e0380 <col:56> 'int' 10
| `-ParmVarDecl 0x55dbd58d46c8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dbd58e03a0 <col:77> 'bool' true
|-CXXMethodDecl 0x55dbd58d48f0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55dbd58d49b8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55dbd58d4a80 <line:81:5, col:60> col:52 used c_str 'const char *() const'
| |-NoInlineAttr 0x55dbd58d4b20 <col:20>
| `-OptimizeNoneAttr 0x55dbd58d4b78 <col:30>
|-CXXConversionDecl 0x55dbd58d4c68 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55dbd58d4d38 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55dbd58d4df8 <line:85:5, col:29> col:17 used operator! 'bool () const' inline
|-CXXMethodDecl 0x55dbd58d4ee8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55dbd58d4fa8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55dbd58d5128 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55dbd58d5060 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55dbd58d5278 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55dbd58d51e8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55dbd58d5368 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55dbd58d5428 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55dbd58d5678 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55dbd58d54e0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55dbd58d5560 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55dbd58d58d8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55dbd58d5740 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55dbd58d57c0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55dbd58d59a8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55dbd58d5bb8 <line:100:5, col:65> col:19 used substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55dbd58d5a60 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55dbd58d5ae0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55dbd58d5dd8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55dbd58d5c80 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55dbd58d5d00 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55dbd58d5f68 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55dbd58d5ea0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55dbd58d6058 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55dbd58d61c8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55dbd58d6108 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dbd58d63d8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55dbd58d6288 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dbd58d6308 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dbd58d65f0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55dbd58d6498 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55dbd58d6510 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55dbd58d6780 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55dbd58d66b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dbd58d69a0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55dbd58d6840 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55dbd58d68c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55dbd58d6af0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55dbd58d6a60 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55dbd58d6cc8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55dbd58d6bb0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dbd58d6c30 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55dbd58d6e18 <line:112:5, col:44> col:10 used glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55dbd58d6d88 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55dbd58d7030 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55dbd58d6ed0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55dbd58d6f50 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55dbd58e03b0 <col:39> 'int' 0
|-CXXMethodDecl 0x55dbd58d7250 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55dbd58d70f0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55dbd58d7170 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55dbd58e03d0 <col:48> 'int' 0
|-CXXMethodDecl 0x55dbd58d7430 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55dbd58d7310 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55dbd58d7390 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55dbd58e03f0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55dbd58d7500 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55dbd58d75c0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55dbd58d7680 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55dbd58d7740 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55dbd58d7800 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55dbd58d79a8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55dbd58d78b0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55dbd58d7b28 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55dbd58d7a60 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55dbd58d7d00 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55dbd58d7be8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55dbd58d7e78 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55dbd58d7db8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55dbd58d7fc0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55dbd58d7f30 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55dbd58d8110 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55dbd58d8080 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55dbd58d82e8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dbd58d81d0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dbd58d8250 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dbd58d84c8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dbd58d83b0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55dbd58d8430 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55dbd58d8618 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55dbd58d8588 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55dbd58d8828 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55dbd58d86d8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55dbd58d8758 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55dbd58d8988 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55dbd58d88f0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55dbd58d8ae0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55dbd58d8a48 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55dbd58d8b88 <col:57> "" ""
|-CXXMethodDecl 0x55dbd58d8c98 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55dbd58d8c08 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55dbd58d8de8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55dbd58d8d58 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55dbd58d8f68 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55dbd58d8ea0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55dbd58d9030 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55dbd58d90f0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55dbd58d91b0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55dbd58d9250 <col:49> "" ""
|-CXXMethodDecl 0x55dbd58d92e0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55dbd58d93a0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55dbd58d9490 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55dbd58d9558 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55dbd58d9618 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55dbd58d96d8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55dbd58d97d0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55dbd58d9898 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55dbd58d9960 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55dbd58d9b38 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55dbd58d9a18 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55dbd58d9a98 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55dbd58d9d60 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55dbd58d9c00 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55dbd58d9c80 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55dbd58d9e70 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55dbd58d9ed8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55dbd58d9f00 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dbd58da018 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55dbd58da0b8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55dbd58da118 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55dbd58da178 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55dbd58da228 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55dbd58da290 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55dbd58da4c8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55dbd58da518 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd58da4a8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55dbd58da3b8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55dbd58da360 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55dbd58da3a0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55dbd58da380 <col:32> 'int' 8
|-CXXRecordDecl 0x55dbd58da530 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dbd58da648 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55dbd58da6f0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55dbd58da758 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55dbd58da7e8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55dbd58e0880 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55dbd58e0cb8 <col:12>
| |-CXXConstructorDecl 0x55dbd58e0988 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dbd58e0a98 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dbd58da6f0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55dbd58e3240 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55dbd58e3210 <col:12> 'const char *const' lvalue .data 0x55dbd58da6f0
| | |     `-DeclRefExpr 0x55dbd58e31f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58e0a98 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dbd58da758 'length' 'int'
| | | `-ImplicitCastExpr 0x55dbd58e32d0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55dbd58e32a0 <col:12> 'const int' lvalue .length 0x55dbd58da758
| | |     `-DeclRefExpr 0x55dbd58e3280 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58e0a98 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55dbd58da7e8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55dbd58e3360 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55dbd58e3330 <col:12> 'String::memo_t *const' lvalue .memo 0x55dbd58da7e8
| | |     `-DeclRefExpr 0x55dbd58e3310 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58e0a98 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55dbd58e33b8 <col:12>
| |-CXXConstructorDecl 0x55dbd58e0b38 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dbd58e0b38
| | `-ParmVarDecl 0x55dbd58e0c48 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55dbd58e61a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55dbd58f1bb8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dbd58f1cc8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55dbd58f21e0 <col:12>
| |   |-BinaryOperator 0x55dbd58f1ff8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55dbd58f1fb0 <col:12> 'const char *' lvalue ->data 0x55dbd58da6f0
| |   | | `-CXXThisExpr 0x55dbd58f1fa0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dbd58f1fe0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55dbd58f1f70 <col:12> 'const char *const' lvalue .data 0x55dbd58da6f0
| |   |     `-DeclRefExpr 0x55dbd58f1f50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58f1cc8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55dbd58f20c0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55dbd58f2078 <col:12> 'int' lvalue ->length 0x55dbd58da758
| |   | | `-CXXThisExpr 0x55dbd58f2068 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dbd58f20a8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55dbd58f2038 <col:12> 'const int' lvalue .length 0x55dbd58da758
| |   |     `-DeclRefExpr 0x55dbd58f2018 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58f1cc8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55dbd58f2188 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55dbd58f2140 <col:12> 'String::memo_t *' lvalue ->memo 0x55dbd58da7e8
| |   | | `-CXXThisExpr 0x55dbd58f2130 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55dbd58f2170 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55dbd58f2100 <col:12> 'String::memo_t *const' lvalue .memo 0x55dbd58da7e8
| |   |     `-DeclRefExpr 0x55dbd58f20e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55dbd58f1cc8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55dbd58f21d0 <col:12>
| |     `-UnaryOperator 0x55dbd58f21b8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55dbd58f21a8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55dbd58f1d38 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dbd58f1d38
|   `-ParmVarDecl 0x55dbd58f1e48 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55dbd58da860 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55dbd58daaa8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55dbd58da8c8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55dbd58da948 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55dbd58da9c0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55dbd58e0840 <col:79, line:261:5>
|   |-BinaryOperator 0x55dbd58e04b8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55dbd58e0450 <col:2, col:5> 'const char *' lvalue .data 0x55dbd58da6f0
|   | | `-MemberExpr 0x55dbd58e0420 <col:2> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|   | |   `-CXXThisExpr 0x55dbd58e0410 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55dbd58e04a0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dbd58e0480 <col:12> 'const char *' lvalue ParmVar 0x55dbd58da8c8 'data' 'const char *'
|   |-BinaryOperator 0x55dbd58e0580 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55dbd58e0518 <col:2, col:5> 'int' lvalue .length 0x55dbd58da758
|   | | `-MemberExpr 0x55dbd58e04e8 <col:2> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|   | |   `-CXXThisExpr 0x55dbd58e04d8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55dbd58e0568 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dbd58e0548 <col:14> 'int' lvalue ParmVar 0x55dbd58da948 'length' 'int'
|   `-IfStmt 0x55dbd58e0828 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55dbd58e06a0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55dbd58e0688 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55dbd58e0668 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55dbd58e0648 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55dbd58e05e0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|     |       | `-MemberExpr 0x55dbd58e05b0 <col:7> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|     |       |   `-CXXThisExpr 0x55dbd58e05a0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55dbd58e0630 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55dbd58e0610 <col:17> 'String::memo_t *' lvalue ParmVar 0x55dbd58da9c0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55dbd58e0800 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55dbd58e07e8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55dbd58e06f0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55dbd58c94d8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55dbd58e0758 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dbd58da0b8
|         `-ImplicitCastExpr 0x55dbd58e0740 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55dbd58e0720 <col:27> 'String::memo_t *' lvalue ParmVar 0x55dbd58da9c0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55dbd58dad58 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55dbd58dab78 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55dbd58dabf8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55dbd58dac70 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55dbd58da860 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55dbd58e0cc8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55dbd58e0e58 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55dbd58e0dc0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55dbd58e0d30 <col:2> '<bound member function type>' ->assign_memo 0x55dbd58daaa8
|     | `-ImplicitCastExpr 0x55dbd58e0df8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55dbd58e0d20 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55dbd58e0e10 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dbd58e0d60 <col:14> 'const char *' lvalue ParmVar 0x55dbd58dab78 'data' 'const char *'
|     |-ImplicitCastExpr 0x55dbd58e0e28 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55dbd58e0d80 <col:20> 'int' lvalue ParmVar 0x55dbd58dabf8 'length' 'int'
|     `-ImplicitCastExpr 0x55dbd58e0e40 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55dbd58e0da0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55dbd58dac70 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55dbd58daee8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55dbd58dae28 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55dbd58e10b0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55dbd58e1030 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55dbd58e0e80 <col:2> '<bound member function type>' ->assign_memo 0x55dbd58daaa8
|     | `-CXXThisExpr 0x55dbd58e0e70 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55dbd58e1068 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55dbd58e0f00 <col:14, col:19> 'const char *' lvalue .data 0x55dbd58da6f0
|     |   `-MemberExpr 0x55dbd58e0ed0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55dbd58da860
|     |     `-DeclRefExpr 0x55dbd58e0eb0 <col:14> 'const String' lvalue ParmVar 0x55dbd58dae28 'x' 'const String &'
|     |-ImplicitCastExpr 0x55dbd58e1080 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55dbd58e0f80 <col:25, col:30> 'int' lvalue .length 0x55dbd58da758
|     |   `-MemberExpr 0x55dbd58e0f50 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55dbd58da860
|     |     `-DeclRefExpr 0x55dbd58e0f30 <col:25> 'const String' lvalue ParmVar 0x55dbd58dae28 'x' 'const String &'
|     `-ImplicitCastExpr 0x55dbd58e1098 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55dbd58e1000 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|         `-MemberExpr 0x55dbd58e0fd0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55dbd58da860
|           `-DeclRefExpr 0x55dbd58e0fb0 <col:38> 'const String' lvalue ParmVar 0x55dbd58dae28 'x' 'const String &'
|-CXXMethodDecl 0x55dbd58dafb0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55dbd58e1a70 <col:31, line:278:5>
|   `-IfStmt 0x55dbd58e1a58 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55dbd58e1150 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55dbd58e1138 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55dbd58e1108 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|     |     `-MemberExpr 0x55dbd58e10d8 <col:6> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|     |       `-CXXThisExpr 0x55dbd58e10c8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55dbd58e1a30 <col:15, line:277:2>
|       |-ParenExpr 0x55dbd58e1600 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55dbd58e15d0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55dbd58e1260 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55dbd58e1248 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55dbd58e1230 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55dbd58e11f0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dbd58da0b8
|       |   |       `-ImplicitCastExpr 0x55dbd58e11d8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55dbd58e11a8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|       |   |           `-MemberExpr 0x55dbd58e1178 <col:27> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|       |   |             `-CXXThisExpr 0x55dbd58e1168 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55dbd58e12c0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55dbd58e12a0 <col:54> 'int' 0
|       |   `-CallExpr 0x55dbd58e1530 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55dbd58e1518 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55dbd58e1498 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dbd56416f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55dbd58e1570 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55dbd58e13a8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55dbd58e1588 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55dbd58e13d8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55dbd58e15a0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55dbd58e1410 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55dbd58e15b8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55dbd58e1480 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55dbd58e1468 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55dbd58e1430 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55dbd58e1950 <line:274:6, line:275:22>
|       | |-CallExpr 0x55dbd58e1810 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55dbd58e17f8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55dbd58e1770 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55dbd58ca920 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55dbd58e1740 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55dbd58da0b8
|       | |   `-ImplicitCastExpr 0x55dbd58e1728 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55dbd58e16f8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|       | |       `-MemberExpr 0x55dbd58e16c8 <col:40> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|       | |         `-CXXThisExpr 0x55dbd58e16b8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55dbd58e1910 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55dbd58e18f8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55dbd58e1838 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55dbd58df790 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55dbd58e1938 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55dbd58e1898 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|       |       `-MemberExpr 0x55dbd58e1868 <col:15> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|       |         `-CXXThisExpr 0x55dbd58e1858 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55dbd58e1a10 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55dbd58e19a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55dbd58da7e8
|         | `-MemberExpr 0x55dbd58e1978 <col:6> 'String::rep_t' lvalue ->_r 0x55dbd58da860
|         |   `-CXXThisExpr 0x55dbd58e1968 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55dbd58e19f8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55dbd58e19d8 <col:16> 'int' 0
|-CXXMethodDecl 0x55dbd58db248 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55dbd58db068 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55dbd58db0e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55dbd58db160 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55dbd58db320 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55dbd58db570 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55dbd58db3d8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55dbd58db458 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55dbd58db4d0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55dbd58db758 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55dbd58db640 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55dbd58db6c0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55dbd58db858 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55dbd58e1b48 <col:41, line:286:5>
|   `-ReturnStmt 0x55dbd58e1b38 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55dbd58e1b08 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55dbd58e1ad0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55dbd58e1ab8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55dbd58e1a98 <col:46> 'int' 1
|-CXXMethodDecl 0x55dbd58dbaf8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55dbd58db910 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55dbd58db990 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55dbd58dba10 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55dbd58df790 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55dbd58dbbc0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55dbd58df860 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55dbd58dfa30 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55dbd58df918 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dbd58df998 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55dbd58dfaf0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55dbd58dfbb8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55dbd58dfcb8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55dbd58dfd30 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55dbd58dfda8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55dbd58dfe10 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55dbd58dff10 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55dbd58dff60 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd58dfef0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55dbd58dfed0 <col:22> 'int' 14
|-CXXMethodDecl 0x55dbd58e0178 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55dbd58dff90 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55dbd58e0010 <col:38> col:41 'int'
| `-ParmVarDecl 0x55dbd58e0090 <col:43> col:46 'int'
|-FriendDecl 0x55dbd58e0280 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55dbd58e0310 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dbd5bf4f60 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55dbd5bf5138 prev 0x55dbd5bf4f60 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dbd5bf51c8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dbd5bf51f0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dbd55a4580 'int'
|-TypedefDecl 0x55dbd5bf6e80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55dbd5bf6e30 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55dbd5bf5760 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55dbd5bf5660 'type'
|     `-TemplateSpecializationType 0x55dbd5bf55f0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55dbd5bf5410 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55dbd5bf53f0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55dbd5bf53d0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55dbd5bf55d0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55dbd5bf54f0 'char_array'
|-TypedefDecl 0x55dbd5bf6f38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55dbd5bf6f00 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55dbd5bf6ee0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55dbd5bf6e80 'type'
|     `-ElaboratedType 0x55dbd5bf6e30 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55dbd5bf5760 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55dbd5bf5660 'type'
|         `-TemplateSpecializationType 0x55dbd5bf55f0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55dbd5bf5410 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55dbd5bf53f0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55dbd5bf53d0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55dbd5bf55d0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55dbd5bf54f0 'char_array'
|-CXXMethodDecl 0x55dbd5bf70b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55dbd5bf6fc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55dbd5bf71a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dbd5bf7288 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55dbd5bf7288
|-CXXMethodDecl 0x55dbd5bf7558 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55dbd5bf7460 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55dbd5bf7798 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dbd5bf7610 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dbd5bf7688 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf7968 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dbd5bf7858 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dbd5bf78d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf7ac8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55dbd5bf7b98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55dbd5bf7de8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dbd5bf7c58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55dbd5bf7cd0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf8048 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55dbd5bf7eb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55dbd5bf7f30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf8208 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55dbd5bf8118 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf83c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55dbd5bf82d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf8480 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dbd5bf8530 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dbd5bf8768 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55dbd5bf85e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dbd5bf8658 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55dbd5bf8a08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55dbd5bf8910 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55dbd5bf8ad0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55dbd5bf8b20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dbd5bf8b70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dbd5bf3b80 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x55dbd5bf3d88 prev 0x55dbd5bf3b80 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dbd5bf4ed0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55dbd5bf4e80 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x55dbd5bf4e60 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x55dbd5bf4d10 'type'
|     `-SubstTemplateTypeParmType 0x55dbd5bf4b30 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55dbd586b350 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd586b2f8 'T'
|       `-RecordType 0x55dbd5bf4680 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55dbd5bf4598 'sized_array_memory'
|-FieldDecl 0x55dbd5bf8bc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55dbd5bf8c10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dbd5bf8c48 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|   |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|   `-PointerType 0x55dbd5bf1d10 'NameDB *'
|     `-RecordType 0x55dbd5bf0480 'NameDB'
|       `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf8d08 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x55dbd5bf8cd0 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|     `-PointerType 0x55dbd5bf1d10 'NameDB *'
|       `-RecordType 0x55dbd5bf0480 'NameDB'
|         `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf8dc8 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x55dbd5bf8d90 'NameDB *const &'
|   `-QualType 0x55dbd5bf3e21 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-PointerType 0x55dbd5bf1d10 'NameDB *'
|         `-RecordType 0x55dbd5bf0480 'NameDB'
|           `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf8e88 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x55dbd5bf8e50 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|     `-PointerType 0x55dbd5bf1d10 'NameDB *'
|       `-RecordType 0x55dbd5bf0480 'NameDB'
|         `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf8f48 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x55dbd5bf8f10 'NameDB *const *'
|   `-QualType 0x55dbd5bf3e21 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-PointerType 0x55dbd5bf1d10 'NameDB *'
|         `-RecordType 0x55dbd5bf0480 'NameDB'
|           `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf9b20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x55dbd5bf9ad0 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x55dbd5bf9ab0 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x55dbd5bf9a40 'type'
|     `-SubstTemplateTypeParmType 0x55dbd5bf9800 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55dbd5876150 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd5876100 'T'
|       `-PointerType 0x55dbd5bf1d10 'NameDB *'
|         `-RecordType 0x55dbd5bf0480 'NameDB'
|           `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf9b88 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x55dbd5bf8d90 'NameDB *const &'
|   `-QualType 0x55dbd5bf3e21 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-PointerType 0x55dbd5bf1d10 'NameDB *'
|         `-RecordType 0x55dbd5bf0480 'NameDB'
|           `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf9be0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dbd55a4580 'int'
|-TypedefDecl 0x55dbd5bf9c48 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x55dbd5bf8e50 'NameDB **'
|   `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|     |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|     `-PointerType 0x55dbd5bf1d10 'NameDB *'
|       `-RecordType 0x55dbd5bf0480 'NameDB'
|         `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-TypedefDecl 0x55dbd5bf9cb0 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x55dbd5bf8f10 'NameDB *const *'
|   `-QualType 0x55dbd5bf3e21 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x55dbd5bf3e20 'NameDB *' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-PointerType 0x55dbd5bf1d10 'NameDB *'
|         `-RecordType 0x55dbd5bf0480 'NameDB'
|           `-CXXRecord 0x55dbd5bff1f8 'NameDB'
|-EnumDecl 0x55dbd5bf9d08 <line:134:5> col:5
| `-EnumConstantDecl 0x55dbd5bf9e00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dbd5bf9de0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dbd58a46c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dbd58a46a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dbd58a4680 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dbd5bf9e88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55dbd5bfa118 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5bf9f40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dbd5bf9fe0 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x55dbd5bfa3d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55dbd5bfa2c0 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x55dbd5bfa698 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55dbd5bfa580 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55dbd5bfa9e0 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55dbd5bfa8c0 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x55dbd5bfacf0 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x55dbd5bfabd0 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x55dbd5bfafe0 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5bfae28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dbd5bfaea0 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55dbd5bfb138 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55dbd5bfb218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5bfb270 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5bfb2b8 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x55dbd5bfb368 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5bfb3c0 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5bfb488 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5bfb538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5bfb590 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5bfb5d8 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5bfb688 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5bfb6e0 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5bfb728 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5bfb7d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5bfb830 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5bfb878 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5bfb928 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5bfb980 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5bfb9a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dbd5bfba58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dbd5bfbb08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dbd5bfbcc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5bfbbb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dbd5bfbc30 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55dbd5bfbe18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dbd5bfbd88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5bfbfc8 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x55dbd5bfbed0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dbd5bfc080 <col:20>
| `-OptimizeNoneAttr 0x55dbd5bfc0d8 <col:30>
|-CXXMethodDecl 0x55dbd5bfc1f8 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55dbd5bfc100 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dbd5bfc2b0 <col:20>
| `-OptimizeNoneAttr 0x55dbd5bfc308 <col:30>
|-CXXMethodDecl 0x55dbd5bfc3c0 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dbd5bfc330 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5bfc508 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dbd5bfc478 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5bfc638 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x55dbd5bfc768 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55dbd5bfc838 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x55dbd5bfc908 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x55dbd5bfca48 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55dbd5bfc9b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5bfcb90 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dbd5bfcb00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5bfccd8 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55dbd5bfcc48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dbd5bfcd90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dbd5bfce90 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dbd5bfce00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dbd5bfcf48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dbd5bfd008 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x55dbd5bfd108 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x55dbd5bfd288 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dbd5bfd1c8 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x55dbd5bfda58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dbd5bfd340 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x55dbd5bfd9b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x55dbd5bfd8b8 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x55dbd5bfdb38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dbd5bfdc88 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x55dbd5bfdbf8 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55dbd5bfdd40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dbd5bfdf88 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5bfde00 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55dbd5bfde78 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x55dbd5bfe148 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x55dbd5bfe058 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55dbd5bfe398 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x55dbd5bfe210 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x55dbd5bfe288 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x55dbd5bfe458 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dbd5bfe6b8 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x55dbd5bfe5c0 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x55dbd5bfe788 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55dbd5bfe788

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5bf0530 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dbd5bf0648 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x55dbd5bf06d8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55dbd5bf0760 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x55dbd5bf0850 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x55dbd5bf0850
|-CXXMethodDecl 0x55dbd5bf0950 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55dbd5bf0a10 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x55dbd5bf0ab0 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x55dbd5bf0bb0 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf18f0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0b90 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x55dbd5bf0b70 <col:11> 'int' 0
| |-EnumConstantDecl 0x55dbd5bf0c40 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1908 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0c20 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x55dbd5bf0c00 <col:19> 'int' 1
| |-EnumConstantDecl 0x55dbd5bf0cd0 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1920 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0cb0 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x55dbd5bf0c90 <col:17> 'int' 2
| |-EnumConstantDecl 0x55dbd5bf0d60 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1938 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0d40 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x55dbd5bf0d20 <col:18> 'int' 3
| |-EnumConstantDecl 0x55dbd5bf0df0 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1950 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0dd0 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x55dbd5bf0db0 <col:12> 'int' 4
| |-EnumConstantDecl 0x55dbd5bf0e80 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1968 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0e60 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x55dbd5bf0e40 <col:15> 'int' 5
| |-EnumConstantDecl 0x55dbd5bf0f10 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1980 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0ef0 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x55dbd5bf0ed0 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x55dbd5bf0fa0 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1998 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf0f80 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x55dbd5bf0f60 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x55dbd5bf1030 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf19b0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1010 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x55dbd5bf0ff0 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x55dbd5bf10c0 <line:48:2, col:15> col:2 referenced T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf19c8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf10a0 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x55dbd5bf1080 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x55dbd5bf1150 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf19e0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1130 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x55dbd5bf1110 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x55dbd5bf11e0 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf19f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf11c0 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x55dbd5bf11a0 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x55dbd5bf1270 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1a10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1250 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x55dbd5bf1230 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x55dbd5bf1300 <line:52:2, col:16> col:2 referenced T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1a28 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf12e0 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x55dbd5bf12c0 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x55dbd5bf1390 <line:53:2, col:16> col:2 referenced T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1a40 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1370 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x55dbd5bf1350 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x55dbd5bf1420 <line:54:2, col:14> col:2 referenced T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1a58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1400 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x55dbd5bf13e0 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x55dbd5bf14b0 <line:55:2, col:15> col:2 referenced T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1a70 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1490 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x55dbd5bf1470 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x55dbd5bf1540 <line:56:2, col:15> col:2 referenced T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1a88 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1520 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x55dbd5bf1500 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x55dbd5bf15d0 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1aa0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf15b0 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x55dbd5bf1590 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x55dbd5bf1660 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1ab8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1640 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x55dbd5bf1620 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x55dbd5bf16f0 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1ad0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf16d0 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x55dbd5bf16b0 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x55dbd5bf1780 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1ae8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf1760 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x55dbd5bf1740 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x55dbd5bf1810 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x55dbd5bf1b00 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bf17f0 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x55dbd5bf17d0 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x55dbd5bf18a0 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x55dbd5bf1b18 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd5bf1880 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x55dbd5bf1860 <col:17> 'int' 100663298
|-CXXMethodDecl 0x55dbd5bf1e18 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x55dbd5bf1b40 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf1bb8 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf1c30 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x55dbd5bf1ca8 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x55dbd5bf2038 <line:104:5, col:61> col:17 used installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x55dbd5bf1ee8 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x55dbd5bf1f60 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x55dbd5bf21b8 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x55dbd5bf20f8 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x55dbd5bf25a8 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x55dbd5bf2270 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf22e8 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf2360 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x55dbd5bf23e0 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x55dbd5bf2458 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5bf2928 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x55dbd5bf2680 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf26f8 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf2770 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55dbd5bf27e8 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x55dbd5bf2ca8 <line:151:5, line:152:47> line:151:17 used query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x55dbd5bf29f8 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf2a70 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf2ae8 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x55dbd5bf2b60 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x55dbd5bf3028 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x55dbd5bf2d78 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf2df0 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf2e70 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x55dbd5bf2ee8 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5bf3308 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x55dbd5bf30f8 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf3170 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x55dbd5bf31e8 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x55dbd5bf3708 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x55dbd5bf33d0 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf3448 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf34c0 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x55dbd5bf3540 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x55dbd5bf35b8 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5bf3a88 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x55dbd5bf37e0 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bf3858 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x55dbd5bf38d0 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x55dbd5bf3948 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x55dbd5bf3b48 <line:230:3, col:10> col:3 private
|-FieldDecl 0x55dbd5bfe870 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x55dbd5bfe970 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x55dbd5bfea08 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x55dbd5bff1e0 <col:47, col:73>
|   `-ReturnStmt 0x55dbd5bff1d0 <col:49, col:67>
|     `-CStyleCastExpr 0x55dbd5bff1a8 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x55dbd5bff188 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x55dbd5bfed68 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x55dbd5bfeab8 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bfeb30 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x55dbd5bfeba8 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x55dbd5bfec20 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x55dbd5bfee58 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x55dbd5bfee58
| `-ParmVarDecl 0x55dbd5bfef68 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x55dbd5bff008 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x55dbd5bff008
  `-ParmVarDecl 0x55dbd5bff118 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector, %class.Vector }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector, %class.Vector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5bff1f8 prev 0x55dbd5bf03e8 <../dummy_inc/click/nameinfo.hh:245:1, line:348:1> line:245:7 referenced class NameDB definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55dbd5bff2f0 <col:1, col:7> col:7 implicit referenced class NameDB
|-AccessSpecDecl 0x55dbd5bff380 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x55dbd5bff5e8 <line:253:5, col:74> col:12 used NameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x55dbd5bff3b8 <col:19, col:28> col:28 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5bff430 <col:34, col:48> col:48 context 'const String &'
| `-ParmVarDecl 0x55dbd5bff4a8 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55dbd5bff6f0 <line:259:5, line:261:5> line:259:13 used ~NameDB 'void () noexcept' virtual
| `-CompoundStmt 0x55dbd5c00d78 <col:23, line:261:5>
|   `-CallExpr 0x55dbd5c00d50 <line:260:2, col:28> 'void'
|     |-ImplicitCastExpr 0x55dbd5c00d38 <col:2, col:12> 'void (*)(NameDB *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55dbd5c00cc8 <col:2, col:12> 'void (NameDB *)' lvalue CXXMethod 0x55dbd5bf21b8 'uninstalldb' 'void (NameDB *)'
|     `-CXXThisExpr 0x55dbd5c00cf8 <col:24> 'NameDB *' this
|-CXXMethodDecl 0x55dbd5bff818 <line:264:5, line:266:5> line:264:14 used type 'uint32_t () const'
| `-CompoundStmt 0x55dbd5c00df8 <col:27, line:266:5>
|   `-ReturnStmt 0x55dbd5c00de8 <line:265:2, col:9>
|     `-ImplicitCastExpr 0x55dbd5c00dd0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55dbd5c00da0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_type 0x55dbd5c00600
|         `-CXXThisExpr 0x55dbd5c00d90 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55dbd5bff8d8 <line:269:5, line:271:5> line:269:19 context 'const String &() const'
| `-CompoundStmt 0x55dbd5c00e60 <col:35, line:271:5>
|   `-ReturnStmt 0x55dbd5c00e50 <line:270:2, col:9>
|     `-MemberExpr 0x55dbd5c00e20 <col:9> 'const String' lvalue ->_context 0x55dbd5c00660
|       `-CXXThisExpr 0x55dbd5c00e10 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55dbd5bff9c8 <line:279:5, line:281:5> line:279:13 context_parent 'NameDB *() const'
| `-CompoundStmt 0x55dbd5c00ee0 <col:36, line:281:5>
|   `-ReturnStmt 0x55dbd5c00ed0 <line:280:2, col:9>
|     `-ImplicitCastExpr 0x55dbd5c00eb8 <col:9> 'NameDB *' <LValueToRValue>
|       `-MemberExpr 0x55dbd5c00e88 <col:9> 'NameDB *const' lvalue ->_context_parent 0x55dbd5c00720
|         `-CXXThisExpr 0x55dbd5c00e78 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55dbd5bffab8 <line:284:5, line:286:5> line:284:12 value_size 'size_t () const'
| `-CompoundStmt 0x55dbd5c00f60 <col:31, line:286:5>
|   `-ReturnStmt 0x55dbd5c00f50 <line:285:2, col:9>
|     `-ImplicitCastExpr 0x55dbd5c00f38 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x55dbd5c00f08 <col:9> 'const size_t':'const unsigned long' lvalue ->_value_size 0x55dbd5c006c0
|         `-CXXThisExpr 0x55dbd5c00ef8 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x55dbd5bffd88 <line:295:5, col:78> col:18 query 'bool (const String &, void *, size_t)' virtual pure
| |-ParmVarDecl 0x55dbd5bffb68 <col:24, col:38> col:38 name 'const String &'
| |-ParmVarDecl 0x55dbd5bffbe8 <col:44, col:50> col:50 value 'void *'
| `-ParmVarDecl 0x55dbd5bffc60 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5bfffe8 <line:305:5, col:65> col:20 revquery 'String (const void *, size_t)' virtual
| |-ParmVarDecl 0x55dbd5bffe58 <col:29, col:41> col:41 value 'const void *'
| `-ParmVarDecl 0x55dbd5bffed0 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c002c8 <line:315:5, col:81> col:18 used define 'bool (const String &, const void *, size_t)' virtual
| |-ParmVarDecl 0x55dbd5c000a8 <col:25, col:39> col:39 name 'const String &'
| |-ParmVarDecl 0x55dbd5c00128 <col:45, col:57> col:57 value 'const void *'
| `-ParmVarDecl 0x55dbd5c001a0 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c00518 <line:324:5, col:61> col:17 define_int 'bool (const String &, int32_t)' inline
| |-ParmVarDecl 0x55dbd5c00390 <col:28, col:42> col:42 name 'const String &'
| `-ParmVarDecl 0x55dbd5c00408 <col:48, col:56> col:56 value 'int32_t':'int'
|-AccessSpecDecl 0x55dbd5c005c8 <line:332:3, col:10> col:3 private
|-FieldDecl 0x55dbd5c00600 <line:334:5, col:14> col:14 referenced _type 'uint32_t':'unsigned int'
|-FieldDecl 0x55dbd5c00660 <line:335:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x55dbd5c006c0 <line:336:5, col:12> col:12 referenced _value_size 'size_t':'unsigned long'
|-FieldDecl 0x55dbd5c00720 <line:337:5, col:13> col:13 referenced _context_parent 'NameDB *'
|-FieldDecl 0x55dbd5c00780 <line:338:5, col:13> col:13 _context_sibling 'NameDB *'
|-FieldDecl 0x55dbd5c007e0 <line:339:5, col:13> col:13 _context_child 'NameDB *'
|-FieldDecl 0x55dbd5c00840 <line:340:5, col:15> col:15 _installed 'NameInfo *'
|-FriendDecl 0x55dbd5c008e0 <line:346:5, col:18> col:12 'class NameInfo':'NameInfo'
|-CXXConstructorDecl 0x55dbd5c00948 <line:245:7> col:7 implicit NameDB 'void (const NameDB &)' inline default noexcept-unevaluated 0x55dbd5c00948
| `-ParmVarDecl 0x55dbd5c00a58 <col:7> col:7 'const NameDB &'
`-CXXMethodDecl 0x55dbd5c00af8 <col:7> col:7 implicit operator= 'NameDB &(const NameDB &)' inline default noexcept-unevaluated 0x55dbd5c00af8
  `-ParmVarDecl 0x55dbd5c00c08 <col:7> col:7 'const NameDB &'

Layout: <CGRecordLayout
  LLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  NonVirtualBaseLLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dbd5b4dec0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55dbd5b4e098 prev 0x55dbd5b4dec0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55dbd5b4e128 <col:46, col:52> col:46 public
|-TypedefDecl 0x55dbd5b4e150 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dbd55a4580 'int'
|-TypedefDecl 0x55dbd5b4fab0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55dbd5b4fa60 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55dbd5b4fa40 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55dbd5b4e368 'type'
|     `-SubstTemplateTypeParmType 0x55dbd5b4e330 'String' sugar
|       |-TemplateTypeParmType 0x55dbd5895d20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd5895cd0 'T'
|       `-RecordType 0x55dbd58d1500 'String'
|         `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b4fb68 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55dbd5b4fb30 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55dbd5b4fb10 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55dbd5b4fab0 'type'
|     `-ElaboratedType 0x55dbd5b4fa60 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55dbd5b4fa40 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55dbd5b4e368 'type'
|         `-SubstTemplateTypeParmType 0x55dbd5b4e330 'String' sugar
|           |-TemplateTypeParmType 0x55dbd5895d20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dbd5895cd0 'T'
|           `-RecordType 0x55dbd58d1500 'String'
|             `-CXXRecord 0x55dbd58d1470 'String'
|-CXXMethodDecl 0x55dbd5b4fce8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55dbd5b4fbf8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55dbd5b4fdd8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55dbd5b4feb8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55dbd5b50188 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55dbd5b50090 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55dbd5b503c8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dbd5b50240 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dbd5b502b8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b50598 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dbd5b50488 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dbd5b50500 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b506f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55dbd5b507c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55dbd5b50a18 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dbd5b50888 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55dbd5b50900 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b50c78 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55dbd5b50ae8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55dbd5b50b60 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b50e68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55dbd5b50d48 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b51028 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55dbd5b50f30 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b510e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dbd5b51190 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dbd5b513c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55dbd5b51240 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55dbd5b512b8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55dbd5b51668 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55dbd5b51570 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55dbd5b51730 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55dbd5b51780 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55dbd5b517d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55dbd5b09cb0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55dbd5b4c928 prev 0x55dbd5b09cb0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55dbd5b4de30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55dbd5b4dde0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55dbd5b4ddc0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55dbd5b4dc70 'type'
|     `-SubstTemplateTypeParmType 0x55dbd5b4db00 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55dbd586bad0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55dbd586ba78 'F'
|       `-RecordType 0x55dbd5b4d760 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55dbd5b4d680 'typed_array_memory'
|-FieldDecl 0x55dbd5b51820 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55dbd5b51870 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55dbd5b518a8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|   |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|   `-RecordType 0x55dbd58d1500 'String'
|     `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b51938 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55dbd5b51900 'String &'
|   `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|     |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|     `-RecordType 0x55dbd58d1500 'String'
|       `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b519c8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55dbd5b51990 'const String &'
|   `-QualType 0x55dbd5b4c9c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-RecordType 0x55dbd58d1500 'String'
|         `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b51a58 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55dbd5b51a20 'String *'
|   `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|     |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|     `-RecordType 0x55dbd58d1500 'String'
|       `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b51ae8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55dbd5b51ab0 'const String *'
|   `-QualType 0x55dbd5b4c9c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-RecordType 0x55dbd58d1500 'String'
|         `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b52740 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55dbd5b526f0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55dbd5b526d0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55dbd5b52608 'type'
|     `-LValueReferenceType 0x55dbd5b525d0 'const String &'
|       `-QualType 0x55dbd5b52371 'const String' const
|         `-SubstTemplateTypeParmType 0x55dbd5b52370 'String' sugar
|           |-TemplateTypeParmType 0x55dbd5875a20 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55dbd58759c8 'T'
|           `-RecordType 0x55dbd58d1500 'String'
|             `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b527a8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55dbd5b51990 'const String &'
|   `-QualType 0x55dbd5b4c9c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-RecordType 0x55dbd58d1500 'String'
|         `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b52800 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55dbd55a4580 'int'
|-TypedefDecl 0x55dbd5b52868 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55dbd5b51a20 'String *'
|   `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|     |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|     `-RecordType 0x55dbd58d1500 'String'
|       `-CXXRecord 0x55dbd58d1470 'String'
|-TypedefDecl 0x55dbd5b528d0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55dbd5b51ab0 'const String *'
|   `-QualType 0x55dbd5b4c9c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55dbd5b4c9c0 'String' sugar
|       |-TemplateTypeParmType 0x55dbd58a3040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55dbd58a2fe8 'T'
|       `-RecordType 0x55dbd58d1500 'String'
|         `-CXXRecord 0x55dbd58d1470 'String'
|-EnumDecl 0x55dbd5b52928 <line:134:5> col:5
| `-EnumConstantDecl 0x55dbd5b52a20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55dbd5b52a00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55dbd58a46c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55dbd58a46a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55dbd58a4680 <col:40> 'int' 1
|-CXXConstructorDecl 0x55dbd5b52aa8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55dbd5b52d38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5b52b60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dbd5b52c00 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55dbd5b52fc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55dbd5b52eb0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55dbd5b53288 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55dbd5b53170 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55dbd5b535a0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55dbd5b53480 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55dbd5b538b0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55dbd5b53790 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55dbd5b53ba0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5b539e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dbd5b53a60 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dbd5b53cc8 <line:150:5, col:55> col:49 used begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55dbd5b53d78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5b53dd0 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5b53e18 <line:151:5, col:53> col:49 used end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55dbd5b53ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5b53f20 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5b53fe8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5b54098 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5b540f0 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5b54138 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5b541e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5b54240 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5b54288 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5b54338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5b54390 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5b543d8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55dbd5b54488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55dbd5b544e0 <col:30> Inherited
|-CXXMethodDecl 0x55dbd5b54508 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dbd5b545b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55dbd5b54668 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dbd5b54828 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5b54718 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55dbd5b54790 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dbd5b54978 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55dbd5b548e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5b54b28 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55dbd5b54a30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dbd5b54be0 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b54c38 <col:30>
|-CXXMethodDecl 0x55dbd5b54d58 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55dbd5b54c60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55dbd5b54e10 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b54e68 <col:30>
|-CXXMethodDecl 0x55dbd5b54f20 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dbd5b54e90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5b55068 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dbd5b54fd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5b55198 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55dbd5b55298 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55dbd5b55368 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55dbd5b55438 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55dbd5b55578 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55dbd5b554e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5b556c0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55dbd5b55630 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55dbd5b55808 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55dbd5b55778 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dbd5b558c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55dbd5b559c0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55dbd5b55930 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55dbd5b55a78 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55dbd5b55b38 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55dbd5b55c38 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55dbd5b55db8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55dbd5b55cf8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55dbd5b56578 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55dbd5b55e70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| |-CXXMethodDecl 0x55dbd5b564d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
| | `-ParmVarDecl 0x55dbd5b563d8 <col:58, col:62> col:62 v 'String &&'
| `-CXXMethodDecl 0x55dbd5c4b798 <col:5, col:63> col:48 used push_back 'typename fast_argument<String, true>::enable_rvalue_reference (String &&)' inline
|   |-TemplateArgument type 'fast_argument<String, true>'
|   `-ParmVarDecl 0x55dbd5c4b6c0 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55dbd5b56658 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55dbd5b567a8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55dbd5b56718 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dbd5b56860 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55dbd5b56aa8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55dbd5b56920 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55dbd5b56998 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55dbd5b56c38 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55dbd5b56b78 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55dbd5b56e48 <line:191:5, col:49> col:21 used erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55dbd5b56d00 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55dbd5b56d78 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55dbd5b56f08 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55dbd5b57168 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55dbd5b57070 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55dbd5b57238 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55dbd5c05258 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5bdbd20 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dbd5bdbe38 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55dbd5bdbee0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55dbd5bdbf48 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55dbd5bdbfb0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55dbd5bdc060 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55dbd5bdbee0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55dbd5bdcee0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55dbd5bdce98 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55dbd5bdce60 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55dbd5bdce48 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55dbd5bdcdf0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55dbd58f7750 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55dbd5bdbf48 'len' 'int'
| | `-IntegerLiteral 0x55dbd5bdcf58 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55dbd5bdbfb0 'cap' 'int'
| | `-IntegerLiteral 0x55dbd5bdcfc0 <col:20> 'int' 0
| `-CompoundStmt 0x55dbd5bdd040 <col:23, line:119:2>
|-CXXConstructorDecl 0x55dbd5bdc1d8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55dbd5bdc118 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55dbd5bdd050 <col:37, line:121:2>
|-CXXConstructorDecl 0x55dbd5bdf2a8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55dbd5bdf3b8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55dbd5bdbee0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55dbd5be0d70 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55dbd5be0d40 <col:12> 'unsigned char *const' lvalue .s 0x55dbd5bdbee0
| |     `-DeclRefExpr 0x55dbd5be0d20 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55dbd5bdf3b8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55dbd5bdbf48 'len' 'int'
| | `-ImplicitCastExpr 0x55dbd5be0e00 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55dbd5be0dd0 <col:12> 'const int' lvalue .len 0x55dbd5bdbf48
| |     `-DeclRefExpr 0x55dbd5be0db0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55dbd5bdf3b8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55dbd5bdbfb0 'cap' 'int'
| | `-ImplicitCastExpr 0x55dbd5be0e90 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55dbd5be0e60 <col:12> 'const int' lvalue .cap 0x55dbd5bdbfb0
| |     `-DeclRefExpr 0x55dbd5be0e40 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55dbd5bdf3b8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55dbd5be0ee8 <col:12>
|-CXXConstructorDecl 0x55dbd5bdf458 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dbd5bdf458
| `-ParmVarDecl 0x55dbd5bdf568 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55dbd5be11a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5bd74c8 prev 0x55dbd5b208c8 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dbd5bd75c0 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55dbd5bd7650 <col:21, col:27> col:21 public
|-TypedefDecl 0x55dbd5bd7690 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55dbd55a4fd0 'const char *'
|   `-QualType 0x55dbd55a4521 'const char' const
|     `-BuiltinType 0x55dbd55a4520 'char'
|-TypedefDecl 0x55dbd5bd7700 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55dbd55a51a0 'char *'
|   `-BuiltinType 0x55dbd55a4520 'char'
|-TypedefDecl 0x55dbd5bd7840 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55dbd5bd77b0 'int (StringAccum::*)() const'
|   |-RecordType 0x55dbd5863020 'StringAccum'
|   | `-CXXRecord 0x55dbd5bd74c8 'StringAccum'
|   `-ParenType 0x55dbd58d1760 'int () const' sugar
|     `-FunctionProtoType 0x55dbd58a6300 'int () const' const cdecl
|       `-BuiltinType 0x55dbd55a4580 'int'
|-CXXConstructorDecl 0x55dbd5bd7900 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55dbd5bd7a50 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55dbd5bd79c0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55dbd5bd7ba0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55dbd5bd7b10 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55dbd5bd7d48 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55dbd5bd7c88 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55dbd5bd7ef8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55dbd5bd7e38 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55dbd5bd7ff0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55dbd5bd81a8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55dbd5bd80e0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55dbd5bd8328 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55dbd5bd8260 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55dbd5bd8420 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55dbd5bd84e8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55dbd5bd85b0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55dbd5bd8678 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55dbd5bd8740 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55dbd5bd88a8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55dbd5bd8978 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55dbd5bd8a38 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55dbd5bd8b48 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55dbd5bd8c58 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55dbd5bd8d18 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55dbd5bd8dd8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55dbd5bd8f20 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55dbd5bd8e90 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55dbd5bd90b0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55dbd5bd8fe0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55dbd5bd9178 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55dbd5bd9270 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55dbd5bd9330 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55dbd5bd93f8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55dbd5bd94b8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55dbd5bd9578 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55dbd5bd9638 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55dbd5bd9788 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55dbd5bd96f0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55dbd5bd98d8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55dbd5bd9848 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55dbd5bd9a30 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55dbd5bd9998 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55dbd5bd9b80 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55dbd5bd9af0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55dbd5bd9da0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55dbd5bd9c40 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55dbd5bd9cc0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55dbd5bdcd18 <col:53> 'int' 0
|-CXXMethodDecl 0x55dbd5bd9ef8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55dbd5bd9e68 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55dbd5bdcd38 <col:34> 'int' 1
|-CXXMethodDecl 0x55dbd5bda040 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55dbd5bd9fb0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55dbd5bda190 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55dbd5bda100 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55dbd5bda2e0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55dbd5bda250 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55dbd5bda430 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55dbd5bda3a0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55dbd5bda608 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55dbd5bda4f0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55dbd5bda570 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55dbd5bda7e8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55dbd5bda6d0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55dbd5bda750 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55dbd5bda9c8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55dbd5bda8b0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55dbd5bda930 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55dbd5bdaba8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55dbd5bdaa90 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55dbd5bdab10 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55dbd5bdad88 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55dbd5bdac70 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55dbd5bdacf0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55dbd5bdb0e8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55dbd5bdaed0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55dbd5bdaf50 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55dbd5bdcd58 <col:56> 'int' 10
| `-ParmVarDecl 0x55dbd5bdafc8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dbd5bdcd78 <col:77> 'bool' true
|-CXXMethodDecl 0x55dbd5bdb448 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55dbd5bdb230 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55dbd5bdb2b0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55dbd5bdcd88 <col:57> 'int' 10
| `-ParmVarDecl 0x55dbd5bdb328 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dbd5bdcda8 <col:78> 'bool' true
|-CXXMethodDecl 0x55dbd5bdb670 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55dbd5bdb518 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55dbd5bdb598 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55dbd5bdb768 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x55dbd5bdb8d8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55dbd5bdb818 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55dbd5bdba28 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55dbd5bdb998 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55dbd5bdbad0 <col:51> "" ""
|-AccessSpecDecl 0x55dbd5bdbb40 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55dbd5bdbb68 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55dbd5bdbcb8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55dbd5bdbd08 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd5bdbc98 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55dbd5bdbc68 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55dbd58da4c8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55dbd5bdbd20 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dbd5bdbe38 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55dbd5bdbee0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55dbd5bdbf48 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55dbd5bdbfb0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55dbd5bdc060 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55dbd5bdbee0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55dbd5bdcee0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55dbd5bdce98 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55dbd5bdce60 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55dbd5bdce48 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55dbd5bdcdf0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55dbd58f7750 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55dbd5bdbf48 'len' 'int'
| | | `-IntegerLiteral 0x55dbd5bdcf58 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55dbd5bdbfb0 'cap' 'int'
| | | `-IntegerLiteral 0x55dbd5bdcfc0 <col:20> 'int' 0
| | `-CompoundStmt 0x55dbd5bdd040 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55dbd5bdc1d8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55dbd5bdc118 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55dbd5bdd050 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55dbd5bdf2a8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55dbd5bdf3b8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55dbd5bdbee0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55dbd5be0d70 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55dbd5be0d40 <col:12> 'unsigned char *const' lvalue .s 0x55dbd5bdbee0
| | |     `-DeclRefExpr 0x55dbd5be0d20 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55dbd5bdf3b8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55dbd5bdbf48 'len' 'int'
| | | `-ImplicitCastExpr 0x55dbd5be0e00 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55dbd5be0dd0 <col:12> 'const int' lvalue .len 0x55dbd5bdbf48
| | |     `-DeclRefExpr 0x55dbd5be0db0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55dbd5bdf3b8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55dbd5bdbfb0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55dbd5be0e90 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55dbd5be0e60 <col:12> 'const int' lvalue .cap 0x55dbd5bdbfb0
| | |     `-DeclRefExpr 0x55dbd5be0e40 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55dbd5bdf3b8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55dbd5be0ee8 <col:12>
| |-CXXConstructorDecl 0x55dbd5bdf458 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55dbd5bdf458
| | `-ParmVarDecl 0x55dbd5bdf568 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55dbd5be11a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55dbd5bdc2b0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55dbd5bdc3b0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55dbd5bdc318 <col:16> col:19 'int'
|-CXXMethodDecl 0x55dbd5bdc590 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55dbd5bdc470 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55dbd5bdc4f0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55dbd5bdc770 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55dbd5bdc658 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55dbd5bdc6d8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55dbd5bdc8c8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55dbd5bdc838 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55dbd5bdca18 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55dbd5bdc988 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55dbd5bdccd8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55dbd5bdcc18 parent 0x55dbd55a4488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55dbd5bdcad0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55dbd5bdcb48 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5c024b0 <../dummy_inc/click/nameinfo.hh:403:1, line:456:1> line:403:7 referenced class DynamicNameDB definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NameDB'
|-CXXRecordDecl 0x55dbd5c02608 <col:1, col:7> col:7 implicit referenced class DynamicNameDB
|-AccessSpecDecl 0x55dbd5c02698 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x55dbd5c028a8 <line:412:5, col:81> col:12 used DynamicNameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x55dbd5c026d0 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5c02748 <col:41, col:55> col:55 context 'const String &'
| `-ParmVarDecl 0x55dbd5c027c0 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c02b10 <line:421:5, col:66> col:10 used query 'bool (const String &, void *, size_t)'
| |-Overrides: [ 0x55dbd5bffd88 NameDB::query 'bool (const String &, void *, size_t)' ]
| |-ParmVarDecl 0x55dbd5c02978 <col:16, col:30> col:30 name 'const String &'
| |-ParmVarDecl 0x55dbd5c029f8 <col:36, col:42> col:42 value 'void *'
| `-ParmVarDecl 0x55dbd5c02a70 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c02cf0 <line:430:5, col:57> col:12 revquery 'String (const void *, size_t)'
| |-Overrides: [ 0x55dbd5bfffe8 NameDB::revquery 'String (const void *, size_t)' ]
| |-ParmVarDecl 0x55dbd5c02be0 <col:21, col:33> col:33 value 'const void *'
| `-ParmVarDecl 0x55dbd5c02c58 <col:40, col:47> col:47 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c02f48 <line:439:5, col:73> col:10 used define 'bool (const String &, const void *, size_t)'
| |-Overrides: [ 0x55dbd5c002c8 NameDB::define 'bool (const String &, const void *, size_t)' ]
| |-ParmVarDecl 0x55dbd5c02db0 <col:17, col:31> col:31 name 'const String &'
| |-ParmVarDecl 0x55dbd5c02e30 <col:37, col:49> col:49 value 'const void *'
| `-ParmVarDecl 0x55dbd5c02ea8 <col:56, col:63> col:63 value_size 'size_t':'unsigned long'
|-AccessSpecDecl 0x55dbd5c03000 <line:447:3, col:10> col:3 private
|-FieldDecl 0x55dbd5c030e0 <line:449:5, col:20> col:20 _names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55dbd5c03140 <line:450:5, col:17> col:17 _values 'StringAccum'
|-FieldDecl 0x55dbd5c031a8 <line:451:5, col:9> col:9 _sorted 'int'
|-CXXMethodDecl 0x55dbd5c03360 <line:453:5, col:47> col:11 find 'void *(const String &, bool)'
| |-ParmVarDecl 0x55dbd5c03208 <col:16, col:30> col:30 name 'const String &'
| `-ParmVarDecl 0x55dbd5c03280 <col:36, col:41> col:41 create 'bool'
|-CXXMethodDecl 0x55dbd5c03430 <line:454:5, col:15> col:10 sort 'void ()'
|-CXXConstructorDecl 0x55dbd5c034f8 <line:403:7> col:7 implicit DynamicNameDB 'void (const DynamicNameDB &)' inline default noexcept-unevaluated 0x55dbd5c034f8
| `-ParmVarDecl 0x55dbd5c03608 <col:7> col:7 'const DynamicNameDB &'
|-CXXConstructorDecl 0x55dbd5c036a8 <col:7> col:7 implicit DynamicNameDB 'void (DynamicNameDB &&)' inline default noexcept-unevaluated 0x55dbd5c036a8
| `-ParmVarDecl 0x55dbd5c037b8 <col:7> col:7 'DynamicNameDB &&'
|-CXXMethodDecl 0x55dbd5c03858 <col:7> col:7 implicit operator= 'DynamicNameDB &(const DynamicNameDB &)' inline default noexcept-unevaluated 0x55dbd5c03858
| `-ParmVarDecl 0x55dbd5c03968 <col:7> col:7 'const DynamicNameDB &'
|-CXXMethodDecl 0x55dbd5c039d8 <col:7> col:7 implicit operator= 'DynamicNameDB &(DynamicNameDB &&)' inline default noexcept-unevaluated 0x55dbd5c039d8
| `-ParmVarDecl 0x55dbd5c03ae8 <col:7> col:7 'DynamicNameDB &&'
`-CXXDestructorDecl 0x55dbd5c03b70 <col:7> col:7 implicit used ~DynamicNameDB 'void () noexcept' inline default
  |-Overrides: [ 0x55dbd5bff6f0 NameDB::~NameDB 'void () noexcept' ]
  `-CompoundStmt 0x55dbd5c45748 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.DynamicNameDB = type <{ %class.NameDB, %class.Vector.0, %class.StringAccum, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.DynamicNameDB.base = type <{ %class.NameDB, %class.Vector.0, %class.StringAccum, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5c43c00 <../elements/ip/ipnameinfo.cc:147:1, line:157:1> line:147:7 referenced class ServicesNameDB definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'NameDB'
|-CXXRecordDecl 0x55dbd5c43d58 <col:1, col:7> col:7 implicit referenced class ServicesNameDB
|-AccessSpecDecl 0x55dbd5c43de8 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55dbd5c43ff8 <line:148:5, col:56> col:5 used ServicesNameDB 'void (uint32_t, (anonymous namespace)::ServicesNameDB *)'
| |-ParmVarDecl 0x55dbd5c43e20 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55dbd5c43ec8 <col:35, col:51> col:51 other '(anonymous namespace)::ServicesNameDB *'
|-CXXDestructorDecl 0x55dbd5c440f8 <line:149:5, col:21> col:5 ~ServicesNameDB 'void () noexcept'
| `-Overrides: [ 0x55dbd5bff6f0 NameDB::~NameDB 'void () noexcept' ]
|-CXXMethodDecl 0x55dbd5c44388 <line:150:5, col:61> col:10 query 'bool (const String &, void *, size_t)'
| |-Overrides: [ 0x55dbd5bffd88 NameDB::query 'bool (const String &, void *, size_t)' ]
| |-ParmVarDecl 0x55dbd5c441f0 <col:16, col:30> col:30 name 'const String &'
| |-ParmVarDecl 0x55dbd5c44270 <col:36, col:42> col:42 value 'void *'
| `-ParmVarDecl 0x55dbd5c442e8 <col:49, col:56> col:56 vsize 'size_t':'unsigned long'
|-AccessSpecDecl 0x55dbd5c44440 <line:151:3, col:10> col:3 private
|-FieldDecl 0x55dbd5c44478 <line:152:5, col:20> col:20 referenced _db 'DynamicNameDB *'
|-FieldDecl 0x55dbd5c444d8 <line:153:5, col:10> col:10 referenced _read_db 'bool'
|-FieldDecl 0x55dbd5c44538 <line:154:5, col:21> col:21 referenced _next '(anonymous namespace)::ServicesNameDB *'
|-FieldDecl 0x55dbd5c44598 <line:155:5, col:21> col:21 referenced _prev '(anonymous namespace)::ServicesNameDB *'
|-CXXMethodDecl 0x55dbd5c44608 <line:156:5, col:24> col:10 used read_services 'void ()'
|-CXXConstructorDecl 0x55dbd5c446d8 <line:147:7> col:7 implicit ServicesNameDB 'void (const (anonymous namespace)::ServicesNameDB &)' inline default noexcept-unevaluated 0x55dbd5c446d8
| `-ParmVarDecl 0x55dbd5c447e8 <col:7> col:7 'const (anonymous namespace)::ServicesNameDB &'
`-CXXMethodDecl 0x55dbd5c44888 <col:7> col:7 implicit operator= '(anonymous namespace)::ServicesNameDB &(const (anonymous namespace)::ServicesNameDB &)' inline default noexcept-unevaluated 0x55dbd5c44888
  `-ParmVarDecl 0x55dbd5c44998 <col:7> col:7 'const (anonymous namespace)::ServicesNameDB &'

Layout: <CGRecordLayout
  LLVMType:%"class.(anonymous namespace)::ServicesNameDB" = type { %class.NameDB, %class.DynamicNameDB*, i8, %"class.(anonymous namespace)::ServicesNameDB"*, %"class.(anonymous namespace)::ServicesNameDB"* }
  NonVirtualBaseLLVMType:%"class.(anonymous namespace)::ServicesNameDB" = type { %class.NameDB, %class.DynamicNameDB*, i8, %"class.(anonymous namespace)::ServicesNameDB"*, %"class.(anonymous namespace)::ServicesNameDB"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5c01190 <../dummy_inc/click/nameinfo.hh:352:5, line:355:5> line:352:12 referenced struct Entry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dbd5c012a8 <col:5, col:12> col:12 implicit struct Entry
|-FieldDecl 0x55dbd5c01350 <line:353:2, col:14> col:14 name 'const char *'
|-FieldDecl 0x55dbd5c013b0 <line:354:2, col:11> col:11 referenced value 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x55dbd5c3ba40 <line:352:12> col:12 implicit referenced ~Entry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StaticNameDB::Entry" = type { i8*, i32 }
  NonVirtualBaseLLVMType:%"struct.StaticNameDB::Entry" = type { i8*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5c00f78 <../dummy_inc/click/nameinfo.hh:350:1, line:401:1> line:350:7 referenced class StaticNameDB definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'NameDB'
|-CXXRecordDecl 0x55dbd5c010d8 <col:1, col:7> col:7 implicit referenced class StaticNameDB
|-AccessSpecDecl 0x55dbd5c01168 <col:38, col:44> col:38 public
|-CXXRecordDecl 0x55dbd5c01190 <line:352:5, line:355:5> line:352:12 referenced struct Entry definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55dbd5c012a8 <col:5, col:12> col:12 implicit struct Entry
| |-FieldDecl 0x55dbd5c01350 <line:353:2, col:14> col:14 name 'const char *'
| |-FieldDecl 0x55dbd5c013b0 <line:354:2, col:11> col:11 referenced value 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x55dbd5c3ba40 <line:352:12> col:12 implicit referenced ~Entry 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55dbd5c01748 <line:369:5, line:370:37> line:369:12 used StaticNameDB 'void (uint32_t, const String &, const StaticNameDB::Entry *, size_t)' inline
| |-ParmVarDecl 0x55dbd5c01428 <col:25, col:34> col:34 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55dbd5c014a0 <col:40, col:54> col:54 context 'const String &'
| |-ParmVarDecl 0x55dbd5c01548 <line:370:4, col:17> col:17 entry 'const StaticNameDB::Entry *'
| `-ParmVarDecl 0x55dbd5c015c0 <col:24, col:31> col:31 nentry 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c019b8 <line:379:5, col:66> col:10 query 'bool (const String &, void *, size_t)'
| |-Overrides: [ 0x55dbd5bffd88 NameDB::query 'bool (const String &, void *, size_t)' ]
| |-ParmVarDecl 0x55dbd5c01820 <col:16, col:30> col:30 name 'const String &'
| |-ParmVarDecl 0x55dbd5c018a0 <col:36, col:42> col:42 value 'void *'
| `-ParmVarDecl 0x55dbd5c01918 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55dbd5c01b98 <line:388:5, col:57> col:12 revquery 'String (const void *, size_t)'
| |-Overrides: [ 0x55dbd5bfffe8 NameDB::revquery 'String (const void *, size_t)' ]
| |-ParmVarDecl 0x55dbd5c01a88 <col:21, col:33> col:33 value 'const void *'
| `-ParmVarDecl 0x55dbd5c01b00 <col:40, col:47> col:47 value_size 'size_t':'unsigned long'
|-AccessSpecDecl 0x55dbd5c01c48 <line:396:3, col:10> col:3 private
|-FieldDecl 0x55dbd5c01c80 <line:398:5, col:18> col:18 _entries 'const StaticNameDB::Entry *'
|-FieldDecl 0x55dbd5c01ce0 <line:399:5, col:12> col:12 _nentries 'size_t':'unsigned long'
|-CXXConstructorDecl 0x55dbd5c01d58 <line:350:7> col:7 implicit StaticNameDB 'void (const StaticNameDB &)' inline default noexcept-unevaluated 0x55dbd5c01d58
| `-ParmVarDecl 0x55dbd5c01e68 <col:7> col:7 'const StaticNameDB &'
|-CXXConstructorDecl 0x55dbd5c01f08 <col:7> col:7 implicit StaticNameDB 'void (StaticNameDB &&)' inline default noexcept-unevaluated 0x55dbd5c01f08
| `-ParmVarDecl 0x55dbd5c02018 <col:7> col:7 'StaticNameDB &&'
|-CXXMethodDecl 0x55dbd5c020b8 <col:7> col:7 implicit operator= 'StaticNameDB &(const StaticNameDB &)' inline default noexcept-unevaluated 0x55dbd5c020b8
| `-ParmVarDecl 0x55dbd5c021c8 <col:7> col:7 'const StaticNameDB &'
|-CXXMethodDecl 0x55dbd5c02238 <col:7> col:7 implicit operator= 'StaticNameDB &(StaticNameDB &&)' inline default noexcept-unevaluated 0x55dbd5c02238
| `-ParmVarDecl 0x55dbd5c02348 <col:7> col:7 'StaticNameDB &&'
`-CXXDestructorDecl 0x55dbd5c023d0 <col:7> col:7 implicit ~StaticNameDB 'void ()' inline default noexcept-unevaluated 0x55dbd5c023d0
  `-Overrides: [ 0x55dbd5bff6f0 NameDB::~NameDB 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.StaticNameDB = type { %class.NameDB, %"struct.StaticNameDB::Entry"*, i64 }
  NonVirtualBaseLLVMType:%class.StaticNameDB = type { %class.NameDB, %"struct.StaticNameDB::Entry"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5b14058 prev 0x55dbd5b0b7f8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dbd5b14150 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55dbd5b141e0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55dbd5b14258 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55dbd5b14318 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55dbd5b143e0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55dbd5b14558 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55dbd5b14490 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55dbd5b14600 <col:24>
| `-OptimizeNoneAttr 0x55dbd5b14658 <col:34>
|-CXXMethodDecl 0x55dbd5b146a0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55dbd5b14958 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55dbd5b14750 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55dbd5b147c8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55dbd5b14848 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55dbd5b14a10 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55dbd5b14a48 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55dbd5b14ab0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55dbd5b14b38 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55dbd5b14e58 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55dbd5b14bf0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55dbd5b14c68 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55dbd5b14ce0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55dbd5b14d60 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55dbd5b14f70 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55dbd5b1c8e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55dbd5b1c8e8
| `-ParmVarDecl 0x55dbd5b1c9f8 <col:11> col:11 'const Element::Port &'
`-CXXConstructorDecl 0x55dbd5b1ca98 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55dbd5b1ca98
  `-ParmVarDecl 0x55dbd5b1cba8 <col:11> col:11 'Element::Port &&'

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5b07070 prev 0x55dbd5b06df0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55dbd5b07168 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55dbd5b071f8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55dbd5b07258 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55dbd5b07348 <line:32:5, col:22> col:13 ~Element 'void ()' virtual noexcept-unevaluated 0x55dbd5b07348
|-VarDecl 0x55dbd5b07448 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55dbd5b07618 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55dbd5b074c8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55dbd5b07540 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55dbd5b077a8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55dbd5b076e0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55dbd5b07850 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55dbd5b07988 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55dbd5b078c0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55dbd5b07b28 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55dbd5b07a68 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55dbd5b07cc8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55dbd5b07c08 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55dbd5b07d70 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55dbd5b07e70 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55dbd5b07f50 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b07e50 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55dbd5b07e30 <col:26> 'int' 1
| `-EnumConstantDecl 0x55dbd5b07f00 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55dbd5b07f68 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd5b07ee0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55dbd5b07ec0 <col:44> 'int' 2
|-CXXMethodDecl 0x55dbd5b080b0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55dbd5b07f98 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55dbd5b08018 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55dbd5b08208 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55dbd5b08178 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55dbd5b08448 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55dbd5b082c8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55dbd5b08340 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55dbd5b084f8 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b08550 <col:30>
|-CXXMethodDecl 0x55dbd5b08658 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55dbd5b08590 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55dbd5b08700 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b08758 <col:30>
|-CXXMethodDecl 0x55dbd5b087a8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55dbd5b08870 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55dbd5b08988 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55dbd5b08a10 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55dbd5b08a98 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55dbd5b08b20 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55dbd5b08ba8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55dbd5b08c38 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55dbd5b08cf8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55dbd5b08d80 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55dbd5b08e08 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55dbd5b08e90 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55dbd5b08f18 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55dbd5b08fa0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55dbd5b09030 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55dbd5b090f0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55dbd5b09180 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55dbd5b092d0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55dbd5b09238 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55dbd5b09460 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55dbd5b09390 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55dbd5b09710 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55dbd5b09518 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55dbd5b09598 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55dbd5b09618 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55dbd5b097c8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55dbd5b098d0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dbd5b09b60 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b098b0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55dbd5b09890 <col:33> 'int' 0
| |-EnumConstantDecl 0x55dbd5b09960 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dbd5b09b78 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b09940 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55dbd5b09920 <col:32> 'int' 20
| |-EnumConstantDecl 0x55dbd5b099f0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dbd5b09b90 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b099d0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55dbd5b099b0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55dbd5b09a80 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55dbd5b09ba8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b09a60 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55dbd5b09a40 <col:35> 'int' 100
| `-EnumConstantDecl 0x55dbd5b09b10 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55dbd5b09bc0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd5b09af0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55dbd5b09ad0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55dbd5b09c00 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55dbd5b0a040 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dbd5b09eb0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55dbd5b09f28 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b0a110 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55dbd5b0a290 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55dbd5b0a1c0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b0a498 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dbd5b0a348 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55dbd5b0a3c0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b0a598 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55dbd5b0a638 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55dbd5b0a700 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dbd5b0a790 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55dbd5b0a9c0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b0a770 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55dbd5b0a750 <col:36> 'int' EnumConstant 0x55dbd5b0a700 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dbd5b0a7e0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dbd5b0a830 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dbd5b0a880 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dbd5b0a8d0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55dbd5b0a920 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55dbd5b0a970 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55dbd5b0aaa8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55dbd5b0a9e8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55dbd5b0ab70 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55dbd5b0ac30 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55dbd5b0acf0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55dbd5b0adb0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55dbd5b0aec8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55dbd5b0af90 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55dbd5b0b110 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55dbd5b0b040 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55dbd5b0b238 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55dbd5b0b438 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55dbd5b0b2e8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55dbd5b0b368 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55dbd5b18d88 <col:54, line:127:5>
|   |-ParenExpr 0x55dbd5b18c38 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55dbd5b18c08 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55dbd5b188f8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55dbd5b188d0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55dbd5b188b8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55dbd5b188a0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55dbd5b18870 <col:31> 'Router *' lvalue ->_router 0x55dbd5b16750
|   |   |         `-CXXThisExpr 0x55dbd5b18860 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55dbd5b18958 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55dbd5b18938 <col:48> 'int' 0
|   |   `-CallExpr 0x55dbd5b18b68 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55dbd5b18b50 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55dbd5b18b30 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55dbd56416f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55dbd5b18ba8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dbd5b189c8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55dbd5b18bc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55dbd5b189e8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55dbd5b18bd8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55dbd5b18a20 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55dbd5b18bf0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55dbd5b18b18 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55dbd5b18b00 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55dbd5b18ab8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55dbd5b18cd0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55dbd5b18c68 <col:9> 'Router *' lvalue ->_router 0x55dbd5b16750
|   | | `-CXXThisExpr 0x55dbd5b18c58 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55dbd5b18cb8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55dbd5b18c98 <col:19> 'Router *' lvalue ParmVar 0x55dbd5b0b2e8 'r' 'Router *'
|   `-BinaryOperator 0x55dbd5b18d68 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55dbd5b18d00 <col:9> 'int' lvalue ->_eindex 0x55dbd5b167b8
|     | `-CXXThisExpr 0x55dbd5b18cf0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55dbd5b18d50 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55dbd5b18d30 <col:19> 'int' lvalue ParmVar 0x55dbd5b0b368 'eindex' 'int'
|-CXXMethodDecl 0x55dbd5b0b5c0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55dbd5b0b4f8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55dbd5b0b690 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55dbd5b0b758 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55dbd5b0b7f8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55dbd5b0ba48 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55dbd5b0b8c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55dbd5b0b940 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55dbd5b0baf8 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b0bb50 <col:30>
|-CXXMethodDecl 0x55dbd5b0bc58 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55dbd5b0bb90 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55dbd5b0bd00 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b0bd58 <col:30>
|-CXXMethodDecl 0x55dbd5b0be28 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55dbd5b0bd98 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55dbd5b0bed0 <col:20>
| `-OptimizeNoneAttr 0x55dbd5b0bf28 <col:30>
|-CXXMethodDecl 0x55dbd5b0c0b8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55dbd5b0bf60 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55dbd5b0bfe0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55dbd5b0c248 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55dbd5b0c180 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55dbd5b0c398 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55dbd5b0c308 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55dbd5b0c4e8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55dbd5b0c458 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55dbd5b0c638 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55dbd5b0c5a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55dbd5b0c8f8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55dbd5b0c6f0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55dbd5b0c770 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55dbd5b0c818 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55dbd5b0c9d0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55dbd5b0ca90 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55dbd5b0cd60 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55dbd5b0cc10 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55dbd5b0cc88 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b0ce88 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55dbd5b0d060 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55dbd5b0cf40 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55dbd5b0cfc0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55dbd5b0d248 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55dbd5b0d128 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55dbd5b0d1a8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55dbd5b0d5b8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55dbd5b0d308 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0d380 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dbd5b0d400 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dbd5b18370 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5b18350 <col:106> 'int' 0
| `-ParmVarDecl 0x55dbd5b0d478 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dbd5b183a8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dbd5b18388 <col:126> 'int' 0
|-CXXMethodDecl 0x55dbd5b0d958 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dbd5b0d688 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0d720 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dbd5b0d7a0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55dbd5b0d818 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dbd5b183e0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dbd5b183c0 <col:114> 'int' 0
|-CXXMethodDecl 0x55dbd5b0dce8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dbd5b0da30 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55dbd5b0daa8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55dbd5b0db28 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55dbd5b183f8 <col:96> 'int' 0
| `-ParmVarDecl 0x55dbd5b0dba0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dbd5b18438 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dbd5b18418 <col:116> 'int' 0
|-CXXMethodDecl 0x55dbd5b0e068 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55dbd5b0ddb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0de30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b0deb0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dbd5b18470 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5b18450 <col:109> 'int' 0
| `-ParmVarDecl 0x55dbd5b0df28 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dbd5b184a8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dbd5b18488 <col:129> 'int' 0
|-CXXMethodDecl 0x55dbd5b0e3e8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dbd5b0e138 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0e1b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b0e230 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55dbd5b0e2a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dbd5b184e0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dbd5b184c0 <col:117> 'int' 0
|-CXXMethodDecl 0x55dbd5b0e778 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55dbd5b0e4c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b0e538 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b0e5b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55dbd5b184f8 <col:99> 'int' 0
| `-ParmVarDecl 0x55dbd5b0e630 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55dbd5b18538 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55dbd5b18518 <col:119> 'int' 0
|-CXXMethodDecl 0x55dbd5b0eb98 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55dbd5b0e848 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0e8c8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55dbd5b0e940 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b0e9c0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55dbd5b18570 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5b18550 <col:108> 'int' 0
| `-ParmVarDecl 0x55dbd5b0ea40 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55dbd5b185a8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55dbd5b18588 <col:141> 'int' 0
|-CXXMethodDecl 0x55dbd5b0efb8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55dbd5b0ec70 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0ecf0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55dbd5b0ed68 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b0ede8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55dbd5b0ee68 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55dbd5b185c0 <col:121> 'int' 0
|-CXXMethodDecl 0x55dbd5b0f3e8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55dbd5b0f098 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55dbd5b0f118 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55dbd5b0f190 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b0f210 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55dbd5b185e0 <col:98> 'int' 0
| `-ParmVarDecl 0x55dbd5b0f290 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55dbd5b18600 <col:123> 'int' 0
|-CXXMethodDecl 0x55dbd5b0f6b0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55dbd5b0f4c0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55dbd5b0f540 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55dbd5b0f5c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55dbd5b18620 <col:80> 'int' 0
|-EnumDecl 0x55dbd5b0f768 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55dbd5b0f870 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dbd5b0fb00 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b0f850 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55dbd5b0f830 <col:42> 'int' 1
| |-EnumConstantDecl 0x55dbd5b0f900 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dbd5b0fb18 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b0f8e0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55dbd5b0f8c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55dbd5b0f990 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dbd5b0fb30 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b0f970 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55dbd5b0f950 <col:44> 'int' 4
| |-EnumConstantDecl 0x55dbd5b0fa20 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55dbd5b0fb48 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5b0fa00 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55dbd5b0f9e0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55dbd5b0fab0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55dbd5b0fb60 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd5b0fa90 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55dbd5b0fa70 <col:34> 'int' 6
|-CXXMethodDecl 0x55dbd5b0fe18 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55dbd5b0fb88 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55dbd5b0fc28 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55dbd5b0fca8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55dbd5b0fd20 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55dbd5b186d8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55dbd5b186c0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55dbd5b186a8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55dbd5b18688 <col:98, col:105> 'String' (CXXTemporary 0x55dbd5b18688)
|           `-CXXTemporaryObjectExpr 0x55dbd5b18650 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55dbd5b100b8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55dbd5b0fee8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55dbd5b0ff60 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55dbd5b0ffd8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55dbd5b18788 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dbd5b18770 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dbd5b18758 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dbd5b18738 <col:94, col:101> 'String' (CXXTemporary 0x55dbd5b18738)
| |         `-CXXTemporaryObjectExpr 0x55dbd5b18700 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55dbd5b18f70 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55dbd5b18ee8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55dbd5b18eb8 <col:9> '<bound member function type>' ->add_task_handlers 0x55dbd5b0fe18
|     | `-CXXThisExpr 0x55dbd5b18ea8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55dbd5b18f28 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dbd5b18e28 <col:27> 'Task *' lvalue ParmVar 0x55dbd5b0fee8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55dbd5b18f40 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dbd5b18e48 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55dbd5b0ff60 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55dbd5b18f58 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55dbd5b18e68 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55dbd5b0fab0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55dbd5b18e88 <col:62> 'const String' lvalue ParmVar 0x55dbd5b0ffd8 'prefix' 'const String &'
|-CXXMethodDecl 0x55dbd5b102c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55dbd5b10180 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55dbd5b101f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55dbd5b18838 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55dbd5b18820 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55dbd5b18808 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55dbd5b187e8 <col:70, col:77> 'String' (CXXTemporary 0x55dbd5b187e8)
| |         `-CXXTemporaryObjectExpr 0x55dbd5b187b0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55dbd5b19148 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55dbd5b190c0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55dbd5b19090 <col:9> '<bound member function type>' ->add_task_handlers 0x55dbd5b0fe18
|     | `-CXXThisExpr 0x55dbd5b19080 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55dbd5b19100 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55dbd5b19000 <col:27> 'Task *' lvalue ParmVar 0x55dbd5b10180 'task' 'Task *'
|     |-ImplicitCastExpr 0x55dbd5b19118 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55dbd5b19020 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55dbd5b19130 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55dbd5b19040 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55dbd5b0fab0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55dbd5b19060 <col:57> 'const String' lvalue ParmVar 0x55dbd5b101f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55dbd5b105a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55dbd5b10390 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b10410 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b10488 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55dbd5b10858 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55dbd5b10678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b106f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b10778 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55dbd5b10b48 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55dbd5b10928 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b109a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b10a20 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55dbd5b10df8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55dbd5b10c18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b10c98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b10d18 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55dbd5b110a8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55dbd5b10ec8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b10f48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b10fc8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55dbd5b11358 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55dbd5b11178 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b111f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b11270 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55dbd5b11608 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55dbd5b11428 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b114a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b11528 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55dbd5b11918 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55dbd5b11730 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b117b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b11830 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55dbd5b11bf8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55dbd5b119e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b11a68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b11b10 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55dbd5b11ed8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55dbd5b11cc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b11d48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b11df0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55dbd5b12140 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55dbd5b11fa8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55dbd5b12028 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dbd5b120a0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55dbd5b123e8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55dbd5b12210 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55dbd5b12290 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55dbd5b12308 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55dbd5b12698 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55dbd5b124b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b12538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b125b8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55dbd5b12948 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55dbd5b12768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b127e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b12860 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55dbd5b12bf8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55dbd5b12a18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b12a98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b12b10 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55dbd5b12ec8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55dbd5b12cc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b12d48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55dbd5b12de8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55dbd5b131f8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55dbd5b12f98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55dbd5b13018 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55dbd5b13090 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55dbd5b13108 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55dbd5b18850 <col:93> 'bool' false
|-CXXMethodDecl 0x55dbd5b133e0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dbd5b132c8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55dbd5b13348 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55dbd5b135b8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dbd5b134a0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55dbd5b13520 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55dbd5b13898 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dbd5b13678 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55dbd5b136f0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55dbd5b13770 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55dbd5b137e8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b13b88 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55dbd5b13968 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55dbd5b139e0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55dbd5b13a60 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55dbd5b13ad8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b13dc0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55dbd5b13c60 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55dbd5b13ce0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55dbd5b13fa8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55dbd5b13e88 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55dbd5b13f08 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55dbd5b14058 prev 0x55dbd5b0b7f8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55dbd5b14150 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55dbd5b141e0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55dbd5b14258 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55dbd5b14318 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55dbd5b143e0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55dbd5b14558 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55dbd5b14490 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55dbd5b14600 <col:24>
| | `-OptimizeNoneAttr 0x55dbd5b14658 <col:34>
| |-CXXMethodDecl 0x55dbd5b146a0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55dbd5b14958 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55dbd5b14750 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55dbd5b147c8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55dbd5b14848 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55dbd5b14a10 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55dbd5b14a48 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55dbd5b14ab0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55dbd5b14b38 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55dbd5b14e58 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55dbd5b14bf0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55dbd5b14c68 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55dbd5b14ce0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55dbd5b14d60 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55dbd5b14f70 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55dbd5b1c8e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55dbd5b1c8e8
| | `-ParmVarDecl 0x55dbd5b1c9f8 <col:11> col:11 'const Element::Port &'
| `-CXXConstructorDecl 0x55dbd5b1ca98 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55dbd5b1ca98
|   `-ParmVarDecl 0x55dbd5b1cba8 <col:11> col:11 'Element::Port &&'
|-CXXMethodDecl 0x55dbd5b14fe8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55dbd5b15088 <col:38> "" ""
|-CXXMethodDecl 0x55dbd5b15118 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55dbd5b151b8 <col:44> "" ""
|-AccessSpecDecl 0x55dbd5b15228 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55dbd5b15250 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55dbd5b15350 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55dbd5b153a0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55dbd5b15330 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55dbd5b15310 <col:27> 'int' 4
|-FieldDecl 0x55dbd5b15458 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55dbd5b15608 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55dbd5b156c0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55dbd5b16750 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55dbd5b167b8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55dbd5b16908 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55dbd5b16848 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55dbd5b16ab8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55dbd5b169c8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55dbd5b16c98 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55dbd5b16b78 <col:20> col:23 'int'
| `-ParmVarDecl 0x55dbd5b16bf8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55dbd5b16f40 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5b16d60 <col:23> col:26 'int'
| |-ParmVarDecl 0x55dbd5b16de0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55dbd5b16e58 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55dbd5b16ff8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55dbd5b170c0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55dbd5b17110 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55dbd5b17160 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55dbd5b17340 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55dbd5b171f0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55dbd5b17268 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b175e8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55dbd5b17408 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55dbd5b17488 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55dbd5b17500 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55dbd5b17808 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55dbd5b176b8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55dbd5b17738 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55dbd5b17b40 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55dbd5b178c8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55dbd5b17948 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55dbd5b179c0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55dbd5b17a40 <col:57> col:60 'int'
|-CXXMethodDecl 0x55dbd5b17d28 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55dbd5b17c10 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55dbd5b17c90 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55dbd5b17e78 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55dbd5b17de8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55dbd5b181f8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55dbd5b17f38 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55dbd5b17fb8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55dbd5b18030 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55dbd5b180b0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55dbd5b18310 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5bc1d50 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55dbd5bc1e68 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55dbd5bc1ef8 <col:16, col:22> col:16 public
|-EnumDecl 0x55dbd5bc1f20 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55dbd5bc2020 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dbd5bc2270 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bc2000 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55dbd5bc1fe0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55dbd5bc20b0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dbd5bc2288 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bc2090 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55dbd5bc2070 <col:24> 'int' 22
| |-EnumConstantDecl 0x55dbd5bc2140 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dbd5bc22a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bc2120 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55dbd5bc2100 <col:24> 'int' 34
| |-EnumConstantDecl 0x55dbd5bc21d0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55dbd5bc22b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55dbd5bc21b0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55dbd5bc2190 <col:25> 'int' 95
| `-EnumConstantDecl 0x55dbd5bc2220 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55dbd5bc3c30 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55dbd5bc4068 <col:7>
|-CXXConstructorDecl 0x55dbd5bc3d38 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55dbd5bc3d38
| `-ParmVarDecl 0x55dbd5bc3e48 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55dbd5bc3ee8 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55dbd5bc3ee8
| `-ParmVarDecl 0x55dbd5bc3ff8 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55dbd5bc6188 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5bc22e8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55dbd5bc2448 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55dbd5bc24d8 <col:32, col:38> col:32 public
|-TypedefDecl 0x55dbd5bc2510 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55dbd56fac40 'uint32_t' sugar
|   |-Typedef 0x55dbd560d4c8 'uint32_t'
|   `-TypedefType 0x55dbd55e65a0 '__uint32_t' sugar
|     |-Typedef 0x55dbd55e6198 '__uint32_t'
|     `-BuiltinType 0x55dbd55a4620 'unsigned int'
|-CXXConstructorDecl 0x55dbd5bc2658 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55dbd5bc2580 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55dbd5bc3b38 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55dbd5bc4078 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55dbd5bc33f0 'base' 'int'
| | `-ImplicitCastExpr 0x55dbd5bc3bd8 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55dbd5bc3b98 <col:16> 'int' lvalue ParmVar 0x55dbd5bc2580 'b' 'int'
| `-CompoundStmt 0x55dbd5bc40e8 <col:19, line:1046:5>
|-CXXMethodDecl 0x55dbd5bc2b50 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55dbd5bc2720 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55dbd5bc27a0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55dbd5bc2818 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55dbd5bc2898 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55dbd5bc2958 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55dbd5bc29d8 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55dbd5bc2fa8 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55dbd5bc2c20 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55dbd5bc2f08 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55dbd5bc2cc8 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x55dbd5bc2d68 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x55dbd5bc2de0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55dbd5bc3b58 <col:82> 'const ArgContext' lvalue Var 0x55dbd5bb6c08 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55dbd5bc5018 <col:94, line:1067:5>
| |   |-DeclStmt 0x55dbd5bc4278 <line:1054:9, col:64>
| |   | `-VarDecl 0x55dbd5bc4108 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x55dbd5bc4230 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x55dbd5bc4498 <line:1055:9, col:91>
| |   | `-VarDecl 0x55dbd5bc42a8 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x55dbd5bc4470 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x55dbd5bc4450 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x55dbd5bc4400 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x55dbd5bc43e0 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x55dbd5bc4388 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x55dbd5bc4338 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x55dbd5bc4368 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x55dbd5bc43c8 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x55dbd5bc43a8 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x55dbd5bc4430 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x55dbd5bc45f8 <line:1056:9, col:27>
| |   | `-VarDecl 0x55dbd5bc4590 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x55dbd5bc4a40 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x55dbd5bc4970 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x55dbd5bc48f0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55dbd5ac4c28 0x55dbd590e208 0x55dbd590dee0 0x55dbd58fe6b0 0x55dbd58fe360 0x55dbd58fdc50 0x55dbd58d05c0 0x55dbd585da90
| |   | | |-CallExpr 0x55dbd5bc4830 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x55dbd5bc4620 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x55dbd5bc46d0 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55dbd5bc46a0 <col:19, col:23> '<bound member function type>' .begin 0x55dbd58ed8b8
| |   | | | |   `-DeclRefExpr 0x55dbd5bc4680 <col:19> 'const String' lvalue ParmVar 0x55dbd5bc2cc8 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x55dbd5bc4740 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x55dbd5bc4710 <col:32, col:36> '<bound member function type>' .end 0x55dbd58edad0
| |   | | | |   `-DeclRefExpr 0x55dbd5bc46f0 <col:32> 'const String' lvalue ParmVar 0x55dbd5bc2cc8 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x55dbd5bc4760 <col:43> 'const bool' lvalue Var 0x55dbd5bc4108 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x55dbd5bc47c8 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x55dbd5bc47a8 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x55dbd5bc47f0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55dbd5bc4590 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x55dbd5bc4810 <col:73> 'const int' lvalue Var 0x55dbd5bc42a8 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x55dbd5bc48d0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x55dbd5bc48a0 <col:16, col:20> '<bound member function type>' .end 0x55dbd58edad0
| |   | |     `-DeclRefExpr 0x55dbd5bc4880 <col:16> 'const String' lvalue ParmVar 0x55dbd5bc2cc8 'str' 'const String &'
| |   | `-BinaryOperator 0x55dbd5bc4a20 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x55dbd5bc49b8 <col:13> 'int' lvalue ->status 0x55dbd5bc3458
| |   |   | `-CXXThisExpr 0x55dbd5bc49a8 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x55dbd5bc4a08 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x55dbd5bc49e8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc20b0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x55dbd5bc4c90 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x55dbd5bc4b78 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x55dbd5bc4b60 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x55dbd5bc4b48 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x55dbd5bc4a68 <col:13> 'int' lvalue ->status 0x55dbd5bc3458
| |   | | |     `-CXXThisExpr 0x55dbd5bc4a58 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x55dbd5bc4b28 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x55dbd5bc4af8 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x55dbd5bc4aa8 <col:23> 'int' lvalue ->status 0x55dbd5bc3458
| |   | |   |   `-CXXThisExpr 0x55dbd5bc4a98 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x55dbd5bc4b10 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x55dbd5bc4ad8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc2140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x55dbd5bc4c70 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x55dbd5bc4c10 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x55dbd5bc4bb8 <col:13, col:18> '<bound member function type>' .error 0x55dbd5a87bb0
| |   |   | | `-DeclRefExpr 0x55dbd5bc4b98 <col:13> 'const ArgContext' lvalue ParmVar 0x55dbd5bc2de0 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x55dbd5bc4c38 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x55dbd5bc4be8 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x55dbd5bc4c60 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x55dbd5bc4c50 <col:20> 'bool' false
| |   |-DeclStmt 0x55dbd5bc4e68 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x55dbd5bc4e10 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x55dbd5bc4da0 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x55dbd5bc4fc8 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x55dbd5bc4e80 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55dbd5891a58
| |   | |-DeclRefExpr 0x55dbd5bc4ec8 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55dbd5bc4590 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x55dbd5bc4f98 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x55dbd5bc4f10 <col:64> 'V' lvalue ParmVar 0x55dbd5bc2d68 'result' 'V &'
| |   `-ReturnStmt 0x55dbd5bc5008 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x55dbd5bc4ff8 <col:16> 'bool' true
| `-CXXMethodDecl 0x55dbd5c795c8 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55dbd5c793a0 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x55dbd5c79478 <col:46, col:49> col:49 used result 'int &'
|   |-ParmVarDecl 0x55dbd5c794e0 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x55dbd5c7b360 <col:94, line:1067:5>
|     |-DeclStmt 0x55dbd5c79dd8 <line:1054:9, col:64>
|     | `-VarDecl 0x55dbd5c79bf8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x55dbd5c79d68 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x55dbd5c79d38 <col:36, col:55> 'const bool' lvalue Var 0x55dbd58819c8 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x55dbd5c79fb8 <line:1055:9, col:91>
|     | `-VarDecl 0x55dbd5c79df0 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55dbd5c79f38 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x55dbd5c79f20 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x55dbd5c79f00 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x55dbd5c79ee0 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x55dbd5c79ec0 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x55dbd5c79e88 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x55dbd5c79e68 <col:36, col:44> 'unsigned long' sizeof 'int':'int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x55dbd5bc4368 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x55dbd5c79ea8 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x55dbd5bc43a8 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x55dbd5bc4430 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55dbd5c7a150 <line:1056:9, col:27>
|     | `-VarDecl 0x55dbd5c7a0e8 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x55dbd5c7a5d8 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x55dbd5c7a580 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x55dbd5c7a438 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x55dbd5c7a408 <col:13> '<bound member function type>' ->parse 0x55dbd5bc2b50
|     | | | | `-CXXThisExpr 0x55dbd5c7a3f8 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x55dbd5c7a298 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55dbd5c7a268 <col:19, col:23> '<bound member function type>' .begin 0x55dbd58ed8b8
|     | | | |   `-DeclRefExpr 0x55dbd5c7a248 <col:19> 'const String' lvalue ParmVar 0x55dbd5c793a0 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55dbd5c7a308 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55dbd5c7a2d8 <col:32, col:36> '<bound member function type>' .end 0x55dbd58edad0
|     | | | |   `-DeclRefExpr 0x55dbd5c7a2b8 <col:32> 'const String' lvalue ParmVar 0x55dbd5c793a0 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x55dbd5c7a4a8 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x55dbd5c7a488 <col:43> 'const bool' lvalue Var 0x55dbd5c79bf8 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x55dbd5c7a390 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x55dbd5c7a378 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x55dbd5c7a358 <col:58, col:66> 'unsigned long' sizeof 'int':'int'
|     | | | |-ImplicitCastExpr 0x55dbd5c7a4c0 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x55dbd5c7a3b8 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x55dbd5c7a0e8 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x55dbd5c7a4f8 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x55dbd5c7a4d8 <col:73> 'const int' lvalue Var 0x55dbd5c79df0 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x55dbd5c7a560 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55dbd5c7a530 <col:16, col:20> '<bound member function type>' .end 0x55dbd58edad0
|     | |     `-DeclRefExpr 0x55dbd5c7a510 <col:16> 'const String' lvalue ParmVar 0x55dbd5c793a0 'str' 'const String &'
|     | `-BinaryOperator 0x55dbd5c7a5b8 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55dbd5bc49b8 <col:13> 'int' lvalue ->status 0x55dbd5bc3458
|     |   | `-CXXThisExpr 0x55dbd5bc49a8 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55dbd5c7a5a0 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55dbd5bc49e8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc20b0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55dbd5c7a750 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55dbd5c7a670 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55dbd5c7a658 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55dbd5c7a640 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55dbd5bc4a68 <col:13> 'int' lvalue ->status 0x55dbd5bc3458
|     | | |     `-CXXThisExpr 0x55dbd5bc4a58 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55dbd5c7a620 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55dbd5c7a5f0 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55dbd5bc4aa8 <col:23> 'int' lvalue ->status 0x55dbd5bc3458
|     | |   |   `-CXXThisExpr 0x55dbd5bc4a98 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55dbd5c7a608 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55dbd5bc4ad8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc2140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55dbd5c7a730 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55dbd5c7a6e0 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55dbd5c7a6b0 <col:13, col:18> '<bound member function type>' .error 0x55dbd5a87bb0
|     |   | | `-DeclRefExpr 0x55dbd5c7a690 <col:13> 'const ArgContext' lvalue ParmVar 0x55dbd5c794e0 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55dbd5c7a708 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55dbd5bc4be8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55dbd5c7a720 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55dbd5bc4c50 <col:20> 'bool' false
|     |-DeclStmt 0x55dbd5c7ac98 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55dbd5c7ac40 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<int>::type':'unsigned int'
|     |   `-ElaboratedType 0x55dbd5c7abf0 'typename make_unsigned<int>::type' sugar
|     |     `-TypedefType 0x55dbd5c7abd0 'make_unsigned<int>::type' sugar
|     |       |-Typedef 0x55dbd5c7ab60 'type'
|     |       `-ElaboratedType 0x55dbd5c7ab10 'typename integer_traits<int>::unsigned_type' sugar
|     |         `-TypedefType 0x55dbd5c7aaf0 'integer_traits<int>::unsigned_type' sugar
|     |           |-Typedef 0x55dbd5881b20 'unsigned_type'
|     |           `-BuiltinType 0x55dbd55a4620 'unsigned int'
|     |-CallExpr 0x55dbd5c7b2f0 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x55dbd5c7b2d8 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55dbd5c7b258 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x55dbd5c7b138 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x55dbd5891a58 'extract_integer')
|     | |-ImplicitCastExpr 0x55dbd5c7b338 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x55dbd5c7b320 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x55dbd5c7acf8 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x55dbd5c7a0e8 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x55dbd5c7adc8 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <LValueBitCast>
|     |   `-DeclRefExpr 0x55dbd5c7ad78 <col:64> 'int':'int' lvalue ParmVar 0x55dbd5c79478 'result' 'int &'
|     `-ReturnStmt 0x55dbd5c7b350 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55dbd5bc4ff8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55dbd5bc3368 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55dbd5bc3018 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55dbd5bc32c8 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55dbd5bc30c8 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55dbd5bc3168 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55dbd5bc31e0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55dbd5bc3b78 <col:71> 'const ArgContext' lvalue Var 0x55dbd5bb6c08 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55dbd5bc57a8 <col:83, line:1083:5>
| |   |-DeclStmt 0x55dbd5bc50e0 <line:1071:9, col:12>
| |   | `-VarDecl 0x55dbd5bc5078 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55dbd5bc5780 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55dbd5bc5370 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55dbd5bc51f8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55dbd5bc51c0 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55dbd5bc5108 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55dbd5bc5160 <col:31> 'const String' lvalue ParmVar 0x55dbd5bc30c8 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55dbd5bc5180 <col:36> 'V' lvalue Var 0x55dbd5bc5078 'x' 'V'
| |     | |   `-DeclRefExpr 0x55dbd5bc51a0 <col:39> 'const ArgContext' lvalue ParmVar 0x55dbd5bc31e0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55dbd5bc5350 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55dbd5bc5330 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55dbd5bc5318 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55dbd5bc5300 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55dbd5bc5220 <col:17> 'int' lvalue ->status 0x55dbd5bc3458
| |     |     |     `-CXXThisExpr 0x55dbd5bc5210 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55dbd5bc52e0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55dbd5bc52b0 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55dbd5bc5260 <col:27> 'int' lvalue ->status 0x55dbd5bc3458
| |     |       |   `-CXXThisExpr 0x55dbd5bc5250 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55dbd5bc52c8 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55dbd5bc5290 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc2140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55dbd5bc53a0 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55dbd5bc5390 <col:20> 'bool' false
| |     `-IfStmt 0x55dbd5bc5758 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55dbd5bc5440 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55dbd5bc5410 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55dbd5bc53c0 <col:18> 'int' lvalue ->status 0x55dbd5bc3458
| |       | |   `-CXXThisExpr 0x55dbd5bc53b0 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55dbd5bc5428 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55dbd5bc53f0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc2140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55dbd5bc5698 <col:42, line:1079:9>
| |       | |-CallExpr 0x55dbd5bc5640 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55dbd5bc5490 <line:1076:13> '<bound member function type>' ->range_error 0x55dbd5bc3a68
| |       | | | `-CXXThisExpr 0x55dbd5bc5460 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55dbd5bc54c0 <col:25> 'const ArgContext' lvalue ParmVar 0x55dbd5bc31e0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55dbd5bc55a0 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55dbd5bc5618 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55dbd5bc55f8 <col:43> 'V' lvalue Var 0x55dbd5bc5078 'x' 'V'
| |       | `-ReturnStmt 0x55dbd5bc5688 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55dbd5bc5678 <col:20> 'bool' false
| |       `-CompoundStmt 0x55dbd5bc5738 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55dbd5bc56f8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55dbd5bc56b8 <col:13> 'V' lvalue ParmVar 0x55dbd5bc3168 'result' 'V &'
| |         | `-DeclRefExpr 0x55dbd5bc56d8 <col:22> 'V' lvalue Var 0x55dbd5bc5078 'x' 'V'
| |         `-ReturnStmt 0x55dbd5bc5728 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55dbd5bc5718 <col:20> 'bool' true
| `-CXXMethodDecl 0x55dbd5c08a38 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55dbd5c08818 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x55dbd5c088e8 <col:35, col:38> col:38 used result 'int &'
|   |-ParmVarDecl 0x55dbd5c08950 <col:46, col:71> col:64 used args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x55dbd5bc3b78 <col:71> 'const ArgContext' lvalue Var 0x55dbd5bb6c08 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x55dbd5c79bd8 <col:83, line:1083:5>
|     |-DeclStmt 0x55dbd5c79210 <line:1071:9, col:12>
|     | `-VarDecl 0x55dbd5c791a8 <col:9, col:11> col:11 used x 'int':'int'
|     `-IfStmt 0x55dbd5c79bb0 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x55dbd5c79840 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x55dbd5c79768 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x55dbd5c79730 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x55dbd5c796e8 <col:14> '<bound member function type>' ->parse_saturating 0x55dbd5c795c8
|       | |   | `-CXXThisExpr 0x55dbd5c796d8 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x55dbd5c79280 <col:31> 'const String' lvalue ParmVar 0x55dbd5c08818 'str' 'const String &'
|       | |   |-DeclRefExpr 0x55dbd5c792a0 <col:36> 'int':'int' lvalue Var 0x55dbd5c791a8 'x' 'int':'int'
|       | |   `-DeclRefExpr 0x55dbd5c792c0 <col:39> 'const ArgContext' lvalue ParmVar 0x55dbd5c08950 'args' 'const ArgContext &'
|       | `-ParenExpr 0x55dbd5c79820 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x55dbd5c79800 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x55dbd5c797e8 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x55dbd5c797d0 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x55dbd5bc5220 <col:17> 'int' lvalue ->status 0x55dbd5bc3458
|       |     |     `-CXXThisExpr 0x55dbd5bc5210 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x55dbd5c797b0 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x55dbd5c79780 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x55dbd5bc5260 <col:27> 'int' lvalue ->status 0x55dbd5bc3458
|       |       |   `-CXXThisExpr 0x55dbd5bc5250 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x55dbd5c79798 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x55dbd5bc5290 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc2140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x55dbd5c79860 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x55dbd5bc5390 <col:20> 'bool' false
|       `-IfStmt 0x55dbd5c79b88 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x55dbd5c798a0 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x55dbd5c79870 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x55dbd5bc53c0 <col:18> 'int' lvalue ->status 0x55dbd5bc3458
|         | |   `-CXXThisExpr 0x55dbd5bc53b0 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x55dbd5c79888 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55dbd5bc53f0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55dbd5bc2140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x55dbd5c79ac0 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x55dbd5c79a30 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x55dbd5bc5490 <line:1076:13> '<bound member function type>' ->range_error 0x55dbd5bc3a68
|         | | | `-CXXThisExpr 0x55dbd5bc5460 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x55dbd5c798c0 <col:25> 'const ArgContext' lvalue ParmVar 0x55dbd5c08950 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x55dbd5c79a98 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x55dbd5c79a68 <col:31, col:50> 'const bool' lvalue Var 0x55dbd58819c8 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x55dbd5c79a08 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x55dbd5c799f0 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x55dbd5c799d8 <col:43> 'int':'int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x55dbd5c799b8 <col:43> 'int':'int' lvalue Var 0x55dbd5c791a8 'x' 'int':'int'
|         | `-ReturnStmt 0x55dbd5c79ab0 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x55dbd5bc5678 <col:20> 'bool' false
|         `-CompoundStmt 0x55dbd5c79b68 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x55dbd5c79b38 <line:1080:13, col:22> 'int':'int' lvalue '='
|           | |-DeclRefExpr 0x55dbd5c79ae0 <col:13> 'int':'int' lvalue ParmVar 0x55dbd5c088e8 'result' 'int &'
|           | `-ImplicitCastExpr 0x55dbd5c79b20 <col:22> 'int':'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x55dbd5c79b00 <col:22> 'int':'int' lvalue Var 0x55dbd5c791a8 'x' 'int':'int'
|           `-ReturnStmt 0x55dbd5c79b58 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x55dbd5bc5718 <col:20> 'bool' true
|-FieldDecl 0x55dbd5bc33f0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x55dbd5bc3458 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55dbd5bc34a8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55dbd5bc3760 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55dbd5bc34e8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55dbd5bc3568 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55dbd5bc35e0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55dbd5bc3660 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55dbd5bc3a68 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55dbd5bc3830 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55dbd5bc38a8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55dbd5bc3940 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55dbd5bc6008 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55dbd5bc6008
| `-ParmVarDecl 0x55dbd5bc6118 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55dbd5bc6298 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x55dbd5bc6298
| `-ParmVarDecl 0x55dbd5bc63a8 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x55dbd5c08598 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5a87278 prev 0x55dbd5acc758 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dbd5a87370 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55dbd5a87400 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55dbd5a87538 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5a87438 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55dbd5a88960 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5a88940 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55dbd5a884d8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55dbd5a889f0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dbd5a889b0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55dbd5a87438 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55dbd5a88540 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55dbd5a88a70 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5a88a30 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55dbd5a885a0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55dbd5a88ab0 <col:54> 'bool' false
| `-CompoundStmt 0x55dbd5a88bb8 <col:61, line:38:5>
|   `-BinaryOperator 0x55dbd5a88b98 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55dbd5a88b30 <col:9> 'const Element *' lvalue ->_context 0x55dbd5a88478
|     | `-CXXThisExpr 0x55dbd5a88b20 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55dbd5a88b80 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55dbd5a88b60 <col:20> 'int' 0
|-CXXConstructorDecl 0x55dbd5a87748 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55dbd5a875f8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55dbd5a87670 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55dbd5a88998 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5a88978 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55dbd5a88478 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55dbd5a88c10 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dbd5a88bd0 <col:20> 'const Element *' lvalue ParmVar 0x55dbd5a875f8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55dbd5a884d8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55dbd5a88c90 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55dbd5a88c50 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55dbd5a87670 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55dbd5a88540 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55dbd5a88d10 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55dbd5a88cd0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55dbd5a885a0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55dbd5a88d50 <col:73> 'bool' false
| `-CompoundStmt 0x55dbd5a88dc8 <col:80, line:46:5>
|-CXXMethodDecl 0x55dbd5a87878 <line:49:5, line:51:5> line:49:20 used context 'const Element *() const'
| `-CompoundStmt 0x55dbd5a88e40 <col:36, line:51:5>
|   `-ReturnStmt 0x55dbd5a88e30 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55dbd5a88e18 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55dbd5a88de8 <col:16> 'const Element *const' lvalue ->_context 0x55dbd5a88478
|         `-CXXThisExpr 0x55dbd5a88dd8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55dbd5a87968 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55dbd5a88ec0 <col:32, line:57:5>
|   `-ReturnStmt 0x55dbd5a88eb0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55dbd5a88e98 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55dbd5a88e68 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55dbd5a884d8
|         `-CXXThisExpr 0x55dbd5a88e58 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55dbd5a87a28 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55dbd5a87bb0 <line:65:5, col:38> col:10 used error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55dbd5a87ae0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55dbd5a87d00 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55dbd5a87c70 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55dbd5a87e50 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55dbd5a87dc0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55dbd5a88058 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55dbd5a87f08 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55dbd5a87f80 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55dbd5a88388 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55dbd5a88118 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55dbd5a88198 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55dbd5a88260 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55dbd5a88440 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55dbd5a88478 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55dbd5a884d8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55dbd5a88540 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55dbd5a885a0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55dbd5a885f0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55dbd5a885f0
| `-ParmVarDecl 0x55dbd5a88708 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x55dbd5a887a8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55dbd5a887a8
  `-ParmVarDecl 0x55dbd5a888b8 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct protoent
         0 |   char * p_name
         8 |   char ** p_aliases
        16 |   int p_proto
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5c193c0 </usr/include/netdb.h:324:1, line:329:1> line:324:8 struct protoent definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dbd5c194d8 <col:1, col:8> col:8 implicit struct protoent
|-FieldDecl 0x55dbd5c19580 <line:326:3, col:9> col:9 referenced p_name 'char *'
|-FieldDecl 0x55dbd5c195e8 <line:327:3, col:10> col:10 p_aliases 'char **'
`-FieldDecl 0x55dbd5c19650 <line:328:3, col:7> col:7 referenced p_proto 'int'

Layout: <CGRecordLayout
  LLVMType:%struct.protoent = type { i8*, i8**, i32 }
  NonVirtualBaseLLVMType:%struct.protoent = type { i8*, i8**, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct servent
         0 |   char * s_name
         8 |   char ** s_aliases
        16 |   int s_port
        24 |   char * s_proto
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55dbd5c178a0 </usr/include/netdb.h:255:1, line:261:1> line:255:8 struct servent definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55dbd5c179b8 <col:1, col:8> col:8 implicit struct servent
|-FieldDecl 0x55dbd5c17a60 <line:257:3, col:9> col:9 s_name 'char *'
|-FieldDecl 0x55dbd5c17ac8 <line:258:3, col:10> col:10 s_aliases 'char **'
|-FieldDecl 0x55dbd5c17b30 <line:259:3, col:7> col:7 referenced s_port 'int'
`-FieldDecl 0x55dbd5c17b98 <line:260:3, col:9> col:9 s_proto 'char *'

Layout: <CGRecordLayout
  LLVMType:%struct.servent = type { i8*, i8**, i32, i8* }
  NonVirtualBaseLLVMType:%struct.servent = type { i8*, i8**, i32, i8* }
  IsZeroInitializable:1
  BitFields:[
]>
