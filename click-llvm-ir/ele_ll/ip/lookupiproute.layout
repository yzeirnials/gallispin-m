
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct IPRoute
         0 |   class IPAddress addr
         0 |     uint32_t _addr
         4 |   class IPAddress mask
         4 |     uint32_t _addr
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int32_t port
        16 |   int32_t extra
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd86418 prev 0x56466dd7dbb8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466dd86510 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56466dd865a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56466dd86618 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56466dd866d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56466dd867a0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56466dd86918 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56466dd86850 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56466dd869c0 <col:24>
| `-OptimizeNoneAttr 0x56466dd86a18 <col:34>
|-CXXMethodDecl 0x56466dd86a60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56466dd86d18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56466dd86b10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56466dd86b88 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56466dd86c08 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56466dd86dd0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56466dd86e08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56466dd86e70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56466dd86ef8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56466dd87218 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56466dd86fb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56466dd87028 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56466dd870a0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56466dd87120 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56466dd87330 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56466dd8eca8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56466dd8eca8
| `-ParmVarDecl 0x56466dd8edb8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56466dd8ee58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56466dd8ee58
| `-ParmVarDecl 0x56466dd8ef68 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56466dd2d5b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466db38ef0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466db39008 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56466db39098 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56466db39168 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56466db39250 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56466db39468 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56466db39310 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db39618 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56466db39520 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56466db39760 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56466db396d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56466db398a8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56466db39818 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db399f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56466db39960 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db39ab8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x56466db39c00 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x56466db39b70 <col:28> col:31 'int'
|-CXXMethodDecl 0x56466db39cc8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x56466db39e10 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56466db39d80 <col:28> col:31 'int'
|-CXXMethodDecl 0x56466db39f88 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56466db39ec8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db3a0d0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56466db3a040 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db3a198 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56466db3a358 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56466db3a248 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56466db3a2c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db3a5a8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56466db3a418 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466db3a490 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466db3a658 <col:86> "" ""
|-CXXMethodDecl 0x56466db3a8c8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56466db3a738 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56466db3a7b0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db3aa78 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56466db3a988 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56466db3ac28 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56466db3ab30 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56466db3aef8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56466db3ace0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56466db3ad58 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56466db3add0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db3b1d8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56466db3afc0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56466db3b038 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466db3b0b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466db3b290 <col:115> "" ""
|-AccessSpecDecl 0x56466db3b300 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56466db3b338 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466db3b840 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56466db3b840
| `-ParmVarDecl 0x56466db3b948 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56466db3b9e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56466db3b9e8
| `-ParmVarDecl 0x56466db3baf8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56466db71128 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56466dd62f20 <col:7>
|-CXXConstructorDecl 0x56466db71200 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56466db71200
| `-ParmVarDecl 0x56466db71318 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56466db71388 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56466db71388
| `-ParmVarDecl 0x56466db71498 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56466dd65920 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de1d7c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x56466de1d998 prev 0x56466de1d7c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466de1da28 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466de1da50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de1f640 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x56466de1f5f0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x56466de1df20 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x56466de1de20 'type'
|     `-TemplateSpecializationType 0x56466de1ddb0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56466de1dc88 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x56466de1dc68 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56466de1dc48 <col:24> 'unsigned long' 8
|       `-RecordType 0x56466de1dd90 'char_array<8>'
|         `-ClassTemplateSpecialization 0x56466de1dca8 'char_array'
|-TypedefDecl 0x56466de1f6f8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x56466de1f6c0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x56466de1f6a0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x56466de1f640 'type'
|     `-ElaboratedType 0x56466de1f5f0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x56466de1df20 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x56466de1de20 'type'
|         `-TemplateSpecializationType 0x56466de1ddb0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56466de1dc88 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x56466de1dc68 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56466de1dc48 <col:24> 'unsigned long' 8
|           `-RecordType 0x56466de1dd90 'char_array<8>'
|             `-ClassTemplateSpecialization 0x56466de1dca8 'char_array'
|-CXXMethodDecl 0x56466de1f878 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x56466de1f788 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x56466de1f968 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466de1fa48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56466de1fa48
|-CXXMethodDecl 0x56466de1fd18 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56466de1fc20 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x56466de1ff58 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56466de1fdd0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de1fe48 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de20128 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56466de20018 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de20090 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de20288 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56466de20358 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56466de205a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56466de20418 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56466de20490 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de20808 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x56466de20678 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56466de206f0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de209c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56466de208d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de20b88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56466de20a90 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de20c40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de20cf0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de20f28 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56466de20da0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de20e18 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56466de211c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56466de210d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x56466de21290 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x56466de212e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466de21330 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de81568 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x56466de8d6d8 prev 0x56466de81568 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466de8e6f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56466de8e6a0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x56466de8e680 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x56466de8e530 'type'
|     `-SubstTemplateTypeParmType 0x56466de1d390 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de1cee0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56466de1cdf8 'sized_array_memory'
|-FieldDecl 0x56466de8e7f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56466de8e840 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466de8e878 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-PointerType 0x56466dd6f960 'Element *'
|     `-RecordType 0x56466dd6f6e0 'Element'
|       `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8e938 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x56466de8e900 'Element *&'
|   `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466dd6f960 'Element *'
|       `-RecordType 0x56466dd6f6e0 'Element'
|         `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8e9f8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x56466de8e9c0 'Element *const &'
|   `-QualType 0x56466de8d771 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd6f960 'Element *'
|         `-RecordType 0x56466dd6f6e0 'Element'
|           `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8eab8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x56466de8ea80 'Element **'
|   `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466dd6f960 'Element *'
|       `-RecordType 0x56466dd6f6e0 'Element'
|         `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8eb78 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x56466de8eb40 'Element *const *'
|   `-QualType 0x56466de8d771 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd6f960 'Element *'
|         `-RecordType 0x56466dd6f6e0 'Element'
|           `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8f750 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x56466de8f700 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x56466de8f6e0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x56466de8f670 'type'
|     `-SubstTemplateTypeParmType 0x56466de8f430 'Element *' sugar
|       |-TemplateTypeParmType 0x56466dae8510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dae84c0 'T'
|       `-PointerType 0x56466dd6f960 'Element *'
|         `-RecordType 0x56466dd6f6e0 'Element'
|           `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8f7b8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x56466de8e9c0 'Element *const &'
|   `-QualType 0x56466de8d771 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd6f960 'Element *'
|         `-RecordType 0x56466dd6f6e0 'Element'
|           `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8f810 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de8f878 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x56466de8ea80 'Element **'
|   `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466dd6f960 'Element *'
|       `-RecordType 0x56466dd6f6e0 'Element'
|         `-CXXRecord 0x56466dd79430 'Element'
|-TypedefDecl 0x56466de8f8e0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x56466de8eb40 'Element *const *'
|   `-QualType 0x56466de8d771 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56466de8d770 'Element *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd6f960 'Element *'
|         `-RecordType 0x56466dd6f6e0 'Element'
|           `-CXXRecord 0x56466dd79430 'Element'
|-EnumDecl 0x56466de8f938 <line:134:5> col:5
| `-EnumConstantDecl 0x56466de8fa30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466de8fa10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466de94920 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466de94ba8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de949d8 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de94a70 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x56466de94e38 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x56466de94d20 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x56466de950f8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x56466de94fe0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x56466de95410 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x56466de952f0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x56466de95720 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x56466de95600 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x56466de95a10 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de95858 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de958d0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56466de95b68 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x56466de95c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de95ca0 <col:30> Inherited
|-CXXMethodDecl 0x56466de95ce8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x56466de95d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de95df0 <col:30> Inherited
|-CXXMethodDecl 0x56466de95eb8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56466de95f68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de95fc0 <col:30> Inherited
|-CXXMethodDecl 0x56466de96008 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56466de960b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de96110 <col:30> Inherited
|-CXXMethodDecl 0x56466de96158 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56466de96208 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de96260 <col:30> Inherited
|-CXXMethodDecl 0x56466de962a8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56466de96358 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de963b0 <col:30> Inherited
|-CXXMethodDecl 0x56466de963d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de96488 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de96538 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466de966f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de965e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de96660 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56466de96848 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466de967b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de969f8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x56466de96900 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de96ab0 <col:20>
| `-OptimizeNoneAttr 0x56466de96b08 <col:30>
|-CXXMethodDecl 0x56466de96c28 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56466de96b30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de96ce0 <col:20>
| `-OptimizeNoneAttr 0x56466de96d38 <col:30>
|-CXXMethodDecl 0x56466de96df0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de96d60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de96f38 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de96ea8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de97068 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x56466de97198 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x56466de97268 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x56466de97338 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x56466de97478 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de973e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de975c0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de97530 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de97708 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56466de97678 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de977c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466de978c0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466de97830 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de97978 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466de97a38 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x56466de97b38 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x56466de97cb8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de97bf8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x56466de98478 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466de97d70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x56466de983d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x56466de982d8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x56466de98558 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de986a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de98618 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56466de98760 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466de989a8 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de98820 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x56466de98898 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56466de98b68 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x56466de98a78 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x56466de98db8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x56466de98c30 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x56466de98ca8 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x56466de98e78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de990d8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x56466de98fe0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x56466de991a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466de991a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466db4d2d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56466db4d3e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56466db4d488 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56466db4d4e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56466db4d548 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56466db4d5f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466db4d900 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466db4da18 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56466db4dac0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56466db4db28 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56466db4dbb8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56466db53c50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56466db54088 <col:12>
|-CXXConstructorDecl 0x56466db53d58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466db53e68 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56466db4dac0 'data' 'const char *'
| | `-ImplicitCastExpr 0x56466db56610 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56466db565e0 <col:12> 'const char *const' lvalue .data 0x56466db4dac0
| |     `-DeclRefExpr 0x56466db565c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db53e68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56466db4db28 'length' 'int'
| | `-ImplicitCastExpr 0x56466db566a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56466db56670 <col:12> 'const int' lvalue .length 0x56466db4db28
| |     `-DeclRefExpr 0x56466db56650 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db53e68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56466db4dbb8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56466db56730 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56466db56700 <col:12> 'String::memo_t *const' lvalue .memo 0x56466db4dbb8
| |     `-DeclRefExpr 0x56466db566e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db53e68 '' 'const String::rep_t &'
| `-CompoundStmt 0x56466db56788 <col:12>
|-CXXConstructorDecl 0x56466db53f08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56466db53f08
| `-ParmVarDecl 0x56466db54018 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56466db59570 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56466db64f88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466db65098 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56466db655b0 <col:12>
|   |-BinaryOperator 0x56466db653c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56466db65380 <col:12> 'const char *' lvalue ->data 0x56466db4dac0
|   | | `-CXXThisExpr 0x56466db65370 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56466db653b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56466db65340 <col:12> 'const char *const' lvalue .data 0x56466db4dac0
|   |     `-DeclRefExpr 0x56466db65320 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db65098 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56466db65490 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56466db65448 <col:12> 'int' lvalue ->length 0x56466db4db28
|   | | `-CXXThisExpr 0x56466db65438 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56466db65478 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56466db65408 <col:12> 'const int' lvalue .length 0x56466db4db28
|   |     `-DeclRefExpr 0x56466db653e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db65098 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56466db65558 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56466db65510 <col:12> 'String::memo_t *' lvalue ->memo 0x56466db4dbb8
|   | | `-CXXThisExpr 0x56466db65500 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56466db65540 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56466db654d0 <col:12> 'String::memo_t *const' lvalue .memo 0x56466db4dbb8
|   |     `-DeclRefExpr 0x56466db654b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db65098 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56466db655a0 <col:12>
|     `-UnaryOperator 0x56466db65588 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56466db65578 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56466db65108 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56466db65108
  `-ParmVarDecl 0x56466db65218 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466db44840 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466db44958 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56466db449e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x56466db44a28 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56466d815fd0 'const char *'
|   `-QualType 0x56466d815521 'const char' const
|     `-BuiltinType 0x56466d815520 'char'
|-TypedefDecl 0x56466db44ab0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56466db44a80 'String::const_iterator' sugar
|   |-Typedef 0x56466db44a28 'const_iterator'
|   `-PointerType 0x56466d815fd0 'const char *'
|     `-QualType 0x56466d815521 'const char' const
|       `-BuiltinType 0x56466d815520 'char'
|-TypedefDecl 0x56466db44c20 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56466db44b90 'int (String::*)() const'
|   |-RecordType 0x56466db448d0 'String'
|   | `-CXXRecord 0x56466db44840 'String'
|   `-ParenType 0x56466db44b30 'int () const' sugar
|     `-FunctionProtoType 0x56466db186c0 'int () const' const cdecl
|       `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466db44c88 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56466d96d0e0 'int64_t' sugar
|   |-Typedef 0x56466d87e390 'int64_t'
|   `-TypedefType 0x56466d857630 '__int64_t' sugar
|     |-Typedef 0x56466d857208 '__int64_t'
|     `-BuiltinType 0x56466d8155a0 'long'
|-TypedefDecl 0x56466db44cf0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56466d96d000 'uint64_t' sugar
|   |-Typedef 0x56466d87e530 'uint64_t'
|   `-TypedefType 0x56466d8576c0 '__uint64_t' sugar
|     |-Typedef 0x56466d857278 '__uint64_t'
|     `-BuiltinType 0x56466d815640 'unsigned long'
|-TypedefDecl 0x56466db44d80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56466db44d50 'String::intmax_t' sugar
|   |-Typedef 0x56466db44c88 'intmax_t'
|   `-TypedefType 0x56466d96d0e0 'int64_t' sugar
|     |-Typedef 0x56466d87e390 'int64_t'
|     `-TypedefType 0x56466d857630 '__int64_t' sugar
|       |-Typedef 0x56466d857208 '__int64_t'
|       `-BuiltinType 0x56466d8155a0 'long'
|-TypedefDecl 0x56466db44e10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56466db44de0 'String::uintmax_t' sugar
|   |-Typedef 0x56466db44cf0 'uintmax_t'
|   `-TypedefType 0x56466d96d000 'uint64_t' sugar
|     |-Typedef 0x56466d87e530 'uint64_t'
|     `-TypedefType 0x56466d8576c0 '__uint64_t' sugar
|       |-Typedef 0x56466d857278 '__uint64_t'
|       `-BuiltinType 0x56466d815640 'unsigned long'
|-CXXConstructorDecl 0x56466db44ed0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56466db45078 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56466db44fb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56466db45228 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56466db45168 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56466db45380 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56466db452f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56466db45598 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56466db45448 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56466db454c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56466db457b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56466db45668 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56466db456e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56466db459d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56466db45888 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56466db45908 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56466db45bf8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56466db45aa8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56466db45b28 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56466db45d88 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56466db45cc0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56466db45f08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56466db45e48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56466db46098 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56466db45fd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56466db461f0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56466db46160 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56466db46348 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56466db462b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56466db464a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56466db46410 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56466db46628 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56466db46568 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56466db467b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56466db466f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56466db46948 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56466db46880 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56466db46ad8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56466db46a10 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56466db46bd0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56466db46cf8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56466db46e78 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56466db46db0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56466db46fc8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56466db46f38 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56466db47080 <col:63> "" ""
|-CXXMethodDecl 0x56466db471c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56466db47108 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56466db473d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56466db47288 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56466db47308 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56466db475f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56466db474a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56466db47520 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56466db478d8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56466db476b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56466db47738 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56466db53720 <col:55> 'int' 10
| `-ParmVarDecl 0x56466db477b0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466db53740 <col:76> 'bool' true
|-CXXMethodDecl 0x56466db47bb8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56466db479a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56466db47a20 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56466db53750 <col:56> 'int' 10
| `-ParmVarDecl 0x56466db47a98 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466db53770 <col:77> 'bool' true
|-CXXMethodDecl 0x56466db47cc0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56466db47d88 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56466db47e50 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56466db47ef0 <col:20>
| `-OptimizeNoneAttr 0x56466db47f48 <col:30>
|-CXXConversionDecl 0x56466db48038 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56466db48108 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56466db481c8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56466db482b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56466db48378 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56466db484f8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56466db48430 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56466db48648 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56466db485b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56466db48738 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56466db487f8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56466db48a48 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56466db488b0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56466db48930 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56466db48ca8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56466db48b10 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56466db48b90 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56466db48d78 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56466db48f88 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56466db48e30 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56466db48eb0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56466db491a8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56466db49050 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56466db490d0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56466db49338 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56466db49270 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56466db49428 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56466db49598 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56466db494d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56466db497a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56466db49658 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56466db496d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56466db499c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56466db49868 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56466db498e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56466db49b50 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56466db49a80 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56466db49d70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56466db49c10 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56466db49c90 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56466db49ec0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56466db49e30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56466db4a098 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56466db49f80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56466db4a000 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56466db4a1e8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56466db4a158 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56466db4a400 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56466db4a2a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56466db4a320 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56466db53780 <col:39> 'int' 0
|-CXXMethodDecl 0x56466db4a620 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56466db4a4c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56466db4a540 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56466db537a0 <col:48> 'int' 0
|-CXXMethodDecl 0x56466db4a800 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56466db4a6e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56466db4a760 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56466db537c0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56466db4a8d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56466db4a990 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56466db4aa50 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56466db4ab10 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56466db4abd0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56466db4ad78 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56466db4ac80 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56466db4aef8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56466db4ae30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56466db4b0d0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56466db4afb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56466db4b248 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56466db4b188 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56466db4b390 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56466db4b300 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56466db4b4e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56466db4b450 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56466db4b6b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56466db4b5a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56466db4b620 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56466db4b898 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56466db4b780 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56466db4b800 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56466db4b9e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56466db4b958 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56466db4bbf8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56466db4baa8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56466db4bb28 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56466db4bd58 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56466db4bcc0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56466db4beb0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56466db4be18 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56466db4bf58 <col:57> "" ""
|-CXXMethodDecl 0x56466db4c068 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56466db4bfd8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56466db4c1b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56466db4c128 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56466db4c338 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56466db4c270 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56466db4c400 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56466db4c4c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56466db4c580 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56466db4c620 <col:49> "" ""
|-CXXMethodDecl 0x56466db4c6b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56466db4c770 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56466db4c860 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56466db4c928 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56466db4c9e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56466db4caa8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56466db4cba0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56466db4cc68 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56466db4cd30 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56466db4cf08 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56466db4cde8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56466db4ce68 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56466db4d130 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56466db4cfd0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56466db4d050 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56466db4d240 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56466db4d2a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56466db4d2d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466db4d3e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56466db4d488 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56466db4d4e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56466db4d548 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56466db4d5f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56466db4d660 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56466db4d898 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56466db4d8e8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466db4d878 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56466db4d788 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56466db4d730 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56466db4d770 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56466db4d750 <col:32> 'int' 8
|-CXXRecordDecl 0x56466db4d900 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466db4da18 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56466db4dac0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56466db4db28 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56466db4dbb8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56466db53c50 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56466db54088 <col:12>
| |-CXXConstructorDecl 0x56466db53d58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56466db53e68 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56466db4dac0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56466db56610 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56466db565e0 <col:12> 'const char *const' lvalue .data 0x56466db4dac0
| | |     `-DeclRefExpr 0x56466db565c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db53e68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56466db4db28 'length' 'int'
| | | `-ImplicitCastExpr 0x56466db566a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56466db56670 <col:12> 'const int' lvalue .length 0x56466db4db28
| | |     `-DeclRefExpr 0x56466db56650 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db53e68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56466db4dbb8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56466db56730 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56466db56700 <col:12> 'String::memo_t *const' lvalue .memo 0x56466db4dbb8
| | |     `-DeclRefExpr 0x56466db566e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db53e68 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56466db56788 <col:12>
| |-CXXConstructorDecl 0x56466db53f08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56466db53f08
| | `-ParmVarDecl 0x56466db54018 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56466db59570 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56466db64f88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56466db65098 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56466db655b0 <col:12>
| |   |-BinaryOperator 0x56466db653c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56466db65380 <col:12> 'const char *' lvalue ->data 0x56466db4dac0
| |   | | `-CXXThisExpr 0x56466db65370 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56466db653b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56466db65340 <col:12> 'const char *const' lvalue .data 0x56466db4dac0
| |   |     `-DeclRefExpr 0x56466db65320 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db65098 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56466db65490 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56466db65448 <col:12> 'int' lvalue ->length 0x56466db4db28
| |   | | `-CXXThisExpr 0x56466db65438 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56466db65478 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56466db65408 <col:12> 'const int' lvalue .length 0x56466db4db28
| |   |     `-DeclRefExpr 0x56466db653e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db65098 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56466db65558 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56466db65510 <col:12> 'String::memo_t *' lvalue ->memo 0x56466db4dbb8
| |   | | `-CXXThisExpr 0x56466db65500 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56466db65540 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56466db654d0 <col:12> 'String::memo_t *const' lvalue .memo 0x56466db4dbb8
| |   |     `-DeclRefExpr 0x56466db654b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56466db65098 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56466db655a0 <col:12>
| |     `-UnaryOperator 0x56466db65588 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56466db65578 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56466db65108 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56466db65108
|   `-ParmVarDecl 0x56466db65218 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56466db4dc30 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56466db4de78 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56466db4dc98 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56466db4dd18 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56466db4dd90 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56466db53c10 <col:79, line:261:5>
|   |-BinaryOperator 0x56466db53888 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56466db53820 <col:2, col:5> 'const char *' lvalue .data 0x56466db4dac0
|   | | `-MemberExpr 0x56466db537f0 <col:2> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|   | |   `-CXXThisExpr 0x56466db537e0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56466db53870 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56466db53850 <col:12> 'const char *' lvalue ParmVar 0x56466db4dc98 'data' 'const char *'
|   |-BinaryOperator 0x56466db53950 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56466db538e8 <col:2, col:5> 'int' lvalue .length 0x56466db4db28
|   | | `-MemberExpr 0x56466db538b8 <col:2> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|   | |   `-CXXThisExpr 0x56466db538a8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56466db53938 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56466db53918 <col:14> 'int' lvalue ParmVar 0x56466db4dd18 'length' 'int'
|   `-IfStmt 0x56466db53bf8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56466db53a70 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56466db53a58 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56466db53a38 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56466db53a18 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56466db539b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|     |       | `-MemberExpr 0x56466db53980 <col:7> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|     |       |   `-CXXThisExpr 0x56466db53970 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56466db53a00 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56466db539e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x56466db4dd90 'memo' 'String::memo_t *'
|     `-CallExpr 0x56466db53bd0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56466db53bb8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466db53ac0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56466db3c8a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56466db53b28 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56466db4d488
|         `-ImplicitCastExpr 0x56466db53b10 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56466db53af0 <col:27> 'String::memo_t *' lvalue ParmVar 0x56466db4dd90 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56466db4e128 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56466db4df48 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56466db4dfc8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56466db4e040 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56466db4dc30 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56466db54098 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466db54228 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56466db54190 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56466db54100 <col:2> '<bound member function type>' ->assign_memo 0x56466db4de78
|     | `-ImplicitCastExpr 0x56466db541c8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56466db540f0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56466db541e0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56466db54130 <col:14> 'const char *' lvalue ParmVar 0x56466db4df48 'data' 'const char *'
|     |-ImplicitCastExpr 0x56466db541f8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56466db54150 <col:20> 'int' lvalue ParmVar 0x56466db4dfc8 'length' 'int'
|     `-ImplicitCastExpr 0x56466db54210 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56466db54170 <col:28> 'String::memo_t *' lvalue ParmVar 0x56466db4e040 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56466db4e2b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56466db4e1f8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56466db54480 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56466db54400 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56466db54250 <col:2> '<bound member function type>' ->assign_memo 0x56466db4de78
|     | `-CXXThisExpr 0x56466db54240 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56466db54438 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56466db542d0 <col:14, col:19> 'const char *' lvalue .data 0x56466db4dac0
|     |   `-MemberExpr 0x56466db542a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56466db4dc30
|     |     `-DeclRefExpr 0x56466db54280 <col:14> 'const String' lvalue ParmVar 0x56466db4e1f8 'x' 'const String &'
|     |-ImplicitCastExpr 0x56466db54450 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56466db54350 <col:25, col:30> 'int' lvalue .length 0x56466db4db28
|     |   `-MemberExpr 0x56466db54320 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56466db4dc30
|     |     `-DeclRefExpr 0x56466db54300 <col:25> 'const String' lvalue ParmVar 0x56466db4e1f8 'x' 'const String &'
|     `-ImplicitCastExpr 0x56466db54468 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56466db543d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|         `-MemberExpr 0x56466db543a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56466db4dc30
|           `-DeclRefExpr 0x56466db54380 <col:38> 'const String' lvalue ParmVar 0x56466db4e1f8 'x' 'const String &'
|-CXXMethodDecl 0x56466db4e380 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56466db54e40 <col:31, line:278:5>
|   `-IfStmt 0x56466db54e28 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56466db54520 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56466db54508 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56466db544d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|     |     `-MemberExpr 0x56466db544a8 <col:6> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|     |       `-CXXThisExpr 0x56466db54498 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56466db54e00 <col:15, line:277:2>
|       |-ParenExpr 0x56466db549d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56466db549a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56466db54630 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56466db54618 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56466db54600 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56466db545c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56466db4d488
|       |   |       `-ImplicitCastExpr 0x56466db545a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56466db54578 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|       |   |           `-MemberExpr 0x56466db54548 <col:27> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|       |   |             `-CXXThisExpr 0x56466db54538 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56466db54690 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56466db54670 <col:54> 'int' 0
|       |   `-CallExpr 0x56466db54900 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56466db548e8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56466db54868 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56466db54940 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56466db54778 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56466db54958 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56466db547a8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56466db54970 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56466db547e0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56466db54988 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56466db54850 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56466db54838 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56466db54800 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56466db54d20 <line:274:6, line:275:22>
|       | |-CallExpr 0x56466db54be0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56466db54bc8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56466db54b40 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56466db3dcf0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56466db54b10 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56466db4d488
|       | |   `-ImplicitCastExpr 0x56466db54af8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56466db54ac8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|       | |       `-MemberExpr 0x56466db54a98 <col:40> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|       | |         `-CXXThisExpr 0x56466db54a88 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56466db54ce0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56466db54cc8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56466db54c08 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56466db52b60 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56466db54d08 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56466db54c68 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|       |       `-MemberExpr 0x56466db54c38 <col:15> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|       |         `-CXXThisExpr 0x56466db54c28 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56466db54de0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56466db54d78 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56466db4dbb8
|         | `-MemberExpr 0x56466db54d48 <col:6> 'String::rep_t' lvalue ->_r 0x56466db4dc30
|         |   `-CXXThisExpr 0x56466db54d38 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56466db54dc8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56466db54da8 <col:16> 'int' 0
|-CXXMethodDecl 0x56466db4e618 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56466db4e438 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56466db4e4b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56466db4e530 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56466db4e6f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56466db4e940 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56466db4e7a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56466db4e828 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56466db4e8a0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56466db4eb28 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56466db4ea10 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56466db4ea90 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56466db4ec28 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56466db54f18 <col:41, line:286:5>
|   `-ReturnStmt 0x56466db54f08 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56466db54ed8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56466db54ea0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56466db54e88 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56466db54e68 <col:46> 'int' 1
|-CXXMethodDecl 0x56466db4eec8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56466db4ece0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56466db4ed60 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56466db4ede0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56466db52b60 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56466db4ef90 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56466db52c30 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56466db52e00 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56466db52ce8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56466db52d68 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56466db52ec0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56466db52f88 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56466db53088 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56466db53100 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56466db53178 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56466db531e0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56466db532e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56466db53330 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466db532c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56466db532a0 <col:22> 'int' 14
|-CXXMethodDecl 0x56466db53548 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56466db53360 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56466db533e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x56466db53460 <col:43> col:46 'int'
|-FriendDecl 0x56466db53650 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56466db536e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de9a650 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x56466de9a828 prev 0x56466de9a650 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466de9a8b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466de9a8e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de9c240 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x56466de9c1f0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x56466de9c1d0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x56466de9aaf8 'type'
|     `-SubstTemplateTypeParmType 0x56466de9aac0 'String' sugar
|       |-TemplateTypeParmType 0x56466db080e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db08090 'T'
|       `-RecordType 0x56466db448d0 'String'
|         `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9c2f8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x56466de9c2c0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x56466de9c2a0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56466de9c240 'type'
|     `-ElaboratedType 0x56466de9c1f0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x56466de9c1d0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x56466de9aaf8 'type'
|         `-SubstTemplateTypeParmType 0x56466de9aac0 'String' sugar
|           |-TemplateTypeParmType 0x56466db080e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466db08090 'T'
|           `-RecordType 0x56466db448d0 'String'
|             `-CXXRecord 0x56466db44840 'String'
|-CXXMethodDecl 0x56466de9c478 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x56466de9c388 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x56466de9c568 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466de9c648 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56466de9c648
|-CXXMethodDecl 0x56466de9d920 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56466de9c820 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x56466de9db68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56466de9d9d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de9da50 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9dd38 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56466de9dc28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de9dca0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9de98 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56466de9df68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56466de9e1b8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56466de9e028 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56466de9e0a0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9e418 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x56466de9e288 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56466de9e300 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9e5d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56466de9e4e8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9e798 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56466de9e6a0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9e850 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de9e900 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de9eb38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56466de9e9b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de9ea28 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56466de9edd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56466de9ece0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x56466de9eea0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x56466de9eef0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466de9ef40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466dd7c070 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56466de993f8 prev 0x56466dd7c070 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466de9a5c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x56466de9a570 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x56466de9a550 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56466de9a400 'type'
|     `-SubstTemplateTypeParmType 0x56466de9a290 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x56466dadde90 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56466dadde38 'F'
|       `-RecordType 0x56466de99ef0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x56466de99e10 'typed_array_memory'
|-FieldDecl 0x56466de9ef90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x56466de9efe0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466de9f018 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466db448d0 'String'
|     `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9f0a8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x56466de9f070 'String &'
|   `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466db448d0 'String'
|       `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9f138 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x56466de9f100 'const String &'
|   `-QualType 0x56466de99491 'const String' const
|     `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466db448d0 'String'
|         `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9f1c8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x56466de9f190 'String *'
|   `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466db448d0 'String'
|       `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9f258 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x56466de9f220 'const String *'
|   `-QualType 0x56466de99491 'const String' const
|     `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466db448d0 'String'
|         `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9feb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x56466de9fe60 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x56466de9fe40 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x56466de9fd78 'type'
|     `-LValueReferenceType 0x56466de9fd40 'const String &'
|       `-QualType 0x56466de9fae1 'const String' const
|         `-SubstTemplateTypeParmType 0x56466de9fae0 'String' sugar
|           |-TemplateTypeParmType 0x56466dae7de0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466dae7d88 'T'
|           `-RecordType 0x56466db448d0 'String'
|             `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9ff18 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x56466de9f100 'const String &'
|   `-QualType 0x56466de99491 'const String' const
|     `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466db448d0 'String'
|         `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466de9ff70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de9ffd8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x56466de9f190 'String *'
|   `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466db448d0 'String'
|       `-CXXRecord 0x56466db44840 'String'
|-TypedefDecl 0x56466dea0040 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x56466de9f220 'const String *'
|   `-QualType 0x56466de99491 'const String' const
|     `-SubstTemplateTypeParmType 0x56466de99490 'String' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466db448d0 'String'
|         `-CXXRecord 0x56466db44840 'String'
|-EnumDecl 0x56466dea0098 <line:134:5> col:5
| `-EnumConstantDecl 0x56466dea0190 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466dea0170 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466dea0218 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466dea0468 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dea02d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dea0370 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x56466dea0728 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x56466dea0610 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x56466dea09e8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x56466dea08d0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x56466dea0d00 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x56466dea0be0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x56466dea1010 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x56466dea0ef0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x56466dea1300 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dea1148 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dea11c0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56466dea1428 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56466dea1508 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dea1560 <col:30> Inherited
|-CXXMethodDecl 0x56466dea15a8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56466dea1658 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dea16b0 <col:30> Inherited
|-CXXMethodDecl 0x56466dea1778 <line:152:5, col:63> col:55 begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56466dea1828 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dea1880 <col:30> Inherited
|-CXXMethodDecl 0x56466dea18c8 <line:153:5, col:61> col:55 end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56466dea1978 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dea19d0 <col:30> Inherited
|-CXXMethodDecl 0x56466dea1a18 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56466dea1ac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dea1b20 <col:30> Inherited
|-CXXMethodDecl 0x56466dea1b68 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56466dea1c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dea1c70 <col:30> Inherited
|-CXXMethodDecl 0x56466dea1c98 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466dea1d48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466dea1df8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466dea1fb8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dea1ea8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dea1f20 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56466dea2108 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466dea2078 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dea22b8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x56466dea21c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466dea2370 <col:20>
| `-OptimizeNoneAttr 0x56466dea23c8 <col:30>
|-CXXMethodDecl 0x56466dea24b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x56466dea23f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466dea2570 <col:20>
| `-OptimizeNoneAttr 0x56466dea25c8 <col:30>
|-CXXMethodDecl 0x56466dea2680 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466dea25f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dea27c8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466dea2738 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dea28f8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x56466dea29f8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x56466dea2ac8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x56466dea2b98 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x56466dea2cd8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466dea2c48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dea2e20 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466dea2d90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dea2f68 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466dea2ed8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466dea3020 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466dea3120 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466dea3090 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466dea31d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466dea3298 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x56466dea3398 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x56466dea3518 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56466dea3458 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x56466dea3ca8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466dea35d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x56466dea3c08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x56466dea3b08 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x56466dea3d88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466dea3ed8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56466dea3e48 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56466dea3f90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466dea41d8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dea4050 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56466dea40c8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56466dea4368 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x56466dea42a8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56466dea4578 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x56466dea4430 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56466dea44a8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56466dea4638 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466dea4898 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x56466dea47a0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x56466dea4968 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466dea4968

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466dea7770 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x56466dea7948 prev 0x56466dea7770 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466dea79d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466dea7a00 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466dea95d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x56466dea9580 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x56466dea7eb0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x56466dea7db0 'type'
|     `-TemplateSpecializationType 0x56466dea7d40 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56466dea7c20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x56466dea7c00 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56466dea7be0 <col:24> 'unsigned long' 4
|       `-RecordType 0x56466dea7d20 'char_array<4>'
|         `-ClassTemplateSpecialization 0x56466dea7c40 'char_array'
|-TypedefDecl 0x56466dea9688 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x56466dea9650 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x56466dea9630 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x56466dea95d0 'type'
|     `-ElaboratedType 0x56466dea9580 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x56466dea7eb0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x56466dea7db0 'type'
|         `-TemplateSpecializationType 0x56466dea7d40 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56466dea7c20 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x56466dea7c00 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56466dea7be0 <col:24> 'unsigned long' 4
|           `-RecordType 0x56466dea7d20 'char_array<4>'
|             `-ClassTemplateSpecialization 0x56466dea7c40 'char_array'
|-CXXMethodDecl 0x56466dea9808 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x56466dea9718 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x56466dea98f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466dea99d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56466dea99d8
|-CXXMethodDecl 0x56466dea9ca8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x56466dea9bb0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x56466dea9ee8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56466dea9d60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466dea9dd8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deaa0b8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56466dea9fa8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466deaa020 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deaa218 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x56466deaa2e8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x56466deaa538 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56466deaa3a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x56466deaa420 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deaa798 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x56466deaa608 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x56466deaa680 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deaa958 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x56466deaa868 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deaab18 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x56466deaaa20 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deaabd0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466deaac80 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466deaaeb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56466deaad30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466deaada8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56466deab158 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x56466deab060 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x56466deab220 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x56466deab270 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466deab2c0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466dea4bb0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x56466dea4db8 prev 0x56466dea4bb0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466dea76e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56466dea7690 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x56466dea7670 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x56466dea7520 'type'
|     `-SubstTemplateTypeParmType 0x56466dea7340 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466dea56b0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x56466dea55c8 'sized_array_memory'
|-FieldDecl 0x56466deab310 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56466deab360 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466deab398 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deab428 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x56466deab3f0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deab4e8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x56466deab4b0 'const unsigned int &'
|   `-QualType 0x56466dea4e51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deab578 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x56466deab540 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deab608 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x56466deab5d0 'const unsigned int *'
|   `-QualType 0x56466dea4e51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deac1f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x56466deac1a0 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x56466deac180 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x56466deac110 'type'
|     `-SubstTemplateTypeParmType 0x56466deabed0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56466dae8510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dae84c0 'T'
|       `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deac258 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x56466deab4b0 'const unsigned int &'
|   `-QualType 0x56466dea4e51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deac2b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deac318 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x56466deab540 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-BuiltinType 0x56466d815620 'unsigned int'
|-TypedefDecl 0x56466deac380 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x56466deab5d0 'const unsigned int *'
|   `-QualType 0x56466dea4e51 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56466dea4e50 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815620 'unsigned int'
|-EnumDecl 0x56466deac3d8 <line:134:5> col:5
| `-EnumConstantDecl 0x56466deac4d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466deac4b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466deac558 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466deac7a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deac610 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466deac6b0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x56466deaca68 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56466deac950 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x56466deacd28 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x56466deacc10 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x56466dead070 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56466deacf50 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x56466dead380 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x56466dead260 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x56466dead670 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dead4b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dead530 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56466dead798 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x56466dead878 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dead8d0 <col:30> Inherited
|-CXXMethodDecl 0x56466dead918 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x56466dead9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deada20 <col:30> Inherited
|-CXXMethodDecl 0x56466deadab8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56466deadb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deadbc0 <col:30> Inherited
|-CXXMethodDecl 0x56466deadc08 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56466deadcb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deadd10 <col:30> Inherited
|-CXXMethodDecl 0x56466deadd58 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56466deade08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deade60 <col:30> Inherited
|-CXXMethodDecl 0x56466deadea8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56466deadf58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deadfb0 <col:30> Inherited
|-CXXMethodDecl 0x56466deadfd8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466deae088 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466deae138 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466deae2f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deae1e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466deae260 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56466deae448 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466deae3b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deae5f8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x56466deae500 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466deae6b0 <col:20>
| `-OptimizeNoneAttr 0x56466deae708 <col:30>
|-CXXMethodDecl 0x56466deae828 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x56466deae730 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466deae8e0 <col:20>
| `-OptimizeNoneAttr 0x56466deae938 <col:30>
|-CXXMethodDecl 0x56466deae9f0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466deae960 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deaeb38 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466deaeaa8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deaec68 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x56466deaed98 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x56466deaee68 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x56466deaef38 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x56466deb1640 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466deaefe8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb1788 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466deb16f8 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb18d0 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466deb1840 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466deb1988 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466deb1a88 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466deb19f8 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466deb1b40 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466deb1bf8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x56466deb1cf8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x56466deb1e78 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x56466deb1db8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x56466deb2638 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466deb1f30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x56466deb2598 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x56466deb2498 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x56466deb2718 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466deb2868 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x56466deb27d8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56466deb2920 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466deb2b68 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deb29e0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x56466deb2a58 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56466deb2d28 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x56466deb2c38 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x56466deb2f78 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x56466deb2df0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x56466deb2e68 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x56466deb3038 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466deb3298 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56466deb31a0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x56466deb3368 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466deb3368

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de85a98 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x56466deb35c8 prev 0x56466de85a98 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466deb45e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56466deb4590 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x56466deb4570 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x56466deb4420 'type'
|     `-SubstTemplateTypeParmType 0x56466dea7340 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466dea56b0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x56466dea55c8 'sized_array_memory'
|-FieldDecl 0x56466deb46e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56466deb4730 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466deb4768 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb47f8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x56466deb47c0 'int &'
|   `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb48b8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x56466deb4880 'const int &'
|   `-QualType 0x56466deb3661 'const int' const
|     `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb4948 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x56466deb4910 'int *'
|   `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb49d8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x56466deb49a0 'const int *'
|   `-QualType 0x56466deb3661 'const int' const
|     `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb55c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x56466deb5570 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x56466deb5550 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x56466deb54e0 'type'
|     `-SubstTemplateTypeParmType 0x56466deb52a0 'int' sugar
|       |-TemplateTypeParmType 0x56466dae8510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dae84c0 'T'
|       `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb5628 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x56466deb4880 'const int &'
|   `-QualType 0x56466deb3661 'const int' const
|     `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb5680 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb56e8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x56466deb4910 'int *'
|   `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466deb5750 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x56466deb49a0 'const int *'
|   `-QualType 0x56466deb3661 'const int' const
|     `-SubstTemplateTypeParmType 0x56466deb3660 'int' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-BuiltinType 0x56466d815580 'int'
|-EnumDecl 0x56466deb57a8 <line:134:5> col:5
| `-EnumConstantDecl 0x56466deb58a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466deb5880 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466deb5928 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466deb5b78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deb59e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466deb5a80 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x56466deb5e38 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x56466deb5d20 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x56466deb60f8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x56466deb5fe0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x56466deb6410 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x56466deb62f0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x56466deb6720 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x56466deb6600 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x56466deb6a10 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deb6858 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466deb68d0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56466deb6b38 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56466deb6c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deb6c70 <col:30> Inherited
|-CXXMethodDecl 0x56466deb6cb8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56466deb6d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deb6dc0 <col:30> Inherited
|-CXXMethodDecl 0x56466deb6e88 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56466deb6f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deb6f90 <col:30> Inherited
|-CXXMethodDecl 0x56466deb6fd8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56466deb7088 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deb70e0 <col:30> Inherited
|-CXXMethodDecl 0x56466deb7128 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56466deb71d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deb7230 <col:30> Inherited
|-CXXMethodDecl 0x56466deb7278 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56466deb7328 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466deb7380 <col:30> Inherited
|-CXXMethodDecl 0x56466deb73a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466deb7458 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466deb7508 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466deb76c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deb75b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466deb7630 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56466deb7818 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466deb7788 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb79c8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x56466deb78d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466deb7a80 <col:20>
| `-OptimizeNoneAttr 0x56466deb7ad8 <col:30>
|-CXXMethodDecl 0x56466deb7bf8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x56466deb7b00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466deb7cb0 <col:20>
| `-OptimizeNoneAttr 0x56466deb7d08 <col:30>
|-CXXMethodDecl 0x56466deb7dc0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466deb7d30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb7f08 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466deb7e78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb8038 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x56466deb8168 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x56466deb8238 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x56466deb8308 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x56466deb8448 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466deb83b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb8590 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466deb8500 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deb86d8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466deb8648 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466deb8790 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466deb8890 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466deb8800 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466deb8948 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466deb8a08 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x56466deb8b08 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x56466deb8c88 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56466deb8bc8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x56466deb9448 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466deb8d40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x56466deb93a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x56466deb92a8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x56466deb9528 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466debace0 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56466debac50 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56466debad98 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466debafe8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56466debae58 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x56466debaed0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56466debb1a8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x56466debb0b8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x56466debb3f8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x56466debb270 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x56466debb2e8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x56466debb4b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466debb718 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x56466debb620 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x56466debb7e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466debb7e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466debb920 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56466debba38 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x56466debbad8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x56466debbb38 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x56466debbbd0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56466debbbd0
| `-ParmVarDecl 0x56466debbce8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56466debbd88 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56466debbd88
| `-ParmVarDecl 0x56466debbe98 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56466debbf38 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56466debbf38
| `-ParmVarDecl 0x56466debc048 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56466debc0b8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56466debc0b8
| `-ParmVarDecl 0x56466debc1c8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x56466debc250 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x56466debc250

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466debd7e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x56466debd9b8 prev 0x56466debd7e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466debda48 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466debda70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466debf430 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x56466debf3e0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x56466debf3c0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x56466debdc88 'type'
|     `-SubstTemplateTypeParmType 0x56466debdc50 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56466db080e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db08090 'T'
|       `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|         `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466debf4e8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x56466debf4b0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x56466debf490 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x56466debf430 'type'
|     `-ElaboratedType 0x56466debf3e0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x56466debf3c0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x56466debdc88 'type'
|         `-SubstTemplateTypeParmType 0x56466debdc50 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x56466db080e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466db08090 'T'
|           `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|             `-CXXRecord 0x56466debb920 'element_landmark_t'
|-CXXMethodDecl 0x56466debf668 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x56466debf578 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x56466debf758 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466debf838 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56466debf838
|-CXXMethodDecl 0x56466debfb08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x56466debfa10 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x56466debfd48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56466debfbc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466debfc38 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466debff18 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56466debfe08 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466debfe80 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466dec0078 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x56466dec0148 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x56466dec0398 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56466dec0208 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x56466dec0280 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466dec05f8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x56466dec0468 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x56466dec04e0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466dec07b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x56466dec06c8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466dec0978 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x56466dec0880 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466dec0a30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466dec0ae0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466dec0d18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56466dec0b90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466dec0c08 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56466dec0fb8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x56466dec0ec0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x56466dec1080 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x56466dec10d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466dec1120 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466debc340 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x56466debc548 prev 0x56466debc340 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466debd750 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x56466debd700 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x56466debd6e0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x56466debd590 'type'
|     `-SubstTemplateTypeParmType 0x56466debd420 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x56466dadde90 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56466dadde38 'F'
|       `-RecordType 0x56466debd080 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x56466debcfa0 'typed_array_memory'
|-FieldDecl 0x56466dec1170 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x56466dec11c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466dec11f8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|     `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec1288 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x56466dec1250 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|       `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec1318 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x56466dec12e0 'const Router::element_landmark_t &'
|   `-QualType 0x56466debc5e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|         `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec13a8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x56466dec1370 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|       `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec1438 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x56466dec1400 'const Router::element_landmark_t *'
|   `-QualType 0x56466debc5e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|         `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec2090 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x56466dec2040 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x56466dec2020 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x56466dec1f58 'type'
|     `-LValueReferenceType 0x56466dec1f20 'const Router::element_landmark_t &'
|       `-QualType 0x56466dec1cc1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x56466dec1cc0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x56466dae7de0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466dae7d88 'T'
|           `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|             `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec20f8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x56466dec12e0 'const Router::element_landmark_t &'
|   `-QualType 0x56466debc5e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|         `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec2150 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466dec21b8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x56466dec1370 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|       `-CXXRecord 0x56466debb920 'element_landmark_t'
|-TypedefDecl 0x56466dec2220 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x56466dec1400 'const Router::element_landmark_t *'
|   `-QualType 0x56466debc5e1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56466debc5e0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466debb9b0 'Router::element_landmark_t'
|         `-CXXRecord 0x56466debb920 'element_landmark_t'
|-EnumDecl 0x56466dec2278 <line:134:5> col:5
| `-EnumConstantDecl 0x56466dec2370 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466dec2350 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466dec23f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466dec2688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dec24b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dec2550 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56466dec2948 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56466dec2830 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x56466dec4e30 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56466dec2af0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56466dec5170 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56466dec5050 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x56466dec5480 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56466dec5360 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56466dec5770 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dec55b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dec5630 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56466dec5898 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56466dec5978 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dec59d0 <col:30> Inherited
|-CXXMethodDecl 0x56466dec5a18 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56466dec5ac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dec5b20 <col:30> Inherited
|-CXXMethodDecl 0x56466dec5be8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56466dec5c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dec5cf0 <col:30> Inherited
|-CXXMethodDecl 0x56466dec5d38 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56466dec5de8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dec5e40 <col:30> Inherited
|-CXXMethodDecl 0x56466dec5e88 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56466dec5f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dec5f90 <col:30> Inherited
|-CXXMethodDecl 0x56466dec5fd8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56466dec6088 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466dec60e0 <col:30> Inherited
|-CXXMethodDecl 0x56466dec6108 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466dec61b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466dec6268 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466dec6428 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dec6318 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dec6390 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56466dec6578 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466dec64e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dec6728 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x56466dec6630 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466dec67e0 <col:20>
| `-OptimizeNoneAttr 0x56466dec6838 <col:30>
|-CXXMethodDecl 0x56466dec6958 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x56466dec6860 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466dec6a10 <col:20>
| `-OptimizeNoneAttr 0x56466dec6a68 <col:30>
|-CXXMethodDecl 0x56466dec6b20 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466dec6a90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dec6c68 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466dec6bd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dec6d98 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56466dec6ec8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56466dec6f98 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56466dec7068 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56466dec71a8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466dec7118 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dec72f0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466dec7260 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466dec7438 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466dec73a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466dec74f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466dec75f0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466dec7560 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466dec76a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466dec7768 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x56466dec7868 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x56466dec79e8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56466dec7928 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x56466dec8178 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466dec7aa0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x56466dec80d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x56466dec7fd8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56466dec8258 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466dec83a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56466dec8318 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56466dec8460 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466dec86a8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dec8520 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x56466dec8598 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56466dec8838 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x56466dec8778 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x56466dec8a48 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x56466dec8900 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x56466dec8978 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x56466dec8b08 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466dec8d68 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56466dec8c70 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x56466dec8e38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466dec8e38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de08ab0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x56466de08c88 prev 0x56466de08ab0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466de08d18 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466de08d40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de0a910 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x56466de0a8c0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x56466de091f0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x56466de090f0 'type'
|     `-TemplateSpecializationType 0x56466de09080 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56466de08f60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x56466de08f40 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56466de08f20 <col:24> 'unsigned long' 16
|       `-RecordType 0x56466de09060 'char_array<16>'
|         `-ClassTemplateSpecialization 0x56466de08f80 'char_array'
|-TypedefDecl 0x56466de0a9c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x56466de0a990 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x56466de0a970 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x56466de0a910 'type'
|     `-ElaboratedType 0x56466de0a8c0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x56466de091f0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x56466de090f0 'type'
|         `-TemplateSpecializationType 0x56466de09080 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56466de08f60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x56466de08f40 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56466de08f20 <col:24> 'unsigned long' 16
|           `-RecordType 0x56466de09060 'char_array<16>'
|             `-ClassTemplateSpecialization 0x56466de08f80 'char_array'
|-CXXMethodDecl 0x56466de0ab48 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x56466de0aa58 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x56466de0ac38 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466de0ad18 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56466de0ad18
|-CXXMethodDecl 0x56466de0afe8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56466de0aef0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x56466de0b228 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56466de0b0a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de0b118 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de0b3f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56466de0b2e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de0b360 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de0b558 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56466de0b628 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56466de0b878 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56466de0b6e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56466de0b760 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de15b10 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x56466de0b948 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56466de0b9c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de15cd8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56466de15be0 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de15e98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56466de15da0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de15f50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de16000 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de16238 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56466de160b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de16128 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56466de164d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56466de163e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x56466de165a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x56466de165f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466de16640 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466dec9550 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x56466dec9758 prev 0x56466dec9550 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466deca820 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56466deca7d0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x56466deca7b0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x56466deca660 'type'
|     `-SubstTemplateTypeParmType 0x56466de08680 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de081d0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56466de080e8 'sized_array_memory'
|-FieldDecl 0x56466deca920 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56466deca970 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466deca9a8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466de8bd70 'Router::Connection'
|     `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decaa68 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x56466decaa30 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de8bd70 'Router::Connection'
|       `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decaaf8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x56466decaac0 'const Router::Connection &'
|   `-QualType 0x56466dec97f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de8bd70 'Router::Connection'
|         `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decab88 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x56466decab50 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de8bd70 'Router::Connection'
|       `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decac18 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x56466decabe0 'const Router::Connection *'
|   `-QualType 0x56466dec97f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de8bd70 'Router::Connection'
|         `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decb870 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x56466decb820 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x56466decb800 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x56466decb738 'type'
|     `-LValueReferenceType 0x56466decb700 'const Router::Connection &'
|       `-QualType 0x56466decb4a1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x56466decb4a0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x56466dae7de0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466dae7d88 'T'
|           `-RecordType 0x56466de8bd70 'Router::Connection'
|             `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decb8d8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x56466decaac0 'const Router::Connection &'
|   `-QualType 0x56466dec97f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de8bd70 'Router::Connection'
|         `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decb930 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466decb998 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x56466decab50 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de8bd70 'Router::Connection'
|       `-CXXRecord 0x56466de8bce0 'Connection'
|-TypedefDecl 0x56466decba00 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x56466decabe0 'const Router::Connection *'
|   `-QualType 0x56466dec97f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56466dec97f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de8bd70 'Router::Connection'
|         `-CXXRecord 0x56466de8bce0 'Connection'
|-EnumDecl 0x56466decba58 <line:134:5> col:5
| `-EnumConstantDecl 0x56466decbb50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466decbb30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466decbbd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466decbe68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56466decbc90 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466decbd30 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x56466decc128 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56466decc010 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x56466decc3e8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x56466decc2d0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x56466decc730 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56466decc610 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x56466decca40 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x56466decc920 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x56466deccd30 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56466deccb78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466deccbf0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56466decf4a8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x56466decf588 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466decf5e0 <col:30> Inherited
|-CXXMethodDecl 0x56466decf628 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x56466decf6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466decf730 <col:30> Inherited
|-CXXMethodDecl 0x56466decf7f8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56466decf8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466decf900 <col:30> Inherited
|-CXXMethodDecl 0x56466decf948 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56466decf9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466decfa50 <col:30> Inherited
|-CXXMethodDecl 0x56466decfa98 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56466decfb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466decfba0 <col:30> Inherited
|-CXXMethodDecl 0x56466decfbe8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56466decfc98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466decfcf0 <col:30> Inherited
|-CXXMethodDecl 0x56466decfd18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466decfdc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466decfe78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466ded0038 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56466decff28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466decffa0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56466ded0188 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466ded00f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded0338 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x56466ded0240 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466ded03f0 <col:20>
| `-OptimizeNoneAttr 0x56466ded0448 <col:30>
|-CXXMethodDecl 0x56466ded0568 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x56466ded0470 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466ded0620 <col:20>
| `-OptimizeNoneAttr 0x56466ded0678 <col:30>
|-CXXMethodDecl 0x56466ded0730 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466ded06a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded0878 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466ded07e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded09a8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x56466ded0ad8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x56466ded0ba8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x56466ded0c78 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x56466ded0db8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466ded0d28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded0f00 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466ded0e70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded1048 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466ded0fb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466ded1100 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466ded1200 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466ded1170 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466ded12b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466ded1378 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x56466ded1478 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x56466ded1628 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x56466ded1538 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x56466ded1de8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466ded16e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x56466ded1d48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x56466ded1c48 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x56466ded1ec8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466ded2018 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x56466ded1f88 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56466ded20d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466ded2318 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ded2190 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56466ded2208 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56466ded24d8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x56466ded23e8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56466ded2728 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x56466ded25a0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56466ded2618 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56466ded27e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466ded2a48 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56466ded2950 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x56466ded2b18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466ded2b18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddd4f78 prev 0x56466dd79240 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466ddd5070 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x56466ddd5100 <col:22, col:28> col:22 public
|-EnumDecl 0x56466ddd5128 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x56466ddd5248 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd5228 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x56466ddd5210 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56466ddd51f0 <col:14> 'int' 999
| |-EnumConstantDecl 0x56466ddd52f0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd52d0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x56466ddd52b8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56466ddd5298 <col:14> 'int' 1
| |-EnumConstantDecl 0x56466ddd5380 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd5360 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x56466ddd5340 <col:17> 'int' 0
| |-EnumConstantDecl 0x56466ddd5410 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd53f0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x56466ddd53d0 <col:13> 'int' 1
| |-EnumConstantDecl 0x56466ddd54a0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd5480 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x56466ddd5460 <col:16> 'int' 2
| |-EnumConstantDecl 0x56466ddd5530 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd5510 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x56466ddd54f0 <col:13> 'int' 3
| |-EnumConstantDecl 0x56466ddd55c0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd55a0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x56466ddd5580 <col:15> 'int' 4
| |-EnumConstantDecl 0x56466ddd5650 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd5630 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x56466ddd5610 <col:14> 'int' 5
| |-EnumConstantDecl 0x56466ddd56e0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x56466ddd56c0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x56466ddd56a0 <col:12> 'int' 6
| `-EnumConstantDecl 0x56466ddd5770 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x56466ddd5750 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x56466ddd5730 <col:13> 'int' 7
|-VarDecl 0x56466ddd57e0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x56466ddd5868 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x56466ddd58f0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x56466ddd5978 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x56466ddd5a00 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x56466ddd5a88 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x56466ddd5b10 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x56466ddd5b98 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x56466ddd5c20 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x56466ddd5ca8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x56466ddd5d30 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x56466ddd5e30 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56466dddb268 '_nerrors' 'int'
| | `-IntegerLiteral 0x56466dddb9f8 <line:128:13> 'int' 0
| `-CompoundStmt 0x56466dddba68 <col:16, line:129:5>
|-CXXDestructorDecl 0x56466ddd5f20 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56466dddba78 <col:29, line:132:5>
|-CXXMethodDecl 0x56466ddd60d8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x56466ddd6010 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466ddd61a0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56466ddd62d0 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56466dddbad0 <col:44, line:161:5>
|   `-ReturnStmt 0x56466dddbac0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56466dddbaa8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56466dddba88 <col:9> 'ErrorHandler *' lvalue Var 0x56466dddb2c8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x56466ddd6448 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x56466ddd6380 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466ddd6510 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56466dddbb30 <col:43, line:173:5>
|   `-ReturnStmt 0x56466dddbb20 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56466dddbb08 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56466dddbae8 <col:9> 'ErrorHandler *' lvalue Var 0x56466dddb340 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x56466ddd65c8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x56466ddd6648 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x56466ddd6758 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x56466ddd66c8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd68a8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x56466ddd6818 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd6a00 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x56466ddd6968 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd6b58 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x56466ddd6ac0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd6cb0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x56466ddd6c18 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd6ec0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56466ddd6d68 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x56466ddd6de8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd7098 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56466ddd6f80 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x56466ddd7000 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd72b8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56466ddd7158 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x56466ddd71d8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd7498 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56466ddd7378 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56466ddd73f8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd7678 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56466ddd7558 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56466ddd75d8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd7800 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x56466ddd7738 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x56466ddd79d0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x56466ddd78b8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56466ddd7930 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56466dddbd88 <col:57, line:234:5>
|   `-ReturnStmt 0x56466dddbd78 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56466dddbd60 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56466dddbd08 <col:9, col:41> 'int'
|         |-MemberExpr 0x56466dddbcd8 <col:9> '<bound member function type>' ->xmessage 0x56466ddd7800
|         | `-CXXThisExpr 0x56466dddbcc8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56466dddbd48 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56466dddbd30 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56466dddbca8 <col:18, col:40> 'String' (CXXTemporary 0x56466dddbca8)
|               `-CallExpr 0x56466dddbc70 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56466dddbc58 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56466dddbbd0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56466ddd9a58 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56466dddbbf0 <col:31> 'const String' lvalue ParmVar 0x56466ddd7930 'str' 'const String &'
|                 `-DeclRefExpr 0x56466dddbc10 <col:36> 'const String' lvalue ParmVar 0x56466ddd78b8 'anno' 'const String &'
|-CXXMethodDecl 0x56466ddd7d10 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56466ddd7a90 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56466ddd7b10 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x56466ddd7be0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56466dddc018 <col:68, line:243:5>
|   `-ReturnStmt 0x56466dddc008 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56466dddbff0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56466dddbf90 <col:9, col:41> 'int'
|         |-MemberExpr 0x56466dddbf60 <col:9> '<bound member function type>' ->xmessage 0x56466ddd79d0
|         | `-CXXThisExpr 0x56466dddbf50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56466dddbe28 <col:18> 'const String' lvalue ParmVar 0x56466ddd7a90 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56466dddbfd8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56466dddbfc0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56466dddbf30 <col:24, col:40> 'String' (CXXTemporary 0x56466dddbf30)
|               `-CXXMemberCallExpr 0x56466dddbec8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56466dddbe58 <col:24> '<bound member function type>' ->vformat 0x56466ddd8ef0
|                 | `-CXXThisExpr 0x56466dddbe48 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56466dddbef8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56466dddbe88 <col:32> 'const char *' lvalue ParmVar 0x56466ddd7b10 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56466dddbf10 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56466dddbea8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56466ddd7be0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56466ddd7fb0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x56466ddd7dd8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56466ddd7e50 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56466ddd7ec8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56466dddc358 <col:23, line:254:5>
|   `-ReturnStmt 0x56466dddc348 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56466dddc330 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56466dddc2d0 <col:9, col:71> 'int'
|         |-MemberExpr 0x56466dddc2a0 <col:9> '<bound member function type>' ->xmessage 0x56466ddd79d0
|         | `-CXXThisExpr 0x56466dddc290 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56466dddc318 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56466dddc300 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56466dddc250 <col:18, col:65> 'String' (CXXTemporary 0x56466dddc250)
|         |     `-CallExpr 0x56466dddc1e8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56466dddc1d0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56466dddc0b8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56466ddd9a58 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56466dddc0d8 <col:31> 'const String' lvalue ParmVar 0x56466ddd7e50 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56466dddc230 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56466dddc218 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56466dddc1b0 <col:37, col:64> 'String' (CXXTemporary 0x56466dddc1b0)
|         |             `-CallExpr 0x56466dddc180 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56466dddc168 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56466dddc0f8 <col:37> 'String (const String &)' lvalue CXXMethod 0x56466ddda0a8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56466dddc118 <col:56> 'const String' lvalue ParmVar 0x56466ddd7dd8 'landmark' 'const String &'
|         `-DeclRefExpr 0x56466dddc270 <col:68> 'const String' lvalue ParmVar 0x56466ddd7ec8 'str' 'const String &'
|-CXXMethodDecl 0x56466ddd8330 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56466ddd8078 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56466ddd80f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56466ddd8170 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x56466ddd81e8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56466dddc610 <col:34, line:267:5>
|   `-ReturnStmt 0x56466dddc600 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56466dddc5e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56466dddc580 <col:9, col:51> 'int'
|         |-MemberExpr 0x56466dddc550 <col:9> '<bound member function type>' ->xmessage 0x56466ddd7fb0
|         | `-CXXThisExpr 0x56466dddc540 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56466dddc3f8 <col:18> 'const String' lvalue ParmVar 0x56466ddd8078 'landmark' 'const String &'
|         |-DeclRefExpr 0x56466dddc418 <col:28> 'const String' lvalue ParmVar 0x56466ddd80f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56466dddc5d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56466dddc5b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56466dddc520 <col:34, col:50> 'String' (CXXTemporary 0x56466dddc520)
|               `-CXXMemberCallExpr 0x56466dddc4b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56466dddc448 <col:34> '<bound member function type>' ->vformat 0x56466ddd8ef0
|                 | `-CXXThisExpr 0x56466dddc438 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56466dddc4e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56466dddc478 <col:42> 'const char *' lvalue ParmVar 0x56466ddd8170 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56466dddc500 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56466dddc498 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56466ddd81e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56466ddd8440 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56466dddc690 <col:25, line:288:5>
|   `-ReturnStmt 0x56466dddc680 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56466dddc668 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56466dddc638 <col:9> 'const int' lvalue ->_nerrors 0x56466dddb268
|         `-CXXThisExpr 0x56466dddc628 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x56466ddd8650 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x56466ddd84f8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x56466ddd8578 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd8938 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56466ddd8718 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x56466ddd8798 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x56466ddd8810 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56466ddd8ad0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x56466ddd8a08 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd8d18 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56466ddd8b90 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x56466ddd8c08 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56466dddc8f0 <col:58, line:357:5>
|   `-ReturnStmt 0x56466dddc8e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56466dddc8c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56466dddc898 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56466dddc880 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56466dddc860 <col:9, col:29> 'String' (CXXTemporary 0x56466dddc860)
|             `-CallExpr 0x56466dddc7f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56466dddc7d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56466dddc758 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x56466ddd8938 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56466dddc6f8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56466dddc828 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56466dddc718 <col:21> 'const char *' lvalue ParmVar 0x56466ddd8b90 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56466dddc840 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56466dddc738 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56466ddd8c08 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56466ddd8ef0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x56466ddd8de0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x56466ddd8e58 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56466ddd9048 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x56466ddd8fb8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x56466ddd91c8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x56466ddd9100 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x56466ddd9460 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x56466ddd9280 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x56466ddd9300 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x56466ddd9378 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x56466ddd95c0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x56466ddd9530 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56466dddca08 <col:37, line:441:5>
|   `-IfStmt 0x56466dddc9f0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56466dddc978 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56466dddc948 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56466dddc908 <col:6> 'int' lvalue ParmVar 0x56466ddd9530 'level' 'int'
|     | `-ImplicitCastExpr 0x56466dddc960 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56466dddc928 <col:15> 'ErrorHandler::Level' EnumConstant 0x56466ddd5530 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56466dddc9d8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56466dddc9a8 <col:8> 'int' lvalue ->_nerrors 0x56466dddb268
|         `-CXXThisExpr 0x56466dddc998 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x56466ddd9688 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x56466dddcaa0 <col:26, line:448:5>
|   `-BinaryOperator 0x56466dddca80 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56466dddca30 <col:2> 'int' lvalue ->_nerrors 0x56466dddb268
|     | `-CXXThisExpr 0x56466dddca20 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56466dddca60 <col:13> 'int' 0
|-CXXMethodDecl 0x56466ddd9850 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x56466ddd9740 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56466ddd97b8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x56466ddd9a58 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x56466ddd9910 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x56466ddd9988 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x56466ddd9d08 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x56466ddd9b18 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x56466ddd9b98 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x56466ddd9c18 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x56466ddd9dc0 <col:59> 0 0
|-CXXMethodDecl 0x56466ddd9f58 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x56466ddd9e38 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x56466ddd9eb8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56466dddd110 <col:70, line:534:5>
|   |-DeclStmt 0x56466dddcc10 <line:528:2, col:20>
|   | |-VarDecl 0x56466dddcac8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56466dddcb30 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56466dddcb68 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56466dddcbd0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56466dddcce0 <line:529:2, col:23>
|   | `-VarDecl 0x56466dddcc40 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56466dddccc8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56466dddcca8 <col:18> 'const char *' lvalue ParmVar 0x56466ddd9e38 'begin' 'const char *'
|   |-DoStmt 0x56466dddd0a8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56466dddcfd8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56466dddcfc0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56466dddcfa0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56466dddccf8 <col:6> 'const char *' lvalue Var 0x56466dddcc40 'x' 'const char *'
|   | |     `-CallExpr 0x56466dddcef0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56466dddced8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56466dddce90 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56466dddb740 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56466dddcf58 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56466dddcf40 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56466dddcdb0 <col:20, col:27> 'String' (CXXTemporary 0x56466dddcdb0)
|   | |       |     `-CXXTemporaryObjectExpr 0x56466dddcd78 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56466dddcf70 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56466dddcdd0 <col:30> 'const char *' lvalue Var 0x56466dddcc40 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56466dddcf88 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56466dddcdf0 <col:33> 'const char *' lvalue ParmVar 0x56466ddd9eb8 'end' 'const char *'
|   | |       |-UnaryOperator 0x56466dddce30 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56466dddce10 <col:39> 'String' lvalue Var 0x56466dddcac8 'name' 'String'
|   | |       |-UnaryOperator 0x56466dddce68 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56466dddce48 <col:46> 'String' lvalue Var 0x56466dddcb68 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56466dddce80 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56466dddd090 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56466dddd078 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56466dddd058 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56466dddd028 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56466db48038
|   |         `-ImplicitCastExpr 0x56466dddd010 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56466dddcff0 <col:11> 'String' lvalue Var 0x56466dddcac8 'name' 'String'
|   `-ReturnStmt 0x56466dddd100 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56466dddd0e8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56466dddd0c8 <col:9> 'const char *' lvalue Var 0x56466dddcc40 'x' 'const char *'
|-CXXMethodDecl 0x56466ddda0a8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x56466ddda018 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56466dddd718 <col:55, line:550:5>
|   `-IfStmt 0x56466dddd6f0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56466dddd350 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56466dddd338 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56466dddd320 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56466dddd300 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56466dddd2d0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x56466db48038
|     | |       `-DeclRefExpr 0x56466dddd170 <col:6> 'const String' lvalue ParmVar 0x56466ddda018 'x' 'const String &'
|     | `-BinaryOperator 0x56466dddd2b0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56466dddd280 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56466dddd230 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56466dddd218 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56466dddd1d0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x56466db61870 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56466dddd190 <col:11> 'const String' lvalue ParmVar 0x56466ddda018 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56466dddd1b0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56466dddd298 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56466dddd268 <col:19> 'char' 123
|     |-ReturnStmt 0x56466dddd3c0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56466dddd390 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56466dddd370 <col:13> 'const String' lvalue ParmVar 0x56466ddda018 'x' 'const String &'
|     `-IfStmt 0x56466dddd6c8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56466dddd458 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56466dddd440 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56466dddd420 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56466dddd3f0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56466db48038
|       |       `-DeclRefExpr 0x56466dddd3d0 <col:11> 'const String' lvalue ParmVar 0x56466ddda018 'x' 'const String &'
|       |-ReturnStmt 0x56466dddd5e0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56466dddd5c8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56466dddd598 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56466dddd580 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56466dddd560 <col:13, col:29> 'String' (CXXTemporary 0x56466dddd560)
|       |         `-CallExpr 0x56466dddd510 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56466dddd4f8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56466dddd470 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x56466ddd9850 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56466dddd540 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56466dddd490 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56466dddd4b0 <col:28> 'const String' lvalue ParmVar 0x56466ddda018 'x' 'const String &'
|       `-ReturnStmt 0x56466dddd6b8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56466dddd6a0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56466dddd670 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56466dddd658 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56466dddd638 <col:13, col:20> 'String' (CXXTemporary 0x56466dddd638)
|                 `-CXXTemporaryObjectExpr 0x56466dddd600 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x56466ddda2a8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x56466ddda160 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x56466ddda1d8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466dddb9e8 <col:71> 'bool' false
|-CXXRecordDecl 0x56466ddda358 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x56466ddda658 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x56466ddda5f0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x56466ddda590 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x56466ddda550 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x56466db448d0 'String'
|       | `-CXXRecord 0x56466db44840 'String'
|       |-BuiltinType 0x56466d815580 'int'
|       `-DecayedType 0x56466ddd7bb0 '__va_list_tag *' sugar
|         |-TypedefType 0x56466ddd7b80 'va_list' sugar
|         | |-Typedef 0x56466da357c0 'va_list'
|         | `-TypedefType 0x56466da35770 '__gnuc_va_list' sugar
|         |   |-Typedef 0x56466d96d398 '__gnuc_va_list'
|         |   `-TypedefType 0x56466d96d300 '__builtin_va_list' sugar
|         |     |-Typedef 0x56466d856d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x56466d856ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x56466d8162d0 '__va_list_tag'
|         |         `-CXXRecord 0x56466d816238 '__va_list_tag'
|         `-PointerType 0x56466da3b060 '__va_list_tag *'
|           `-RecordType 0x56466d8162d0 '__va_list_tag'
|             `-CXXRecord 0x56466d816238 '__va_list_tag'
|-EnumDecl 0x56466ddda6b0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56466ddda7b0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddad10 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466ddda790 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56466ddda770 <col:16> 'int' 1
| |-EnumConstantDecl 0x56466ddda840 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddad28 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466ddda820 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56466ddda800 <col:21> 'int' 2
| |-EnumConstantDecl 0x56466ddda8d0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddad40 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466ddda8b0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56466ddda890 <col:22> 'int' 4
| |-EnumConstantDecl 0x56466ddda960 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddad58 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466ddda940 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56466ddda920 <col:17> 'int' 8
| |-EnumConstantDecl 0x56466ddda9f0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddad70 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466ddda9d0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56466ddda9b0 <col:22> 'int' 16
| |-EnumConstantDecl 0x56466dddaa80 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddad88 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dddaa60 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56466dddaa40 <col:19> 'int' 32
| |-EnumConstantDecl 0x56466dddab10 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddada0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dddaaf0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56466dddaad0 <col:17> 'int' 64
| |-EnumConstantDecl 0x56466dddaba0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddadb8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dddab80 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56466dddab60 <col:14> 'int' 128
| |-EnumConstantDecl 0x56466dddac30 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56466dddadd0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dddac10 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56466dddabf0 <col:16> 'int' 256
| `-EnumConstantDecl 0x56466dddacc0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56466dddade8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dddaca0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56466dddac80 <col:12> 'int' 1024
|-CXXMethodDecl 0x56466dddaff8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56466dddae10 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56466dddaeb0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56466dddb180 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56466dddb0b8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56466dddb228 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56466dddb268 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56466dddb2c8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56466dddb340 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56466dddb740 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56466dddb3b8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56466dddb438 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56466dddb4b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56466dddb530 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56466dddb5a8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56466dddb620 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56466dddb868 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56466dddb868
| `-ParmVarDecl 0x56466dddb978 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56466dddda78 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56466dddda78
  `-ParmVarDecl 0x56466ddddb88 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd74990 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56466dd74ae0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x56466dd74b60 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x56466dd75958 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56466dd75958
| `-ParmVarDecl 0x56466dd75a68 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x56466dd75b08 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd75b08
| `-ParmVarDecl 0x56466dd75c18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x56466dd75c88 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466dd75c88
|-CXXMethodDecl 0x56466dd76558 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56466dd76558
| `-ParmVarDecl 0x56466dd76668 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x56466dd766d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd766d8
| `-ParmVarDecl 0x56466dd767e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x56466deec050 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x56466deec130 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd74c90 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56466dd74db8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x56466dd74e40 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x56466dd75db8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56466dd75db8
| `-ParmVarDecl 0x56466dd75ec8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x56466dd75f68 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd75f68
| `-ParmVarDecl 0x56466dd76078 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x56466dd760e8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466dd760e8
|-CXXMethodDecl 0x56466dd76888 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56466dd76888
| `-ParmVarDecl 0x56466dd76998 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x56466dd76a08 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd76a08
| `-ParmVarDecl 0x56466dd76b18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x56466deec190 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x56466dd2d1c0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd70318 prev 0x56466dd6f7b0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56466dd70410 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x56466dd704a0 <col:17, col:23> col:17 public
|-EnumDecl 0x56466dd704c8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x56466dd705d0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71320 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd705b0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x56466dd70590 <col:11> 'int' 1
| |-EnumConstantDecl 0x56466dd70660 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71338 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70640 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x56466dd70620 <col:12> 'int' 2
| |-EnumConstantDecl 0x56466dd706f0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71350 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd706d0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x56466dd706b0 <col:17> 'int' 4
| |-EnumConstantDecl 0x56466dd70780 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71368 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70760 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd70740 <col:16> 'int' 0
| |-EnumConstantDecl 0x56466dd70810 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71380 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd707f0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56466dd707d0 <col:19> 'int' 32
| |-EnumConstantDecl 0x56466dd708a0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71398 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70880 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x56466dd70860 <col:10> 'int' 64
| |-EnumConstantDecl 0x56466dd70930 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd713b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70910 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x56466dd708f0 <col:19> 'int' 128
| |-EnumConstantDecl 0x56466dd709c0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd713c8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd709a0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x56466dd70980 <col:20> 'int' 256
| |-EnumConstantDecl 0x56466dd70a50 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd713e0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70a30 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x56466dd70a10 <col:17> 'int' 512
| |-EnumConstantDecl 0x56466dd70ae0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd713f8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70ac0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x56466dd70aa0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x56466dd70b70 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71410 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70b50 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x56466dd70b30 <col:11> 'int' 2048
| |-EnumConstantDecl 0x56466dd70c00 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71428 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70be0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x56466dd70bc0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x56466dd70c90 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71440 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70c70 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x56466dd70c50 <col:13> 'int' 8192
| |-EnumConstantDecl 0x56466dd70d20 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71458 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70d00 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x56466dd70ce0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x56466dd70df0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x56466dd70dd0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x56466dd70db0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56466dd70d70 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x56466dd70d90 <col:20> 'int' 26
| |-EnumConstantDecl 0x56466dd70ec0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x56466dd70ea0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x56466dd70e80 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56466dd70e40 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x56466dd70e60 <col:27> 'int' 27
| |-EnumConstantDecl 0x56466dd70f50 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71470 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd70f30 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x56466dd70f10 <col:17> 'int' 28
| |-EnumConstantDecl 0x56466dd71020 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x56466dd71000 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x56466dd70fe0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56466dd70fa0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x56466dd70fc0 <col:18> 'int' EnumConstant 0x56466dd70f50 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd710b0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd71488 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd71090 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x56466dd71070 <col:25> 'int' 8
| |-EnumConstantDecl 0x56466dd71140 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56466dd714a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd71120 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x56466dd71100 <col:26> 'int' 16
| `-EnumConstantDecl 0x56466dd712d0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x56466dd714b8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd712b0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x56466dd71290 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x56466dd71250 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x56466dd71210 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x56466dd711d0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x56466dd71190 <col:14> 'int' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x56466dd711b0 <col:23> 'int' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x56466dd711f0 <col:33> 'int' EnumConstant 0x56466dd706f0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x56466dd71230 <col:48> 'int' EnumConstant 0x56466dd710b0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x56466dd71270 <col:71> 'int' EnumConstant 0x56466dd71140 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd71518 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x56466dd76f38 <col:39, line:64:5>
|   `-ReturnStmt 0x56466dd76f28 <line:63:2, col:9>
|     `-MemberExpr 0x56466dd76ef8 <col:9> 'const String' lvalue ->_name 0x56466dd74940
|       `-CXXThisExpr 0x56466dd76ee8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56466dd715d8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x56466dd76fb8 <col:35, line:71:5>
|   `-ReturnStmt 0x56466dd76fa8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x56466dd76f90 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56466dd76f60 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|         `-CXXThisExpr 0x56466dd76f50 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56466dd71728 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x56466dd71690 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x56466dd77138 <col:42, line:77:5>
|   `-ReturnStmt 0x56466dd77128 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x56466dd77110 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x56466dd770e0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x56466dd77040 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x56466dd77010 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56466dd76fd0 <col:9> 'int' lvalue ParmVar 0x56466dd71690 'op' 'int'
|         | `-ImplicitCastExpr 0x56466dd77028 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x56466dd76ff0 <col:15> 'Handler::Flags' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x56466dd77070 <col:25> 'void *const' lvalue ->_write_user_data 0x56466dd74ff0
|         | `-CXXThisExpr 0x56466dd77060 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x56466dd770b0 <col:44> 'void *const' lvalue ->_read_user_data 0x56466dd74f88
|           `-CXXThisExpr 0x56466dd770a0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x56466dd717f8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x56466dd771b8 <col:41, line:82:5>
|   `-ReturnStmt 0x56466dd771a8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x56466dd77190 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56466dd77160 <col:9> 'void *const' lvalue ->_read_user_data 0x56466dd74f88
|         `-CXXThisExpr 0x56466dd77150 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56466dd718c0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x56466dd77238 <col:42, line:87:5>
|   `-ReturnStmt 0x56466dd77228 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x56466dd77210 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56466dd771e0 <col:9> 'void *const' lvalue ->_write_user_data 0x56466dd74ff0
|         `-CXXThisExpr 0x56466dd771d0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56466dd71988 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x56466dd71a28 <col:52> "" ""
|-CXXMethodDecl 0x56466dd71ac0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x56466dd71b60 <col:52> "" ""
|-CXXMethodDecl 0x56466dd71bf0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x56466dd77328 <col:34, line:98:5>
|   `-ReturnStmt 0x56466dd77318 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x56466dd77300 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56466dd772e0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56466dd772b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56466dd77260 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|         |   `-CXXThisExpr 0x56466dd77250 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56466dd772c8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56466dd77290 <col:18> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd71cb0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x56466dd77418 <col:36, line:104:5>
|   `-ReturnStmt 0x56466dd77408 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x56466dd773f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56466dd773d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56466dd773a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56466dd77350 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|         |   `-CXXThisExpr 0x56466dd77340 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56466dd773b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56466dd77380 <col:18> 'Handler::Flags' EnumConstant 0x56466dd706f0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd71d70 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x56466dd775f8 <col:38, line:113:5>
|   `-ReturnStmt 0x56466dd775e8 <line:112:2, col:49>
|     `-BinaryOperator 0x56466dd775c8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x56466dd77570 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x56466dd77550 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56466dd77520 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56466dd77440 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|       |   |   `-CXXThisExpr 0x56466dd77430 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x56466dd77538 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x56466dd77500 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x56466dd774e0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x56466dd774b0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x56466dd77470 <col:20> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x56466dd774c8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x56466dd77490 <col:29> 'Handler::Flags' EnumConstant 0x56466dd70930 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x56466dd775b0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x56466dd77590 <col:49> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd71e30 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x56466dd776e8 <col:34, line:118:5>
|   `-ReturnStmt 0x56466dd776d8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x56466dd776c0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56466dd776a0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56466dd77670 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56466dd77620 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|         |   `-CXXThisExpr 0x56466dd77610 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56466dd77688 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56466dd77650 <col:18> 'Handler::Flags' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd71ef0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x56466dd778c8 <col:39, line:127:5>
|   `-ReturnStmt 0x56466dd778b8 <line:126:2, col:51>
|     `-BinaryOperator 0x56466dd77898 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x56466dd77840 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x56466dd77820 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56466dd777f0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56466dd77710 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|       |   |   `-CXXThisExpr 0x56466dd77700 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x56466dd77808 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x56466dd777d0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x56466dd777b0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x56466dd77780 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x56466dd77740 <col:20> 'Handler::Flags' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x56466dd77798 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x56466dd77760 <col:30> 'Handler::Flags' EnumConstant 0x56466dd709c0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x56466dd77880 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x56466dd77860 <col:51> 'Handler::Flags' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd71fb0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x56466dd779d0 <col:33, line:132:5>
|   `-ReturnStmt 0x56466dd779c0 <line:131:2, col:41>
|     `-BinaryOperator 0x56466dd779a0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x56466dd77920 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x56466dd778f0 <col:9> '<bound member function type>' ->read_visible 0x56466dd71d70
|       |   `-CXXThisExpr 0x56466dd778e0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x56466dd77980 <col:27, col:41> 'bool'
|         `-MemberExpr 0x56466dd77950 <col:27> '<bound member function type>' ->write_visible 0x56466dd71ef0
|           `-CXXThisExpr 0x56466dd77940 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x56466dd72070 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x56466dd77b08 <col:51, line:138:5>
|   `-ReturnStmt 0x56466dd77af8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x56466dd77ae0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x56466dd77ac0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x56466dd77a78 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x56466dd77a48 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x56466dd779f8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|           |   `-CXXThisExpr 0x56466dd779e8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x56466dd77a60 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x56466dd77a28 <col:26> 'Handler::Flags' EnumConstant 0x56466dd70810 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd72130 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x56466dd77c18 <col:50, line:144:5>
|   `-ReturnStmt 0x56466dd77c08 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x56466dd77bf0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x56466dd77bd0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x56466dd77bb0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x56466dd77b80 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x56466dd77b30 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|           |   `-CXXThisExpr 0x56466dd77b20 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x56466dd77b98 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x56466dd77b60 <col:26> 'Handler::Flags' EnumConstant 0x56466dd70810 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd721f0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x56466dd77d08 <col:29, line:166:5>
|   `-ReturnStmt 0x56466dd77cf8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x56466dd77ce0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56466dd77cc0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56466dd77c90 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56466dd77c40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|         |   `-CXXThisExpr 0x56466dd77c30 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56466dd77ca8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56466dd77c70 <col:18> 'Handler::Flags' EnumConstant 0x56466dd708a0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd72478 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x56466dd722a0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x56466dd72318 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x56466dd72390 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd72688 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x56466dd72540 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x56466dd725b8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x56466dd76e20 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x56466dd76e00 <col:62> 'int' 0
| `-CompoundStmt 0x56466dd77fa8 <col:71, line:188:5>
|   `-ReturnStmt 0x56466dd77f98 <line:187:2, col:36>
|     `-ExprWithCleanups 0x56466dd77f80 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x56466dd77f50 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56466dd77f38 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56466dd77f18 <col:9, col:36> 'String' (CXXTemporary 0x56466dd77f18)
|             `-CXXMemberCallExpr 0x56466dd77e78 <col:9, col:36> 'String'
|               |-MemberExpr 0x56466dd77e48 <col:9> '<bound member function type>' ->call_read 0x56466dd72478
|               | `-CXXThisExpr 0x56466dd77e38 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x56466dd77eb0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x56466dd77d90 <col:19> 'Element *' lvalue ParmVar 0x56466dd72540 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x56466dd77ee0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x56466dd77ec8 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x56466dd77df8 <col:22, col:29> 'String' (CXXTemporary 0x56466dd77df8)
|               |     `-CXXTemporaryObjectExpr 0x56466dd77dc0 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x56466dd77ef8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x56466dd77e18 <col:32> 'ErrorHandler *' lvalue ParmVar 0x56466dd725b8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd72920 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x56466dd72748 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x56466dd727c0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56466dd72838 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd72aa8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x56466dd729e8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x56466dd72cd8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x56466dd72b60 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x56466dd72bd8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x56466dd72dd8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x56466dd78008 <col:50, line:225:5>
|   `-ReturnStmt 0x56466dd77ff8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x56466dd77fe0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd77fc0 <col:9> 'const Handler *' lvalue Var 0x56466dd75180 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x56466dd72e78 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x56466dd72f80 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73b20 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd72f60 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56466dd72f40 <col:11> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73010 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73b38 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd72ff0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56466dd72fd0 <col:12> 'Handler::Flags' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd730a0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73b50 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73080 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x56466dd73060 <col:17> 'Handler::Flags' EnumConstant 0x56466dd706f0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73130 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73b68 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73110 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x56466dd730f0 <col:16> 'Handler::Flags' EnumConstant 0x56466dd70780 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd731c0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73b80 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd731a0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x56466dd73180 <col:19> 'Handler::Flags' EnumConstant 0x56466dd70810 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73250 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73b98 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73230 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x56466dd73210 <col:10> 'Handler::Flags' EnumConstant 0x56466dd708a0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd732e0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73bb0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd732c0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x56466dd732a0 <col:19> 'Handler::Flags' EnumConstant 0x56466dd70930 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73370 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73bc8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73350 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x56466dd73330 <col:20> 'Handler::Flags' EnumConstant 0x56466dd709c0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73400 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73be0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd733e0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x56466dd733c0 <col:17> 'Handler::Flags' EnumConstant 0x56466dd70a50 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73490 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73bf8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73470 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x56466dd73450 <col:15> 'Handler::Flags' EnumConstant 0x56466dd70ae0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73520 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73c10 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73500 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x56466dd734e0 <col:11> 'Handler::Flags' EnumConstant 0x56466dd70b70 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd735b0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73c28 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73590 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x56466dd73570 <col:16> 'Handler::Flags' EnumConstant 0x56466dd70c00 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73640 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73c40 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73620 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x56466dd73600 <col:13> 'Handler::Flags' EnumConstant 0x56466dd70c90 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd736d0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73c58 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd736b0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x56466dd73690 <col:15> 'Handler::Flags' EnumConstant 0x56466dd70d20 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73760 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73c70 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73740 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x56466dd73720 <col:20> 'Handler::Flags' EnumConstant 0x56466dd70df0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd737f0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73c88 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd737d0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x56466dd737b0 <col:27> 'Handler::Flags' EnumConstant 0x56466dd70ec0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73880 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73ca0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73860 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x56466dd73840 <col:22> 'Handler::Flags' EnumConstant 0x56466dd70f50 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73910 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73cb8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd738f0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x56466dd738d0 <col:18> 'Handler::Flags' EnumConstant 0x56466dd71020 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd739a0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73cd0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73980 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x56466dd73960 <col:25> 'Handler::Flags' EnumConstant 0x56466dd710b0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73a30 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56466dd73ce8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73a10 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x56466dd739f0 <col:26> 'Handler::Flags' EnumConstant 0x56466dd71140 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x56466dd73ad0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x56466dd73d00 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd73ab0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x56466dd73a80 <col:20> 'Handler::Flags' EnumConstant 0x56466dd712d0 'f_special' 'Handler::Flags'
|-EnumDecl 0x56466dd73d18 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x56466dd73e20 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd74380 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73e00 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56466dd73de0 <col:12> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73eb0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd74398 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73e90 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56466dd73e70 <col:13> 'Handler::Flags' EnumConstant 0x56466dd70660 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73f40 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd743b0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73f20 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x56466dd73f00 <col:15> 'Handler::Flags' EnumConstant 0x56466dd706f0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd73fd0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd743c8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd73fb0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x56466dd73f90 <col:8> 'Handler::Flags' EnumConstant 0x56466dd708a0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd74060 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd743e0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd74040 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x56466dd74020 <col:9> 'Handler::Flags' EnumConstant 0x56466dd70b70 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd740f0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd743f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd740d0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x56466dd740b0 <col:14> 'Handler::Flags' EnumConstant 0x56466dd70c00 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd74180 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd74410 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd74160 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x56466dd74140 <col:11> 'Handler::Flags' EnumConstant 0x56466dd70c90 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd74210 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd74428 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd741f0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x56466dd741d0 <col:13> 'Handler::Flags' EnumConstant 0x56466dd70d20 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x56466dd742a0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56466dd74440 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd74280 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x56466dd74260 <col:20> 'Handler::Flags' EnumConstant 0x56466dd70f50 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x56466dd74330 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x56466dd74458 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd74310 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x56466dd742f0 <col:16> 'Handler::Flags' EnumConstant 0x56466dd71020 'f_user0' 'Handler::Flags'
|-EnumDecl 0x56466dd74470 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x56466dd74530 <col:25> "" ""
| |-EnumConstantDecl 0x56466dd745e0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x56466dd746c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd745c0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x56466dd745a0 <col:14> 'Handler::Flags' EnumConstant 0x56466dd70780 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x56466dd74670 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x56466dd746d8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd74650 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x56466dd74630 <col:17> 'Handler::Flags' EnumConstant 0x56466dd70810 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56466dd74858 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x56466dd74700 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x56466dd74780 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x56466dd786c8 <col:70, line:284:5>
|   |-ParenExpr 0x56466dd784e8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x56466dd784b8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd781e8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd781b8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x56466dd78160 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x56466dd78140 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x56466dd78110 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x56466dd78030 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56466dd75050
|   |   |   |   |   `-CXXThisExpr 0x56466dd78020 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x56466dd78128 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x56466dd780f0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x56466dd780d0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x56466dd780a0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x56466dd78060 <col:34> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x56466dd780b8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x56466dd78080 <col:43> 'Handler::Flags' EnumConstant 0x56466dd710b0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x56466dd781a0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x56466dd78180 <col:69> 'Handler::Flags' EnumConstant 0x56466dd705d0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x56466dd78248 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd78228 <col:85> 'int' 0
|   |   `-CallExpr 0x56466dd78418 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x56466dd78400 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd783e0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd78458 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd782b8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x56466dd78470 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd78308 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x56466dd78488 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd78340 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x56466dd784a0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd783c8 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd783b0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd78360 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x56466dd786b8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x56466dd786a0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x56466dd78670 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56466dd78658 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56466dd78638 <col:9, col:38> 'String' (CXXTemporary 0x56466dd78638)
|             `-CallExpr 0x56466dd785d0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x56466dd785b8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x56466dd78548 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x56466dd74b60
|               |   `-MemberExpr 0x56466dd78518 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x56466dd74c28
|               |     `-CXXThisExpr 0x56466dd78508 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x56466dd78600 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x56466dd78578 <col:22> 'Element *' lvalue ParmVar 0x56466dd74700 'e' 'Element *'
|               `-ImplicitCastExpr 0x56466dd78618 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x56466dd78598 <col:25> 'void *' lvalue ParmVar 0x56466dd74780 'new_user_data' 'void *'
|-AccessSpecDecl 0x56466dd74908 <line:287:3, col:10> col:3 private
|-FieldDecl 0x56466dd74940 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x56466dd74990 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56466dd74ae0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x56466dd74b60 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x56466dd75958 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56466dd75958
| | `-ParmVarDecl 0x56466dd75a68 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x56466dd75b08 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd75b08
| | `-ParmVarDecl 0x56466dd75c18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x56466dd75c88 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466dd75c88
| |-CXXMethodDecl 0x56466dd76558 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56466dd76558
| | `-ParmVarDecl 0x56466dd76668 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x56466dd766d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd766d8
| | `-ParmVarDecl 0x56466dd767e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x56466deec050 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56466deec130 <col:5>
|-FieldDecl 0x56466dd74c28 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x56466dd74c90 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56466dd74db8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x56466dd74e40 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x56466dd75db8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56466dd75db8
| | `-ParmVarDecl 0x56466dd75ec8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x56466dd75f68 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd75f68
| | `-ParmVarDecl 0x56466dd76078 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x56466dd760e8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466dd760e8
| |-CXXMethodDecl 0x56466dd76888 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56466dd76888
| | `-ParmVarDecl 0x56466dd76998 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x56466dd76a08 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56466dd76a08
| | `-ParmVarDecl 0x56466dd76b18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x56466deec190 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56466dd2d1c0 <col:5>
|-FieldDecl 0x56466dd74f08 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x56466dd74f88 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x56466dd74ff0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x56466dd75050 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x56466dd750b8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x56466dd75120 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x56466dd75180 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x56466dd752a0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x56466dd751f8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x56466dd76ed0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56466dd76eb8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x56466dd76ea0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56466dd76e80 <col:30, col:37> 'String' (CXXTemporary 0x56466dd76e80)
|           `-CXXTemporaryObjectExpr 0x56466dd76e48 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x56466dd75448 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x56466dd75388 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x56466dd755c8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x56466dd75500 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x56466dd75788 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x56466dd757c8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x56466dd757c8
| `-ParmVarDecl 0x56466dd758a8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x56466dd761f8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x56466dd761f8
| `-ParmVarDecl 0x56466dd76308 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x56466dd763a8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x56466dd763a8
| `-ParmVarDecl 0x56466dd764b8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x56466dd76b88 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x56466dd76b88
| `-ParmVarDecl 0x56466dd76c98 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x56466dd76d20 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x56466dd76d20

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466ded3688 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x56466ded3898 prev 0x56466ded3688 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466ded48b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56466ded4860 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x56466ded4840 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x56466ded46f0 'type'
|     `-SubstTemplateTypeParmType 0x56466de1d390 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de1cee0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56466de1cdf8 'sized_array_memory'
|-FieldDecl 0x56466ded49b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56466ded4a00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466ded4a38 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-PointerType 0x56466d815ce0 'void *'
|     `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded4ac8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x56466ded4a90 'void *&'
|   `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466d815ce0 'void *'
|       `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded4b88 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x56466ded4b50 'void *const &'
|   `-QualType 0x56466ded3931 'void *const' const
|     `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466d815ce0 'void *'
|         `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded4c18 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x56466ded4be0 'void **'
|   `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466d815ce0 'void *'
|       `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded4ca8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x56466ded4c70 'void *const *'
|   `-QualType 0x56466ded3931 'void *const' const
|     `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466d815ce0 'void *'
|         `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded5890 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x56466ded5840 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x56466ded5820 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x56466ded57b0 'type'
|     `-SubstTemplateTypeParmType 0x56466ded5570 'void *' sugar
|       |-TemplateTypeParmType 0x56466dae8510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dae84c0 'T'
|       `-PointerType 0x56466d815ce0 'void *'
|         `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded58f8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x56466ded4b50 'void *const &'
|   `-QualType 0x56466ded3931 'void *const' const
|     `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466d815ce0 'void *'
|         `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded5950 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466ded59b8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x56466ded4be0 'void **'
|   `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466d815ce0 'void *'
|       `-BuiltinType 0x56466d8154e0 'void'
|-TypedefDecl 0x56466ded5a20 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x56466ded4c70 'void *const *'
|   `-QualType 0x56466ded3931 'void *const' const
|     `-SubstTemplateTypeParmType 0x56466ded3930 'void *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466d815ce0 'void *'
|         `-BuiltinType 0x56466d8154e0 'void'
|-EnumDecl 0x56466ded5a78 <line:134:5> col:5
| `-EnumConstantDecl 0x56466ded5b70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466ded5b50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466ded5bf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466ded5e48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ded5cb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466ded5d50 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x56466ded6108 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x56466ded5ff0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x56466ded63c8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x56466ded62b0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56466ded6710 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x56466ded65f0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x56466ded6a20 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x56466ded6900 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56466ded6d10 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ded6b58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466ded6bd0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56466ded6e68 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56466ded6f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ded6fa0 <col:30> Inherited
|-CXXMethodDecl 0x56466ded6fe8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56466ded7098 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ded70f0 <col:30> Inherited
|-CXXMethodDecl 0x56466ded71b8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56466ded7268 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ded72c0 <col:30> Inherited
|-CXXMethodDecl 0x56466ded7308 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56466ded73b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ded8bb0 <col:30> Inherited
|-CXXMethodDecl 0x56466ded8bf8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56466ded8ca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ded8d00 <col:30> Inherited
|-CXXMethodDecl 0x56466ded8d48 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56466ded8df8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ded8e50 <col:30> Inherited
|-CXXMethodDecl 0x56466ded8e78 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466ded8f28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466ded8fd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466ded9198 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ded9088 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466ded9100 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56466ded92e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466ded9258 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded9498 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x56466ded93a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466ded9550 <col:20>
| `-OptimizeNoneAttr 0x56466ded95a8 <col:30>
|-CXXMethodDecl 0x56466ded96c8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56466ded95d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466ded9780 <col:20>
| `-OptimizeNoneAttr 0x56466ded97d8 <col:30>
|-CXXMethodDecl 0x56466ded9890 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56466ded9800 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded99d8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466ded9948 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ded9b08 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x56466ded9c38 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x56466ded9d08 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x56466ded9dd8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x56466ded9f18 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56466ded9e88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deda060 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466ded9fd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466deda1a8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56466deda118 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466deda260 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466deda360 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466deda2d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466deda418 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466deda4d8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x56466deda5d8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x56466deda758 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56466deda698 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x56466dedaf18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466deda810 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x56466dedae78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x56466dedad78 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x56466dedaff8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466dedb148 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56466dedb0b8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56466dedb200 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466dedb448 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dedb2c0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x56466dedb338 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56466dedb608 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x56466dedb518 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x56466dedb858 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x56466dedb6d0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x56466dedb748 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x56466dedb918 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466dedbb78 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x56466dedba80 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x56466dedbc48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466dedbc48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dedbe40 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56466dedbf58 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x56466dedbfe8 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x56466dedc0f0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x56466dedc140 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dedc0d0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x56466dedc0b0 <col:27> 'int' 4096
|-FieldDecl 0x56466dedc168 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x56466dedc1d0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x56466dedc3c8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x56466dedc458 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x56466dedc618 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x56466dedc4b8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x56466dedc530 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x56466dedc168 'name' 'String'
| | `-CXXConstructExpr 0x56466dee7088 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56466dee7048 <col:20> 'const String' lvalue ParmVar 0x56466dedc4b8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x56466dedc1d0 'nsig' 'int'
| | `-IntegerLiteral 0x56466dee70e0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x56466dedc3c8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x56466dee71c8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56466dedc458 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x56466dee7188 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x56466dee7148 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x56466dedc530 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x56466dee7458 <col:42, line:289:9>
|   `-CallExpr 0x56466dee7408 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x56466dee73f0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56466dee73d0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x56466da77dc8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x56466dee7440 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x56466dee7318 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x56466dee72f8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x56466dee72e0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56466dee7290 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x56466dedc3c8
|     |     |   `-CXXThisExpr 0x56466dee7280 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x56466dee72c0 <col:25> 'int' 0
|     |-IntegerLiteral 0x56466dee7330 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x56466dee73b0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x56466dee7390 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x56466dee7360 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x56466dedc3c8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x56466dee7350 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x56466dedc6f8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56466dedc6f8
| `-ParmVarDecl 0x56466dedc808 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x56466dedc8a8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56466dedc8a8
| `-ParmVarDecl 0x56466dedc9b8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x56466dedca58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56466dedca58
| `-ParmVarDecl 0x56466dedcb68 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x56466dedcbd8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56466dedcbd8
| `-ParmVarDecl 0x56466dedcce8 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x56466dedcd70 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x56466dedcd70

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466de7fa68 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466de7fb88 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x56466de7fc18 <col:21, col:27> col:21 public
|-EnumDecl 0x56466de7fc40 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x56466de7fd58 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x56466de7fd38 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56466de7fd20 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56466de7fd00 <col:32> 'int' 1
| `-EnumConstantDecl 0x56466de7fe00 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x56466de7fde0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56466de7fdc8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56466de7fda8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x56466de7feb0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x56466de803e8 <col:19, col:21>
|-CXXDestructorDecl 0x56466de7ffa0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x56466de803f8 <col:28, col:30>
|-CXXMethodDecl 0x56466de80160 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x56466de80090 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x56466de80268 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x56466de80268
  `-ParmVarDecl 0x56466de80378 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466de809a0 prev 0x56466de55230 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56466de80a98 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x56466de80b28 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x56466de80b98 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56466de80c58 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x56466de80d18 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x56466de80dd8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x56466de80e98 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x56466de80f38 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x56466de81098 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x56466de81078 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x56466de81058 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x56466de81020 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x56466de81000 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x56466de81038 <col:42> 'int' 1
|-CXXMethodDecl 0x56466de81138 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x56466de812a8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x56466de811e8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x56466de813f0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x56466de81360 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x56466de814b8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x56466de817e0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x56466de818a8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x56466de81a28 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x56466de81960 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x56466de81af0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x56466de81cf8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x56466de81ba0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x56466de81c20 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x56466de81e88 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x56466de81dc0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x56466de81fd8 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x56466de81f48 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x56466de82128 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x56466de82098 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x56466de82278 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x56466de821e8 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x56466de82488 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x56466de82338 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x56466de823b0 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x56466de82698 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x56466de82548 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x56466de825c0 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56466dee0610 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56466dee05f0 <col:60> 'int' 0
|-CXXMethodDecl 0x56466de82928 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x56466de82758 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x56466de827d0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x56466de82848 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56466dee0648 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56466dee0628 <col:76> 'int' 0
|-CXXMethodDecl 0x56466de82bc8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x56466de829f0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x56466de82a68 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x56466de82ae0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56466dee0680 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56466dee0660 <col:84> 'int' 0
|-CXXMethodDecl 0x56466de82f20 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56466de82c90 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x56466de82d08 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x56466de82d88 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x56466de82e28 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56466de831d0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56466de82ff0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x56466de83070 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x56466de830e8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56466de83438 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56466de83298 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x56466de83318 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x56466de83390 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56466de838f0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x56466de83500 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x56466de83580 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x56466de83628 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x56466de837a0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x56466de839b0 <col:115> "" ""
|-CXXMethodDecl 0x56466de83d70 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x56466de83a30 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x56466de83ab0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x56466de83b28 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x56466de83c70 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x56466de83e30 <col:113> "" ""
|-CXXMethodDecl 0x56466de83f80 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x56466de83eb8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x56466de84150 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x56466de84040 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x56466de840b8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x56466de84358 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x56466de84210 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x56466de84288 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x56466de84758 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x56466de84418 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x56466de84490 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x56466de84508 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56466de84588 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x56466de84600 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dee06b8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dee0698 <col:137> 'int' 0
|-CXXMethodDecl 0x56466de84b68 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x56466de84830 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x56466de848a8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x56466de84920 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56466de849a0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x56466de84a18 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dee06f0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dee06d0 <col:139> 'int' 0
|-CXXMethodDecl 0x56466de85018 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x56466de84c40 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x56466de84cb8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x56466de84d30 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466de84da8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56466de84e28 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x56466dee0728 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x56466dee0708 <col:133> 'int' 0
| `-ParmVarDecl 0x56466de84ea8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x56466dee0760 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x56466dee0740 <col:160> 'int' 0
|-CXXMethodDecl 0x56466de853b0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56466de850f8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x56466de85170 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x56466de851e8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56466de85260 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dee0798 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dee0778 <col:116> 'int' 0
|-EnumDecl 0x56466de85470 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x56466de85570 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x56466de855c0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466de85550 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x56466de85530 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x56466de85740 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x56466de855e8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x56466de85660 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x56466de85958 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x56466de85800 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x56466de85880 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x56466de87c08 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x56466de85a18 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x56466de87af0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x56466de87d90 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x56466de87cc8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x56466de87f40 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x56466de87e48 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x56466de88150 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x56466de87ff8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x56466de88078 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x56466de882d8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x56466de88210 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x56466de883f8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x56466de884e8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x56466de88658 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x56466de88598 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x56466de887e0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x56466de88710 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x56466de889e8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x56466de88898 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x56466de88918 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x56466de88b18 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x56466de88c08 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x56466de88cc8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x56466de88ec8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56466de88d78 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x56466de88df0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56466dee0848 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56466dee0830 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x56466dee0818 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56466dee07f8 <col:58, col:65> 'String' (CXXTemporary 0x56466dee07f8)
|           `-CXXTemporaryObjectExpr 0x56466dee07c0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x56466de89098 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56466de88f88 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x56466de89000 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56466dee08f8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56466dee08e0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x56466dee08c8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56466dee08a8 <col:71, col:78> 'String' (CXXTemporary 0x56466dee08a8)
|           `-CXXTemporaryObjectExpr 0x56466dee0870 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x56466de89268 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56466de89158 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x56466de891d0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56466dee09a8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56466dee0990 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x56466dee0978 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56466dee0958 <col:71, col:78> 'String' (CXXTemporary 0x56466dee0958)
|           `-CXXTemporaryObjectExpr 0x56466dee0920 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x56466de89438 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56466de89328 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x56466de893a0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56466dee0a58 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56466dee0a40 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x56466dee0a28 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56466dee0a08 <col:70, col:77> 'String' (CXXTemporary 0x56466dee0a08)
|           `-CXXTemporaryObjectExpr 0x56466dee09d0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x56466de895b8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x56466de894f8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x56466de897d8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x56466de89670 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x56466de896e8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x56466de898d8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x56466de898d8
|-CXXMethodDecl 0x56466de899e0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56466de89aa0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56466de89b60 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x56466de89c20 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x56466de89e18 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x56466de89cd0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x56466de89d48 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x56466de8a1d0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x56466de89ed8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x56466de89f50 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x56466de89fc8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x56466de8a040 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x56466de8a0c0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x56466de8a530 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x56466de8a2b0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x56466de8a330 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x56466de8a3b0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x56466de8a430 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x56466de8a610 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x56466de8a750 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x56466de8a6c0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x56466de8a8a0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56466de8a808 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466de8aaa8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x56466de8a958 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x56466de8a9d0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466de8abf8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x56466de8ab68 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466de8ad40 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x56466de8acb0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x56466de8af80 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x56466de8ae00 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56466de8aea8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x56466de8b108 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x56466de8b040 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x56466de8b1b0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466de8b2c8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x56466de8b370 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x56466de8b3d8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x56466de8b490 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x56466dee0a80 <col:16, line:150:9>
| |-CXXConstructorDecl 0x56466de8b668 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x56466de8b550 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x56466de8b5d0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x56466de8b370 'idx' 'int'
| | | `-ImplicitCastExpr 0x56466dee0ad0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56466dee0a90 <col:19> 'int' lvalue ParmVar 0x56466de8b550 'i' 'int'
| | |-CXXCtorInitializer Field 0x56466de8b3d8 'port' 'int'
| | | `-ImplicitCastExpr 0x56466dee0b50 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56466dee0b10 <col:28> 'int' lvalue ParmVar 0x56466de8b5d0 'p' 'int'
| | `-CompoundStmt 0x56466dee0ba0 <col:31, line:153:9>
| |-CXXMethodDecl 0x56466de8b848 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56466de8b758 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56466dee4460 <col:46, line:157:9>
| |   `-ReturnStmt 0x56466dee4450 <line:156:13, col:46>
| |     `-BinaryOperator 0x56466dee4430 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x56466dee4330 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x56466dee4300 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56466dee4280 <col:20> 'const int' lvalue ->idx 0x56466de8b370
| |       | |   `-CXXThisExpr 0x56466dee4270 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56466dee4318 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56466dee42d0 <col:27, col:29> 'const int' lvalue .idx 0x56466de8b370
| |       |     `-DeclRefExpr 0x56466dee42b0 <col:27> 'const Router::Port' lvalue ParmVar 0x56466de8b758 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x56466dee4410 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x56466dee43e0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x56466dee4360 <col:36> 'const int' lvalue ->port 0x56466de8b3d8
| |         |   `-CXXThisExpr 0x56466dee4350 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x56466dee43f8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x56466dee43b0 <col:44, col:46> 'const int' lvalue .port 0x56466de8b3d8
| |             `-DeclRefExpr 0x56466dee4390 <col:44> 'const Router::Port' lvalue ParmVar 0x56466de8b758 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56466de8b990 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56466de8b900 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56466dee4668 <col:46, line:160:9>
| |   `-ReturnStmt 0x56466dee4658 <line:159:13, col:46>
| |     `-BinaryOperator 0x56466dee4638 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x56466dee4538 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x56466dee4508 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56466dee4488 <col:20> 'const int' lvalue ->idx 0x56466de8b370
| |       | |   `-CXXThisExpr 0x56466dee4478 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56466dee4520 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56466dee44d8 <col:27, col:29> 'const int' lvalue .idx 0x56466de8b370
| |       |     `-DeclRefExpr 0x56466dee44b8 <col:27> 'const Router::Port' lvalue ParmVar 0x56466de8b900 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x56466dee4618 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x56466dee45e8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x56466dee4568 <col:36> 'const int' lvalue ->port 0x56466de8b3d8
| |         |   `-CXXThisExpr 0x56466dee4558 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x56466dee4600 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x56466dee45b8 <col:44, col:46> 'const int' lvalue .port 0x56466de8b3d8
| |             `-DeclRefExpr 0x56466dee4598 <col:44> 'const Router::Port' lvalue ParmVar 0x56466de8b900 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56466de8bad8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56466de8ba48 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x56466dee4990 <col:45, line:163:9>
| |   `-ReturnStmt 0x56466dee4980 <line:162:13, col:65>
| |     `-BinaryOperator 0x56466dee4960 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x56466dee4740 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x56466dee4710 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56466dee4690 <col:20> 'const int' lvalue ->idx 0x56466de8b370
| |       | |   `-CXXThisExpr 0x56466dee4680 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56466dee4728 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56466dee46e0 <col:26, col:28> 'const int' lvalue .idx 0x56466de8b370
| |       |     `-DeclRefExpr 0x56466dee46c0 <col:26> 'const Router::Port' lvalue ParmVar 0x56466de8ba48 'x' 'const Router::Port &'
| |       `-ParenExpr 0x56466dee4940 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x56466dee4920 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x56466dee4820 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x56466dee47f0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x56466dee4770 <col:36> 'const int' lvalue ->idx 0x56466de8b370
| |           | |   `-CXXThisExpr 0x56466dee4760 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x56466dee4808 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x56466dee47c0 <col:43, col:45> 'const int' lvalue .idx 0x56466de8b370
| |           |     `-DeclRefExpr 0x56466dee47a0 <col:43> 'const Router::Port' lvalue ParmVar 0x56466de8ba48 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x56466dee4900 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x56466dee48d0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x56466dee4850 <col:52> 'const int' lvalue ->port 0x56466de8b3d8
| |             |   `-CXXThisExpr 0x56466dee4840 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x56466dee48e8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x56466dee48a0 <col:59, col:61> 'const int' lvalue .port 0x56466de8b3d8
| |                 `-DeclRefExpr 0x56466dee4880 <col:59> 'const Router::Port' lvalue ParmVar 0x56466de8ba48 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56466de8bc20 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56466de8bb90 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56466dee4cb8 <col:46, line:166:9>
| |   `-ReturnStmt 0x56466dee4ca8 <line:165:13, col:66>
| |     `-BinaryOperator 0x56466dee4c88 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x56466dee4a68 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x56466dee4a38 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56466dee49b8 <col:20> 'const int' lvalue ->idx 0x56466de8b370
| |       | |   `-CXXThisExpr 0x56466dee49a8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56466dee4a50 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56466dee4a08 <col:26, col:28> 'const int' lvalue .idx 0x56466de8b370
| |       |     `-DeclRefExpr 0x56466dee49e8 <col:26> 'const Router::Port' lvalue ParmVar 0x56466de8bb90 'x' 'const Router::Port &'
| |       `-ParenExpr 0x56466dee4c68 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x56466dee4c48 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x56466dee4b48 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x56466dee4b18 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x56466dee4a98 <col:36> 'const int' lvalue ->idx 0x56466de8b370
| |           | |   `-CXXThisExpr 0x56466dee4a88 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x56466dee4b30 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x56466dee4ae8 <col:43, col:45> 'const int' lvalue .idx 0x56466de8b370
| |           |     `-DeclRefExpr 0x56466dee4ac8 <col:43> 'const Router::Port' lvalue ParmVar 0x56466de8bb90 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x56466dee4c28 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x56466dee4bf8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x56466dee4b78 <col:52> 'const int' lvalue ->port 0x56466de8b3d8
| |             |   `-CXXThisExpr 0x56466dee4b68 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x56466dee4c10 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x56466dee4bc8 <col:60, col:62> 'const int' lvalue .port 0x56466de8b3d8
| |                 `-DeclRefExpr 0x56466dee4ba8 <col:60> 'const Router::Port' lvalue ParmVar 0x56466de8bb90 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x56466dee4cd0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x56466dee4cd0
| | `-ParmVarDecl 0x56466dee4de8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x56466dee4e88 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x56466dee4e88
| | `-ParmVarDecl 0x56466dee4f98 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x56466dee5030 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56466dee5300 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x56466dee5300
| | `-ParmVarDecl 0x56466dee5408 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x56466dee5478 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56466dee5588 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x56466dee58a8 <col:12>
|     |-BinaryOperator 0x56466dee5748 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56466dee5700 <col:12> 'int' lvalue ->idx 0x56466de8b370
|     | | `-CXXThisExpr 0x56466dee56f0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56466dee5730 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56466dee56c0 <col:12> 'int' xvalue .idx 0x56466de8b370
|     |     `-CXXStaticCastExpr 0x56466dee5690 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56466dee5660 <col:12> 'Router::Port' lvalue ParmVar 0x56466dee5588 '' 'Router::Port &&'
|     |-BinaryOperator 0x56466dee5850 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56466dee5808 <col:12> 'int' lvalue ->port 0x56466de8b3d8
|     | | `-CXXThisExpr 0x56466dee57f8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56466dee5838 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56466dee57c8 <col:12> 'int' xvalue .port 0x56466de8b3d8
|     |     `-CXXStaticCastExpr 0x56466dee5798 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56466dee5768 <col:12> 'Router::Port' lvalue ParmVar 0x56466dee5588 '' 'Router::Port &&'
|     `-ReturnStmt 0x56466dee5898 <col:12>
|       `-UnaryOperator 0x56466dee5880 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56466dee5870 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x56466de8bce0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466de8bdf8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x56466de8bfe8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x56466de8c0a0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x56466de8bfe8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56466dee5008 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56466dee5140 <col:22, line:173:9>
| |-CXXConstructorDecl 0x56466de8c3d8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x56466de8c160 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x56466de8c1e0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x56466de8c260 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x56466de8c2e0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x56466de8bfe8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56466dee5150 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56466dee5b88 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x56466dee5978 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x56466dee5940 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x56466dee5928 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x56466dee5610 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56466dee5478 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x56466dee5220 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x56466dee5208 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x56466dee51b8 <col:13> 'Router::Port [2]' lvalue ->p 0x56466de8bfe8
| |   |   | |   `-CXXThisExpr 0x56466dee51a8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x56466dee51e8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x56466dee55f8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x56466dee52c0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x56466dee5290 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x56466dee5250 <col:25> 'int' lvalue ParmVar 0x56466de8c260 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x56466dee52a8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x56466dee5270 <col:33> 'int' lvalue ParmVar 0x56466de8c2e0 'to_port' 'int'
| |   `-ExprWithCleanups 0x56466dee5b70 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x56466dee5b38 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56466dee5b20 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x56466dee5b00 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56466dee5478 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x56466dee5a08 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x56466dee59f0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x56466dee59a0 <col:13> 'Router::Port [2]' lvalue ->p 0x56466de8bfe8
| |       | |   `-CXXThisExpr 0x56466dee5990 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x56466dee59d0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x56466dee5ae8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x56466dee5aa8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x56466dee5a78 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x56466dee5a38 <col:25> 'int' lvalue ParmVar 0x56466de8c160 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x56466dee5a90 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x56466dee5a58 <col:35> 'int' lvalue ParmVar 0x56466de8c1e0 'from_port' 'int'
| |-CXXMethodDecl 0x56466de8c5a8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x56466de8c4b8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x56466dee6148 <col:45, line:182:9>
| |   |-ParenExpr 0x56466dee6028 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56466dee5ff8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56466dee5cc8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56466dee5c98 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56466dee5c00 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56466dee5be8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56466dee5ba8 <col:34> 'int' lvalue ParmVar 0x56466de8c4b8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56466dee5bc8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56466dee5c78 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56466dee5c60 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56466dee5c20 <col:44> 'int' lvalue ParmVar 0x56466de8c4b8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56466dee5c40 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56466dee5d28 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56466dee5d08 <col:59> 'int' 0
| |   |   `-CallExpr 0x56466dee5f58 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56466dee5f40 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56466dee5f20 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56466dee5f98 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56466dee5d98 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56466dee5fb0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56466dee5dc0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56466dee5fc8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56466dee5df8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x56466dee5fe0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56466dee5f08 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56466dee5ef0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56466dee5e98 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x56466dee6138 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x56466dee6118 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56466dee60e8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56466dee6058 <col:20> 'Router::Port const[2]' lvalue ->p 0x56466de8bfe8
| |       |   `-CXXThisExpr 0x56466dee6048 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56466dee6100 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56466dee6088 <col:22> 'int' lvalue ParmVar 0x56466de8c4b8 'i' 'int'
| |-CXXMethodDecl 0x56466de8c758 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x56466de8c668 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x56466dee66c0 <col:33, line:186:9>
| |   |-ParenExpr 0x56466dee65e0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56466dee65b0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56466dee6288 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56466dee6258 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56466dee61c0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56466dee61a8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56466dee6168 <col:34> 'int' lvalue ParmVar 0x56466de8c668 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56466dee6188 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56466dee6238 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56466dee6220 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56466dee61e0 <col:44> 'int' lvalue ParmVar 0x56466de8c668 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56466dee6200 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56466dee62e8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56466dee62c8 <col:59> 'int' 0
| |   |   `-CallExpr 0x56466dee6510 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56466dee64f8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56466dee64d8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56466dee6550 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56466dee6358 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56466dee6568 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56466dee6380 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56466dee6580 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56466dee63b8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x56466dee6598 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56466dee64c0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56466dee64a8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56466dee6458 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x56466dee66b0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x56466dee6690 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56466dee6660 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56466dee6610 <col:20> 'Router::Port [2]' lvalue ->p 0x56466de8bfe8
| |       |   `-CXXThisExpr 0x56466dee6600 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56466dee6678 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56466dee6640 <col:22> 'int' lvalue ParmVar 0x56466de8c668 'i' 'int'
| |-CXXMethodDecl 0x56466de8c8f8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x56466de8c838 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x56466dee6a98 <col:52, line:190:9>
| |   `-ReturnStmt 0x56466dee6a88 <line:189:13, col:51>
| |     `-BinaryOperator 0x56466dee6a68 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x56466dee6880 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x56466dee6868 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x56466dee6820 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56466de8b848 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x56466dee6758 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x56466dee6740 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x56466dee66f0 <col:20> 'Router::Port const[2]' lvalue ->p 0x56466de8bfe8
| |       | | |   `-CXXThisExpr 0x56466dee66e0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x56466dee6720 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x56466dee6800 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x56466dee67e8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x56466dee6798 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x56466de8bfe8
| |       |   |   `-DeclRefExpr 0x56466dee6778 <col:28> 'const Router::Connection' lvalue ParmVar 0x56466de8c838 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x56466dee67c8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x56466dee6a30 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x56466dee6a18 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x56466dee69f8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56466de8b848 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x56466dee6930 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x56466dee6918 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x56466dee68c8 <col:38> 'Router::Port const[2]' lvalue ->p 0x56466de8bfe8
| |         | |   `-CXXThisExpr 0x56466dee68b8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x56466dee68f8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x56466dee69d8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x56466dee69c0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x56466dee6970 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x56466de8bfe8
| |           |   `-DeclRefExpr 0x56466dee6950 <col:46> 'const Router::Connection' lvalue ParmVar 0x56466de8c838 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x56466dee69a0 <col:50> 'int' 1
| `-CXXMethodDecl 0x56466de8ca40 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x56466de8c9b0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x56466dee7030 <col:51, line:193:9>
|     `-ReturnStmt 0x56466dee7020 <line:192:13, col:69>
|       `-BinaryOperator 0x56466dee7000 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x56466dee6c28 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x56466dee6c10 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x56466dee6bf0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56466de8bad8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x56466dee6b28 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x56466dee6b10 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x56466dee6ac0 <col:20> 'Router::Port const[2]' lvalue ->p 0x56466de8bfe8
|         | | |   `-CXXThisExpr 0x56466dee6ab0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x56466dee6af0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x56466dee6bd0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x56466dee6bb8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x56466dee6b68 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x56466de8bfe8
|         |   |   `-DeclRefExpr 0x56466dee6b48 <col:27> 'const Router::Connection' lvalue ParmVar 0x56466de8c9b0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x56466dee6b98 <col:31> 'int' 0
|         `-ParenExpr 0x56466dee6fe0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x56466dee6fc0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x56466dee6dd8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x56466dee6dc0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x56466dee6da0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56466de8b848 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x56466dee6cd8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x56466dee6cc0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x56466dee6c70 <col:38> 'Router::Port const[2]' lvalue ->p 0x56466de8bfe8
|             | | |   `-CXXThisExpr 0x56466dee6c60 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x56466dee6ca0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x56466dee6d80 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x56466dee6d68 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x56466dee6d18 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x56466de8bfe8
|             |   |   `-DeclRefExpr 0x56466dee6cf8 <col:46> 'const Router::Connection' lvalue ParmVar 0x56466de8c9b0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x56466dee6d48 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x56466dee6f88 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x56466dee6f70 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56466dee6f50 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56466de8bad8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x56466dee6e88 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x56466dee6e70 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x56466dee6e20 <col:56> 'Router::Port const[2]' lvalue ->p 0x56466de8bfe8
|               | |   `-CXXThisExpr 0x56466dee6e10 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x56466dee6e50 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x56466dee6f30 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x56466dee6f18 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x56466dee6ec8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x56466de8bfe8
|                 |   `-DeclRefExpr 0x56466dee6ea8 <col:63> 'const Router::Connection' lvalue ParmVar 0x56466de8c9b0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x56466dee6ef8 <col:67> 'int' 1
|-AccessSpecDecl 0x56466de8cb00 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x56466de8cb28 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x56466de8cbe0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x56466de8cca0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56466de8ccf0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56466de8cd40 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56466de8cd90 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x56466de8cde0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x56466de8ce30 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x56466de8cf48 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56466de8cf28 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x56466de8cf10 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x56466de8cef0 <col:25> 'int' 2
| |-EnumConstantDecl 0x56466de8cff0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56466de8cfd0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x56466de8cfb8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x56466de8cf98 <col:48> 'int' 1
| |-EnumConstantDecl 0x56466de8d080 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56466de8d060 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x56466de8d040 <col:71> 'int' 0
| |-EnumConstantDecl 0x56466de8d110 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56466de8d0f0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x56466de8d0d0 <col:30> 'int' 1
| `-EnumConstantDecl 0x56466de8d1a0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x56466de8d180 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x56466de8d160 <col:50> 'int' 2
|-FieldDecl 0x56466de8d200 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x56466de8d260 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x56466de8d2c8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x56466de8d368 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x56466de8d348 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x56466de8d318 <col:30> 'int' 1
|-FieldDecl 0x56466de8d408 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x56466de8d3e8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x56466de8d3b8 <col:33> 'int' 1
|-FieldDecl 0x56466de8d4a8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x56466de8d488 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x56466de8d458 <col:32> 'int' 1
|-FieldDecl 0x56466de8d510 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x56466de8d570 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x56466de99290 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x56466dea4a50 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56466dea4b50 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56466deb3450 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x56466debb8d0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x56466debb920 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56466debba38 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x56466debbad8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x56466debbb38 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x56466debbbd0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56466debbbd0
| | `-ParmVarDecl 0x56466debbce8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x56466debbd88 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56466debbd88
| | `-ParmVarDecl 0x56466debbe98 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x56466debbf38 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56466debbf38
| | `-ParmVarDecl 0x56466debc048 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x56466debc0b8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56466debc0b8
| | `-ParmVarDecl 0x56466debc1c8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x56466debc250 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x56466debc250
|-FieldDecl 0x56466dec8f20 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x56466dec8f80 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x56466dec9090 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56466dec93e8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x56466dec94f0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56466ded2c00 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x56466ded2d10 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56466ded2e10 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56466ded2f20 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56466ded3030 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56466ded3140 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56466ded3250 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x56466ded32a0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x56466ded33a0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x56466ded33f0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466ded3380 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x56466ded3360 <col:29> 'int' 256
|-FieldDecl 0x56466ded3450 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x56466ded34b8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x56466ded3520 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x56466ded3620 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56466dedbd30 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x56466dedbd90 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x56466dedbdf0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x56466dedbe40 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56466dedbf58 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x56466dedbfe8 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x56466dedc0f0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x56466dedc140 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x56466dedc0d0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x56466dedc0b0 <col:27> 'int' 4096
| |-FieldDecl 0x56466dedc168 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x56466dedc1d0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x56466dedc3c8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x56466dedc458 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x56466dedc618 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x56466dedc4b8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x56466dedc530 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x56466dedc168 'name' 'String'
| | | `-CXXConstructExpr 0x56466dee7088 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x56466dee7048 <col:20> 'const String' lvalue ParmVar 0x56466dedc4b8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x56466dedc1d0 'nsig' 'int'
| | | `-IntegerLiteral 0x56466dee70e0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x56466dedc3c8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x56466dee71c8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x56466dedc458 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x56466dee7188 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56466dee7148 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x56466dedc530 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x56466dee7458 <col:42, line:289:9>
| |   `-CallExpr 0x56466dee7408 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x56466dee73f0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56466dee73d0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x56466da77dc8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x56466dee7440 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x56466dee7318 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x56466dee72f8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x56466dee72e0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x56466dee7290 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x56466dedc3c8
| |     |     |   `-CXXThisExpr 0x56466dee7280 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x56466dee72c0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x56466dee7330 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x56466dee73b0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x56466dee7390 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x56466dee7360 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x56466dedc3c8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x56466dee7350 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x56466dedc6f8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56466dedc6f8
| | `-ParmVarDecl 0x56466dedc808 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x56466dedc8a8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56466dedc8a8
| | `-ParmVarDecl 0x56466dedc9b8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x56466dedca58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56466dedca58
| | `-ParmVarDecl 0x56466dedcb68 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x56466dedcbd8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56466dedcbd8
| | `-ParmVarDecl 0x56466dedcce8 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x56466dedcd70 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x56466dedcd70
|-FieldDecl 0x56466dedce60 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x56466dedcec0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x56466dedcf20 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x56466dedcf80 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x56466dedcfe0 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x56466dedd0f0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56466dedd1f0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56466dedd250 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x56466dedd398 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x56466dedd2d8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x56466dedd548 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x56466dedd458 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x56466dedd690 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x56466dedd600 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x56466dedda38 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x56466dedd748 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x56466dedd7c0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x56466dedd840 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x56466dedd8b8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x56466dedd930 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466dee0a70 <col:57> 'bool' false
|-CXXMethodDecl 0x56466deddba8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56466deddb10 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x56466deddcf8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56466deddc60 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x56466dedde48 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56466dedddb0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x56466deddfa0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x56466deddf08 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x56466dede2c0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x56466dede058 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x56466dede0d0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x56466dede150 <col:56> col:59 'int'
| `-ParmVarDecl 0x56466dede1c8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x56466dede428 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56466dede390 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x56466dede4f0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x56466dede5b0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x56466dede7b0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x56466dede660 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x56466dede6d8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x56466dede880 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x56466dede9c8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x56466dede930 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x56466dee7690 <col:42, line:326:5>
|   `-ReturnStmt 0x56466dee7680 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x56466dee7668 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x56466dee7648 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x56466dee7618 <col:16, col:45> '<bound member function type>' .back 0x56466deb8308
|           `-ArraySubscriptExpr 0x56466dee7598 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x56466dee7568 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dee7480 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x56466dec93e8
|             |   `-CXXThisExpr 0x56466dee7470 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x56466dee7580 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x56466dee74b0 <col:38> 'bool' lvalue ParmVar 0x56466dede930 'isout' 'bool'
|-CXXMethodDecl 0x56466dedeb98 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x56466dedea80 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x56466dedeaf8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x56466dedecf0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x56466dedec58 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x56466dedef98 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x56466dededa8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x56466dedee20 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x56466dedeea0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x56466dedf170 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x56466dedf060 <col:30> col:34 'bool'
| `-ParmVarDecl 0x56466dedf0d8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x56466dedf2f8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x56466dedf238 <col:30> col:33 'int'
|-CXXMethodDecl 0x56466dedf590 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x56466dedf3b8 <col:23> col:26 'int'
| |-ParmVarDecl 0x56466dedf430 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x56466dedf4a8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x56466dedf7a8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x56466dedf658 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x56466dedf6d0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x56466dedf9b8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x56466dedf870 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x56466dedf8e8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x56466dedfb38 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x56466dedfa78 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x56466dedfd38 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x56466dedfbf0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x56466dedfc68 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x56466dedff10 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56466dedfdf8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x56466dedfe78 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x56466dee01f0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dedffd0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x56466dee0048 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56466dee00c8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x56466dee0140 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x56466dee02d0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56466dee0330 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x56466dee05b0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x56466dee04b0 parent 0x56466dd79430 prev 0x56466dd89058 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x56466dee0390 <col:36> col:39 'int'
    `-ParmVarDecl 0x56466dee0410 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd79430 prev 0x56466dd791b0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466dd79528 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56466dd795b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56466dd79618 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x56466dd79708 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x56466dd79808 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56466dd799d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56466dd79888 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56466dd79900 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56466dd79b68 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56466dd79aa0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56466dd79c10 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56466dd79d48 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56466dd79c80 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56466dd79ee8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56466dd79e28 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56466dd7a088 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56466dd79fc8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56466dd7a130 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56466dd7a230 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56466dd7a310 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd7a210 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56466dd7a1f0 <col:26> 'int' 1
| `-EnumConstantDecl 0x56466dd7a2c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56466dd7a328 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd7a2a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56466dd7a280 <col:44> 'int' 2
|-CXXMethodDecl 0x56466dd7a470 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56466dd7a358 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56466dd7a3d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56466dd7a5c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56466dd7a538 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56466dd7a808 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56466dd7a688 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56466dd7a700 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56466dd7a8b8 <col:20>
| `-OptimizeNoneAttr 0x56466dd7a910 <col:30>
|-CXXMethodDecl 0x56466dd7aa18 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56466dd7a950 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56466dd7aac0 <col:20>
| `-OptimizeNoneAttr 0x56466dd7ab18 <col:30>
|-CXXMethodDecl 0x56466dd7ab68 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56466dd7ac30 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56466dd7ad48 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56466dd7add0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56466dd7ae58 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56466dd7aee0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56466dd7af68 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56466dd7aff8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56466dd7b0b8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56466dd7b140 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x56466dd7b1c8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56466dd7b250 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56466dd7b2d8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56466dd7b360 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56466dd7b3f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56466dd7b4b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56466dd7b540 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56466dd7b690 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56466dd7b5f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56466dd7b820 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56466dd7b750 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56466dd7bad0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56466dd7b8d8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56466dd7b958 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56466dd7b9d8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56466dd7bb88 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56466dd7bc90 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56466dd7bf20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd7bc70 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd7bc50 <col:33> 'int' 0
| |-EnumConstantDecl 0x56466dd7bd20 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56466dd7bf38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd7bd00 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56466dd7bce0 <col:32> 'int' 20
| |-EnumConstantDecl 0x56466dd7bdb0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56466dd7bf50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd7bd90 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56466dd7bd70 <col:38> 'int' 90
| |-EnumConstantDecl 0x56466dd7be40 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56466dd7bf68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd7be20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56466dd7be00 <col:35> 'int' 100
| `-EnumConstantDecl 0x56466dd7bed0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56466dd7bf80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd7beb0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56466dd7be90 <col:32> 'int' 2000
|-CXXMethodDecl 0x56466dd7bfc0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56466dd7c400 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56466dd7c270 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56466dd7c2e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd7c4d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56466dd7c650 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56466dd7c580 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd7c858 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56466dd7c708 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56466dd7c780 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd7c958 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56466dd7c9f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56466dd7cac0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56466dd7cb50 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56466dd7cd80 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd7cb30 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56466dd7cb10 <col:36> 'int' EnumConstant 0x56466dd7cac0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56466dd7cba0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56466dd7cbf0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56466dd7cc40 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56466dd7cc90 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56466dd7cce0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56466dd7cd30 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56466dd7ce68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56466dd7cda8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56466dd7cf30 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56466dd7cff0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56466dd7d0b0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56466dd7d170 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56466dd7d288 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56466dd7d350 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x56466dd7d4d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56466dd7d400 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56466dd7d5f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56466dd7d7f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56466dd7d6a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56466dd7d728 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56466dd8b148 <col:54, line:127:5>
|   |-ParenExpr 0x56466dd8aff8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56466dd8afc8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd8acb8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56466dd8ac90 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56466dd8ac78 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56466dd8ac60 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56466dd8ac30 <col:31> 'Router *' lvalue ->_router 0x56466dd88b10
|   |   |         `-CXXThisExpr 0x56466dd8ac20 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56466dd8ad18 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd8acf8 <col:48> 'int' 0
|   |   `-CallExpr 0x56466dd8af28 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56466dd8af10 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd8aef0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd8af68 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd8ad88 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56466dd8af80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd8ada8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56466dd8af98 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd8ade0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56466dd8afb0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd8aed8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd8aec0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd8ae78 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56466dd8b090 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56466dd8b028 <col:9> 'Router *' lvalue ->_router 0x56466dd88b10
|   | | `-CXXThisExpr 0x56466dd8b018 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56466dd8b078 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56466dd8b058 <col:19> 'Router *' lvalue ParmVar 0x56466dd7d6a8 'r' 'Router *'
|   `-BinaryOperator 0x56466dd8b128 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56466dd8b0c0 <col:9> 'int' lvalue ->_eindex 0x56466dd88b78
|     | `-CXXThisExpr 0x56466dd8b0b0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56466dd8b110 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd8b0f0 <col:19> 'int' lvalue ParmVar 0x56466dd7d728 'eindex' 'int'
|-CXXMethodDecl 0x56466dd7d980 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56466dd7d8b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56466dd7da50 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56466dd7db18 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56466dd7dbb8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56466dd7de08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56466dd7dc80 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56466dd7dd00 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56466dd7deb8 <col:20>
| `-OptimizeNoneAttr 0x56466dd7df10 <col:30>
|-CXXMethodDecl 0x56466dd7e018 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56466dd7df50 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56466dd7e0c0 <col:20>
| `-OptimizeNoneAttr 0x56466dd7e118 <col:30>
|-CXXMethodDecl 0x56466dd7e1e8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56466dd7e158 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56466dd7e290 <col:20>
| `-OptimizeNoneAttr 0x56466dd7e2e8 <col:30>
|-CXXMethodDecl 0x56466dd7e478 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56466dd7e320 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56466dd7e3a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56466dd7e608 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56466dd7e540 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56466dd7e758 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56466dd7e6c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56466dd7e8a8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56466dd7e818 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56466dd7e9f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56466dd7e968 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56466dd7ecb8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56466dd7eab0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56466dd7eb30 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56466dd7ebd8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56466dd7ed90 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56466dd7ee50 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56466dd7f120 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56466dd7efd0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56466dd7f048 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd7f248 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56466dd7f420 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56466dd7f300 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56466dd7f380 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56466dd7f608 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56466dd7f4e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56466dd7f568 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56466dd7f978 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56466dd7f6c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56466dd7f740 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56466dd7f7c0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56466dd8a730 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56466dd8a710 <col:106> 'int' 0
| `-ParmVarDecl 0x56466dd7f838 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dd8a768 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dd8a748 <col:126> 'int' 0
|-CXXMethodDecl 0x56466dd7fd18 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56466dd7fa48 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56466dd7fae0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56466dd7fb60 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56466dd7fbd8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dd8a7a0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dd8a780 <col:114> 'int' 0
|-CXXMethodDecl 0x56466dd800a8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56466dd7fdf0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56466dd7fe68 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56466dd7fee8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56466dd8a7b8 <col:96> 'int' 0
| `-ParmVarDecl 0x56466dd7ff60 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dd8a7f8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dd8a7d8 <col:116> 'int' 0
|-CXXMethodDecl 0x56466dd80428 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56466dd80178 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56466dd801f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd80270 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56466dd8a830 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56466dd8a810 <col:109> 'int' 0
| `-ParmVarDecl 0x56466dd802e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dd8a868 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dd8a848 <col:129> 'int' 0
|-CXXMethodDecl 0x56466dd807a8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56466dd804f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56466dd80570 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd805f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56466dd80668 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dd8a8a0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dd8a880 <col:117> 'int' 0
|-CXXMethodDecl 0x56466dd80b38 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56466dd80880 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd808f8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd80978 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56466dd8a8b8 <col:99> 'int' 0
| `-ParmVarDecl 0x56466dd809f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56466dd8a8f8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56466dd8a8d8 <col:119> 'int' 0
|-CXXMethodDecl 0x56466dd80f58 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56466dd80c08 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56466dd80c88 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56466dd80d00 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd80d80 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56466dd8a930 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56466dd8a910 <col:108> 'int' 0
| `-ParmVarDecl 0x56466dd80e00 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56466dd8a968 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56466dd8a948 <col:141> 'int' 0
|-CXXMethodDecl 0x56466dd81378 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56466dd81030 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56466dd810b0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56466dd81128 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd811a8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56466dd81228 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56466dd8a980 <col:121> 'int' 0
|-CXXMethodDecl 0x56466dd817a8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56466dd81458 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56466dd814d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56466dd81550 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd815d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56466dd8a9a0 <col:98> 'int' 0
| `-ParmVarDecl 0x56466dd81650 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56466dd8a9c0 <col:123> 'int' 0
|-CXXMethodDecl 0x56466dd81a70 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56466dd81880 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56466dd81900 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56466dd81980 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56466dd8a9e0 <col:80> 'int' 0
|-EnumDecl 0x56466dd81b28 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56466dd81c30 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56466dd81ec0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd81c10 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56466dd81bf0 <col:42> 'int' 1
| |-EnumConstantDecl 0x56466dd81cc0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56466dd81ed8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd81ca0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56466dd81c80 <col:40> 'int' 2
| |-EnumConstantDecl 0x56466dd81d50 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56466dd81ef0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd81d30 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56466dd81d10 <col:44> 'int' 4
| |-EnumConstantDecl 0x56466dd81de0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56466dd81f08 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd81dc0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56466dd81da0 <col:36> 'int' 7
| `-EnumConstantDecl 0x56466dd81e70 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56466dd81f20 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd81e50 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56466dd81e30 <col:34> 'int' 6
|-CXXMethodDecl 0x56466dd821d8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56466dd81f48 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56466dd81fe8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56466dd82068 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56466dd820e0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56466dd8aa98 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56466dd8aa80 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56466dd8aa68 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56466dd8aa48 <col:98, col:105> 'String' (CXXTemporary 0x56466dd8aa48)
|           `-CXXTemporaryObjectExpr 0x56466dd8aa10 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56466dd82478 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56466dd822a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56466dd82320 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56466dd82398 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56466dd8ab48 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56466dd8ab30 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56466dd8ab18 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56466dd8aaf8 <col:94, col:101> 'String' (CXXTemporary 0x56466dd8aaf8)
| |         `-CXXTemporaryObjectExpr 0x56466dd8aac0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56466dd8b330 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56466dd8b2a8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56466dd8b278 <col:9> '<bound member function type>' ->add_task_handlers 0x56466dd821d8
|     | `-CXXThisExpr 0x56466dd8b268 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56466dd8b2e8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56466dd8b1e8 <col:27> 'Task *' lvalue ParmVar 0x56466dd822a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x56466dd8b300 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56466dd8b208 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56466dd82320 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56466dd8b318 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56466dd8b228 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56466dd81e70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56466dd8b248 <col:62> 'const String' lvalue ParmVar 0x56466dd82398 'prefix' 'const String &'
|-CXXMethodDecl 0x56466dd82688 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56466dd82540 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56466dd825b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56466dd8abf8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56466dd8abe0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56466dd8abc8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56466dd8aba8 <col:70, col:77> 'String' (CXXTemporary 0x56466dd8aba8)
| |         `-CXXTemporaryObjectExpr 0x56466dd8ab70 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56466dd8b508 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56466dd8b480 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56466dd8b450 <col:9> '<bound member function type>' ->add_task_handlers 0x56466dd821d8
|     | `-CXXThisExpr 0x56466dd8b440 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56466dd8b4c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56466dd8b3c0 <col:27> 'Task *' lvalue ParmVar 0x56466dd82540 'task' 'Task *'
|     |-ImplicitCastExpr 0x56466dd8b4d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56466dd8b3e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56466dd8b4f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56466dd8b400 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56466dd81e70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56466dd8b420 <col:57> 'const String' lvalue ParmVar 0x56466dd825b8 'prefix' 'const String &'
|-CXXMethodDecl 0x56466dd82968 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56466dd82750 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd827d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd82848 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56466dd82c18 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56466dd82a38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd82ab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd82b38 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56466dd82f08 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56466dd82ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd82d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd82de0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56466dd831b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56466dd82fd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd83058 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd830d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56466dd83468 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56466dd83288 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd83308 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd83388 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56466dd83718 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56466dd83538 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd835b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd83630 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56466dd839c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56466dd837e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd83868 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd838e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56466dd83cd8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56466dd83af0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd83b70 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd83bf0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56466dd83fb8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56466dd83da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd83e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd83ed0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56466dd84298 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56466dd84088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd84108 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd841b0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56466dd84500 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56466dd84368 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56466dd843e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56466dd84460 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56466dd847a8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56466dd845d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56466dd84650 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56466dd846c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56466dd84a58 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56466dd84878 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd848f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd84978 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56466dd84d08 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56466dd84b28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd84ba8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd84c20 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56466dd84fb8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56466dd84dd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd84e58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd84ed0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56466dd85288 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56466dd85088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd85108 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56466dd851a8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56466dd855b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56466dd85358 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56466dd853d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56466dd85450 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56466dd854c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466dd8ac10 <col:93> 'bool' false
|-CXXMethodDecl 0x56466dd857a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56466dd85688 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56466dd85708 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56466dd85978 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56466dd85860 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56466dd858e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56466dd85c58 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd85a38 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56466dd85ab0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56466dd85b30 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56466dd85ba8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd85f48 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd85d28 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56466dd85da0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56466dd85e20 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56466dd85e98 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd86180 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56466dd86020 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56466dd860a0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56466dd86368 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56466dd86248 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56466dd862c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56466dd86418 prev 0x56466dd7dbb8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466dd86510 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56466dd865a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56466dd86618 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56466dd866d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56466dd867a0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56466dd86918 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56466dd86850 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56466dd869c0 <col:24>
| | `-OptimizeNoneAttr 0x56466dd86a18 <col:34>
| |-CXXMethodDecl 0x56466dd86a60 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56466dd86d18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56466dd86b10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56466dd86b88 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56466dd86c08 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56466dd86dd0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56466dd86e08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56466dd86e70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56466dd86ef8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56466dd87218 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56466dd86fb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56466dd87028 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56466dd870a0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56466dd87120 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56466dd87330 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56466dd8eca8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56466dd8eca8
| | `-ParmVarDecl 0x56466dd8edb8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56466dd8ee58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56466dd8ee58
| | `-ParmVarDecl 0x56466dd8ef68 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56466dd2d5b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56466dd873a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56466dd87448 <col:38> "" ""
|-CXXMethodDecl 0x56466dd874d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56466dd87578 <col:44> "" ""
|-AccessSpecDecl 0x56466dd875e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56466dd87610 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56466dd87710 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56466dd87760 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd876f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56466dd876d0 <col:27> 'int' 4
|-FieldDecl 0x56466dd87818 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56466dd879c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56466dd87a80 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56466dd88b10 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56466dd88b78 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56466dd88cc8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56466dd88c08 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56466dd88e78 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56466dd88d88 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56466dd89058 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56466dd88f38 <col:20> col:23 'int'
| `-ParmVarDecl 0x56466dd88fb8 <col:25> col:28 'int'
|-CXXMethodDecl 0x56466dd89300 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd89120 <col:23> col:26 'int'
| |-ParmVarDecl 0x56466dd891a0 <col:28> col:31 'int'
| `-ParmVarDecl 0x56466dd89218 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56466dd893b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56466dd89480 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56466dd894d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56466dd89520 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56466dd89700 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd895b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56466dd89628 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd899a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56466dd897c8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56466dd89848 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56466dd898c0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd89bc8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56466dd89a78 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56466dd89af8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56466dd89f00 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56466dd89c88 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56466dd89d08 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56466dd89d80 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56466dd89e00 <col:57> col:60 'int'
|-CXXMethodDecl 0x56466dd8a0e8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56466dd89fd0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56466dd8a050 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56466dd8a238 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56466dd8a1a8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56466dd8a5b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56466dd8a2f8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56466dd8a378 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56466dd8a3f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56466dd8a470 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56466dd8a6d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd943e8 <../elements/ip/iproutetable.hh:188:1, line:212:1> line:188:7 referenced class IPRouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56466dd94548 <col:1, col:7> col:7 implicit class IPRouteTable
|-AccessSpecDecl 0x56466dd945d8 <col:39, col:45> col:39 public
|-CXXMethodDecl 0x56466dd946d8 <line:190:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x56466dd7b820 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56466dd94618 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x56466dd949b0 <line:191:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56466dd7c400 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56466dd94860 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x56466dd948d8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd94a80 <line:192:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x56466dd7c4d0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56466dd94d90 <line:194:5, col:112> col:17 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56466dd94b30 <col:27, col:42> col:42 route 'const IPRoute &'
| |-ParmVarDecl 0x56466dd94ba8 <col:49, col:54> col:54 allow_replace 'bool'
| |-ParmVarDecl 0x56466dd94c20 <col:69, col:78> col:78 replaced_route 'IPRoute *'
| `-ParmVarDecl 0x56466dd94c98 <col:94, col:108> col:108 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd95040 <line:195:5, col:94> col:17 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56466dd94e60 <col:30, col:45> col:45 route 'const IPRoute &'
| |-ParmVarDecl 0x56466dd94ed8 <col:52, col:61> col:61 removed_route 'IPRoute *'
| `-ParmVarDecl 0x56466dd94f50 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd95290 <line:196:5, col:69> col:17 lookup_route 'int (IPAddress, IPAddress &) const' virtual pure
| |-ParmVarDecl 0x56466dd95108 <col:30, col:40> col:40 addr 'IPAddress'
| `-ParmVarDecl 0x56466dd95180 <col:46, col:57> col:57 gw 'IPAddress &'
|-CXXMethodDecl 0x56466dd95388 <line:197:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x56466dd95550 <line:199:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56466dd799d8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56466dd95440 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56466dd954b8 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x56466dd95830 <line:201:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd95610 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x56466dd95688 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x56466dd95708 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x56466dd95780 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd95b20 <line:202:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd95900 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x56466dd95978 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x56466dd959f8 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x56466dd95a70 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd95e10 <line:203:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd95bf0 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x56466dd95c68 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x56466dd95ce8 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x56466dd95d60 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd96180 <line:204:5, col:94> col:16 lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56466dd95ee8 <col:31, col:35> col:35 operation 'int'
| |-ParmVarDecl 0x56466dd95f60 <col:46, col:52> col:53 'String &'
| |-ParmVarDecl 0x56466dd95fd8 <col:55, col:62> col:63 'Element *'
| |-ParmVarDecl 0x56466dd96050 <col:65, col:78> col:79 'const Handler *'
| `-ParmVarDecl 0x56466dd960c8 <col:81, col:93> col:94 'ErrorHandler *'
|-CXXMethodDecl 0x56466dd96370 <line:205:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56466dd96258 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x56466dd962d8 <col:43, col:47> col:48 'void *'
|-AccessSpecDecl 0x56466dd96420 <line:207:3, col:10> col:3 private
|-EnumDecl 0x56466dd96448 <line:209:5, col:41> col:5
| |-EnumConstantDecl 0x56466dd96510 <col:12> col:12 CMD_ADD 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| |-EnumConstantDecl 0x56466dd96560 <col:21> col:21 CMD_SET 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| `-EnumConstantDecl 0x56466dd965b0 <col:30> col:30 CMD_REMOVE 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
|-CXXMethodDecl 0x56466dd96ad0 <line:210:5, col:92> col:9 run_command 'int (int, const String &, Vector<IPRoute> *, ErrorHandler *)'
| |-ParmVarDecl 0x56466dd96618 <col:21, col:25> col:25 command 'int'
| |-ParmVarDecl 0x56466dd96690 <col:34, col:47> col:48 'const String &'
| |-ParmVarDecl 0x56466dd96910 <col:50, col:67> col:67 old_routes 'Vector<IPRoute> *'
| `-ParmVarDecl 0x56466dd96988 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXConstructorDecl 0x56466dd96bd0 <line:188:7> col:7 implicit IPRouteTable 'void (const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x56466dd96bd0
| `-ParmVarDecl 0x56466dd96ce8 <col:7> col:7 'const IPRouteTable &'
|-CXXConstructorDecl 0x56466dd96d88 <col:7> col:7 implicit IPRouteTable 'void (IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x56466dd96d88
| `-ParmVarDecl 0x56466dd96e98 <col:7> col:7 'IPRouteTable &&'
|-CXXMethodDecl 0x56466dd96f38 <col:7> col:7 implicit operator= 'IPRouteTable &(const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x56466dd96f38
| `-ParmVarDecl 0x56466dd97048 <col:7> col:7 'const IPRouteTable &'
|-CXXMethodDecl 0x56466dd970b8 <col:7> col:7 implicit operator= 'IPRouteTable &(IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x56466dd970b8
| `-ParmVarDecl 0x56466dd971c8 <col:7> col:7 'IPRouteTable &&'
`-CXXDestructorDecl 0x56466dd97250 <col:7> col:7 implicit ~IPRouteTable 'void () noexcept' inline default
  `-Overrides: [ 0x56466dd79708 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.IPRouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<20> >
         0 |   vector_memory<class sized_array_memory<20> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct IPRoute>
         0 |   class vector_memory<class sized_array_memory<20> > vm_
         0 |     vector_memory<class sized_array_memory<20> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class LinearIPLookup
         0 |   class IPRouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   class Vector<struct IPRoute> _t
       112 |     class vector_memory<class sized_array_memory<20> > vm_
       112 |       vector_memory<class sized_array_memory<20> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   int _zero_route
       132 |   class IPAddress _last_addr
       132 |     uint32_t _addr
       136 |   int _last_entry
       140 |   class IPAddress _last_addr2
       140 |     uint32_t _addr
       144 |   int _last_entry2
           | [sizeof=152, dsize=148, align=8,
           |  nvsize=148, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466dcfafb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<20>'
|-CXXRecordDecl 0x56466dcfb188 prev 0x56466dcfafb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466dcfb218 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466dcfb240 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466dcfce10 <line:13:5, col:31> col:31 type 'typename sized_array_memory<20>::type':'char_array<20>'
| `-ElaboratedType 0x56466dcfcdc0 'typename sized_array_memory<20>::type' sugar
|   `-TypedefType 0x56466dcfb6f0 'sized_array_memory<20>::type' sugar
|     |-Typedef 0x56466dcfb5f0 'type'
|     `-TemplateSpecializationType 0x56466dcfb580 'char_array<20UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56466dcfb460 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|       |   `-SubstNonTypeTemplateParmExpr 0x56466dcfb440 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56466dcfb420 <col:24> 'unsigned long' 20
|       `-RecordType 0x56466dcfb560 'char_array<20>'
|         `-ClassTemplateSpecialization 0x56466dcfb480 'char_array'
|-TypedefDecl 0x56466dcfcec8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<20> >::type *'
| `-PointerType 0x56466dcfce90 'vector_memory<sized_array_memory<20> >::type *'
|   `-TypedefType 0x56466dcfce70 'vector_memory<sized_array_memory<20> >::type' sugar
|     |-Typedef 0x56466dcfce10 'type'
|     `-ElaboratedType 0x56466dcfcdc0 'typename sized_array_memory<20>::type' sugar
|       `-TypedefType 0x56466dcfb6f0 'sized_array_memory<20>::type' sugar
|         |-Typedef 0x56466dcfb5f0 'type'
|         `-TemplateSpecializationType 0x56466dcfb580 'char_array<20UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56466dcfb460 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|           |   `-SubstNonTypeTemplateParmExpr 0x56466dcfb440 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56466dcfb420 <col:24> 'unsigned long' 20
|           `-RecordType 0x56466dcfb560 'char_array<20>'
|             `-ClassTemplateSpecialization 0x56466dcfb480 'char_array'
|-CXXMethodDecl 0x56466dcfd048 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<20> >::type *) const' inline
| `-ParmVarDecl 0x56466dcfcf58 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXConstructorDecl 0x56466dcfd138 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466dcfd218 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x56466dcfd4e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x56466dcfd3f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<20> > &'
|-CXXMethodDecl 0x56466dcfd728 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x56466dcfd5a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466dcfd618 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfd8f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x56466dcfd7e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466dcfd860 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfda58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x56466dcfdb28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x56466dcfdd78 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x56466dcfdbe8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x56466dcfdc60 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfdfd8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, vector_memory<sized_array_memory<20> >::iterator)'
| |-ParmVarDecl 0x56466dcfde48 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x56466dcfdec0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfe198 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x56466dcfe0a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfe358 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x56466dcfe260 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfe410 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466dcfe4c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466dcfe6f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x56466dcfe570 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466dcfe5e8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x56466dcfe998 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x56466dcfe8a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<20> > &'
|-FieldDecl 0x56466dcfea60 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<20> >::type *'
|-FieldDecl 0x56466dcfeab0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466dcfeb00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466dd96708 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRoute'
|-CXXRecordDecl 0x56466dcf9ac8 prev 0x56466dd96708 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466dcfaf20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRoute>::type':'sized_array_memory<20>'
| `-ElaboratedType 0x56466dcfaed0 'typename array_memory<IPRoute>::type' sugar
|   `-TypedefType 0x56466dcfaeb0 'conditional<true, sized_array_memory<20>, typed_array_memory<IPRoute> >::type' sugar
|     |-Typedef 0x56466dcfad60 'type'
|     `-SubstTemplateTypeParmType 0x56466dcfab80 'sized_array_memory<20>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466dcfa6d0 'sized_array_memory<20>'
|         `-ClassTemplateSpecialization 0x56466dcfa5f0 'sized_array_memory'
|-FieldDecl 0x56466dcfeb50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRoute>::array_memory_type>':'vector_memory<sized_array_memory<20> >' mutable
|-AccessSpecDecl 0x56466dcfeba0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466dcfebd8 <line:118:5, col:15> col:15 value_type 'IPRoute':'IPRoute'
| `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466dd91eb0 'IPRoute'
|     `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcfec98 <line:119:5, col:16> col:16 reference 'IPRoute &'
| `-LValueReferenceType 0x56466dcfec60 'IPRoute &'
|   `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466dd91eb0 'IPRoute'
|       `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcfed28 <line:120:5, col:22> col:22 const_reference 'const IPRoute &'
| `-LValueReferenceType 0x56466dcfecf0 'const IPRoute &'
|   `-QualType 0x56466dcf9b61 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466dd91eb0 'IPRoute'
|         `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcfedb8 <line:121:5, col:16> col:16 pointer 'IPRoute *'
| `-PointerType 0x56466dcfed80 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466dd91eb0 'IPRoute'
|       `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcfee48 <line:122:5, col:22> col:22 const_pointer 'const IPRoute *'
| `-PointerType 0x56466dcfee10 'const IPRoute *'
|   `-QualType 0x56466dcf9b61 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466dd91eb0 'IPRoute'
|         `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcffcb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRoute>::type':'const IPRoute &'
| `-ElaboratedType 0x56466dcffc60 'typename fast_argument<IPRoute>::type' sugar
|   `-TypedefType 0x56466dcffc40 'fast_argument<IPRoute, true>::type' sugar
|     |-Typedef 0x56466dcffb78 'type'
|     `-LValueReferenceType 0x56466dcffb40 'const IPRoute &'
|       `-QualType 0x56466dcff8e1 'const IPRoute' const
|         `-SubstTemplateTypeParmType 0x56466dcff8e0 'IPRoute' sugar
|           |-TemplateTypeParmType 0x56466dae7de0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466dae7d88 'T'
|           `-RecordType 0x56466dd91eb0 'IPRoute'
|             `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcffd18 <line:126:5, col:22> col:22 const_access_type 'const IPRoute &'
| `-LValueReferenceType 0x56466dcfecf0 'const IPRoute &'
|   `-QualType 0x56466dcf9b61 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466dd91eb0 'IPRoute'
|         `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcffd70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466dcffdd8 <line:130:5, col:16> col:16 iterator 'IPRoute *'
| `-PointerType 0x56466dcfed80 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466dd91eb0 'IPRoute'
|       `-CXXRecord 0x56466dd91e18 'IPRoute'
|-TypedefDecl 0x56466dcffe40 <line:131:5, col:22> col:22 const_iterator 'const IPRoute *'
| `-PointerType 0x56466dcfee10 'const IPRoute *'
|   `-QualType 0x56466dcf9b61 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x56466dcf9b60 'IPRoute' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466dd91eb0 'IPRoute'
|         `-CXXRecord 0x56466dd91e18 'IPRoute'
|-EnumDecl 0x56466dcffe98 <line:134:5> col:5
| `-EnumConstantDecl 0x56466dcfff90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRoute>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466dcfff70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466dd00018 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466dd002a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x56466dd000d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466dd00170 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXConstructorDecl 0x56466ddb0c30 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x56466dd00450 <col:19, col:36> col:36 x 'const Vector<IPRoute> &'
|-CXXConstructorDecl 0x56466ddb0ee8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x56466ddb0dd0 <col:19, col:31> col:31 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x56466ddb1230 <line:144:5, col:51> col:23 operator= 'Vector<IPRoute> &(const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x56466ddb1110 <col:33, col:50> col:50 x 'const Vector<IPRoute> &'
|-CXXMethodDecl 0x56466ddb1540 <line:146:5, col:46> col:23 operator= 'Vector<IPRoute> &(Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x56466ddb1420 <col:33, col:45> col:45 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x56466ddb1830 <line:148:5, col:70> col:23 assign 'Vector<IPRoute> &(Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ddb1678 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466ddb16f0 <col:43, col:69> col:63 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x56466ddb1988 <line:150:5, col:55> col:49 begin 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x56466ddb1a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ddb1a90 <col:30> Inherited
|-CXXMethodDecl 0x56466ddb1ad8 <line:151:5, col:53> col:49 end 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x56466ddb1b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ddb1be0 <col:30> Inherited
|-CXXMethodDecl 0x56466ddb1ca8 <line:152:5, col:63> col:55 begin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x56466ddb1d58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ddb1db0 <col:30> Inherited
|-CXXMethodDecl 0x56466ddb1df8 <line:153:5, col:61> col:55 end 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x56466ddb1ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ddb1f00 <col:30> Inherited
|-CXXMethodDecl 0x56466ddb1f48 <line:154:5, col:64> col:55 cbegin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x56466ddb1ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ddb2050 <col:30> Inherited
|-CXXMethodDecl 0x56466ddb2098 <line:155:5, col:62> col:55 cend 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x56466ddb2148 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466ddb21a0 <col:30> Inherited
|-CXXMethodDecl 0x56466ddb21c8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466ddb2278 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466ddb2328 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466ddb24e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ddb23d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466ddb2450 <col:37, col:63> col:57 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x56466ddb2638 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466ddb25a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ddb27e8 <line:163:5, col:65> col:43 operator[] 'IPRoute &(Vector::size_type)'
| |-ParmVarDecl 0x56466ddb26f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466ddb28a0 <col:20>
| `-OptimizeNoneAttr 0x56466ddb28f8 <col:30>
|-CXXMethodDecl 0x56466ddb2a18 <line:164:5, col:73> col:49 operator[] 'const IPRoute &(Vector::size_type) const'
| |-ParmVarDecl 0x56466ddb2920 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466ddb2ad0 <col:20>
| `-OptimizeNoneAttr 0x56466ddb2b28 <col:30>
|-CXXMethodDecl 0x56466ddb2be0 <line:165:5, col:29> col:15 at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466ddb2b50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ddb2d28 <line:166:5, col:37> col:21 at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466ddb2c98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ddb2e58 <line:167:5, col:21> col:15 front 'IPRoute &()' inline
|-CXXMethodDecl 0x56466ddb2f88 <line:168:5, col:29> col:21 front 'const IPRoute &() const' inline
|-CXXMethodDecl 0x56466ddb3058 <line:169:5, col:20> col:15 back 'IPRoute &()' inline
|-CXXMethodDecl 0x56466ddb3128 <line:170:5, col:28> col:21 back 'const IPRoute &() const' inline
|-CXXMethodDecl 0x56466ddb3268 <line:172:5, col:39> col:15 unchecked_at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466ddb31d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ddb33b0 <line:173:5, col:47> col:21 unchecked_at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466ddb3320 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466ddb34f8 <line:174:5, col:59> col:15 at_u 'IPRoute &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466ddb3468 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466ddb35b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466ddb36b0 <line:175:5, col:71> col:21 at_u 'const IPRoute &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466ddb3620 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466ddb3768 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466ddb3828 <line:177:5, col:20> col:15 data 'IPRoute *()' inline
|-CXXMethodDecl 0x56466ddb3928 <line:178:5, col:28> col:21 data 'const IPRoute *() const' inline
|-CXXMethodDecl 0x56466ddb3ad8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x56466ddb39e8 <col:27, col:47> col:47 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-FunctionTemplateDecl 0x56466ddb42c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466ddb3b90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRoute>':'fast_argument<IPRoute, true>'
| `-CXXMethodDecl 0x56466ddb4228 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRoute &&)' inline
|   `-ParmVarDecl 0x56466ddb4128 <col:58, col:62> col:62 v 'IPRoute &&'
|-CXXMethodDecl 0x56466ddb43a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466ddb44f8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x56466ddb4468 <col:28, col:48> col:48 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x56466ddb45b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466ddb47f8 <line:189:5, col:62> col:21 insert 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x56466ddb4670 <col:28, col:37> col:37 it 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x56466ddb46e8 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x56466ddb49b8 <line:190:5, col:38> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator)' inline
| `-ParmVarDecl 0x56466ddb48c8 <col:27, col:36> col:36 it 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x56466ddb4c08 <line:191:5, col:49> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::iterator)' inline
| |-ParmVarDecl 0x56466ddb4a80 <col:27, col:36> col:36 a 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x56466ddb4af8 <col:39, col:48> col:48 b 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x56466ddb4cc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466ddb4f28 <line:195:5, col:34> col:17 swap 'void (Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x56466ddb4e30 <col:22, col:33> col:33 x 'Vector<IPRoute> &'
`-CXXDestructorDecl 0x56466ddb4ff8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466db7a400 prev 0x56466dadf438 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466db7a4f8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x56466db7a588 <col:19, col:25> col:19 public
|-TypedefDecl 0x56466db7a5c0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x56466d96cb50 'uninitialized_type'
|   `-CXXRecord 0x56466d96cab8 'uninitialized_type'
|-CXXConstructorDecl 0x56466db7a680 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7de78 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466db7de38 <col:10> 'int' 0
| `-CompoundStmt 0x56466db7dec0 <col:13, line:22:5>
|-CXXConstructorDecl 0x56466db7a7d0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x56466db7a740 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7df10 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x56466db7ded0 <col:10> 'unsigned int' lvalue ParmVar 0x56466db7a740 'x' 'unsigned int'
| `-CompoundStmt 0x56466db7df58 <col:13, line:27:5>
|-CXXConstructorDecl 0x56466db7a928 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x56466db7a898 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7dfc0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56466db7dfa8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x56466db7df68 <col:10> 'int' lvalue ParmVar 0x56466db7a898 'x' 'int'
| `-CompoundStmt 0x56466db7e008 <col:13, line:31:5>
|-CXXConstructorDecl 0x56466db7aa80 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x56466db7a9f0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7e070 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56466db7e058 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x56466db7e018 <col:10> 'unsigned long' lvalue ParmVar 0x56466db7a9f0 'x' 'unsigned long'
| `-CompoundStmt 0x56466db7e0b8 <col:13, line:35:5>
|-CXXConstructorDecl 0x56466db7abd8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x56466db7ab48 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7e120 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56466db7e108 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x56466db7e0c8 <col:10> 'long' lvalue ParmVar 0x56466db7ab48 'x' 'long'
| `-CompoundStmt 0x56466db7e168 <col:13, line:39:5>
|-CXXConstructorDecl 0x56466db7ad98 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x56466db7aca8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7e1e8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56466db7e198 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x56466daae5f0
| |     `-DeclRefExpr 0x56466db7e178 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x56466db7aca8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x56466db7e230 <col:20, line:44:5>
|-CXXConstructorDecl 0x56466db7af28 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x56466db7ae60 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x56466db7e398 <col:51, line:56:5>
|   `-BinaryOperator 0x56466db7e378 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56466db7e250 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x56466db7ddd0
|     | `-CXXThisExpr 0x56466db7e240 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x56466db7e360 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56466db7e348 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x56466db7e328 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x56466db7e2f8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x56466db7e2e0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x56466db7e280 <col:47> 'const unsigned char *' lvalue ParmVar 0x56466db7ae60 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x56466db7b078 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x56466db7afe8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x56466db7b228 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x56466db7b168 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x56466db7e408 <col:56, line:68:5>
|   `-CStyleCastExpr 0x56466db7e3e0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x56466db7e3b0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x56466db7b168 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x56466db7b3b8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x56466db7b2f0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x56466db7b4a8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x56466db7f3c8 <col:46, line:83:5>
|   `-ReturnStmt 0x56466db7f3b8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x56466db7f3a0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x56466db7f370 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466db7f228 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x56466db7f110 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x56466db7eff8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x56466db7e430 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x56466db7b598 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x56466db7f478 <col:31, line:88:5>
|   `-ReturnStmt 0x56466db7f468 <line:87:2, col:10>
|     `-UnaryOperator 0x56466db7f450 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x56466db7f438 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x56466db7f420 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x56466db7f3f0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56466db7ddd0
|             `-CXXThisExpr 0x56466db7f3e0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56466db7b658 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x56466db7f4f8 <col:34, line:93:5>
|   `-ReturnStmt 0x56466db7f4e8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x56466db7f4d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56466db7f4a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56466db7ddd0
|         `-CXXThisExpr 0x56466db7f490 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x56466db7b728 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x56466db7f578 <col:38, line:101:5>
|   `-ReturnStmt 0x56466db7f568 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x56466db7f550 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56466db7f520 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56466db7ddd0
|         `-CXXThisExpr 0x56466db7f510 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56466db7b7f8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x56466db7f848 <col:38, line:108:5>
|   `-ReturnStmt 0x56466db7f838 <line:107:2, col:58>
|     `-BinaryOperator 0x56466db7f818 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x56466db7f730 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x56466db7f710 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56466db7f6f8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56466db7f5a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56466db7ddd0
|       |   |   `-CXXThisExpr 0x56466db7f590 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56466db7f6d0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56466db7f6b8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56466db7f638 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56466dabc728 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56466db7f618 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x56466db7f7f0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56466db7f7d8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56466db7f7b8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x56466dabc728 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56466db7f798 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x56466db7b8b8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x56466db7fab8 <col:39, line:112:5>
|   `-ReturnStmt 0x56466db7faa8 <line:111:2, col:56>
|     `-BinaryOperator 0x56466db7fa88 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x56466db7f9a0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x56466db7f980 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56466db7f968 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56466db7f870 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56466db7ddd0
|       |   |   `-CXXThisExpr 0x56466db7f860 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56466db7f940 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56466db7f928 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56466db7f908 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56466dabc728 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56466db7f8e8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x56466db7fa60 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56466db7fa48 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56466db7fa28 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x56466dabc728 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56466db7fa08 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x56466db7b9e8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x56466db7baf0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x56466db7bc00 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x56466db7ccc8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56466db7cd88 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56466db7ce50 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x56466db7d048 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x56466db7cf00 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x56466db7cf78 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x56466db7d1c8 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56466db7d108 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x56466db7d310 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56466db7d280 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x56466db7d4b8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56466db7d3c8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56466db7d600 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56466db7d570 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56466db7d748 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56466db7d6b8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56466db7d810 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x56466db7d8d0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x56466db7da48 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x56466db7d980 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x56466db7db10 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x56466db7dbf8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x56466db7dca0 <col:51> "" ""
|-TypedefDecl 0x56466db7dd40 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x56466dadf4d0 'IPAddress'
|   `-CXXRecord 0x56466db7a400 'IPAddress'
|-AccessSpecDecl 0x56466db7dd98 <line:150:3, col:10> col:3 private
|-FieldDecl 0x56466db7ddd0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56466db7e478 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466db7e588 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466dd93558 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56466dd93510 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x56466db7ddd0
| |     `-DeclRefExpr 0x56466dd934f0 <col:7> 'const IPAddress' lvalue ParmVar 0x56466db7e588 '' 'const IPAddress &'
| `-CompoundStmt 0x56466dd935a0 <col:7>
|-CXXConstructorDecl 0x56466db7e628 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56466db7e738 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x56466db7ddd0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56466db7f318 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56466db7f2d0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x56466db7ddd0
| |     `-CXXStaticCastExpr 0x56466db7f2a0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x56466db7f270 <col:7> 'IPAddress' lvalue ParmVar 0x56466db7e738 '' 'IPAddress &&'
| `-CompoundStmt 0x56466db7f360 <col:7>
|-CXXDestructorDecl 0x56466db7f028 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56466dd939a0 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x56466dd939a0
| `-ParmVarDecl 0x56466dd93aa8 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x56466dd93b18 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56466dd93c28 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x56466dd93e90 <col:7>
    |-BinaryOperator 0x56466dd93e38 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x56466dd93df0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x56466db7ddd0
    | | `-CXXThisExpr 0x56466dd93de0 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x56466dd93e20 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x56466dd93db0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x56466db7ddd0
    |     `-CXXStaticCastExpr 0x56466dd93d80 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x56466dd93d50 <col:7> 'IPAddress' lvalue ParmVar 0x56466dd93c28 '' 'IPAddress &&'
    `-ReturnStmt 0x56466dd93e80 <col:7>
      `-UnaryOperator 0x56466dd93e68 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56466dd93e58 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dcf86f8 <../elements/ip/lineariplookup.hh:82:1, line:117:1> line:82:7 referenced class LinearIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'IPRouteTable'
|-CXXRecordDecl 0x56466dcf8858 <col:1, col:7> col:7 implicit referenced class LinearIPLookup
|-AccessSpecDecl 0x56466dcf88e8 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x56466dcf8970 <line:84:5, col:20> col:5 used LinearIPLookup 'void ()'
|-CXXDestructorDecl 0x56466dcf8a60 <line:85:5, col:21> col:5 used ~LinearIPLookup 'void () noexcept'
| `-Overrides: [ 0x56466dd97250 IPRouteTable::~IPRouteTable 'void () noexcept' ]
|-CXXMethodDecl 0x56466dcf8b90 <line:87:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56466dd7ab68 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56466ddb5858 <col:36, col:63>
|   `-ReturnStmt 0x56466ddb5848 <col:38, col:45>
|     `-ImplicitCastExpr 0x56466ddb5830 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56466ddb5808 <col:45> 'const char [15]' lvalue "LinearIPLookup"
|-CXXMethodDecl 0x56466dcf8c58 <line:88:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x56466dd7ac30 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56466ddb58b8 <col:36, col:52>
|   `-ReturnStmt 0x56466ddb58a8 <col:38, col:45>
|     `-ImplicitCastExpr 0x56466ddb5890 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56466ddb5870 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x56466dcf8d20 <line:89:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x56466dd7aff8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56466ddb5918 <col:36, col:51>
|   `-ReturnStmt 0x56466ddb5908 <col:38, col:45>
|     `-ImplicitCastExpr 0x56466ddb58f0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56466ddb58d0 <col:45> 'const char []' lvalue Var 0x56466dd7b140 'PUSH' 'const char []'
|-CXXMethodDecl 0x56466dcf8e68 <line:91:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x56466dd7c650 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x56466dcf8dd0 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x56466dcf9038 <line:93:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56466dd95550 IPRouteTable::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56466dcf8f28 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56466dcf8fa0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x56466dcf9310 <line:95:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x56466dd94d90 IPRouteTable::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x56466dcf90f8 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x56466dcf9170 <col:35> col:39 'bool'
| |-ParmVarDecl 0x56466dcf91e8 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x56466dcf9260 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x56466dcf9578 <line:96:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x56466dd95040 IPRouteTable::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x56466dcf93e0 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x56466dcf9458 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x56466dcf94d0 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x56466dcf9758 <line:97:5, col:45> col:9 lookup_route 'int (IPAddress, IPAddress &) const'
| |-Overrides: [ 0x56466dd95290 IPRouteTable::lookup_route 'int (IPAddress, IPAddress &) const' ]
| |-ParmVarDecl 0x56466dcf9640 <col:22> col:31 'IPAddress'
| `-ParmVarDecl 0x56466dcf96b8 <col:33, col:42> col:43 'IPAddress &'
|-CXXMethodDecl 0x56466dcf9828 <line:98:5, col:24> col:12 dump_routes 'String ()'
| `-Overrides: [ 0x56466dd95388 IPRouteTable::dump_routes 'String ()' ]
|-CXXMethodDecl 0x56466dcf98e8 <line:100:5, col:18> col:10 check 'bool () const'
|-AccessSpecDecl 0x56466dcf9988 <line:102:3, col:12> col:3 protected
|-FieldDecl 0x56466ddb50e0 <line:104:5, col:21> col:21 _t 'Vector<IPRoute>':'Vector<IPRoute>'
|-FieldDecl 0x56466ddb5148 <line:105:5, col:9> col:9 _zero_route 'int'
|-FieldDecl 0x56466ddb51a8 <line:107:5, col:15> col:15 _last_addr 'IPAddress'
|-FieldDecl 0x56466ddb5210 <line:108:5, col:9> col:9 _last_entry 'int'
|-FieldDecl 0x56466ddb5270 <line:111:5, col:15> col:15 _last_addr2 'IPAddress'
|-FieldDecl 0x56466ddb52d8 <line:112:5, col:9> col:9 _last_entry2 'int'
|-CXXMethodDecl 0x56466ddb5400 <line:115:5, col:33> col:9 lookup_entry 'int (IPAddress) const'
| `-ParmVarDecl 0x56466ddb5338 <col:22> col:31 'IPAddress'
|-CXXConstructorDecl 0x56466ddb54d8 <line:82:7> col:7 implicit LinearIPLookup 'void (const LinearIPLookup &)' inline default_delete noexcept-unevaluated 0x56466ddb54d8
| `-ParmVarDecl 0x56466ddb55e8 <col:7> col:7 'const LinearIPLookup &'
`-CXXMethodDecl 0x56466ddb5688 <col:7> col:7 implicit operator= 'LinearIPLookup &(const LinearIPLookup &)' inline default_delete noexcept-unevaluated 0x56466ddb5688
  `-ParmVarDecl 0x56466ddb5798 <col:7> col:7 'const LinearIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.LinearIPLookup = type <{ %class.IPRouteTable.base, [4 x i8], %class.Vector.13, i32, %class.IPAddress, i32, %class.IPAddress, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.LinearIPLookup.base = type <{ %class.IPRouteTable.base, [4 x i8], %class.Vector.13, i32, %class.IPAddress, i32, %class.IPAddress, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StaticIPLookup
         0 |   class LinearIPLookup (primary base)
         0 |     class IPRouteTable (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       112 |     class Vector<struct IPRoute> _t
       112 |       class vector_memory<class sized_array_memory<20> > vm_
       112 |         vector_memory<class sized_array_memory<20> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |     int _zero_route
       132 |     class IPAddress _last_addr
       132 |       uint32_t _addr
       136 |     int _last_entry
       140 |     class IPAddress _last_addr2
       140 |       uint32_t _addr
       144 |     int _last_entry2
           | [sizeof=152, dsize=148, align=8,
           |  nvsize=148, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddb5930 <../elements/ip/lookupiproute.hh:37:1, line:48:1> line:37:7 class StaticIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'LinearIPLookup'
|-CXXRecordDecl 0x56466ddb5a88 <col:1, col:7> col:7 implicit referenced class StaticIPLookup
|-AccessSpecDecl 0x56466ddb5b18 <col:48, col:54> col:48 public
|-CXXConstructorDecl 0x56466ddb5ba0 <line:39:5, col:20> col:5 StaticIPLookup 'void ()'
|-CXXDestructorDecl 0x56466ddb5c90 <line:40:5, col:21> col:5 ~StaticIPLookup 'void ()' noexcept-unevaluated 0x56466ddb5c90
| `-Overrides: [ 0x56466dcf8a60 LinearIPLookup::~LinearIPLookup 'void () noexcept' ]
|-CXXMethodDecl 0x56466ddb5dc0 <line:42:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56466dcf8b90 LinearIPLookup::class_name 'const char *() const' ]
| `-CompoundStmt 0x56466ddb6818 <col:36, col:63>
|   `-ReturnStmt 0x56466ddb6808 <col:38, col:45>
|     `-ImplicitCastExpr 0x56466ddb67f0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56466ddb67c8 <col:45> 'const char [15]' lvalue "StaticIPLookup"
|-CXXMethodDecl 0x56466ddb5e80 <line:43:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x56466dd94a80 IPRouteTable::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56466ddb6148 <line:45:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x56466dcf9310 LinearIPLookup::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x56466ddb5f30 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x56466ddb5fa8 <col:35> col:39 'bool'
| |-ParmVarDecl 0x56466ddb6020 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x56466ddb6098 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x56466ddb63b0 <line:46:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x56466dcf9578 LinearIPLookup::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x56466ddb6218 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x56466ddb6290 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x56466ddb6308 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXConstructorDecl 0x56466ddb6498 <line:37:7> col:7 implicit StaticIPLookup 'void (const StaticIPLookup &)' inline default_delete noexcept-unevaluated 0x56466ddb6498
| `-ParmVarDecl 0x56466ddb65a8 <col:7> col:7 'const StaticIPLookup &'
`-CXXMethodDecl 0x56466ddb6648 <col:7> col:7 implicit operator= 'StaticIPLookup &(const StaticIPLookup &)' inline default_delete noexcept-unevaluated 0x56466ddb6648
  `-ParmVarDecl 0x56466ddb6758 <col:7> col:7 'const StaticIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.StaticIPLookup = type { %class.LinearIPLookup.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.StaticIPLookup.base = type { %class.LinearIPLookup.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd91e18 <../elements/ip/iproutetable.hh:163:1, line:186:1> line:163:8 referenced struct IPRoute definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56466dd91f38 <col:1, col:8> col:8 implicit referenced struct IPRoute
|-FieldDecl 0x56466dd91fd8 <line:164:5, col:15> col:15 referenced addr 'IPAddress'
|-FieldDecl 0x56466dd92038 <line:165:5, col:15> col:15 referenced mask 'IPAddress'
|-FieldDecl 0x56466dd92098 <line:166:5, col:15> col:15 referenced gw 'IPAddress'
|-FieldDecl 0x56466dd920f8 <line:167:5, col:13> col:13 referenced port 'int32_t':'int'
|-FieldDecl 0x56466dd92158 <line:168:5, col:13> col:13 extra 'int32_t':'int'
|-CXXConstructorDecl 0x56466dd92210 <line:170:5, col:28> col:5 IPRoute 'void ()'
| |-CXXCtorInitializer Field 0x56466dd91fd8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x56466dd93340 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56466dd92038 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x56466dd93390 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56466dd92098 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x56466dd933e0 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56466dd920f8 'port' 'int32_t':'int'
| | `-UnaryOperator 0x56466dd932e0 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x56466dd932c0 <col:23> 'int' 1
| `-CompoundStmt 0x56466dd93450 <col:26, col:28>
|-CXXConstructorDecl 0x56466dd92528 <line:171:5, line:172:42> line:171:5 IPRoute 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x56466dd922c8 <col:13, col:23> col:23 used a 'IPAddress'
| |-ParmVarDecl 0x56466dd92340 <col:26, col:36> col:36 used m 'IPAddress'
| |-ParmVarDecl 0x56466dd923b8 <col:39, col:49> col:49 used g 'IPAddress'
| |-ParmVarDecl 0x56466dd92438 <col:52, col:56> col:56 used p 'int'
| |-CXXCtorInitializer Field 0x56466dd91fd8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x56466dd935b0 <line:172:7, col:13> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56466dd934a0 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56466dd93460 <col:12> 'IPAddress' lvalue ParmVar 0x56466dd922c8 'a' 'IPAddress'
| |-CXXCtorInitializer Field 0x56466dd92038 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x56466dd93660 <col:16, col:22> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56466dd93648 <col:21> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56466dd93608 <col:21> 'IPAddress' lvalue ParmVar 0x56466dd92340 'm' 'IPAddress'
| |-CXXCtorInitializer Field 0x56466dd92098 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x56466dd93710 <col:25, col:29> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56466dd936f8 <col:28> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56466dd936b8 <col:28> 'IPAddress' lvalue ParmVar 0x56466dd923b8 'g' 'IPAddress'
| |-CXXCtorInitializer Field 0x56466dd920f8 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x56466dd937a8 <col:37> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x56466dd93768 <col:37> 'int' lvalue ParmVar 0x56466dd92438 'p' 'int'
| `-CompoundStmt 0x56466dd93808 <col:40, col:42>
|-CXXMethodDecl 0x56466dd92638 <line:174:5, col:69> col:17 real 'bool () const' inline
| `-CompoundStmt 0x56466dd93928 <col:30, col:69>
|   `-ReturnStmt 0x56466dd93918 <col:32, col:57>
|     `-BinaryOperator 0x56466dd938f8 <col:39, col:57> 'bool' '>'
|       |-ImplicitCastExpr 0x56466dd938e0 <col:39> 'int32_t':'int' <LValueToRValue>
|       | `-MemberExpr 0x56466dd93828 <col:39> 'const int32_t':'const int' lvalue ->port 0x56466dd920f8
|       |   `-CXXThisExpr 0x56466dd93818 <col:39> 'const IPRoute *' implicit this
|       `-CStyleCastExpr 0x56466dd938b8 <col:46, col:57> 'int32_t':'int' <NoOp>
|         `-ImplicitCastExpr 0x56466dd938a0 <col:56, col:57> 'int32_t':'int' <IntegralCast> part_of_explicit_cast
|           `-UnaryOperator 0x56466dd93878 <col:56, col:57> 'unsigned int' prefix '-'
|             `-IntegerLiteral 0x56466dd93858 <col:57> 'unsigned int' 2147483648
|-CXXMethodDecl 0x56466dd926f8 <line:175:5, col:76> col:17 kill 'void ()' inline
| `-CompoundStmt 0x56466dd94150 <col:24, col:76>
|   |-ExprWithCleanups 0x56466dd93f58 <col:26, col:33> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x56466dd93f20 <col:26, col:33> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x56466dd93f08 <col:31> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56466dd93cf8 <col:31> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x56466dd93b18 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x56466dd93950 <col:26> 'IPAddress' lvalue ->addr 0x56466dd91fd8
|   |   | `-CXXThisExpr 0x56466dd93940 <col:26> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x56466dd93ce0 <col:33> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x56466dd93cb0 <col:33> 'IPAddress' 'void (unsigned int)'
|   |       `-ImplicitCastExpr 0x56466dd93c98 <col:33> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x56466dd93980 <col:33> 'int' 0
|   |-ExprWithCleanups 0x56466dd94088 <col:36, col:43> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x56466dd94050 <col:36, col:43> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x56466dd94038 <col:41> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56466dd94018 <col:41> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x56466dd93b18 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x56466dd93f80 <col:36> 'IPAddress' lvalue ->mask 0x56466dd92038
|   |   | `-CXXThisExpr 0x56466dd93f70 <col:36> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x56466dd94000 <col:43> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x56466dd93fd0 <col:43> 'IPAddress' 'void (unsigned int)'
|   |       `-IntegerLiteral 0x56466dd93fb0 <col:43> 'unsigned int' 4294967295
|   `-BinaryOperator 0x56466dd94130 <col:56, col:64> 'int32_t':'int' lvalue '='
|     |-MemberExpr 0x56466dd940b0 <col:56> 'int32_t':'int' lvalue ->port 0x56466dd920f8
|     | `-CXXThisExpr 0x56466dd940a0 <col:56> 'IPRoute *' implicit this
|     `-ImplicitCastExpr 0x56466dd94118 <col:63, col:64> 'int32_t':'int' <IntegralCast>
|       `-UnaryOperator 0x56466dd94100 <col:63, col:64> 'unsigned int' prefix '-'
|         `-IntegerLiteral 0x56466dd940e0 <col:64> 'unsigned int' 2147483648
|-CXXMethodDecl 0x56466dd92838 <line:176:5, col:39> col:17 contains 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56466dd927a8 <col:26, col:36> col:36 a 'IPAddress'
|-CXXMethodDecl 0x56466dd929d8 <line:177:5, col:44> col:17 contains 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x56466dd92918 <col:26, col:41> col:41 r 'const IPRoute &'
|-CXXMethodDecl 0x56466dd92b20 <line:178:5, col:47> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56466dd92a90 <col:34, col:44> col:44 m 'IPAddress'
|-CXXMethodDecl 0x56466dd92c68 <line:179:5, col:52> col:17 mask_as_specific 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x56466dd92bd8 <col:34, col:49> col:49 r 'const IPRoute &'
|-CXXMethodDecl 0x56466dd92db0 <line:180:5, col:41> col:17 match 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x56466dd92d20 <col:23, col:38> col:38 r 'const IPRoute &'
|-CXXMethodDecl 0x56466dd92e80 <line:181:5, col:64> col:9 prefix_len 'int () const'
| `-CompoundStmt 0x56466dd94218 <col:28, col:64>
|   `-ReturnStmt 0x56466dd94208 <col:30, col:61>
|     `-CXXMemberCallExpr 0x56466dd941e8 <col:37, col:61> 'int'
|       `-MemberExpr 0x56466dd941b8 <col:37, col:42> '<bound member function type>' .mask_to_prefix_len 0x56466db7ce50
|         `-MemberExpr 0x56466dd94188 <col:37> 'const IPAddress' lvalue ->mask 0x56466dd92038
|           `-CXXThisExpr 0x56466dd94178 <col:37> 'const IPRoute *' implicit this
|-CXXMethodDecl 0x56466dd93078 <line:183:5, col:51> col:18 used unparse 'StringAccum &(StringAccum &, bool) const'
| |-ParmVarDecl 0x56466dd92f30 <col:26, col:37> col:38 'StringAccum &'
| `-ParmVarDecl 0x56466dd92fa8 <col:40, col:45> col:45 tabs 'bool'
|-CXXMethodDecl 0x56466dd93148 <line:184:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56466dd93208 <line:185:5, col:72> col:12 unparse_addr 'String () const'
| `-CompoundStmt 0x56466dd943d0 <col:33, col:72>
|   `-ReturnStmt 0x56466dd943c0 <col:35, col:69>
|     `-ExprWithCleanups 0x56466dd943a8 <col:42, col:69> 'String'
|       `-CXXConstructExpr 0x56466dd94378 <col:42, col:69> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56466dd94360 <col:42, col:69> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56466dd94340 <col:42, col:69> 'String' (CXXTemporary 0x56466dd94340)
|             `-CXXMemberCallExpr 0x56466dd942e0 <col:42, col:69> 'String'
|               |-MemberExpr 0x56466dd94270 <col:42, col:47> '<bound member function type>' .unparse_with_mask 0x56466db7da48
|               | `-MemberExpr 0x56466dd94240 <col:42> 'const IPAddress' lvalue ->addr 0x56466dd91fd8
|               |   `-CXXThisExpr 0x56466dd94230 <col:42> 'const IPRoute *' implicit this
|               `-CXXConstructExpr 0x56466dd94308 <col:65> 'IPAddress' 'void (const IPAddress &) noexcept'
|                 `-MemberExpr 0x56466dd942b0 <col:65> 'const IPAddress' lvalue ->mask 0x56466dd92038
|                   `-CXXThisExpr 0x56466dd942a0 <col:65> 'const IPRoute *' implicit this
|-CXXConstructorDecl 0x56466ddd2b70 <line:163:8> col:8 implicit constexpr IPRoute 'void (const IPRoute &)' inline default trivial noexcept-unevaluated 0x56466ddd2b70
| `-ParmVarDecl 0x56466ddd2c58 <col:8> col:8 'const IPRoute &'
`-CXXConstructorDecl 0x56466ddd2cc8 <col:8> col:8 implicit constexpr IPRoute 'void (IPRoute &&)' inline default trivial noexcept-unevaluated 0x56466ddd2cc8
  `-ParmVarDecl 0x56466ddd2dd8 <col:8> col:8 'IPRoute &&'

Layout: <CGRecordLayout
  LLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  NonVirtualBaseLLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd51ac8 prev 0x56466dd46cd0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466dd51bc0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56466dd51cb0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56466dd51dd8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56466dd51f58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56466dd520d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56466dd52258 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56466dd63088 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56466dd638f8 <col:11>
|-CXXDestructorDecl 0x56466dd63160 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56466dd63298 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56466dd63298
| `-ParmVarDecl 0x56466dd633a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56466dd63448 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56466dd63448
| `-ParmVarDecl 0x56466dd63558 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56466dd66318 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466dd66428 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56466dd666a8 <col:11>
|   `-ReturnStmt 0x56466dd66698 <col:11>
|     `-UnaryOperator 0x56466dd66680 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56466dd66670 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56466dd66498 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56466dd66498
  `-ParmVarDecl 0x56466dd665a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd522c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466dd523d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56466dd52478 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56466dd524e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56466dd52548 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56466dd525b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56466dd52610 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56466dd526d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56466dd52730 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56466dd52790 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56466dd62f98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56466dd52478 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56466dd63908 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56466dd63960 <col:12>
|-CXXConstructorDecl 0x56466dd635c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56466dd635c8
| `-ParmVarDecl 0x56466dd636d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56466dd63778 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56466dd63778
| `-ParmVarDecl 0x56466dd63888 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56466dd65a00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd403e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466dd404f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56466dd40588 <col:16, col:22> col:16 public
|-EnumDecl 0x56466dd405b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56466dd406b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56466dd40790 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd40690 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56466dd40670 <col:21> 'int' 28
| `-EnumConstantDecl 0x56466dd40740 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56466dd407a8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd40720 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56466dd40700 <col:22> 'int' 64
|-CXXMethodDecl 0x56466dd40ae8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56466dd407d0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466dd40850 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56466dd408c8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466dd40940 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56466dd40ba8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56466dd40da8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56466dd40c20 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56466dd40c98 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56466dd40e58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56466dd40fb8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56466dd40ec8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56466dd41060 <col:72> warn_unused_result ""
|-TypedefDecl 0x56466dd413c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56466dd41350 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56466dd412f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56466dd412b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56466d8154e0 'void'
|       |-PointerType 0x56466dac0780 'unsigned char *'
|       | `-BuiltinType 0x56466d8155e0 'unsigned char'
|       |-TypedefType 0x56466d8bcb30 'size_t' sugar
|       | |-Typedef 0x56466d885be0 'size_t'
|       | `-BuiltinType 0x56466d815640 'unsigned long'
|       `-PointerType 0x56466d815ce0 'void *'
|         `-BuiltinType 0x56466d8154e0 'void'
|-CXXMethodDecl 0x56466dd41838 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56466dd41430 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56466dd414a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466dd41540 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56466dd415c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56466dd5bf30 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56466dd5bf18 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56466dd5bee0 <col:58> 'int' 0
| |-ParmVarDecl 0x56466dd41640 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56466dd5bf58 <col:76> 'int' 0
| |-ParmVarDecl 0x56466dd416c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56466dd5bf78 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56466dd41908 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56466dd41988 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56466dd41a48 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56466dd41ae8 <col:20>
| `-OptimizeNoneAttr 0x56466dd41b40 <col:30>
|-CXXMethodDecl 0x56466dd41bb8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56466dd41c58 <col:20>
| `-OptimizeNoneAttr 0x56466dd41cb0 <col:30>
|-CXXMethodDecl 0x56466dd41d28 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56466dd41dc8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56466dd41e78 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56466dd41f18 <col:20>
| |-OptimizeNoneAttr 0x56466dd41f70 <col:30>
| `-WarnUnusedResultAttr 0x56466dd41f98 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56466dd41ff0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56466dd42090 <col:20>
| `-OptimizeNoneAttr 0x56466dd420e8 <col:30>
|-CXXMethodDecl 0x56466dd42138 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56466dd421d8 <col:20>
| `-OptimizeNoneAttr 0x56466dd42230 <col:30>
|-CXXMethodDecl 0x56466dd42278 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56466dd42318 <col:20>
| `-OptimizeNoneAttr 0x56466dd42370 <col:30>
|-CXXMethodDecl 0x56466dd423b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd42478 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd42540 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56466dd42608 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56466dd426c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd427e8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56466dd5c040 <col:54, line:99:5>
|   `-ReturnStmt 0x56466dd5c030 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56466dd5c018 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56466dd5bfe8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56466dd52ac8
|         `-CXXThisExpr 0x56466dd5bfd8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56466dd42988 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56466dd42898 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56466dd5c0f0 <col:67, line:103:5>
|   `-BinaryOperator 0x56466dd5c0d0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56466dd5c068 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56466dd52ac8
|     | `-CXXThisExpr 0x56466dd5c058 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56466dd5c0b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd5c098 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56466dd42898 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56466dd42a80 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56466dd5c170 <col:33, line:107:5>
|   `-ReturnStmt 0x56466dd5c160 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56466dd5c148 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56466dd5c118 <col:16> 'void *' lvalue ->_destructor_argument 0x56466dd52b30
|         `-CXXThisExpr 0x56466dd5c108 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56466dd42b40 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56466dd5c7a0 <col:25, line:113:5>
|   |-ParenExpr 0x56466dd5c4e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56466dd5c4b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5c228 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56466dd5c200 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56466dd5c1c8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56466dd5c198 <col:24> '<bound member function type>' ->shared 0x56466dd41bb8
|   |   |       `-ImplicitCastExpr 0x56466dd5c1e8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56466dd5c188 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56466dd5c288 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5c268 <col:42> 'int' 0
|   |   `-CallExpr 0x56466dd5c418 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5c400 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5c3e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5c458 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5c2f8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56466dd5c470 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5c320 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5c488 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5c358 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56466dd5c4a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5c3c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5c3b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5c378 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56466dd5c6e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56466dd5c518 <col:2> 'unsigned char *' lvalue ->_head 0x56466dd528d0
|   | | `-CXXThisExpr 0x56466dd5c508 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56466dd5c6d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56466dd5c6b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56466dd5c558 <col:10> 'unsigned char *' lvalue ->_data 0x56466dd52938
|   |     | `-CXXThisExpr 0x56466dd5c548 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56466dd5c698 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56466dd5c678 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56466dd5c598 <col:18> 'unsigned char *' lvalue ->_tail 0x56466dd529a0
|   |         | `-CXXThisExpr 0x56466dd5c588 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56466dd5c660 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56466dd5c640 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56466dd5c5d8 <col:26> 'unsigned char *' lvalue ->_end 0x56466dd52a08
|   |             | `-CXXThisExpr 0x56466dd5c5c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56466dd5c628 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56466dd5c608 <col:33> 'int' 0
|   `-BinaryOperator 0x56466dd5c780 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56466dd5c718 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56466dd52ac8
|     | `-CXXThisExpr 0x56466dd5c708 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56466dd5c768 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56466dd5c748 <col:16> 'int' 0
|-CXXMethodDecl 0x56466dd42c80 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56466dd42bf0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd42d28 <col:20>
| |-OptimizeNoneAttr 0x56466dd42d80 <col:30>
| `-WarnUnusedResultAttr 0x56466dd42da8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56466dd42e78 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56466dd42de8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd42f20 <col:20>
| |-OptimizeNoneAttr 0x56466dd42f78 <col:30>
| `-WarnUnusedResultAttr 0x56466dd42fa0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56466dd430d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56466dd42fe0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56466dd43180 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56466dd43280 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56466dd431f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd43328 <col:20>
| `-OptimizeNoneAttr 0x56466dd43380 <col:30>
|-CXXMethodDecl 0x56466dd43448 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56466dd433b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56466dd434f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56466dd435f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56466dd43560 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56466dd43698 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56466dd43798 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56466dd43708 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd43840 <col:20>
| `-OptimizeNoneAttr 0x56466dd43898 <col:30>
|-CXXMethodDecl 0x56466dd43a28 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56466dd438d8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56466dd43950 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56466dd5bf98 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56466dd43ad8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56466dd43cd8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56466dd43b50 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56466dd43bc8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd43ee8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56466dd43d98 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56466dd43e10 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd440f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56466dd43fa8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56466dd44028 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56466dd5bfa8 <col:39> 'int' 0
|-CXXMethodDecl 0x56466dd441c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56466dd44290 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56466dd44358 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56466dd44418 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd444e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56466dd44628 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56466dd44598 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56466dd447f8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56466dd446e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56466dd44760 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd448c8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56466dd44988 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56466dd44a28 <col:20>
| `-OptimizeNoneAttr 0x56466dd44a80 <col:30>
|-CXXMethodDecl 0x56466dd44ad0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56466dd44b70 <col:20>
| `-OptimizeNoneAttr 0x56466dd44bc8 <col:30>
|-CXXMethodDecl 0x56466dd44c18 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56466dd44cd8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd44da0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56466dd44e40 <col:20>
| `-OptimizeNoneAttr 0x56466dd44e98 <col:30>
|-CXXMethodDecl 0x56466dd44fe8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56466dd44ed8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56466dd44f50 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd45138 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56466dd450a8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd45210 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56466dd452d0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56466dd45370 <col:20>
| `-OptimizeNoneAttr 0x56466dd453c8 <col:30>
|-CXXMethodDecl 0x56466dd45418 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56466dd454b8 <col:20>
| `-OptimizeNoneAttr 0x56466dd45510 <col:30>
|-CXXMethodDecl 0x56466dd45560 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56466dd45628 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56466dd456c8 <col:20>
| `-OptimizeNoneAttr 0x56466dd45720 <col:30>
|-CXXMethodDecl 0x56466dd45768 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56466dd45888 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56466dd459f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56466dd45938 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56466dd45ae8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56466dd45b88 <col:20>
| `-OptimizeNoneAttr 0x56466dd45be0 <col:30>
|-CXXMethodDecl 0x56466dd45c30 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56466dd45cf0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd45f28 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56466dd45da0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56466dd45e18 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd45fd8 <col:20>
| `-OptimizeNoneAttr 0x56466dd46030 <col:30>
|-CXXMethodDecl 0x56466dd460d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56466dd46178 <col:20>
| `-OptimizeNoneAttr 0x56466dd461d0 <col:30>
|-CXXMethodDecl 0x56466dd46220 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56466dd462c0 <col:20>
| `-OptimizeNoneAttr 0x56466dd46318 <col:30>
|-CXXMethodDecl 0x56466dd46360 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56466dd46400 <col:20>
| `-OptimizeNoneAttr 0x56466dd46458 <col:30>
|-CXXMethodDecl 0x56466dd46558 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56466dd46490 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56466dd46600 <col:20>
| `-OptimizeNoneAttr 0x56466dd46658 <col:30>
|-CXXMethodDecl 0x56466dd46818 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56466dd46690 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56466dd46708 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd468c8 <col:20>
| `-OptimizeNoneAttr 0x56466dd46920 <col:30>
|-CXXMethodDecl 0x56466dd469c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56466dd46ae8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56466dd46c08 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56466dd46ca8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56466dd46cd0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56466dd46df8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56466dd46e98 <col:20>
| `-OptimizeNoneAttr 0x56466dd46ef0 <col:30>
|-CXXMethodDecl 0x56466dd46f98 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56466dd47038 <col:20>
| `-OptimizeNoneAttr 0x56466dd47090 <col:30>
|-AccessSpecDecl 0x56466dd470b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56466dd470e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56466dd471e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56466dd47230 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd471c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56466dd471a0 <col:14> 'int' 48
|-CXXMethodDecl 0x56466dd47298 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56466dd47338 <col:20>
| `-OptimizeNoneAttr 0x56466dd47390 <col:30>
|-CXXMethodDecl 0x56466dd47408 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56466dd474a8 <col:20>
| `-OptimizeNoneAttr 0x56466dd47500 <col:30>
|-CXXMethodDecl 0x56466dd475c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56466dd47538 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56466dd47768 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56466dd47908 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56466dd47818 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56466dd479b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56466dd47ab0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56466dd47e60 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd47a90 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd47a70 <col:9> 'int' 0
| |-EnumConstantDecl 0x56466dd47b40 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56466dd47e78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd47b20 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56466dd47b00 <col:14> 'int' 1
| |-EnumConstantDecl 0x56466dd47bd0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56466dd47e90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd47bb0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56466dd47b90 <col:14> 'int' 2
| |-EnumConstantDecl 0x56466dd47c60 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56466dd47ea8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd47c40 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56466dd47c20 <col:14> 'int' 3
| |-EnumConstantDecl 0x56466dd47cf0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56466dd47ec0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd47cd0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56466dd47cb0 <col:13> 'int' 4
| |-EnumConstantDecl 0x56466dd47d80 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56466dd47ed8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd47d60 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56466dd47d40 <col:13> 'int' 5
| `-EnumConstantDecl 0x56466dd47e10 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56466dd47ef0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd47df0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56466dd47dd0 <col:14> 'int' 6
|-CXXMethodDecl 0x56466dd47f58 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56466dd47ff8 <col:20>
| `-OptimizeNoneAttr 0x56466dd48050 <col:30>
|-CXXMethodDecl 0x56466dd48148 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56466dd48088 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56466dd481f0 <col:20>
| `-OptimizeNoneAttr 0x56466dd48248 <col:30>
|-CXXMethodDecl 0x56466dd482b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56466dd483e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56466dd48558 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56466dd48490 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56466dd48620 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56466dd486e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56466dd48828 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56466dd48798 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56466dd488d0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56466dd489d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56466dd48bd0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd489b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd48990 <col:23> 'int' 0
| |-EnumConstantDecl 0x56466dd48a60 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56466dd48be8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd48a40 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56466dd48a20 <col:45> 'int' 4
| |-EnumConstantDecl 0x56466dd48af0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56466dd48c00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd48ad0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd48ab0 <col:24> 'int' 0
| `-EnumConstantDecl 0x56466dd48b80 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56466dd48c18 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd48b60 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56466dd48b40 <col:47> 'int' 16
|-CXXMethodDecl 0x56466dd48c78 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56466dd48de8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56466dd48d28 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56466dd48e90 <col:20>
| `-OptimizeNoneAttr 0x56466dd48ee8 <col:30>
|-CXXMethodDecl 0x56466dd48f38 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56466dd5c8c0 <col:18, col:36>
|   `-ReturnStmt 0x56466dd5c8b0 <col:20, col:33>
|     `-ImplicitCastExpr 0x56466dd5c898 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56466dd5c878 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56466dd5c848 <col:27> '<bound member function type>' ->xanno 0x56466dd46f98
|           `-CXXThisExpr 0x56466dd5c838 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56466dd49030 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56466dd5c9d0 <col:30, col:48>
|   `-ReturnStmt 0x56466dd5c9c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x56466dd5c9a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56466dd5c988 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56466dd5c958 <col:39> '<bound member function type>' ->xanno 0x56466dd46df8
|           `-CXXThisExpr 0x56466dd5c948 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56466dd49118 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56466dd5cb68 <col:24, col:50>
|   `-ReturnStmt 0x56466dd5cb58 <col:26, col:47>
|     `-UnaryOperator 0x56466dd5cb40 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56466dd5cb20 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56466dd5cb08 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56466dd5cab8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56466dd51dd8
|         |   `-CXXMemberCallExpr 0x56466dd5ca98 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56466dd5ca68 <col:34> '<bound member function type>' ->xanno 0x56466dd46f98
|         |       `-CXXThisExpr 0x56466dd5ca58 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56466dd5cae8 <col:46> 'int' 0
|-CXXMethodDecl 0x56466dd49220 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56466dd5cd38 <col:36, col:62>
|   `-ReturnStmt 0x56466dd5cd28 <col:38, col:59>
|     `-UnaryOperator 0x56466dd5cd10 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56466dd5ccf0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56466dd5ccd8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56466dd5cc50 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56466dd51dd8
|         |   `-CXXMemberCallExpr 0x56466dd5cc30 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56466dd5cc00 <col:46> '<bound member function type>' ->xanno 0x56466dd46df8
|         |       `-CXXThisExpr 0x56466dd5cbf0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56466dd5cc80 <col:58> 'int' 0
|-CXXMethodDecl 0x56466dd49338 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56466dd5ced0 <col:26, col:53>
|   `-ReturnStmt 0x56466dd5cec0 <col:28, col:50>
|     `-UnaryOperator 0x56466dd5cea8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56466dd5ce88 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56466dd5ce70 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56466dd5ce20 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56466dd520d8
|         |   `-CXXMemberCallExpr 0x56466dd5ce00 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56466dd5cdd0 <col:36> '<bound member function type>' ->xanno 0x56466dd46f98
|         |       `-CXXThisExpr 0x56466dd5cdc0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56466dd5ce50 <col:49> 'int' 0
|-CXXMethodDecl 0x56466dd49458 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56466dd5d0a8 <col:38, col:65>
|   `-ReturnStmt 0x56466dd5d098 <col:40, col:62>
|     `-UnaryOperator 0x56466dd5d080 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56466dd5d060 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56466dd5d048 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56466dd5cfb8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56466dd520d8
|         |   `-CXXMemberCallExpr 0x56466dd5cf98 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56466dd5cf68 <col:48> '<bound member function type>' ->xanno 0x56466dd46df8
|         |       `-CXXThisExpr 0x56466dd5cf58 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56466dd5cfe8 <col:61> 'int' 0
|-CXXMethodDecl 0x56466dd49608 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56466dd49510 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56466dd5d778 <col:34, line:463:5>
|   |-ParenExpr 0x56466dd5d5c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56466dd5d590 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5d1f8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5d1c8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5d118 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5d100 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5d0c0 <col:23> 'int' lvalue ParmVar 0x56466dd49510 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5d0e0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5d1a8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5d178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5d138 <col:33> 'int' lvalue ParmVar 0x56466dd49510 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56466dd5d190 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56466dd5d158 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56466dd5d258 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5d238 <col:56> 'int' 0
|   |   `-CallExpr 0x56466dd5d4f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5d4d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5d4b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5d530 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5d348 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56466dd5d548 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5d378 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5d560 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5d3b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56466dd5d578 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5d4a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5d488 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5d448 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56466dd5d768 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56466dd5d750 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56466dd5d730 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56466dd5d700 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56466dd5d6b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56466dd51dd8
|         |   `-CXXMemberCallExpr 0x56466dd5d690 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56466dd5d660 <col:9> '<bound member function type>' ->xanno 0x56466dd46df8
|         |       `-CXXThisExpr 0x56466dd5d650 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56466dd5d718 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56466dd5d6e0 <col:21> 'int' lvalue ParmVar 0x56466dd49510 'i' 'int'
|-CXXMethodDecl 0x56466dd49858 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56466dd496c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56466dd49740 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56466dd5de08 <col:40, line:472:5>
|   |-ParenExpr 0x56466dd5dc20 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56466dd5dbf0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5d8d0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5d8a0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5d7f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5d7d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5d798 <col:23> 'int' lvalue ParmVar 0x56466dd496c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5d7b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5d880 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5d850 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5d810 <col:33> 'int' lvalue ParmVar 0x56466dd496c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56466dd5d868 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56466dd5d830 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56466dd5d930 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5d910 <col:56> 'int' 0
|   |   `-CallExpr 0x56466dd5db50 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5db38 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5db18 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5db90 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5d9a0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56466dd5dba8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5d9d0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5dbc0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5da08 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56466dd5dbd8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5db00 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5dae8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5daa8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56466dd5dde8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56466dd5dd90 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56466dd5dd60 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56466dd5dd10 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56466dd51dd8
|     | |   `-CXXMemberCallExpr 0x56466dd5dcf0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56466dd5dcc0 <col:2> '<bound member function type>' ->xanno 0x56466dd46f98
|     | |       `-CXXThisExpr 0x56466dd5dcb0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56466dd5dd78 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56466dd5dd40 <col:14> 'int' lvalue ParmVar 0x56466dd496c8 'i' 'int'
|     `-ImplicitCastExpr 0x56466dd5ddd0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd5ddb0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56466dd49740 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56466dd49a18 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56466dd49920 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56466dd5e588 <col:36, line:485:5>
|   |-ParenExpr 0x56466dd5e2f0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd5e2c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5dfa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5df70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5de80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5de68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5de28 <col:23> 'int' lvalue ParmVar 0x56466dd49920 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5de48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5df50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5df38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5dea0 <col:33> 'int' lvalue ParmVar 0x56466dd49920 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd5df18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd5df00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd5dec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd5dee0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56466dd5e000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5dfe0 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd5e220 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5e208 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5e1e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5e260 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5e070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56466dd5e278 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5e0a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5e290 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5e0e0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56466dd5e2a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5e1d0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5e1b8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5e178 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56466dd5e578 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56466dd5e560 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56466dd5e548 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56466dd5e518 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56466dd5e4b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56466dd5e488 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dd5e400 <col:61, col:70> 'char const[48]' lvalue ->c 0x56466dd51cb0
|             |   `-CXXMemberCallExpr 0x56466dd5e3e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56466dd5e3b0 <col:61> '<bound member function type>' ->xanno 0x56466dd46df8
|             |       `-CXXThisExpr 0x56466dd5e3a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56466dd5e4a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56466dd5e430 <col:74> 'int' lvalue ParmVar 0x56466dd49920 'i' 'int'
|-CXXMethodDecl 0x56466dd49c68 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56466dd49ad8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56466dd49b50 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56466dd5ecd8 <col:42, line:500:5>
|   |-ParenExpr 0x56466dd5ea70 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd5ea40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5e720 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5e6f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5e600 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5e5e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5e5a8 <col:23> 'int' lvalue ParmVar 0x56466dd49ad8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5e5c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5e6d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5e6b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5e620 <col:33> 'int' lvalue ParmVar 0x56466dd49ad8 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd5e698 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd5e680 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd5e640 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd5e660 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56466dd5e780 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5e760 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd5e9a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5e988 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5e968 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5e9e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5e7f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56466dd5e9f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5e828 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5ea10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5e860 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56466dd5ea28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5e950 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5e938 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5e8f8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56466dd5ecb8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56466dd5ec68 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56466dd5ec38 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56466dd5ebe0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56466dd5ebb0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56466dd5eb60 <col:48, col:57> 'char [48]' lvalue ->c 0x56466dd51cb0
|     |     |   `-CXXMemberCallExpr 0x56466dd5eb40 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56466dd5eb10 <col:48> '<bound member function type>' ->xanno 0x56466dd46f98
|     |     |       `-CXXThisExpr 0x56466dd5eb00 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56466dd5ebc8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56466dd5eb90 <col:61> 'int' lvalue ParmVar 0x56466dd49ad8 'i' 'int'
|     `-ImplicitCastExpr 0x56466dd5eca0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd5ec80 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56466dd49b50 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56466dd49e28 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56466dd49d30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56466dd5f438 <col:35, line:513:5>
|   |-ParenExpr 0x56466dd5f148 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd5f118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5ee70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5ee40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5ed50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5ed38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5ecf8 <col:23> 'int' lvalue ParmVar 0x56466dd49d30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5ed18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5ee20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5ee08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5ed70 <col:33> 'int' lvalue ParmVar 0x56466dd49d30 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd5ede8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd5edd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd5ed90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd5edb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56466dd5eed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5eeb0 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd5f078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5f060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5f040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5f0b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5ef40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56466dd5f0d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5ef78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5f0e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5efb0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56466dd5f100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5f028 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5f010 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5efd0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56466dd5f428 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56466dd5f410 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56466dd5f3f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56466dd5f3c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56466dd5f340 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56466dd5f310 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dd5f2c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56466dd51cb0
|             |   `-CXXMemberCallExpr 0x56466dd5f2a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56466dd5f270 <col:60> '<bound member function type>' ->xanno 0x56466dd46df8
|             |       `-CXXThisExpr 0x56466dd5f260 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56466dd5f328 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56466dd5f2f0 <col:73> 'int' lvalue ParmVar 0x56466dd49d30 'i' 'int'
|-CXXMethodDecl 0x56466dd4a078 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56466dd49ee8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56466dd49f60 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56466dd5fb58 <col:41, line:528:5>
|   |-ParenExpr 0x56466dd5f8e0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd5f8b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5f5d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5f5a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5f4b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5f498 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5f458 <col:23> 'int' lvalue ParmVar 0x56466dd49ee8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5f478 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5f580 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5f568 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5f4d0 <col:33> 'int' lvalue ParmVar 0x56466dd49ee8 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd5f548 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd5f530 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd5f4f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd5f510 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56466dd5f630 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5f610 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd5f810 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5f7f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5f7d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5f850 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5f6a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56466dd5f868 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5f6d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5f880 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5f710 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56466dd5f898 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5f7c0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5f7a8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5f768 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56466dd5fb38 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56466dd5fae8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56466dd5fab8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56466dd5fa60 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56466dd5fa20 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56466dd5f9d0 <col:47, col:56> 'char [48]' lvalue ->c 0x56466dd51cb0
|     |     |   `-CXXMemberCallExpr 0x56466dd5f9b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56466dd5f980 <col:47> '<bound member function type>' ->xanno 0x56466dd46f98
|     |     |       `-CXXThisExpr 0x56466dd5f970 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56466dd5fa38 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56466dd5fa00 <col:60> 'int' lvalue ParmVar 0x56466dd49ee8 'i' 'int'
|     `-ImplicitCastExpr 0x56466dd5fb20 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd5fb00 <col:65> 'int16_t':'short' lvalue ParmVar 0x56466dd49f60 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56466dd4a238 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56466dd4a140 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56466dd60228 <col:36, line:541:5>
|   |-ParenExpr 0x56466dd5ffc8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd5ff98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd5fcf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd5fcc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd5fbd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd5fbb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd5fb78 <col:23> 'int' lvalue ParmVar 0x56466dd4a140 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd5fb98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd5fca0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd5fc88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd5fbf0 <col:33> 'int' lvalue ParmVar 0x56466dd4a140 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd5fc68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd5fc50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd5fc10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd5fc30 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56466dd5fd50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd5fd30 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd5fef8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd5fee0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd5fec0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd5ff38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5fdc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56466dd5ff50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd5fdf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd5ff68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd5fe30 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56466dd5ff80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd5fea8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd5fe90 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd5fe50 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56466dd60218 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56466dd60200 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56466dd601e8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56466dd601b8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56466dd60160 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56466dd60130 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dd600e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56466dd51cb0
|             |   `-CXXMemberCallExpr 0x56466dd600c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56466dd60090 <col:61> '<bound member function type>' ->xanno 0x56466dd46df8
|             |       `-CXXThisExpr 0x56466dd60080 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56466dd60148 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56466dd60110 <col:74> 'int' lvalue ParmVar 0x56466dd4a140 'i' 'int'
|-CXXMethodDecl 0x56466dd4a408 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56466dd4a2f8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56466dd4a370 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56466dd4a4b8 <col:20>
| `-OptimizeNoneAttr 0x56466dd4a510 <col:30>
|-CXXMethodDecl 0x56466dd4a648 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56466dd4a550 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56466dd608f8 <col:35, line:562:5>
|   |-ParenExpr 0x56466dd60698 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd60668 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd603c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd60390 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd602a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd60288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd60248 <col:23> 'int' lvalue ParmVar 0x56466dd4a550 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd60268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd60370 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd60358 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd602c0 <col:33> 'int' lvalue ParmVar 0x56466dd4a550 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd60338 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd60320 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd602e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd60300 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56466dd60420 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd60400 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd605c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd605b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd60590 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd60608 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd60490 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56466dd60620 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd604c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd60638 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd60500 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56466dd60650 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd60578 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd60560 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd60520 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56466dd608e8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56466dd608d0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56466dd608b8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56466dd60888 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56466dd60830 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56466dd60800 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dd607b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56466dd51cb0
|             |   `-CXXMemberCallExpr 0x56466dd60790 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56466dd60760 <col:60> '<bound member function type>' ->xanno 0x56466dd46df8
|             |       `-CXXThisExpr 0x56466dd60750 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56466dd60818 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56466dd607e0 <col:73> 'int' lvalue ParmVar 0x56466dd4a550 'i' 'int'
|-CXXMethodDecl 0x56466dd4a858 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56466dd4a708 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56466dd4a780 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56466dd60fd8 <col:41, line:577:5>
|   |-ParenExpr 0x56466dd60d68 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd60d38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd60a90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd60a60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd60970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd60958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd60918 <col:23> 'int' lvalue ParmVar 0x56466dd4a708 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd60938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd60a40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd60a28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd60990 <col:33> 'int' lvalue ParmVar 0x56466dd4a708 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd60a08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd609f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd609b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd609d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56466dd60af0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd60ad0 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd60c98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd60c80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd60c60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd60cd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd60b60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56466dd60cf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd60b98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd60d08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd60bd0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56466dd60d20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd60c48 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd60c30 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd60bf0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56466dd60fb8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56466dd60f68 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56466dd60f38 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56466dd60ed8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56466dd60ea8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56466dd60e58 <col:47, col:56> 'char [48]' lvalue ->c 0x56466dd51cb0
|     |     |   `-CXXMemberCallExpr 0x56466dd60e38 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56466dd60e08 <col:47> '<bound member function type>' ->xanno 0x56466dd46f98
|     |     |       `-CXXThisExpr 0x56466dd60df8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56466dd60ec0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56466dd60e88 <col:60> 'int' lvalue ParmVar 0x56466dd4a708 'i' 'int'
|     `-ImplicitCastExpr 0x56466dd60fa0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd60f80 <col:65> 'int32_t':'int' lvalue ParmVar 0x56466dd4a780 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56466dd4aa18 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56466dd4a920 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56466dd61708 <col:36, line:591:5>
|   |-ParenExpr 0x56466dd61448 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd61418 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd61170 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd61140 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd61050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd61038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd60ff8 <col:23> 'int' lvalue ParmVar 0x56466dd4a920 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd61018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd61120 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd61108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd61070 <col:33> 'int' lvalue ParmVar 0x56466dd4a920 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd610e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd610d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd61090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd610b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56466dd611d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd611b0 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd61378 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd61360 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd61340 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd613b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd61240 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56466dd613d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd61278 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd613e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd612b0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56466dd61400 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd61328 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd61310 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd612d0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56466dd616f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56466dd616e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56466dd616c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56466dd61698 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56466dd61610 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56466dd615e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dd61590 <col:61, col:70> 'char const[48]' lvalue ->c 0x56466dd51cb0
|             |   `-CXXMemberCallExpr 0x56466dd61570 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56466dd61540 <col:61> '<bound member function type>' ->xanno 0x56466dd46df8
|             |       `-CXXThisExpr 0x56466dd61530 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56466dd615f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56466dd615c0 <col:74> 'int' lvalue ParmVar 0x56466dd4a920 'i' 'int'
|-CXXMethodDecl 0x56466dd4ac68 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56466dd4aad8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56466dd4ab50 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56466dd61de8 <col:42, line:606:5>
|   |-ParenExpr 0x56466dd61b78 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56466dd61b48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd618a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd61870 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd61780 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd61768 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd61728 <col:23> 'int' lvalue ParmVar 0x56466dd4aad8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd61748 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd61850 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56466dd61838 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd617a0 <col:33> 'int' lvalue ParmVar 0x56466dd4aad8 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd61818 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd61800 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd617c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56466dd617e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56466dd61900 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd618e0 <col:60> 'int' 0
|   |   `-CallExpr 0x56466dd61aa8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56466dd61a90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd61a70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd61ae8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd61970 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56466dd61b00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd619a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd61b18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd619e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56466dd61b30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd61a58 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd61a40 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd61a00 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56466dd61dc8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56466dd61d78 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56466dd61d48 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56466dd61ce8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56466dd61cb8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56466dd61c68 <col:48, col:57> 'char [48]' lvalue ->c 0x56466dd51cb0
|     |     |   `-CXXMemberCallExpr 0x56466dd61c48 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56466dd61c18 <col:48> '<bound member function type>' ->xanno 0x56466dd46f98
|     |     |       `-CXXThisExpr 0x56466dd61c08 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56466dd61cd0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56466dd61c98 <col:61> 'int' lvalue ParmVar 0x56466dd4aad8 'i' 'int'
|     `-ImplicitCastExpr 0x56466dd61db0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd61d90 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56466dd4ab50 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56466dd4ae00 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56466dd4ad30 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56466dd62658 <col:33, line:620:5>
|   |-ParenExpr 0x56466dd623d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56466dd623a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd61ff0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd61fc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd61e60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd61e48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd61e08 <col:23> 'int' lvalue ParmVar 0x56466dd4ad30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd61e28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd61fa0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56466dd61f88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd61e80 <col:33> 'int' lvalue ParmVar 0x56466dd4ad30 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd61f68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd61f50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd61ea0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56466dd61f28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56466dd61f10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56466dd61ed8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56466dd62050 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd62030 <col:79> 'int' 0
|   |   `-CallExpr 0x56466dd62300 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56466dd622e8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd622c8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd62340 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd62138 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56466dd62358 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd62180 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd62370 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd621b8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56466dd62388 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd622b0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd62298 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd62258 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56466dd62648 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56466dd62630 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56466dd62618 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56466dd625e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56466dd62560 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56466dd62530 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56466dd624e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x56466dd51cb0
|             |   `-CXXMemberCallExpr 0x56466dd624c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56466dd62490 <col:67> '<bound member function type>' ->xanno 0x56466dd46df8
|             |       `-CXXThisExpr 0x56466dd62480 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56466dd62548 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56466dd62510 <col:80> 'int' lvalue ParmVar 0x56466dd4ad30 'i' 'int'
|-CXXMethodDecl 0x56466dd4b018 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56466dd4aec0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56466dd4af40 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56466dd62e80 <col:45, line:635:5>
|   |-ParenExpr 0x56466dd62bc8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56466dd62b98 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56466dd62860 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56466dd62830 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56466dd626d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56466dd626b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56466dd62678 <col:23> 'int' lvalue ParmVar 0x56466dd4aec0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56466dd62698 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56466dd62810 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56466dd627f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56466dd626f0 <col:33> 'int' lvalue ParmVar 0x56466dd4aec0 'i' 'int'
|   |   |     `-BinaryOperator 0x56466dd627d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56466dd627c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56466dd62710 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56466dd471e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56466dd62798 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56466dd62780 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56466dd62748 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56466dd628c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56466dd628a0 <col:79> 'int' 0
|   |   `-CallExpr 0x56466dd62af8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56466dd62ae0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd62ac0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56466dd62b38 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd62930 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56466dd62b50 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56466dd62978 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56466dd62b68 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56466dd629b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56466dd62b80 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56466dd62aa8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56466dd62a90 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56466dd62a48 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56466dd62e60 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56466dd62dc8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56466dd62d98 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56466dd62d38 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56466dd62d08 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56466dd62cb8 <col:54, col:63> 'char [48]' lvalue ->c 0x56466dd51cb0
|     |     |   `-CXXMemberCallExpr 0x56466dd62c98 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56466dd62c68 <col:54> '<bound member function type>' ->xanno 0x56466dd46f98
|     |     |       `-CXXThisExpr 0x56466dd62c58 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56466dd62d20 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56466dd62ce8 <col:67> 'int' lvalue ParmVar 0x56466dd4aec0 'i' 'int'
|     `-CXXConstCastExpr 0x56466dd62e30 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56466dd62e18 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56466dd62de0 <col:91> 'const void *' lvalue ParmVar 0x56466dd4af40 'x' 'const void *'
|-CXXMethodDecl 0x56466dd4b0e8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56466dd62f08 <col:34, line:640:5>
|   `-ReturnStmt 0x56466dd62ef8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56466dd62ee0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56466dd62eb0 <col:16> 'Packet *' lvalue ->_data_packet 0x56466dd52868
|         `-CXXThisExpr 0x56466dd62ea0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56466dd4b228 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56466dd4b198 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466dd5bfc8 <col:46> 'bool' true
|-CXXMethodDecl 0x56466dd4b3a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56466dd4b2e0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56466dd4b450 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56466dd4bc00 <line:660:22> "" ""
| |-EnumConstantDecl 0x56466dd4b550 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bc70 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b530 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56466dd4b510 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56466dd406b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56466dd4b5e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bc88 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b5c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56466dd4b5a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56466dd40740 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56466dd4b670 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bca0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b650 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd4b630 <col:21> 'int' 0
| |-EnumConstantDecl 0x56466dd4b700 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bcb8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b6e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56466dd4b6c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x56466dd4b790 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bcd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b770 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56466dd4b750 <col:21> 'int' 16
| |-EnumConstantDecl 0x56466dd4b820 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bce8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b800 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56466dd4b7e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x56466dd4b8b0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bd00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b890 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56466dd4b870 <col:19> 'int' EnumConstant 0x56466dd4b700 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56466dd4b940 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bd18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b920 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56466dd4b900 <col:19> 'int' EnumConstant 0x56466dd4b820 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56466dd4ba10 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bd30 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4b9f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56466dd4b9d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56466dd4b990 <col:23> 'int' EnumConstant 0x56466dd4b940 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56466dd4b9b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56466dd4bae0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56466dd4bd48 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd4bac0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56466dd4baa0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56466dd4ba60 <col:23> 'int' EnumConstant 0x56466dd4b940 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56466dd4ba80 <col:40> 'int' 4
| `-EnumConstantDecl 0x56466dd4bbb0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56466dd4bd60 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd4bb90 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56466dd4bb70 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56466dd4bb30 <col:23> 'int' EnumConstant 0x56466dd4b940 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56466dd4bb50 <col:40> 'int' 8
|-CXXMethodDecl 0x56466dd4bda0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56466dd4be40 <col:68> "" ""
|-CXXMethodDecl 0x56466dd4bed8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56466dd4bf78 <col:45> "" ""
|-CXXMethodDecl 0x56466dd4c010 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56466dd4c0b0 <col:57> "" ""
|-CXXMethodDecl 0x56466dd4c148 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56466dd4c1e8 <col:45> "" ""
|-CXXMethodDecl 0x56466dd4c280 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56466dd4c320 <col:57> "" ""
|-CXXMethodDecl 0x56466dd4c3b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56466dd4c450 <col:51> "" ""
|-CXXMethodDecl 0x56466dd4c4e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56466dd4c580 <col:63> "" ""
|-CXXMethodDecl 0x56466dd4c610 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56466dd4c6b0 <col:53> "" ""
|-CXXMethodDecl 0x56466dd4c740 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56466dd4c7e0 <col:65> "" ""
|-CXXMethodDecl 0x56466dd4c8f8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56466dd4c868 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56466dd4c9a0 <col:61> "" ""
|-CXXMethodDecl 0x56466dd4cb38 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56466dd4ca28 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56466dd4caa0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56466dd4cbe8 <col:67> "" ""
|-CXXMethodDecl 0x56466dd4cd00 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56466dd4cc70 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56466dd4cda8 <col:63> "" ""
|-CXXMethodDecl 0x56466dd4cf40 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56466dd4ce30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56466dd4cea8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56466dd4cff0 <col:69> "" ""
|-CXXMethodDecl 0x56466dd4d108 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56466dd4d078 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56466dd4d1b0 <col:63> "" ""
|-CXXMethodDecl 0x56466dd4f888 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56466dd4f778 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56466dd4f7f0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466dd4f938 <col:69> "" ""
|-CXXMethodDecl 0x56466dd4fa50 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56466dd4f9c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56466dd4faf8 <col:62> "" ""
|-CXXMethodDecl 0x56466dd4fc90 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56466dd4fb80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56466dd4fbf8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56466dd4fd40 <col:68> "" ""
|-CXXMethodDecl 0x56466dd4fe58 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56466dd4fdc8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56466dd4ff00 <col:63> "" ""
|-CXXMethodDecl 0x56466dd50098 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56466dd4ff88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56466dd50000 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56466dd50148 <col:69> "" ""
|-CXXMethodDecl 0x56466dd501d8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56466dd50278 <col:64> "" ""
|-CXXMethodDecl 0x56466dd50308 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56466dd503a8 <col:52> "" ""
|-CXXMethodDecl 0x56466dd50438 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56466dd504d8 <col:67> "" ""
|-CXXMethodDecl 0x56466dd50568 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56466dd50608 <col:55> "" ""
|-CXXMethodDecl 0x56466dd50720 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56466dd50690 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56466dd507c8 <col:58> "" ""
|-CXXMethodDecl 0x56466dd50960 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56466dd50850 <col:33> col:36 'int'
| |-ParmVarDecl 0x56466dd508c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56466dd50a10 <col:62> "" ""
|-CXXMethodDecl 0x56466dd50b28 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56466dd50a98 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56466dd50bd0 <col:58> "" ""
|-CXXMethodDecl 0x56466dd50d68 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56466dd50c58 <col:33> col:36 'int'
| |-ParmVarDecl 0x56466dd50cd0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56466dd50e18 <col:62> "" ""
|-CXXMethodDecl 0x56466dd50f30 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56466dd50ea0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56466dd50fd8 <col:60> "" ""
|-CXXMethodDecl 0x56466dd51170 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56466dd51060 <col:34> col:37 'int'
| |-ParmVarDecl 0x56466dd510d8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56466dd51220 <col:64> "" ""
|-CXXMethodDecl 0x56466dd51338 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56466dd512a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56466dd513e0 <col:58> "" ""
|-CXXMethodDecl 0x56466dd51578 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56466dd51468 <col:33> col:36 'int'
| |-ParmVarDecl 0x56466dd514e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56466dd51628 <col:62> "" ""
|-CXXMethodDecl 0x56466dd51740 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56466dd516b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56466dd517e8 <col:59> "" ""
|-CXXMethodDecl 0x56466dd51980 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56466dd51870 <col:33> col:36 'int'
| |-ParmVarDecl 0x56466dd518e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466dd51a30 <col:63> "" ""
|-AccessSpecDecl 0x56466dd51aa0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56466dd51ac8 prev 0x56466dd46cd0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466dd51bc0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56466dd51cb0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56466dd51dd8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56466dd51f58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56466dd520d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56466dd52258 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56466dd63088 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56466dd638f8 <col:11>
| |-CXXDestructorDecl 0x56466dd63160 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56466dd63298 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56466dd63298
| | `-ParmVarDecl 0x56466dd633a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56466dd63448 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56466dd63448
| | `-ParmVarDecl 0x56466dd63558 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56466dd66318 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56466dd66428 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56466dd666a8 <col:11>
| |   `-ReturnStmt 0x56466dd66698 <col:11>
| |     `-UnaryOperator 0x56466dd66680 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56466dd66670 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56466dd66498 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56466dd66498
|   `-ParmVarDecl 0x56466dd665a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56466dd522c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466dd523d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56466dd52478 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56466dd524e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56466dd52548 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56466dd525b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56466dd52610 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56466dd526d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56466dd52730 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56466dd52790 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56466dd62f98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56466dd52478 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56466dd63908 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56466dd63960 <col:12>
| |-CXXConstructorDecl 0x56466dd635c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56466dd635c8
| | `-ParmVarDecl 0x56466dd636d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56466dd63778 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56466dd63778
| | `-ParmVarDecl 0x56466dd63888 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56466dd65a00 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56466dd52808 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56466dd52868 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56466dd528d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56466dd52938 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56466dd529a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56466dd52a08 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56466dd52a68 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56466dd52ac8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56466dd52b30 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56466dd52bb8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56466dd52808 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56466dd62f30 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56466dd52a68 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56466dd63970 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56466dd639d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x56466dd52d58 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56466dd52c98 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56466dd52e50 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56466dd53038 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56466dd52f40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56466dd53308 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56466dd530f0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56466dd53168 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56466dd531e0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd53528 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56466dd533d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56466dd53450 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56466dd5bb08 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56466dd535e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56466dd53660 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56466dd536d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56466dd5bc60 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56466dd5bbd0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd5bda8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56466dd5bd18 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56466dd5bea0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddfc7b0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466ddfc8c8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x56466ddfc998 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x56466ddfc9f8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x56466ddfca60 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x56466ddfcae8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x56466ddfcd50 <col:16, line:46:5>
|   |-BinaryOperator 0x56466ddfcc98 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x56466ddfcbb8 <col:9> 'TaskLink *' lvalue ->_prev 0x56466ddfc998
|   | | `-CXXThisExpr 0x56466ddfcba8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x56466ddfcc80 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x56466ddfcc60 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x56466ddfcbf8 <col:17> 'TaskLink *' lvalue ->_next 0x56466ddfc9f8
|   |     | `-CXXThisExpr 0x56466ddfcbe8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x56466ddfcc48 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x56466ddfcc28 <col:25> 'int' 0
|   `-BinaryOperator 0x56466ddfcd30 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x56466ddfccc8 <col:9> 'unsigned int' lvalue ->_pass 0x56466ddfca60
|     | `-CXXThisExpr 0x56466ddfccb8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x56466ddfcd18 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56466ddfccf8 <col:17> 'int' 0
|-CXXConstructorDecl 0x56466de6e418 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x56466de6e418
| `-ParmVarDecl 0x56466de6e528 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x56466de6e5c8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x56466de6e5c8
| `-ParmVarDecl 0x56466de6e6d8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x56466de6e8c8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x56466de6e8c8
|-CXXMethodDecl 0x56466de6f0c8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x56466de6f0c8
| `-ParmVarDecl 0x56466de6f1d8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x56466de6f248 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x56466de6f248
  `-ParmVarDecl 0x56466de6f358 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddff2b8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56466ddff3e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x56466ddff448 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x56466ddff4a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x56466de79a58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x56466de79b30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466de79b30
|-CXXConstructorDecl 0x56466de79de8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56466de79de8
| `-ParmVarDecl 0x56466de79ef8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x56466de79f98 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56466de79f98
  `-ParmVarDecl 0x56466de7a0a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddff110 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56466ddff228 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x56466ddff2b8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56466ddff3e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x56466ddff448 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x56466ddff4a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x56466de79a58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x56466de79b30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466de79b30
| |-CXXConstructorDecl 0x56466de79de8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56466de79de8
| | `-ParmVarDecl 0x56466de79ef8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x56466de79f98 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56466de79f98
|   `-ParmVarDecl 0x56466de7a0a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x56466ddff568 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x56466ddff5c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x56466ddff568 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56466ddff3e8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x56466ddff620 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x56466ddff568 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56466ddff448 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x56466ddff678 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x56466ddff568 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56466ddff4a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x56466ddff6d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56466de79968 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56466de7a2c8 <col:11>
|-CXXConstructorDecl 0x56466de79c38 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56466de79c38
| `-ParmVarDecl 0x56466de79d48 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x56466de7a148 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56466de7a148
  `-ParmVarDecl 0x56466de7a258 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd11d60 prev 0x56466dd08ba0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466dd11e58 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56466dd11ef8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56466dd18cc0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56466dd190a8 <col:11>
|-CXXConstructorDecl 0x56466dd18da0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466dd18e88 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56466dd197f0 <col:11>
|-CXXConstructorDecl 0x56466dd18f28 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56466dd19038 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56466dd1b048 <col:11>
|-CXXDestructorDecl 0x56466dd1a358 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56466da20ce8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466da20df8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56466da216c0 <col:11>
|   `-ReturnStmt 0x56466da216b0 <col:11>
|     `-UnaryOperator 0x56466da21698 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56466da21688 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56466da20e68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56466da20f78 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x56466ddfaab0 <col:11>
    `-ReturnStmt 0x56466ddfaaa0 <col:11>
      `-UnaryOperator 0x56466ddfaa88 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56466ddfaa78 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466dd07d58 prev 0x56466dd07a68 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466dd07e50 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56466dd07ee0 <col:19, col:25> col:19 public
|-TypedefDecl 0x56466dd07f18 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56466d96cf20 'int32_t' sugar
|   |-Typedef 0x56466d87e328 'int32_t'
|   `-TypedefType 0x56466d857510 '__int32_t' sugar
|     |-Typedef 0x56466d857128 '__int32_t'
|     `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466dd07f80 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56466d96d0e0 'int64_t' sugar
|   |-Typedef 0x56466d87e390 'int64_t'
|   `-TypedefType 0x56466d857630 '__int64_t' sugar
|     |-Typedef 0x56466d857208 '__int64_t'
|     `-BuiltinType 0x56466d8155a0 'long'
|-EnumDecl 0x56466dd07fd8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56466dd08150 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56466dd08130 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56466dd08108 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56466dd080f0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56466dd080c0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56466dd08248 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56466dd08228 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56466dd08200 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56466dd081e8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56466dd081c0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56466dd081a0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56466dd08298 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56466dd083a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd088f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd08380 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56466dd08360 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56466dd08430 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08908 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd08410 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56466dd083f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56466dd084c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08920 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd084a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56466dd08480 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56466dd08550 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08938 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd08530 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56466dd08510 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56466dd085e0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08950 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd085c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56466dd085a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56466dd08670 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08968 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd08650 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56466dd08630 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56466dd08700 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08980 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd086e0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56466dd086c0 <col:26> 'int' EnumConstant 0x56466dd083a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56466dd087d0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56466dd08998 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd087b0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56466dd08790 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56466dd08750 <col:27> 'int' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56466dd08770 <col:44> 'int' EnumConstant 0x56466dd08670 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56466dd088a0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56466dd089b0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd08880 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56466dd08860 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56466dd08820 <col:27> 'int' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56466dd08840 <col:44> 'int' EnumConstant 0x56466dd08550 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56466dd089c8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56466dd08ad0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56466dd08b20 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd08ab0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56466dd08a90 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56466dd08b48 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56466d96cb50 'uninitialized_type'
|   `-CXXRecord 0x56466d96cab8 'uninitialized_type'
|-CXXRecordDecl 0x56466dd08ba0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56466dd08cb0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd190b8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466dd191d8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56466dd19190 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56466dd19120 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd19110 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56466dd19150 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56466dd191c0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56466dd19170 <col:19> 'int' 0
|-CXXConstructorDecl 0x56466dd08ef8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56466dd08d70 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56466dd08de8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56466dd149f0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466dd149d0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd191f0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466dd19340 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56466dd192c8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56466dd19258 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd19248 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56466dd19310 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56466dd192f8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56466dd19288 <col:16> 'long' lvalue ParmVar 0x56466dd08d70 'sec' 'long'
|     `-ImplicitCastExpr 0x56466dd19328 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd192a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd08de8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56466dd09158 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56466dd08fc8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56466dd09040 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56466dd14a28 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466dd14a08 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd19358 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466dd19490 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56466dd19430 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56466dd193c0 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd193b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56466dd19460 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56466dd193f0 <col:16> 'int' lvalue ParmVar 0x56466dd08fc8 'sec' 'int'
|     `-ImplicitCastExpr 0x56466dd19478 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd19410 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd09040 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56466dd093b8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56466dd09228 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56466dd092a0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56466dd14a60 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466dd14a40 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd194a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466dd195f8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56466dd19580 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56466dd19510 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd19500 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56466dd195c8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56466dd195b0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56466dd19540 <col:16> 'unsigned long' lvalue ParmVar 0x56466dd09228 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56466dd195e0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd19560 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd092a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56466dd0a550 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56466dd09488 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56466dd09500 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56466dd14a98 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466dd14a78 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd19610 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466dd19760 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56466dd196e8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56466dd19678 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd19668 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56466dd19730 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56466dd19718 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56466dd196a8 <col:16> 'unsigned int' lvalue ParmVar 0x56466dd09488 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56466dd19748 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56466dd196c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd09500 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56466dd0a6b0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56466dd0a620 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56466dd0a848 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56466dd0a788 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56466dd0aa78 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56466dd0a980 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56466dd0ac28 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56466dd0ab68 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd19800 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56466dd19778 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56466dd0ab68 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56466dd19860 <col:19, line:214:5>
|-CXXConstructorDecl 0x56466dd0adf8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56466dd0ad38 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd19870 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56466dd19920 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56466dd198f8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56466dd198c8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56466dd0ad38 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56466dd0afe8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56466dd0af60 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56466dd07b00 'Timestamp'
|   | `-CXXRecord 0x56466dd07d58 'Timestamp'
|   `-ParenType 0x56466dd0af00 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56466dd0aed0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56466dd080a0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56466dd07f18 'seconds_type'
|         `-TypedefType 0x56466d96cf20 'int32_t' sugar
|           |-Typedef 0x56466d87e328 'int32_t'
|           `-TypedefType 0x56466d857510 '__int32_t' sugar
|             |-Typedef 0x56466d857128 '__int32_t'
|             `-BuiltinType 0x56466d815580 'int'
|-CXXConversionDecl 0x56466dd0b128 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56466dd0b1f8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x56466dd19a28 <col:37, line:231:5>
|   `-ReturnStmt 0x56466dd19a18 <line:227:9, col:23>
|     `-BinaryOperator 0x56466dd199f8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56466dd199c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56466dd19978 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56466dd11ef8
|       |   `-MemberExpr 0x56466dd19948 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
|       |     `-CXXThisExpr 0x56466dd19938 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56466dd199e0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56466dd199a8 <col:23> 'int' 0
|-CXXMethodDecl 0x56466dd0b2b8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56466dd0b378 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd0b438 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd0b4f8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd0b5b8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56466dd0b728 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56466dd0b668 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56466dd0b870 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56466dd0b7e0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0b938 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56466dd0b9d8 <col:54> "" ""
|-CXXMethodDecl 0x56466dd0ba68 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56466dd0bb08 <col:54> "" ""
|-CXXMethodDecl 0x56466dd0bb98 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56466dd0bc38 <col:54> "" ""
|-CXXMethodDecl 0x56466dd0bd38 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56466dd0be08 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56466dd0bf38 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56466dd0c030 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56466dd0c168 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56466dd19c40 <col:39, line:271:5>
|   `-ReturnStmt 0x56466dd19c30 <line:267:9, col:61>
|     `-CallExpr 0x56466dd19bd0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56466dd19bb8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466dd19a40 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56466dd131d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56466dd19c00 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56466dd19aa0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56466dd11ef8
|       |   `-MemberExpr 0x56466dd19a70 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
|       |     `-CXXThisExpr 0x56466dd19a60 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56466dd19c18 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56466dd19b40 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56466dd19b10 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56466dd19ad0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56466dd19b28 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56466dd19af0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08670 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd0c228 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56466dd19e00 <col:39, line:279:5>
|   `-ReturnStmt 0x56466dd19df0 <line:275:9, col:61>
|     `-CallExpr 0x56466dd19d90 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56466dd19d78 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466dd19c58 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56466dd131d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56466dd19dc0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56466dd19cb8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56466dd11ef8
|       |   `-MemberExpr 0x56466dd19c88 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
|       |     `-CXXThisExpr 0x56466dd19c78 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56466dd19dd8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56466dd19d58 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56466dd19d28 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56466dd19ce8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56466dd19d40 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56466dd19d08 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08550 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd0c2e8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56466dd19f98 <col:39, line:287:5>
|   `-ReturnStmt 0x56466dd19f88 <line:283:9, col:53>
|     `-BinaryOperator 0x56466dd19f68 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56466dd19f38 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56466dd19e58 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56466dd11ef8
|       |   `-MemberExpr 0x56466dd19e28 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
|       |     `-CXXThisExpr 0x56466dd19e18 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56466dd19f50 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56466dd19f18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56466dd19ef8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd19ec8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd19e88 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd083a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd19ee0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd19ea8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd0c3d8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56466dd1b230 <col:40, line:293:5>
|   |-DeclStmt 0x56466dd1a0e0 <line:291:9, col:48>
|   | `-VarDecl 0x56466dd19fc0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56466dd1a0c0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56466dd1a068 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56466dd1a038 <col:22> '<bound member function type>' ->subsec 0x56466dd0b378
|   |     |   `-CXXThisExpr 0x56466dd1a028 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56466dd1a0a8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56466dd1a088 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd087d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56466dd1b220 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56466dd1b208 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd1b1d8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd1b1c0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56466dd1b1a0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56466dd1b170 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56466dd1af08 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56466dd1aef0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56466dd1a0f8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56466dd19fc0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56466dd1b110 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56466dd1b0f8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56466dd1b0c8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56466dd1af20 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56466dd1ae90 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56466dd1ae78 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56466dd1ae28 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56466dd07ca8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56466dd1adc8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56466dd1a128 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56466dd1a118 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56466dd1ae10 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56466dd1adf8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56466dd1a5e8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56466dd1a150 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56466dd1a1e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56466dd1a1b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56466dd1a170 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd087d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56466dd1a1c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56466dd1a190 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56466dd19fc0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56466dd1b140 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56466dd1aed8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56466dd1aec8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56466dd0c498 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56466dd1b788 <col:40, line:302:5>
|   |-DeclStmt 0x56466dd1b380 <line:297:9, col:48>
|   | `-VarDecl 0x56466dd1b260 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56466dd1b360 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56466dd1b308 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56466dd1b2d8 <col:22> '<bound member function type>' ->subsec 0x56466dd0b378
|   |     |   `-CXXThisExpr 0x56466dd1b2c8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56466dd1b348 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56466dd1b328 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd088a0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56466dd1b778 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56466dd1b760 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd1b730 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd1b718 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56466dd1b6f8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56466dd1b6c8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56466dd1b5f0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56466dd1b5d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56466dd1b398 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56466dd1b260 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56466dd1b668 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56466dd1b650 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56466dd1b620 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56466dd1b608 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56466dd1b578 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56466dd1b560 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56466dd1b540 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56466dd07ca8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56466dd1b4e0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56466dd1b3c8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56466dd1b3b8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56466dd1b528 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56466dd1b510 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56466dd1b4a0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56466dd1b3f0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56466dd1b480 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56466dd1b450 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56466dd1b410 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd088a0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56466dd1b468 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56466dd1b430 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56466dd1b260 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56466dd1b698 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56466dd1b5c0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56466dd1b5b0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56466dd0c558 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56466dd1b810 <col:40, line:306:5>
|   `-ReturnStmt 0x56466dd1b800 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56466dd1b7d0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56466dd1b7b8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56466dd1b7a8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56466dd0c6f8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56466dd0c608 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0c8c8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56466dd0c7d0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56466dd0c9b8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56466dd0cb28 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56466dd0ca68 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56466dd1b958 <col:56, line:320:5>
|   `-ReturnStmt 0x56466dd1b948 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56466dd1b930 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd1b900 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd1b8e8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56466dd1b8a8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56466dd1b878 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56466dd1b838 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0ca68 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56466dd1b890 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56466dd1b858 <col:31> 'int' 0
|-CXXMethodDecl 0x56466dd0cd68 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56466dd0cbe0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0cc58 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd1bb28 <col:72, line:326:5>
|   `-ReturnStmt 0x56466dd1bb18 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56466dd1bb00 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd1bad0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd1bab8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56466dd1ba78 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56466dd1ba60 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56466dd1b980 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0cbe0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56466dd1ba20 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56466dd1ba08 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56466dd1b9a0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56466dd11650 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56466dd1ba48 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56466dd1b9c0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd0cc58 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0cf18 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56466dd0ce28 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56466dd1c1f0 <col:56, line:337:5>
|   |-DeclStmt 0x56466dd1be28 <line:329:9, col:51>
|   | `-VarDecl 0x56466dd1bb50 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56466dd1be10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56466dd1bde0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56466dd1bdc8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56466dd1bdb0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56466dd1bd80 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56466dd1bd68 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56466dd1bd50 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56466dd1bc40 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56466dd1bfe0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56466dd1be90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56466dd11ef8
|   | | `-MemberExpr 0x56466dd1be60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56466dd12ea8
|   | |   `-DeclRefExpr 0x56466dd1be40 <col:9> 'Timestamp' lvalue Var 0x56466dd1bb50 't' 'Timestamp'
|   | `-BinaryOperator 0x56466dd1bfc0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56466dd1bf90 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56466dd1bec0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56466dd0ce28 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56466dd1bfa8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56466dd1bf70 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56466dd1bf50 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56466dd1bf20 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56466dd1bee0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56466dd1bf38 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56466dd1bf00 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08670 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56466dd1c1d8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56466dd1c1a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56466dd1c190 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56466dd1c170 <col:16> 'Timestamp' lvalue Var 0x56466dd1bb50 't' 'Timestamp'
|-CXXMethodDecl 0x56466dd0d0e0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56466dd0cfd0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0d048 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd1c3a8 <col:72, line:343:5>
|   `-ReturnStmt 0x56466dd1c398 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56466dd1c380 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd1c350 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd1c338 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56466dd1c2f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56466dd1c2e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56466dd1c228 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0cfd0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56466dd1c2a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56466dd1c288 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56466dd1c248 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56466dd11798 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56466dd1c2c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56466dd1c268 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd0d048 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0d230 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56466dd0d1a0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56466dd1c7f0 <col:56, line:354:5>
|   |-DeclStmt 0x56466dd1c598 <line:346:9, col:51>
|   | `-VarDecl 0x56466dd1c3d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56466dd1c580 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56466dd1c550 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56466dd1c538 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56466dd1c520 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56466dd1c4f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56466dd1c4d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56466dd1c4c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56466dd1c490 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56466dd1c750 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56466dd1c600 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56466dd11ef8
|   | | `-MemberExpr 0x56466dd1c5d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56466dd12ea8
|   | |   `-DeclRefExpr 0x56466dd1c5b0 <col:9> 'Timestamp' lvalue Var 0x56466dd1c3d0 't' 'Timestamp'
|   | `-BinaryOperator 0x56466dd1c730 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56466dd1c700 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56466dd1c630 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56466dd0d1a0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56466dd1c718 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56466dd1c6e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56466dd1c6c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56466dd1c690 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56466dd1c650 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56466dd1c6a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56466dd1c670 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08550 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56466dd1c7d8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56466dd1c7a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56466dd1c790 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56466dd1c770 <col:16> 'Timestamp' lvalue Var 0x56466dd1c3d0 't' 'Timestamp'
|-CXXMethodDecl 0x56466dd0d3f8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56466dd0d2e8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0d360 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd1c9a8 <col:72, line:360:5>
|   `-ReturnStmt 0x56466dd1c998 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56466dd1c980 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd1c950 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd1c938 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56466dd1c8f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56466dd1c8e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56466dd1c828 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0d2e8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56466dd1c8a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56466dd1c888 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56466dd1c848 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56466dd118e0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56466dd1c8c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56466dd1c868 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd0d360 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0d548 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56466dd0d4b8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56466dd29318 <col:56, line:371:5>
|   |-DeclStmt 0x56466dd1cb98 <line:363:9, col:51>
|   | `-VarDecl 0x56466dd1c9d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56466dd1cb80 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56466dd1cb50 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56466dd1cb38 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56466dd1cb20 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56466dd1caf0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56466dd1cad8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56466dd1cac0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56466dd1ca90 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56466dd29278 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56466dd1cc00 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56466dd11ef8
|   | | `-MemberExpr 0x56466dd1cbd0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56466dd12ea8
|   | |   `-DeclRefExpr 0x56466dd1cbb0 <col:9> 'Timestamp' lvalue Var 0x56466dd1c9d0 't' 'Timestamp'
|   | `-CallExpr 0x56466dd29218 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56466dd29200 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56466dd1cc30 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56466dd131d8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56466dd29248 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56466dd1cc50 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56466dd0d4b8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56466dd29260 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56466dd291e0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56466dd291b0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56466dd1cc70 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd083a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56466dd291c8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56466dd1cc90 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56466dd29300 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56466dd292d0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56466dd292b8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56466dd29298 <col:16> 'Timestamp' lvalue Var 0x56466dd1c9d0 't' 'Timestamp'
|-CXXMethodDecl 0x56466dd0d638 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56466dd29458 <col:39, line:377:5>
|   `-ReturnStmt 0x56466dd29448 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56466dd29430 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56466dd29400 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466dd293e8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56466dd293a8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56466dd29350 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56466dd29390 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56466dd29370 <col:29> 'int' 1
|-CXXMethodDecl 0x56466dd0d6f8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56466dd29538 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56466dd294f0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56466dd29480 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd29470 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56466dd294b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56466dd29520 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56466dd294d0 <col:19> 'int' 0
|-CXXMethodDecl 0x56466dd0d8f8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56466dd0d7a8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0d820 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56466dd14ad0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466dd14ab0 <col:60> 'int' 0
| `-CompoundStmt 0x56466dd29730 <col:63, line:395:5>
|   `-BinaryOperator 0x56466dd29710 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56466dd29590 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56466dd11ef8
|     | `-MemberExpr 0x56466dd29560 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
|     |   `-CXXThisExpr 0x56466dd29550 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56466dd296f0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56466dd29680 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56466dd29620 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56466dd29608 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56466dd295f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56466dd295c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0d7a8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56466dd29668 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56466dd29648 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56466dd296d8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56466dd296c0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56466dd296a0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd0d820 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0dac8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56466dd0d9b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0da30 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd29888 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56466dd29840 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56466dd29758 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd29748 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56466dd29870 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56466dd29788 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0d9b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56466dd29800 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56466dd297e8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466dd297a8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56466dd11798 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56466dd29828 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56466dd297c8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd0da30 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0dc98 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56466dd0db88 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0dc00 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd299e0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56466dd29998 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56466dd298b0 <col:9> '<bound member function type>' ->assign 0x56466dd0d8f8
|     | `-CXXThisExpr 0x56466dd298a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56466dd299c8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56466dd298e0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56466dd0db88 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56466dd29958 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56466dd29940 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466dd29900 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56466dd118e0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56466dd29980 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56466dd29920 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd0dc00 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd0de68 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56466dd0dd58 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0ddd0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56466dd14b08 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56466dd14ae8 <col:57> 'int' 0
| `-DeprecatedAttr 0x56466dd0df18 <col:75> "" ""
|-CXXMethodDecl 0x56466dd0e0a8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56466dd0df98 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0e010 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466dd0e158 <col:74> "" ""
|-CXXMethodDecl 0x56466dd0e2e8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56466dd0e1d8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56466dd0e250 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466dd0e398 <col:74> "" ""
|-CXXMethodDecl 0x56466dd0e428 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56466dd0e4c8 <col:42> "" ""
|-CXXMethodDecl 0x56466dd10d00 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56466dd10be0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56466dd10c60 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56466dd10dd0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56466dd10e90 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56466dd10f30 <col:20>
| `-OptimizeNoneAttr 0x56466dd10f88 <col:30>
|-CXXMethodDecl 0x56466dd10fd0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56466dd11090 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56466dd11150 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56466dd11210 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56466dd112d0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56466dd11390 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56466dd11450 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56466dd11510 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56466dd11650 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56466dd115c0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd29b28 <col:58, line:512:5>
|   `-ReturnStmt 0x56466dd29b18 <line:511:9, col:53>
|     `-BinaryOperator 0x56466dd29af8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56466dd29ac8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd299f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd115c0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56466dd29ae0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56466dd29aa8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56466dd29a88 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd29a58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd29a18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd29a70 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd29a38 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08670 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd11798 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56466dd11708 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd29c70 <col:58, line:516:5>
|   `-ReturnStmt 0x56466dd29c60 <line:515:9, col:53>
|     `-BinaryOperator 0x56466dd29c40 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56466dd29c10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd29b40 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd11708 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56466dd29c28 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56466dd29bf0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56466dd29bd0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd29ba0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd29b60 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd29bb8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd29b80 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08550 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd118e0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56466dd11850 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd29db8 <col:58, line:520:5>
|   `-ReturnStmt 0x56466dd29da8 <line:519:9, col:53>
|     `-BinaryOperator 0x56466dd29d88 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56466dd29d58 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd29c88 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd11850 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56466dd29d70 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56466dd29d38 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56466dd29d18 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd29ce8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd29ca8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd083a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd29d00 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd29cc8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd11a28 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56466dd11998 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd29f00 <col:60, line:524:5>
|   `-ReturnStmt 0x56466dd29ef0 <line:523:9, col:55>
|     `-BinaryOperator 0x56466dd29ed0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56466dd29ea0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd29dd0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd11998 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56466dd29eb8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56466dd29e80 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56466dd29e60 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd29e30 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd29df0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd29e48 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd29e10 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08670 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd11b70 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56466dd11ae0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd2a048 <col:60, line:528:5>
|   `-ReturnStmt 0x56466dd2a038 <line:527:9, col:55>
|     `-BinaryOperator 0x56466dd2a018 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56466dd29fe8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd29f18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd11ae0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56466dd2a000 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56466dd29fc8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56466dd29fa8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd29f78 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd29f38 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd29f90 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd29f58 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08550 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56466dd11cb8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56466dd11c28 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd2a190 <col:60, line:532:5>
|   `-ReturnStmt 0x56466dd2a180 <line:531:9, col:55>
|     `-BinaryOperator 0x56466dd2a160 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56466dd2a130 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd2a060 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd11c28 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56466dd2a148 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56466dd2a110 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56466dd2a0f0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56466dd2a0c0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56466dd2a080 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd083a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56466dd2a0d8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56466dd2a0a0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56466dd08700 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56466dd11d60 prev 0x56466dd08ba0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466dd11e58 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56466dd11ef8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56466dd18cc0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56466dd190a8 <col:11>
| |-CXXConstructorDecl 0x56466dd18da0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56466dd18e88 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56466dd197f0 <col:11>
| |-CXXConstructorDecl 0x56466dd18f28 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56466dd19038 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56466dd1b048 <col:11>
| |-CXXDestructorDecl 0x56466dd1a358 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56466da20ce8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56466da20df8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56466da216c0 <col:11>
| |   `-ReturnStmt 0x56466da216b0 <col:11>
| |     `-UnaryOperator 0x56466da21698 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56466da21688 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56466da20e68 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56466da20f78 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x56466ddfaab0 <col:11>
|     `-ReturnStmt 0x56466ddfaaa0 <col:11>
|       `-UnaryOperator 0x56466ddfaa88 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56466ddfaa78 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56466dd11f60 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56466dd12060 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56466dd12260 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd12040 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56466dd12020 <col:21> 'int' 0
| |-EnumConstantDecl 0x56466dd120f0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56466dd12278 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd120d0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56466dd120b0 <col:23> 'int' 1
| |-EnumConstantDecl 0x56466dd12180 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56466dd12290 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466dd12160 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56466dd12140 <col:23> 'int' 2
| `-EnumConstantDecl 0x56466dd12210 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56466dd122a8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466dd121f0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56466dd121d0 <col:27> 'int' 3
|-CXXMethodDecl 0x56466dd122e8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56466dd123b0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56466dd125b8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56466dd12460 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56466dd124e0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56466dd14b20 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56466dd127c8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56466dd12678 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56466dd126f0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56466dd12898 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56466dd12958 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56466dd12ac8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56466dd12a08 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56466dd12b90 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56466dd12c50 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56466dd12d10 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56466dd12dd0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56466dd12e70 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56466dd12ea8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56466dd12f18 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56466dd2a1a8 <col:27, line:684:5>
|-CXXMethodDecl 0x56466dd12fd8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56466dd2a1b8 <col:27, line:696:5>
|-CXXMethodDecl 0x56466dd131d8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56466dd13088 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56466dd13100 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd2a340 <col:66, line:700:5>
|   `-ReturnStmt 0x56466dd2a330 <line:699:9, col:31>
|     `-CallExpr 0x56466dd2a2d0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56466dd2a2b8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466dd2a268 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56466db95588 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56466dd2a300 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56466dd2a228 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56466dd13088 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56466dd2a318 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56466dd2a248 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd13100 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466dd13548 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56466dd13298 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56466dd13310 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56466dd13388 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56466dd13400 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466dd2a690 <col:64, line:707:5>
|   |-DeclStmt 0x56466dd2a3d0 <line:704:9, col:24>
|   | `-VarDecl 0x56466dd2a368 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56466dd2a5e0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56466dd2a3e8 <col:9> 'int32_t':'int' lvalue ParmVar 0x56466dd13310 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56466dd2a5c8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56466dd2a560 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56466dd2a548 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56466dd2a4c8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56466db9a858 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56466dd2a598 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56466dd2a468 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56466dd13388 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56466dd2a5b0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56466dd2a488 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466dd13400 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56466dd2a4a8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56466dd2a368 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56466dd2a670 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56466dd2a600 <col:9> 'int32_t':'int' lvalue ParmVar 0x56466dd13298 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56466dd2a658 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56466dd2a640 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56466dd2a620 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56466dd2a368 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56466dd137e8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56466dd13618 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56466dd13690 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56466dd13708 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56466dd13a88 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56466dd138b0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56466dd13928 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56466dd139a0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56466dd13c18 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56466dd13b50 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56466dd13e18 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56466dd13cd0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56466dd13d48 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56466dd140e8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56466dd14028 parent 0x56466d815488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56466dd13ed8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56466dd13f50 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56466dd14308 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56466dd14248 parent 0x56466d815488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56466dd14138 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56466dd141b0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56466dd144d0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56466dd14418 parent 0x56466d815488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56466dd14358 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56466dd14758 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56466dd14698 parent 0x56466d815488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56466dd14548 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56466dd145c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56466dd14978 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56466dd148b8 parent 0x56466d815488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56466dd147a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56466dd14820 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56466dd1a200 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466dd1a2e8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd1ad58 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56466dd1ad10 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56466dd12ea8
| |     `-DeclRefExpr 0x56466dd1acf0 <col:7> 'const Timestamp' lvalue ParmVar 0x56466dd1a2e8 '' 'const Timestamp &'
| `-CompoundStmt 0x56466dd1adb8 <col:7>
|-CXXConstructorDecl 0x56466dd1a468 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56466dd1a578 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56466dd12ea8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56466dd1b058 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56466dd1b000 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56466dd12ea8
| |     `-CXXStaticCastExpr 0x56466dd1afd0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56466dd1afa0 <col:7> 'Timestamp' lvalue ParmVar 0x56466dd1a578 '' 'Timestamp &&'
| `-CompoundStmt 0x56466dd1b0b8 <col:7>
|-CXXDestructorDecl 0x56466dd1a628 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56466da20b38 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56466da20c48 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56466da21738 <col:7>
|   |-CXXMemberCallExpr 0x56466da216d8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56466da21618 <col:7> '<bound member function type>' .operator= 0x56466da20ce8
|   | | `-MemberExpr 0x56466da21528 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
|   | |   `-CXXThisExpr 0x56466da21518 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56466da215e8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56466dd12ea8
|   |   `-DeclRefExpr 0x56466da215c8 <col:7> 'const Timestamp' lvalue ParmVar 0x56466da20c48 '' 'const Timestamp &'
|   `-ReturnStmt 0x56466da21728 <col:7>
|     `-UnaryOperator 0x56466da21710 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56466da21700 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56466da20fe8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56466da210f8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x56466ddfab28 <col:7>
    |-CXXMemberCallExpr 0x56466ddfaac8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x56466ddfaa30 <col:7> '<bound member function type>' .operator= 0x56466da20e68
    | | `-MemberExpr 0x56466ddfa900 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56466dd12ea8
    | |   `-CXXThisExpr 0x56466ddfa8f0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x56466ddfaa00 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56466dd12ea8
    |   `-CXXStaticCastExpr 0x56466ddfa9d0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x56466ddfa9a0 <col:7> 'Timestamp' lvalue ParmVar 0x56466da210f8 '' 'Timestamp &&'
    `-ReturnStmt 0x56466ddfab18 <col:7>
      `-UnaryOperator 0x56466ddfab00 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56466ddfaaf0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de07608 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x56466de07818 prev 0x56466de07608 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466de08a20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56466de089d0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x56466de089b0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x56466de08860 'type'
|     `-SubstTemplateTypeParmType 0x56466de08680 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de081d0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56466de080e8 'sized_array_memory'
|-FieldDecl 0x56466de16690 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56466de166e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466de16718 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466de06810 'TimerSet::heap_element'
|     `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de167d8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x56466de167a0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de06810 'TimerSet::heap_element'
|       `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de16868 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56466de16830 'const TimerSet::heap_element &'
|   `-QualType 0x56466de078b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de06810 'TimerSet::heap_element'
|         `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de168f8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x56466de168c0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de06810 'TimerSet::heap_element'
|       `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de169b8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x56466de16980 'const TimerSet::heap_element *'
|   `-QualType 0x56466de078b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de06810 'TimerSet::heap_element'
|         `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de17610 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x56466de175c0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x56466de175a0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x56466de174d8 'type'
|     `-LValueReferenceType 0x56466de174a0 'const TimerSet::heap_element &'
|       `-QualType 0x56466de17241 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x56466de17240 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x56466dae7de0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466dae7d88 'T'
|           `-RecordType 0x56466de06810 'TimerSet::heap_element'
|             `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de17678 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56466de16830 'const TimerSet::heap_element &'
|   `-QualType 0x56466de078b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de06810 'TimerSet::heap_element'
|         `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de176d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de17738 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x56466de168c0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de06810 'TimerSet::heap_element'
|       `-CXXRecord 0x56466de06780 'heap_element'
|-TypedefDecl 0x56466de177a0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x56466de16980 'const TimerSet::heap_element *'
|   `-QualType 0x56466de078b1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56466de078b0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de06810 'TimerSet::heap_element'
|         `-CXXRecord 0x56466de06780 'heap_element'
|-EnumDecl 0x56466de177f8 <line:134:5> col:5
| `-EnumConstantDecl 0x56466de178f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466de178d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466de17978 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466de17c08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de17a30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de17ad0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x56466de17ec8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56466de17db0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x56466de18188 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56466de18070 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56466de184d0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56466de183b0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x56466de187e0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56466de186c0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56466de18ad0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de18918 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de18990 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56466de18c28 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56466de18d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de18d60 <col:30> Inherited
|-CXXMethodDecl 0x56466de18da8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56466de18e58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de18eb0 <col:30> Inherited
|-CXXMethodDecl 0x56466de18f78 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56466de19028 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de19080 <col:30> Inherited
|-CXXMethodDecl 0x56466de190c8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56466de19178 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de191d0 <col:30> Inherited
|-CXXMethodDecl 0x56466de19218 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56466de192c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de19320 <col:30> Inherited
|-CXXMethodDecl 0x56466de19368 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56466de19418 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de19470 <col:30> Inherited
|-CXXMethodDecl 0x56466de19498 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de19548 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de195f8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56466de197b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de196a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de19720 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56466de19908 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466de19878 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de19ab8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x56466de199c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de19b70 <col:20>
| `-OptimizeNoneAttr 0x56466de19bc8 <col:30>
|-CXXMethodDecl 0x56466de19ce8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x56466de19bf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de19da0 <col:20>
| `-OptimizeNoneAttr 0x56466de19df8 <col:30>
|-CXXMethodDecl 0x56466de19eb0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de19e20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de19ff8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de19f68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de1a128 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56466de1a258 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56466de1a328 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56466de1a3f8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56466de1a538 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de1a4a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de1a680 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de1a5f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de1a7c8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466de1a738 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de1a880 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466de1a980 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466de1a8f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de1aa38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466de1aaf8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56466de1abf8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56466de1ada8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de1acb8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56466de1b568 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466de1ae60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56466de1b4c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56466de1b3c8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56466de1b648 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de1b798 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de1b708 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56466de1b850 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466de1ba98 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de1b910 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56466de1b988 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56466de1bc58 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56466de1bb68 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56466de1bea8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56466de1bd20 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56466de1bd98 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56466de1bf68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de1c1c8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56466de1c0d0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56466de1c298 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466de1c298

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de1c3e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x56466de1c5e8 prev 0x56466de1c3e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466de1d730 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56466de1d6e0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x56466de1d6c0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x56466de1d570 'type'
|     `-SubstTemplateTypeParmType 0x56466de1d390 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de1cee0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56466de1cdf8 'sized_array_memory'
|-FieldDecl 0x56466de21380 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56466de213d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466de21408 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-PointerType 0x56466dd79f90 'Timer *'
|     `-RecordType 0x56466dd790e0 'Timer'
|       `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de214c8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x56466de21490 'Timer *&'
|   `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466dd79f90 'Timer *'
|       `-RecordType 0x56466dd790e0 'Timer'
|         `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de21588 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x56466de21550 'Timer *const &'
|   `-QualType 0x56466de1c681 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd79f90 'Timer *'
|         `-RecordType 0x56466dd790e0 'Timer'
|           `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de21648 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x56466de21610 'Timer **'
|   `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466dd79f90 'Timer *'
|       `-RecordType 0x56466dd790e0 'Timer'
|         `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de21708 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x56466de216d0 'Timer *const *'
|   `-QualType 0x56466de1c681 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd79f90 'Timer *'
|         `-RecordType 0x56466dd790e0 'Timer'
|           `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de222e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x56466de22290 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x56466de22270 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x56466de22200 'type'
|     `-SubstTemplateTypeParmType 0x56466de21fc0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56466dae8510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dae84c0 'T'
|       `-PointerType 0x56466dd79f90 'Timer *'
|         `-RecordType 0x56466dd790e0 'Timer'
|           `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de22348 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x56466de21550 'Timer *const &'
|   `-QualType 0x56466de1c681 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd79f90 'Timer *'
|         `-RecordType 0x56466dd790e0 'Timer'
|           `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de223a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de22408 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x56466de21610 'Timer **'
|   `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-PointerType 0x56466dd79f90 'Timer *'
|       `-RecordType 0x56466dd790e0 'Timer'
|         `-CXXRecord 0x56466ddef3a8 'Timer'
|-TypedefDecl 0x56466de22470 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x56466de216d0 'Timer *const *'
|   `-QualType 0x56466de1c681 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56466de1c680 'Timer *' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-PointerType 0x56466dd79f90 'Timer *'
|         `-RecordType 0x56466dd790e0 'Timer'
|           `-CXXRecord 0x56466ddef3a8 'Timer'
|-EnumDecl 0x56466de224c8 <line:134:5> col:5
| `-EnumConstantDecl 0x56466de225c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466de225a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466de22648 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466de228d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de22700 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de227a0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x56466de22b98 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56466de22a80 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x56466de22e58 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56466de22d40 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56466de231a0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56466de23080 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x56466de234b0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56466de23390 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56466de237a0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de235e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de23660 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56466de238f8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56466de239d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de23a30 <col:30> Inherited
|-CXXMethodDecl 0x56466de23a78 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56466de23b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de23b80 <col:30> Inherited
|-CXXMethodDecl 0x56466de23c48 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56466de23cf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de23d50 <col:30> Inherited
|-CXXMethodDecl 0x56466de23d98 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56466de23e48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de23ea0 <col:30> Inherited
|-CXXMethodDecl 0x56466de23ee8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56466de23f98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de23ff0 <col:30> Inherited
|-CXXMethodDecl 0x56466de24038 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56466de240e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de24140 <col:30> Inherited
|-CXXMethodDecl 0x56466de24168 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de24218 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de242c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466de24488 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de24378 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de243f0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56466de245d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466de24548 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de24788 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x56466de24690 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de24840 <col:20>
| `-OptimizeNoneAttr 0x56466de24898 <col:30>
|-CXXMethodDecl 0x56466de249b8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56466de248c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de24a70 <col:20>
| `-OptimizeNoneAttr 0x56466de24ac8 <col:30>
|-CXXMethodDecl 0x56466de24b80 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de24af0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de24cc8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de24c38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de24df8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x56466de24f28 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x56466de24ff8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x56466de250c8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x56466de25208 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de25178 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de25350 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de252c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de25498 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56466de25408 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de25550 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466de25650 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466de255c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de25708 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466de257c8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x56466de258c8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x56466de25a48 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de25988 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x56466de26228 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466de25b18 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x56466de26188 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x56466de26088 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x56466de26308 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de26458 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de263c8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56466de26510 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466de26758 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de265d0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56466de26648 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56466de26918 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x56466de26828 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56466de26b68 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x56466de269e0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56466de26a58 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56466de26c28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de26e88 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56466de26d90 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x56466de26f58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466de26f58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddebde0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466ddebef8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x56466ddebf88 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x56466ddec010 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x56466ddec100 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56466ddec200 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x56466ddec2c0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x56466ddec380 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x56466ddec4a8 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56466ddec4a8
| `-ParmVarDecl 0x56466ddec5b8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x56466de27d08 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56466de27d08
  `-ParmVarDecl 0x56466de27e18 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466de05900 prev 0x56466ddf85b8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56466de059f8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x56466de05a88 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56466de05b10 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x56466de05c08 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x56466de28180 <col:43, col:67>
|   `-ReturnStmt 0x56466de28170 <col:45, col:52>
|     `-CXXConstructExpr 0x56466de28140 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x56466de28110 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x56466de073f0
|         `-CXXThisExpr 0x56466de28100 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56466de05cc8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x56466de05ed0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x56466de05d78 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x56466de05df0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x56466de05fc8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x56466de06090 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56466de28200 <col:39, col:67>
|   `-ReturnStmt 0x56466de281f0 <col:41, col:48>
|     `-ImplicitCastExpr 0x56466de281d8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56466de281a8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x56466de074d8
|         `-CXXThisExpr 0x56466de28198 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56466de06158 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56466de28280 <col:35, col:59>
|   `-ReturnStmt 0x56466de28270 <col:37, col:44>
|     `-ImplicitCastExpr 0x56466de28258 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56466de28228 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x56466de07540
|         `-CXXThisExpr 0x56466de28218 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56466de062a0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x56466de06210 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x56466de063e8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56466de06358 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56466de065e8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x56466de064a0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x56466de06518 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x56466de066b8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56466de06758 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x56466de06780 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466de06898 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x56466de06938 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x56466de06998 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x56466de06ac8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x56466de069f8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x56466de06938 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x56466de28358 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x56466de28300 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x56466de282d0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x56466ddf0a18
|   |       `-ImplicitCastExpr 0x56466de28320 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x56466de282b8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x56466de28298 <col:17> 'Timer *' lvalue ParmVar 0x56466de069f8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x56466de06998 't' 'Timer *'
|   | `-ImplicitCastExpr 0x56466de283f0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56466de283b0 <col:41> 'Timer *' lvalue ParmVar 0x56466de069f8 't_' 'Timer *'
|   `-CompoundStmt 0x56466de28440 <col:45, line:44:2>
|-CXXRecordDecl 0x56466de06b90 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466de06ca8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x56466de06ef8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x56466de06d78 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x56466de06df0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x56466de28570 <col:71, line:49:2>
|     `-ReturnStmt 0x56466de28560 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x56466de28528 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x56466de28510 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56466de284f0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x56466dd372f8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x56466de28470 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x56466de06938
|         | `-DeclRefExpr 0x56466de28450 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x56466de06d78 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x56466de284c0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x56466de06938
|           `-DeclRefExpr 0x56466de284a0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x56466de06df0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x56466de06fc0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466de070d8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x56466de072f8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x56466de07178 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x56466de071f0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x56466de28778 <col:63, line:54:2>
|     `-BinaryOperator 0x56466de28758 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x56466de28608 <col:6, col:12> 'int' lvalue ->_schedpos1 0x56466ddf2a58
|       | `-ImplicitCastExpr 0x56466de285f0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x56466de285c0 <col:6, col:9> 'Timer *' lvalue ->t 0x56466de06998
|       |     `-ImplicitCastExpr 0x56466de285a8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x56466de28588 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x56466de071f0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x56466de28740 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x56466de28720 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x56466de286c8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x56466de286a8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x56466de28678 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56466de28638 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x56466de071f0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x56466de28690 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x56466de28658 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x56466de07178 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x56466de28708 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x56466de286e8 <col:39> 'int' 1
|-FieldDecl 0x56466de073f0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x56466de07460 <col:44, col:53> aligned
|   `-ConstantExpr 0x56466de07440 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x56466de073c0 <col:52> 'int' 8
|-FieldDecl 0x56466de074d8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x56466de07540 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x56466de075a8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56466de1c380 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x56466de27040 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x56466de270a0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x56466de27100 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x56466de27160 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466de27250 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x56466de271c0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x56466de27318 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56466de28bd0 <col:29, line:81:5>
|   `-IfStmt 0x56466de28ba8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56466de28860 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56466de28800 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56466de287d0 <col:6, col:18> '<bound member function type>' .size 0x56466de19498
|     |     `-ImplicitCastExpr 0x56466de28848 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56466de287a0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56466de1c380
|     |         `-CXXThisExpr 0x56466de28790 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56466de28a50 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56466de28a38 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56466de28a18 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x56466da20b38 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56466de28888 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56466de073f0
|     | | `-CXXThisExpr 0x56466de28878 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56466de28a00 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56466de289d0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x56466de06938
|     |     `-CXXMemberCallExpr 0x56466de289a8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56466de28978 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56466de1a538
|     |       | `-MemberExpr 0x56466de288c8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56466de1c380
|     |       |   `-CXXThisExpr 0x56466de288b8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56466de28958 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56466de28b90 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56466de28b58 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56466de28b40 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56466de28b20 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56466da20fe8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56466de28a98 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56466de073f0
|         | `-CXXThisExpr 0x56466de28a88 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56466de28b08 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56466de28ad8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56466de27458 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x56466de273c8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x56466de27520 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x56466de275e0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x56466de276a0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x56466de27790 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x56466de277f8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x56466de277f8
| `-ParmVarDecl 0x56466de27908 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x56466de279a8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x56466de279a8
| `-ParmVarDecl 0x56466de27ab8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x56466de27b58 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x56466de27b58
| `-ParmVarDecl 0x56466de27c68 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x56466de27e88 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x56466de27e88
| `-ParmVarDecl 0x56466de27f98 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x56466de28020 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x56466de28020

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.16, %class.Vector.17, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.16, %class.Vector.17, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de56698 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x56466de568a8 prev 0x56466de56698 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466de579f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56466de579a0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x56466de57980 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x56466de57830 'type'
|     `-SubstTemplateTypeParmType 0x56466de1d390 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de1cee0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56466de1cdf8 'sized_array_memory'
|-FieldDecl 0x56466de57af0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56466de57b40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466de57b78 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466de54750 'pollfd'
|     `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de57c38 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x56466de57c00 'pollfd &'
|   `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de54750 'pollfd'
|       `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de57cf8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x56466de57cc0 'const pollfd &'
|   `-QualType 0x56466de56941 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de54750 'pollfd'
|         `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de57d88 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x56466de57d50 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de54750 'pollfd'
|       `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de57e48 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x56466de57e10 'const pollfd *'
|   `-QualType 0x56466de56941 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de54750 'pollfd'
|         `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de58a20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x56466de589d0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x56466de589b0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x56466de58940 'type'
|     `-SubstTemplateTypeParmType 0x56466de58700 'pollfd' sugar
|       |-TemplateTypeParmType 0x56466dae8510 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dae84c0 'T'
|       `-RecordType 0x56466de54750 'pollfd'
|         `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de58a88 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x56466de57cc0 'const pollfd &'
|   `-QualType 0x56466de56941 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de54750 'pollfd'
|         `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de58ae0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de58b48 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x56466de57d50 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de54750 'pollfd'
|       `-CXXRecord 0x56466de546c0 'pollfd'
|-TypedefDecl 0x56466de58bb0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x56466de57e10 'const pollfd *'
|   `-QualType 0x56466de56941 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56466de56940 'pollfd' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de54750 'pollfd'
|         `-CXXRecord 0x56466de546c0 'pollfd'
|-EnumDecl 0x56466de58c08 <line:134:5> col:5
| `-EnumConstantDecl 0x56466de58d00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466de58ce0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466de58d88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466de59018 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de58e40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de58ee0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x56466de592d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56466de591c0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x56466de59598 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56466de59480 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56466de598e0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56466de597c0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x56466de59bf0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56466de59ad0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56466de59ee0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de59d28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de59da0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56466de5a038 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56466de5a118 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de5a170 <col:30> Inherited
|-CXXMethodDecl 0x56466de5a1b8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56466de5a268 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de5a2c0 <col:30> Inherited
|-CXXMethodDecl 0x56466de5a388 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56466de5a438 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de5a490 <col:30> Inherited
|-CXXMethodDecl 0x56466de5a4d8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56466de5a588 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de5a5e0 <col:30> Inherited
|-CXXMethodDecl 0x56466de5a628 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56466de5a6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de5a730 <col:30> Inherited
|-CXXMethodDecl 0x56466de5a778 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56466de5a828 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de5a880 <col:30> Inherited
|-CXXMethodDecl 0x56466de5a8a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de5a958 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de5aa08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466de5abc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de5aab8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de5ab30 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56466de5ad18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466de5ac88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de5aec8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x56466de5add0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de5af80 <col:20>
| `-OptimizeNoneAttr 0x56466de5afd8 <col:30>
|-CXXMethodDecl 0x56466de5b0f8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x56466de5b000 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de5b1b0 <col:20>
| `-OptimizeNoneAttr 0x56466de5b208 <col:30>
|-CXXMethodDecl 0x56466de5b2c0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de5b230 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de5b408 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de5b378 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de5b538 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x56466de5b668 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x56466de5b738 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x56466de5b808 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x56466de5b948 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de5b8b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de5ba90 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de5ba00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de5bbd8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466de5bb48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de5bc90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466de5bd90 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466de5bd00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de5be48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466de5bf08 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x56466de5c008 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x56466de5c1b8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de5c0c8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x56466de5c978 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466de5c270 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x56466de5c8d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x56466de5c7d8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x56466de5ca58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de5cba8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de5cb18 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56466de5cc60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466de5cea8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de5cd20 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56466de5cd98 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56466de5d068 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x56466de5cf78 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56466de5d2b8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x56466de5d130 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56466de5d1a8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56466de5d378 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de5d5d8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56466de5d4e0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x56466de5d6a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466de5d6a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de5ec90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x56466de5ee68 prev 0x56466de5ec90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56466de5eef8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56466de5ef20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de60b00 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x56466de60ab0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x56466de5f3d0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x56466de5f2d0 'type'
|     `-TemplateSpecializationType 0x56466de5f260 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56466de5f140 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x56466de5f120 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56466de5f100 <col:24> 'unsigned long' 24
|       `-RecordType 0x56466de5f240 'char_array<24>'
|         `-ClassTemplateSpecialization 0x56466de5f160 'char_array'
|-TypedefDecl 0x56466de60bb8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x56466de60b80 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x56466de60b60 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x56466de60b00 'type'
|     `-ElaboratedType 0x56466de60ab0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x56466de5f3d0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x56466de5f2d0 'type'
|         `-TemplateSpecializationType 0x56466de5f260 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56466de5f140 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x56466de5f120 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56466de5f100 <col:24> 'unsigned long' 24
|           `-RecordType 0x56466de5f240 'char_array<24>'
|             `-ClassTemplateSpecialization 0x56466de5f160 'char_array'
|-CXXMethodDecl 0x56466de60d38 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x56466de60c48 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x56466de60e28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56466de60f08 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56466de60f08
|-CXXMethodDecl 0x56466de611d8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56466de610e0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x56466de61418 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56466de61290 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de61308 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de615e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56466de614d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de61550 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de61748 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56466de61818 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56466de61a68 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56466de618d8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56466de61950 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de61cc8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x56466de61b38 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56466de61bb0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de61e88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56466de61d98 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de62048 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56466de61f50 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de62100 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de621b0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de623e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56466de62260 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56466de622d8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56466de62688 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56466de62590 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x56466de62750 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x56466de627a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56466de627f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.20 = type { %struct.char_array.21*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.20 = type { %struct.char_array.21*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de5d7f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x56466de5d9f8 prev 0x56466de5d7f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56466de5ec00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x56466de5ebb0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x56466de5eb90 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x56466de5ea40 'type'
|     `-SubstTemplateTypeParmType 0x56466de5e860 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x56466dadd710 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466dadd6b8 'T'
|       `-RecordType 0x56466de5e3b0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x56466de5e2d0 'sized_array_memory'
|-FieldDecl 0x56466de62840 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x56466de62890 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56466de628c8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56466db153a8 'T'
|   `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de62988 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56466de62950 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de62a48 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56466de62a10 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56466de5da91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de62ad8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x56466de62aa0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de62b98 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56466de62b60 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56466de5da91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de637f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x56466de637a0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x56466de63780 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x56466de636b8 'type'
|     `-LValueReferenceType 0x56466de63680 'const SelectSet::SelectorInfo &'
|       `-QualType 0x56466de63421 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x56466de63420 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x56466dae7de0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56466dae7d88 'T'
|           `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de63858 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56466de62a10 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56466de5da91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de638b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56466d815580 'int'
|-TypedefDecl 0x56466de63918 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x56466de62aa0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56466db153a8 'T'
|     `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56466de56170 'SelectorInfo'
|-TypedefDecl 0x56466de63980 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56466de62b60 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56466de5da91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56466de5da90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56466db15400 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56466db153a8 'T'
|       `-RecordType 0x56466de56200 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56466de56170 'SelectorInfo'
|-EnumDecl 0x56466de639d8 <line:134:5> col:5
| `-EnumConstantDecl 0x56466de63ad0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56466de63ab0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56466db16a88 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56466db16a60 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56466db16a40 <col:40> 'int' 1
|-CXXConstructorDecl 0x56466de63b58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56466de63de8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de63c10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de63cb0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x56466de640a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56466de63f90 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x56466de64368 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56466de64250 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56466de646b0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56466de64590 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x56466de649c0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56466de648a0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56466de64cb0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de64af8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de64b70 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56466de64e08 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56466de64ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de64f40 <col:30> Inherited
|-CXXMethodDecl 0x56466de64f88 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56466de65038 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de65090 <col:30> Inherited
|-CXXMethodDecl 0x56466de65158 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56466de65208 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de65260 <col:30> Inherited
|-CXXMethodDecl 0x56466de652a8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56466de65358 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de653b0 <col:30> Inherited
|-CXXMethodDecl 0x56466de653f8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56466de654a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de65500 <col:30> Inherited
|-CXXMethodDecl 0x56466de65548 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56466de655f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56466de65650 <col:30> Inherited
|-CXXMethodDecl 0x56466de65678 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de65728 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56466de657d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56466de65998 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de65888 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56466de65900 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56466de65ae8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56466de65a58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de65c98 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x56466de65ba0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de65d50 <col:20>
| `-OptimizeNoneAttr 0x56466de65da8 <col:30>
|-CXXMethodDecl 0x56466de65ec8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x56466de65dd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56466de65f80 <col:20>
| `-OptimizeNoneAttr 0x56466de65fd8 <col:30>
|-CXXMethodDecl 0x56466de66090 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de66000 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de661d8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de66148 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de66308 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56466de66438 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56466de66508 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56466de665d8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56466de66718 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56466de66688 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de66860 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56466de667d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56466de669a8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x56466de66918 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de66a60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56466de66b60 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56466de66ad0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56466de66c18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56466de66cd8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x56466de66dd8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x56466de66f88 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de66e98 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x56466de68268 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56466de67040 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x56466de681c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x56466de680c8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x56466de68348 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56466de68498 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56466de68408 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56466de68550 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56466de68798 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56466de68610 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56466de68688 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56466de68958 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x56466de68868 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56466de68ba8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x56466de68a20 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56466de68a98 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56466de68c68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56466de68ec8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56466de68dd0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x56466de68f98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56466de68f98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory.20 }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory.20 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466de55350 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466de55468 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56466de554f8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x56466de55580 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x56466de55670 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x56466de55670
|-CXXMethodDecl 0x56466de55770 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x56466de55a10 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56466de55828 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x56466de558a0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x56466de55920 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x56466de55c80 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56466de55ae0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x56466de55b58 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x56466de55bd8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x56466de55dd8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x56466de55d48 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x56466de55ea0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x56466de6a648 <col:34, line:50:5>
|   |-BinaryOperator 0x56466de6a018 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x56466de69fd8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x56466de56628
|   | | `-CXXThisExpr 0x56466de69fc8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x56466de6a008 <col:23> 'bool' true
|   `-CallExpr 0x56466de6a620 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x56466de6a608 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56466de6a588 <col:2> 'void (long)' lvalue Function 0x56466de6a488 'ignore_result' 'void (long)' (FunctionTemplate 0x56466dad86b8 'ignore_result')
|     `-CallExpr 0x56466de6a230 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x56466de6a218 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466de6a198 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x56466de2bbf8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x56466de6a268 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x56466de6a140 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x56466de6a128 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x56466de6a0d8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x56466de565c8
|       |   |   `-CXXThisExpr 0x56466de6a0c8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x56466de6a108 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x56466de6a298 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x56466de6a280 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x56466de6a160 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x56466de6a2b0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56466de6a178 <col:41> 'int' 1
|-CXXMethodDecl 0x56466de55fe0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56466de55f50 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56466de560a8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56466de56148 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x56466de56170 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466de56288 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x56466de56328 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x56466de56388 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x56466de563f0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x56466de564a0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x56466de56328 'read' 'Element *'
|   | `-ImplicitCastExpr 0x56466de6a6a8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56466de6a668 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x56466de56388 'write' 'Element *'
|   | `-ImplicitCastExpr 0x56466de6a728 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56466de6a6e8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x56466de563f0 'pollfd' 'int'
|   | `-UnaryOperator 0x56466de6a788 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x56466de6a768 <col:35> 'int' 1
|   `-CompoundStmt 0x56466de6a800 <line:64:2, line:65:2>
|-FieldDecl 0x56466de565c8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x56466de56628 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x56466de5d790 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x56466de69080 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x56466de692b8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x56466de690e8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x56466de69160 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x56466de691d8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x56466de694a0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x56466de69388 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x56466de69408 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x56466de696e8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x56466de69568 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x56466de695e8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x56466de698f8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x56466de697a8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x56466de69820 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x56466de69a48 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x56466de699b8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x56466de69b10 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x56466de69bd0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x56466de69c98 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x56466de69c98
| `-ParmVarDecl 0x56466de69da8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x56466de69e48 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x56466de69e48
  `-ParmVarDecl 0x56466de69f58 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.18, %class.Vector.19 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.18, %class.Vector.19 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddead48 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466ddeae68 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x56466ddeaef8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56466ddeaf80 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x56466ddeb070 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56466ddeb170 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x56466ddeb230 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x56466ddeb2f0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x56466ddeb3d8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x56466ddeb4f8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x56466ddeb4f8
| `-ParmVarDecl 0x56466ddeb608 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x56466de6f3f8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x56466de6f3f8
  `-ParmVarDecl 0x56466de6f508 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddff988 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466ddffaa8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x56466ddffb48 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x56466de03ac0 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x56466de6e9f8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56466de6e9f8
| `-ParmVarDecl 0x56466de6eb08 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x56466de6eba8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56466de6eba8
| `-ParmVarDecl 0x56466de6ecb8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x56466de6ed28 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56466de6ed28
|-CXXMethodDecl 0x56466de6f5a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56466de6f5a8
| `-ParmVarDecl 0x56466de6f6b8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x56466de6f728 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56466de6f728
| `-ParmVarDecl 0x56466de6f838 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x56466de7a328 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x56466de7a400 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddecc40 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56466ddecd58 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x56466ddecde8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x56466ddece70 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x56466ddecf30 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x56466d815580 'int'
|-CXXMethodDecl 0x56466ddecff8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x56466dded098 <col:45> always_inline
|-CXXMethodDecl 0x56466dded1c8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x56466dded100 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x56466dded270 <col:49> always_inline
|-CXXConstructorDecl 0x56466dded368 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56466dded368
| `-ParmVarDecl 0x56466dded478 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x56466dded518 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56466dded518
| `-ParmVarDecl 0x56466dded628 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x56466de6ee10 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x56466de6ee10
|-CXXMethodDecl 0x56466de6f8d8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56466de6f8d8
| `-ParmVarDecl 0x56466de6f9e8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x56466de6fa58 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56466de6fa58
  `-ParmVarDecl 0x56466de6fb68 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466de6ac70 prev 0x56466de552c0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56466de6ad68 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x56466de6adf8 <col:22, col:28> col:22 public
|-EnumDecl 0x56466de6ae20 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x56466de6af38 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x56466de6af18 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56466de6af00 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56466de6aee0 <col:32> 'int' 1
| `-EnumConstantDecl 0x56466de6afe0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x56466de6afc0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56466de6afa8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56466de6af88 <col:53> 'int' 1000
|-CXXMethodDecl 0x56466de6b080 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x56466de6b140 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56466de6b228 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x56466de6fc28 <col:34, col:52>
|   `-ReturnStmt 0x56466de6fc18 <col:36, col:43>
|     `-MemberExpr 0x56466de6fbe8 <col:43> 'TimerSet' lvalue ->_timers 0x56466de6cef8
|       `-CXXThisExpr 0x56466de6fbd8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56466de6b318 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x56466de6fc90 <col:46, col:64>
|   `-ReturnStmt 0x56466de6fc80 <col:48, col:55>
|     `-MemberExpr 0x56466de6fc50 <col:55> 'const TimerSet' lvalue ->_timers 0x56466de6cef8
|       `-CXXThisExpr 0x56466de6fc40 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56466de6b408 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x56466de6fcf8 <col:36, col:55>
|   `-ReturnStmt 0x56466de6fce8 <col:38, col:45>
|     `-MemberExpr 0x56466de6fcb8 <col:45> 'SelectSet' lvalue ->_selects 0x56466de6cf58
|       `-CXXThisExpr 0x56466de6fca8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56466de6b4f8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x56466de6fd60 <col:48, col:67>
|   `-ReturnStmt 0x56466de6fd50 <col:50, col:57>
|     `-MemberExpr 0x56466de6fd20 <col:57> 'const SelectSet' lvalue ->_selects 0x56466de6cf58
|       `-CXXThisExpr 0x56466de6fd10 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56466de6b5b8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56466de6b6a8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x56466de6b818 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x56466de6b758 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x56466de6b8e0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x56466de6bd28 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x56466de6b990 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x56466de6bc10 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x56466de6bdf8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x56466de6beb8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x56466de6bf78 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x56466de6c0b8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x56466de6c028 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x56466de6c180 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x56466de6c240 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x56466de6c300 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x56466de6c3c0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x56466de6c500 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56466de6c470 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56466de6c5c8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56466de6c688 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x56466de6c728 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x56466de6c7f0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6c840 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6c890 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6c8e0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6c930 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6c980 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6c9d0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6ca20 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6ca70 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56466de6cac0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x56466de6cb10 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x56466de6cc08 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x56466de6cb78 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x56466de6cd58 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x56466de6ccc8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x56466de6ce00 <line:104:3, col:10> col:3 private
|-FieldDecl 0x56466de6ce38 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x56466de6ce98 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x56466de6cef8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x56466de6cf58 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x56466de6cfd8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x56466de6d048 <col:40, col:50> aligned
|   `-ConstantExpr 0x56466de6d028 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x56466de6cfa8 <col:48> 'int' 64
|-FieldDecl 0x56466de6d0b8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x56466de6d118 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x56466de6d210 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x56466de6d320 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x56466de6d380 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x56466de6d400 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x56466de6d470 <col:36, col:46> aligned
|   `-ConstantExpr 0x56466de6d450 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x56466de6d3d0 <col:44> 'int' 64
|-FieldDecl 0x56466de6d4e8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x56466de6d548 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x56466de6d598 <line:170:3, col:9> col:3 public
|-FieldDecl 0x56466de6d5d8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x56466de6d640 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x56466de6d690 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x56466de6d838 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x56466de6d6c8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x56466de6d748 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x56466de6d938 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x56466de6d938
|-CXXMethodDecl 0x56466de6da40 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x56466de6db08 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x56466de6fe58 <col:34, line:217:5>
|   `-ReturnStmt 0x56466de6fe48 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x56466de6fe30 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56466de6fe00 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x56466ddfca60
|         `-ImplicitCastExpr 0x56466de6fde8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x56466de6fdb8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x56466ddfc9f8
|             `-MemberExpr 0x56466de6fd88 <col:16> 'const TaskLink' lvalue ->_task_link 0x56466de6ce38
|               `-CXXThisExpr 0x56466de6fd78 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56466de6dbc8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x56466de6dc88 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x56466de74a00 <col:39, line:226:5>
|   |-DeclStmt 0x56466de74530 <line:223:9, col:68>
|   | `-VarDecl 0x56466de6fe80 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x56466de744e8 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x56466de744b8 <col:24, col:38> '<bound member function type>' .compare_swap 0x56466db3ed00
|   |     | `-MemberExpr 0x56466de6fef8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x56466de6d0b8
|   |     |   `-CXXThisExpr 0x56466de6fee8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x56466de74470 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x56466de74458 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x56466de74430 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x56466de74410 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x56466de74518 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x56466de74498 <col:66> 'int' 0
|   |-CStyleCastExpr 0x56466de74578 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56466de74548 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x56466de6fe80 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x56466de749e0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x56466de749b0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x56466de74690 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x56466de74660 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x56466de74648 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x56466de745a0 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x56466de6fe80 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x56466de74620 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x56466de74608 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x56466de745e0 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x56466de745c0 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x56466de746f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x56466de746d0 <col:60> 'int' 0
|       `-CallExpr 0x56466de74910 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x56466de748f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56466de748d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56466d8b3890 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x56466de74950 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56466de747d8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x56466de74968 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56466de74808 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x56466de74980 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x56466de74848 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x56466de74998 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x56466de748c0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x56466de748a8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x56466de74868 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x56466de6ddd0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x56466de6dd40 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x56466de6de98 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x56466de6df58 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x56466de6e018 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x56466de6e0d8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x56466de6e198 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x56466de6e290 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56466de6e2f0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56466de6e380 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x56466de6e748 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x56466de6e748
| `-ParmVarDecl 0x56466de6e858 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x56466de6ef18 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x56466de6ef18
  `-ParmVarDecl 0x56466de6f028 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddfcd70 prev 0x56466dd78fa0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x56466ddfcea8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x56466ddfcf38 <col:33, col:39> col:33 public
|-EnumDecl 0x56466ddfcf60 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x56466ddfd0a0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x56466ddfd080 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x56466ddfd060 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56466ddfd020 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x56466ddfd040 <col:26> 'int' 16
| `-EnumConstantDecl 0x56466ddfd170 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x56466ddfd150 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x56466ddfd130 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x56466ddfd0f0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x56466ddfd110 <col:47> 'int' 31
|-EnumDecl 0x56466ddfd1c0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x56466ddfd300 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x56466ddfd420 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56466ddfd2e0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x56466ddfd2c0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x56466ddfd280 <col:26> 'int' 1
| |       `-IntegerLiteral 0x56466ddfd2a0 <col:29> 'int' 15
| `-EnumConstantDecl 0x56466ddfd3d0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x56466ddfd438 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466ddfd3b0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x56466ddfd390 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x56466ddfd350 <col:51> 'int' 1
|         `-IntegerLiteral 0x56466ddfd370 <col:54> 'int' 10
|-CXXConstructorDecl 0x56466ddfd608 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x56466ddfd460 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x56466ddfd4e0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x56466ddfd760 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x56466ddfd6d0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x56466ddfd858 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x56466ddfd858
|-CXXMethodDecl 0x56466ddfd9e8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x56466de04a08 <col:42, line:100:5>
|   `-ReturnStmt 0x56466de049f8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x56466de049e0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x56466de049b0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x56466ddff810
|         `-CXXThisExpr 0x56466de049a0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56466ddfdab0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x56466de04a88 <col:36, line:105:5>
|   `-ReturnStmt 0x56466de04a78 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x56466de04a60 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56466de04a30 <col:16> 'void *const' lvalue ->_thunk 0x56466ddff878
|         `-CXXThisExpr 0x56466de04a20 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56466ddfdb70 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x56466de04b08 <col:37, line:110:5>
|   `-ReturnStmt 0x56466de04af8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x56466de04ae0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56466de04ab0 <col:16> 'Element *const' lvalue ->_owner 0x56466ddff938
|         `-CXXThisExpr 0x56466de04aa0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56466ddfdc30 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x56466ddfdcf8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x56466ddfddb8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x56466ddfde78 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x56466de04bf0 <col:35, line:137:5>
|   `-ReturnStmt 0x56466de04be0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x56466de04ba8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x56466de04b78 <col:16, col:24> '<bound member function type>' ->router 0x56466dd8b7b0
|         `-ImplicitCastExpr 0x56466de04bc8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56466de04b60 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56466de04b30 <col:16> 'Element *const' lvalue ->_owner 0x56466ddff938
|               `-CXXThisExpr 0x56466de04b20 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56466ddfdf38 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x56466ddfe0f8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56466ddfdfe8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56466ddfe060 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56466ddfe308 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x56466ddfe1b8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x56466ddfe230 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56466ddfe3d8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x56466de04d00 <col:35, line:181:5>
|   `-ReturnStmt 0x56466de04cf0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x56466de04cd8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x56466de04cc0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x56466de04c90 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x56466ddff448
|           `-MemberExpr 0x56466de04c48 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|             `-MemberExpr 0x56466de04c18 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x56466ddff798
|               `-CXXThisExpr 0x56466de04c08 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56466ddfe498 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x56466de04e18 <col:30, line:192:5>
|   `-BinaryOperator 0x56466de04df8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56466de04da0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56466ddff448
|     | `-MemberExpr 0x56466de04d58 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|     |   `-MemberExpr 0x56466de04d28 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56466ddff798
|     |     `-CXXThisExpr 0x56466de04d18 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56466de04de0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56466de04dd0 <col:32> 'bool' false
|-CXXMethodDecl 0x56466ddfe558 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x56466de05168 <col:30, line:206:5>
|   |-BinaryOperator 0x56466de04f10 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56466de04eb8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56466ddff448
|   | | `-MemberExpr 0x56466de04e70 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|   | |   `-MemberExpr 0x56466de04e40 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56466ddff798
|   | |     `-CXXThisExpr 0x56466de04e30 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56466de04ef8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56466de04ee8 <col:32> 'bool' true
|   |-CallExpr 0x56466de04fb0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x56466de04f98 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56466de04f78 <col:9> 'void ()' lvalue Function 0x56466ddea0c0 'click_fence' 'void ()'
|   `-IfStmt 0x56466de05150 <line:204:9, line:205:32>
|     |-BinaryOperator 0x56466de05090 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x56466de05060 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x56466de05010 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x56466de03ac0
|     | |   `-MemberExpr 0x56466de04fe0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x56466de03b38
|     | |     `-CXXThisExpr 0x56466de04fd0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x56466de05078 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x56466de05040 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x56466de05110 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x56466de050c0 <col:13> '<bound member function type>' ->complete_schedule 0x56466de04540
|       | `-CXXThisExpr 0x56466de050b0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x56466de05138 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x56466de050f0 <col:31> 'int' 0
|-CXXMethodDecl 0x56466ddfe618 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x56466de05290 <col:35, line:240:5>
|   `-BinaryOperator 0x56466de05270 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56466de05218 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56466ddff448
|     | `-MemberExpr 0x56466de051d0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|     |   `-MemberExpr 0x56466de051a0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56466ddff798
|     |     `-CXXThisExpr 0x56466de05190 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56466de05258 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56466de05248 <col:32> 'bool' true
|-CXXMethodDecl 0x56466ddfe6d8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x56466de054a8 <col:37, line:253:5>
|   |-BinaryOperator 0x56466de05388 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56466de05330 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56466ddff448
|   | | `-MemberExpr 0x56466de052e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|   | |   `-MemberExpr 0x56466de052b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56466ddff798
|   | |     `-CXXThisExpr 0x56466de052a8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56466de05370 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56466de05360 <col:32> 'bool' false
|   `-BinaryOperator 0x56466de05488 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56466de05430 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56466ddff4a8
|     | `-MemberExpr 0x56466de053e8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|     |   `-MemberExpr 0x56466de053b8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56466ddff798
|     |     `-CXXThisExpr 0x56466de053a8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56466de05470 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56466de05460 <col:41> 'bool' true
|-CXXMethodDecl 0x56466ddfe798 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x56466de05628 <col:37, line:264:5>
|   |-BinaryOperator 0x56466de055a8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56466de05550 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56466ddff4a8
|   | | `-MemberExpr 0x56466de05508 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56466ddff568
|   | |   `-MemberExpr 0x56466de054d8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56466ddff798
|   | |     `-CXXThisExpr 0x56466de054c8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56466de05590 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56466de05580 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x56466de05608 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x56466de055d8 <col:9> '<bound member function type>' ->reschedule 0x56466ddfe558
|       `-CXXThisExpr 0x56466de055c8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x56466ddfe8e0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x56466ddfe850 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x56466ddfe9b0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x56466ddfeaf8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x56466ddfea68 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x56466ddfec48 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x56466ddfebb8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x56466ddfed10 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x56466ddfedd0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x56466ddfee70 <col:53> "" ""
|-CXXMethodDecl 0x56466ddfef08 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x56466ddfefa8 <col:47> "" ""
|-AccessSpecDecl 0x56466ddff018 <line:303:3, col:10> col:3 private
|-FieldDecl 0x56466ddff058 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x56466ddff0c0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x56466ddff110 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56466ddff228 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x56466ddff2b8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x56466ddff3e8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x56466ddff448 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x56466ddff4a8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x56466de79a58 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x56466de79b30 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56466de79b30
| | |-CXXConstructorDecl 0x56466de79de8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56466de79de8
| | | `-ParmVarDecl 0x56466de79ef8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x56466de79f98 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56466de79f98
| |   `-ParmVarDecl 0x56466de7a0a8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x56466ddff568 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x56466ddff5c8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x56466ddff568 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56466ddff3e8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x56466ddff620 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x56466ddff568 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56466ddff448 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x56466ddff678 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x56466ddff568 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56466ddff4a8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x56466ddff6d0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x56466de79968 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56466de7a2c8 <col:11>
| |-CXXConstructorDecl 0x56466de79c38 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56466de79c38
| | `-ParmVarDecl 0x56466de79d48 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x56466de7a148 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56466de7a148
|   `-ParmVarDecl 0x56466de7a258 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x56466ddff798 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x56466ddff810 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x56466ddff878 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56466ddff8d8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x56466ddff938 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x56466ddff988 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56466ddffaa8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x56466ddffb48 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x56466de03ac0 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x56466de6e9f8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56466de6e9f8
| | `-ParmVarDecl 0x56466de6eb08 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x56466de6eba8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56466de6eba8
| | `-ParmVarDecl 0x56466de6ecb8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x56466de6ed28 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56466de6ed28
| |-CXXMethodDecl 0x56466de6f5a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56466de6f5a8
| | `-ParmVarDecl 0x56466de6f6b8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x56466de6f728 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56466de6f728
| | `-ParmVarDecl 0x56466de6f838 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x56466de7a328 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56466de7a400 <col:11>
|-FieldDecl 0x56466de03b38 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x56466de03c88 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x56466de03bc8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x56466de03e38 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x56466de03d48 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x56466de03f00 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x56466de03fc0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x56466de04080 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x56466de05738 <col:41, line:355:5>
|   `-ReturnStmt 0x56466de05728 <line:354:9, col:38>
|     `-BinaryOperator 0x56466de05708 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x56466de056d8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x56466de05688 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x56466de03ac0
|       |   `-MemberExpr 0x56466de05658 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x56466de03b38
|       |     `-CXXThisExpr 0x56466de05648 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x56466de056f0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56466de056b8 <col:38> 'int' 0
|-CXXMethodDecl 0x56466de04140 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x56466de04280 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x56466de041f0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x56466de043f8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x56466de04338 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56466de04540 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x56466de044b0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x56466de04608 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x56466de047d0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x56466de046b8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x56466de04738 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x56466de048d0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56466de04960 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddf2b08 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56466ddf7c38 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56466ddf8728 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.22 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56466ddef3a8 prev 0x56466dd79050 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56466ddef4a0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x56466ddef530 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x56466ddef590 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x56466ddef638 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x56466ddef758 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x56466ddef8f8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x56466ddef838 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x56466ddefb48 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x56466ddef9b8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x56466ddefa38 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x56466ddefcd8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x56466ddefc10 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x56466ddefe58 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x56466ddefd98 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x56466ddf0008 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x56466ddeff48 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x56466ddf0100 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56466ddf8900 <col:21, line:58:5>
|   `-IfStmt 0x56466ddf88e8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56466ddf8850 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56466ddf8820 <col:6> '<bound member function type>' ->scheduled 0x56466ddf0958
|     |   `-ImplicitCastExpr 0x56466ddf8870 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56466ddf8810 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56466ddf88c8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56466ddf8898 <col:6> '<bound member function type>' ->unschedule 0x56466ddf1fb0
|         `-CXXThisExpr 0x56466ddf8888 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0200 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56466ddf8aa0 <col:26, line:65:5>
|   |-BinaryOperator 0x56466ddf89c0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56466ddf8958 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56466ddf7c38
|   | | `-MemberExpr 0x56466ddf8928 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56466ddf7cf8
|   | |   `-CXXThisExpr 0x56466ddf8918 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56466ddf89a8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56466ddf8988 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56466ddf8158 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56466ddf8a80 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56466ddf89f0 <col:2> 'void *' lvalue ->_thunk 0x56466ddf7d78
|     | `-CXXThisExpr 0x56466ddf89e0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56466ddf8a58 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56466ddf8a20 <col:20> 'int' 1
|-CXXMethodDecl 0x56466ddf0340 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x56466ddf02b0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56466ddf8c00 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56466ddf8af0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56466ddf8ac0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x56466ddf02b0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56466ddf8be0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56466ddf8bb0 <col:2> '<bound member function type>' ->assign 0x56466ddf0200
|       `-CXXThisExpr 0x56466ddf8ba0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0510 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x56466ddf03f8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x56466ddf0478 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x56466ddf8d80 <col:58, line:79:5>
|   |-BinaryOperator 0x56466ddf8cc8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56466ddf8c60 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56466ddf7c38
|   | | `-MemberExpr 0x56466ddf8c30 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56466ddf7cf8
|   | |   `-CXXThisExpr 0x56466ddf8c20 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56466ddf8cb0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x56466ddf8c90 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x56466ddf03f8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x56466ddf8d60 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56466ddf8cf8 <col:2> 'void *' lvalue ->_thunk 0x56466ddf7d78
|     | `-CXXThisExpr 0x56466ddf8ce8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56466ddf8d48 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x56466ddf8d28 <col:11> 'void *' lvalue ParmVar 0x56466ddf0478 'user_data' 'void *'
|-CXXMethodDecl 0x56466ddf0660 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x56466ddf05d0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x56466ddf8f18 <col:35, line:87:5>
|   |-BinaryOperator 0x56466ddf8e48 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56466ddf8de0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56466ddf7c38
|   | | `-MemberExpr 0x56466ddf8db0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56466ddf7cf8
|   | |   `-CXXThisExpr 0x56466ddf8da0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56466ddf8e30 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56466ddf8e10 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56466ddf8330 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56466ddf8ef8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56466ddf8e78 <col:2> 'void *' lvalue ->_thunk 0x56466ddf7d78
|     | `-CXXThisExpr 0x56466ddf8e68 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56466ddf8ee0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56466ddf8ec8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x56466ddf8ea8 <col:11> 'Element *' lvalue ParmVar 0x56466ddf05d0 'element' 'Element *'
|-CXXMethodDecl 0x56466ddf07a8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x56466ddf0718 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x56466ddf90b0 <col:29, line:94:5>
|   |-BinaryOperator 0x56466ddf8fe0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56466ddf8f78 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56466ddf7c38
|   | | `-MemberExpr 0x56466ddf8f48 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56466ddf7cf8
|   | |   `-CXXThisExpr 0x56466ddf8f38 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56466ddf8fc8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56466ddf8fa8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56466ddf8508 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56466ddf9090 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56466ddf9010 <col:2> 'void *' lvalue ->_thunk 0x56466ddf7d78
|     | `-CXXThisExpr 0x56466ddf9000 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56466ddf9078 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56466ddf9060 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x56466ddf9040 <col:11> 'Task *' lvalue ParmVar 0x56466ddf0718 'task' 'Task *'
|-CXXMethodDecl 0x56466ddf0898 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56466ddf9190 <col:37, line:100:5>
|   `-ReturnStmt 0x56466ddf9180 <line:99:2, col:19>
|     `-BinaryOperator 0x56466ddf9160 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x56466ddf9130 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x56466ddf90e0 <col:9> 'Element *const' lvalue ->_owner 0x56466ddf7dd8
|       |   `-CXXThisExpr 0x56466ddf90d0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x56466ddf9148 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x56466ddf9110 <col:19> 'int' 0
|-CXXMethodDecl 0x56466ddf0958 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x56466ddf9250 <col:35, line:105:5>
|   `-ReturnStmt 0x56466ddf9240 <line:104:2, col:23>
|     `-BinaryOperator 0x56466ddf9220 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x56466ddf9208 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x56466ddf91b8 <col:9> 'const int' lvalue ->_schedpos1 0x56466ddf2a58
|       |   `-CXXThisExpr 0x56466ddf91a8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x56466ddf91e8 <col:23> 'int' 0
|-CXXMethodDecl 0x56466ddf0a18 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x56466ddf92b8 <col:51, line:118:5>
|   `-ReturnStmt 0x56466ddf92a8 <line:117:2, col:9>
|     `-MemberExpr 0x56466ddf9278 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|       `-CXXThisExpr 0x56466ddf9268 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0ad8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x56466ddf9810 <col:37, line:136:5>
|   `-IfStmt 0x56466ddf97e8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x56466ddf9378 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x56466ddf9360 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x56466ddf9340 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x56466ddf9310 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x56466dd0b128
|     |       `-MemberExpr 0x56466ddf92e0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|     |         `-CXXThisExpr 0x56466ddf92d0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x56466ddf9758 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x56466ddf9740 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x56466ddf9710 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x56466ddf96f8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x56466ddf96c0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x56466ddf96a8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x56466ddf9688 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56466dd39900 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x56466ddf9628 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x56466ddf9610 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x56466ddf9538 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x56466ddf9520 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x56466ddf9500 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56466dd395c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x56466ddf94a0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x56466ddf93a0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|     |         |     |   `-CXXThisExpr 0x56466ddf9390 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x56466ddf94e8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x56466ddf94d0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x56466ddf9480 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x56466ddf9468 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x56466ddf9408 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x56466dd2cc20 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x56466ddf9670 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x56466ddf9658 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x56466ddf95f0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x56466ddf95d8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x56466ddf95a8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x56466db88170 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x56466ddf97d8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x56466ddf97a8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x56466ddf9778 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|           `-CXXThisExpr 0x56466ddf9768 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0b98 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x56466ddf98f8 <col:35, line:141:5>
|   `-ReturnStmt 0x56466ddf98e8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x56466ddf98b0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x56466ddf9880 <col:9, col:17> '<bound member function type>' ->router 0x56466dd8b7b0
|         `-ImplicitCastExpr 0x56466ddf98d0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56466ddf9868 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56466ddf9838 <col:9> 'Element *const' lvalue ->_owner 0x56466ddf7dd8
|               `-CXXThisExpr 0x56466ddf9828 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0c58 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x56466ddf9978 <col:37, line:146:5>
|   `-ReturnStmt 0x56466ddf9968 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x56466ddf9950 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56466ddf9920 <col:9> 'Element *const' lvalue ->_owner 0x56466ddf7dd8
|         `-CXXThisExpr 0x56466ddf9910 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0d18 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x56466ddf99f8 <col:41, line:151:5>
|   `-ReturnStmt 0x56466ddf99e8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x56466ddf99d0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x56466ddf99a0 <col:9> 'RouterThread *const' lvalue ->_thread 0x56466ddf7e38
|         `-CXXThisExpr 0x56466ddf9990 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56466ddf0de0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x56466ddf0fd8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56466ddf0e90 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56466ddf0f08 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56466ddf8718 <col:50> 'bool' false
|-CXXMethodDecl 0x56466ddf1158 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x56466ddf1098 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x56466ddf12a0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56466ddf1210 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56466ddf13e8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56466ddf1358 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56466ddf1530 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56466ddf14a0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x56466ddf1678 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56466ddf15e8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x56466ddf1740 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x56466ddf9b60 <col:32, line:223:5>
|   `-ExprWithCleanups 0x56466ddf9b48 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x56466ddf9af0 <col:2, col:47> 'void'
|       |-MemberExpr 0x56466ddf9a20 <col:2> '<bound member function type>' ->schedule_at_steady 0x56466ddf12a0
|       | `-CXXThisExpr 0x56466ddf9a10 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddf9b30 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56466ddf9b18 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56466ddf9ad0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x56466ddf9ab8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x56466ddf9a88 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x56466db88170 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x56466ddf1880 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x56466ddf17f0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x56466ddf19c8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf1938 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466ddf9ce8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x56466ddf9cd0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x56466ddf9c78 <col:2, col:40> 'void'
|       |-MemberExpr 0x56466ddf9b88 <col:2> '<bound member function type>' ->schedule_after 0x56466ddf1880
|       | `-CXXThisExpr 0x56466ddf9b78 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddf9cb8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56466ddf9ca0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56466ddf9c38 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x56466ddf9c08 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x56466ddf9bc8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466ddf1938 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x56466ddf9c20 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56466ddf9be8 <col:38> 'int' 0
|-CXXMethodDecl 0x56466ddf1b10 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf1a80 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466ddf9f58 <col:58, line:249:5>
|   `-ExprWithCleanups 0x56466ddf9f40 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x56466ddf9ee8 <col:2, col:49> 'void'
|       |-MemberExpr 0x56466ddf9d10 <col:2> '<bound member function type>' ->schedule_after 0x56466ddf1880
|       | `-CXXThisExpr 0x56466ddf9d00 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddf9f28 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56466ddf9f10 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56466ddf9e90 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x56466ddf9e78 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56466ddf9de8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56466dd0cf18 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56466ddf9ed0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x56466ddf9eb8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56466ddf9dc8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466ddf1a80 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466ddf1c58 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x56466ddf1bc8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x56466ddfa138 <col:58, line:261:5>
|   `-ExprWithCleanups 0x56466ddfa120 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x56466ddfa0c8 <col:2, col:38> 'void'
|       |-MemberExpr 0x56466ddf9f80 <col:2> '<bound member function type>' ->schedule_at_steady 0x56466ddf12a0
|       | `-CXXThisExpr 0x56466ddf9f70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddfa108 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56466ddfa0f0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56466ddfa090 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56466ddfa078 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56466ddfa058 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56466dd395c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56466ddfa028 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56466ddfa010 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56466ddf9fc0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|             |     `-CXXThisExpr 0x56466ddf9fb0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x56466ddf9ff0 <col:33> 'const Timestamp' lvalue ParmVar 0x56466ddf1bc8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x56466ddf1da0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf1d10 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466ddfa410 <col:58, line:270:5>
|   `-ExprWithCleanups 0x56466ddfa3f8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x56466ddfa3a0 <col:2, col:79> 'void'
|       |-MemberExpr 0x56466ddfa160 <col:2> '<bound member function type>' ->schedule_at_steady 0x56466ddf12a0
|       | `-CXXThisExpr 0x56466ddfa150 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddfa3e0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56466ddfa3c8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56466ddfa360 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x56466ddfa298 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x56466ddfa280 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x56466ddfa210 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x56466ddfa1e0 <col:31, col:41> '<bound member function type>' .sec 0x56466db89c68
|             | |     `-ImplicitCastExpr 0x56466ddfa230 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x56466ddfa1b0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|             | |         `-CXXThisExpr 0x56466ddfa1a0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x56466ddfa268 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x56466ddfa248 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466ddf1d10 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x56466ddfa328 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x56466ddfa2f8 <col:60, col:70> '<bound member function type>' .subsec 0x56466db8a360
|                 `-ImplicitCastExpr 0x56466ddfa348 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x56466ddfa2c8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|                     `-CXXThisExpr 0x56466ddfa2b8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x56466ddf1ee8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf1e58 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56466ddfa748 <col:60, line:279:5>
|   `-ExprWithCleanups 0x56466ddfa730 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x56466ddfa6d8 <col:2, col:65> 'void'
|       |-MemberExpr 0x56466ddfa438 <col:2> '<bound member function type>' ->schedule_at_steady 0x56466ddf12a0
|       | `-CXXThisExpr 0x56466ddfa428 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddfa718 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56466ddfa700 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56466ddfa6a0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x56466ddfa688 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56466ddfa668 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56466dd395c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56466ddfa608 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56466ddfa5f0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56466ddfa478 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|             |     `-CXXThisExpr 0x56466ddfa468 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x56466ddfa650 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x56466ddfa638 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x56466ddfa598 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x56466ddfa580 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x56466ddfa550 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56466dd0cf18 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x56466ddfa5d8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x56466ddfa5c0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x56466ddfa530 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x56466ddf1e58 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56466ddf1fb0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x56466ddf2070 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x56466ddfac10 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x56466ddfa7a0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x56466ddfa770 <col:2> '<bound member function type>' ->unschedule 0x56466ddf1fb0
|   |   `-CXXThisExpr 0x56466ddfa760 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x56466ddfabf8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x56466ddfabc0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x56466ddfaba8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56466ddfa858 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56466da20fe8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x56466ddfa7d0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x56466ddf2ab8
|       | `-CXXThisExpr 0x56466ddfa7c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56466ddfa840 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x56466ddfa810 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56466ddf2130 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x56466ddfaf68 <col:42, line:310:5>
|   |-IfStmt 0x56466ddfadb0 <line:306:2, line:307:23>
|   | |-CallExpr 0x56466ddface0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x56466ddfacc8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x56466ddfac68 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x56466dd2b090 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x56466ddfada0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x56466ddfad88 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x56466ddfad58 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56466ddfad40 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x56466ddfad10 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x56466ddfaf58 <line:309:2, col:33>
|     `-ExprWithCleanups 0x56466ddfaf40 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x56466ddfaf10 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56466ddfaef8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x56466ddfaeb8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56466ddfaea0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56466ddfae70 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56466dd0d230 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56466ddfaee0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x56466ddfae50 <col:30> 'int' 500
|-CXXMethodDecl 0x56466ddf2270 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf21e0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466ddf2318 <col:69> "" ""
|-CXXMethodDecl 0x56466ddf2428 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf2398 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466ddf24d0 <col:70> "" ""
|-CXXMethodDecl 0x56466ddf25e0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf2550 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466ddf2688 <col:71> "" ""
|-CXXMethodDecl 0x56466ddf2798 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56466ddf2708 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56466ddf2840 <col:72> "" ""
|-EnumDecl 0x56466ddf28b0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x56466ddf29b0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x56466ddf2a00 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56466ddf2990 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56466ddf2970 <col:25> 'int' 1
|-AccessSpecDecl 0x56466ddf2a18 <line:339:3, col:10> col:3 private
|-FieldDecl 0x56466ddf2a58 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x56466ddf2ab8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x56466ddf2b08 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56466ddf7c38 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56466ddf8728 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56466ddf7cf8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56466ddf7d78 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56466ddf7dd8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56466ddf7e38 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56466ddf7f88 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56466ddf7e98 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56466ddf8158 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56466ddf8040 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56466ddf80c0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56466ddf8330 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56466ddf8218 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56466ddf8298 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56466ddf8508 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56466ddf83f0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56466ddf8470 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56466ddf86d8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.22, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.22, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56466de08f80 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56466dd319e8 <line:167:18>
|-CXXRecordDecl 0x56466dd31aa8 prev 0x56466de08f80 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56466dd31bb8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
