
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DirectIPLookup::VirtualPort
         0 |   int16_t ll_next
         2 |   int16_t ll_prev
         4 |   int32_t refcount
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int16_t port
        14 |   int16_t padding
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DirectIPLookup::CleartextEntry
         0 |   int ll_next
         4 |   int ll_prev
         8 |   uint32_t prefix
        12 |   uint16_t plen
        14 |   int16_t vport
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DirectIPLookup::Table
         0 |   uint16_t * _tbl_0_23
         8 |   uint16_t * _tbl_24_31
        16 |   struct DirectIPLookup::VirtualPort * _vport
        24 |   struct DirectIPLookup::CleartextEntry * _rtable
        32 |   int * _rt_hashtbl
        40 |   uint8_t * _tbl_0_23_plen
        48 |   uint8_t * _tbl_24_31_plen
        56 |   uint32_t _rtable_size
        60 |   uint32_t _tbl_24_31_size
        64 |   uint32_t _vport_size
        68 |   int _rt_empty_head
        72 |   uint16_t _tbl_24_31_empty_head
        76 |   int _vport_head
        80 |   int _vport_empty_head
        84 |   uint32_t _rtable_capacity
        88 |   uint32_t _tbl_24_31_capacity
        92 |   uint32_t _vport_capacity
           | [sizeof=96, dsize=96, align=8,
           |  nvsize=96, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618350f2ab0 prev 0x561835057ae8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618350f2ba8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x5618350f2c38 <col:19, col:25> col:19 public
|-TypedefDecl 0x5618350f2c70 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x561834ee53c0 'uninitialized_type'
|   `-CXXRecord 0x561834ee5328 'uninitialized_type'
|-CXXConstructorDecl 0x5618350f2d30 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f6528 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5618350f64e8 <col:10> 'int' 0
| `-CompoundStmt 0x5618350f6570 <col:13, line:22:5>
|-CXXConstructorDecl 0x5618350f2e80 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x5618350f2df0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f65c0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x5618350f6580 <col:10> 'unsigned int' lvalue ParmVar 0x5618350f2df0 'x' 'unsigned int'
| `-CompoundStmt 0x5618350f6608 <col:13, line:27:5>
|-CXXConstructorDecl 0x5618350f2fd8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x5618350f2f48 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f6670 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5618350f6658 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x5618350f6618 <col:10> 'int' lvalue ParmVar 0x5618350f2f48 'x' 'int'
| `-CompoundStmt 0x5618350f66b8 <col:13, line:31:5>
|-CXXConstructorDecl 0x5618350f3130 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5618350f30a0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f6720 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5618350f6708 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x5618350f66c8 <col:10> 'unsigned long' lvalue ParmVar 0x5618350f30a0 'x' 'unsigned long'
| `-CompoundStmt 0x5618350f6768 <col:13, line:35:5>
|-CXXConstructorDecl 0x5618350f3288 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x5618350f31f8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f67d0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5618350f67b8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x5618350f6778 <col:10> 'long' lvalue ParmVar 0x5618350f31f8 'x' 'long'
| `-CompoundStmt 0x5618350f6818 <col:13, line:39:5>
|-CXXConstructorDecl 0x5618350f3448 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x5618350f3358 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f6898 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5618350f6848 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5618350268a0
| |     `-DeclRefExpr 0x5618350f6828 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x5618350f3358 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x5618350f68e0 <col:20, line:44:5>
|-CXXConstructorDecl 0x5618350f35d8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x5618350f3510 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x5618350f6a48 <col:51, line:56:5>
|   `-BinaryOperator 0x5618350f6a28 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x5618350f6900 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5618350f6480
|     | `-CXXThisExpr 0x5618350f68f0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x5618350f6a10 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5618350f69f8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x5618350f69d8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x5618350f69a8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x5618350f6990 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x5618350f6930 <col:47> 'const unsigned char *' lvalue ParmVar 0x5618350f3510 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x5618350f3728 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x5618350f3698 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x5618350f38d8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5618350f3818 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5618350f6ab8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x5618350f6a90 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5618350f6a60 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5618350f3818 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5618350f3a68 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x5618350f39a0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x5618350f3b58 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x5618350f7a78 <col:46, line:83:5>
|   `-ReturnStmt 0x5618350f7a68 <line:82:2, col:29>
|     `-ExprWithCleanups 0x5618350f7a50 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x5618350f7a20 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5618350f78d8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5618350f77c0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5618350f76a8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x5618350f6ae0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x5618350f3c48 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x5618350f7b28 <col:31, line:88:5>
|   `-ReturnStmt 0x5618350f7b18 <line:87:2, col:10>
|     `-UnaryOperator 0x5618350f7b00 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x5618350f7ae8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x5618350f7ad0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5618350f7aa0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5618350f6480
|             `-CXXThisExpr 0x5618350f7a90 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5618350f3d08 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5618350f7ba8 <col:34, line:93:5>
|   `-ReturnStmt 0x5618350f7b98 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5618350f7b80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5618350f7b50 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5618350f6480
|         `-CXXThisExpr 0x5618350f7b40 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x5618350f3dd8 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x5618350f7c28 <col:38, line:101:5>
|   `-ReturnStmt 0x5618350f7c18 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x5618350f7c00 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5618350f7bd0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5618350f6480
|         `-CXXThisExpr 0x5618350f7bc0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5618350f3ea8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5618350f7ef8 <col:38, line:108:5>
|   `-ReturnStmt 0x5618350f7ee8 <line:107:2, col:58>
|     `-BinaryOperator 0x5618350f7ec8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x5618350f7de0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x5618350f7dc0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5618350f7da8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5618350f7c50 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5618350f6480
|       |   |   `-CXXThisExpr 0x5618350f7c40 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5618350f7d80 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5618350f7d68 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5618350f7ce8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x561835034dd8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5618350f7cc8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5618350f7ea0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5618350f7e88 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5618350f7e68 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x561835034dd8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5618350f7e48 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5618350f3f68 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5618350f8168 <col:39, line:112:5>
|   `-ReturnStmt 0x5618350f8158 <line:111:2, col:56>
|     `-BinaryOperator 0x5618350f8138 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5618350f8050 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x5618350f8030 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5618350f8018 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5618350f7f20 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5618350f6480
|       |   |   `-CXXThisExpr 0x5618350f7f10 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5618350f7ff0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5618350f7fd8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5618350f7fb8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x561835034dd8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5618350f7f98 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x5618350f8110 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5618350f80f8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5618350f80d8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x561835034dd8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5618350f80b8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5618350f4098 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5618350f41a0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5618350f42b0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5618350f5378 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5618350f5438 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5618350f5500 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5618350f56f8 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x5618350f55b0 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x5618350f5628 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x5618350f5878 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5618350f57b8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x5618350f59c0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5618350f5930 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5618350f5b68 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5618350f5a78 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5618350f5cb0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5618350f5c20 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5618350f5df8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5618350f5d68 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5618350f5ec0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5618350f5f80 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x5618350f60f8 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x5618350f6030 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x5618350f61c0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5618350f62a8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5618350f6350 <col:51> "" ""
|-TypedefDecl 0x5618350f63f0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x561835057b80 'IPAddress'
|   `-CXXRecord 0x5618350f2ab0 'IPAddress'
|-AccessSpecDecl 0x5618350f6448 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5618350f6480 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5618350f6b28 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x5618350f6c38 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56183530be28 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56183530bde0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x5618350f6480
| |     `-DeclRefExpr 0x56183530bdc0 <col:7> 'const IPAddress' lvalue ParmVar 0x5618350f6c38 '' 'const IPAddress &'
| `-CompoundStmt 0x56183530be70 <col:7>
|-CXXConstructorDecl 0x5618350f6cd8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5618350f6de8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5618350f6480 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5618350f79c8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5618350f7980 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5618350f6480
| |     `-CXXStaticCastExpr 0x5618350f7950 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x5618350f7920 <col:7> 'IPAddress' lvalue ParmVar 0x5618350f6de8 '' 'IPAddress &&'
| `-CompoundStmt 0x5618350f7a10 <col:7>
|-CXXDestructorDecl 0x5618350f76d8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56183530c270 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x56183530c270
| `-ParmVarDecl 0x56183530c378 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x56183530c3e8 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56183530c4f8 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x56183530c760 <col:7>
    |-BinaryOperator 0x56183530c708 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x56183530c6c0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x5618350f6480
    | | `-CXXThisExpr 0x56183530c6b0 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x56183530c6f0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x56183530c680 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5618350f6480
    |     `-CXXStaticCastExpr 0x56183530c650 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x56183530c620 <col:7> 'IPAddress' lvalue ParmVar 0x56183530c4f8 '' 'IPAddress &&'
    `-ReturnStmt 0x56183530c750 <col:7>
      `-UnaryOperator 0x56183530c738 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56183530c728 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352730f0 <../elements/ip/directiplookup.hh:125:5, line:132:5> line:125:12 referenced struct VirtualPort definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561835273208 <col:5, col:12> col:12 implicit struct VirtualPort
|-FieldDecl 0x5618352732a8 <line:126:2, col:10> col:10 ll_next 'int16_t':'short'
|-FieldDecl 0x561835273308 <line:127:2, col:10> col:10 ll_prev 'int16_t':'short'
|-FieldDecl 0x561835273368 <line:128:2, col:10> col:10 refcount 'int32_t':'int'
|-FieldDecl 0x5618352733c8 <line:129:2, col:12> col:12 gw 'IPAddress'
|-FieldDecl 0x561835273428 <line:130:2, col:10> col:10 port 'int16_t':'short'
`-FieldDecl 0x561835273488 <line:131:2, col:10> col:10 padding 'int16_t':'short'

Layout: <CGRecordLayout
  LLVMType:%"struct.DirectIPLookup::VirtualPort" = type { i16, i16, i32, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%"struct.DirectIPLookup::VirtualPort" = type { i16, i16, i32, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835272d38 <../elements/ip/directiplookup.hh:117:5, line:123:5> line:117:12 referenced struct CleartextEntry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561835272e58 <col:5, col:12> col:12 implicit struct CleartextEntry
|-FieldDecl 0x561835272f00 <line:118:2, col:6> col:6 ll_next 'int'
|-FieldDecl 0x561835272f68 <line:119:2, col:6> col:6 ll_prev 'int'
|-FieldDecl 0x561835272fc8 <line:120:2, col:11> col:11 prefix 'uint32_t':'unsigned int'
|-FieldDecl 0x561835273028 <line:121:2, col:11> col:11 plen 'uint16_t':'unsigned short'
`-FieldDecl 0x561835273088 <line:122:2, col:10> col:10 vport 'int16_t':'short'

Layout: <CGRecordLayout
  LLVMType:%"struct.DirectIPLookup::CleartextEntry" = type { i32, i32, i32, i16, i16 }
  NonVirtualBaseLLVMType:%"struct.DirectIPLookup::CleartextEntry" = type { i32, i32, i32, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352734f0 <../elements/ip/directiplookup.hh:134:5, line:182:5> line:134:12 referenced struct Table definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561835273608 <col:5, col:12> col:12 implicit referenced struct Table
|-FieldDecl 0x5618352736a8 <line:136:2, col:12> col:12 referenced _tbl_0_23 'uint16_t *'
|-FieldDecl 0x561835273708 <line:137:2, col:12> col:12 referenced _tbl_24_31 'uint16_t *'
|-FieldDecl 0x561835273798 <line:138:2, col:15> col:15 referenced _vport 'DirectIPLookup::VirtualPort *'
|-FieldDecl 0x561835273828 <line:141:2, col:18> col:18 referenced _rtable 'DirectIPLookup::CleartextEntry *'
|-FieldDecl 0x561835273890 <line:142:2, col:7> col:7 referenced _rt_hashtbl 'int *'
|-FieldDecl 0x5618352738f0 <line:143:2, col:11> col:11 referenced _tbl_0_23_plen 'uint8_t *'
|-FieldDecl 0x561835273950 <line:144:2, col:11> col:11 referenced _tbl_24_31_plen 'uint8_t *'
|-FieldDecl 0x5618352739b0 <line:146:2, col:11> col:11 _rtable_size 'uint32_t':'unsigned int'
|-FieldDecl 0x561835273a10 <line:147:2, col:11> col:11 _tbl_24_31_size 'uint32_t':'unsigned int'
|-FieldDecl 0x561835273a70 <line:148:2, col:11> col:11 _vport_size 'uint32_t':'unsigned int'
|-FieldDecl 0x561835273ad8 <line:149:2, col:6> col:6 _rt_empty_head 'int'
|-FieldDecl 0x561835273b38 <line:150:2, col:11> col:11 _tbl_24_31_empty_head 'uint16_t':'unsigned short'
|-FieldDecl 0x561835273ba0 <line:151:2, col:6> col:6 _vport_head 'int'
|-FieldDecl 0x561835273c08 <line:152:2, col:6> col:6 _vport_empty_head 'int'
|-FieldDecl 0x561835273c68 <line:154:2, col:11> col:11 referenced _rtable_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x561835273cc8 <line:155:2, col:11> col:11 referenced _tbl_24_31_capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x561835273d28 <line:156:2, col:11> col:11 referenced _vport_capacity 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561835273de0 <line:158:2, line:161:2> line:158:2 Table 'void ()'
| |-CXXCtorInitializer Field 0x5618352736a8 '_tbl_0_23' 'uint16_t *'
| | `-ImplicitCastExpr 0x561835275630 <line:159:18> 'uint16_t *' <NullToPointer>
| |   `-IntegerLiteral 0x5618352755f0 <col:18> 'int' 0
| |-CXXCtorInitializer Field 0x561835273708 '_tbl_24_31' 'uint16_t *'
| | `-ImplicitCastExpr 0x5618352756b0 <col:33> 'uint16_t *' <NullToPointer>
| |   `-IntegerLiteral 0x561835275670 <col:33> 'int' 0
| |-CXXCtorInitializer Field 0x561835273798 '_vport' 'DirectIPLookup::VirtualPort *'
| | `-ImplicitCastExpr 0x561835275730 <col:44> 'DirectIPLookup::VirtualPort *' <NullToPointer>
| |   `-IntegerLiteral 0x5618352756f0 <col:44> 'int' 0
| |-CXXCtorInitializer Field 0x561835273828 '_rtable' 'DirectIPLookup::CleartextEntry *'
| | `-ImplicitCastExpr 0x5618352757b0 <col:56> 'DirectIPLookup::CleartextEntry *' <NullToPointer>
| |   `-IntegerLiteral 0x561835275770 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x561835273890 '_rt_hashtbl' 'int *'
| | `-ImplicitCastExpr 0x561835275830 <line:160:20> 'int *' <NullToPointer>
| |   `-IntegerLiteral 0x5618352757f0 <col:20> 'int' 0
| |-CXXCtorInitializer Field 0x5618352738f0 '_tbl_0_23_plen' 'uint8_t *'
| | `-ImplicitCastExpr 0x5618352758b0 <col:39> 'uint8_t *' <NullToPointer>
| |   `-IntegerLiteral 0x561835275870 <col:39> 'int' 0
| |-CXXCtorInitializer Field 0x561835273950 '_tbl_24_31_plen' 'uint8_t *'
| | `-ImplicitCastExpr 0x561835275930 <col:59> 'uint8_t *' <NullToPointer>
| |   `-IntegerLiteral 0x5618352758f0 <col:59> 'int' 0
| `-CompoundStmt 0x5618352759a8 <col:62, line:161:2>
|-CXXDestructorDecl 0x561835273ed0 <line:163:2, line:165:2> line:163:2 ~Table 'void () noexcept'
| `-CompoundStmt 0x561835275a18 <col:11, line:165:2>
|   `-CXXMemberCallExpr 0x5618352759f8 <line:164:6, col:14> 'void'
|     `-MemberExpr 0x5618352759c8 <col:6> '<bound member function type>' ->cleanup 0x561835274098
|       `-CXXThisExpr 0x5618352759b8 <col:6> 'DirectIPLookup::Table *' implicit this
|-CXXMethodDecl 0x561835273fd8 <line:167:2, col:17> col:6 initialize 'int ()'
|-CXXMethodDecl 0x561835274098 <line:168:2, col:15> col:7 used cleanup 'void ()'
|-CXXMethodDecl 0x561835274258 <line:170:2, col:55> col:25 prefix_hash 'uint32_t (uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561835274148 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5618352741c0 <col:47> col:55 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352744e0 <line:172:2, col:37> col:6 find_entry 'int (uint32_t, uint32_t) const'
| |-ParmVarDecl 0x561835274318 <col:17> col:25 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561835274390 <col:27> col:35 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352745b0 <line:173:2, col:16> col:9 dump 'String () const'
|-CXXMethodDecl 0x5618352747f0 <line:175:2, col:43> col:6 vport_find 'int (IPAddress, int16_t)'
| |-ParmVarDecl 0x561835274660 <col:17, col:27> col:27 gw 'IPAddress'
| `-ParmVarDecl 0x5618352746d8 <col:31, col:39> col:39 port 'int16_t':'short'
|-CXXMethodDecl 0x5618352749a8 <line:176:2, col:27> col:7 vport_unref 'void (uint16_t)'
| `-ParmVarDecl 0x5618352748b0 <col:19> col:27 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x561835274c78 <line:178:2, col:62> col:6 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-ParmVarDecl 0x561835274a60 <col:16, col:29> col:30 'const IPRoute &'
| |-ParmVarDecl 0x561835274ad8 <col:32> col:36 'bool'
| |-ParmVarDecl 0x561835274b50 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x561835274bc8 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x561835274ee0 <line:179:2, col:59> col:6 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-ParmVarDecl 0x561835274d48 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x561835274dc0 <col:35, col:42> col:43 'IPRoute *'
| `-ParmVarDecl 0x561835274e38 <col:45, col:58> col:59 'ErrorHandler *'
`-CXXMethodDecl 0x561835274fb8 <line:180:2, col:13> col:7 flush 'void ()'

Layout: <CGRecordLayout
  LLVMType:%"struct.DirectIPLookup::Table" = type { i16*, i16*, %"struct.DirectIPLookup::VirtualPort"*, %"struct.DirectIPLookup::CleartextEntry"*, i32*, i8*, i8*, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.DirectIPLookup::Table" = type { i16*, i16*, %"struct.DirectIPLookup::VirtualPort"*, %"struct.DirectIPLookup::CleartextEntry"*, i32*, i8*, i8*, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618350c5980 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5618350c5a98 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5618350c5b38 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5618350c5b98 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5618350c5bf8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5618350c5ca8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618350c5fb0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618350c60c8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5618350c6170 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5618350c61d8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5618350c6268 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5618350cc300 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5618350cc738 <col:12>
|-CXXConstructorDecl 0x5618350cc408 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5618350cc518 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5618350c6170 'data' 'const char *'
| | `-ImplicitCastExpr 0x5618350cecc0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5618350cec90 <col:12> 'const char *const' lvalue .data 0x5618350c6170
| |     `-DeclRefExpr 0x5618350cec70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350cc518 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5618350c61d8 'length' 'int'
| | `-ImplicitCastExpr 0x5618350ced50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5618350ced20 <col:12> 'const int' lvalue .length 0x5618350c61d8
| |     `-DeclRefExpr 0x5618350ced00 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350cc518 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5618350c6268 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5618350cede0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5618350cedb0 <col:12> 'String::memo_t *const' lvalue .memo 0x5618350c6268
| |     `-DeclRefExpr 0x5618350ced90 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350cc518 '' 'const String::rep_t &'
| `-CompoundStmt 0x5618350cee38 <col:12>
|-CXXConstructorDecl 0x5618350cc5b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5618350cc5b8
| `-ParmVarDecl 0x5618350cc6c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5618350d1c20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5618350dd638 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5618350dd748 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5618350ddc60 <col:12>
|   |-BinaryOperator 0x5618350dda78 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5618350dda30 <col:12> 'const char *' lvalue ->data 0x5618350c6170
|   | | `-CXXThisExpr 0x5618350dda20 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5618350dda60 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5618350dd9f0 <col:12> 'const char *const' lvalue .data 0x5618350c6170
|   |     `-DeclRefExpr 0x5618350dd9d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350dd748 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5618350ddb40 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5618350ddaf8 <col:12> 'int' lvalue ->length 0x5618350c61d8
|   | | `-CXXThisExpr 0x5618350ddae8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5618350ddb28 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5618350ddab8 <col:12> 'const int' lvalue .length 0x5618350c61d8
|   |     `-DeclRefExpr 0x5618350dda98 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350dd748 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5618350ddc08 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5618350ddbc0 <col:12> 'String::memo_t *' lvalue ->memo 0x5618350c6268
|   | | `-CXXThisExpr 0x5618350ddbb0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5618350ddbf0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5618350ddb80 <col:12> 'String::memo_t *const' lvalue .memo 0x5618350c6268
|   |     `-DeclRefExpr 0x5618350ddb60 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350dd748 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5618350ddc50 <col:12>
|     `-UnaryOperator 0x5618350ddc38 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5618350ddc28 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5618350dd7b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5618350dd7b8
  `-ParmVarDecl 0x5618350dd8c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618350bcef0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618350bd008 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5618350bd098 <col:16, col:22> col:16 public
|-TypedefDecl 0x5618350bd0d8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x561834d8dfd0 'const char *'
|   `-QualType 0x561834d8d521 'const char' const
|     `-BuiltinType 0x561834d8d520 'char'
|-TypedefDecl 0x5618350bd160 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5618350bd130 'String::const_iterator' sugar
|   |-Typedef 0x5618350bd0d8 'const_iterator'
|   `-PointerType 0x561834d8dfd0 'const char *'
|     `-QualType 0x561834d8d521 'const char' const
|       `-BuiltinType 0x561834d8d520 'char'
|-TypedefDecl 0x5618350bd2d0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5618350bd240 'int (String::*)() const'
|   |-RecordType 0x5618350bcf80 'String'
|   | `-CXXRecord 0x5618350bcef0 'String'
|   `-ParenType 0x5618350bd1e0 'int () const' sugar
|     `-FunctionProtoType 0x561835090d70 'int () const' const cdecl
|       `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618350bd338 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x561834ee5950 'int64_t' sugar
|   |-Typedef 0x561834df6390 'int64_t'
|   `-TypedefType 0x561834dcf630 '__int64_t' sugar
|     |-Typedef 0x561834dcf208 '__int64_t'
|     `-BuiltinType 0x561834d8d5a0 'long'
|-TypedefDecl 0x5618350bd3a0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x561834ee5870 'uint64_t' sugar
|   |-Typedef 0x561834df6530 'uint64_t'
|   `-TypedefType 0x561834dcf6c0 '__uint64_t' sugar
|     |-Typedef 0x561834dcf278 '__uint64_t'
|     `-BuiltinType 0x561834d8d640 'unsigned long'
|-TypedefDecl 0x5618350bd430 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5618350bd400 'String::intmax_t' sugar
|   |-Typedef 0x5618350bd338 'intmax_t'
|   `-TypedefType 0x561834ee5950 'int64_t' sugar
|     |-Typedef 0x561834df6390 'int64_t'
|     `-TypedefType 0x561834dcf630 '__int64_t' sugar
|       |-Typedef 0x561834dcf208 '__int64_t'
|       `-BuiltinType 0x561834d8d5a0 'long'
|-TypedefDecl 0x5618350bd4c0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5618350bd490 'String::uintmax_t' sugar
|   |-Typedef 0x5618350bd3a0 'uintmax_t'
|   `-TypedefType 0x561834ee5870 'uint64_t' sugar
|     |-Typedef 0x561834df6530 'uint64_t'
|     `-TypedefType 0x561834dcf6c0 '__uint64_t' sugar
|       |-Typedef 0x561834dcf278 '__uint64_t'
|       `-BuiltinType 0x561834d8d640 'unsigned long'
|-CXXConstructorDecl 0x5618350bd580 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5618350bd728 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5618350bd668 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5618350bd8d8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5618350bd818 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5618350bda30 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5618350bd9a0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5618350bdc48 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5618350bdaf8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5618350bdb78 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5618350bde68 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5618350bdd18 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5618350bdd98 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5618350be088 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5618350bdf38 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5618350bdfb8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5618350be2a8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5618350be158 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5618350be1d8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5618350be438 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5618350be370 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5618350be5b8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5618350be4f8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5618350be748 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5618350be680 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5618350be8a0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5618350be810 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5618350be9f8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5618350be968 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5618350beb50 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5618350beac0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5618350becd8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5618350bec18 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5618350bee68 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5618350beda0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5618350beff8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5618350bef30 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5618350bf188 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5618350bf0c0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5618350bf280 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5618350bf3a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5618350bf528 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5618350bf460 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5618350bf678 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5618350bf5e8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5618350bf730 <col:63> "" ""
|-CXXMethodDecl 0x5618350bf878 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5618350bf7b8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5618350bfa88 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5618350bf938 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5618350bf9b8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5618350bfca8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5618350bfb50 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5618350bfbd0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5618350bff88 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5618350bfd68 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5618350bfde8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5618350cbdd0 <col:55> 'int' 10
| `-ParmVarDecl 0x5618350bfe60 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5618350cbdf0 <col:76> 'bool' true
|-CXXMethodDecl 0x5618350c0268 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5618350c0050 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5618350c00d0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5618350cbe00 <col:56> 'int' 10
| `-ParmVarDecl 0x5618350c0148 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5618350cbe20 <col:77> 'bool' true
|-CXXMethodDecl 0x5618350c0370 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5618350c0438 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5618350c0500 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5618350c05a0 <col:20>
| `-OptimizeNoneAttr 0x5618350c05f8 <col:30>
|-CXXConversionDecl 0x5618350c06e8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5618350c07b8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5618350c0878 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5618350c0968 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5618350c0a28 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5618350c0ba8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5618350c0ae0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5618350c0cf8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5618350c0c68 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5618350c0de8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5618350c0ea8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5618350c10f8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5618350c0f60 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5618350c0fe0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5618350c1358 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5618350c11c0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5618350c1240 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5618350c1428 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5618350c1638 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5618350c14e0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5618350c1560 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5618350c1858 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5618350c1700 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5618350c1780 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5618350c19e8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5618350c1920 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5618350c1ad8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5618350c1c48 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5618350c1b88 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5618350c1e58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5618350c1d08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5618350c1d88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5618350c2070 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5618350c1f18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5618350c1f90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5618350c2200 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5618350c2130 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5618350c2420 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5618350c22c0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5618350c2340 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5618350c2570 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5618350c24e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5618350c2748 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5618350c2630 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5618350c26b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5618350c2898 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5618350c2808 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5618350c2ab0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5618350c2950 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5618350c29d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5618350cbe30 <col:39> 'int' 0
|-CXXMethodDecl 0x5618350c2cd0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5618350c2b70 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5618350c2bf0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5618350cbe50 <col:48> 'int' 0
|-CXXMethodDecl 0x5618350c2eb0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5618350c2d90 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5618350c2e10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5618350cbe70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5618350c2f80 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5618350c3040 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5618350c3100 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5618350c31c0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5618350c3280 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5618350c3428 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5618350c3330 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5618350c35a8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5618350c34e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5618350c3780 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5618350c3668 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5618350c38f8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5618350c3838 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5618350c3a40 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5618350c39b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5618350c3b90 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5618350c3b00 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5618350c3d68 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5618350c3c50 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5618350c3cd0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5618350c3f48 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5618350c3e30 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5618350c3eb0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5618350c4098 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5618350c4008 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5618350c42a8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5618350c4158 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5618350c41d8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5618350c4408 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5618350c4370 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5618350c4560 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5618350c44c8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5618350c4608 <col:57> "" ""
|-CXXMethodDecl 0x5618350c4718 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5618350c4688 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5618350c4868 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5618350c47d8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5618350c49e8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5618350c4920 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5618350c4ab0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5618350c4b70 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5618350c4c30 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5618350c4cd0 <col:49> "" ""
|-CXXMethodDecl 0x5618350c4d60 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5618350c4e20 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5618350c4f10 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5618350c4fd8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5618350c5098 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5618350c5158 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5618350c5250 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5618350c5318 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5618350c53e0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5618350c55b8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5618350c5498 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5618350c5518 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5618350c57e0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5618350c5680 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5618350c5700 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5618350c58f0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5618350c5958 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5618350c5980 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5618350c5a98 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5618350c5b38 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5618350c5b98 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5618350c5bf8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5618350c5ca8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5618350c5d10 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5618350c5f48 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5618350c5f98 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618350c5f28 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5618350c5e38 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5618350c5de0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5618350c5e20 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5618350c5e00 <col:32> 'int' 8
|-CXXRecordDecl 0x5618350c5fb0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5618350c60c8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5618350c6170 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5618350c61d8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5618350c6268 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5618350cc300 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5618350cc738 <col:12>
| |-CXXConstructorDecl 0x5618350cc408 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5618350cc518 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5618350c6170 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5618350cecc0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5618350cec90 <col:12> 'const char *const' lvalue .data 0x5618350c6170
| | |     `-DeclRefExpr 0x5618350cec70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350cc518 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5618350c61d8 'length' 'int'
| | | `-ImplicitCastExpr 0x5618350ced50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5618350ced20 <col:12> 'const int' lvalue .length 0x5618350c61d8
| | |     `-DeclRefExpr 0x5618350ced00 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350cc518 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5618350c6268 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5618350cede0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5618350cedb0 <col:12> 'String::memo_t *const' lvalue .memo 0x5618350c6268
| | |     `-DeclRefExpr 0x5618350ced90 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350cc518 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5618350cee38 <col:12>
| |-CXXConstructorDecl 0x5618350cc5b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5618350cc5b8
| | `-ParmVarDecl 0x5618350cc6c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5618350d1c20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5618350dd638 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5618350dd748 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5618350ddc60 <col:12>
| |   |-BinaryOperator 0x5618350dda78 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5618350dda30 <col:12> 'const char *' lvalue ->data 0x5618350c6170
| |   | | `-CXXThisExpr 0x5618350dda20 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5618350dda60 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5618350dd9f0 <col:12> 'const char *const' lvalue .data 0x5618350c6170
| |   |     `-DeclRefExpr 0x5618350dd9d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350dd748 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5618350ddb40 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5618350ddaf8 <col:12> 'int' lvalue ->length 0x5618350c61d8
| |   | | `-CXXThisExpr 0x5618350ddae8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5618350ddb28 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5618350ddab8 <col:12> 'const int' lvalue .length 0x5618350c61d8
| |   |     `-DeclRefExpr 0x5618350dda98 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350dd748 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5618350ddc08 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5618350ddbc0 <col:12> 'String::memo_t *' lvalue ->memo 0x5618350c6268
| |   | | `-CXXThisExpr 0x5618350ddbb0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5618350ddbf0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5618350ddb80 <col:12> 'String::memo_t *const' lvalue .memo 0x5618350c6268
| |   |     `-DeclRefExpr 0x5618350ddb60 <col:12> 'const String::rep_t' lvalue ParmVar 0x5618350dd748 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5618350ddc50 <col:12>
| |     `-UnaryOperator 0x5618350ddc38 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5618350ddc28 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5618350dd7b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5618350dd7b8
|   `-ParmVarDecl 0x5618350dd8c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5618350c62e0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5618350c6528 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5618350c6348 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5618350c63c8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5618350c6440 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5618350cc2c0 <col:79, line:261:5>
|   |-BinaryOperator 0x5618350cbf38 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5618350cbed0 <col:2, col:5> 'const char *' lvalue .data 0x5618350c6170
|   | | `-MemberExpr 0x5618350cbea0 <col:2> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|   | |   `-CXXThisExpr 0x5618350cbe90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5618350cbf20 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5618350cbf00 <col:12> 'const char *' lvalue ParmVar 0x5618350c6348 'data' 'const char *'
|   |-BinaryOperator 0x5618350cc000 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5618350cbf98 <col:2, col:5> 'int' lvalue .length 0x5618350c61d8
|   | | `-MemberExpr 0x5618350cbf68 <col:2> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|   | |   `-CXXThisExpr 0x5618350cbf58 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5618350cbfe8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5618350cbfc8 <col:14> 'int' lvalue ParmVar 0x5618350c63c8 'length' 'int'
|   `-IfStmt 0x5618350cc2a8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5618350cc120 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5618350cc108 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5618350cc0e8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5618350cc0c8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5618350cc060 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5618350c6268
|     |       | `-MemberExpr 0x5618350cc030 <col:7> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|     |       |   `-CXXThisExpr 0x5618350cc020 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5618350cc0b0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5618350cc090 <col:17> 'String::memo_t *' lvalue ParmVar 0x5618350c6440 'memo' 'String::memo_t *'
|     `-CallExpr 0x5618350cc280 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5618350cc268 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5618350cc170 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5618350b4f58 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5618350cc1d8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5618350c5b38
|         `-ImplicitCastExpr 0x5618350cc1c0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5618350cc1a0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5618350c6440 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5618350c67d8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5618350c65f8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5618350c6678 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5618350c66f0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5618350c62e0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5618350cc748 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5618350cc8d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5618350cc840 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5618350cc7b0 <col:2> '<bound member function type>' ->assign_memo 0x5618350c6528
|     | `-ImplicitCastExpr 0x5618350cc878 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5618350cc7a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5618350cc890 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5618350cc7e0 <col:14> 'const char *' lvalue ParmVar 0x5618350c65f8 'data' 'const char *'
|     |-ImplicitCastExpr 0x5618350cc8a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5618350cc800 <col:20> 'int' lvalue ParmVar 0x5618350c6678 'length' 'int'
|     `-ImplicitCastExpr 0x5618350cc8c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5618350cc820 <col:28> 'String::memo_t *' lvalue ParmVar 0x5618350c66f0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5618350c6968 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5618350c68a8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5618350ccb30 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5618350ccab0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5618350cc900 <col:2> '<bound member function type>' ->assign_memo 0x5618350c6528
|     | `-CXXThisExpr 0x5618350cc8f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5618350ccae8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5618350cc980 <col:14, col:19> 'const char *' lvalue .data 0x5618350c6170
|     |   `-MemberExpr 0x5618350cc950 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5618350c62e0
|     |     `-DeclRefExpr 0x5618350cc930 <col:14> 'const String' lvalue ParmVar 0x5618350c68a8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5618350ccb00 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5618350cca00 <col:25, col:30> 'int' lvalue .length 0x5618350c61d8
|     |   `-MemberExpr 0x5618350cc9d0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5618350c62e0
|     |     `-DeclRefExpr 0x5618350cc9b0 <col:25> 'const String' lvalue ParmVar 0x5618350c68a8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5618350ccb18 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5618350cca80 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5618350c6268
|         `-MemberExpr 0x5618350cca50 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5618350c62e0
|           `-DeclRefExpr 0x5618350cca30 <col:38> 'const String' lvalue ParmVar 0x5618350c68a8 'x' 'const String &'
|-CXXMethodDecl 0x5618350c6a30 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5618350cd4f0 <col:31, line:278:5>
|   `-IfStmt 0x5618350cd4d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5618350ccbd0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5618350ccbb8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5618350ccb88 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5618350c6268
|     |     `-MemberExpr 0x5618350ccb58 <col:6> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|     |       `-CXXThisExpr 0x5618350ccb48 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5618350cd4b0 <col:15, line:277:2>
|       |-ParenExpr 0x5618350cd080 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5618350cd050 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5618350ccce0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5618350cccc8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5618350cccb0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5618350ccc70 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5618350c5b38
|       |   |       `-ImplicitCastExpr 0x5618350ccc58 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5618350ccc28 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5618350c6268
|       |   |           `-MemberExpr 0x5618350ccbf8 <col:27> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|       |   |             `-CXXThisExpr 0x5618350ccbe8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5618350ccd40 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5618350ccd20 <col:54> 'int' 0
|       |   `-CallExpr 0x5618350ccfb0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5618350ccf98 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5618350ccf18 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5618350ccff0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5618350cce28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5618350cd008 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5618350cce58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5618350cd020 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5618350cce90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5618350cd038 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5618350ccf00 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5618350ccee8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5618350cceb0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5618350cd3d0 <line:274:6, line:275:22>
|       | |-CallExpr 0x5618350cd290 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5618350cd278 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5618350cd1f0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5618350b63a0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5618350cd1c0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5618350c5b38
|       | |   `-ImplicitCastExpr 0x5618350cd1a8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5618350cd178 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5618350c6268
|       | |       `-MemberExpr 0x5618350cd148 <col:40> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|       | |         `-CXXThisExpr 0x5618350cd138 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5618350cd390 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5618350cd378 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5618350cd2b8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5618350cb210 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5618350cd3b8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5618350cd318 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5618350c6268
|       |       `-MemberExpr 0x5618350cd2e8 <col:15> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|       |         `-CXXThisExpr 0x5618350cd2d8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5618350cd490 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5618350cd428 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5618350c6268
|         | `-MemberExpr 0x5618350cd3f8 <col:6> 'String::rep_t' lvalue ->_r 0x5618350c62e0
|         |   `-CXXThisExpr 0x5618350cd3e8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5618350cd478 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5618350cd458 <col:16> 'int' 0
|-CXXMethodDecl 0x5618350c6cc8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5618350c6ae8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5618350c6b68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5618350c6be0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5618350c6da0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5618350c6ff0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5618350c6e58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5618350c6ed8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5618350c6f50 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5618350c71d8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5618350c70c0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5618350c7140 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5618350c72d8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5618350cd5c8 <col:41, line:286:5>
|   `-ReturnStmt 0x5618350cd5b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5618350cd588 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5618350cd550 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5618350cd538 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5618350cd518 <col:46> 'int' 1
|-CXXMethodDecl 0x5618350c7578 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5618350c7390 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5618350c7410 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5618350c7490 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5618350cb210 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5618350c7640 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5618350cb2e0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5618350cb4b0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5618350cb398 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5618350cb418 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5618350cb570 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5618350cb638 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5618350cb738 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5618350cb7b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5618350cb828 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5618350cb890 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5618350cb990 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5618350cb9e0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618350cb970 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5618350cb950 <col:22> 'int' 14
|-CXXMethodDecl 0x5618350cbbf8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5618350cba10 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5618350cba90 <col:38> col:41 'int'
| `-ParmVarDecl 0x5618350cbb10 <col:43> col:46 'int'
|-FriendDecl 0x5618350cbd00 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5618350cbd90 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56183532bfa0 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56183532c0b8 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x56183532c160 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x56183532c1c8 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x56183532c230 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x56183532c2e0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x56183532c160 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x56183532d160 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x56183532d118 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x56183532d0e0 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x56183532d0c8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x56183532d070 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x5618350e31d0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x56183532c1c8 'len' 'int'
| | `-IntegerLiteral 0x56183532d1d8 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x56183532c230 'cap' 'int'
| | `-IntegerLiteral 0x56183532d240 <col:20> 'int' 0
| `-CompoundStmt 0x56183532d2c0 <col:23, line:119:2>
|-CXXConstructorDecl 0x56183532c458 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x56183532c398 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x56183532d2d0 <col:37, line:121:2>
|-CXXConstructorDecl 0x56183532f4e8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56183532f5f8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x56183532c160 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x561835330fb0 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x561835330f80 <col:12> 'unsigned char *const' lvalue .s 0x56183532c160
| |     `-DeclRefExpr 0x561835330f60 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56183532f5f8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x56183532c1c8 'len' 'int'
| | `-ImplicitCastExpr 0x561835331040 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x561835331010 <col:12> 'const int' lvalue .len 0x56183532c1c8
| |     `-DeclRefExpr 0x561835330ff0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56183532f5f8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x56183532c230 'cap' 'int'
| | `-ImplicitCastExpr 0x5618353310d0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5618353310a0 <col:12> 'const int' lvalue .cap 0x56183532c230
| |     `-DeclRefExpr 0x561835331080 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56183532f5f8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x561835331128 <col:12>
|-CXXConstructorDecl 0x56183532f698 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x56183532f698
| `-ParmVarDecl 0x56183532f7a8 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x5618353313e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835275a30 prev 0x5618350f26c0 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561835275b28 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x561835275bb8 <col:21, col:27> col:21 public
|-TypedefDecl 0x561835275bf8 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x561834d8dfd0 'const char *'
|   `-QualType 0x561834d8d521 'const char' const
|     `-BuiltinType 0x561834d8d520 'char'
|-TypedefDecl 0x561835275c68 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x561834d8e1a0 'char *'
|   `-BuiltinType 0x561834d8d520 'char'
|-TypedefDecl 0x561835275da0 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x561835275d10 'int (StringAccum::*)() const'
|   |-RecordType 0x56183504da90 'StringAccum'
|   | `-CXXRecord 0x561835275a30 'StringAccum'
|   `-ParenType 0x5618350bd1e0 'int () const' sugar
|     `-FunctionProtoType 0x561835090d70 'int () const' const cdecl
|       `-BuiltinType 0x561834d8d580 'int'
|-CXXConstructorDecl 0x561835275e60 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x561835275fb0 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x561835275f20 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x561835276100 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x561835276070 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x5618352762a8 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x5618352761e8 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x561835276458 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x561835276398 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x561835276550 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x561835276708 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x561835276640 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x561835276888 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x5618352767c0 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x561835276980 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x561835276a48 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x561835276b10 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x561835276bd8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x561835276ca0 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x561835276e08 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561835276ed8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561835276f98 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5618352770a8 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x5618352771b8 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x561835277278 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x561835277338 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x561835277480 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5618352773f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x561835277610 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x561835277540 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5618352776d8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5618352777d0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x561835277890 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x561835277958 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x561835277a18 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x561835277ad8 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x561835277b98 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561835277ce8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x561835277c50 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x561835277e38 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x561835277da8 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x561835277f90 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x561835277ef8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x5618352780e0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x561835278050 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x561835278300 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x5618352781a0 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x561835278220 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x56183532cf98 <col:53> 'int' 0
|-CXXMethodDecl 0x561835278458 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x5618352783c8 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x56183532cfb8 <col:34> 'int' 1
|-CXXMethodDecl 0x5618352785a0 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x561835278510 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5618352786f0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x561835278660 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x561835278840 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x5618352787b0 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x561835278990 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x561835278900 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x561835278b68 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x561835278a50 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561835278ad0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561835278d48 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x561835278c30 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x561835278cb0 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x56183532ac68 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561835278e10 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56183532abd0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56183532ae48 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56183532ad30 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x56183532adb0 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x56183532b028 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56183532af10 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56183532af90 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56183532b388 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x56183532b170 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56183532b1f0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56183532cfd8 <col:56> 'int' 10
| `-ParmVarDecl 0x56183532b268 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56183532cff8 <col:77> 'bool' true
|-CXXMethodDecl 0x56183532b6e8 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x56183532b4d0 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56183532b550 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x56183532d008 <col:57> 'int' 10
| `-ParmVarDecl 0x56183532b5c8 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56183532d028 <col:78> 'bool' true
|-CXXMethodDecl 0x56183532b910 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x56183532b7b8 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x56183532b838 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x56183532b9e0 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x56183532bb58 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x56183532ba90 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x56183532bca8 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x56183532bc18 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x56183532bd50 <col:51> "" ""
|-AccessSpecDecl 0x56183532bdc0 <line:106:3, col:10> col:3 private
|-EnumDecl 0x56183532bde8 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x56183532bf38 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x56183532bf88 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56183532bf18 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x56183532bee8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x5618350c5f48 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x56183532bfa0 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56183532c0b8 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x56183532c160 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x56183532c1c8 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x56183532c230 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x56183532c2e0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x56183532c160 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x56183532d160 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x56183532d118 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x56183532d0e0 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x56183532d0c8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x56183532d070 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x5618350e31d0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x56183532c1c8 'len' 'int'
| | | `-IntegerLiteral 0x56183532d1d8 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x56183532c230 'cap' 'int'
| | | `-IntegerLiteral 0x56183532d240 <col:20> 'int' 0
| | `-CompoundStmt 0x56183532d2c0 <col:23, line:119:2>
| |-CXXConstructorDecl 0x56183532c458 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x56183532c398 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x56183532d2d0 <col:37, line:121:2>
| |-CXXConstructorDecl 0x56183532f4e8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56183532f5f8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x56183532c160 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x561835330fb0 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x561835330f80 <col:12> 'unsigned char *const' lvalue .s 0x56183532c160
| | |     `-DeclRefExpr 0x561835330f60 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56183532f5f8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x56183532c1c8 'len' 'int'
| | | `-ImplicitCastExpr 0x561835331040 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x561835331010 <col:12> 'const int' lvalue .len 0x56183532c1c8
| | |     `-DeclRefExpr 0x561835330ff0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56183532f5f8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x56183532c230 'cap' 'int'
| | | `-ImplicitCastExpr 0x5618353310d0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5618353310a0 <col:12> 'const int' lvalue .cap 0x56183532c230
| | |     `-DeclRefExpr 0x561835331080 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x56183532f5f8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x561835331128 <col:12>
| |-CXXConstructorDecl 0x56183532f698 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x56183532f698
| | `-ParmVarDecl 0x56183532f7a8 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x5618353313e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x56183532c530 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x56183532c630 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x56183532c598 <col:16> col:19 'int'
|-CXXMethodDecl 0x56183532c810 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x56183532c6f0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x56183532c770 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x56183532c9f0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x56183532c8d8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56183532c958 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56183532cb48 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x56183532cab8 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x56183532cc98 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x56183532cc08 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x56183532cf58 <line:132:5, col:70> col:25
  `-FunctionDecl 0x56183532ce98 parent 0x561834d8d488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x56183532cd50 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x56183532cdc8 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct IPRoute
         0 |   class IPAddress addr
         0 |     uint32_t _addr
         4 |   class IPAddress mask
         4 |     uint32_t _addr
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int32_t port
        16 |   int32_t extra
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56183530a6e8 <../elements/ip/iproutetable.hh:163:1, line:186:1> line:163:8 referenced struct IPRoute definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56183530a808 <col:1, col:8> col:8 implicit referenced struct IPRoute
|-FieldDecl 0x56183530a8a8 <line:164:5, col:15> col:15 referenced addr 'IPAddress'
|-FieldDecl 0x56183530a908 <line:165:5, col:15> col:15 referenced mask 'IPAddress'
|-FieldDecl 0x56183530a968 <line:166:5, col:15> col:15 referenced gw 'IPAddress'
|-FieldDecl 0x56183530a9c8 <line:167:5, col:13> col:13 referenced port 'int32_t':'int'
|-FieldDecl 0x56183530aa28 <line:168:5, col:13> col:13 referenced extra 'int32_t':'int'
|-CXXConstructorDecl 0x56183530aae0 <line:170:5, col:28> col:5 IPRoute 'void ()'
| |-CXXCtorInitializer Field 0x56183530a8a8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x56183530bc10 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56183530a908 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x56183530bc60 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56183530a968 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x56183530bcb0 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56183530a9c8 'port' 'int32_t':'int'
| | `-UnaryOperator 0x56183530bbb0 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x56183530bb90 <col:23> 'int' 1
| `-CompoundStmt 0x56183530bd20 <col:26, col:28>
|-CXXConstructorDecl 0x56183530adf8 <line:171:5, line:172:42> line:171:5 used IPRoute 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x56183530ab98 <col:13, col:23> col:23 used a 'IPAddress'
| |-ParmVarDecl 0x56183530ac10 <col:26, col:36> col:36 used m 'IPAddress'
| |-ParmVarDecl 0x56183530ac88 <col:39, col:49> col:49 used g 'IPAddress'
| |-ParmVarDecl 0x56183530ad08 <col:52, col:56> col:56 used p 'int'
| |-CXXCtorInitializer Field 0x56183530a8a8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x56183530be80 <line:172:7, col:13> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56183530bd70 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56183530bd30 <col:12> 'IPAddress' lvalue ParmVar 0x56183530ab98 'a' 'IPAddress'
| |-CXXCtorInitializer Field 0x56183530a908 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x56183530bf30 <col:16, col:22> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56183530bf18 <col:21> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56183530bed8 <col:21> 'IPAddress' lvalue ParmVar 0x56183530ac10 'm' 'IPAddress'
| |-CXXCtorInitializer Field 0x56183530a968 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x56183530bfe0 <col:25, col:29> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56183530bfc8 <col:28> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56183530bf88 <col:28> 'IPAddress' lvalue ParmVar 0x56183530ac88 'g' 'IPAddress'
| |-CXXCtorInitializer Field 0x56183530a9c8 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x56183530c078 <col:37> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x56183530c038 <col:37> 'int' lvalue ParmVar 0x56183530ad08 'p' 'int'
| `-CompoundStmt 0x56183530c0d8 <col:40, col:42>
|-CXXMethodDecl 0x56183530af08 <line:174:5, col:69> col:17 real 'bool () const' inline
| `-CompoundStmt 0x56183530c1f8 <col:30, col:69>
|   `-ReturnStmt 0x56183530c1e8 <col:32, col:57>
|     `-BinaryOperator 0x56183530c1c8 <col:39, col:57> 'bool' '>'
|       |-ImplicitCastExpr 0x56183530c1b0 <col:39> 'int32_t':'int' <LValueToRValue>
|       | `-MemberExpr 0x56183530c0f8 <col:39> 'const int32_t':'const int' lvalue ->port 0x56183530a9c8
|       |   `-CXXThisExpr 0x56183530c0e8 <col:39> 'const IPRoute *' implicit this
|       `-CStyleCastExpr 0x56183530c188 <col:46, col:57> 'int32_t':'int' <NoOp>
|         `-ImplicitCastExpr 0x56183530c170 <col:56, col:57> 'int32_t':'int' <IntegralCast> part_of_explicit_cast
|           `-UnaryOperator 0x56183530c148 <col:56, col:57> 'unsigned int' prefix '-'
|             `-IntegerLiteral 0x56183530c128 <col:57> 'unsigned int' 2147483648
|-CXXMethodDecl 0x56183530afc8 <line:175:5, col:76> col:17 kill 'void ()' inline
| `-CompoundStmt 0x56183530ca20 <col:24, col:76>
|   |-ExprWithCleanups 0x56183530c828 <col:26, col:33> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x56183530c7f0 <col:26, col:33> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x56183530c7d8 <col:31> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56183530c5c8 <col:31> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x56183530c3e8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x56183530c220 <col:26> 'IPAddress' lvalue ->addr 0x56183530a8a8
|   |   | `-CXXThisExpr 0x56183530c210 <col:26> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x56183530c5b0 <col:33> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x56183530c580 <col:33> 'IPAddress' 'void (unsigned int)'
|   |       `-ImplicitCastExpr 0x56183530c568 <col:33> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x56183530c250 <col:33> 'int' 0
|   |-ExprWithCleanups 0x56183530c958 <col:36, col:43> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x56183530c920 <col:36, col:43> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x56183530c908 <col:41> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56183530c8e8 <col:41> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x56183530c3e8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x56183530c850 <col:36> 'IPAddress' lvalue ->mask 0x56183530a908
|   |   | `-CXXThisExpr 0x56183530c840 <col:36> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x56183530c8d0 <col:43> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x56183530c8a0 <col:43> 'IPAddress' 'void (unsigned int)'
|   |       `-IntegerLiteral 0x56183530c880 <col:43> 'unsigned int' 4294967295
|   `-BinaryOperator 0x56183530ca00 <col:56, col:64> 'int32_t':'int' lvalue '='
|     |-MemberExpr 0x56183530c980 <col:56> 'int32_t':'int' lvalue ->port 0x56183530a9c8
|     | `-CXXThisExpr 0x56183530c970 <col:56> 'IPRoute *' implicit this
|     `-ImplicitCastExpr 0x56183530c9e8 <col:63, col:64> 'int32_t':'int' <IntegralCast>
|       `-UnaryOperator 0x56183530c9d0 <col:63, col:64> 'unsigned int' prefix '-'
|         `-IntegerLiteral 0x56183530c9b0 <col:64> 'unsigned int' 2147483648
|-CXXMethodDecl 0x56183530b108 <line:176:5, col:39> col:17 contains 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56183530b078 <col:26, col:36> col:36 a 'IPAddress'
|-CXXMethodDecl 0x56183530b2a8 <line:177:5, col:44> col:17 contains 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x56183530b1e8 <col:26, col:41> col:41 r 'const IPRoute &'
|-CXXMethodDecl 0x56183530b3f0 <line:178:5, col:47> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56183530b360 <col:34, col:44> col:44 m 'IPAddress'
|-CXXMethodDecl 0x56183530b538 <line:179:5, col:52> col:17 mask_as_specific 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x56183530b4a8 <col:34, col:49> col:49 r 'const IPRoute &'
|-CXXMethodDecl 0x56183530b680 <line:180:5, col:41> col:17 match 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x56183530b5f0 <col:23, col:38> col:38 r 'const IPRoute &'
|-CXXMethodDecl 0x56183530b750 <line:181:5, col:64> col:9 prefix_len 'int () const'
| `-CompoundStmt 0x56183530cae8 <col:28, col:64>
|   `-ReturnStmt 0x56183530cad8 <col:30, col:61>
|     `-CXXMemberCallExpr 0x56183530cab8 <col:37, col:61> 'int'
|       `-MemberExpr 0x56183530ca88 <col:37, col:42> '<bound member function type>' .mask_to_prefix_len 0x5618350f5500
|         `-MemberExpr 0x56183530ca58 <col:37> 'const IPAddress' lvalue ->mask 0x56183530a908
|           `-CXXThisExpr 0x56183530ca48 <col:37> 'const IPRoute *' implicit this
|-CXXMethodDecl 0x56183530b948 <line:183:5, col:51> col:18 used unparse 'StringAccum &(StringAccum &, bool) const'
| |-ParmVarDecl 0x56183530b800 <col:26, col:37> col:38 'StringAccum &'
| `-ParmVarDecl 0x56183530b878 <col:40, col:45> col:45 tabs 'bool'
|-CXXMethodDecl 0x56183530ba18 <line:184:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56183530bad8 <line:185:5, col:72> col:12 unparse_addr 'String () const'
| `-CompoundStmt 0x56183530cca0 <col:33, col:72>
|   `-ReturnStmt 0x56183530cc90 <col:35, col:69>
|     `-ExprWithCleanups 0x56183530cc78 <col:42, col:69> 'String'
|       `-CXXConstructExpr 0x56183530cc48 <col:42, col:69> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56183530cc30 <col:42, col:69> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56183530cc10 <col:42, col:69> 'String' (CXXTemporary 0x56183530cc10)
|             `-CXXMemberCallExpr 0x56183530cbb0 <col:42, col:69> 'String'
|               |-MemberExpr 0x56183530cb40 <col:42, col:47> '<bound member function type>' .unparse_with_mask 0x5618350f60f8
|               | `-MemberExpr 0x56183530cb10 <col:42> 'const IPAddress' lvalue ->addr 0x56183530a8a8
|               |   `-CXXThisExpr 0x56183530cb00 <col:42> 'const IPRoute *' implicit this
|               `-CXXConstructExpr 0x56183530cbd8 <col:65> 'IPAddress' 'void (const IPAddress &) noexcept'
|                 `-MemberExpr 0x56183530cb80 <col:65> 'const IPAddress' lvalue ->mask 0x56183530a908
|                   `-CXXThisExpr 0x56183530cb70 <col:65> 'const IPRoute *' implicit this
|-CXXConstructorDecl 0x56183533e400 <line:163:8> col:8 implicit constexpr IPRoute 'void (const IPRoute &)' inline default trivial noexcept-unevaluated 0x56183533e400
| `-ParmVarDecl 0x56183533e518 <col:8> col:8 'const IPRoute &'
|-CXXConstructorDecl 0x56183533e5b8 <col:8> col:8 implicit used constexpr IPRoute 'void (IPRoute &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56183533e6c8 <col:8> col:8 used 'IPRoute &&'
| |-CXXCtorInitializer Field 0x56183530a8a8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x56183546c6b0 <col:8> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x56183546c680 <col:8> 'IPAddress' xvalue .addr 0x56183530a8a8
| |     `-CXXStaticCastExpr 0x56183546c650 <col:8> 'IPRoute' xvalue static_cast<struct IPRoute &&> <NoOp>
| |       `-DeclRefExpr 0x56183546c620 <col:8> 'IPRoute' lvalue ParmVar 0x56183533e6c8 '' 'IPRoute &&'
| |-CXXCtorInitializer Field 0x56183530a908 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x56183546c798 <col:8> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x56183546c768 <col:8> 'IPAddress' xvalue .mask 0x56183530a908
| |     `-CXXStaticCastExpr 0x56183546c738 <col:8> 'IPRoute' xvalue static_cast<struct IPRoute &&> <NoOp>
| |       `-DeclRefExpr 0x56183546c708 <col:8> 'IPRoute' lvalue ParmVar 0x56183533e6c8 '' 'IPRoute &&'
| |-CXXCtorInitializer Field 0x56183530a968 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x56183546c880 <col:8> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x56183546c850 <col:8> 'IPAddress' xvalue .gw 0x56183530a968
| |     `-CXXStaticCastExpr 0x56183546c820 <col:8> 'IPRoute' xvalue static_cast<struct IPRoute &&> <NoOp>
| |       `-DeclRefExpr 0x56183546c7f0 <col:8> 'IPRoute' lvalue ParmVar 0x56183533e6c8 '' 'IPRoute &&'
| |-CXXCtorInitializer Field 0x56183530a9c8 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x56183546c968 <col:8> 'int32_t':'int' <LValueToRValue>
| |   `-MemberExpr 0x56183546c938 <col:8> 'int32_t':'int' xvalue .port 0x56183530a9c8
| |     `-CXXStaticCastExpr 0x56183546c908 <col:8> 'IPRoute' xvalue static_cast<struct IPRoute &&> <NoOp>
| |       `-DeclRefExpr 0x56183546c8d8 <col:8> 'IPRoute' lvalue ParmVar 0x56183533e6c8 '' 'IPRoute &&'
| |-CXXCtorInitializer Field 0x56183530aa28 'extra' 'int32_t':'int'
| | `-ImplicitCastExpr 0x56183546ca38 <col:8> 'int32_t':'int' <LValueToRValue>
| |   `-MemberExpr 0x56183546ca08 <col:8> 'int32_t':'int' xvalue .extra 0x56183530aa28
| |     `-CXXStaticCastExpr 0x56183546c9d8 <col:8> 'IPRoute' xvalue static_cast<struct IPRoute &&> <NoOp>
| |       `-DeclRefExpr 0x56183546c9a8 <col:8> 'IPRoute' lvalue ParmVar 0x56183533e6c8 '' 'IPRoute &&'
| `-CompoundStmt 0x56183546caa0 <col:8>
`-CXXDestructorDecl 0x56183546c4f0 <col:8> col:8 implicit referenced ~IPRoute 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  NonVirtualBaseLLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618354448f0 prev 0x5618352f1b10 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618354449e8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x561835444a78 <col:22, col:28> col:22 public
|-EnumDecl 0x561835444aa0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x561835444bb8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444b98 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x561835444b80 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561835444b60 <col:14> 'int' 999
| |-EnumConstantDecl 0x561835444c60 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444c40 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x561835444c28 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561835444c08 <col:14> 'int' 1
| |-EnumConstantDecl 0x561835444cf0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444cd0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x561835444cb0 <col:17> 'int' 0
| |-EnumConstantDecl 0x561835444d80 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444d60 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x561835444d40 <col:13> 'int' 1
| |-EnumConstantDecl 0x561835444e10 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444df0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x561835444dd0 <col:16> 'int' 2
| |-EnumConstantDecl 0x561835444ea0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444e80 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x561835444e60 <col:13> 'int' 3
| |-EnumConstantDecl 0x561835444f30 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444f10 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x561835444ef0 <col:15> 'int' 4
| |-EnumConstantDecl 0x561835444fc0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835444fa0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x561835444f80 <col:14> 'int' 5
| |-EnumConstantDecl 0x561835445050 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x561835445030 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x561835445010 <col:12> 'int' 6
| `-EnumConstantDecl 0x5618354450e0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5618354450c0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5618354450a0 <col:13> 'int' 7
|-VarDecl 0x561835445150 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5618354451d8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x561835445260 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5618354452e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x561835445370 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5618354453f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x561835445480 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x561835445508 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x561835445590 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x561835445618 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5618354456a0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5618354457a0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56183545aba8 '_nerrors' 'int'
| | `-IntegerLiteral 0x56183545b338 <line:128:13> 'int' 0
| `-CompoundStmt 0x56183545b3a8 <col:16, line:129:5>
|-CXXDestructorDecl 0x561835445890 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56183545b3b8 <col:29, line:132:5>
|-CXXMethodDecl 0x561835445a48 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x561835445980 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561835445b10 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561835445bf8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56183545b410 <col:44, line:161:5>
|   `-ReturnStmt 0x56183545b400 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56183545b3e8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56183545b3c8 <col:9> 'ErrorHandler *' lvalue Var 0x56183545ac08 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x561835445d38 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x561835445ca8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561835445e00 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56183545b470 <col:43, line:173:5>
|   `-ReturnStmt 0x56183545b460 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56183545b448 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56183545b428 <col:9> 'ErrorHandler *' lvalue Var 0x56183545ac80 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x561835455f00 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x561835455f80 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x561835456090 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x561835456000 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5618354561e0 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x561835456150 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x561835456338 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5618354562a0 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x561835456490 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x5618354563f8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5618354565e8 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x561835456550 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561835456800 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5618354566a0 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x561835456720 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5618354569d8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5618354568c0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x561835456940 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x561835456bf8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561835456a98 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x561835456b18 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x561835456dd8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561835456cb8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561835456d38 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561835456fb8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561835456e98 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561835456f18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561835457140 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x561835457078 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x561835457310 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5618354571f8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561835457270 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56183545b6c8 <col:57, line:234:5>
|   `-ReturnStmt 0x56183545b6b8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56183545b6a0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56183545b648 <col:9, col:41> 'int'
|         |-MemberExpr 0x56183545b618 <col:9> '<bound member function type>' ->xmessage 0x561835457140
|         | `-CXXThisExpr 0x56183545b608 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56183545b688 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56183545b670 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56183545b5e8 <col:18, col:40> 'String' (CXXTemporary 0x56183545b5e8)
|               `-CallExpr 0x56183545b5b0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56183545b598 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56183545b510 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561835459398 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56183545b530 <col:31> 'const String' lvalue ParmVar 0x561835457270 'str' 'const String &'
|                 `-DeclRefExpr 0x56183545b550 <col:36> 'const String' lvalue ParmVar 0x5618354571f8 'anno' 'const String &'
|-CXXMethodDecl 0x561835457650 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5618354573d0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561835457450 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x561835457520 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56183545b958 <col:68, line:243:5>
|   `-ReturnStmt 0x56183545b948 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56183545b930 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56183545b8d0 <col:9, col:41> 'int'
|         |-MemberExpr 0x56183545b8a0 <col:9> '<bound member function type>' ->xmessage 0x561835457310
|         | `-CXXThisExpr 0x56183545b890 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56183545b768 <col:18> 'const String' lvalue ParmVar 0x5618354573d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56183545b918 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56183545b900 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56183545b870 <col:24, col:40> 'String' (CXXTemporary 0x56183545b870)
|               `-CXXMemberCallExpr 0x56183545b808 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56183545b798 <col:24> '<bound member function type>' ->vformat 0x561835458830
|                 | `-CXXThisExpr 0x56183545b788 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56183545b838 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56183545b7c8 <col:32> 'const char *' lvalue ParmVar 0x561835457450 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56183545b850 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56183545b7e8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561835457520 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5618354578f0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x561835457718 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561835457790 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561835457808 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56183545bc98 <col:23, line:254:5>
|   `-ReturnStmt 0x56183545bc88 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56183545bc70 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56183545bc10 <col:9, col:71> 'int'
|         |-MemberExpr 0x56183545bbe0 <col:9> '<bound member function type>' ->xmessage 0x561835457310
|         | `-CXXThisExpr 0x56183545bbd0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56183545bc58 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56183545bc40 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56183545bb90 <col:18, col:65> 'String' (CXXTemporary 0x56183545bb90)
|         |     `-CallExpr 0x56183545bb28 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56183545bb10 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56183545b9f8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561835459398 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56183545ba18 <col:31> 'const String' lvalue ParmVar 0x561835457790 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56183545bb70 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56183545bb58 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56183545baf0 <col:37, col:64> 'String' (CXXTemporary 0x56183545baf0)
|         |             `-CallExpr 0x56183545bac0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56183545baa8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56183545ba38 <col:37> 'String (const String &)' lvalue CXXMethod 0x5618354599e8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56183545ba58 <col:56> 'const String' lvalue ParmVar 0x561835457718 'landmark' 'const String &'
|         `-DeclRefExpr 0x56183545bbb0 <col:68> 'const String' lvalue ParmVar 0x561835457808 'str' 'const String &'
|-CXXMethodDecl 0x561835457c70 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5618354579b8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561835457a30 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561835457ab0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x561835457b28 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56183545bf50 <col:34, line:267:5>
|   `-ReturnStmt 0x56183545bf40 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56183545bf28 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56183545bec0 <col:9, col:51> 'int'
|         |-MemberExpr 0x56183545be90 <col:9> '<bound member function type>' ->xmessage 0x5618354578f0
|         | `-CXXThisExpr 0x56183545be80 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56183545bd38 <col:18> 'const String' lvalue ParmVar 0x5618354579b8 'landmark' 'const String &'
|         |-DeclRefExpr 0x56183545bd58 <col:28> 'const String' lvalue ParmVar 0x561835457a30 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56183545bf10 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56183545bef8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56183545be60 <col:34, col:50> 'String' (CXXTemporary 0x56183545be60)
|               `-CXXMemberCallExpr 0x56183545bdf8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56183545bd88 <col:34> '<bound member function type>' ->vformat 0x561835458830
|                 | `-CXXThisExpr 0x56183545bd78 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56183545be28 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56183545bdb8 <col:42> 'const char *' lvalue ParmVar 0x561835457ab0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56183545be40 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56183545bdd8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561835457b28 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561835457d80 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56183545bfd0 <col:25, line:288:5>
|   `-ReturnStmt 0x56183545bfc0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56183545bfa8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56183545bf78 <col:9> 'const int' lvalue ->_nerrors 0x56183545aba8
|         `-CXXThisExpr 0x56183545bf68 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x561835457f90 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x561835457e38 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x561835457eb8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x561835458278 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561835458058 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5618354580d8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x561835458150 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561835458410 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x561835458348 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x561835458658 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5618354584d0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x561835458548 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56183545c230 <col:58, line:357:5>
|   `-ReturnStmt 0x56183545c220 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56183545c208 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56183545c1d8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56183545c1c0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56183545c1a0 <col:9, col:29> 'String' (CXXTemporary 0x56183545c1a0)
|             `-CallExpr 0x56183545c130 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56183545c118 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56183545c098 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x561835458278 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56183545c038 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56183545c168 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56183545c058 <col:21> 'const char *' lvalue ParmVar 0x5618354584d0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56183545c180 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56183545c078 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561835458548 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561835458830 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x561835458720 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x561835458798 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561835458988 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5618354588f8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x561835458b08 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x561835458a40 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x561835458da0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x561835458bc0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x561835458c40 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x561835458cb8 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x561835458f00 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x561835458e70 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56183545c348 <col:37, line:441:5>
|   `-IfStmt 0x56183545c330 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56183545c2b8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56183545c288 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56183545c248 <col:6> 'int' lvalue ParmVar 0x561835458e70 'level' 'int'
|     | `-ImplicitCastExpr 0x56183545c2a0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56183545c268 <col:15> 'ErrorHandler::Level' EnumConstant 0x561835444ea0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56183545c318 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56183545c2e8 <col:8> 'int' lvalue ->_nerrors 0x56183545aba8
|         `-CXXThisExpr 0x56183545c2d8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x561835458fc8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x56183545c3e0 <col:26, line:448:5>
|   `-BinaryOperator 0x56183545c3c0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56183545c370 <col:2> 'int' lvalue ->_nerrors 0x56183545aba8
|     | `-CXXThisExpr 0x56183545c360 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56183545c3a0 <col:13> 'int' 0
|-CXXMethodDecl 0x561835459190 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x561835459080 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5618354590f8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x561835459398 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x561835459250 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5618354592c8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x561835459648 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x561835459458 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5618354594d8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x561835459558 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x561835459700 <col:59> 0 0
|-CXXMethodDecl 0x561835459898 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x561835459778 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5618354597f8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56183545ca50 <col:70, line:534:5>
|   |-DeclStmt 0x56183545c550 <line:528:2, col:20>
|   | |-VarDecl 0x56183545c408 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56183545c470 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56183545c4a8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56183545c510 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56183545c620 <line:529:2, col:23>
|   | `-VarDecl 0x56183545c580 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56183545c608 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56183545c5e8 <col:18> 'const char *' lvalue ParmVar 0x561835459778 'begin' 'const char *'
|   |-DoStmt 0x56183545c9e8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56183545c918 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56183545c900 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56183545c8e0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56183545c638 <col:6> 'const char *' lvalue Var 0x56183545c580 'x' 'const char *'
|   | |     `-CallExpr 0x56183545c830 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56183545c818 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56183545c7d0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56183545b080 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56183545c898 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56183545c880 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56183545c6f0 <col:20, col:27> 'String' (CXXTemporary 0x56183545c6f0)
|   | |       |     `-CXXTemporaryObjectExpr 0x56183545c6b8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56183545c8b0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56183545c710 <col:30> 'const char *' lvalue Var 0x56183545c580 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56183545c8c8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56183545c730 <col:33> 'const char *' lvalue ParmVar 0x5618354597f8 'end' 'const char *'
|   | |       |-UnaryOperator 0x56183545c770 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56183545c750 <col:39> 'String' lvalue Var 0x56183545c408 'name' 'String'
|   | |       |-UnaryOperator 0x56183545c7a8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56183545c788 <col:46> 'String' lvalue Var 0x56183545c4a8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56183545c7c0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56183545c9d0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56183545c9b8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56183545c998 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56183545c968 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5618350c06e8
|   |         `-ImplicitCastExpr 0x56183545c950 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56183545c930 <col:11> 'String' lvalue Var 0x56183545c408 'name' 'String'
|   `-ReturnStmt 0x56183545ca40 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56183545ca28 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56183545ca08 <col:9> 'const char *' lvalue Var 0x56183545c580 'x' 'const char *'
|-CXXMethodDecl 0x5618354599e8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x561835459958 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56183545d058 <col:55, line:550:5>
|   `-IfStmt 0x56183545d030 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56183545cc90 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56183545cc78 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56183545cc60 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56183545cc40 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56183545cc10 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5618350c06e8
|     | |       `-DeclRefExpr 0x56183545cab0 <col:6> 'const String' lvalue ParmVar 0x561835459958 'x' 'const String &'
|     | `-BinaryOperator 0x56183545cbf0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56183545cbc0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56183545cb70 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56183545cb58 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56183545cb10 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5618350d9f20 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56183545cad0 <col:11> 'const String' lvalue ParmVar 0x561835459958 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56183545caf0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56183545cbd8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56183545cba8 <col:19> 'char' 123
|     |-ReturnStmt 0x56183545cd00 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56183545ccd0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56183545ccb0 <col:13> 'const String' lvalue ParmVar 0x561835459958 'x' 'const String &'
|     `-IfStmt 0x56183545d008 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56183545cd98 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56183545cd80 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56183545cd60 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56183545cd30 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5618350c06e8
|       |       `-DeclRefExpr 0x56183545cd10 <col:11> 'const String' lvalue ParmVar 0x561835459958 'x' 'const String &'
|       |-ReturnStmt 0x56183545cf20 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56183545cf08 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56183545ced8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56183545cec0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56183545cea0 <col:13, col:29> 'String' (CXXTemporary 0x56183545cea0)
|       |         `-CallExpr 0x56183545ce50 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56183545ce38 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56183545cdb0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x561835459190 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56183545ce80 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56183545cdd0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56183545cdf0 <col:28> 'const String' lvalue ParmVar 0x561835459958 'x' 'const String &'
|       `-ReturnStmt 0x56183545cff8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56183545cfe0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56183545cfb0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56183545cf98 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56183545cf78 <col:13, col:20> 'String' (CXXTemporary 0x56183545cf78)
|                 `-CXXTemporaryObjectExpr 0x56183545cf40 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x561835459be8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x561835459aa0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x561835459b18 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56183545b328 <col:71> 'bool' false
|-CXXRecordDecl 0x561835459c98 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x561835459f98 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x561835459f30 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x561835459ed0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x561835459e90 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5618350bcf80 'String'
|       | `-CXXRecord 0x5618350bcef0 'String'
|       |-BuiltinType 0x561834d8d580 'int'
|       `-DecayedType 0x5618354574f0 '__va_list_tag *' sugar
|         |-TypedefType 0x5618354574c0 'va_list' sugar
|         | |-Typedef 0x561834fae030 'va_list'
|         | `-TypedefType 0x561834fadfe0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x561834ee5c08 '__gnuc_va_list'
|         |   `-TypedefType 0x561834ee5b70 '__builtin_va_list' sugar
|         |     |-Typedef 0x561834dced38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x561834dcece0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x561834d8e2d0 '__va_list_tag'
|         |         `-CXXRecord 0x561834d8e238 '__va_list_tag'
|         `-PointerType 0x561834fb38d0 '__va_list_tag *'
|           `-RecordType 0x561834d8e2d0 '__va_list_tag'
|             `-CXXRecord 0x561834d8e238 '__va_list_tag'
|-EnumDecl 0x561835459ff0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56183545a0f0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a650 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a0d0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56183545a0b0 <col:16> 'int' 1
| |-EnumConstantDecl 0x56183545a180 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a668 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a160 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56183545a140 <col:21> 'int' 2
| |-EnumConstantDecl 0x56183545a210 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a680 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a1f0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56183545a1d0 <col:22> 'int' 4
| |-EnumConstantDecl 0x56183545a2a0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a698 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a280 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56183545a260 <col:17> 'int' 8
| |-EnumConstantDecl 0x56183545a330 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a6b0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a310 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56183545a2f0 <col:22> 'int' 16
| |-EnumConstantDecl 0x56183545a3c0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a6c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a3a0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56183545a380 <col:19> 'int' 32
| |-EnumConstantDecl 0x56183545a450 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a6e0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a430 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56183545a410 <col:17> 'int' 64
| |-EnumConstantDecl 0x56183545a4e0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a6f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a4c0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56183545a4a0 <col:14> 'int' 128
| |-EnumConstantDecl 0x56183545a570 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56183545a710 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183545a550 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56183545a530 <col:16> 'int' 256
| `-EnumConstantDecl 0x56183545a600 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56183545a728 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56183545a5e0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56183545a5c0 <col:12> 'int' 1024
|-CXXMethodDecl 0x56183545a938 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56183545a750 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56183545a7f0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56183545aac0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56183545a9f8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56183545ab68 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56183545aba8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56183545ac08 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56183545ac80 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56183545b080 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56183545acf8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56183545ad78 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56183545adf8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56183545ae70 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56183545aee8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56183545af60 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56183545b1a8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56183545b1a8
| `-ParmVarDecl 0x56183545b2b8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56183545d3b8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56183545d3b8
  `-ParmVarDecl 0x56183545d4c8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352fece8 prev 0x5618352f6488 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618352fede0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5618352fee70 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5618352feee8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5618352fefa8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5618352ff070 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5618352ff1e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5618352ff120 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5618352ff290 <col:24>
| `-OptimizeNoneAttr 0x5618352ff2e8 <col:34>
|-CXXMethodDecl 0x5618352ff330 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5618352ff5e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5618352ff3e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5618352ff458 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5618352ff4d8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5618352ff6a0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5618352ff6d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5618352ff740 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5618352ff7c8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5618352ffae8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5618352ff880 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5618352ff8f8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5618352ff970 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5618352ff9f0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5618352ffc00 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x561835307578 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561835307578
| `-ParmVarDecl 0x561835307688 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x561835307728 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561835307728
| `-ParmVarDecl 0x561835307838 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5618354f2638 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618350b0590 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618350b06a8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5618350b0738 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5618350b0808 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5618350b08f0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5618350b0b08 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5618350b09b0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b0cb8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5618350b0bc0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5618350b0e00 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5618350b0d70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5618350b0f48 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5618350b0eb8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b1090 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5618350b1000 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b1158 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x5618350b12a0 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x5618350b1210 <col:28> col:31 'int'
|-CXXMethodDecl 0x5618350b1368 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x5618350b14b0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5618350b1420 <col:28> col:31 'int'
|-CXXMethodDecl 0x5618350b1628 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5618350b1568 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b1770 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5618350b16e0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b1838 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5618350b19f8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5618350b18e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5618350b1960 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b1c48 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5618350b1ab8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618350b1b30 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5618350b1cf8 <col:86> "" ""
|-CXXMethodDecl 0x5618350b1f68 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5618350b1dd8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5618350b1e50 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b2118 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5618350b2028 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5618350b22c8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5618350b21d0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5618350b2598 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5618350b2380 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5618350b23f8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5618350b2470 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b2878 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5618350b2660 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5618350b26d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618350b2750 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5618350b2930 <col:115> "" ""
|-AccessSpecDecl 0x5618350b29a0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5618350b29d8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618350b3ef0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5618350b3ef0
| `-ParmVarDecl 0x5618350b3ff8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5618350b4098 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5618350b4098
| `-ParmVarDecl 0x5618350b41a8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5618350e97d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5618352db7f0 <col:7>
|-CXXConstructorDecl 0x5618350e98b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5618350e98b0
| `-ParmVarDecl 0x5618350e99c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5618350e9a38 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5618350e9a38
| `-ParmVarDecl 0x5618350e9b48 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5618352de1f0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183536daf0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x56183536dcc8 prev 0x56183536daf0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56183536dd58 <col:46, col:52> col:46 public
|-TypedefDecl 0x56183536dd80 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183536ff90 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x56183536ff40 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x56183536e230 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x56183536e130 'type'
|     `-TemplateSpecializationType 0x56183536e0c0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56183536dfa0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x56183536df80 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56183536df60 <col:24> 'unsigned long' 8
|       `-RecordType 0x56183536e0a0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x56183536dfc0 'char_array'
|-TypedefDecl 0x561835370048 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x561835370010 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x56183536fff0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x56183536ff90 'type'
|     `-ElaboratedType 0x56183536ff40 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x56183536e230 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x56183536e130 'type'
|         `-TemplateSpecializationType 0x56183536e0c0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56183536dfa0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x56183536df80 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56183536df60 <col:24> 'unsigned long' 8
|           `-RecordType 0x56183536e0a0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x56183536dfc0 'char_array'
|-CXXMethodDecl 0x5618353701c8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x5618353700d8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x5618353702b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561835370398 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561835370398
|-CXXMethodDecl 0x561835370668 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561835370570 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x5618353708a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561835370720 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835370798 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561835370a78 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561835370968 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353709e0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561835370bd8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561835370ca8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561835370ef8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561835370d68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561835370de0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561835371158 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x561835370fc8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561835371040 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561835371318 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561835371228 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x5618353714d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x5618353713e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561835371590 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561835371640 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561835371878 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x5618353716f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835371768 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561835371b18 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561835371a20 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x561835371be0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x561835371c30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561835371c80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353d91e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x5618353e5f58 prev 0x5618353d91e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5618353e6f70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x5618353e6f20 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x5618353e6f00 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x5618353e6db0 'type'
|     `-SubstTemplateTypeParmType 0x56183536d6c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x56183536d210 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56183536d128 'sized_array_memory'
|-FieldDecl 0x5618353e7070 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x5618353e70c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5618353e70f8 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-PointerType 0x5618352e8230 'Element *'
|     `-RecordType 0x5618352e7fb0 'Element'
|       `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e71b8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x5618353e7180 'Element *&'
|   `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x5618352e8230 'Element *'
|       `-RecordType 0x5618352e7fb0 'Element'
|         `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e7278 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x5618353e7240 'Element *const &'
|   `-QualType 0x5618353e5ff1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352e8230 'Element *'
|         `-RecordType 0x5618352e7fb0 'Element'
|           `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e7338 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x5618353e7300 'Element **'
|   `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x5618352e8230 'Element *'
|       `-RecordType 0x5618352e7fb0 'Element'
|         `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e73f8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x5618353e73c0 'Element *const *'
|   `-QualType 0x5618353e5ff1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352e8230 'Element *'
|         `-RecordType 0x5618352e7fb0 'Element'
|           `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e7fd0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x5618353e7f80 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x5618353e7f60 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x5618353e7ef0 'type'
|     `-SubstTemplateTypeParmType 0x5618353e7cb0 'Element *' sugar
|       |-TemplateTypeParmType 0x561835060bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835060b70 'T'
|       `-PointerType 0x5618352e8230 'Element *'
|         `-RecordType 0x5618352e7fb0 'Element'
|           `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e8038 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x5618353e7240 'Element *const &'
|   `-QualType 0x5618353e5ff1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352e8230 'Element *'
|         `-RecordType 0x5618352e7fb0 'Element'
|           `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e8090 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618353e80f8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x5618353e7300 'Element **'
|   `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x5618352e8230 'Element *'
|       `-RecordType 0x5618352e7fb0 'Element'
|         `-CXXRecord 0x5618352f1d00 'Element'
|-TypedefDecl 0x5618353e8160 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x5618353e73c0 'Element *const *'
|   `-QualType 0x5618353e5ff1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x5618353e5ff0 'Element *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352e8230 'Element *'
|         `-RecordType 0x5618352e7fb0 'Element'
|           `-CXXRecord 0x5618352f1d00 'Element'
|-EnumDecl 0x5618353e81b8 <line:134:5> col:5
| `-EnumConstantDecl 0x5618353e82b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5618353e8290 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5618353e8338 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5618353e85c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353e83f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353e8490 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x5618353e8858 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5618353e8740 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x5618353e8b18 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5618353e8a00 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5618353e8e30 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x5618353e8d10 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x5618353e9140 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x5618353e9020 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x5618353e9430 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353e9278 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353e92f0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5618353e9588 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5618353e9668 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353e96c0 <col:30> Inherited
|-CXXMethodDecl 0x5618353e9708 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x5618353e97b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353e9810 <col:30> Inherited
|-CXXMethodDecl 0x5618353e98d8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5618353e9988 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353e99e0 <col:30> Inherited
|-CXXMethodDecl 0x5618353e9a28 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5618353e9ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353e9b30 <col:30> Inherited
|-CXXMethodDecl 0x5618353edf10 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5618353edfc0 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353ee018 <col:30> Inherited
|-CXXMethodDecl 0x5618353ee060 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x5618353ee110 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353ee168 <col:30> Inherited
|-CXXMethodDecl 0x5618353ee190 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353ee240 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353ee2f0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5618353ee4b0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353ee3a0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353ee418 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5618353ee600 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5618353ee570 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353ee7a8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x5618353ee6b8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353ee860 <col:20>
| `-OptimizeNoneAttr 0x5618353ee8b8 <col:30>
|-CXXMethodDecl 0x5618353ee9d8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x5618353ee8e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353eea90 <col:20>
| `-OptimizeNoneAttr 0x5618353eeae8 <col:30>
|-CXXMethodDecl 0x5618353eeba0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353eeb10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353eece8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353eec58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353eee18 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x5618353eef48 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x5618353ef018 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x5618353ef0e8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x5618353ef228 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353ef198 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353ef370 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353ef2e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353ef4b8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x5618353ef428 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353ef570 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5618353ef670 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5618353ef5e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353ef728 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5618353ef7e8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x5618353ef8e8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x5618353efa68 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353ef9a8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x5618353f0228 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5618353efb20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x5618353f0188 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x5618353f0088 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x5618353f0308 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618353f0458 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353f03c8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5618353f0510 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5618353f0758 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353f05d0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5618353f0648 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x5618353f0918 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x5618353f0828 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5618353f0b68 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x5618353f09e0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x5618353f0a58 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x5618353f0c28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353f0e88 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x5618353f0d90 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x5618353f0f58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5618353f0f58

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353f2400 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5618353f25d8 prev 0x5618353f2400 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5618353f2668 <col:46, col:52> col:46 public
|-TypedefDecl 0x5618353f2690 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618353f3ff0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5618353f3fa0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5618353f3f80 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5618353f28a8 'type'
|     `-SubstTemplateTypeParmType 0x5618353f2870 'String' sugar
|       |-TemplateTypeParmType 0x561835080790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835080740 'T'
|       `-RecordType 0x5618350bcf80 'String'
|         `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f40a8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5618353f4070 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5618353f4050 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5618353f3ff0 'type'
|     `-ElaboratedType 0x5618353f3fa0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5618353f3f80 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5618353f28a8 'type'
|         `-SubstTemplateTypeParmType 0x5618353f2870 'String' sugar
|           |-TemplateTypeParmType 0x561835080790 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835080740 'T'
|           `-RecordType 0x5618350bcf80 'String'
|             `-CXXRecord 0x5618350bcef0 'String'
|-CXXMethodDecl 0x5618353f4228 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5618353f4138 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5618353f4318 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5618353f43f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5618353f43f8
|-CXXMethodDecl 0x5618353f46c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5618353f45d0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5618353f4908 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5618353f4780 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353f47f8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f4ad8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5618353f49c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353f4a40 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f4c38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5618353f4d08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5618353f4f58 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5618353f4dc8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5618353f4e40 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f51b8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5618353f5028 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5618353f50a0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f5378 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5618353f5288 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f5538 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5618353f5440 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f55f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618353f56a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353f58d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5618353f5750 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353f57c8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5618353f5b78 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5618353f5a80 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5618353f5c40 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5618353f5c90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5618353f5ce0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618352f4940 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5618353f11a8 prev 0x5618352f4940 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5618353f2370 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5618353f2320 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5618353f2300 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5618353f21b0 'type'
|     `-SubstTemplateTypeParmType 0x5618353f2040 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x561835056540 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5618350564e8 'F'
|       `-RecordType 0x5618353f1ca0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5618353f1bc0 'typed_array_memory'
|-FieldDecl 0x5618353f5d30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5618353f5d80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5618353f5db8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-RecordType 0x5618350bcf80 'String'
|     `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f5e48 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5618353f5e10 'String &'
|   `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618350bcf80 'String'
|       `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f7220 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5618353f5ea0 'const String &'
|   `-QualType 0x5618353f1241 'const String' const
|     `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618350bcf80 'String'
|         `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f72b8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5618353f7280 'String *'
|   `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618350bcf80 'String'
|       `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f7348 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5618353f7310 'const String *'
|   `-QualType 0x5618353f1241 'const String' const
|     `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618350bcf80 'String'
|         `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f7fa0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5618353f7f50 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5618353f7f30 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5618353f7e68 'type'
|     `-LValueReferenceType 0x5618353f7e30 'const String &'
|       `-QualType 0x5618353f7bd1 'const String' const
|         `-SubstTemplateTypeParmType 0x5618353f7bd0 'String' sugar
|           |-TemplateTypeParmType 0x561835060490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835060438 'T'
|           `-RecordType 0x5618350bcf80 'String'
|             `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f8008 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5618353f5ea0 'const String &'
|   `-QualType 0x5618353f1241 'const String' const
|     `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618350bcf80 'String'
|         `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f8060 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618353f80c8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5618353f7280 'String *'
|   `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618350bcf80 'String'
|       `-CXXRecord 0x5618350bcef0 'String'
|-TypedefDecl 0x5618353f8130 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5618353f7310 'const String *'
|   `-QualType 0x5618353f1241 'const String' const
|     `-SubstTemplateTypeParmType 0x5618353f1240 'String' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618350bcf80 'String'
|         `-CXXRecord 0x5618350bcef0 'String'
|-EnumDecl 0x5618353f8188 <line:134:5> col:5
| `-EnumConstantDecl 0x5618353f8280 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5618353f8260 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5618353f8308 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5618353f8558 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353f83c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353f8460 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5618353f8818 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5618353f8700 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5618353f8ad8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5618353f89c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5618353f8df0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5618353f8cd0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5618353f9100 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5618353f8fe0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5618353f93f0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353f9238 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353f92b0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5618353f9518 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5618353f95f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353f9650 <col:30> Inherited
|-CXXMethodDecl 0x5618353f9698 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5618353f9748 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353f97a0 <col:30> Inherited
|-CXXMethodDecl 0x5618353f9868 <line:152:5, col:63> col:55 begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5618353f9918 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353f9970 <col:30> Inherited
|-CXXMethodDecl 0x5618353f99b8 <line:153:5, col:61> col:55 end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5618353f9a68 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353f9ac0 <col:30> Inherited
|-CXXMethodDecl 0x5618353f9b08 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5618353f9bb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353f9c10 <col:30> Inherited
|-CXXMethodDecl 0x5618353f9c58 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5618353f9d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353f9d60 <col:30> Inherited
|-CXXMethodDecl 0x5618353f9d88 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353f9e38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353f9ee8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5618353fa0a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353f9f98 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353fa010 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5618353fa1f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5618353fa168 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353fa3a8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5618353fa2b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353fa460 <col:20>
| `-OptimizeNoneAttr 0x5618353fa4b8 <col:30>
|-CXXMethodDecl 0x5618353fa5a8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5618353fa4e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353fa660 <col:20>
| `-OptimizeNoneAttr 0x5618353fa6b8 <col:30>
|-CXXMethodDecl 0x5618353fa770 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353fa6e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353fa8b8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353fa828 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353fa9e8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5618353faae8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5618353fabb8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5618353fac88 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5618353fadc8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353fad38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353faf10 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353fae80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353fb058 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5618353fafc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353fb110 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5618353fb210 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5618353fb180 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353fb2c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5618353fb388 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5618353fb488 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5618353fb608 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353fb548 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5618353fbd98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5618353fb6c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5618353fbcf8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5618353fbbf8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5618353fbe78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618353fbfc8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353fbf38 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5618353fc080 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5618353fc2c8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353fc140 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5618353fc1b8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5618353fc458 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5618353fc398 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5618353fc668 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5618353fc520 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5618353fc598 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5618353fc728 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353fc988 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5618353fc890 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5618353fca58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5618353fca58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353fe080 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x5618353fe258 prev 0x5618353fe080 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5618353fe2e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5618353fe310 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835401c30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x561835401be0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x5618353fe7c0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x5618353fe6c0 'type'
|     `-TemplateSpecializationType 0x5618353fe650 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5618353fe530 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x5618353fe510 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5618353fe4f0 <col:24> 'unsigned long' 4
|       `-RecordType 0x5618353fe630 'char_array<4>'
|         `-ClassTemplateSpecialization 0x5618353fe550 'char_array'
|-TypedefDecl 0x561835401ce8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x561835401cb0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x561835401c90 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x561835401c30 'type'
|     `-ElaboratedType 0x561835401be0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x5618353fe7c0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x5618353fe6c0 'type'
|         `-TemplateSpecializationType 0x5618353fe650 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5618353fe530 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x5618353fe510 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5618353fe4f0 <col:24> 'unsigned long' 4
|           `-RecordType 0x5618353fe630 'char_array<4>'
|             `-ClassTemplateSpecialization 0x5618353fe550 'char_array'
|-CXXMethodDecl 0x561835401e68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x561835401d78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x561835401f58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561835402038 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561835402038
|-CXXMethodDecl 0x561835402308 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x561835402210 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x561835402548 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5618354023c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835402438 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561835402718 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561835402608 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835402680 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561835402878 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x561835402948 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x561835402b98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561835402a08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x561835402a80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561835402df8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x561835402c68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x561835402ce0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561835402fb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x561835402ec8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561835403178 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x561835403080 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561835403230 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618354032e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561835403518 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561835403390 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835403408 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5618354037b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5618354036c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x561835403880 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x5618354038d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561835403920 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353fcca0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x5618353fcea8 prev 0x5618353fcca0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5618353fdff0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5618353fdfa0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x5618353fdf80 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x5618353fde30 'type'
|     `-SubstTemplateTypeParmType 0x5618353fdc50 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x5618353fd7a0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5618353fd6b8 'sized_array_memory'
|-FieldDecl 0x561835403970 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5618354039c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5618354039f8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x561835403a88 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x561835403a50 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x561835403b48 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x561835403b10 'const unsigned int &'
|   `-QualType 0x5618353fcf41 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x561835403bd8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x561835403ba0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x561835403c68 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x561835403c30 'const unsigned int *'
|   `-QualType 0x5618353fcf41 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x561835404850 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x561835404800 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x5618354047e0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x561835404770 'type'
|     `-SubstTemplateTypeParmType 0x561835404530 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561835060bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835060b70 'T'
|       `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x5618354048b8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x561835403b10 'const unsigned int &'
|   `-QualType 0x5618353fcf41 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x561835404910 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835404978 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x561835403ba0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-BuiltinType 0x561834d8d620 'unsigned int'
|-TypedefDecl 0x5618354049e0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x561835403c30 'const unsigned int *'
|   `-QualType 0x5618353fcf41 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x5618353fcf40 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d620 'unsigned int'
|-EnumDecl 0x561835404a38 <line:134:5> col:5
| `-EnumConstantDecl 0x561835404b30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561835404b10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561835404bb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561835404e08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561835404c70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835404d10 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x5618354050c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561835404fb0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x561835405388 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x561835405270 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x5618354056d0 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x5618354055b0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x5618354059e0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x5618354058c0 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x561835405cd0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561835405b18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835405b90 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561835405df8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x561835405ed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835405f30 <col:30> Inherited
|-CXXMethodDecl 0x561835405f78 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x561835406028 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835406080 <col:30> Inherited
|-CXXMethodDecl 0x561835406118 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5618354061c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835406220 <col:30> Inherited
|-CXXMethodDecl 0x561835406268 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561835406318 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835406370 <col:30> Inherited
|-CXXMethodDecl 0x5618354063b8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561835406468 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618354064c0 <col:30> Inherited
|-CXXMethodDecl 0x561835406508 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x5618354065b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835406610 <col:30> Inherited
|-CXXMethodDecl 0x561835406638 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618354066e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561835406798 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561835406958 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561835406848 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618354068c0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561835406aa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561835406a18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835406c58 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x561835406b60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561835406d10 <col:20>
| `-OptimizeNoneAttr 0x561835406d68 <col:30>
|-CXXMethodDecl 0x561835406e88 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x561835406d90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561835406f40 <col:20>
| `-OptimizeNoneAttr 0x561835406f98 <col:30>
|-CXXMethodDecl 0x561835407050 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561835406fc0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835407198 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835407108 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618354072c8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x5618354073f8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5618354074c8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x561835407598 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x5618354076d8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561835407648 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835407820 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835407790 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835407968 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5618354078d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561835407a20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561835407b20 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561835407a90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561835407bd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561835407c98 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x561835407d98 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x561835407f18 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x561835407e58 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x5618354086d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561835407fd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x561835408638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x561835408538 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x5618354087b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561835408908 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x561835408878 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x5618354089c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561835408c08 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561835408a80 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x561835408af8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561835408dc8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x561835408cd8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x561835409ef8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x561835408e90 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x561835409de0 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x561835409fb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56183540a218 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56183540a120 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x56183540a2e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56183540a2e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353dd718 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x56183540a548 prev 0x5618353dd718 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56183540b560 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56183540b510 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x56183540b4f0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x56183540b3a0 'type'
|     `-SubstTemplateTypeParmType 0x5618353fdc50 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x5618353fd7a0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5618353fd6b8 'sized_array_memory'
|-FieldDecl 0x56183540b660 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56183540b6b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56183540b6e8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540b778 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x56183540b740 'int &'
|   `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540b838 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x56183540b800 'const int &'
|   `-QualType 0x56183540a5e1 'const int' const
|     `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540b8c8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x56183540b890 'int *'
|   `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540b958 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x56183540b920 'const int *'
|   `-QualType 0x56183540a5e1 'const int' const
|     `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540c540 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x56183540c4f0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x56183540c4d0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x56183540c460 'type'
|     `-SubstTemplateTypeParmType 0x56183540c220 'int' sugar
|       |-TemplateTypeParmType 0x561835060bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835060b70 'T'
|       `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540c5a8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x56183540b800 'const int &'
|   `-QualType 0x56183540a5e1 'const int' const
|     `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540c600 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540c668 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x56183540b890 'int *'
|   `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183540c6d0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x56183540b920 'const int *'
|   `-QualType 0x56183540a5e1 'const int' const
|     `-SubstTemplateTypeParmType 0x56183540a5e0 'int' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-BuiltinType 0x561834d8d580 'int'
|-EnumDecl 0x56183540c728 <line:134:5> col:5
| `-EnumConstantDecl 0x56183540c820 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56183540c800 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56183540c8a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56183540caf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56183540c960 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183540ca00 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x56183540cdb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x56183540cca0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x56183540d078 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x56183540cf60 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x56183540d390 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x56183540d270 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x56183540d6a0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x56183540d580 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x56183540d990 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56183540d7d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183540d850 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56183540dab8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56183540db98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183540dbf0 <col:30> Inherited
|-CXXMethodDecl 0x56183540dc38 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56183540dce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183540dd40 <col:30> Inherited
|-CXXMethodDecl 0x56183540de08 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56183540deb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183540df10 <col:30> Inherited
|-CXXMethodDecl 0x56183540df58 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56183540e008 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183540e060 <col:30> Inherited
|-CXXMethodDecl 0x56183540e0a8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56183540e158 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183540e1b0 <col:30> Inherited
|-CXXMethodDecl 0x56183540e1f8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56183540e2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183540e300 <col:30> Inherited
|-CXXMethodDecl 0x56183540e328 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56183540e3d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56183540e488 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56183540e648 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56183540e538 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183540e5b0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56183540e798 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56183540e708 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183540e948 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x56183540e850 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183540ea00 <col:20>
| `-OptimizeNoneAttr 0x56183540ea58 <col:30>
|-CXXMethodDecl 0x56183540eb78 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x56183540ea80 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183540ec30 <col:20>
| `-OptimizeNoneAttr 0x56183540ec88 <col:30>
|-CXXMethodDecl 0x56183540ed40 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56183540ecb0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183540ee88 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183540edf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183540efb8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x56183540f0e8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x56183540f1b8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x56183540f288 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x56183540f3c8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56183540f338 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183540f510 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183540f480 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183540f658 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56183540f5c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56183540f710 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56183540f810 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56183540f780 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56183540f8c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56183540f988 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x56183540fa88 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x56183540fc08 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56183540fb48 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x5618354103c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56183540fcc0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x561835410328 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x561835410228 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x5618354104a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618354105f8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x561835410568 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5618354106b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5618354108f8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561835410770 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5618354107e8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561835410ab8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x5618354109c8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x561835410d08 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x561835410b80 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x561835410bf8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x561835410dc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561835411028 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x561835410f30 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x5618354110f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5618354110f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835411230 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561835411348 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x5618354113e8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x561835411448 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x5618354114e0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5618354114e0
| `-ParmVarDecl 0x5618354115f8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x561835411698 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561835411698
| `-ParmVarDecl 0x5618354117a8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x561835411848 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561835411848
| `-ParmVarDecl 0x561835411958 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5618354119c8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5618354119c8
| `-ParmVarDecl 0x561835411ad8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x561835411b60 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x561835411b60

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618354161e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x5618354163b8 prev 0x5618354161e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561835416448 <col:46, col:52> col:46 public
|-TypedefDecl 0x561835416470 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835417e30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x561835417de0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x561835417dc0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x561835416688 'type'
|     `-SubstTemplateTypeParmType 0x561835416650 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561835080790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835080740 'T'
|       `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|         `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x561835417ee8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x561835417eb0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x561835417e90 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x561835417e30 'type'
|     `-ElaboratedType 0x561835417de0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x561835417dc0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x561835416688 'type'
|         `-SubstTemplateTypeParmType 0x561835416650 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x561835080790 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835080740 'T'
|           `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|             `-CXXRecord 0x561835411230 'element_landmark_t'
|-CXXMethodDecl 0x561835418068 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x561835417f78 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x561835418158 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561835418238 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561835418238
|-CXXMethodDecl 0x561835418508 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x561835418410 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x561835418748 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x5618354185c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835418638 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561835418918 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561835418808 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835418880 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561835418a78 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x561835418b48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x561835418d98 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561835418c08 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x561835418c80 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561835418ff8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x561835418e68 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x561835418ee0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5618354191b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x5618354190c8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561835419378 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x561835419280 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561835419430 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618354194e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561835419718 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561835419590 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835419608 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x5618354199b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x5618354198c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x561835419a80 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x561835419ad0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561835419b20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561835411c50 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x561835414f48 prev 0x561835411c50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561835416150 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x561835416100 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x5618354160e0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x561835415f90 'type'
|     `-SubstTemplateTypeParmType 0x561835415e20 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x561835056540 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5618350564e8 'F'
|       `-RecordType 0x561835415a80 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x5618354159a0 'typed_array_memory'
|-FieldDecl 0x561835419b70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x561835419bc0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561835419bf8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|     `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x561835419c88 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x561835419c50 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|       `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x561835419d18 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x561835419ce0 'const Router::element_landmark_t &'
|   `-QualType 0x561835414fe1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|         `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x561835419da8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x561835419d70 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|       `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x561835419e38 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x561835419e00 'const Router::element_landmark_t *'
|   `-QualType 0x561835414fe1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|         `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x56183541aa90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x56183541aa40 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x56183541aa20 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x56183541a958 'type'
|     `-LValueReferenceType 0x56183541a920 'const Router::element_landmark_t &'
|       `-QualType 0x56183541a6c1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x56183541a6c0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x561835060490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835060438 'T'
|           `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|             `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x56183541aaf8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x561835419ce0 'const Router::element_landmark_t &'
|   `-QualType 0x561835414fe1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|         `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x56183541ab50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183541abb8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x561835419d70 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|       `-CXXRecord 0x561835411230 'element_landmark_t'
|-TypedefDecl 0x56183541ac20 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x561835419e00 'const Router::element_landmark_t *'
|   `-QualType 0x561835414fe1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561835414fe0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618354112c0 'Router::element_landmark_t'
|         `-CXXRecord 0x561835411230 'element_landmark_t'
|-EnumDecl 0x56183541ac78 <line:134:5> col:5
| `-EnumConstantDecl 0x56183541ad70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56183541ad50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56183541adf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56183541b088 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56183541aeb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183541af50 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56183541b348 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56183541b230 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x56183541b608 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56183541b4f0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56183541b950 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56183541b830 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x56183541bc60 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56183541bb40 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56183541bf50 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56183541bd98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183541be10 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56183541c078 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56183541c158 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183541c1b0 <col:30> Inherited
|-CXXMethodDecl 0x56183541c1f8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56183541c2a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183541c300 <col:30> Inherited
|-CXXMethodDecl 0x56183541c3c8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56183541c478 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183541c4d0 <col:30> Inherited
|-CXXMethodDecl 0x56183541c518 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56183541c5c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183541c620 <col:30> Inherited
|-CXXMethodDecl 0x56183541c668 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56183541c718 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183541c770 <col:30> Inherited
|-CXXMethodDecl 0x56183541c7b8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56183541c868 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183541c8c0 <col:30> Inherited
|-CXXMethodDecl 0x56183541c8e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56183541c998 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56183541ca48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56183541cc08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56183541caf8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183541cb70 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56183541cd58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56183541ccc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183541e3b8 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x56183541ce10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183541e470 <col:20>
| `-OptimizeNoneAttr 0x56183541e4c8 <col:30>
|-CXXMethodDecl 0x56183541e5e8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x56183541e4f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183541e6a0 <col:20>
| `-OptimizeNoneAttr 0x56183541e6f8 <col:30>
|-CXXMethodDecl 0x56183541e7b0 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56183541e720 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183541e8f8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183541e868 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183541ea28 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56183541eb58 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56183541ec28 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56183541ecf8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56183541ee38 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56183541eda8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183541ef80 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183541eef0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183541f0c8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x56183541f038 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56183541f180 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56183541f280 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56183541f1f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56183541f338 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56183541f3f8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x56183541f4f8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x56183541f678 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56183541f5b8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x56183541fe08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56183541f730 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x56183541fd68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x56183541fc68 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56183541fee8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561835420038 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56183541ffa8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5618354200f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561835420338 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x5618354201b0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x561835420228 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x5618354204c8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x561835420408 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x5618354206d8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x561835420590 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x561835420608 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x561835420798 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618354209f8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561835420900 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x561835420ac8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561835420ac8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183535e7b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x56183535e988 prev 0x56183535e7b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56183535ea18 <col:46, col:52> col:46 public
|-TypedefDecl 0x56183535ea40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835360610 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x5618353605c0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x56183535eef0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x56183535edf0 'type'
|     `-TemplateSpecializationType 0x56183535ed80 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56183535ec60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x56183535ec40 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56183535ec20 <col:24> 'unsigned long' 16
|       `-RecordType 0x56183535ed60 'char_array<16>'
|         `-ClassTemplateSpecialization 0x56183535ec80 'char_array'
|-TypedefDecl 0x5618353606c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x561835360690 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x561835360670 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x561835360610 'type'
|     `-ElaboratedType 0x5618353605c0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x56183535eef0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x56183535edf0 'type'
|         `-TemplateSpecializationType 0x56183535ed80 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56183535ec60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x56183535ec40 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56183535ec20 <col:24> 'unsigned long' 16
|           `-RecordType 0x56183535ed60 'char_array<16>'
|             `-ClassTemplateSpecialization 0x56183535ec80 'char_array'
|-CXXMethodDecl 0x561835360848 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x561835360758 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x561835360938 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561835360a18 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561835360a18
|-CXXMethodDecl 0x561835360ce8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561835360bf0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x561835360f28 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561835360da0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835360e18 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5618353610f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561835360fe8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835361060 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561835361258 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561835361328 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561835361578 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x5618353613e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561835361460 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x5618353617d8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x561835361648 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x5618353616c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561835361998 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x5618353618a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561835361b58 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561835361a60 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561835361c10 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561835361cc0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561835361ef8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561835361d70 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561835361de8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561835362198 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x5618353620a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x561835362260 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x5618353622b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561835362300 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618354211e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x5618354213e8 prev 0x5618354211e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5618354224b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x561835422460 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x561835422440 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x5618354222f0 'type'
|     `-SubstTemplateTypeParmType 0x56183535e380 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x56183535ded0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56183535dde8 'sized_array_memory'
|-FieldDecl 0x5618354225b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x561835422600 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561835422638 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-RecordType 0x5618353e45f0 'Router::Connection'
|     `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x5618354226f8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x5618354226c0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618353e45f0 'Router::Connection'
|       `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x561835422788 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x561835422750 'const Router::Connection &'
|   `-QualType 0x561835421481 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618353e45f0 'Router::Connection'
|         `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x561835422818 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x5618354227e0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618353e45f0 'Router::Connection'
|       `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x5618354228a8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x561835422870 'const Router::Connection *'
|   `-QualType 0x561835421481 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618353e45f0 'Router::Connection'
|         `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x561835423500 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x5618354234b0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x561835423490 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x5618354233c8 'type'
|     `-LValueReferenceType 0x561835423390 'const Router::Connection &'
|       `-QualType 0x561835423131 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x561835423130 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x561835060490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835060438 'T'
|           `-RecordType 0x5618353e45f0 'Router::Connection'
|             `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x561835423568 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x561835422750 'const Router::Connection &'
|   `-QualType 0x561835421481 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618353e45f0 'Router::Connection'
|         `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x5618354235c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835423628 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x5618354227e0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x5618353e45f0 'Router::Connection'
|       `-CXXRecord 0x5618353e4560 'Connection'
|-TypedefDecl 0x561835423690 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x561835422870 'const Router::Connection *'
|   `-QualType 0x561835421481 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561835421480 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x5618353e45f0 'Router::Connection'
|         `-CXXRecord 0x5618353e4560 'Connection'
|-EnumDecl 0x5618354236e8 <line:134:5> col:5
| `-EnumConstantDecl 0x5618354237e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5618354237c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561835423868 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561835423af8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561835423920 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618354239c0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x561835423db8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561835423ca0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x561835424078 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x561835423f60 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5618354243c0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x5618354242a0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x5618354246d0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x5618354245b0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x5618354249c0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561835424808 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835424880 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561835424b18 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x561835424bf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835424c50 <col:30> Inherited
|-CXXMethodDecl 0x561835424c98 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x561835424d48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835424da0 <col:30> Inherited
|-CXXMethodDecl 0x561835424e68 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561835424f18 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835424f70 <col:30> Inherited
|-CXXMethodDecl 0x561835424fb8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561835425068 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618354250c0 <col:30> Inherited
|-CXXMethodDecl 0x561835425108 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x5618354251b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835425210 <col:30> Inherited
|-CXXMethodDecl 0x561835425258 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561835425308 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835425360 <col:30> Inherited
|-CXXMethodDecl 0x561835425388 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561835425438 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618354254e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5618354256a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561835425598 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835425610 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x5618354257f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561835425768 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618354259a8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x5618354258b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561835425a60 <col:20>
| `-OptimizeNoneAttr 0x561835425ab8 <col:30>
|-CXXMethodDecl 0x561835425bd8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x561835425ae0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561835425c90 <col:20>
| `-OptimizeNoneAttr 0x561835425ce8 <col:30>
|-CXXMethodDecl 0x561835425da0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x561835425d10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835425ee8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835425e58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835426018 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x561835426148 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x561835426218 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x561835428790 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x5618354288d0 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x561835428840 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835428a18 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835428988 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835428b60 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x561835428ad0 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561835428c18 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561835428d18 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561835428c88 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561835428dd0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561835428e88 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x561835428f88 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x561835429138 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x561835429048 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x5618354298f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5618354291f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x561835429858 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x561835429758 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x5618354299d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561835429b28 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x561835429a98 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561835429be0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561835429e28 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561835429ca0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x561835429d18 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561835429fe8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x561835429ef8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56183542a238 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x56183542a0b0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56183542a128 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56183542a2f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56183542a558 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56183542a460 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x56183542a628 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56183542a628

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352ed260 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5618352ed3b0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5618352ed430 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x5618352ee228 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5618352ee228
| `-ParmVarDecl 0x5618352ee338 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x5618352ee3d8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5618352ee3d8
| `-ParmVarDecl 0x5618352ee4e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x5618352ee558 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618352ee558
|-CXXMethodDecl 0x5618352eee28 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5618352eee28
| `-ParmVarDecl 0x5618352eef38 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x5618352eefa8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5618352eefa8
| `-ParmVarDecl 0x5618352ef0b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x561835444480 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x561835444560 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352ed560 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5618352ed688 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x5618352ed710 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x5618352ee688 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5618352ee688
| `-ParmVarDecl 0x5618352ee798 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x5618352ee838 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5618352ee838
| `-ParmVarDecl 0x5618352ee948 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x5618352ee9b8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618352ee9b8
|-CXXMethodDecl 0x5618352ef158 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5618352ef158
| `-ParmVarDecl 0x5618352ef268 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x5618352ef2d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5618352ef2d8
| `-ParmVarDecl 0x5618352ef3e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x5618354445c0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x5618354446a0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352e8be8 prev 0x5618352e8080 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5618352e8ce0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x5618352e8d70 <col:17, col:23> col:17 public
|-EnumDecl 0x5618352e8d98 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x5618352e8ea0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9bf0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e8e80 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x5618352e8e60 <col:11> 'int' 1
| |-EnumConstantDecl 0x5618352e8f30 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c08 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e8f10 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x5618352e8ef0 <col:12> 'int' 2
| |-EnumConstantDecl 0x5618352e8fc0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c20 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e8fa0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x5618352e8f80 <col:17> 'int' 4
| |-EnumConstantDecl 0x5618352e9050 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c38 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9030 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x5618352e9010 <col:16> 'int' 0
| |-EnumConstantDecl 0x5618352e90e0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c50 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e90c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5618352e90a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5618352e9170 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c68 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9150 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x5618352e9130 <col:10> 'int' 64
| |-EnumConstantDecl 0x5618352e9200 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c80 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e91e0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x5618352e91c0 <col:19> 'int' 128
| |-EnumConstantDecl 0x5618352e9290 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9c98 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9270 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x5618352e9250 <col:20> 'int' 256
| |-EnumConstantDecl 0x5618352e9320 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9cb0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9300 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x5618352e92e0 <col:17> 'int' 512
| |-EnumConstantDecl 0x5618352e93b0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9cc8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9390 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x5618352e9370 <col:15> 'int' 1024
| |-EnumConstantDecl 0x5618352e9440 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9ce0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9420 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x5618352e9400 <col:11> 'int' 2048
| |-EnumConstantDecl 0x5618352e94d0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9cf8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e94b0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x5618352e9490 <col:16> 'int' 4096
| |-EnumConstantDecl 0x5618352e9560 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9d10 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9540 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x5618352e9520 <col:13> 'int' 8192
| |-EnumConstantDecl 0x5618352e95f0 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9d28 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e95d0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x5618352e95b0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x5618352e96c0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x5618352e96a0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x5618352e9680 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5618352e9640 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x5618352e9660 <col:20> 'int' 26
| |-EnumConstantDecl 0x5618352e9790 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x5618352e9770 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x5618352e9750 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5618352e9710 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x5618352e9730 <col:27> 'int' 27
| |-EnumConstantDecl 0x5618352e9820 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9d40 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9800 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x5618352e97e0 <col:17> 'int' 28
| |-EnumConstantDecl 0x5618352e98f0 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x5618352e98d0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x5618352e98b0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x5618352e9870 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x5618352e9890 <col:18> 'int' EnumConstant 0x5618352e9820 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352e9980 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9d58 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e9960 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x5618352e9940 <col:25> 'int' 8
| |-EnumConstantDecl 0x5618352e9a10 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x5618352e9d70 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352e99f0 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x5618352e99d0 <col:26> 'int' 16
| `-EnumConstantDecl 0x5618352e9ba0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x5618352e9d88 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352e9b80 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x5618352e9b60 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x5618352e9b20 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x5618352e9ae0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x5618352e9aa0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x5618352e9a60 <col:14> 'int' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x5618352e9a80 <col:23> 'int' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x5618352e9ac0 <col:33> 'int' EnumConstant 0x5618352e8fc0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x5618352e9b00 <col:48> 'int' EnumConstant 0x5618352e9980 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x5618352e9b40 <col:71> 'int' EnumConstant 0x5618352e9a10 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x5618352e9de8 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x5618352ef808 <col:39, line:64:5>
|   `-ReturnStmt 0x5618352ef7f8 <line:63:2, col:9>
|     `-MemberExpr 0x5618352ef7c8 <col:9> 'const String' lvalue ->_name 0x5618352ed210
|       `-CXXThisExpr 0x5618352ef7b8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5618352e9ea8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x5618352ef888 <col:35, line:71:5>
|   `-ReturnStmt 0x5618352ef878 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x5618352ef860 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5618352ef830 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|         `-CXXThisExpr 0x5618352ef820 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5618352e9ff8 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x5618352e9f60 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x5618352efa08 <col:42, line:77:5>
|   `-ReturnStmt 0x5618352ef9f8 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x5618352ef9e0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x5618352ef9b0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x5618352ef910 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x5618352ef8e0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x5618352ef8a0 <col:9> 'int' lvalue ParmVar 0x5618352e9f60 'op' 'int'
|         | `-ImplicitCastExpr 0x5618352ef8f8 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x5618352ef8c0 <col:15> 'Handler::Flags' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x5618352ef940 <col:25> 'void *const' lvalue ->_write_user_data 0x5618352ed8c0
|         | `-CXXThisExpr 0x5618352ef930 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x5618352ef980 <col:44> 'void *const' lvalue ->_read_user_data 0x5618352ed858
|           `-CXXThisExpr 0x5618352ef970 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x5618352ea0c8 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x5618352efa88 <col:41, line:82:5>
|   `-ReturnStmt 0x5618352efa78 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x5618352efa60 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5618352efa30 <col:9> 'void *const' lvalue ->_read_user_data 0x5618352ed858
|         `-CXXThisExpr 0x5618352efa20 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5618352ea190 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x5618352efb08 <col:42, line:87:5>
|   `-ReturnStmt 0x5618352efaf8 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x5618352efae0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5618352efab0 <col:9> 'void *const' lvalue ->_write_user_data 0x5618352ed8c0
|         `-CXXThisExpr 0x5618352efaa0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x5618352ea258 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x5618352ea2f8 <col:52> "" ""
|-CXXMethodDecl 0x5618352ea390 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x5618352ea430 <col:52> "" ""
|-CXXMethodDecl 0x5618352ea4c0 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x5618352efbf8 <col:34, line:98:5>
|   `-ReturnStmt 0x5618352efbe8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x5618352efbd0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5618352efbb0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5618352efb80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5618352efb30 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|         |   `-CXXThisExpr 0x5618352efb20 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5618352efb98 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5618352efb60 <col:18> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ea580 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x5618352efce8 <col:36, line:104:5>
|   `-ReturnStmt 0x5618352efcd8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x5618352efcc0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5618352efca0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5618352efc70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5618352efc20 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|         |   `-CXXThisExpr 0x5618352efc10 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5618352efc88 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5618352efc50 <col:18> 'Handler::Flags' EnumConstant 0x5618352e8fc0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ea640 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x5618352efec8 <col:38, line:113:5>
|   `-ReturnStmt 0x5618352efeb8 <line:112:2, col:49>
|     `-BinaryOperator 0x5618352efe98 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x5618352efe40 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x5618352efe20 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5618352efdf0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5618352efd10 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|       |   |   `-CXXThisExpr 0x5618352efd00 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5618352efe08 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5618352efdd0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x5618352efdb0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x5618352efd80 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5618352efd40 <col:20> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5618352efd98 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5618352efd60 <col:29> 'Handler::Flags' EnumConstant 0x5618352e9200 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5618352efe80 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5618352efe60 <col:49> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ea700 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x5618352effb8 <col:34, line:118:5>
|   `-ReturnStmt 0x5618352effa8 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x5618352eff90 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5618352eff70 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5618352eff40 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5618352efef0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|         |   `-CXXThisExpr 0x5618352efee0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5618352eff58 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5618352eff20 <col:18> 'Handler::Flags' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ea7c0 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x5618352f0198 <col:39, line:127:5>
|   `-ReturnStmt 0x5618352f0188 <line:126:2, col:51>
|     `-BinaryOperator 0x5618352f0168 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x5618352f0110 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x5618352f00f0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5618352f00c0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5618352effe0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|       |   |   `-CXXThisExpr 0x5618352effd0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x5618352f00d8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x5618352f00a0 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x5618352f0080 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x5618352f0050 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x5618352f0010 <col:20> 'Handler::Flags' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x5618352f0068 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x5618352f0030 <col:30> 'Handler::Flags' EnumConstant 0x5618352e9290 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x5618352f0150 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x5618352f0130 <col:51> 'Handler::Flags' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ea880 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x5618352f02a0 <col:33, line:132:5>
|   `-ReturnStmt 0x5618352f0290 <line:131:2, col:41>
|     `-BinaryOperator 0x5618352f0270 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x5618352f01f0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x5618352f01c0 <col:9> '<bound member function type>' ->read_visible 0x5618352ea640
|       |   `-CXXThisExpr 0x5618352f01b0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x5618352f0250 <col:27, col:41> 'bool'
|         `-MemberExpr 0x5618352f0220 <col:27> '<bound member function type>' ->write_visible 0x5618352ea7c0
|           `-CXXThisExpr 0x5618352f0210 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x5618352ea940 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x5618352f03d8 <col:51, line:138:5>
|   `-ReturnStmt 0x5618352f03c8 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x5618352f03b0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5618352f0390 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5618352f0348 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5618352f0318 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5618352f02c8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|           |   `-CXXThisExpr 0x5618352f02b8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5618352f0330 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5618352f02f8 <col:26> 'Handler::Flags' EnumConstant 0x5618352e90e0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5618352eaa00 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x5618352f04e8 <col:50, line:144:5>
|   `-ReturnStmt 0x5618352f04d8 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x5618352f04c0 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x5618352f04a0 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x5618352f0480 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x5618352f0450 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x5618352f0400 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|           |   `-CXXThisExpr 0x5618352f03f0 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x5618352f0468 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x5618352f0430 <col:26> 'Handler::Flags' EnumConstant 0x5618352e90e0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5618352eaac0 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x5618352f05d8 <col:29, line:166:5>
|   `-ReturnStmt 0x5618352f05c8 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x5618352f05b0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x5618352f0590 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x5618352f0560 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x5618352f0510 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|         |   `-CXXThisExpr 0x5618352f0500 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x5618352f0578 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x5618352f0540 <col:18> 'Handler::Flags' EnumConstant 0x5618352e9170 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ead48 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5618352eab70 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x5618352eabe8 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x5618352eac60 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618352eaf58 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x5618352eae10 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x5618352eae88 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5618352ef6f0 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5618352ef6d0 <col:62> 'int' 0
| `-CompoundStmt 0x5618352f0878 <col:71, line:188:5>
|   `-ReturnStmt 0x5618352f0868 <line:187:2, col:36>
|     `-ExprWithCleanups 0x5618352f0850 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x5618352f0820 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5618352f0808 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5618352f07e8 <col:9, col:36> 'String' (CXXTemporary 0x5618352f07e8)
|             `-CXXMemberCallExpr 0x5618352f0748 <col:9, col:36> 'String'
|               |-MemberExpr 0x5618352f0718 <col:9> '<bound member function type>' ->call_read 0x5618352ead48
|               | `-CXXThisExpr 0x5618352f0708 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5618352f0780 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5618352f0660 <col:19> 'Element *' lvalue ParmVar 0x5618352eae10 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x5618352f07b0 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x5618352f0798 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x5618352f06c8 <col:22, col:29> 'String' (CXXTemporary 0x5618352f06c8)
|               |     `-CXXTemporaryObjectExpr 0x5618352f0690 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x5618352f07c8 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x5618352f06e8 <col:32> 'ErrorHandler *' lvalue ParmVar 0x5618352eae88 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x5618352eb1f0 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5618352eb018 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x5618352eb090 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5618352eb108 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618352eb378 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x5618352eb2b8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x5618352eb5a8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x5618352eb430 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x5618352eb4a8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x5618352eb6a8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x5618352f08d8 <col:50, line:225:5>
|   `-ReturnStmt 0x5618352f08c8 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x5618352f08b0 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x5618352f0890 <col:9> 'const Handler *' lvalue Var 0x5618352eda50 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x5618352eb748 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x5618352eb850 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec3f0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352eb830 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5618352eb810 <col:11> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352eb8e0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec408 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352eb8c0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5618352eb8a0 <col:12> 'Handler::Flags' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352eb970 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec420 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352eb950 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5618352eb930 <col:17> 'Handler::Flags' EnumConstant 0x5618352e8fc0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352eba00 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec438 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352eb9e0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5618352eb9c0 <col:16> 'Handler::Flags' EnumConstant 0x5618352e9050 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352eba90 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec450 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352eba70 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x5618352eba50 <col:19> 'Handler::Flags' EnumConstant 0x5618352e90e0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebb20 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec468 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebb00 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5618352ebae0 <col:10> 'Handler::Flags' EnumConstant 0x5618352e9170 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebbb0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec480 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebb90 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x5618352ebb70 <col:19> 'Handler::Flags' EnumConstant 0x5618352e9200 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebc40 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec498 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebc20 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x5618352ebc00 <col:20> 'Handler::Flags' EnumConstant 0x5618352e9290 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebcd0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec4b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebcb0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x5618352ebc90 <col:17> 'Handler::Flags' EnumConstant 0x5618352e9320 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebd60 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec4c8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebd40 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x5618352ebd20 <col:15> 'Handler::Flags' EnumConstant 0x5618352e93b0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebdf0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec4e0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebdd0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5618352ebdb0 <col:11> 'Handler::Flags' EnumConstant 0x5618352e9440 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebe80 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec4f8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebe60 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5618352ebe40 <col:16> 'Handler::Flags' EnumConstant 0x5618352e94d0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebf10 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec510 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebef0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5618352ebed0 <col:13> 'Handler::Flags' EnumConstant 0x5618352e9560 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ebfa0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec528 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ebf80 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5618352ebf60 <col:15> 'Handler::Flags' EnumConstant 0x5618352e95f0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec030 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec540 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec010 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x5618352ebff0 <col:20> 'Handler::Flags' EnumConstant 0x5618352e96c0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec0c0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec558 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec0a0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x5618352ec080 <col:27> 'Handler::Flags' EnumConstant 0x5618352e9790 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec150 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec570 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec130 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5618352ec110 <col:22> 'Handler::Flags' EnumConstant 0x5618352e9820 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec1e0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec588 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec1c0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x5618352ec1a0 <col:18> 'Handler::Flags' EnumConstant 0x5618352e98f0 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec270 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec5a0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec250 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x5618352ec230 <col:25> 'Handler::Flags' EnumConstant 0x5618352e9980 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec300 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x5618352ec5b8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec2e0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x5618352ec2c0 <col:26> 'Handler::Flags' EnumConstant 0x5618352e9a10 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x5618352ec3a0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x5618352ec5d0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352ec380 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x5618352ec350 <col:20> 'Handler::Flags' EnumConstant 0x5618352e9ba0 'f_special' 'Handler::Flags'
|-EnumDecl 0x5618352ec5e8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x5618352ec6f0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352ecc50 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec6d0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x5618352ec6b0 <col:12> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec780 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352ecc68 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec760 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x5618352ec740 <col:13> 'Handler::Flags' EnumConstant 0x5618352e8f30 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec810 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352ecc80 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec7f0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x5618352ec7d0 <col:15> 'Handler::Flags' EnumConstant 0x5618352e8fc0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec8a0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352ecc98 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec880 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x5618352ec860 <col:8> 'Handler::Flags' EnumConstant 0x5618352e9170 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec930 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352eccb0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec910 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x5618352ec8f0 <col:9> 'Handler::Flags' EnumConstant 0x5618352e9440 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ec9c0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352eccc8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ec9a0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x5618352ec980 <col:14> 'Handler::Flags' EnumConstant 0x5618352e94d0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352eca50 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352ecce0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352eca30 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x5618352eca10 <col:11> 'Handler::Flags' EnumConstant 0x5618352e9560 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ecae0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352eccf8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ecac0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x5618352ecaa0 <col:13> 'Handler::Flags' EnumConstant 0x5618352e95f0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x5618352ecb70 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x5618352ecd10 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ecb50 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x5618352ecb30 <col:20> 'Handler::Flags' EnumConstant 0x5618352e9820 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x5618352ecc00 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x5618352ecd28 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352ecbe0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x5618352ecbc0 <col:16> 'Handler::Flags' EnumConstant 0x5618352e98f0 'f_user0' 'Handler::Flags'
|-EnumDecl 0x5618352ecd40 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x5618352ece00 <col:25> "" ""
| |-EnumConstantDecl 0x5618352eceb0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x5618352ecf90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352ece90 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x5618352ece70 <col:14> 'Handler::Flags' EnumConstant 0x5618352e9050 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x5618352ecf40 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x5618352ecfa8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352ecf20 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x5618352ecf00 <col:17> 'Handler::Flags' EnumConstant 0x5618352e90e0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x5618352ed128 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x5618352ecfd0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x5618352ed050 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x5618352f0f98 <col:70, line:284:5>
|   |-ParenExpr 0x5618352f0db8 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x5618352f0d88 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x5618352f0ab8 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352f0a88 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x5618352f0a30 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x5618352f0a10 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x5618352f09e0 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x5618352f0900 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x5618352ed920
|   |   |   |   |   `-CXXThisExpr 0x5618352f08f0 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x5618352f09f8 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x5618352f09c0 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x5618352f09a0 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x5618352f0970 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x5618352f0930 <col:34> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x5618352f0988 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x5618352f0950 <col:43> 'Handler::Flags' EnumConstant 0x5618352e9980 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x5618352f0a70 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x5618352f0a50 <col:69> 'Handler::Flags' EnumConstant 0x5618352e8ea0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x5618352f0b18 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352f0af8 <col:85> 'int' 0
|   |   `-CallExpr 0x5618352f0ce8 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x5618352f0cd0 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352f0cb0 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352f0d28 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352f0b88 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x5618352f0d40 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352f0bd8 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x5618352f0d58 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352f0c10 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x5618352f0d70 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352f0c98 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352f0c80 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352f0c30 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x5618352f0f88 <line:283:2, col:38>
|     `-ExprWithCleanups 0x5618352f0f70 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x5618352f0f40 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5618352f0f28 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5618352f0f08 <col:9, col:38> 'String' (CXXTemporary 0x5618352f0f08)
|             `-CallExpr 0x5618352f0ea0 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x5618352f0e88 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x5618352f0e18 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x5618352ed430
|               |   `-MemberExpr 0x5618352f0de8 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x5618352ed4f8
|               |     `-CXXThisExpr 0x5618352f0dd8 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x5618352f0ed0 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x5618352f0e48 <col:22> 'Element *' lvalue ParmVar 0x5618352ecfd0 'e' 'Element *'
|               `-ImplicitCastExpr 0x5618352f0ee8 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x5618352f0e68 <col:25> 'void *' lvalue ParmVar 0x5618352ed050 'new_user_data' 'void *'
|-AccessSpecDecl 0x5618352ed1d8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x5618352ed210 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x5618352ed260 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5618352ed3b0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5618352ed430 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x5618352ee228 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5618352ee228
| | `-ParmVarDecl 0x5618352ee338 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x5618352ee3d8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5618352ee3d8
| | `-ParmVarDecl 0x5618352ee4e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x5618352ee558 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618352ee558
| |-CXXMethodDecl 0x5618352eee28 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x5618352eee28
| | `-ParmVarDecl 0x5618352eef38 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x5618352eefa8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x5618352eefa8
| | `-ParmVarDecl 0x5618352ef0b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x561835444480 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561835444560 <col:5>
|-FieldDecl 0x5618352ed4f8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x5618352ed560 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5618352ed688 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x5618352ed710 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x5618352ee688 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5618352ee688
| | `-ParmVarDecl 0x5618352ee798 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x5618352ee838 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5618352ee838
| | `-ParmVarDecl 0x5618352ee948 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x5618352ee9b8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618352ee9b8
| |-CXXMethodDecl 0x5618352ef158 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x5618352ef158
| | `-ParmVarDecl 0x5618352ef268 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x5618352ef2d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x5618352ef2d8
| | `-ParmVarDecl 0x5618352ef3e8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x5618354445c0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5618354446a0 <col:5>
|-FieldDecl 0x5618352ed7d8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x5618352ed858 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x5618352ed8c0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x5618352ed920 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x5618352ed988 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x5618352ed9f0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x5618352eda50 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x5618352edb70 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x5618352edac8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x5618352ef7a0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5618352ef788 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x5618352ef770 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5618352ef750 <col:30, col:37> 'String' (CXXTemporary 0x5618352ef750)
|           `-CXXTemporaryObjectExpr 0x5618352ef718 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x5618352edd18 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x5618352edc58 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x5618352ede98 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x5618352eddd0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x5618352ee058 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x5618352ee098 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x5618352ee098
| `-ParmVarDecl 0x5618352ee178 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x5618352eeac8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x5618352eeac8
| `-ParmVarDecl 0x5618352eebd8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x5618352eec78 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x5618352eec78
| `-ParmVarDecl 0x5618352eed88 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x5618352ef458 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x5618352ef458
| `-ParmVarDecl 0x5618352ef568 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x5618352ef5f0 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x5618352ef5f0

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183542b198 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x56183542b3a8 prev 0x56183542b198 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56183542c3c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56183542c370 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x56183542c350 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x56183542c200 'type'
|     `-SubstTemplateTypeParmType 0x56183536d6c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x56183536d210 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56183536d128 'sized_array_memory'
|-FieldDecl 0x56183542c4c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56183542c510 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56183542c548 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-PointerType 0x561834d8dce0 'void *'
|     `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542c5d8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x56183542c5a0 'void *&'
|   `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x561834d8dce0 'void *'
|       `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542c698 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x56183542c660 'void *const &'
|   `-QualType 0x56183542b441 'void *const' const
|     `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x561834d8dce0 'void *'
|         `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542c728 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x56183542c6f0 'void **'
|   `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x561834d8dce0 'void *'
|       `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542c7b8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x56183542c780 'void *const *'
|   `-QualType 0x56183542b441 'void *const' const
|     `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x561834d8dce0 'void *'
|         `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542d3a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x56183542d350 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x56183542d330 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x56183542d2c0 'type'
|     `-SubstTemplateTypeParmType 0x56183542d080 'void *' sugar
|       |-TemplateTypeParmType 0x561835060bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835060b70 'T'
|       `-PointerType 0x561834d8dce0 'void *'
|         `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542d408 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x56183542c660 'void *const &'
|   `-QualType 0x56183542b441 'void *const' const
|     `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x561834d8dce0 'void *'
|         `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542d460 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x56183542d4c8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x56183542c6f0 'void **'
|   `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x561834d8dce0 'void *'
|       `-BuiltinType 0x561834d8d4e0 'void'
|-TypedefDecl 0x56183542d530 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x56183542c780 'void *const *'
|   `-QualType 0x56183542b441 'void *const' const
|     `-SubstTemplateTypeParmType 0x56183542b440 'void *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x561834d8dce0 'void *'
|         `-BuiltinType 0x561834d8d4e0 'void'
|-EnumDecl 0x56183542d588 <line:134:5> col:5
| `-EnumConstantDecl 0x56183542d680 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56183542d660 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56183542d708 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56183542d958 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56183542d7c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183542d860 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x56183542dc18 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x56183542db00 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x56183542ded8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x56183542ddc0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56183542e220 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x56183542e100 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x56183542e530 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x56183542e410 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56183542e820 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56183542e668 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183542e6e0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56183542e978 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56183542ea58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183542eab0 <col:30> Inherited
|-CXXMethodDecl 0x56183542eaf8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56183542eba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183542ec00 <col:30> Inherited
|-CXXMethodDecl 0x56183542ecc8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56183542ed78 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183542edd0 <col:30> Inherited
|-CXXMethodDecl 0x56183542ee18 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56183542eec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183542ef20 <col:30> Inherited
|-CXXMethodDecl 0x56183542ef68 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56183542f018 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183542f070 <col:30> Inherited
|-CXXMethodDecl 0x56183542f0b8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56183542f168 <col:20> Inherited
| `-OptimizeNoneAttr 0x56183542f1c0 <col:30> Inherited
|-CXXMethodDecl 0x56183542f1e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56183542f298 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56183542f348 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56183542f508 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56183542f3f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56183542f470 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56183542f658 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56183542f5c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183542f808 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x56183542f710 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183542f8c0 <col:20>
| `-OptimizeNoneAttr 0x56183542f918 <col:30>
|-CXXMethodDecl 0x56183542fa38 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56183542f940 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183542faf0 <col:20>
| `-OptimizeNoneAttr 0x56183542fb48 <col:30>
|-CXXMethodDecl 0x56183542fc00 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56183542fb70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183542fd48 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183542fcb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183542fe78 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x56183542ffa8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x561835430078 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x561835430148 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x561835430288 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x5618354301f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618354303d0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835430340 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835430518 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561835430488 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618354305d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5618354306d0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561835430640 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618354329a0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561835432a58 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x561835432b58 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x561835432cd8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x561835432c18 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x561835433498 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561835432d90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x5618354333f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x5618354332f8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x561835433578 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618354336c8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x561835433638 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561835433780 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5618354339c8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561835433840 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x5618354338b8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561835433b88 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x561835433a98 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x561835433dd8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x561835433c50 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x561835433cc8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x561835433e98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618354340f8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x561835434000 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x5618354341c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5618354341c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618354343c0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x5618354344d8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x561835434568 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x561835434670 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x5618354346c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561835434650 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x561835434630 <col:27> 'int' 4096
|-FieldDecl 0x5618354346e8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x561835434750 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x561835434948 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x5618354349d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x561835434b98 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x561835434a38 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x561835434ab0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x5618354346e8 'name' 'String'
| | `-CXXConstructExpr 0x56183543f4b8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56183543f478 <col:20> 'const String' lvalue ParmVar 0x561835434a38 'n' 'const String &'
| |-CXXCtorInitializer Field 0x561835434750 'nsig' 'int'
| | `-IntegerLiteral 0x56183543f510 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x561835434948 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x56183543f5f8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5618354349d8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x56183543f5b8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x56183543f578 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x561835434ab0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x56183543f888 <col:42, line:289:9>
|   `-CallExpr 0x56183543f838 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x56183543f820 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56183543f800 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x561834ff0478 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x56183543f870 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x56183543f748 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x56183543f728 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x56183543f710 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56183543f6c0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x561835434948
|     |     |   `-CXXThisExpr 0x56183543f6b0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x56183543f6f0 <col:25> 'int' 0
|     |-IntegerLiteral 0x56183543f760 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x56183543f7e0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x56183543f7c0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x56183543f790 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x561835434948 non_odr_use_unevaluated
|           `-CXXThisExpr 0x56183543f780 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x561835434c78 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561835434c78
| `-ParmVarDecl 0x561835434d88 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x561835434e28 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561835434e28
| `-ParmVarDecl 0x561835434f38 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x561835434fd8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561835434fd8
| `-ParmVarDecl 0x5618354350e8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x561835435158 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561835435158
| `-ParmVarDecl 0x561835435268 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x5618354352f0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5618354352f0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618353d76f0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618353d7808 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x5618353d7898 <col:21, col:27> col:21 public
|-EnumDecl 0x5618353d78c0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x5618353d79d8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x5618353d79b8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5618353d79a0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5618353d7980 <col:32> 'int' 1
| `-EnumConstantDecl 0x5618353d7a80 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x5618353d7a60 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5618353d7a48 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5618353d7a28 <col:53> 'int' 1000
|-CXXConstructorDecl 0x5618353d7b30 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x5618353d8068 <col:19, col:21>
|-CXXDestructorDecl 0x5618353d7c20 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x5618353d8078 <col:28, col:30>
|-CXXMethodDecl 0x5618353d7de0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x5618353d7d10 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x5618353d7ee8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x5618353d7ee8
  `-ParmVarDecl 0x5618353d7ff8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618353d8620 prev 0x56183518cc20 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5618353d8718 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x5618353d87a8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x5618353d8818 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5618353d88d8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x5618353d8998 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x5618353d8a58 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x5618353d8b18 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x5618353d8bb8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x5618353d8d18 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x5618353d8cf8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x5618353d8cd8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x5618353d8ca0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x5618353d8c80 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x5618353d8cb8 <col:42> 'int' 1
|-CXXMethodDecl 0x5618353d8db8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x5618353d8f28 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5618353d8e68 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x5618353d9070 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x5618353d8fe0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x5618353d9138 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x5618353d9460 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x5618353d9528 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x5618353d96a8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x5618353d95e0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x5618353d9770 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x5618353d9978 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x5618353d9820 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x5618353d98a0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x5618353d9b08 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x5618353d9a40 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x5618353d9c58 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x5618353d9bc8 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x5618353d9da8 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x5618353d9d18 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x5618353d9ef8 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x5618353d9e68 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x5618353da108 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x5618353d9fb8 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x5618353da030 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x5618353da318 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x5618353da1c8 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x5618353da240 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561835438b90 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561835438b70 <col:60> 'int' 0
|-CXXMethodDecl 0x5618353da5a8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x5618353da3d8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5618353da450 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x5618353da4c8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561835438bc8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561835438ba8 <col:76> 'int' 0
|-CXXMethodDecl 0x5618353da848 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x5618353da670 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x5618353da6e8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x5618353da760 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561835438c00 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561835438be0 <col:84> 'int' 0
|-CXXMethodDecl 0x5618353daba0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5618353da910 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x5618353da988 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x5618353daa08 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x5618353daaa8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5618353dae50 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5618353dac70 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x5618353dacf0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x5618353dad68 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5618353db0b8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x5618353daf18 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x5618353daf98 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x5618353db010 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x5618353db570 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5618353db180 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x5618353db200 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x5618353db2a8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x5618353db420 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5618353db630 <col:115> "" ""
|-CXXMethodDecl 0x5618353db9f0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x5618353db6b0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x5618353db730 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x5618353db7a8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x5618353db8f0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x5618353dbab0 <col:113> "" ""
|-CXXMethodDecl 0x5618353dbc00 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x5618353dbb38 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x5618353dbdd0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x5618353dbcc0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x5618353dbd38 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x5618353dbfd8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x5618353dbe90 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x5618353dbf08 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x5618353dc3d8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5618353dc098 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5618353dc110 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5618353dc188 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5618353dc208 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x5618353dc280 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835438c38 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835438c18 <col:137> 'int' 0
|-CXXMethodDecl 0x5618353dc7e8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x5618353dc4b0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x5618353dc528 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x5618353dc5a0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5618353dc620 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x5618353dc698 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835438c70 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835438c50 <col:139> 'int' 0
|-CXXMethodDecl 0x5618353dcc98 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x5618353dc8c0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x5618353dc938 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x5618353dc9b0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618353dca28 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5618353dcaa8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x561835438ca8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x561835438c88 <col:133> 'int' 0
| `-ParmVarDecl 0x5618353dcb28 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x561835438ce0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x561835438cc0 <col:160> 'int' 0
|-CXXMethodDecl 0x5618353dd030 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5618353dcd78 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x5618353dcdf0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x5618353dce68 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5618353dcee0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835438d18 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835438cf8 <col:116> 'int' 0
|-EnumDecl 0x5618353dd0f0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x5618353dd1f0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x5618353dd240 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618353dd1d0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x5618353dd1b0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x5618353dd3c0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x5618353dd268 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x5618353dd2e0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x5618353dd5d8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x5618353dd480 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x5618353dd500 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x5618353dda38 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x5618353dd698 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x5618353dd920 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x5618353ddbc0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x5618353ddaf8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x5618353ddd70 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x5618353ddc78 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x5618353ddf80 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x5618353dde28 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x5618353ddea8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x5618353de108 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x5618353de040 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x5618353de228 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x5618353de318 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x5618353de488 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x5618353de3c8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x5618353de610 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x5618353de540 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x5618353de818 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x5618353de6c8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x5618353de748 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x5618353de948 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x5618353dea38 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x5618353deaf8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x5618353decf8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5618353deba8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x5618353dec20 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561835438dc8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561835438db0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x561835438d98 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561835438d78 <col:58, col:65> 'String' (CXXTemporary 0x561835438d78)
|           `-CXXTemporaryObjectExpr 0x561835438d40 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x5618353deec8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5618353dedb8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5618353dee30 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561835438e78 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561835438e60 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x561835438e48 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561835438e28 <col:71, col:78> 'String' (CXXTemporary 0x561835438e28)
|           `-CXXTemporaryObjectExpr 0x561835438df0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5618353df098 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5618353def88 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x5618353df000 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561835438f28 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561835438f10 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x561835438ef8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561835438ed8 <col:71, col:78> 'String' (CXXTemporary 0x561835438ed8)
|           `-CXXTemporaryObjectExpr 0x561835438ea0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x5618353e1c80 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x5618353e1b70 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x5618353e1be8 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561835438fd8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561835438fc0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x561835438fa8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561835438f88 <col:70, col:77> 'String' (CXXTemporary 0x561835438f88)
|           `-CXXTemporaryObjectExpr 0x561835438f50 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x5618353e1e08 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x5618353e1d40 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x5618353e2028 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x5618353e1ec0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x5618353e1f38 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x5618353e2128 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x5618353e2128
|-CXXMethodDecl 0x5618353e2230 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5618353e22f0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5618353e23b0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x5618353e2470 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x5618353e2668 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x5618353e2520 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x5618353e2598 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x5618353e2a20 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x5618353e2728 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x5618353e27a0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x5618353e2818 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x5618353e2890 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x5618353e2910 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x5618353e2d80 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x5618353e2b00 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x5618353e2b80 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x5618353e2c00 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x5618353e2c80 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x5618353e2e60 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x5618353e2fa0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x5618353e2f10 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x5618353e30f0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5618353e3058 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618353e32f8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x5618353e31a8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x5618353e3220 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618353e3478 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x5618353e33b8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618353e35c0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x5618353e3530 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x5618353e3800 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x5618353e3680 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5618353e3728 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x5618353e3988 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x5618353e38c0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x5618353e3a30 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5618353e3b48 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x5618353e3bf0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x5618353e3c58 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x5618353e3d10 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x561835439000 <col:16, line:150:9>
| |-CXXConstructorDecl 0x5618353e3ee8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x5618353e3dd0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x5618353e3e50 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x5618353e3bf0 'idx' 'int'
| | | `-ImplicitCastExpr 0x561835439050 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x561835439010 <col:19> 'int' lvalue ParmVar 0x5618353e3dd0 'i' 'int'
| | |-CXXCtorInitializer Field 0x5618353e3c58 'port' 'int'
| | | `-ImplicitCastExpr 0x5618354390d0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x561835439090 <col:28> 'int' lvalue ParmVar 0x5618353e3e50 'p' 'int'
| | `-CompoundStmt 0x561835439120 <col:31, line:153:9>
| |-CXXMethodDecl 0x5618353e40c8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5618353e3fd8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561835439320 <col:46, line:157:9>
| |   `-ReturnStmt 0x561835439310 <line:156:13, col:46>
| |     `-BinaryOperator 0x5618354392f0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x5618354391f0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x5618354391c0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561835439140 <col:20> 'const int' lvalue ->idx 0x5618353e3bf0
| |       | |   `-CXXThisExpr 0x561835439130 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5618354391d8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561835439190 <col:27, col:29> 'const int' lvalue .idx 0x5618353e3bf0
| |       |     `-DeclRefExpr 0x561835439170 <col:27> 'const Router::Port' lvalue ParmVar 0x5618353e3fd8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5618354392d0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x5618354392a0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x561835439220 <col:36> 'const int' lvalue ->port 0x5618353e3c58
| |         |   `-CXXThisExpr 0x561835439210 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5618354392b8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x561835439270 <col:44, col:46> 'const int' lvalue .port 0x5618353e3c58
| |             `-DeclRefExpr 0x561835439250 <col:44> 'const Router::Port' lvalue ParmVar 0x5618353e3fd8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5618353e4210 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5618353e4180 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561835439528 <col:46, line:160:9>
| |   `-ReturnStmt 0x561835439518 <line:159:13, col:46>
| |     `-BinaryOperator 0x5618354394f8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x5618354393f8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x5618354393c8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561835439348 <col:20> 'const int' lvalue ->idx 0x5618353e3bf0
| |       | |   `-CXXThisExpr 0x561835439338 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5618354393e0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561835439398 <col:27, col:29> 'const int' lvalue .idx 0x5618353e3bf0
| |       |     `-DeclRefExpr 0x561835439378 <col:27> 'const Router::Port' lvalue ParmVar 0x5618353e4180 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x5618354394d8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x5618354394a8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x561835439428 <col:36> 'const int' lvalue ->port 0x5618353e3c58
| |         |   `-CXXThisExpr 0x561835439418 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x5618354394c0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x561835439478 <col:44, col:46> 'const int' lvalue .port 0x5618353e3c58
| |             `-DeclRefExpr 0x561835439458 <col:44> 'const Router::Port' lvalue ParmVar 0x5618353e4180 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5618353e4358 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5618353e42c8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x561835439850 <col:45, line:163:9>
| |   `-ReturnStmt 0x561835439840 <line:162:13, col:65>
| |     `-BinaryOperator 0x561835439820 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x561835439600 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5618354395d0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561835439550 <col:20> 'const int' lvalue ->idx 0x5618353e3bf0
| |       | |   `-CXXThisExpr 0x561835439540 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x5618354395e8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5618354395a0 <col:26, col:28> 'const int' lvalue .idx 0x5618353e3bf0
| |       |     `-DeclRefExpr 0x561835439580 <col:26> 'const Router::Port' lvalue ParmVar 0x5618353e42c8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x561835439800 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x5618354397e0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x5618354396e0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5618354396b0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x561835439630 <col:36> 'const int' lvalue ->idx 0x5618353e3bf0
| |           | |   `-CXXThisExpr 0x561835439620 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5618354396c8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x561835439680 <col:43, col:45> 'const int' lvalue .idx 0x5618353e3bf0
| |           |     `-DeclRefExpr 0x561835439660 <col:43> 'const Router::Port' lvalue ParmVar 0x5618353e42c8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x5618354397c0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x561835439790 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x561835439710 <col:52> 'const int' lvalue ->port 0x5618353e3c58
| |             |   `-CXXThisExpr 0x561835439700 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x5618354397a8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x561835439760 <col:59, col:61> 'const int' lvalue .port 0x5618353e3c58
| |                 `-DeclRefExpr 0x561835439740 <col:59> 'const Router::Port' lvalue ParmVar 0x5618353e42c8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x5618353e44a0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x5618353e4410 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561835439b78 <col:46, line:166:9>
| |   `-ReturnStmt 0x561835439b68 <line:165:13, col:66>
| |     `-BinaryOperator 0x561835439b48 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x561835439928 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x5618354398f8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561835439878 <col:20> 'const int' lvalue ->idx 0x5618353e3bf0
| |       | |   `-CXXThisExpr 0x561835439868 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561835439910 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x5618354398c8 <col:26, col:28> 'const int' lvalue .idx 0x5618353e3bf0
| |       |     `-DeclRefExpr 0x5618354398a8 <col:26> 'const Router::Port' lvalue ParmVar 0x5618353e4410 'x' 'const Router::Port &'
| |       `-ParenExpr 0x561835439b28 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x561835439b08 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x561835439a08 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x5618354399d8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x561835439958 <col:36> 'const int' lvalue ->idx 0x5618353e3bf0
| |           | |   `-CXXThisExpr 0x561835439948 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x5618354399f0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x5618354399a8 <col:43, col:45> 'const int' lvalue .idx 0x5618353e3bf0
| |           |     `-DeclRefExpr 0x561835439988 <col:43> 'const Router::Port' lvalue ParmVar 0x5618353e4410 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x561835439ae8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x561835439ab8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x561835439a38 <col:52> 'const int' lvalue ->port 0x5618353e3c58
| |             |   `-CXXThisExpr 0x561835439a28 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x561835439ad0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x561835439a88 <col:60, col:62> 'const int' lvalue .port 0x5618353e3c58
| |                 `-DeclRefExpr 0x561835439a68 <col:60> 'const Router::Port' lvalue ParmVar 0x5618353e4410 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x561835439b90 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x561835439b90
| | `-ParmVarDecl 0x561835439ca8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x561835439d48 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x561835439d48
| | `-ParmVarDecl 0x561835439e58 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x561835439ef0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56183543a1c0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x56183543a1c0
| | `-ParmVarDecl 0x56183543a2c8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x56183543a338 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56183543a448 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x56183543a768 <col:12>
|     |-BinaryOperator 0x56183543a608 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56183543a5c0 <col:12> 'int' lvalue ->idx 0x5618353e3bf0
|     | | `-CXXThisExpr 0x56183543a5b0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56183543a5f0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56183543a580 <col:12> 'int' xvalue .idx 0x5618353e3bf0
|     |     `-CXXStaticCastExpr 0x56183543a550 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56183543a520 <col:12> 'Router::Port' lvalue ParmVar 0x56183543a448 '' 'Router::Port &&'
|     |-BinaryOperator 0x56183543a710 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56183543a6c8 <col:12> 'int' lvalue ->port 0x5618353e3c58
|     | | `-CXXThisExpr 0x56183543a6b8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56183543a6f8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56183543a688 <col:12> 'int' xvalue .port 0x5618353e3c58
|     |     `-CXXStaticCastExpr 0x56183543a658 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56183543a628 <col:12> 'Router::Port' lvalue ParmVar 0x56183543a448 '' 'Router::Port &&'
|     `-ReturnStmt 0x56183543a758 <col:12>
|       `-UnaryOperator 0x56183543a740 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56183543a730 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x5618353e4560 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5618353e4678 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x5618353e4868 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x5618353e4920 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x5618353e4868 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x561835439ec8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56183543a000 <col:22, line:173:9>
| |-CXXConstructorDecl 0x5618353e4c58 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x5618353e49e0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x5618353e4a60 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x5618353e4ae0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x5618353e4b60 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x5618353e4868 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56183543a010 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56183543dfc0 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x56183543a838 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x56183543a800 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x56183543a7e8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x56183543a4d0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56183543a338 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x56183543a0e0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x56183543a0c8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x56183543a078 <col:13> 'Router::Port [2]' lvalue ->p 0x5618353e4868
| |   |   | |   `-CXXThisExpr 0x56183543a068 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x56183543a0a8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x56183543a4b8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x56183543a180 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x56183543a150 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x56183543a110 <col:25> 'int' lvalue ParmVar 0x5618353e4ae0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x56183543a168 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x56183543a130 <col:33> 'int' lvalue ParmVar 0x5618353e4b60 'to_port' 'int'
| |   `-ExprWithCleanups 0x56183543dfa8 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x56183543df70 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56183543df58 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x56183543df38 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56183543a338 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x56183543a8c8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x56183543a8b0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x56183543a860 <col:13> 'Router::Port [2]' lvalue ->p 0x5618353e4868
| |       | |   `-CXXThisExpr 0x56183543a850 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x56183543a890 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x56183543df20 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x56183543dee0 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x56183543a938 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x56183543a8f8 <col:25> 'int' lvalue ParmVar 0x5618353e49e0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x56183543a950 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x56183543a918 <col:35> 'int' lvalue ParmVar 0x5618353e4a60 'from_port' 'int'
| |-CXXMethodDecl 0x5618353e4e28 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x5618353e4d38 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x56183543e578 <col:45, line:182:9>
| |   |-ParenExpr 0x56183543e458 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56183543e428 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56183543e100 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56183543e0d0 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56183543e038 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56183543e020 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56183543dfe0 <col:34> 'int' lvalue ParmVar 0x5618353e4d38 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56183543e000 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56183543e0b0 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56183543e098 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56183543e058 <col:44> 'int' lvalue ParmVar 0x5618353e4d38 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56183543e078 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56183543e160 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56183543e140 <col:59> 'int' 0
| |   |   `-CallExpr 0x56183543e388 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56183543e370 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56183543e350 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56183543e3c8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56183543e1d0 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56183543e3e0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56183543e1f8 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56183543e3f8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56183543e230 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x56183543e410 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56183543e338 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56183543e320 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56183543e2c8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x56183543e568 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x56183543e548 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56183543e518 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56183543e488 <col:20> 'Router::Port const[2]' lvalue ->p 0x5618353e4868
| |       |   `-CXXThisExpr 0x56183543e478 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56183543e530 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56183543e4b8 <col:22> 'int' lvalue ParmVar 0x5618353e4d38 'i' 'int'
| |-CXXMethodDecl 0x5618353e4fd8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x5618353e4ee8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x56183543eaf0 <col:33, line:186:9>
| |   |-ParenExpr 0x56183543ea10 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56183543e9e0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56183543e6b8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56183543e688 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56183543e5f0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56183543e5d8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56183543e598 <col:34> 'int' lvalue ParmVar 0x5618353e4ee8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56183543e5b8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56183543e668 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56183543e650 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56183543e610 <col:44> 'int' lvalue ParmVar 0x5618353e4ee8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56183543e630 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56183543e718 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56183543e6f8 <col:59> 'int' 0
| |   |   `-CallExpr 0x56183543e940 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56183543e928 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56183543e908 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56183543e980 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56183543e788 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56183543e998 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56183543e7b0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56183543e9b0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56183543e7e8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x56183543e9c8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56183543e8f0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56183543e8d8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56183543e888 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x56183543eae0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x56183543eac0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56183543ea90 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56183543ea40 <col:20> 'Router::Port [2]' lvalue ->p 0x5618353e4868
| |       |   `-CXXThisExpr 0x56183543ea30 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56183543eaa8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56183543ea70 <col:22> 'int' lvalue ParmVar 0x5618353e4ee8 'i' 'int'
| |-CXXMethodDecl 0x5618353e5178 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x5618353e50b8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x56183543eec8 <col:52, line:190:9>
| |   `-ReturnStmt 0x56183543eeb8 <line:189:13, col:51>
| |     `-BinaryOperator 0x56183543ee98 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x56183543ecb0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x56183543ec98 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x56183543ec50 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5618353e40c8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x56183543eb88 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x56183543eb70 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x56183543eb20 <col:20> 'Router::Port const[2]' lvalue ->p 0x5618353e4868
| |       | | |   `-CXXThisExpr 0x56183543eb10 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x56183543eb50 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x56183543ec30 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x56183543ec18 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x56183543ebc8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x5618353e4868
| |       |   |   `-DeclRefExpr 0x56183543eba8 <col:28> 'const Router::Connection' lvalue ParmVar 0x5618353e50b8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x56183543ebf8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x56183543ee60 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x56183543ee48 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x56183543ee28 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5618353e40c8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x56183543ed60 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x56183543ed48 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x56183543ecf8 <col:38> 'Router::Port const[2]' lvalue ->p 0x5618353e4868
| |         | |   `-CXXThisExpr 0x56183543ece8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x56183543ed28 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x56183543ee08 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x56183543edf0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x56183543eda0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5618353e4868
| |           |   `-DeclRefExpr 0x56183543ed80 <col:46> 'const Router::Connection' lvalue ParmVar 0x5618353e50b8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x56183543edd0 <col:50> 'int' 1
| `-CXXMethodDecl 0x5618353e52c0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x5618353e5230 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x56183543f460 <col:51, line:193:9>
|     `-ReturnStmt 0x56183543f450 <line:192:13, col:69>
|       `-BinaryOperator 0x56183543f430 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x56183543f058 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x56183543f040 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x56183543f020 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5618353e4358 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x56183543ef58 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x56183543ef40 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x56183543eef0 <col:20> 'Router::Port const[2]' lvalue ->p 0x5618353e4868
|         | | |   `-CXXThisExpr 0x56183543eee0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x56183543ef20 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x56183543f000 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x56183543efe8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x56183543ef98 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x5618353e4868
|         |   |   `-DeclRefExpr 0x56183543ef78 <col:27> 'const Router::Connection' lvalue ParmVar 0x5618353e5230 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x56183543efc8 <col:31> 'int' 0
|         `-ParenExpr 0x56183543f410 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x56183543f3f0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x56183543f208 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x56183543f1f0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x56183543f1d0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5618353e40c8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x56183543f108 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x56183543f0f0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x56183543f0a0 <col:38> 'Router::Port const[2]' lvalue ->p 0x5618353e4868
|             | | |   `-CXXThisExpr 0x56183543f090 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x56183543f0d0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x56183543f1b0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x56183543f198 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x56183543f148 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x5618353e4868
|             |   |   `-DeclRefExpr 0x56183543f128 <col:46> 'const Router::Connection' lvalue ParmVar 0x5618353e5230 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x56183543f178 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x56183543f3b8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x56183543f3a0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56183543f380 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x5618353e4358 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x56183543f2b8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x56183543f2a0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x56183543f250 <col:56> 'Router::Port const[2]' lvalue ->p 0x5618353e4868
|               | |   `-CXXThisExpr 0x56183543f240 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x56183543f280 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x56183543f360 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x56183543f348 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x56183543f2f8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x5618353e4868
|                 |   `-DeclRefExpr 0x56183543f2d8 <col:63> 'const Router::Connection' lvalue ParmVar 0x5618353e5230 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x56183543f328 <col:67> 'int' 1
|-AccessSpecDecl 0x5618353e5380 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x5618353e53a8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x5618353e5460 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x5618353e5520 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5618353e5570 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5618353e55c0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x5618353e5610 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x5618353e5660 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x5618353e56b0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x5618353e57c8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5618353e57a8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x5618353e5790 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x5618353e5770 <col:25> 'int' 2
| |-EnumConstantDecl 0x5618353e5870 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5618353e5850 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x5618353e5838 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x5618353e5818 <col:48> 'int' 1
| |-EnumConstantDecl 0x5618353e5900 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5618353e58e0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x5618353e58c0 <col:71> 'int' 0
| |-EnumConstantDecl 0x5618353e5990 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x5618353e5970 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x5618353e5950 <col:30> 'int' 1
| `-EnumConstantDecl 0x5618353e5a20 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x5618353e5a00 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x5618353e59e0 <col:50> 'int' 2
|-FieldDecl 0x5618353e5a80 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x5618353e5ae0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x5618353e5b48 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x5618353e5be8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x5618353e5bc8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x5618353e5b98 <col:30> 'int' 1
|-FieldDecl 0x5618353e5c88 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x5618353e5c68 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x5618353e5c38 <col:33> 'int' 1
|-FieldDecl 0x5618353e5d28 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x5618353e5d08 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x5618353e5cd8 <col:32> 'int' 1
|-FieldDecl 0x5618353e5d90 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x5618353e5df0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x5618353f1040 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x5618353fcb40 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5618353fcc40 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56183540a3d0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x5618354111e0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x561835411230 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x561835411348 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x5618354113e8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835411448 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x5618354114e0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x5618354114e0
| | `-ParmVarDecl 0x5618354115f8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x561835411698 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561835411698
| | `-ParmVarDecl 0x5618354117a8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x561835411848 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561835411848
| | `-ParmVarDecl 0x561835411958 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x5618354119c8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x5618354119c8
| | `-ParmVarDecl 0x561835411ad8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x561835411b60 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x561835411b60
|-FieldDecl 0x561835420bb0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x561835420c10 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x561835420d20 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x561835421078 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x561835421180 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56183542a710 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x56183542a820 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56183542a920 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56183542aa30 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56183542ab40 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56183542ac50 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56183542ad60 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x56183542adb0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x56183542aeb0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x56183542af00 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56183542ae90 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x56183542ae70 <col:29> 'int' 256
|-FieldDecl 0x56183542af60 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x56183542afc8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x56183542b030 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x56183542b130 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5618354342b0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x561835434310 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x561835434370 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x5618354343c0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x5618354344d8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x561835434568 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x561835434670 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x5618354346c0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x561835434650 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x561835434630 <col:27> 'int' 4096
| |-FieldDecl 0x5618354346e8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x561835434750 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x561835434948 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x5618354349d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x561835434b98 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x561835434a38 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x561835434ab0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x5618354346e8 'name' 'String'
| | | `-CXXConstructExpr 0x56183543f4b8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x56183543f478 <col:20> 'const String' lvalue ParmVar 0x561835434a38 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x561835434750 'nsig' 'int'
| | | `-IntegerLiteral 0x56183543f510 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x561835434948 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x56183543f5f8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x5618354349d8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x56183543f5b8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56183543f578 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x561835434ab0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x56183543f888 <col:42, line:289:9>
| |   `-CallExpr 0x56183543f838 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x56183543f820 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56183543f800 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x561834ff0478 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x56183543f870 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x56183543f748 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x56183543f728 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x56183543f710 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x56183543f6c0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x561835434948
| |     |     |   `-CXXThisExpr 0x56183543f6b0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x56183543f6f0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x56183543f760 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x56183543f7e0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x56183543f7c0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x56183543f790 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x561835434948 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x56183543f780 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x561835434c78 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561835434c78
| | `-ParmVarDecl 0x561835434d88 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x561835434e28 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561835434e28
| | `-ParmVarDecl 0x561835434f38 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x561835434fd8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561835434fd8
| | `-ParmVarDecl 0x5618354350e8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x561835435158 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561835435158
| | `-ParmVarDecl 0x561835435268 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x5618354352f0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x5618354352f0
|-FieldDecl 0x5618354353e0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x561835435440 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x5618354354a0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x561835435500 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x561835435560 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x561835435670 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561835435770 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x5618354357d0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x561835435918 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x561835435858 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x561835435ac8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x5618354359d8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x561835435c10 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x561835435b80 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x561835435fb8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x561835435cc8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x561835435d40 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x561835435dc0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x561835435e38 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x561835435eb0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561835438ff0 <col:57> 'bool' false
|-CXXMethodDecl 0x561835436128 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561835436090 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x561835436278 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x5618354361e0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x5618354363c8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561835436330 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x561835436520 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x561835436488 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x561835436840 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x5618354365d8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x561835436650 <col:50> col:54 'bool'
| |-ParmVarDecl 0x5618354366d0 <col:56> col:59 'int'
| `-ParmVarDecl 0x561835436748 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5618354369a8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561835436910 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x561835436a70 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x561835436b30 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x561835436d30 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x561835436be0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x561835436c58 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x561835436e00 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x561835436f48 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x561835436eb0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x56183543fac0 <col:42, line:326:5>
|   `-ReturnStmt 0x56183543fab0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x56183543fa98 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x56183543fa78 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x56183543fa48 <col:16, col:45> '<bound member function type>' .back 0x56183540f288
|           `-ArraySubscriptExpr 0x56183543f9c8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x56183543f998 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56183543f8b0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x561835421078
|             |   `-CXXThisExpr 0x56183543f8a0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x56183543f9b0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x56183543f8e0 <col:38> 'bool' lvalue ParmVar 0x561835436eb0 'isout' 'bool'
|-CXXMethodDecl 0x561835437118 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x561835437000 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x561835437078 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x561835437270 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x5618354371d8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x561835437518 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x561835437328 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x5618354373a0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x561835437420 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x5618354376f0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x5618354375e0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x561835437658 <col:36> col:40 'bool'
|-CXXMethodDecl 0x561835437878 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x5618354377b8 <col:30> col:33 'int'
|-CXXMethodDecl 0x561835437b10 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x561835437938 <col:23> col:26 'int'
| |-ParmVarDecl 0x5618354379b0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x561835437a28 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x561835437d28 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x561835437bd8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x561835437c50 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x561835437f38 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x561835437df0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x561835437e68 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x5618354380b8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x561835437ff8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x5618354382b8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x561835438170 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x5618354381e8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x561835438490 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561835438378 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x5618354383f8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x561835438770 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561835438550 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x5618354385c8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561835438648 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x5618354386c0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x561835438850 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5618354388b0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x561835438b30 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x561835438a30 parent 0x5618352f1d00 prev 0x561835301928 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x561835438910 <col:36> col:39 'int'
    `-ParmVarDecl 0x561835438990 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352f1d00 prev 0x5618352f1a80 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618352f1df8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5618352f1e88 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5618352f1ee8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5618352f1fd8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5618352f20d8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5618352f22a8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5618352f2158 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5618352f21d0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5618352f2438 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5618352f2370 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5618352f24e0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5618352f2618 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5618352f2550 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5618352f27b8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5618352f26f8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5618352f2958 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5618352f2898 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5618352f2a00 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5618352f2b00 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5618352f2be0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352f2ae0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5618352f2ac0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5618352f2b90 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5618352f2bf8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352f2b70 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5618352f2b50 <col:44> 'int' 2
|-CXXMethodDecl 0x5618352f2d40 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5618352f2c28 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5618352f2ca8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5618352f2e98 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5618352f2e08 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5618352f30d8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5618352f2f58 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5618352f2fd0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5618352f3188 <col:20>
| `-OptimizeNoneAttr 0x5618352f31e0 <col:30>
|-CXXMethodDecl 0x5618352f32e8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5618352f3220 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5618352f3390 <col:20>
| `-OptimizeNoneAttr 0x5618352f33e8 <col:30>
|-CXXMethodDecl 0x5618352f3438 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5618352f3500 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5618352f3618 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5618352f36a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5618352f3728 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5618352f37b0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5618352f3838 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5618352f38c8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5618352f3988 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5618352f3a10 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5618352f3a98 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5618352f3b20 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5618352f3ba8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5618352f3c30 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5618352f3cc0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5618352f3d80 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5618352f3e10 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5618352f3f60 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5618352f3ec8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5618352f40f0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5618352f4020 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5618352f43a0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5618352f41a8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5618352f4228 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5618352f42a8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5618352f4458 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5618352f4560 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5618352f47f0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352f4540 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5618352f4520 <col:33> 'int' 0
| |-EnumConstantDecl 0x5618352f45f0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5618352f4808 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352f45d0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5618352f45b0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5618352f4680 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5618352f4820 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352f4660 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5618352f4640 <col:38> 'int' 90
| |-EnumConstantDecl 0x5618352f4710 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5618352f4838 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352f46f0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5618352f46d0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5618352f47a0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5618352f4850 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352f4780 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5618352f4760 <col:32> 'int' 2000
|-CXXMethodDecl 0x5618352f4890 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5618352f4cd0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5618352f4b40 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5618352f4bb8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618352f4da0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5618352f4f20 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5618352f4e50 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618352f5128 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5618352f4fd8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5618352f5050 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5618352f5228 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5618352f52c8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5618352f5390 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5618352f5420 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5618352f5650 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352f5400 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5618352f53e0 <col:36> 'int' EnumConstant 0x5618352f5390 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5618352f5470 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5618352f54c0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5618352f5510 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5618352f5560 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5618352f55b0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5618352f5600 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5618352f5738 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5618352f5678 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5618352f5800 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5618352f58c0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5618352f5980 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5618352f5a40 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5618352f5b58 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5618352f5c20 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x5618352f5da0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5618352f5cd0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5618352f5ec8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5618352f60c8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5618352f5f78 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5618352f5ff8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x561835303a18 <col:54, line:127:5>
|   |-ParenExpr 0x5618353038c8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x561835303898 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x561835303588 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561835303560 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x561835303548 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x561835303530 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x561835303500 <col:31> 'Router *' lvalue ->_router 0x5618353013e0
|   |   |         `-CXXThisExpr 0x5618353034f0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5618353035e8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618353035c8 <col:48> 'int' 0
|   |   `-CallExpr 0x5618353037f8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5618353037e0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618353037c0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561835303838 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561835303658 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x561835303850 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561835303678 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x561835303868 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618353036b0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x561835303880 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618353037a8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561835303790 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561835303748 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x561835303960 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5618353038f8 <col:9> 'Router *' lvalue ->_router 0x5618353013e0
|   | | `-CXXThisExpr 0x5618353038e8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x561835303948 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561835303928 <col:19> 'Router *' lvalue ParmVar 0x5618352f5f78 'r' 'Router *'
|   `-BinaryOperator 0x5618353039f8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x561835303990 <col:9> 'int' lvalue ->_eindex 0x561835301448
|     | `-CXXThisExpr 0x561835303980 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5618353039e0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5618353039c0 <col:19> 'int' lvalue ParmVar 0x5618352f5ff8 'eindex' 'int'
|-CXXMethodDecl 0x5618352f6250 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5618352f6188 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5618352f6320 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5618352f63e8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5618352f6488 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5618352f66d8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5618352f6550 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5618352f65d0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5618352f6788 <col:20>
| `-OptimizeNoneAttr 0x5618352f67e0 <col:30>
|-CXXMethodDecl 0x5618352f68e8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5618352f6820 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5618352f6990 <col:20>
| `-OptimizeNoneAttr 0x5618352f69e8 <col:30>
|-CXXMethodDecl 0x5618352f6ab8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5618352f6a28 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5618352f6b60 <col:20>
| `-OptimizeNoneAttr 0x5618352f6bb8 <col:30>
|-CXXMethodDecl 0x5618352f6d48 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5618352f6bf0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5618352f6c70 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5618352f6ed8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5618352f6e10 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5618352f7028 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5618352f6f98 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5618352f7178 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5618352f70e8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5618352f72c8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5618352f7238 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5618352f7588 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5618352f7380 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5618352f7400 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5618352f74a8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5618352f7660 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5618352f7720 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5618352f79f0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5618352f78a0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5618352f7918 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5618352f7b18 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5618352f7cf0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5618352f7bd0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5618352f7c50 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5618352f7ed8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5618352f7db8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5618352f7e38 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5618352f8248 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5618352f7f98 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5618352f8010 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5618352f8090 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561835303000 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561835302fe0 <col:106> 'int' 0
| `-ParmVarDecl 0x5618352f8108 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835303038 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835303018 <col:126> 'int' 0
|-CXXMethodDecl 0x5618352f85e8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5618352f8318 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5618352f83b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5618352f8430 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5618352f84a8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835303070 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835303050 <col:114> 'int' 0
|-CXXMethodDecl 0x5618352f8978 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5618352f86c0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5618352f8738 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5618352f87b8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x561835303088 <col:96> 'int' 0
| `-ParmVarDecl 0x5618352f8830 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5618353030c8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5618353030a8 <col:116> 'int' 0
|-CXXMethodDecl 0x5618352f8cf8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5618352f8a48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5618352f8ac0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5618352f8b40 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561835303100 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5618353030e0 <col:109> 'int' 0
| `-ParmVarDecl 0x5618352f8bb8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835303138 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835303118 <col:129> 'int' 0
|-CXXMethodDecl 0x5618352f9078 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5618352f8dc8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5618352f8e40 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5618352f8ec0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5618352f8f38 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561835303170 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561835303150 <col:117> 'int' 0
|-CXXMethodDecl 0x5618352f9408 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5618352f9150 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352f91c8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5618352f9248 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x561835303188 <col:99> 'int' 0
| `-ParmVarDecl 0x5618352f92c0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5618353031c8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5618353031a8 <col:119> 'int' 0
|-CXXMethodDecl 0x5618352f9828 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5618352f94d8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5618352f9558 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5618352f95d0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5618352f9650 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561835303200 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5618353031e0 <col:108> 'int' 0
| `-ParmVarDecl 0x5618352f96d0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x561835303238 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x561835303218 <col:141> 'int' 0
|-CXXMethodDecl 0x5618352f9c48 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5618352f9900 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5618352f9980 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5618352f99f8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5618352f9a78 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5618352f9af8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561835303250 <col:121> 'int' 0
|-CXXMethodDecl 0x5618352fa078 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5618352f9d28 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5618352f9da8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5618352f9e20 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5618352f9ea0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x561835303270 <col:98> 'int' 0
| `-ParmVarDecl 0x5618352f9f20 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561835303290 <col:123> 'int' 0
|-CXXMethodDecl 0x5618352fa340 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5618352fa150 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5618352fa1d0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5618352fa250 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5618353032b0 <col:80> 'int' 0
|-EnumDecl 0x5618352fa3f8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5618352fa500 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5618352fa790 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352fa4e0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5618352fa4c0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5618352fa590 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5618352fa7a8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352fa570 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5618352fa550 <col:40> 'int' 2
| |-EnumConstantDecl 0x5618352fa620 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5618352fa7c0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352fa600 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5618352fa5e0 <col:44> 'int' 4
| |-EnumConstantDecl 0x5618352fa6b0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5618352fa7d8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352fa690 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5618352fa670 <col:36> 'int' 7
| `-EnumConstantDecl 0x5618352fa740 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5618352fa7f0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352fa720 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5618352fa700 <col:34> 'int' 6
|-CXXMethodDecl 0x5618352faaa8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5618352fa818 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5618352fa8b8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5618352fa938 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5618352fa9b0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x561835303368 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561835303350 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x561835303338 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561835303318 <col:98, col:105> 'String' (CXXTemporary 0x561835303318)
|           `-CXXTemporaryObjectExpr 0x5618353032e0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5618352fad48 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5618352fab78 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5618352fabf0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5618352fac68 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561835303418 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561835303400 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5618353033e8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5618353033c8 <col:94, col:101> 'String' (CXXTemporary 0x5618353033c8)
| |         `-CXXTemporaryObjectExpr 0x561835303390 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x561835303c00 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x561835303b78 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x561835303b48 <col:9> '<bound member function type>' ->add_task_handlers 0x5618352faaa8
|     | `-CXXThisExpr 0x561835303b38 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561835303bb8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561835303ab8 <col:27> 'Task *' lvalue ParmVar 0x5618352fab78 'task' 'Task *'
|     |-ImplicitCastExpr 0x561835303bd0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x561835303ad8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5618352fabf0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x561835303be8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561835303af8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5618352fa740 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561835303b18 <col:62> 'const String' lvalue ParmVar 0x5618352fac68 'prefix' 'const String &'
|-CXXMethodDecl 0x5618352faf58 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5618352fae10 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5618352fae88 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5618353034c8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5618353034b0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561835303498 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561835303478 <col:70, col:77> 'String' (CXXTemporary 0x561835303478)
| |         `-CXXTemporaryObjectExpr 0x561835303440 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x561835303dd8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x561835303d50 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x561835303d20 <col:9> '<bound member function type>' ->add_task_handlers 0x5618352faaa8
|     | `-CXXThisExpr 0x561835303d10 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561835303d90 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561835303c90 <col:27> 'Task *' lvalue ParmVar 0x5618352fae10 'task' 'Task *'
|     |-ImplicitCastExpr 0x561835303da8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x561835303cb0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x561835303dc0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561835303cd0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5618352fa740 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561835303cf0 <col:57> 'const String' lvalue ParmVar 0x5618352fae88 'prefix' 'const String &'
|-CXXMethodDecl 0x5618352fb238 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5618352fb020 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fb0a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fb118 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5618352fb4e8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5618352fb308 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fb388 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fb408 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5618352fb7d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5618352fb5b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fb638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fb6b0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5618352fba88 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5618352fb8a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fb928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fb9a8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5618352fbd38 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5618352fbb58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fbbd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fbc58 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5618352fbfe8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5618352fbe08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fbe88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fbf00 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5618352fc298 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5618352fc0b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fc138 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fc1b8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5618352fc5a8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5618352fc3c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fc440 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fc4c0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5618352fc888 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5618352fc678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fc6f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fc7a0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5618352fcb68 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5618352fc958 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fc9d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fca80 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5618352fcdd0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5618352fcc38 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5618352fccb8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5618352fcd30 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5618352fd078 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5618352fcea0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5618352fcf20 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5618352fcf98 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5618352fd328 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5618352fd148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fd1c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fd248 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5618352fd5d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5618352fd3f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fd478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fd4f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5618352fd888 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5618352fd6a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fd728 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fd7a0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5618352fdb58 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5618352fd958 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fd9d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5618352fda78 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5618352fde88 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5618352fdc28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5618352fdca8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5618352fdd20 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5618352fdd98 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5618353034e0 <col:93> 'bool' false
|-CXXMethodDecl 0x5618352fe070 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5618352fdf58 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5618352fdfd8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5618352fe248 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5618352fe130 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5618352fe1b0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5618352fe528 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5618352fe308 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5618352fe380 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5618352fe400 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5618352fe478 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5618352fe818 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5618352fe5f8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5618352fe670 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5618352fe6f0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5618352fe768 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5618352fea50 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5618352fe8f0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5618352fe970 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5618352fec38 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5618352feb18 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5618352feb98 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5618352fece8 prev 0x5618352f6488 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5618352fede0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5618352fee70 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5618352feee8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5618352fefa8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5618352ff070 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5618352ff1e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5618352ff120 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5618352ff290 <col:24>
| | `-OptimizeNoneAttr 0x5618352ff2e8 <col:34>
| |-CXXMethodDecl 0x5618352ff330 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5618352ff5e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5618352ff3e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5618352ff458 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5618352ff4d8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5618352ff6a0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5618352ff6d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5618352ff740 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5618352ff7c8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5618352ffae8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5618352ff880 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5618352ff8f8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5618352ff970 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5618352ff9f0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5618352ffc00 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x561835307578 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561835307578
| | `-ParmVarDecl 0x561835307688 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x561835307728 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561835307728
| | `-ParmVarDecl 0x561835307838 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5618354f2638 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5618352ffc78 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5618352ffd18 <col:38> "" ""
|-CXXMethodDecl 0x5618352ffda8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5618352ffe48 <col:44> "" ""
|-AccessSpecDecl 0x5618352ffeb8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5618352ffee0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5618352fffe0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x561835300030 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352fffc0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5618352fffa0 <col:27> 'int' 4
|-FieldDecl 0x5618353000e8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x561835300298 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x561835300350 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5618353013e0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x561835301448 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x561835301598 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5618353014d8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x561835301748 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x561835301658 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x561835301928 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x561835301808 <col:20> col:23 'int'
| `-ParmVarDecl 0x561835301888 <col:25> col:28 'int'
|-CXXMethodDecl 0x561835301bd0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5618353019f0 <col:23> col:26 'int'
| |-ParmVarDecl 0x561835301a70 <col:28> col:31 'int'
| `-ParmVarDecl 0x561835301ae8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x561835301c88 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x561835301d50 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x561835301da0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x561835301df0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x561835301fd0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x561835301e80 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x561835301ef8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561835302278 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x561835302098 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x561835302118 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x561835302190 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x561835302498 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x561835302348 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5618353023c8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5618353027d0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x561835302558 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5618353025d8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x561835302650 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5618353026d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x5618353029b8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5618353028a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561835302920 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x561835302b08 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x561835302a78 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x561835302e88 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x561835302bc8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x561835302c48 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x561835302cc0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x561835302d40 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x561835302fa0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56183530ccb8 <../elements/ip/iproutetable.hh:188:1, line:212:1> line:188:7 referenced class IPRouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56183530ce18 <col:1, col:7> col:7 implicit class IPRouteTable
|-AccessSpecDecl 0x56183530cea8 <col:39, col:45> col:39 public
|-CXXMethodDecl 0x56183530cfa8 <line:190:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5618352f40f0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x56183530cee8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x56183530d280 <line:191:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5618352f4cd0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56183530d130 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x56183530d1a8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x56183530d350 <line:192:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5618352f4da0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56183530d660 <line:194:5, col:112> col:17 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56183530d400 <col:27, col:42> col:42 route 'const IPRoute &'
| |-ParmVarDecl 0x56183530d478 <col:49, col:54> col:54 allow_replace 'bool'
| |-ParmVarDecl 0x56183530d4f0 <col:69, col:78> col:78 replaced_route 'IPRoute *'
| `-ParmVarDecl 0x56183530d568 <col:94, col:108> col:108 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56183530d910 <line:195:5, col:94> col:17 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56183530d730 <col:30, col:45> col:45 route 'const IPRoute &'
| |-ParmVarDecl 0x56183530d7a8 <col:52, col:61> col:61 removed_route 'IPRoute *'
| `-ParmVarDecl 0x56183530d820 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56183530db60 <line:196:5, col:69> col:17 lookup_route 'int (IPAddress, IPAddress &) const' virtual pure
| |-ParmVarDecl 0x56183530d9d8 <col:30, col:40> col:40 addr 'IPAddress'
| `-ParmVarDecl 0x56183530da50 <col:46, col:57> col:57 gw 'IPAddress &'
|-CXXMethodDecl 0x56183530dc58 <line:197:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x56183530de20 <line:199:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5618352f22a8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56183530dd10 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56183530dd88 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x56183530e100 <line:201:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56183530dee0 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x56183530df58 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x56183530dfd8 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x56183530e050 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x56183530e3f0 <line:202:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56183530e1d0 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x56183530e248 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x56183530e2c8 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x56183530e340 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x56183530e6e0 <line:203:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56183530e4c0 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x56183530e538 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x56183530e5b8 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x56183530e630 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x56183530ea50 <line:204:5, col:94> col:16 lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x56183530e7b8 <col:31, col:35> col:35 operation 'int'
| |-ParmVarDecl 0x56183530e830 <col:46, col:52> col:53 'String &'
| |-ParmVarDecl 0x56183530e8a8 <col:55, col:62> col:63 'Element *'
| |-ParmVarDecl 0x56183530e920 <col:65, col:78> col:79 'const Handler *'
| `-ParmVarDecl 0x56183530e998 <col:81, col:93> col:94 'ErrorHandler *'
|-CXXMethodDecl 0x56183530ec40 <line:205:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56183530eb28 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x56183530eba8 <col:43, col:47> col:48 'void *'
|-AccessSpecDecl 0x56183530ecf0 <line:207:3, col:10> col:3 private
|-EnumDecl 0x56183530ed18 <line:209:5, col:41> col:5
| |-EnumConstantDecl 0x56183530ede0 <col:12> col:12 CMD_ADD 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| |-EnumConstantDecl 0x56183530ee30 <col:21> col:21 CMD_SET 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| `-EnumConstantDecl 0x56183530ee80 <col:30> col:30 CMD_REMOVE 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
|-CXXMethodDecl 0x56183530f3a0 <line:210:5, col:92> col:9 run_command 'int (int, const String &, Vector<IPRoute> *, ErrorHandler *)'
| |-ParmVarDecl 0x56183530eee8 <col:21, col:25> col:25 command 'int'
| |-ParmVarDecl 0x56183530ef60 <col:34, col:47> col:48 'const String &'
| |-ParmVarDecl 0x56183530f1e0 <col:50, col:67> col:67 old_routes 'Vector<IPRoute> *'
| `-ParmVarDecl 0x56183530f258 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXConstructorDecl 0x56183530f4a0 <line:188:7> col:7 implicit IPRouteTable 'void (const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x56183530f4a0
| `-ParmVarDecl 0x56183530f5b8 <col:7> col:7 'const IPRouteTable &'
|-CXXConstructorDecl 0x56183530f658 <col:7> col:7 implicit IPRouteTable 'void (IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x56183530f658
| `-ParmVarDecl 0x56183530f768 <col:7> col:7 'IPRouteTable &&'
|-CXXMethodDecl 0x56183530f808 <col:7> col:7 implicit operator= 'IPRouteTable &(const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x56183530f808
| `-ParmVarDecl 0x56183530f918 <col:7> col:7 'const IPRouteTable &'
|-CXXMethodDecl 0x56183530f988 <col:7> col:7 implicit operator= 'IPRouteTable &(IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x56183530f988
| `-ParmVarDecl 0x56183530fa98 <col:7> col:7 'IPRouteTable &&'
|-CXXDestructorDecl 0x56183530fb20 <col:7> col:7 implicit used ~IPRouteTable 'void () noexcept' inline default
| |-Overrides: [ 0x5618352f1fd8 Element::~Element 'void () noexcept' ]
| `-CompoundStmt 0x5618354f2998 <col:7>
`-CXXConstructorDecl 0x5618354f24b8 <col:7> col:7 implicit used IPRouteTable 'void () noexcept(false)' inline default
  |-CXXCtorInitializer 'Element'
  | `-CXXConstructExpr 0x5618354f25d0 <col:7> 'Element' 'void ()'
  `-CompoundStmt 0x5618354f2720 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IPRouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class DirectIPLookup
         0 |   class IPRouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   struct DirectIPLookup::Table _t
       112 |     uint16_t * _tbl_0_23
       120 |     uint16_t * _tbl_24_31
       128 |     struct DirectIPLookup::VirtualPort * _vport
       136 |     struct DirectIPLookup::CleartextEntry * _rtable
       144 |     int * _rt_hashtbl
       152 |     uint8_t * _tbl_0_23_plen
       160 |     uint8_t * _tbl_24_31_plen
       168 |     uint32_t _rtable_size
       172 |     uint32_t _tbl_24_31_size
       176 |     uint32_t _vport_size
       180 |     int _rt_empty_head
       184 |     uint16_t _tbl_24_31_empty_head
       188 |     int _vport_head
       192 |     int _vport_empty_head
       196 |     uint32_t _rtable_capacity
       200 |     uint32_t _tbl_24_31_capacity
       204 |     uint32_t _vport_capacity
           | [sizeof=208, dsize=208, align=8,
           |  nvsize=208, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835271080 <../elements/ip/directiplookup.hh:87:1, line:190:1> line:87:7 class DirectIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRouteTable'
|-CXXRecordDecl 0x5618352711d8 <col:1, col:7> col:7 implicit referenced class DirectIPLookup
|-AccessSpecDecl 0x561835271268 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x5618352712f0 <line:89:5, col:20> col:5 DirectIPLookup 'void ()'
|-CXXDestructorDecl 0x5618352713e0 <line:90:5, col:21> col:5 ~DirectIPLookup 'void ()' noexcept-unevaluated 0x5618352713e0
| `-Overrides: [ 0x56183530fb20 IPRouteTable::~IPRouteTable 'void () noexcept' ]
|-CXXMethodDecl 0x561835271510 <line:92:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5618352f3438 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x561835275518 <col:36, col:63>
|   `-ReturnStmt 0x561835275508 <col:38, col:45>
|     `-ImplicitCastExpr 0x5618352754f0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5618352754c8 <col:45> 'const char [15]' lvalue "DirectIPLookup"
|-CXXMethodDecl 0x5618352715d8 <line:93:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5618352f3500 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x561835275578 <col:36, col:52>
|   `-ReturnStmt 0x561835275568 <col:38, col:45>
|     `-ImplicitCastExpr 0x561835275550 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561835275530 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x5618352716a0 <line:94:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5618352f38c8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5618352755d8 <col:36, col:51>
|   `-ReturnStmt 0x5618352755c8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5618352755b0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x561835275590 <col:45> 'const char []' lvalue Var 0x5618352f3a10 'PUSH' 'const char []'
|-CXXMethodDecl 0x561835271970 <line:96:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56183530d280 IPRouteTable::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x561835271820 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x561835271898 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561835271ac0 <line:97:5, col:36> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x5618352f5738 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x561835271a30 <col:18, col:31> col:31 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x561835271b88 <line:98:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x56183530d350 IPRouteTable::add_handlers 'void ()' ]
|-CXXMethodDecl 0x561835271d50 <line:100:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56183530de20 IPRouteTable::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x561835271c40 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x561835271cb8 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x561835272028 <line:102:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x56183530d660 IPRouteTable::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x561835271e10 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x561835271e88 <col:35> col:39 'bool'
| |-ParmVarDecl 0x561835271f00 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x561835271f78 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x561835272290 <line:103:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x56183530d910 IPRouteTable::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5618352720f8 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x561835272170 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x5618352721e8 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x561835272470 <line:104:5, col:45> col:9 lookup_route 'int (IPAddress, IPAddress &) const'
| |-Overrides: [ 0x56183530db60 IPRouteTable::lookup_route 'int (IPAddress, IPAddress &) const' ]
| |-ParmVarDecl 0x561835272358 <col:22> col:31 'IPAddress'
| `-ParmVarDecl 0x5618352723d0 <col:33, col:42> col:43 'IPAddress &'
|-CXXMethodDecl 0x561835272540 <line:105:5, col:24> col:12 dump_routes 'String ()'
| `-Overrides: [ 0x56183530dc58 IPRouteTable::dump_routes 'String ()' ]
|-CXXMethodDecl 0x561835272810 <line:107:5, col:79> col:16 flush_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5618352725f0 <col:30, col:43> col:44 'const String &'
| |-ParmVarDecl 0x561835272668 <col:46, col:54> col:55 'Element *'
| |-ParmVarDecl 0x5618352726e8 <col:57, col:62> col:63 'void *'
| `-ParmVarDecl 0x561835272760 <col:65, col:78> col:79 'ErrorHandler *'
|-EnumDecl 0x5618352728d0 <line:109:5, line:115:5> line:109:5
| |-EnumConstantDecl 0x561835272a10 <line:110:2, col:22> col:2 RT_SIZE_MAX 'DirectIPLookup::(anonymous enum at ../elements/ip/directiplookup.hh:109:5)'
| | `-ConstantExpr 0x5618352729f0 <col:16, col:22> 'int' Int: 262144
| |   `-BinaryOperator 0x5618352729d0 <col:16, col:22> 'int' '*'
| |     |-IntegerLiteral 0x561835272990 <col:16> 'int' 256
| |     `-IntegerLiteral 0x5618352729b0 <col:22> 'int' 1024
| |-EnumConstantDecl 0x561835272ae0 <line:111:2, col:37> col:2 referenced tbl_24_31_capacity_limit 'DirectIPLookup::(anonymous enum at ../elements/ip/directiplookup.hh:109:5)'
| | `-ConstantExpr 0x561835272ac0 <col:29, col:37> 'int' Int: 8388608
| |   `-BinaryOperator 0x561835272aa0 <col:29, col:37> 'int' '*'
| |     |-IntegerLiteral 0x561835272a60 <col:29> 'int' 32768
| |     `-IntegerLiteral 0x561835272a80 <col:37> 'int' 256
| |-EnumConstantDecl 0x561835272b70 <line:112:2, col:25> col:2 referenced vport_capacity_limit 'DirectIPLookup::(anonymous enum at ../elements/ip/directiplookup.hh:109:5)'
| | `-ConstantExpr 0x561835272b50 <col:25> 'int' Int: 32768
| |   `-IntegerLiteral 0x561835272b30 <col:25> 'int' 32768
| |-EnumConstantDecl 0x561835272c40 <line:113:2, col:23> col:2 referenced PREF_HASHSIZE 'DirectIPLookup::(anonymous enum at ../elements/ip/directiplookup.hh:109:5)'
| | `-ConstantExpr 0x561835272c20 <col:18, col:23> 'int' Int: 65536
| |   `-BinaryOperator 0x561835272c00 <col:18, col:23> 'int' '*'
| |     |-IntegerLiteral 0x561835272bc0 <col:18> 'int' 64
| |     `-IntegerLiteral 0x561835272be0 <col:23> 'int' 1024
| `-EnumConstantDecl 0x561835272ce8 <line:114:2, col:18> col:2 referenced DISCARD_PORT 'DirectIPLookup::(anonymous enum at ../elements/ip/directiplookup.hh:109:5)'
|   `-ConstantExpr 0x561835272cc8 <col:17, col:18> 'int' Int: -1
|     `-UnaryOperator 0x561835272cb0 <col:17, col:18> 'int' prefix '-'
|       `-IntegerLiteral 0x561835272c90 <col:18> 'int' 1
|-CXXRecordDecl 0x561835272d38 <line:117:5, line:123:5> line:117:12 referenced struct CleartextEntry definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561835272e58 <col:5, col:12> col:12 implicit struct CleartextEntry
| |-FieldDecl 0x561835272f00 <line:118:2, col:6> col:6 referenced ll_next 'int'
| |-FieldDecl 0x561835272f68 <line:119:2, col:6> col:6 referenced ll_prev 'int'
| |-FieldDecl 0x561835272fc8 <line:120:2, col:11> col:11 referenced prefix 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835273028 <line:121:2, col:11> col:11 referenced plen 'uint16_t':'unsigned short'
| `-FieldDecl 0x561835273088 <line:122:2, col:10> col:10 referenced vport 'int16_t':'short'
|-CXXRecordDecl 0x5618352730f0 <line:125:5, line:132:5> line:125:12 referenced struct VirtualPort definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561835273208 <col:5, col:12> col:12 implicit struct VirtualPort
| |-FieldDecl 0x5618352732a8 <line:126:2, col:10> col:10 referenced ll_next 'int16_t':'short'
| |-FieldDecl 0x561835273308 <line:127:2, col:10> col:10 referenced ll_prev 'int16_t':'short'
| |-FieldDecl 0x561835273368 <line:128:2, col:10> col:10 referenced refcount 'int32_t':'int'
| |-FieldDecl 0x5618352733c8 <line:129:2, col:12> col:12 referenced gw 'IPAddress'
| |-FieldDecl 0x561835273428 <line:130:2, col:10> col:10 referenced port 'int16_t':'short'
| `-FieldDecl 0x561835273488 <line:131:2, col:10> col:10 padding 'int16_t':'short'
|-CXXRecordDecl 0x5618352734f0 <line:134:5, line:182:5> line:134:12 referenced struct Table definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x561835273608 <col:5, col:12> col:12 implicit referenced struct Table
| |-FieldDecl 0x5618352736a8 <line:136:2, col:12> col:12 referenced _tbl_0_23 'uint16_t *'
| |-FieldDecl 0x561835273708 <line:137:2, col:12> col:12 referenced _tbl_24_31 'uint16_t *'
| |-FieldDecl 0x561835273798 <line:138:2, col:15> col:15 referenced _vport 'DirectIPLookup::VirtualPort *'
| |-FieldDecl 0x561835273828 <line:141:2, col:18> col:18 referenced _rtable 'DirectIPLookup::CleartextEntry *'
| |-FieldDecl 0x561835273890 <line:142:2, col:7> col:7 referenced _rt_hashtbl 'int *'
| |-FieldDecl 0x5618352738f0 <line:143:2, col:11> col:11 referenced _tbl_0_23_plen 'uint8_t *'
| |-FieldDecl 0x561835273950 <line:144:2, col:11> col:11 referenced _tbl_24_31_plen 'uint8_t *'
| |-FieldDecl 0x5618352739b0 <line:146:2, col:11> col:11 referenced _rtable_size 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835273a10 <line:147:2, col:11> col:11 referenced _tbl_24_31_size 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835273a70 <line:148:2, col:11> col:11 referenced _vport_size 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835273ad8 <line:149:2, col:6> col:6 referenced _rt_empty_head 'int'
| |-FieldDecl 0x561835273b38 <line:150:2, col:11> col:11 referenced _tbl_24_31_empty_head 'uint16_t':'unsigned short'
| |-FieldDecl 0x561835273ba0 <line:151:2, col:6> col:6 referenced _vport_head 'int'
| |-FieldDecl 0x561835273c08 <line:152:2, col:6> col:6 referenced _vport_empty_head 'int'
| |-FieldDecl 0x561835273c68 <line:154:2, col:11> col:11 referenced _rtable_capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835273cc8 <line:155:2, col:11> col:11 referenced _tbl_24_31_capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x561835273d28 <line:156:2, col:11> col:11 referenced _vport_capacity 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x561835273de0 <line:158:2, line:161:2> line:158:2 used Table 'void ()'
| | |-CXXCtorInitializer Field 0x5618352736a8 '_tbl_0_23' 'uint16_t *'
| | | `-ImplicitCastExpr 0x561835275630 <line:159:18> 'uint16_t *' <NullToPointer>
| | |   `-IntegerLiteral 0x5618352755f0 <col:18> 'int' 0
| | |-CXXCtorInitializer Field 0x561835273708 '_tbl_24_31' 'uint16_t *'
| | | `-ImplicitCastExpr 0x5618352756b0 <col:33> 'uint16_t *' <NullToPointer>
| | |   `-IntegerLiteral 0x561835275670 <col:33> 'int' 0
| | |-CXXCtorInitializer Field 0x561835273798 '_vport' 'DirectIPLookup::VirtualPort *'
| | | `-ImplicitCastExpr 0x561835275730 <col:44> 'DirectIPLookup::VirtualPort *' <NullToPointer>
| | |   `-IntegerLiteral 0x5618352756f0 <col:44> 'int' 0
| | |-CXXCtorInitializer Field 0x561835273828 '_rtable' 'DirectIPLookup::CleartextEntry *'
| | | `-ImplicitCastExpr 0x5618352757b0 <col:56> 'DirectIPLookup::CleartextEntry *' <NullToPointer>
| | |   `-IntegerLiteral 0x561835275770 <col:56> 'int' 0
| | |-CXXCtorInitializer Field 0x561835273890 '_rt_hashtbl' 'int *'
| | | `-ImplicitCastExpr 0x561835275830 <line:160:20> 'int *' <NullToPointer>
| | |   `-IntegerLiteral 0x5618352757f0 <col:20> 'int' 0
| | |-CXXCtorInitializer Field 0x5618352738f0 '_tbl_0_23_plen' 'uint8_t *'
| | | `-ImplicitCastExpr 0x5618352758b0 <col:39> 'uint8_t *' <NullToPointer>
| | |   `-IntegerLiteral 0x561835275870 <col:39> 'int' 0
| | |-CXXCtorInitializer Field 0x561835273950 '_tbl_24_31_plen' 'uint8_t *'
| | | `-ImplicitCastExpr 0x561835275930 <col:59> 'uint8_t *' <NullToPointer>
| | |   `-IntegerLiteral 0x5618352758f0 <col:59> 'int' 0
| | `-CompoundStmt 0x5618352759a8 <col:62, line:161:2>
| |-CXXDestructorDecl 0x561835273ed0 <line:163:2, line:165:2> line:163:2 used ~Table 'void () noexcept'
| | `-CompoundStmt 0x561835275a18 <col:11, line:165:2>
| |   `-CXXMemberCallExpr 0x5618352759f8 <line:164:6, col:14> 'void'
| |     `-MemberExpr 0x5618352759c8 <col:6> '<bound member function type>' ->cleanup 0x561835274098
| |       `-CXXThisExpr 0x5618352759b8 <col:6> 'DirectIPLookup::Table *' implicit this
| |-CXXMethodDecl 0x561835273fd8 <line:167:2, col:17> col:6 initialize 'int ()'
| |-CXXMethodDecl 0x561835274098 <line:168:2, col:15> col:7 used cleanup 'void ()'
| |-CXXMethodDecl 0x561835274258 <line:170:2, col:55> col:25 used prefix_hash 'uint32_t (uint32_t, uint32_t)' static inline
| | |-ParmVarDecl 0x561835274148 <col:37> col:45 'uint32_t':'unsigned int'
| | `-ParmVarDecl 0x5618352741c0 <col:47> col:55 'uint32_t':'unsigned int'
| |-CXXMethodDecl 0x5618352744e0 <line:172:2, col:37> col:6 used find_entry 'int (uint32_t, uint32_t) const'
| | |-ParmVarDecl 0x561835274318 <col:17> col:25 'uint32_t':'unsigned int'
| | `-ParmVarDecl 0x561835274390 <col:27> col:35 'uint32_t':'unsigned int'
| |-CXXMethodDecl 0x5618352745b0 <line:173:2, col:16> col:9 dump 'String () const'
| |-CXXMethodDecl 0x5618352747f0 <line:175:2, col:43> col:6 used vport_find 'int (IPAddress, int16_t)'
| | |-ParmVarDecl 0x561835274660 <col:17, col:27> col:27 gw 'IPAddress'
| | `-ParmVarDecl 0x5618352746d8 <col:31, col:39> col:39 port 'int16_t':'short'
| |-CXXMethodDecl 0x5618352749a8 <line:176:2, col:27> col:7 used vport_unref 'void (uint16_t)'
| | `-ParmVarDecl 0x5618352748b0 <col:19> col:27 'uint16_t':'unsigned short'
| |-CXXMethodDecl 0x561835274c78 <line:178:2, col:62> col:6 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| | |-ParmVarDecl 0x561835274a60 <col:16, col:29> col:30 'const IPRoute &'
| | |-ParmVarDecl 0x561835274ad8 <col:32> col:36 'bool'
| | |-ParmVarDecl 0x561835274b50 <col:38, col:45> col:46 'IPRoute *'
| | `-ParmVarDecl 0x561835274bc8 <col:48, col:61> col:62 'ErrorHandler *'
| |-CXXMethodDecl 0x561835274ee0 <line:179:2, col:59> col:6 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| | |-ParmVarDecl 0x561835274d48 <col:19, col:32> col:33 'const IPRoute &'
| | |-ParmVarDecl 0x561835274dc0 <col:35, col:42> col:43 'IPRoute *'
| | `-ParmVarDecl 0x561835274e38 <col:45, col:58> col:59 'ErrorHandler *'
| |-CXXMethodDecl 0x561835274fb8 <line:180:2, col:13> col:7 flush 'void ()'
| `-CXXConstructorDecl 0x5618354f27b8 <line:134:12> col:12 implicit constexpr Table 'void (const DirectIPLookup::Table &)' inline default trivial noexcept-unevaluated 0x5618354f27b8
|   `-ParmVarDecl 0x5618354f28c8 <col:12> col:12 'const DirectIPLookup::Table &'
|-AccessSpecDecl 0x561835275058 <line:184:3, col:12> col:3 protected
|-FieldDecl 0x561835275090 <line:186:5, col:11> col:11 _t 'DirectIPLookup::Table'
|-FriendDecl 0x561835275130 <line:188:5, col:18> col:12 'class RangeIPLookup':'RangeIPLookup'
|-CXXConstructorDecl 0x561835275198 <line:87:7> col:7 implicit DirectIPLookup 'void (const DirectIPLookup &)' inline default_delete noexcept-unevaluated 0x561835275198
| `-ParmVarDecl 0x5618352752a8 <col:7> col:7 'const DirectIPLookup &'
`-CXXMethodDecl 0x561835275348 <col:7> col:7 implicit operator= 'DirectIPLookup &(const DirectIPLookup &)' inline default_delete noexcept-unevaluated 0x561835275348
  `-ParmVarDecl 0x561835275458 <col:7> col:7 'const DirectIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.DirectIPLookup = type { %class.IPRouteTable.base, %"struct.DirectIPLookup::Table" }
  NonVirtualBaseLLVMType:%class.DirectIPLookup = type { %class.IPRouteTable.base, %"struct.DirectIPLookup::Table" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352ca398 prev 0x5618352bf5a0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618352ca490 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5618352ca580 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5618352ca6a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5618352ca828 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5618352ca9a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5618352cab28 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5618352db958 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5618352dc1c8 <col:11>
|-CXXDestructorDecl 0x5618352dba30 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5618352dbb68 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5618352dbb68
| `-ParmVarDecl 0x5618352dbc78 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5618352dbd18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5618352dbd18
| `-ParmVarDecl 0x5618352dbe28 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5618352debe8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5618352decf8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5618352def78 <col:11>
|   `-ReturnStmt 0x5618352def68 <col:11>
|     `-UnaryOperator 0x5618352def50 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5618352def40 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5618352ded68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5618352ded68
  `-ParmVarDecl 0x5618352dee78 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352cab90 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618352caca8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5618352cad48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5618352cadb0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5618352cae18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5618352cae80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5618352caee0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5618352cafa0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5618352cb000 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5618352cb060 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5618352db868 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5618352cad48 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5618352dc1d8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5618352dc230 <col:12>
|-CXXConstructorDecl 0x5618352dbe98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5618352dbe98
| `-ParmVarDecl 0x5618352dbfa8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5618352dc048 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5618352dc048
| `-ParmVarDecl 0x5618352dc158 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5618352de2d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618352b8cb0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618352b8dc8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5618352b8e58 <col:16, col:22> col:16 public
|-EnumDecl 0x5618352b8e80 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5618352b8f80 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5618352b9060 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352b8f60 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5618352b8f40 <col:21> 'int' 28
| `-EnumConstantDecl 0x5618352b9010 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5618352b9078 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352b8ff0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5618352b8fd0 <col:22> 'int' 64
|-CXXMethodDecl 0x5618352b93b8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5618352b90a0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618352b9120 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5618352b9198 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618352b9210 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5618352b9478 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5618352b9678 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5618352b94f0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5618352b9568 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5618352b9728 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5618352b9888 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5618352b9798 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5618352b9930 <col:72> warn_unused_result ""
|-TypedefDecl 0x5618352b9c90 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5618352b9c20 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5618352b9bc0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5618352b9b80 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x561834d8d4e0 'void'
|       |-PointerType 0x561835038e30 'unsigned char *'
|       | `-BuiltinType 0x561834d8d5e0 'unsigned char'
|       |-TypedefType 0x561834e35400 'size_t' sugar
|       | |-Typedef 0x561834dfdbe0 'size_t'
|       | `-BuiltinType 0x561834d8d640 'unsigned long'
|       `-PointerType 0x561834d8dce0 'void *'
|         `-BuiltinType 0x561834d8d4e0 'void'
|-CXXMethodDecl 0x5618352ba108 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5618352b9d00 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5618352b9d78 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618352b9e10 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5618352b9e90 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5618352d4800 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5618352d47e8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5618352d47b0 <col:58> 'int' 0
| |-ParmVarDecl 0x5618352b9f10 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5618352d4828 <col:76> 'int' 0
| |-ParmVarDecl 0x5618352b9f90 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5618352d4848 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5618352ba1d8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5618352ba258 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5618352ba318 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5618352ba3b8 <col:20>
| `-OptimizeNoneAttr 0x5618352ba410 <col:30>
|-CXXMethodDecl 0x5618352ba488 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5618352ba528 <col:20>
| `-OptimizeNoneAttr 0x5618352ba580 <col:30>
|-CXXMethodDecl 0x5618352ba5f8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5618352ba698 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5618352ba748 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5618352ba7e8 <col:20>
| |-OptimizeNoneAttr 0x5618352ba840 <col:30>
| `-WarnUnusedResultAttr 0x5618352ba868 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5618352ba8c0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5618352ba960 <col:20>
| `-OptimizeNoneAttr 0x5618352ba9b8 <col:30>
|-CXXMethodDecl 0x5618352baa08 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5618352baaa8 <col:20>
| `-OptimizeNoneAttr 0x5618352bab00 <col:30>
|-CXXMethodDecl 0x5618352bab48 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5618352babe8 <col:20>
| `-OptimizeNoneAttr 0x5618352bac40 <col:30>
|-CXXMethodDecl 0x5618352bac88 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5618352bad48 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5618352bae10 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5618352baed8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5618352baf98 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5618352bb0b8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5618352d4910 <col:54, line:99:5>
|   `-ReturnStmt 0x5618352d4900 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5618352d48e8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5618352d48b8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5618352cb398
|         `-CXXThisExpr 0x5618352d48a8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5618352bb258 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5618352bb168 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5618352d49c0 <col:67, line:103:5>
|   `-BinaryOperator 0x5618352d49a0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5618352d4938 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5618352cb398
|     | `-CXXThisExpr 0x5618352d4928 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5618352d4988 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5618352d4968 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5618352bb168 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5618352bb350 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5618352d4a40 <col:33, line:107:5>
|   `-ReturnStmt 0x5618352d4a30 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5618352d4a18 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5618352d49e8 <col:16> 'void *' lvalue ->_destructor_argument 0x5618352cb400
|         `-CXXThisExpr 0x5618352d49d8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5618352bb410 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5618352d5070 <col:25, line:113:5>
|   |-ParenExpr 0x5618352d4db8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5618352d4d88 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d4af8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5618352d4ad0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5618352d4a98 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5618352d4a68 <col:24> '<bound member function type>' ->shared 0x5618352ba488
|   |   |       `-ImplicitCastExpr 0x5618352d4ab8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5618352d4a58 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5618352d4b58 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d4b38 <col:42> 'int' 0
|   |   `-CallExpr 0x5618352d4ce8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5618352d4cd0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d4cb0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d4d28 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d4bc8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5618352d4d40 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d4bf0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d4d58 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d4c28 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5618352d4d70 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d4c98 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d4c80 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d4c48 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5618352d4fb8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5618352d4de8 <col:2> 'unsigned char *' lvalue ->_head 0x5618352cb1a0
|   | | `-CXXThisExpr 0x5618352d4dd8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5618352d4fa0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5618352d4f80 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5618352d4e28 <col:10> 'unsigned char *' lvalue ->_data 0x5618352cb208
|   |     | `-CXXThisExpr 0x5618352d4e18 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5618352d4f68 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5618352d4f48 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5618352d4e68 <col:18> 'unsigned char *' lvalue ->_tail 0x5618352cb270
|   |         | `-CXXThisExpr 0x5618352d4e58 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5618352d4f30 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5618352d4f10 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5618352d4ea8 <col:26> 'unsigned char *' lvalue ->_end 0x5618352cb2d8
|   |             | `-CXXThisExpr 0x5618352d4e98 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5618352d4ef8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5618352d4ed8 <col:33> 'int' 0
|   `-BinaryOperator 0x5618352d5050 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5618352d4fe8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5618352cb398
|     | `-CXXThisExpr 0x5618352d4fd8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5618352d5038 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5618352d5018 <col:16> 'int' 0
|-CXXMethodDecl 0x5618352bb550 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5618352bb4c0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352bb5f8 <col:20>
| |-OptimizeNoneAttr 0x5618352bb650 <col:30>
| `-WarnUnusedResultAttr 0x5618352bb678 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5618352bb748 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5618352bb6b8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352bb7f0 <col:20>
| |-OptimizeNoneAttr 0x5618352bb848 <col:30>
| `-WarnUnusedResultAttr 0x5618352bb870 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5618352bb9a8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5618352bb8b0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5618352bba50 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5618352bbb50 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5618352bbac0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352bbbf8 <col:20>
| `-OptimizeNoneAttr 0x5618352bbc50 <col:30>
|-CXXMethodDecl 0x5618352bbd18 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5618352bbc88 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5618352bbdc0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5618352bbec0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5618352bbe30 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5618352bbf68 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5618352bc068 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5618352bbfd8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352bc110 <col:20>
| `-OptimizeNoneAttr 0x5618352bc168 <col:30>
|-CXXMethodDecl 0x5618352bc2f8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5618352bc1a8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5618352bc220 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5618352d4868 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5618352bc3a8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5618352bc5a8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5618352bc420 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5618352bc498 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352bc7b8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5618352bc668 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5618352bc6e0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352bc9c8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5618352bc878 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5618352bc8f8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5618352d4878 <col:39> 'int' 0
|-CXXMethodDecl 0x5618352bca98 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5618352bcb60 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5618352bcc28 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5618352bcce8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5618352bcdb0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5618352bcef8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5618352bce68 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5618352bd0c8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5618352bcfb8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5618352bd030 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352bd198 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5618352bd258 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5618352bd2f8 <col:20>
| `-OptimizeNoneAttr 0x5618352bd350 <col:30>
|-CXXMethodDecl 0x5618352bd3a0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5618352bd440 <col:20>
| `-OptimizeNoneAttr 0x5618352bd498 <col:30>
|-CXXMethodDecl 0x5618352bd4e8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5618352bd5a8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5618352bd670 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5618352bd710 <col:20>
| `-OptimizeNoneAttr 0x5618352bd768 <col:30>
|-CXXMethodDecl 0x5618352bd8b8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5618352bd7a8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5618352bd820 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352bda08 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5618352bd978 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352bdae0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5618352bdba0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5618352bdc40 <col:20>
| `-OptimizeNoneAttr 0x5618352bdc98 <col:30>
|-CXXMethodDecl 0x5618352bdce8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5618352bdd88 <col:20>
| `-OptimizeNoneAttr 0x5618352bdde0 <col:30>
|-CXXMethodDecl 0x5618352bde30 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5618352bdef8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5618352bdf98 <col:20>
| `-OptimizeNoneAttr 0x5618352bdff0 <col:30>
|-CXXMethodDecl 0x5618352be038 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5618352be158 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5618352be2c8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5618352be208 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5618352be3b8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5618352be458 <col:20>
| `-OptimizeNoneAttr 0x5618352be4b0 <col:30>
|-CXXMethodDecl 0x5618352be500 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5618352be5c0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5618352be7f8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5618352be670 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5618352be6e8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352be8a8 <col:20>
| `-OptimizeNoneAttr 0x5618352be900 <col:30>
|-CXXMethodDecl 0x5618352be9a8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5618352bea48 <col:20>
| `-OptimizeNoneAttr 0x5618352beaa0 <col:30>
|-CXXMethodDecl 0x5618352beaf0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5618352beb90 <col:20>
| `-OptimizeNoneAttr 0x5618352bebe8 <col:30>
|-CXXMethodDecl 0x5618352bec30 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5618352becd0 <col:20>
| `-OptimizeNoneAttr 0x5618352bed28 <col:30>
|-CXXMethodDecl 0x5618352bee28 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5618352bed60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5618352beed0 <col:20>
| `-OptimizeNoneAttr 0x5618352bef28 <col:30>
|-CXXMethodDecl 0x5618352bf0e8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5618352bef60 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5618352befd8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352bf198 <col:20>
| `-OptimizeNoneAttr 0x5618352bf1f0 <col:30>
|-CXXMethodDecl 0x5618352bf298 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5618352bf3b8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5618352bf4d8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5618352bf578 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5618352bf5a0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5618352bf6c8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5618352bf768 <col:20>
| `-OptimizeNoneAttr 0x5618352bf7c0 <col:30>
|-CXXMethodDecl 0x5618352bf868 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5618352bf908 <col:20>
| `-OptimizeNoneAttr 0x5618352bf960 <col:30>
|-AccessSpecDecl 0x5618352bf988 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5618352bf9b0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5618352bfab0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5618352bfb00 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352bfa90 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5618352bfa70 <col:14> 'int' 48
|-CXXMethodDecl 0x5618352bfb68 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5618352bfc08 <col:20>
| `-OptimizeNoneAttr 0x5618352bfc60 <col:30>
|-CXXMethodDecl 0x5618352bfcd8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5618352bfd78 <col:20>
| `-OptimizeNoneAttr 0x5618352bfdd0 <col:30>
|-CXXMethodDecl 0x5618352bfe98 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5618352bfe08 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5618352c0038 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5618352c01d8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5618352c00e8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5618352c0280 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5618352c0380 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5618352c0730 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c0360 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5618352c0340 <col:9> 'int' 0
| |-EnumConstantDecl 0x5618352c0410 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5618352c0748 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c03f0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5618352c03d0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5618352c04a0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5618352c0760 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c0480 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5618352c0460 <col:14> 'int' 2
| |-EnumConstantDecl 0x5618352c0530 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5618352c0778 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c0510 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5618352c04f0 <col:14> 'int' 3
| |-EnumConstantDecl 0x5618352c05c0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5618352c0790 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c05a0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5618352c0580 <col:13> 'int' 4
| |-EnumConstantDecl 0x5618352c0650 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5618352c07a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c0630 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5618352c0610 <col:13> 'int' 5
| `-EnumConstantDecl 0x5618352c06e0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5618352c07c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352c06c0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5618352c06a0 <col:14> 'int' 6
|-CXXMethodDecl 0x5618352c0828 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5618352c08c8 <col:20>
| `-OptimizeNoneAttr 0x5618352c0920 <col:30>
|-CXXMethodDecl 0x5618352c0a18 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5618352c0958 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5618352c0ac0 <col:20>
| `-OptimizeNoneAttr 0x5618352c0b18 <col:30>
|-CXXMethodDecl 0x5618352c0b88 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5618352c0cb0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5618352c0e28 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5618352c0d60 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5618352c0ef0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5618352c0fb8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5618352c10f8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5618352c1068 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5618352c11a0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5618352c12a0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5618352c14a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c1280 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5618352c1260 <col:23> 'int' 0
| |-EnumConstantDecl 0x5618352c1330 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5618352c14b8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c1310 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5618352c12f0 <col:45> 'int' 4
| |-EnumConstantDecl 0x5618352c13c0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5618352c14d0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c13a0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5618352c1380 <col:24> 'int' 0
| `-EnumConstantDecl 0x5618352c1450 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5618352c14e8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352c1430 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5618352c1410 <col:47> 'int' 16
|-CXXMethodDecl 0x5618352c1548 <line:431:5, col:36> col:22 used dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5618352c16b8 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5618352c15f8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5618352c1760 <col:20>
| `-OptimizeNoneAttr 0x5618352c17b8 <col:30>
|-CXXMethodDecl 0x5618352c1808 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5618352d5190 <col:18, col:36>
|   `-ReturnStmt 0x5618352d5180 <col:20, col:33>
|     `-ImplicitCastExpr 0x5618352d5168 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5618352d5148 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5618352d5118 <col:27> '<bound member function type>' ->xanno 0x5618352bf868
|           `-CXXThisExpr 0x5618352d5108 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5618352c1900 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5618352d52a0 <col:30, col:48>
|   `-ReturnStmt 0x5618352d5290 <col:32, col:45>
|     `-ImplicitCastExpr 0x5618352d5278 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5618352d5258 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5618352d5228 <col:39> '<bound member function type>' ->xanno 0x5618352bf6c8
|           `-CXXThisExpr 0x5618352d5218 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5618352c19e8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5618352d5438 <col:24, col:50>
|   `-ReturnStmt 0x5618352d5428 <col:26, col:47>
|     `-UnaryOperator 0x5618352d5410 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5618352d53f0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5618352d53d8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5618352d5388 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5618352ca6a8
|         |   `-CXXMemberCallExpr 0x5618352d5368 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5618352d5338 <col:34> '<bound member function type>' ->xanno 0x5618352bf868
|         |       `-CXXThisExpr 0x5618352d5328 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5618352d53b8 <col:46> 'int' 0
|-CXXMethodDecl 0x5618352c1af0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5618352d5608 <col:36, col:62>
|   `-ReturnStmt 0x5618352d55f8 <col:38, col:59>
|     `-UnaryOperator 0x5618352d55e0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5618352d55c0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5618352d55a8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5618352d5520 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5618352ca6a8
|         |   `-CXXMemberCallExpr 0x5618352d5500 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5618352d54d0 <col:46> '<bound member function type>' ->xanno 0x5618352bf6c8
|         |       `-CXXThisExpr 0x5618352d54c0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5618352d5550 <col:58> 'int' 0
|-CXXMethodDecl 0x5618352c1c08 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5618352d57a0 <col:26, col:53>
|   `-ReturnStmt 0x5618352d5790 <col:28, col:50>
|     `-UnaryOperator 0x5618352d5778 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5618352d5758 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5618352d5740 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5618352d56f0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5618352ca9a8
|         |   `-CXXMemberCallExpr 0x5618352d56d0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5618352d56a0 <col:36> '<bound member function type>' ->xanno 0x5618352bf868
|         |       `-CXXThisExpr 0x5618352d5690 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5618352d5720 <col:49> 'int' 0
|-CXXMethodDecl 0x5618352c1d28 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5618352d5978 <col:38, col:65>
|   `-ReturnStmt 0x5618352d5968 <col:40, col:62>
|     `-UnaryOperator 0x5618352d5950 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5618352d5930 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5618352d5918 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5618352d5888 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5618352ca9a8
|         |   `-CXXMemberCallExpr 0x5618352d5868 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5618352d5838 <col:48> '<bound member function type>' ->xanno 0x5618352bf6c8
|         |       `-CXXThisExpr 0x5618352d5828 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5618352d58b8 <col:61> 'int' 0
|-CXXMethodDecl 0x5618352c1ed8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5618352c1de0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5618352d6048 <col:34, line:463:5>
|   |-ParenExpr 0x5618352d5e90 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5618352d5e60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d5ac8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d5a98 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d59e8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d59d0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d5990 <col:23> 'int' lvalue ParmVar 0x5618352c1de0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d59b0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d5a78 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d5a48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d5a08 <col:33> 'int' lvalue ParmVar 0x5618352c1de0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5618352d5a60 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5618352d5a28 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5618352d5b28 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d5b08 <col:56> 'int' 0
|   |   `-CallExpr 0x5618352d5dc0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5618352d5da8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d5d88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d5e00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d5c18 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5618352d5e18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d5c48 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d5e30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d5c80 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5618352d5e48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d5d70 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d5d58 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d5d18 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5618352d6038 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5618352d6020 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5618352d6000 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5618352d5fd0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5618352d5f80 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5618352ca6a8
|         |   `-CXXMemberCallExpr 0x5618352d5f60 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5618352d5f30 <col:9> '<bound member function type>' ->xanno 0x5618352bf6c8
|         |       `-CXXThisExpr 0x5618352d5f20 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5618352d5fe8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5618352d5fb0 <col:21> 'int' lvalue ParmVar 0x5618352c1de0 'i' 'int'
|-CXXMethodDecl 0x5618352c2128 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5618352c1f98 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5618352c2010 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5618352d66d8 <col:40, line:472:5>
|   |-ParenExpr 0x5618352d64f0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5618352d64c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d61a0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d6170 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d60c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d60a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d6068 <col:23> 'int' lvalue ParmVar 0x5618352c1f98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d6088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d6150 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d6120 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d60e0 <col:33> 'int' lvalue ParmVar 0x5618352c1f98 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5618352d6138 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5618352d6100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5618352d6200 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d61e0 <col:56> 'int' 0
|   |   `-CallExpr 0x5618352d6420 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5618352d6408 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d63e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d6460 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d6270 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5618352d6478 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d62a0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d6490 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d62d8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5618352d64a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d63d0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d63b8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d6378 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5618352d66b8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5618352d6660 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5618352d6630 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5618352d65e0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5618352ca6a8
|     | |   `-CXXMemberCallExpr 0x5618352d65c0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5618352d6590 <col:2> '<bound member function type>' ->xanno 0x5618352bf868
|     | |       `-CXXThisExpr 0x5618352d6580 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5618352d6648 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5618352d6610 <col:14> 'int' lvalue ParmVar 0x5618352c1f98 'i' 'int'
|     `-ImplicitCastExpr 0x5618352d66a0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5618352d6680 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5618352c2010 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5618352c22e8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5618352c21f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5618352d6e58 <col:36, line:485:5>
|   |-ParenExpr 0x5618352d6bc0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d6b90 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d6870 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d6840 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d6750 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d6738 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d66f8 <col:23> 'int' lvalue ParmVar 0x5618352c21f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d6718 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d6820 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d6808 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d6770 <col:33> 'int' lvalue ParmVar 0x5618352c21f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d67e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d67d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d6790 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d67b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5618352d68d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d68b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d6af0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d6ad8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d6ab8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d6b30 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d6940 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5618352d6b48 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d6978 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d6b60 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d69b0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5618352d6b78 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d6aa0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d6a88 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d6a48 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5618352d6e48 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5618352d6e30 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5618352d6e18 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5618352d6de8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5618352d6d88 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5618352d6d58 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5618352d6cd0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5618352ca580
|             |   `-CXXMemberCallExpr 0x5618352d6cb0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5618352d6c80 <col:61> '<bound member function type>' ->xanno 0x5618352bf6c8
|             |       `-CXXThisExpr 0x5618352d6c70 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5618352d6d70 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5618352d6d00 <col:74> 'int' lvalue ParmVar 0x5618352c21f0 'i' 'int'
|-CXXMethodDecl 0x5618352c2538 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5618352c23a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5618352c2420 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5618352d75a8 <col:42, line:500:5>
|   |-ParenExpr 0x5618352d7340 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d7310 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d6ff0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d6fc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d6ed0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d6eb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d6e78 <col:23> 'int' lvalue ParmVar 0x5618352c23a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d6e98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d6fa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d6f88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d6ef0 <col:33> 'int' lvalue ParmVar 0x5618352c23a8 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d6f68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d6f50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d6f10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d6f30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5618352d7050 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d7030 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d7270 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d7258 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d7238 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d72b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d70c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5618352d72c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d70f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d72e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d7130 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5618352d72f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d7220 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d7208 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d71c8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5618352d7588 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5618352d7538 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5618352d7508 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5618352d74b0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5618352d7480 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5618352d7430 <col:48, col:57> 'char [48]' lvalue ->c 0x5618352ca580
|     |     |   `-CXXMemberCallExpr 0x5618352d7410 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5618352d73e0 <col:48> '<bound member function type>' ->xanno 0x5618352bf868
|     |     |       `-CXXThisExpr 0x5618352d73d0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5618352d7498 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5618352d7460 <col:61> 'int' lvalue ParmVar 0x5618352c23a8 'i' 'int'
|     `-ImplicitCastExpr 0x5618352d7570 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5618352d7550 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5618352c2420 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5618352c26f8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5618352c2600 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5618352d7d08 <col:35, line:513:5>
|   |-ParenExpr 0x5618352d7a18 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d79e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d7740 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d7710 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d7620 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d7608 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d75c8 <col:23> 'int' lvalue ParmVar 0x5618352c2600 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d75e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d76f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d76d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d7640 <col:33> 'int' lvalue ParmVar 0x5618352c2600 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d76b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d76a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d7660 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d7680 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5618352d77a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d7780 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d7948 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d7930 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d7910 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d7988 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d7810 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5618352d79a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d7848 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d79b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d7880 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5618352d79d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d78f8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d78e0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d78a0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5618352d7cf8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5618352d7ce0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5618352d7cc8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5618352d7c98 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5618352d7c10 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5618352d7be0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5618352d7b90 <col:60, col:69> 'char const[48]' lvalue ->c 0x5618352ca580
|             |   `-CXXMemberCallExpr 0x5618352d7b70 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5618352d7b40 <col:60> '<bound member function type>' ->xanno 0x5618352bf6c8
|             |       `-CXXThisExpr 0x5618352d7b30 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5618352d7bf8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5618352d7bc0 <col:73> 'int' lvalue ParmVar 0x5618352c2600 'i' 'int'
|-CXXMethodDecl 0x5618352c2948 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5618352c27b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5618352c2830 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5618352d8428 <col:41, line:528:5>
|   |-ParenExpr 0x5618352d81b0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d8180 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d7ea0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d7e70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d7d80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d7d68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d7d28 <col:23> 'int' lvalue ParmVar 0x5618352c27b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d7d48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d7e50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d7e38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d7da0 <col:33> 'int' lvalue ParmVar 0x5618352c27b8 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d7e18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d7e00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d7dc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d7de0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5618352d7f00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d7ee0 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d80e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d80c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d80a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d8120 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d7f70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5618352d8138 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d7fa8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d8150 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d7fe0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5618352d8168 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d8090 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d8078 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d8038 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5618352d8408 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5618352d83b8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5618352d8388 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5618352d8330 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5618352d82f0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5618352d82a0 <col:47, col:56> 'char [48]' lvalue ->c 0x5618352ca580
|     |     |   `-CXXMemberCallExpr 0x5618352d8280 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5618352d8250 <col:47> '<bound member function type>' ->xanno 0x5618352bf868
|     |     |       `-CXXThisExpr 0x5618352d8240 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5618352d8308 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5618352d82d0 <col:60> 'int' lvalue ParmVar 0x5618352c27b8 'i' 'int'
|     `-ImplicitCastExpr 0x5618352d83f0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5618352d83d0 <col:65> 'int16_t':'short' lvalue ParmVar 0x5618352c2830 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5618352c2b08 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5618352c2a10 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5618352d8af8 <col:36, line:541:5>
|   |-ParenExpr 0x5618352d8898 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d8868 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d85c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d8590 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d84a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d8488 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d8448 <col:23> 'int' lvalue ParmVar 0x5618352c2a10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d8468 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d8570 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d8558 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d84c0 <col:33> 'int' lvalue ParmVar 0x5618352c2a10 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d8538 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d8520 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d84e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d8500 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5618352d8620 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d8600 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d87c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d87b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d8790 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d8808 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d8690 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5618352d8820 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d86c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d8838 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d8700 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5618352d8850 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d8778 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d8760 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d8720 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5618352d8ae8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5618352d8ad0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5618352d8ab8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5618352d8a88 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5618352d8a30 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5618352d8a00 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5618352d89b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5618352ca580
|             |   `-CXXMemberCallExpr 0x5618352d8990 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5618352d8960 <col:61> '<bound member function type>' ->xanno 0x5618352bf6c8
|             |       `-CXXThisExpr 0x5618352d8950 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5618352d8a18 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5618352d89e0 <col:74> 'int' lvalue ParmVar 0x5618352c2a10 'i' 'int'
|-CXXMethodDecl 0x5618352c2cd8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5618352c2bc8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5618352c2c40 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5618352c2d88 <col:20>
| `-OptimizeNoneAttr 0x5618352c2de0 <col:30>
|-CXXMethodDecl 0x5618352c2f18 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5618352c2e20 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5618352d91c8 <col:35, line:562:5>
|   |-ParenExpr 0x5618352d8f68 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d8f38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d8c90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d8c60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d8b70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d8b58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d8b18 <col:23> 'int' lvalue ParmVar 0x5618352c2e20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d8b38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d8c40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d8c28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d8b90 <col:33> 'int' lvalue ParmVar 0x5618352c2e20 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d8c08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d8bf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d8bb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d8bd0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5618352d8cf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d8cd0 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d8e98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d8e80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d8e60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d8ed8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d8d60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5618352d8ef0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d8d98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d8f08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d8dd0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5618352d8f20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d8e48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d8e30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d8df0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5618352d91b8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5618352d91a0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5618352d9188 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5618352d9158 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5618352d9100 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5618352d90d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5618352d9080 <col:60, col:69> 'char const[48]' lvalue ->c 0x5618352ca580
|             |   `-CXXMemberCallExpr 0x5618352d9060 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5618352d9030 <col:60> '<bound member function type>' ->xanno 0x5618352bf6c8
|             |       `-CXXThisExpr 0x5618352d9020 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5618352d90e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5618352d90b0 <col:73> 'int' lvalue ParmVar 0x5618352c2e20 'i' 'int'
|-CXXMethodDecl 0x5618352c3128 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5618352c2fd8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5618352c3050 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5618352d98a8 <col:41, line:577:5>
|   |-ParenExpr 0x5618352d9638 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d9608 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d9360 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d9330 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d9240 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d9228 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d91e8 <col:23> 'int' lvalue ParmVar 0x5618352c2fd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d9208 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d9310 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d92f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d9260 <col:33> 'int' lvalue ParmVar 0x5618352c2fd8 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d92d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d92c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d9280 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d92a0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5618352d93c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d93a0 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d9568 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d9550 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d9530 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d95a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d9430 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5618352d95c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d9468 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d95d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d94a0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5618352d95f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d9518 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d9500 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d94c0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5618352d9888 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5618352d9838 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5618352d9808 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5618352d97a8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5618352d9778 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5618352d9728 <col:47, col:56> 'char [48]' lvalue ->c 0x5618352ca580
|     |     |   `-CXXMemberCallExpr 0x5618352d9708 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5618352d96d8 <col:47> '<bound member function type>' ->xanno 0x5618352bf868
|     |     |       `-CXXThisExpr 0x5618352d96c8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5618352d9790 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5618352d9758 <col:60> 'int' lvalue ParmVar 0x5618352c2fd8 'i' 'int'
|     `-ImplicitCastExpr 0x5618352d9870 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5618352d9850 <col:65> 'int32_t':'int' lvalue ParmVar 0x5618352c3050 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5618352c32e8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5618352c31f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5618352d9fd8 <col:36, line:591:5>
|   |-ParenExpr 0x5618352d9d18 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352d9ce8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352d9a40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352d9a10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352d9920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352d9908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d98c8 <col:23> 'int' lvalue ParmVar 0x5618352c31f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352d98e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352d99f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352d99d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352d9940 <col:33> 'int' lvalue ParmVar 0x5618352c31f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352d99b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352d99a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352d9960 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352d9980 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5618352d9aa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352d9a80 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352d9c48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352d9c30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352d9c10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352d9c88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d9b10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5618352d9ca0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352d9b48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352d9cb8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352d9b80 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5618352d9cd0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352d9bf8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352d9be0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352d9ba0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5618352d9fc8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5618352d9fb0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5618352d9f98 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5618352d9f68 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5618352d9ee0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5618352d9eb0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5618352d9e60 <col:61, col:70> 'char const[48]' lvalue ->c 0x5618352ca580
|             |   `-CXXMemberCallExpr 0x5618352d9e40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5618352d9e10 <col:61> '<bound member function type>' ->xanno 0x5618352bf6c8
|             |       `-CXXThisExpr 0x5618352d9e00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5618352d9ec8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5618352d9e90 <col:74> 'int' lvalue ParmVar 0x5618352c31f0 'i' 'int'
|-CXXMethodDecl 0x5618352c3538 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5618352c33a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5618352c3420 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5618352da6b8 <col:42, line:606:5>
|   |-ParenExpr 0x5618352da448 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5618352da418 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5618352da170 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352da140 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352da050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352da038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352d9ff8 <col:23> 'int' lvalue ParmVar 0x5618352c33a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352da018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352da120 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5618352da108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352da070 <col:33> 'int' lvalue ParmVar 0x5618352c33a8 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352da0e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352da0d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352da090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5618352da0b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5618352da1d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352da1b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5618352da378 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5618352da360 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352da340 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352da3b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352da240 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5618352da3d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352da278 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352da3e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352da2b0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5618352da400 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352da328 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352da310 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352da2d0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5618352da698 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5618352da648 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5618352da618 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5618352da5b8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5618352da588 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5618352da538 <col:48, col:57> 'char [48]' lvalue ->c 0x5618352ca580
|     |     |   `-CXXMemberCallExpr 0x5618352da518 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5618352da4e8 <col:48> '<bound member function type>' ->xanno 0x5618352bf868
|     |     |       `-CXXThisExpr 0x5618352da4d8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5618352da5a0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5618352da568 <col:61> 'int' lvalue ParmVar 0x5618352c33a8 'i' 'int'
|     `-ImplicitCastExpr 0x5618352da680 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5618352da660 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5618352c3420 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5618352c36d0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5618352c3600 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5618352daf28 <col:33, line:620:5>
|   |-ParenExpr 0x5618352daca0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5618352dac70 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5618352da8c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352da890 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352da730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352da718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352da6d8 <col:23> 'int' lvalue ParmVar 0x5618352c3600 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352da6f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352da870 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5618352da858 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352da750 <col:33> 'int' lvalue ParmVar 0x5618352c3600 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352da838 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352da820 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352da770 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5618352da7f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5618352da7e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5618352da7a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5618352da920 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352da900 <col:79> 'int' 0
|   |   `-CallExpr 0x5618352dabd0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5618352dabb8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352dab98 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352dac10 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352daa08 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5618352dac28 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352daa50 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352dac40 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352daa88 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5618352dac58 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352dab80 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352dab68 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352dab28 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5618352daf18 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5618352daf00 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5618352daee8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5618352daeb8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5618352dae30 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5618352dae00 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5618352dadb0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5618352ca580
|             |   `-CXXMemberCallExpr 0x5618352dad90 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5618352dad60 <col:67> '<bound member function type>' ->xanno 0x5618352bf6c8
|             |       `-CXXThisExpr 0x5618352dad50 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5618352dae18 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5618352dade0 <col:80> 'int' lvalue ParmVar 0x5618352c3600 'i' 'int'
|-CXXMethodDecl 0x5618352c38e8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5618352c3790 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5618352c3810 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5618352db750 <col:45, line:635:5>
|   |-ParenExpr 0x5618352db498 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5618352db468 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5618352db130 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5618352db100 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5618352dafa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5618352daf88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5618352daf48 <col:23> 'int' lvalue ParmVar 0x5618352c3790 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5618352daf68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5618352db0e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5618352db0c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5618352dafc0 <col:33> 'int' lvalue ParmVar 0x5618352c3790 'i' 'int'
|   |   |     `-BinaryOperator 0x5618352db0a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5618352db090 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5618352dafe0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5618352bfab0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5618352db068 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5618352db050 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5618352db018 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5618352db190 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5618352db170 <col:79> 'int' 0
|   |   `-CallExpr 0x5618352db3c8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5618352db3b0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352db390 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5618352db408 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352db200 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5618352db420 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5618352db248 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5618352db438 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5618352db280 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5618352db450 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5618352db378 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5618352db360 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5618352db318 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5618352db730 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5618352db698 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5618352db668 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5618352db608 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5618352db5d8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5618352db588 <col:54, col:63> 'char [48]' lvalue ->c 0x5618352ca580
|     |     |   `-CXXMemberCallExpr 0x5618352db568 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5618352db538 <col:54> '<bound member function type>' ->xanno 0x5618352bf868
|     |     |       `-CXXThisExpr 0x5618352db528 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5618352db5f0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5618352db5b8 <col:67> 'int' lvalue ParmVar 0x5618352c3790 'i' 'int'
|     `-CXXConstCastExpr 0x5618352db700 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5618352db6e8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5618352db6b0 <col:91> 'const void *' lvalue ParmVar 0x5618352c3810 'x' 'const void *'
|-CXXMethodDecl 0x5618352c39b8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5618352db7d8 <col:34, line:640:5>
|   `-ReturnStmt 0x5618352db7c8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5618352db7b0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5618352db780 <col:16> 'Packet *' lvalue ->_data_packet 0x5618352cb138
|         `-CXXThisExpr 0x5618352db770 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5618352c3af8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5618352c3a68 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5618352d4898 <col:46> 'bool' true
|-CXXMethodDecl 0x5618352c3c78 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5618352c3bb0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5618352c3d20 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5618352c44d0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5618352c3e20 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c4540 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c3e00 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5618352c3de0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5618352b8f80 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5618352c3eb0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c4558 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c3e90 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5618352c3e70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5618352b9010 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5618352c3f40 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c4570 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c3f20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5618352c3f00 <col:21> 'int' 0
| |-EnumConstantDecl 0x5618352c3fd0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c4588 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c3fb0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5618352c3f90 <col:19> 'int' 16
| |-EnumConstantDecl 0x5618352c4060 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c45a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c4040 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5618352c4020 <col:21> 'int' 16
| |-EnumConstantDecl 0x5618352c40f0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c45b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c40d0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5618352c40b0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5618352c4180 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c45d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c4160 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5618352c4140 <col:19> 'int' EnumConstant 0x5618352c3fd0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5618352c4210 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c45e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c41f0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5618352c41d0 <col:19> 'int' EnumConstant 0x5618352c40f0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5618352c42e0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c4600 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c42c0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5618352c42a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5618352c4260 <col:23> 'int' EnumConstant 0x5618352c4210 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5618352c4280 <col:40> 'int' 2
| |-EnumConstantDecl 0x5618352c43b0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5618352c4618 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5618352c4390 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5618352c4370 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5618352c4330 <col:23> 'int' EnumConstant 0x5618352c4210 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5618352c4350 <col:40> 'int' 4
| `-EnumConstantDecl 0x5618352c4480 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5618352c4630 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5618352c4460 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5618352c4440 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5618352c4400 <col:23> 'int' EnumConstant 0x5618352c4210 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5618352c4420 <col:40> 'int' 8
|-CXXMethodDecl 0x5618352c4670 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5618352c4710 <col:68> "" ""
|-CXXMethodDecl 0x5618352c47a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5618352c4848 <col:45> "" ""
|-CXXMethodDecl 0x5618352c48e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5618352c4980 <col:57> "" ""
|-CXXMethodDecl 0x5618352c4a18 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5618352c4ab8 <col:45> "" ""
|-CXXMethodDecl 0x5618352c4b50 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5618352c4bf0 <col:57> "" ""
|-CXXMethodDecl 0x5618352c4c80 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5618352c4d20 <col:51> "" ""
|-CXXMethodDecl 0x5618352c4db0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5618352c4e50 <col:63> "" ""
|-CXXMethodDecl 0x5618352c4ee0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5618352c4f80 <col:53> "" ""
|-CXXMethodDecl 0x5618352c5010 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5618352c50b0 <col:65> "" ""
|-CXXMethodDecl 0x5618352c51c8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5618352c5138 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5618352c5270 <col:61> "" ""
|-CXXMethodDecl 0x5618352c5408 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5618352c52f8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5618352c5370 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5618352c54b8 <col:67> "" ""
|-CXXMethodDecl 0x5618352c55d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5618352c5540 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5618352c5678 <col:63> "" ""
|-CXXMethodDecl 0x5618352c5810 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5618352c5700 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5618352c5778 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5618352c58c0 <col:69> "" ""
|-CXXMethodDecl 0x5618352c59d8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5618352c5948 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5618352c5a80 <col:63> "" ""
|-CXXMethodDecl 0x5618352c8158 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5618352c8048 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5618352c80c0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5618352c8208 <col:69> "" ""
|-CXXMethodDecl 0x5618352c8320 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5618352c8290 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5618352c83c8 <col:62> "" ""
|-CXXMethodDecl 0x5618352c8560 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5618352c8450 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5618352c84c8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5618352c8610 <col:68> "" ""
|-CXXMethodDecl 0x5618352c8728 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5618352c8698 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5618352c87d0 <col:63> "" ""
|-CXXMethodDecl 0x5618352c8968 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5618352c8858 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5618352c88d0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5618352c8a18 <col:69> "" ""
|-CXXMethodDecl 0x5618352c8aa8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5618352c8b48 <col:64> "" ""
|-CXXMethodDecl 0x5618352c8bd8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5618352c8c78 <col:52> "" ""
|-CXXMethodDecl 0x5618352c8d08 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5618352c8da8 <col:67> "" ""
|-CXXMethodDecl 0x5618352c8e38 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5618352c8ed8 <col:55> "" ""
|-CXXMethodDecl 0x5618352c8ff0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5618352c8f60 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5618352c9098 <col:58> "" ""
|-CXXMethodDecl 0x5618352c9230 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5618352c9120 <col:33> col:36 'int'
| |-ParmVarDecl 0x5618352c9198 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5618352c92e0 <col:62> "" ""
|-CXXMethodDecl 0x5618352c93f8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5618352c9368 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5618352c94a0 <col:58> "" ""
|-CXXMethodDecl 0x5618352c9638 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5618352c9528 <col:33> col:36 'int'
| |-ParmVarDecl 0x5618352c95a0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5618352c96e8 <col:62> "" ""
|-CXXMethodDecl 0x5618352c9800 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5618352c9770 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5618352c98a8 <col:60> "" ""
|-CXXMethodDecl 0x5618352c9a40 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5618352c9930 <col:34> col:37 'int'
| |-ParmVarDecl 0x5618352c99a8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5618352c9af0 <col:64> "" ""
|-CXXMethodDecl 0x5618352c9c08 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5618352c9b78 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5618352c9cb0 <col:58> "" ""
|-CXXMethodDecl 0x5618352c9e48 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5618352c9d38 <col:33> col:36 'int'
| |-ParmVarDecl 0x5618352c9db0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5618352c9ef8 <col:62> "" ""
|-CXXMethodDecl 0x5618352ca010 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5618352c9f80 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5618352ca0b8 <col:59> "" ""
|-CXXMethodDecl 0x5618352ca250 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5618352ca140 <col:33> col:36 'int'
| |-ParmVarDecl 0x5618352ca1b8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5618352ca300 <col:63> "" ""
|-AccessSpecDecl 0x5618352ca370 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5618352ca398 prev 0x5618352bf5a0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5618352ca490 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5618352ca580 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5618352ca6a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5618352ca828 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5618352ca9a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5618352cab28 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5618352db958 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5618352dc1c8 <col:11>
| |-CXXDestructorDecl 0x5618352dba30 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5618352dbb68 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5618352dbb68
| | `-ParmVarDecl 0x5618352dbc78 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5618352dbd18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5618352dbd18
| | `-ParmVarDecl 0x5618352dbe28 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5618352debe8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5618352decf8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5618352def78 <col:11>
| |   `-ReturnStmt 0x5618352def68 <col:11>
| |     `-UnaryOperator 0x5618352def50 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5618352def40 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5618352ded68 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5618352ded68
|   `-ParmVarDecl 0x5618352dee78 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5618352cab90 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5618352caca8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5618352cad48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5618352cadb0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5618352cae18 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5618352cae80 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5618352caee0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5618352cafa0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5618352cb000 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5618352cb060 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5618352db868 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5618352cad48 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5618352dc1d8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5618352dc230 <col:12>
| |-CXXConstructorDecl 0x5618352dbe98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5618352dbe98
| | `-ParmVarDecl 0x5618352dbfa8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5618352dc048 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5618352dc048
| | `-ParmVarDecl 0x5618352dc158 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5618352de2d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5618352cb0d8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5618352cb138 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5618352cb1a0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5618352cb208 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5618352cb270 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5618352cb2d8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5618352cb338 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5618352cb398 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5618352cb400 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5618352cb488 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5618352cb0d8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5618352db800 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5618352cb338 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5618352dc240 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5618352dc2a0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5618352cb628 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5618352cb568 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5618352cb720 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5618352cb908 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5618352cb810 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5618352cbbd8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5618352cb9c0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5618352cba38 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5618352cbab0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352cbdf8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5618352cbca8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5618352cbd20 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5618352d43d8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5618352cbeb8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5618352cbf30 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5618352cbfa8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5618352d4530 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5618352d44a0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352d4678 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5618352d45e8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5618352d4770 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835353710 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561835353828 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x5618353538f8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x561835353958 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x5618353539c0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x561835353a48 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x561835353cb0 <col:16, line:46:5>
|   |-BinaryOperator 0x561835353bf8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x561835353b18 <col:9> 'TaskLink *' lvalue ->_prev 0x5618353538f8
|   | | `-CXXThisExpr 0x561835353b08 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x561835353be0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x561835353bc0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x561835353b58 <col:17> 'TaskLink *' lvalue ->_next 0x561835353958
|   |     | `-CXXThisExpr 0x561835353b48 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x561835353ba8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x561835353b88 <col:25> 'int' 0
|   `-BinaryOperator 0x561835353c90 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x561835353c28 <col:9> 'unsigned int' lvalue ->_pass 0x5618353539c0
|     | `-CXXThisExpr 0x561835353c18 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x561835353c78 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561835353c58 <col:17> 'int' 0
|-CXXConstructorDecl 0x5618353c92c8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x5618353c92c8
| `-ParmVarDecl 0x5618353c93d8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x5618353c9478 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x5618353c9478
| `-ParmVarDecl 0x5618353c9588 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x5618353c9778 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x5618353c9778
|-CXXMethodDecl 0x5618353c9f78 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x5618353c9f78
| `-ParmVarDecl 0x5618353ca088 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x5618353ca0f8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x5618353ca0f8
  `-ParmVarDecl 0x5618353ca208 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835356218 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561835356348 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x5618353563a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x561835356408 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x5618353d2c28 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x5618353d2d00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618353d2d00
|-CXXConstructorDecl 0x5618353d2fb8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5618353d2fb8
| `-ParmVarDecl 0x5618353d30c8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x5618353d3168 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5618353d3168
  `-ParmVarDecl 0x5618353d3278 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835356070 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561835356188 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x561835356218 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561835356348 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x5618353563a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x561835356408 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x5618353d2c28 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x5618353d2d00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618353d2d00
| |-CXXConstructorDecl 0x5618353d2fb8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5618353d2fb8
| | `-ParmVarDecl 0x5618353d30c8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x5618353d3168 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5618353d3168
|   `-ParmVarDecl 0x5618353d3278 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x5618353564c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x561835356528 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x5618353564c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561835356348 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x561835356580 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x5618353564c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x5618353563a8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x5618353565d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x5618353564c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561835356408 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x561835356630 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5618353d2b38 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5618353d3498 <col:11>
|-CXXConstructorDecl 0x5618353d2e08 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5618353d2e08
| `-ParmVarDecl 0x5618353d2f18 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x5618353d3318 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5618353d3318
  `-ParmVarDecl 0x5618353d3428 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56183528a630 prev 0x561835281470 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56183528a728 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56183528a7c8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x561835291590 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561835291978 <col:11>
|-CXXConstructorDecl 0x561835291670 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561835291758 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x5618352920c0 <col:11>
|-CXXConstructorDecl 0x5618352917f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561835291908 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x561835293918 <col:11>
|-CXXDestructorDecl 0x561835292c28 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561834f995b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561834f996c8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561834f99f90 <col:11>
|   `-ReturnStmt 0x561834f99f80 <col:11>
|     `-UnaryOperator 0x561834f99f68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561834f99f58 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x561834f99738 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561834f99848 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x561835351a10 <col:11>
    `-ReturnStmt 0x561835351a00 <col:11>
      `-UnaryOperator 0x5618353519e8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5618353519d8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835280628 prev 0x561835280338 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561835280720 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x5618352807b0 <col:19, col:25> col:19 public
|-TypedefDecl 0x5618352807e8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x561834ee5790 'int32_t' sugar
|   |-Typedef 0x561834df6328 'int32_t'
|   `-TypedefType 0x561834dcf510 '__int32_t' sugar
|     |-Typedef 0x561834dcf128 '__int32_t'
|     `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835280850 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x561834ee5950 'int64_t' sugar
|   |-Typedef 0x561834df6390 'int64_t'
|   `-TypedefType 0x561834dcf630 '__int64_t' sugar
|     |-Typedef 0x561834dcf208 '__int64_t'
|     `-BuiltinType 0x561834d8d5a0 'long'
|-EnumDecl 0x5618352808a8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x561835280a20 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x561835280a00 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x5618352809d8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x5618352809c0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x561835280990 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x561835280b18 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x561835280af8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x561835280ad0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x561835280ab8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x561835280a90 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x561835280a70 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x561835280b68 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x561835280c70 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5618352811c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280c50 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x561835280c30 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x561835280d00 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5618352811d8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280ce0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561835280cc0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x561835280d90 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x5618352811f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280d70 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561835280d50 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561835280e20 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561835281208 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280e00 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561835280de0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x561835280eb0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561835281220 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280e90 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561835280e70 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561835280f40 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561835281238 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280f20 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x561835280f00 <col:24> 'int' 1000
| |-EnumConstantDecl 0x561835280fd0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561835281250 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835280fb0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x561835280f90 <col:26> 'int' EnumConstant 0x561835280c70 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x5618352810a0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561835281268 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835281080 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x561835281060 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x561835281020 <col:27> 'int' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x561835281040 <col:44> 'int' EnumConstant 0x561835280f40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x561835281170 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x561835281280 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561835281150 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x561835281130 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x5618352810f0 <col:27> 'int' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x561835281110 <col:44> 'int' EnumConstant 0x561835280e20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x561835281298 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x5618352813a0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x5618352813f0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561835281380 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x561835281360 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x561835281418 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x561834ee53c0 'uninitialized_type'
|   `-CXXRecord 0x561834ee5328 'uninitialized_type'
|-CXXRecordDecl 0x561835281470 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x561835281580 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835291988 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561835291aa8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x561835291a60 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x5618352919f0 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x5618352919e0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561835291a20 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561835291a90 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561835291a40 <col:19> 'int' 0
|-CXXConstructorDecl 0x5618352817c8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x561835281640 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x5618352816b8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56183528d2c0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56183528d2a0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835291ac0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561835291c10 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x561835291b98 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x561835291b28 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x561835291b18 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561835291be0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561835291bc8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561835291b58 <col:16> 'long' lvalue ParmVar 0x561835281640 'sec' 'long'
|     `-ImplicitCastExpr 0x561835291bf8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561835291b78 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x5618352816b8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561835281a28 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561835281898 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x561835281910 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56183528d2f8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56183528d2d8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835291c28 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561835291d60 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x561835291d00 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x561835291c90 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x561835291c80 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561835291d30 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561835291cc0 <col:16> 'int' lvalue ParmVar 0x561835281898 'sec' 'int'
|     `-ImplicitCastExpr 0x561835291d48 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561835291ce0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835281910 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561835281c88 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x561835281af8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x561835281b70 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56183528d330 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56183528d310 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835291d78 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561835291ec8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x561835291e50 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x561835291de0 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x561835291dd0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561835291e98 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561835291e80 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561835291e10 <col:16> 'unsigned long' lvalue ParmVar 0x561835281af8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x561835291eb0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561835291e30 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835281b70 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561835282e20 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x561835281d58 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x561835281dd0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56183528d368 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56183528d348 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835291ee0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561835292030 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x561835291fb8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x561835291f48 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x561835291f38 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561835292000 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561835291fe8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561835291f78 <col:16> 'unsigned int' lvalue ParmVar 0x561835281d58 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x561835292018 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561835291f98 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835281dd0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561835282f80 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x561835282ef0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x561835283118 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x561835283058 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x561835283348 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x561835283250 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x5618352834f8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x561835283438 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x5618352920d0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x561835292048 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x561835283438 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561835292130 <col:19, line:214:5>
|-CXXConstructorDecl 0x5618352836c8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x561835283608 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835292140 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5618352921f0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x5618352921c8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x561835292198 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x561835283608 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x5618352838b8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x561835283830 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x5618352803d0 'Timestamp'
|   | `-CXXRecord 0x561835280628 'Timestamp'
|   `-ParenType 0x5618352837d0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x5618352837a0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x561835280970 'Timestamp::seconds_type' sugar
|         |-Typedef 0x5618352807e8 'seconds_type'
|         `-TypedefType 0x561834ee5790 'int32_t' sugar
|           |-Typedef 0x561834df6328 'int32_t'
|           `-TypedefType 0x561834dcf510 '__int32_t' sugar
|             |-Typedef 0x561834dcf128 '__int32_t'
|             `-BuiltinType 0x561834d8d580 'int'
|-CXXConversionDecl 0x5618352839f8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561835283ac8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x5618352922f8 <col:37, line:231:5>
|   `-ReturnStmt 0x5618352922e8 <line:227:9, col:23>
|     `-BinaryOperator 0x5618352922c8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x561835292298 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561835292248 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56183528a7c8
|       |   `-MemberExpr 0x561835292218 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56183528b778
|       |     `-CXXThisExpr 0x561835292208 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5618352922b0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x561835292278 <col:23> 'int' 0
|-CXXMethodDecl 0x561835283b88 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x561835283c48 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561835283d08 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x561835283dc8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x561835283e88 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561835283ff8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x561835283f38 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x561835284140 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x5618352840b0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835284208 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5618352842a8 <col:54> "" ""
|-CXXMethodDecl 0x561835284338 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x5618352843d8 <col:54> "" ""
|-CXXMethodDecl 0x561835284468 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561835284508 <col:54> "" ""
|-CXXMethodDecl 0x561835284608 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x5618352846d8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x561835284808 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x561835284900 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x561835284a38 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561835292510 <col:39, line:271:5>
|   `-ReturnStmt 0x561835292500 <line:267:9, col:61>
|     `-CallExpr 0x5618352924a0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561835292488 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561835292310 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56183528baa8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x5618352924d0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561835292370 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56183528a7c8
|       |   `-MemberExpr 0x561835292340 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56183528b778
|       |     `-CXXThisExpr 0x561835292330 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5618352924e8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561835292410 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5618352923e0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5618352923a0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x5618352923f8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5618352923c0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280f40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561835284af8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x5618352926d0 <col:39, line:279:5>
|   `-ReturnStmt 0x5618352926c0 <line:275:9, col:61>
|     `-CallExpr 0x561835292660 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561835292648 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561835292528 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56183528baa8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561835292690 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561835292588 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56183528a7c8
|       |   `-MemberExpr 0x561835292558 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56183528b778
|       |     `-CXXThisExpr 0x561835292548 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x5618352926a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561835292628 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x5618352925f8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x5618352925b8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561835292610 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x5618352925d8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280e20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561835284bb8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561835292868 <col:39, line:287:5>
|   `-ReturnStmt 0x561835292858 <line:283:9, col:53>
|     `-BinaryOperator 0x561835292838 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x561835292808 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561835292728 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56183528a7c8
|       |   `-MemberExpr 0x5618352926f8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56183528b778
|       |     `-CXXThisExpr 0x5618352926e8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561835292820 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x5618352927e8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5618352927c8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561835292798 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561835292758 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280c70 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352927b0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561835292778 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561835284ca8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561835293b00 <col:40, line:293:5>
|   |-DeclStmt 0x5618352929b0 <line:291:9, col:48>
|   | `-VarDecl 0x561835292890 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561835292990 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561835292938 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561835292908 <col:22> '<bound member function type>' ->subsec 0x561835283c48
|   |     |   `-CXXThisExpr 0x5618352928f8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561835292978 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561835292958 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5618352810a0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561835293af0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x561835293ad8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561835293aa8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561835293a90 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561835293a70 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561835293a40 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x5618352937d8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x5618352937c0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x5618352929c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561835292890 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x5618352939e0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x5618352939c8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561835293998 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x5618352937f0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561835293760 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561835293748 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x5618352936f8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561835280578 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561835293698 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x5618352929f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x5618352929e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x5618352936e0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x5618352936c8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561835292eb8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561835292a20 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561835292ab0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561835292a80 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561835292a40 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x5618352810a0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561835292a98 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561835292a60 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561835292890 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561835293a10 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x5618352937a8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561835293798 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561835284d68 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561835294058 <col:40, line:302:5>
|   |-DeclStmt 0x561835293c50 <line:297:9, col:48>
|   | `-VarDecl 0x561835293b30 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561835293c30 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561835293bd8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561835293ba8 <col:22> '<bound member function type>' ->subsec 0x561835283c48
|   |     |   `-CXXThisExpr 0x561835293b98 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561835293c18 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561835293bf8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835281170 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561835294048 <line:298:9, col:70>
|     `-ExprWithCleanups 0x561835294030 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561835294000 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561835293fe8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561835293fc8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561835293f98 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561835293ec0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561835293ea8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561835293c68 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561835293b30 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561835293f38 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561835293f20 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561835293ef0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561835293ed8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561835293e48 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561835293e30 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561835293e10 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561835280578 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561835293db0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561835293c98 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561835293c88 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561835293df8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561835293de0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561835293d70 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561835293cc0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561835293d50 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561835293d20 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561835293ce0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835281170 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561835293d38 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561835293d00 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561835293b30 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561835293f68 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561835293e90 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561835293e80 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561835284e28 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x5618352940e0 <col:40, line:306:5>
|   `-ReturnStmt 0x5618352940d0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x5618352940a0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x561835294088 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561835294078 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x561835284fc8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x561835284ed8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x561835285198 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x5618352850a0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x561835285288 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x5618352853f8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x561835285338 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x561835294228 <col:56, line:320:5>
|   `-ReturnStmt 0x561835294218 <line:319:9, col:32>
|     `-ExprWithCleanups 0x561835294200 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x5618352941d0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5618352941b8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561835294178 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561835294148 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561835294108 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561835285338 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x561835294160 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561835294128 <col:31> 'int' 0
|-CXXMethodDecl 0x561835285638 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5618352854b0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561835285528 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352943f8 <col:72, line:326:5>
|   `-ReturnStmt 0x5618352943e8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x5618352943d0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x5618352943a0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561835294388 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561835294348 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561835294330 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561835294250 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5618352854b0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x5618352942f0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x5618352942d8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561835294270 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561835289f20 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561835294318 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561835294290 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835285528 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5618352857e8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x5618352856f8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561835294ac0 <col:56, line:337:5>
|   |-DeclStmt 0x5618352946f8 <line:329:9, col:51>
|   | `-VarDecl 0x561835294420 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x5618352946e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x5618352946b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561835294698 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561835294680 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561835294650 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561835294638 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561835294620 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561835294510 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5618352948b0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561835294760 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56183528a7c8
|   | | `-MemberExpr 0x561835294730 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56183528b778
|   | |   `-DeclRefExpr 0x561835294710 <col:9> 'Timestamp' lvalue Var 0x561835294420 't' 'Timestamp'
|   | `-BinaryOperator 0x561835294890 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561835294860 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561835294790 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x5618352856f8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561835294878 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561835294840 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561835294820 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x5618352947f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x5618352947b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561835294808 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x5618352947d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280f40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561835294aa8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x561835294a78 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561835294a60 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561835294a40 <col:16> 'Timestamp' lvalue Var 0x561835294420 't' 'Timestamp'
|-CXXMethodDecl 0x5618352859b0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x5618352858a0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561835285918 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561835294c78 <col:72, line:343:5>
|   `-ReturnStmt 0x561835294c68 <line:342:9, col:51>
|     `-ExprWithCleanups 0x561835294c50 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561835294c20 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561835294c08 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561835294bc8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561835294bb0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561835294af8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x5618352858a0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561835294b70 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561835294b58 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561835294b18 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56183528a068 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561835294b98 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561835294b38 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835285918 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835285b00 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561835285a70 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5618352950c0 <col:56, line:354:5>
|   |-DeclStmt 0x561835294e68 <line:346:9, col:51>
|   | `-VarDecl 0x561835294ca0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561835294e50 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561835294e20 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561835294e08 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561835294df0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561835294dc0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561835294da8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561835294d90 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561835294d60 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561835295020 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561835294ed0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56183528a7c8
|   | | `-MemberExpr 0x561835294ea0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56183528b778
|   | |   `-DeclRefExpr 0x561835294e80 <col:9> 'Timestamp' lvalue Var 0x561835294ca0 't' 'Timestamp'
|   | `-BinaryOperator 0x561835295000 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561835294fd0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561835294f00 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561835285a70 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561835294fe8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561835294fb0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561835294f90 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561835294f60 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561835294f20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561835294f78 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561835294f40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280e20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5618352950a8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x561835295078 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561835295060 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561835295040 <col:16> 'Timestamp' lvalue Var 0x561835294ca0 't' 'Timestamp'
|-CXXMethodDecl 0x561835285cc8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561835285bb8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561835285c30 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561835295278 <col:72, line:360:5>
|   `-ReturnStmt 0x561835295268 <line:359:9, col:51>
|     `-ExprWithCleanups 0x561835295250 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561835295220 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561835295208 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5618352951c8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x5618352951b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x5618352950f8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561835285bb8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561835295170 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561835295158 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561835295118 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56183528a1b0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561835295198 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561835295138 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835285c30 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835285e18 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561835285d88 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x5618352a1be8 <col:56, line:371:5>
|   |-DeclStmt 0x561835295468 <line:363:9, col:51>
|   | `-VarDecl 0x5618352952a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561835295450 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561835295420 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561835295408 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x5618352953f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x5618352953c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x5618352953a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561835295390 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561835295360 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x5618352a1b48 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x5618352954d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56183528a7c8
|   | | `-MemberExpr 0x5618352954a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56183528b778
|   | |   `-DeclRefExpr 0x561835295480 <col:9> 'Timestamp' lvalue Var 0x5618352952a0 't' 'Timestamp'
|   | `-CallExpr 0x5618352a1ae8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x5618352a1ad0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x561835295500 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56183528baa8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x5618352a1b18 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561835295520 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x561835285d88 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x5618352a1b30 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x5618352a1ab0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x5618352a1a80 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x561835295540 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280c70 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x5618352a1a98 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x561835295560 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x5618352a1bd0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x5618352a1ba0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x5618352a1b88 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x5618352a1b68 <col:16> 'Timestamp' lvalue Var 0x5618352952a0 't' 'Timestamp'
|-CXXMethodDecl 0x561835285f08 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x5618352a1d28 <col:39, line:377:5>
|   `-ReturnStmt 0x5618352a1d18 <line:376:9, col:30>
|     `-ExprWithCleanups 0x5618352a1d00 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x5618352a1cd0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5618352a1cb8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x5618352a1c78 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x5618352a1c20 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x5618352a1c60 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x5618352a1c40 <col:29> 'int' 1
|-CXXMethodDecl 0x561835285fc8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x5618352a1e08 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x5618352a1dc0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x5618352a1d50 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x5618352a1d40 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x5618352a1d80 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x5618352a1df0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x5618352a1da0 <col:19> 'int' 0
|-CXXMethodDecl 0x5618352861c8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561835286078 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5618352860f0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56183528d3a0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56183528d380 <col:60> 'int' 0
| `-CompoundStmt 0x5618352a2000 <col:63, line:395:5>
|   `-BinaryOperator 0x5618352a1fe0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x5618352a1e60 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56183528a7c8
|     | `-MemberExpr 0x5618352a1e30 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56183528b778
|     |   `-CXXThisExpr 0x5618352a1e20 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x5618352a1fc0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x5618352a1f50 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x5618352a1ef0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x5618352a1ed8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x5618352a1ec0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x5618352a1e90 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561835286078 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x5618352a1f38 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x5618352a1f18 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x5618352a1fa8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x5618352a1f90 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x5618352a1f70 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x5618352860f0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835286398 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561835286288 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561835286300 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2158 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x5618352a2110 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x5618352a2028 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x5618352a2018 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5618352a2140 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5618352a2058 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561835286288 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5618352a20d0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5618352a20b8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5618352a2078 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56183528a068 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5618352a20f8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5618352a2098 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835286300 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835286568 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561835286458 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5618352864d0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a22b0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x5618352a2268 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x5618352a2180 <col:9> '<bound member function type>' ->assign 0x5618352861c8
|     | `-CXXThisExpr 0x5618352a2170 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x5618352a2298 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5618352a21b0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561835286458 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x5618352a2228 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x5618352a2210 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5618352a21d0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56183528a1b0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x5618352a2250 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5618352a21f0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x5618352864d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835286738 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561835286628 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5618352866a0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56183528d3d8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56183528d3b8 <col:57> 'int' 0
| `-DeprecatedAttr 0x5618352867e8 <col:75> "" ""
|-CXXMethodDecl 0x561835286978 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561835286868 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x5618352868e0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561835286a28 <col:74> "" ""
|-CXXMethodDecl 0x561835286bb8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561835286aa8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561835286b20 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561835286c68 <col:74> "" ""
|-CXXMethodDecl 0x561835286cf8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x561835286d98 <col:42> "" ""
|-CXXMethodDecl 0x5618352895d0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x5618352894b0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561835289530 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x5618352896a0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x561835289760 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x561835289800 <col:20>
| `-OptimizeNoneAttr 0x561835289858 <col:30>
|-CXXMethodDecl 0x5618352898a0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x561835289960 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x561835289a20 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561835289ae0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x561835289ba0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561835289c60 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x561835289d20 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x561835289de0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x561835289f20 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561835289e90 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a23f8 <col:58, line:512:5>
|   `-ReturnStmt 0x5618352a23e8 <line:511:9, col:53>
|     `-BinaryOperator 0x5618352a23c8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5618352a2398 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a22c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835289e90 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5618352a23b0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5618352a2378 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5618352a2358 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5618352a2328 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5618352a22e8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352a2340 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5618352a2308 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280f40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56183528a068 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561835289fd8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2540 <col:58, line:516:5>
|   `-ReturnStmt 0x5618352a2530 <line:515:9, col:53>
|     `-BinaryOperator 0x5618352a2510 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5618352a24e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a2410 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835289fd8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5618352a24f8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5618352a24c0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5618352a24a0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5618352a2470 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5618352a2430 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352a2488 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5618352a2450 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280e20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56183528a1b0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56183528a120 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2688 <col:58, line:520:5>
|   `-ReturnStmt 0x5618352a2678 <line:519:9, col:53>
|     `-BinaryOperator 0x5618352a2658 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5618352a2628 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a2558 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56183528a120 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5618352a2640 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5618352a2608 <col:23, col:53> 'int'
|           `-BinaryOperator 0x5618352a25e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x5618352a25b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5618352a2578 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280c70 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352a25d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5618352a2598 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56183528a2f8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56183528a268 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a27d0 <col:60, line:524:5>
|   `-ReturnStmt 0x5618352a27c0 <line:523:9, col:55>
|     `-BinaryOperator 0x5618352a27a0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5618352a2770 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a26a0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56183528a268 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5618352a2788 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5618352a2750 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5618352a2730 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5618352a2700 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5618352a26c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352a2718 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5618352a26e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280f40 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56183528a440 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56183528a3b0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2918 <col:60, line:528:5>
|   `-ReturnStmt 0x5618352a2908 <line:527:9, col:55>
|     `-BinaryOperator 0x5618352a28e8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x5618352a28b8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a27e8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56183528a3b0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5618352a28d0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5618352a2898 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5618352a2878 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x5618352a2848 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5618352a2808 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352a2860 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5618352a2828 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280e20 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56183528a588 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56183528a4f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2a60 <col:60, line:532:5>
|   `-ReturnStmt 0x5618352a2a50 <line:531:9, col:55>
|     `-BinaryOperator 0x5618352a2a30 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x5618352a2a00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a2930 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56183528a4f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x5618352a2a18 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x5618352a29e0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x5618352a29c0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x5618352a2990 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x5618352a2950 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280c70 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x5618352a29a8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x5618352a2970 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561835280fd0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56183528a630 prev 0x561835281470 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56183528a728 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56183528a7c8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x561835291590 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561835291978 <col:11>
| |-CXXConstructorDecl 0x561835291670 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561835291758 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x5618352920c0 <col:11>
| |-CXXConstructorDecl 0x5618352917f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x561835291908 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x561835293918 <col:11>
| |-CXXDestructorDecl 0x561835292c28 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561834f995b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561834f996c8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561834f99f90 <col:11>
| |   `-ReturnStmt 0x561834f99f80 <col:11>
| |     `-UnaryOperator 0x561834f99f68 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561834f99f58 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x561834f99738 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x561834f99848 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x561835351a10 <col:11>
|     `-ReturnStmt 0x561835351a00 <col:11>
|       `-UnaryOperator 0x5618353519e8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x5618353519d8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56183528a830 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56183528a930 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56183528ab30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183528a910 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56183528a8f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x56183528a9c0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56183528ab48 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183528a9a0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56183528a980 <col:23> 'int' 1
| |-EnumConstantDecl 0x56183528aa50 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56183528ab60 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56183528aa30 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56183528aa10 <col:23> 'int' 2
| `-EnumConstantDecl 0x56183528aae0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56183528ab78 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56183528aac0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56183528aaa0 <col:27> 'int' 3
|-CXXMethodDecl 0x56183528abb8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56183528ac80 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56183528ae88 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56183528ad30 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56183528adb0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56183528d3f0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56183528b098 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56183528af48 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56183528afc0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56183528b168 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56183528b228 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56183528b398 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56183528b2d8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56183528b460 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56183528b520 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56183528b5e0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56183528b6a0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56183528b740 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56183528b778 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56183528b7e8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x5618352a2a78 <col:27, line:684:5>
|-CXXMethodDecl 0x56183528b8a8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x5618352a2a88 <col:27, line:696:5>
|-CXXMethodDecl 0x56183528baa8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56183528b958 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56183528b9d0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2c10 <col:66, line:700:5>
|   `-ReturnStmt 0x5618352a2c00 <line:699:9, col:31>
|     `-CallExpr 0x5618352a2ba0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x5618352a2b88 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5618352a2b38 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56183510dc38 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x5618352a2bd0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x5618352a2af8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56183528b958 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x5618352a2be8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5618352a2b18 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56183528b9d0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56183528be18 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56183528bb68 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56183528bbe0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56183528bc58 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56183528bcd0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618352a2f60 <col:64, line:707:5>
|   |-DeclStmt 0x5618352a2ca0 <line:704:9, col:24>
|   | `-VarDecl 0x5618352a2c38 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x5618352a2eb0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x5618352a2cb8 <col:9> 'int32_t':'int' lvalue ParmVar 0x56183528bbe0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x5618352a2e98 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x5618352a2e30 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x5618352a2e18 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5618352a2d98 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x561835112f08 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x5618352a2e68 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5618352a2d38 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56183528bc58 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x5618352a2e80 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x5618352a2d58 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56183528bcd0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x5618352a2d78 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x5618352a2c38 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x5618352a2f40 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x5618352a2ed0 <col:9> 'int32_t':'int' lvalue ParmVar 0x56183528bb68 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x5618352a2f28 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x5618352a2f10 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x5618352a2ef0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x5618352a2c38 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56183528c0b8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56183528bee8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56183528bf60 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56183528bfd8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56183528c358 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56183528c180 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56183528c1f8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56183528c270 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56183528c4e8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56183528c420 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56183528c6e8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56183528c5a0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56183528c618 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56183528c9b8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56183528c8f8 parent 0x561834d8d488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56183528c7a8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56183528c820 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56183528cbd8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56183528cb18 parent 0x561834d8d488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56183528ca08 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56183528ca80 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56183528cda0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56183528cce8 parent 0x561834d8d488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56183528cc28 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56183528d028 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56183528cf68 parent 0x561834d8d488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56183528ce18 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56183528ce90 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56183528d248 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56183528d188 parent 0x561834d8d488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56183528d078 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56183528d0f0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x561835292ad0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561835292bb8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835293628 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x5618352935e0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56183528b778
| |     `-DeclRefExpr 0x5618352935c0 <col:7> 'const Timestamp' lvalue ParmVar 0x561835292bb8 '' 'const Timestamp &'
| `-CompoundStmt 0x561835293688 <col:7>
|-CXXConstructorDecl 0x561835292d38 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561835292e48 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56183528b778 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561835293928 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x5618352938d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56183528b778
| |     `-CXXStaticCastExpr 0x5618352938a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x561835293870 <col:7> 'Timestamp' lvalue ParmVar 0x561835292e48 '' 'Timestamp &&'
| `-CompoundStmt 0x561835293988 <col:7>
|-CXXDestructorDecl 0x561835292ef8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561834f99408 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561834f99518 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x561834f9a008 <col:7>
|   |-CXXMemberCallExpr 0x561834f99fa8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x561834f99ee8 <col:7> '<bound member function type>' .operator= 0x561834f995b8
|   | | `-MemberExpr 0x561834f99df8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56183528b778
|   | |   `-CXXThisExpr 0x561834f99de8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x561834f99eb8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56183528b778
|   |   `-DeclRefExpr 0x561834f99e98 <col:7> 'const Timestamp' lvalue ParmVar 0x561834f99518 '' 'const Timestamp &'
|   `-ReturnStmt 0x561834f99ff8 <col:7>
|     `-UnaryOperator 0x561834f99fe0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561834f99fd0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x561834f998b8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561834f999c8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x561835351a88 <col:7>
    |-CXXMemberCallExpr 0x561835351a28 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x561835351990 <col:7> '<bound member function type>' .operator= 0x561834f99738
    | | `-MemberExpr 0x561835351860 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56183528b778
    | |   `-CXXThisExpr 0x561835351850 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x561835351960 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56183528b778
    |   `-CXXStaticCastExpr 0x561835351930 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x561835351900 <col:7> 'Timestamp' lvalue ParmVar 0x561834f999c8 '' 'Timestamp &&'
    `-ReturnStmt 0x561835351a78 <col:7>
      `-UnaryOperator 0x561835351a60 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561835351a50 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183535d0c8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x56183535d2d8 prev 0x56183535d0c8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56183535e720 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56183535e6d0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x56183535e6b0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x56183535e560 'type'
|     `-SubstTemplateTypeParmType 0x56183535e380 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x56183535ded0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56183535dde8 'sized_array_memory'
|-FieldDecl 0x561835362350 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x5618353623a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5618353623d8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|     `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x561835362498 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x561835362460 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|       `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x561835362528 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5618353624f0 'const TimerSet::heap_element &'
|   `-QualType 0x56183535d371 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|         `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x5618353625b8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x561835362580 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|       `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x561835362678 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x561835362640 'const TimerSet::heap_element *'
|   `-QualType 0x56183535d371 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|         `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x561835367910 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x5618353678c0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x5618353678a0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x5618353677d8 'type'
|     `-LValueReferenceType 0x5618353677a0 'const TimerSet::heap_element &'
|       `-QualType 0x561835363111 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x561835363110 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x561835060490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835060438 'T'
|           `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|             `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x561835367978 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x5618353624f0 'const TimerSet::heap_element &'
|   `-QualType 0x56183535d371 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|         `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x5618353679d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835367a38 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x561835362580 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|       `-CXXRecord 0x56183535c240 'heap_element'
|-TypedefDecl 0x561835367aa0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x561835362640 'const TimerSet::heap_element *'
|   `-QualType 0x56183535d371 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56183535d370 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183535c2d0 'TimerSet::heap_element'
|         `-CXXRecord 0x56183535c240 'heap_element'
|-EnumDecl 0x561835367af8 <line:134:5> col:5
| `-EnumConstantDecl 0x561835367bf0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561835367bd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561835367c78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561835367f08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561835367d30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835367dd0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x5618353681c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5618353680b0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x561835368488 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561835368370 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x5618353687d0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x5618353686b0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x561835368ae0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x5618353689c0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561835368dd0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561835368c18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835368c90 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561835368f28 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561835369008 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835369060 <col:30> Inherited
|-CXXMethodDecl 0x5618353690a8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561835369158 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353691b0 <col:30> Inherited
|-CXXMethodDecl 0x561835369278 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561835369328 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835369380 <col:30> Inherited
|-CXXMethodDecl 0x5618353693c8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561835369478 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353694d0 <col:30> Inherited
|-CXXMethodDecl 0x561835369518 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x5618353695c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835369620 <col:30> Inherited
|-CXXMethodDecl 0x561835369668 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561835369718 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835369770 <col:30> Inherited
|-CXXMethodDecl 0x561835369798 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561835369848 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353698f8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561835369ab8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353699a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835369a20 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561835369c08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561835369b78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835369db8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x561835369cc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561835369e70 <col:20>
| `-OptimizeNoneAttr 0x561835369ec8 <col:30>
|-CXXMethodDecl 0x561835369fe8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x561835369ef0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56183536a0a0 <col:20>
| `-OptimizeNoneAttr 0x56183536a0f8 <col:30>
|-CXXMethodDecl 0x56183536a1b0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56183536a120 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183536a2f8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183536a268 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183536a428 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56183536a558 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56183536a628 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56183536a6f8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56183536a838 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56183536a7a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183536a980 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56183536a8f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56183536aac8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56183536aa38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56183536ab80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56183536ac80 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56183536abf0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56183536ad38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56183536adf8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56183536aef8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56183536b0a8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56183536afb8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56183536b898 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56183536b160 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56183536b7f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56183536b6f8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56183536b978 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56183536bac8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56183536ba38 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56183536bb80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56183536bdc8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56183536bc40 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56183536bcb8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56183536bf88 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56183536be98 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56183536c1d8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56183536c050 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56183536c0c8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56183536c298 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56183536c4f8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56183536c400 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56183536c5c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56183536c5c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183536c710 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x56183536c918 prev 0x56183536c710 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56183536da60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56183536da10 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x56183536d9f0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x56183536d8a0 'type'
|     `-SubstTemplateTypeParmType 0x56183536d6c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x56183536d210 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56183536d128 'sized_array_memory'
|-FieldDecl 0x561835371cd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561835371d20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561835371d58 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-PointerType 0x5618352f2860 'Timer *'
|     `-RecordType 0x5618352f19b0 'Timer'
|       `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835371e18 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x561835371de0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x5618352f2860 'Timer *'
|       `-RecordType 0x5618352f19b0 'Timer'
|         `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835371ed8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x561835371ea0 'Timer *const &'
|   `-QualType 0x56183536c9b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352f2860 'Timer *'
|         `-RecordType 0x5618352f19b0 'Timer'
|           `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835371f98 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x561835371f60 'Timer **'
|   `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x5618352f2860 'Timer *'
|       `-RecordType 0x5618352f19b0 'Timer'
|         `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835372058 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x561835372020 'Timer *const *'
|   `-QualType 0x56183536c9b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352f2860 'Timer *'
|         `-RecordType 0x5618352f19b0 'Timer'
|           `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835372c30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x561835372be0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x561835372bc0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x561835372b50 'type'
|     `-SubstTemplateTypeParmType 0x561835372910 'Timer *' sugar
|       |-TemplateTypeParmType 0x561835060bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835060b70 'T'
|       `-PointerType 0x5618352f2860 'Timer *'
|         `-RecordType 0x5618352f19b0 'Timer'
|           `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835372c98 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x561835371ea0 'Timer *const &'
|   `-QualType 0x56183536c9b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352f2860 'Timer *'
|         `-RecordType 0x5618352f19b0 'Timer'
|           `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835372cf0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x561835372d58 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x561835371f60 'Timer **'
|   `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-PointerType 0x5618352f2860 'Timer *'
|       `-RecordType 0x5618352f19b0 'Timer'
|         `-CXXRecord 0x5618353466f8 'Timer'
|-TypedefDecl 0x561835372dc0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x561835372020 'Timer *const *'
|   `-QualType 0x56183536c9b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56183536c9b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-PointerType 0x5618352f2860 'Timer *'
|         `-RecordType 0x5618352f19b0 'Timer'
|           `-CXXRecord 0x5618353466f8 'Timer'
|-EnumDecl 0x561835372e18 <line:134:5> col:5
| `-EnumConstantDecl 0x561835372f10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561835372ef0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x561835372f98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561835373228 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561835373050 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353730f0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x5618353734e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5618353733d0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x5618353737a8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561835373690 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561835373af0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5618353739d0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x561835373e00 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561835373ce0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x5618353740f0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561835373f38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835373fb0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561835374248 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561835374328 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835374380 <col:30> Inherited
|-CXXMethodDecl 0x5618353743c8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561835374478 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353744d0 <col:30> Inherited
|-CXXMethodDecl 0x561835374598 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561835374648 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353746a0 <col:30> Inherited
|-CXXMethodDecl 0x5618353746e8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561835374798 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353747f0 <col:30> Inherited
|-CXXMethodDecl 0x561835374838 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x5618353748e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835374940 <col:30> Inherited
|-CXXMethodDecl 0x561835374988 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561835374a38 <col:20> Inherited
| `-OptimizeNoneAttr 0x561835374a90 <col:30> Inherited
|-CXXMethodDecl 0x561835374ab8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561835374b68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561835374c18 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561835374dd8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561835374cc8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561835374d40 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561835374f28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561835374e98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353750d8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x561835374fe0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561835375190 <col:20>
| `-OptimizeNoneAttr 0x5618353751e8 <col:30>
|-CXXMethodDecl 0x561835375308 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561835375210 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353753c0 <col:20>
| `-OptimizeNoneAttr 0x561835375418 <col:30>
|-CXXMethodDecl 0x5618353754d0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561835375440 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835375618 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835375588 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835375748 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x561835375878 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x561835375948 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x561835375a18 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x561835375b58 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561835375ac8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835375ca0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561835375c10 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561835375de8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561835375d58 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561835375ea0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561835375fa0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561835375f10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561835376058 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561835376118 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x561835376218 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x561835376398 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353762d8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x561835376b58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561835376450 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x561835376ab8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x5618353769b8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x561835376c38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561835376d88 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561835376cf8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561835376e40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561835377088 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561835376f00 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561835376f78 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561835377248 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x561835377158 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561835377498 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x561835377310 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561835377388 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561835377558 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353777b8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x5618353776c0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x561835377888 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561835377888

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835342090 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618353421a8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x561835342238 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x5618353422c0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x5618353423b0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x5618353424b0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x561835342570 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x561835342630 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x561835342758 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561835342758
| `-ParmVarDecl 0x561835342868 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x561835379568 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561835379568
  `-ParmVarDecl 0x561835379678 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56183535b3c0 prev 0x56183534a908 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56183535b4b8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x56183535b548 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56183535b5d0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x56183535b6c8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x5618353799e0 <col:43, col:67>
|   `-ReturnStmt 0x5618353799d0 <col:45, col:52>
|     `-CXXConstructExpr 0x5618353799a0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x561835379970 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x56183535ceb0
|         `-CXXThisExpr 0x561835379960 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56183535b788 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x56183535b990 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x56183535b838 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x56183535b8b0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x56183535ba88 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x56183535bb50 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561835379a60 <col:39, col:67>
|   `-ReturnStmt 0x561835379a50 <col:41, col:48>
|     `-ImplicitCastExpr 0x561835379a38 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561835379a08 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x56183535cf98
|         `-CXXThisExpr 0x5618353799f8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56183535bc18 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561835379ae0 <col:35, col:59>
|   `-ReturnStmt 0x561835379ad0 <col:37, col:44>
|     `-ImplicitCastExpr 0x561835379ab8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561835379a88 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x56183535d000
|         `-CXXThisExpr 0x561835379a78 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56183535bd60 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x56183535bcd0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x56183535bea8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56183535be18 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56183535c0a8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x56183535bf60 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x56183535bfd8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x56183535c178 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56183535c218 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x56183535c240 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56183535c358 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x56183535c3f8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x56183535c458 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x56183535c588 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x56183535c4b8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x56183535c3f8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x561835379bb8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x561835379b60 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x561835379b30 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x561835347d68
|   |       `-ImplicitCastExpr 0x561835379b80 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x561835379b18 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x561835379af8 <col:17> 'Timer *' lvalue ParmVar 0x56183535c4b8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x56183535c458 't' 'Timer *'
|   | `-ImplicitCastExpr 0x561835379c50 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561835379c10 <col:41> 'Timer *' lvalue ParmVar 0x56183535c4b8 't_' 'Timer *'
|   `-CompoundStmt 0x561835379ca0 <col:45, line:44:2>
|-CXXRecordDecl 0x56183535c650 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56183535c768 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x56183535c9b8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x56183535c838 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x56183535c8b0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x561835379dd0 <col:71, line:49:2>
|     `-ReturnStmt 0x561835379dc0 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x561835379d88 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x561835379d70 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561835379d50 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x5618352afbc8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x561835379cd0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x56183535c3f8
|         | `-DeclRefExpr 0x561835379cb0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x56183535c838 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x561835379d20 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x56183535c3f8
|           `-DeclRefExpr 0x561835379d00 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x56183535c8b0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x56183535ca80 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56183535cb98 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x56183535cdb8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x56183535cc38 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x56183535ccb0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x561835379fd8 <col:63, line:54:2>
|     `-BinaryOperator 0x561835379fb8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x561835379e68 <col:6, col:12> 'int' lvalue ->_schedpos1 0x561835349da8
|       | `-ImplicitCastExpr 0x561835379e50 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x561835379e20 <col:6, col:9> 'Timer *' lvalue ->t 0x56183535c458
|       |     `-ImplicitCastExpr 0x561835379e08 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x561835379de8 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x56183535ccb0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x561835379fa0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x561835379f80 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x561835379f28 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x561835379f08 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x561835379ed8 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x561835379e98 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x56183535ccb0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x561835379ef0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x561835379eb8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x56183535cc38 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x561835379f68 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x561835379f48 <col:39> 'int' 1
|-FieldDecl 0x56183535ceb0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x56183535cf20 <col:44, col:53> aligned
|   `-ConstantExpr 0x56183535cf00 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x56183535ce80 <col:52> 'int' 8
|-FieldDecl 0x56183535cf98 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x56183535d000 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x56183535d068 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56183536c6b0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x561835377970 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x5618353779d0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x561835377a30 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x561835377a90 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835377b80 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x561835377af0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x561835378b70 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56183537a430 <col:29, line:81:5>
|   `-IfStmt 0x56183537a408 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56183537a0c0 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56183537a060 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56183537a030 <col:6, col:18> '<bound member function type>' .size 0x561835369798
|     |     `-ImplicitCastExpr 0x56183537a0a8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56183537a000 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56183536c6b0
|     |         `-CXXThisExpr 0x561835379ff0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56183537a2b0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56183537a298 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56183537a278 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x561834f99408 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56183537a0e8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56183535ceb0
|     | | `-CXXThisExpr 0x56183537a0d8 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56183537a260 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56183537a230 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x56183535c3f8
|     |     `-CXXMemberCallExpr 0x56183537a208 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56183537a1d8 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56183536a838
|     |       | `-MemberExpr 0x56183537a128 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56183536c6b0
|     |       |   `-CXXThisExpr 0x56183537a118 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56183537a1b8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56183537a3f0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56183537a3b8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56183537a3a0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56183537a380 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561834f998b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56183537a2f8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56183535ceb0
|         | `-CXXThisExpr 0x56183537a2e8 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56183537a368 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56183537a338 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561835378cb0 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x561835378c20 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x561835378d78 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x561835378e38 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x561835378ef8 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x561835378ff0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x561835379058 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x561835379058
| `-ParmVarDecl 0x561835379168 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x561835379208 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x561835379208
| `-ParmVarDecl 0x561835379318 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x5618353793b8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x5618353793b8
| `-ParmVarDecl 0x5618353794c8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x5618353796e8 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x5618353796e8
| `-ParmVarDecl 0x5618353797f8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x561835379880 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x561835379880

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183518e088 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x56183518e298 prev 0x56183518e088 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56183518f370 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56183518f320 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x56183518f300 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x56183518f1b0 'type'
|     `-SubstTemplateTypeParmType 0x56183536d6c0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x56183536d210 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56183536d128 'sized_array_memory'
|-FieldDecl 0x56183518f470 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56183518f4c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56183518f4f8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-RecordType 0x56183518c140 'pollfd'
|     `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x56183518f5b8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x56183518f580 'pollfd &'
|   `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183518c140 'pollfd'
|       `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x56183518f678 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x56183518f640 'const pollfd &'
|   `-QualType 0x56183518e331 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518c140 'pollfd'
|         `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x56183518f708 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x56183518f6d0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183518c140 'pollfd'
|       `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x56183518f7c8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x56183518f790 'const pollfd *'
|   `-QualType 0x56183518e331 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518c140 'pollfd'
|         `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x5618351903a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x561835190350 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x561835190330 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x5618351902c0 'type'
|     `-SubstTemplateTypeParmType 0x561835190080 'pollfd' sugar
|       |-TemplateTypeParmType 0x561835060bc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835060b70 'T'
|       `-RecordType 0x56183518c140 'pollfd'
|         `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x561835190408 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x56183518f640 'const pollfd &'
|   `-QualType 0x56183518e331 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518c140 'pollfd'
|         `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x561835190460 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618351904c8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x56183518f6d0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183518c140 'pollfd'
|       `-CXXRecord 0x56183518c0b0 'pollfd'
|-TypedefDecl 0x561835190530 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x56183518f790 'const pollfd *'
|   `-QualType 0x56183518e331 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56183518e330 'pollfd' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518c140 'pollfd'
|         `-CXXRecord 0x56183518c0b0 'pollfd'
|-EnumDecl 0x5618353b4580 <line:134:5> col:5
| `-EnumConstantDecl 0x5618353b4670 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5618353b4650 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5618353b46f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5618353b4988 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353b47b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353b4850 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x5618353b4c48 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5618353b4b30 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x5618353b4f08 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5618353b4df0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5618353b5250 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5618353b5130 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x5618353b5560 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x5618353b5440 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x5618353b5850 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353b5698 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353b5710 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5618353b59a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5618353b5a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353b5ae0 <col:30> Inherited
|-CXXMethodDecl 0x5618353b5b28 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x5618353b5bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353b5c30 <col:30> Inherited
|-CXXMethodDecl 0x5618353b5cf8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5618353b5da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353b5e00 <col:30> Inherited
|-CXXMethodDecl 0x5618353b5e48 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5618353b5ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353b5f50 <col:30> Inherited
|-CXXMethodDecl 0x5618353b5f98 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5618353b6048 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353b60a0 <col:30> Inherited
|-CXXMethodDecl 0x5618353b60e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x5618353b6198 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353b61f0 <col:30> Inherited
|-CXXMethodDecl 0x5618353b6218 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353b62c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353b6378 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5618353b6538 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353b6428 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353b64a0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5618353b6688 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5618353b65f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353b6838 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x5618353b6740 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353b68f0 <col:20>
| `-OptimizeNoneAttr 0x5618353b6948 <col:30>
|-CXXMethodDecl 0x5618353b6a68 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x5618353b6970 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353b6b20 <col:20>
| `-OptimizeNoneAttr 0x5618353b6b78 <col:30>
|-CXXMethodDecl 0x5618353b6c30 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353b6ba0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353b6d78 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353b6ce8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353b6ea8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x5618353b6fd8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x5618353b70a8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x5618353b7178 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x5618353b72b8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353b7228 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353b7400 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353b7370 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353b7548 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x5618353b74b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353b7600 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5618353b7700 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5618353b7670 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353b77b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5618353b7878 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x5618353b7978 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x5618353b7b28 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353b7a38 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x5618353b82e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5618353b7be0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x5618353b8248 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x5618353b8148 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x5618353b83c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618353b8518 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353b8488 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5618353b85d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5618353b8818 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353b8690 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5618353b8708 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x5618353b89d8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x5618353b88e8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5618353b8c28 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x5618353b8aa0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x5618353b8b18 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x5618353b8ce8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353b8f48 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x5618353b8e50 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x5618353b9018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5618353b9018

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353ba600 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x5618353ba7d8 prev 0x5618353ba600 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5618353ba868 <col:46, col:52> col:46 public
|-TypedefDecl 0x5618353ba890 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618353bc460 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x5618353bc410 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x5618353bad40 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x5618353bac40 'type'
|     `-TemplateSpecializationType 0x5618353babd0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5618353baab0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x5618353baa90 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5618353baa70 <col:24> 'unsigned long' 24
|       `-RecordType 0x5618353babb0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x5618353baad0 'char_array'
|-TypedefDecl 0x5618353bc518 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x5618353bc4e0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x5618353bc4c0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x5618353bc460 'type'
|     `-ElaboratedType 0x5618353bc410 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x5618353bad40 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x5618353bac40 'type'
|         `-TemplateSpecializationType 0x5618353babd0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5618353baab0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x5618353baa90 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5618353baa70 <col:24> 'unsigned long' 24
|           `-RecordType 0x5618353babb0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x5618353baad0 'char_array'
|-CXXMethodDecl 0x5618353bc6b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x5618353bc5c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x5618353bc7a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5618353bc888 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5618353bc888
|-CXXMethodDecl 0x5618353bcb58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5618353bca60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x5618353bcd98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5618353bcc10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353bcc88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353bcf68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5618353bce58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353bced0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353bd0c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5618353bd198 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x5618353bd3e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5618353bd258 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5618353bd2d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353bd648 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x5618353bd4b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x5618353bd530 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353bd808 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5618353bd718 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353bd9c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x5618353bd8d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353bda80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618353bdb30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353bdd68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x5618353bdbe0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5618353bdc58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x5618353be008 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x5618353bdf10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x5618353be0d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x5618353be120 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5618353be170 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5618353b9160 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x5618353b9368 prev 0x5618353b9160 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5618353ba570 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x5618353ba520 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x5618353ba500 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x5618353ba3b0 'type'
|     `-SubstTemplateTypeParmType 0x5618353ba1d0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x561835055dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561835055d68 'T'
|       `-RecordType 0x5618353b9d20 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x5618353b9c40 'sized_array_memory'
|-FieldDecl 0x5618353be1c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x5618353be210 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5618353be248 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56183508da58 'T'
|   `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353be308 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5618353be2d0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353be3c8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5618353be390 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5618353b9401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353be458 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x5618353be420 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353be518 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5618353be4e0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5618353b9401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353bf170 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x5618353bf120 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x5618353bf100 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x5618353bf038 'type'
|     `-LValueReferenceType 0x5618353bf000 'const SelectSet::SelectorInfo &'
|       `-QualType 0x5618353beda1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x5618353beda0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x561835060490 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561835060438 'T'
|           `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353bf1d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x5618353be390 'const SelectSet::SelectorInfo &'
|   `-QualType 0x5618353b9401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353bf230 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-TypedefDecl 0x5618353bf298 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x5618353be420 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56183508da58 'T'
|     `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56183518db60 'SelectorInfo'
|-TypedefDecl 0x5618353bf300 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x5618353be4e0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x5618353b9401 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x5618353b9400 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56183508dab0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56183508da58 'T'
|       `-RecordType 0x56183518dbf0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56183518db60 'SelectorInfo'
|-EnumDecl 0x5618353bf358 <line:134:5> col:5
| `-EnumConstantDecl 0x5618353bf450 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5618353bf430 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56183508f138 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56183508f110 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56183508f0f0 <col:40> 'int' 1
|-CXXConstructorDecl 0x5618353bf4d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5618353bf768 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353bf590 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353bf630 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x5618353bfa28 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5618353bf910 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x5618353bfce8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5618353bfbd0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5618353c0030 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5618353bff10 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x5618353c0340 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x5618353c0220 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x5618353c0630 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353c0478 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353c04f0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5618353c0788 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5618353c0868 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353c08c0 <col:30> Inherited
|-CXXMethodDecl 0x5618353c0908 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x5618353c09b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353c0a10 <col:30> Inherited
|-CXXMethodDecl 0x5618353c0ad8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5618353c0b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353c0be0 <col:30> Inherited
|-CXXMethodDecl 0x5618353c0c28 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5618353c0cd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353c0d30 <col:30> Inherited
|-CXXMethodDecl 0x5618353c0d78 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5618353c0e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353c0e80 <col:30> Inherited
|-CXXMethodDecl 0x5618353c0ec8 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x5618353c0f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x5618353c0fd0 <col:30> Inherited
|-CXXMethodDecl 0x5618353c0ff8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353c10a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5618353c1158 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5618353c1318 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353c1208 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5618353c1280 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5618353c1468 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5618353c13d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353c1618 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x5618353c1520 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353c16d0 <col:20>
| `-OptimizeNoneAttr 0x5618353c1728 <col:30>
|-CXXMethodDecl 0x5618353c1848 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x5618353c1750 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5618353c1900 <col:20>
| `-OptimizeNoneAttr 0x5618353c1958 <col:30>
|-CXXMethodDecl 0x5618353c1a10 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353c1980 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353c1b58 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353c1ac8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353c1c88 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5618353c1db8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5618353c1e88 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x5618353c1f58 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x5618353c2098 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x5618353c2008 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353c21e0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5618353c2150 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5618353c2328 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x5618353c2298 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353c23e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5618353c24e0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5618353c2450 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5618353c2598 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5618353c2658 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x5618353c2758 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x5618353c2908 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353c2818 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x5618353c30c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5618353c29c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x5618353c3028 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x5618353c2f28 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x5618353c31a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5618353c32f8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x5618353c3268 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5618353c33b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5618353c35f8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x5618353c3470 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5618353c34e8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x5618353c37b8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x5618353c36c8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5618353c3a08 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x5618353c3880 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x5618353c38f8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x5618353c3ac8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5618353c3d28 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x5618353c3c30 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x5618353c3df8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5618353c3df8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56183518cd40 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56183518ce58 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56183518cee8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x56183518cf70 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x56183518d060 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x56183518d060
|-CXXMethodDecl 0x56183518d160 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x56183518d400 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56183518d218 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x56183518d290 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x56183518d310 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x56183518d670 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56183518d4d0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x56183518d548 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x56183518d5c8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x56183518d7c8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x56183518d738 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x56183518d890 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x5618353c54f8 <col:34, line:50:5>
|   |-BinaryOperator 0x5618353c4ec8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x5618353c4e88 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x56183518e018
|   | | `-CXXThisExpr 0x5618353c4e78 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x5618353c4eb8 <col:23> 'bool' true
|   `-CallExpr 0x5618353c54d0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x5618353c54b8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5618353c5438 <col:2> 'void (long)' lvalue Function 0x5618353c5338 'ignore_result' 'void (long)' (FunctionTemplate 0x561835050d68 'ignore_result')
|     `-CallExpr 0x5618353c50e0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x5618353c50c8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5618353c5048 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x56183537d458 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x5618353c5118 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x5618353c4ff0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x5618353c4fd8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x5618353c4f88 <col:22> 'int [2]' lvalue ->_wake_pipe 0x56183518dfb8
|       |   |   `-CXXThisExpr 0x5618353c4f78 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x5618353c4fb8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x5618353c5148 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x5618353c5130 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x5618353c5010 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x5618353c5160 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5618353c5028 <col:41> 'int' 1
|-CXXMethodDecl 0x56183518d9d0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56183518d940 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56183518da98 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56183518db38 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x56183518db60 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56183518dc78 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x56183518dd18 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x56183518dd78 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x56183518dde0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x56183518de90 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x56183518dd18 'read' 'Element *'
|   | `-ImplicitCastExpr 0x5618353c5558 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5618353c5518 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x56183518dd78 'write' 'Element *'
|   | `-ImplicitCastExpr 0x5618353c55d8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x5618353c5598 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x56183518dde0 'pollfd' 'int'
|   | `-UnaryOperator 0x5618353c5638 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x5618353c5618 <col:35> 'int' 1
|   `-CompoundStmt 0x5618353c56b0 <line:64:2, line:65:2>
|-FieldDecl 0x56183518dfb8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x56183518e018 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x5618353b9100 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x5618353c3ee0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x5618353c4118 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x5618353c3f48 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x5618353c3fc0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x5618353c4038 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x5618353c4300 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x5618353c41e8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x5618353c4268 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x5618353c45a0 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x5618353c43c8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x5618353c4448 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x5618353c47a8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x5618353c4660 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x5618353c46d8 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x5618353c48f8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x5618353c4868 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x5618353c49c0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x5618353c4a80 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x5618353c4b48 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x5618353c4b48
| `-ParmVarDecl 0x5618353c4c58 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x5618353c4cf8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x5618353c4cf8
  `-ParmVarDecl 0x5618353c4e08 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835340ff8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561835341118 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x5618353411a8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561835341230 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x561835341320 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561835341420 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x5618353414e0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x5618353415a0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x561835341688 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x5618353417a8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x5618353417a8
| `-ParmVarDecl 0x5618353418b8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x5618353ca2a8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x5618353ca2a8
  `-ParmVarDecl 0x5618353ca3b8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618353568e8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561835356a08 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x561835356aa8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x561835356b08 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x5618353c98a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5618353c98a8
| `-ParmVarDecl 0x5618353c99b8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x5618353c9a58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5618353c9a58
| `-ParmVarDecl 0x5618353c9b68 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x5618353c9bd8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5618353c9bd8
|-CXXMethodDecl 0x5618353ca458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5618353ca458
| `-ParmVarDecl 0x5618353ca568 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x5618353ca5d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5618353ca5d8
| `-ParmVarDecl 0x5618353ca6e8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x5618353d34f8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x5618353d35d0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835343f88 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5618353440a8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x561835344138 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x5618353441c0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x561835344280 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x561834d8d580 'int'
|-CXXMethodDecl 0x561835344348 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x5618353443e8 <col:45> always_inline
|-CXXMethodDecl 0x561835344518 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x561835344450 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x5618353445c0 <col:49> always_inline
|-CXXConstructorDecl 0x5618353446b8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5618353446b8
| `-ParmVarDecl 0x5618353447c8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x561835344868 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561835344868
| `-ParmVarDecl 0x561835344978 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x5618353c9cc0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x5618353c9cc0
|-CXXMethodDecl 0x5618353ca788 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x5618353ca788
| `-ParmVarDecl 0x5618353ca898 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x5618353ca908 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x5618353ca908
  `-ParmVarDecl 0x5618353caa18 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618353c5b20 prev 0x56183518ccb0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x5618353c5c18 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x5618353c5ca8 <col:22, col:28> col:22 public
|-EnumDecl 0x5618353c5cd0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x5618353c5de8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x5618353c5dc8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x5618353c5db0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x5618353c5d90 <col:32> 'int' 1
| `-EnumConstantDecl 0x5618353c5e90 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x5618353c5e70 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x5618353c5e58 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x5618353c5e38 <col:53> 'int' 1000
|-CXXMethodDecl 0x5618353c5f30 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x5618353c5ff0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5618353c60d8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x5618353caad8 <col:34, col:52>
|   `-ReturnStmt 0x5618353caac8 <col:36, col:43>
|     `-MemberExpr 0x5618353caa98 <col:43> 'TimerSet' lvalue ->_timers 0x5618353c7da8
|       `-CXXThisExpr 0x5618353caa88 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5618353c61c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x5618353cab40 <col:46, col:64>
|   `-ReturnStmt 0x5618353cab30 <col:48, col:55>
|     `-MemberExpr 0x5618353cab00 <col:55> 'const TimerSet' lvalue ->_timers 0x5618353c7da8
|       `-CXXThisExpr 0x5618353caaf0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5618353c62b8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x5618353caba8 <col:36, col:55>
|   `-ReturnStmt 0x5618353cab98 <col:38, col:45>
|     `-MemberExpr 0x5618353cab68 <col:45> 'SelectSet' lvalue ->_selects 0x5618353c7e08
|       `-CXXThisExpr 0x5618353cab58 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x5618353c63a8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x5618353cac10 <col:48, col:67>
|   `-ReturnStmt 0x5618353cac00 <col:50, col:57>
|     `-MemberExpr 0x5618353cabd0 <col:57> 'const SelectSet' lvalue ->_selects 0x5618353c7e08
|       `-CXXThisExpr 0x5618353cabc0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5618353c6468 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x5618353c6558 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x5618353c66c8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x5618353c6608 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x5618353c6790 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x5618353c6bd8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x5618353c6840 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x5618353c6ac0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x5618353c6ca8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x5618353c6d68 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x5618353c6e28 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x5618353c6f68 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x5618353c6ed8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x5618353c7030 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x5618353c70f0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x5618353c71b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x5618353c7270 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x5618353c73b0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x5618353c7320 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x5618353c7478 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x5618353c7538 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x5618353c75d8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x5618353c76a0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c76f0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c7740 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c7790 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c77e0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c7830 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c7880 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c78d0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c7920 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x5618353c7970 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x5618353c79c0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x5618353c7ab8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x5618353c7a28 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x5618353c7c08 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x5618353c7b78 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x5618353c7cb0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x5618353c7ce8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x5618353c7d48 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x5618353c7da8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x5618353c7e08 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x5618353c7e88 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x5618353c7ef8 <col:40, col:50> aligned
|   `-ConstantExpr 0x5618353c7ed8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x5618353c7e58 <col:48> 'int' 64
|-FieldDecl 0x5618353c7f68 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x5618353c7fc8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x5618353c80c0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x5618353c81d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x5618353c8230 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x5618353c82b0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x5618353c8320 <col:36, col:46> aligned
|   `-ConstantExpr 0x5618353c8300 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x5618353c8280 <col:44> 'int' 64
|-FieldDecl 0x5618353c8398 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x5618353c83f8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x5618353c8448 <line:170:3, col:9> col:3 public
|-FieldDecl 0x5618353c8488 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x5618353c84f0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x5618353c8540 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x5618353c86e8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x5618353c8578 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x5618353c85f8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x5618353c87e8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x5618353c87e8
|-CXXMethodDecl 0x5618353c88f0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x5618353c89b8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x5618353cad08 <col:34, line:217:5>
|   `-ReturnStmt 0x5618353cacf8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x5618353cace0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5618353cacb0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x5618353539c0
|         `-ImplicitCastExpr 0x5618353cac98 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x5618353cac68 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x561835353958
|             `-MemberExpr 0x5618353cac38 <col:16> 'const TaskLink' lvalue ->_task_link 0x5618353c7ce8
|               `-CXXThisExpr 0x5618353cac28 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x5618353c8a78 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x5618353c8b38 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x5618353cb430 <col:39, line:226:5>
|   |-DeclStmt 0x5618353caf58 <line:223:9, col:68>
|   | `-VarDecl 0x5618353cad30 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x5618353caf10 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x5618353caee0 <col:24, col:38> '<bound member function type>' .compare_swap 0x5618350b73b0
|   |     | `-MemberExpr 0x5618353cada8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x5618353c7f68
|   |     |   `-CXXThisExpr 0x5618353cad98 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x5618353cae98 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x5618353cae80 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x5618353cae58 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5618353cae38 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x5618353caf40 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x5618353caec0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x5618353cafa0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x5618353caf70 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x5618353cad30 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x5618353cb410 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x5618353cb3e0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x5618353cb0b8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x5618353cb088 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5618353cb070 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x5618353cafc8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x5618353cad30 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x5618353cb048 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x5618353cb030 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x5618353cb008 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x5618353cafe8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x5618353cb118 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x5618353cb0f8 <col:60> 'int' 0
|       `-CallExpr 0x5618353cb340 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x5618353cb328 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5618353cb308 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561834e2c160 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x5618353cb380 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5618353cb208 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x5618353cb398 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x5618353cb238 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x5618353cb3b0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x5618353cb278 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x5618353cb3c8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x5618353cb2f0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x5618353cb2d8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x5618353cb298 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x5618353c8c80 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x5618353c8bf0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x5618353c8d48 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x5618353c8e08 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x5618353c8ec8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x5618353c8f88 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x5618353c9048 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x5618353c9140 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x5618353c91a0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x5618353c9230 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x5618353c95f8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x5618353c95f8
| `-ParmVarDecl 0x5618353c9708 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x5618353c9dc8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x5618353c9dc8
  `-ParmVarDecl 0x5618353c9ed8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835353cd0 prev 0x5618352f1870 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x561835353e08 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x561835353e98 <col:33, col:39> col:33 public
|-EnumDecl 0x561835353ec0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x561835354000 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x561835353fe0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x561835353fc0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561835353f80 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x561835353fa0 <col:26> 'int' 16
| `-EnumConstantDecl 0x5618353540d0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x5618353540b0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x561835354090 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x561835354050 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x561835354070 <col:47> 'int' 31
|-EnumDecl 0x561835354120 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x561835354260 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x561835354380 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561835354240 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x561835354220 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x5618353541e0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x561835354200 <col:29> 'int' 15
| `-EnumConstantDecl 0x561835354330 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x561835354398 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561835354310 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x5618353542f0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x5618353542b0 <col:51> 'int' 1
|         `-IntegerLiteral 0x5618353542d0 <col:54> 'int' 10
|-CXXConstructorDecl 0x561835354568 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x5618353543c0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x561835354440 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x5618353546c0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x561835354630 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x5618353547b8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x5618353547b8
|-CXXMethodDecl 0x561835354948 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x561835357a48 <col:42, line:100:5>
|   `-ReturnStmt 0x561835357a38 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x561835357a20 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x5618353579f0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x561835356770
|         `-CXXThisExpr 0x5618353579e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561835354a10 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x561835357ac8 <col:36, line:105:5>
|   `-ReturnStmt 0x561835357ab8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x561835357aa0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561835357a70 <col:16> 'void *const' lvalue ->_thunk 0x5618353567d8
|         `-CXXThisExpr 0x561835357a60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561835354ad0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x561835357b48 <col:37, line:110:5>
|   `-ReturnStmt 0x561835357b38 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x561835357b20 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561835357af0 <col:16> 'Element *const' lvalue ->_owner 0x561835356898
|         `-CXXThisExpr 0x561835357ae0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561835354b90 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x561835354c58 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x561835354d18 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x561835354dd8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x561835357c30 <col:35, line:137:5>
|   `-ReturnStmt 0x561835357c20 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x561835357be8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x561835357bb8 <col:16, col:24> '<bound member function type>' ->router 0x561835304080
|         `-ImplicitCastExpr 0x561835357c08 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561835357ba0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561835357b70 <col:16> 'Element *const' lvalue ->_owner 0x561835356898
|               `-CXXThisExpr 0x561835357b60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561835354e98 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x561835355058 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561835354f48 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561835354fc0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561835355268 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x561835355118 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x561835355190 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561835355338 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x561835357d40 <col:35, line:181:5>
|   `-ReturnStmt 0x561835357d30 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x561835357d18 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x561835357d00 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x561835357cd0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x5618353563a8
|           `-MemberExpr 0x561835357c88 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|             `-MemberExpr 0x561835357c58 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x5618353566f8
|               `-CXXThisExpr 0x561835357c48 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x5618353553f8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x561835357e58 <col:30, line:192:5>
|   `-BinaryOperator 0x561835357e38 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561835357de0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5618353563a8
|     | `-MemberExpr 0x561835357d98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|     |   `-MemberExpr 0x561835357d68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5618353566f8
|     |     `-CXXThisExpr 0x561835357d58 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561835357e20 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561835357e10 <col:32> 'bool' false
|-CXXMethodDecl 0x5618353554b8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x5618353581a8 <col:30, line:206:5>
|   |-BinaryOperator 0x561835357f50 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561835357ef8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5618353563a8
|   | | `-MemberExpr 0x561835357eb0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|   | |   `-MemberExpr 0x561835357e80 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5618353566f8
|   | |     `-CXXThisExpr 0x561835357e70 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561835357f38 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561835357f28 <col:32> 'bool' true
|   |-CallExpr 0x561835357ff0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x561835357fd8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561835357fb8 <col:9> 'void ()' lvalue Function 0x561835340bb0 'click_fence' 'void ()'
|   `-IfStmt 0x561835358190 <line:204:9, line:205:32>
|     |-BinaryOperator 0x5618353580d0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x5618353580a0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x561835358050 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x561835356b08
|     | |   `-MemberExpr 0x561835358020 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x561835356b80
|     | |     `-CXXThisExpr 0x561835358010 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x5618353580b8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x561835358080 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x561835358150 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x561835358100 <col:13> '<bound member function type>' ->complete_schedule 0x561835357580
|       | `-CXXThisExpr 0x5618353580f0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x561835358178 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x561835358130 <col:31> 'int' 0
|-CXXMethodDecl 0x561835355578 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x5618353582d0 <col:35, line:240:5>
|   `-BinaryOperator 0x5618353582b0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561835358258 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5618353563a8
|     | `-MemberExpr 0x561835358210 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|     |   `-MemberExpr 0x5618353581e0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5618353566f8
|     |     `-CXXThisExpr 0x5618353581d0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561835358298 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561835358288 <col:32> 'bool' true
|-CXXMethodDecl 0x561835355638 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x5618353584e8 <col:37, line:253:5>
|   |-BinaryOperator 0x5618353583c8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561835358370 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x5618353563a8
|   | | `-MemberExpr 0x561835358328 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|   | |   `-MemberExpr 0x5618353582f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5618353566f8
|   | |     `-CXXThisExpr 0x5618353582e8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5618353583b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5618353583a0 <col:32> 'bool' false
|   `-BinaryOperator 0x5618353584c8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561835358470 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561835356408
|     | `-MemberExpr 0x561835358428 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|     |   `-MemberExpr 0x5618353583f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5618353566f8
|     |     `-CXXThisExpr 0x5618353583e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x5618353584b0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x5618353584a0 <col:41> 'bool' true
|-CXXMethodDecl 0x5618353556f8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x561835358668 <col:37, line:264:5>
|   |-BinaryOperator 0x5618353585e8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561835358590 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561835356408
|   | | `-MemberExpr 0x561835358548 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x5618353564c8
|   | |   `-MemberExpr 0x561835358518 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x5618353566f8
|   | |     `-CXXThisExpr 0x561835358508 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x5618353585d0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x5618353585c0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x561835358648 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x561835358618 <col:9> '<bound member function type>' ->reschedule 0x5618353554b8
|       `-CXXThisExpr 0x561835358608 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x561835355840 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x5618353557b0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x561835355910 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x561835355a58 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x5618353559c8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x561835355ba8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x561835355b18 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x561835355c70 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x561835355d30 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x561835355dd0 <col:53> "" ""
|-CXXMethodDecl 0x561835355e68 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x561835355f08 <col:47> "" ""
|-AccessSpecDecl 0x561835355f78 <line:303:3, col:10> col:3 private
|-FieldDecl 0x561835355fb8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x561835356020 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x561835356070 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561835356188 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x561835356218 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x561835356348 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x5618353563a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x561835356408 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x5618353d2c28 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x5618353d2d00 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x5618353d2d00
| | |-CXXConstructorDecl 0x5618353d2fb8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x5618353d2fb8
| | | `-ParmVarDecl 0x5618353d30c8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x5618353d3168 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x5618353d3168
| |   `-ParmVarDecl 0x5618353d3278 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x5618353564c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x561835356528 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x5618353564c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561835356348 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x561835356580 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x5618353564c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x5618353563a8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x5618353565d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x5618353564c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561835356408 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x561835356630 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x5618353d2b38 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5618353d3498 <col:11>
| |-CXXConstructorDecl 0x5618353d2e08 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x5618353d2e08
| | `-ParmVarDecl 0x5618353d2f18 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x5618353d3318 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x5618353d3318
|   `-ParmVarDecl 0x5618353d3428 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x5618353566f8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x561835356770 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x5618353567d8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561835356838 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x561835356898 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x5618353568e8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561835356a08 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x561835356aa8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x561835356b08 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x5618353c98a8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5618353c98a8
| | `-ParmVarDecl 0x5618353c99b8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x5618353c9a58 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5618353c9a58
| | `-ParmVarDecl 0x5618353c9b68 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x5618353c9bd8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x5618353c9bd8
| |-CXXMethodDecl 0x5618353ca458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x5618353ca458
| | `-ParmVarDecl 0x5618353ca568 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x5618353ca5d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x5618353ca5d8
| | `-ParmVarDecl 0x5618353ca6e8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x5618353d34f8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x5618353d35d0 <col:11>
|-FieldDecl 0x561835356b80 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x561835356cc8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x561835356c08 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x561835356e78 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x561835356d88 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x561835356f40 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x561835357000 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x5618353570c0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x561835358778 <col:41, line:355:5>
|   `-ReturnStmt 0x561835358768 <line:354:9, col:38>
|     `-BinaryOperator 0x561835358748 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x561835358718 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x5618353586c8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x561835356b08
|       |   `-MemberExpr 0x561835358698 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x561835356b80
|       |     `-CXXThisExpr 0x561835358688 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x561835358730 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x5618353586f8 <col:38> 'int' 0
|-CXXMethodDecl 0x561835357180 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x5618353572c0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x561835357230 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x561835357438 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x561835357378 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x561835357580 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x5618353574f0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x561835357648 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x561835357810 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x5618353576f8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x561835357778 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x561835357910 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x5618353579a0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561835349e58 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561835349f88 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56183534aa78 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5618353466f8 prev 0x5618352f1920 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5618353467f0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x561835346880 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x5618353468e0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x561835346988 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x561835346aa8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x561835346c48 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x561835346b88 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x561835346e98 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x561835346d08 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x561835346d88 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x561835347028 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x561835346f60 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x5618353471a8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x5618353470e8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x561835347358 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x561835347298 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x561835347450 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56183534ac50 <col:21, line:58:5>
|   `-IfStmt 0x56183534ac38 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56183534aba0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56183534ab70 <col:6> '<bound member function type>' ->scheduled 0x561835347ca8
|     |   `-ImplicitCastExpr 0x56183534abc0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56183534ab60 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56183534ac18 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56183534abe8 <col:6> '<bound member function type>' ->unschedule 0x561835349300
|         `-CXXThisExpr 0x56183534abd8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x561835347550 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56183534adf0 <col:26, line:65:5>
|   |-BinaryOperator 0x56183534ad10 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56183534aca8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561835349f88
|   | | `-MemberExpr 0x56183534ac78 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56183534a048
|   | |   `-CXXThisExpr 0x56183534ac68 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56183534acf8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56183534acd8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56183534a4a8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56183534add0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56183534ad40 <col:2> 'void *' lvalue ->_thunk 0x56183534a0c8
|     | `-CXXThisExpr 0x56183534ad30 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56183534ada8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56183534ad70 <col:20> 'int' 1
|-CXXMethodDecl 0x561835347690 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x561835347600 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56183534af50 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56183534ae40 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56183534ae10 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x561835347600 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56183534af30 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56183534af00 <col:2> '<bound member function type>' ->assign 0x561835347550
|       `-CXXThisExpr 0x56183534aef0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x561835347860 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x561835347748 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x5618353477c8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x56183534b0d0 <col:58, line:79:5>
|   |-BinaryOperator 0x56183534b018 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56183534afb0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561835349f88
|   | | `-MemberExpr 0x56183534af80 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56183534a048
|   | |   `-CXXThisExpr 0x56183534af70 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56183534b000 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x56183534afe0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x561835347748 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x56183534b0b0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56183534b048 <col:2> 'void *' lvalue ->_thunk 0x56183534a0c8
|     | `-CXXThisExpr 0x56183534b038 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56183534b098 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x56183534b078 <col:11> 'void *' lvalue ParmVar 0x5618353477c8 'user_data' 'void *'
|-CXXMethodDecl 0x5618353479b0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x561835347920 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x56183534b268 <col:35, line:87:5>
|   |-BinaryOperator 0x56183534b198 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56183534b130 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561835349f88
|   | | `-MemberExpr 0x56183534b100 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56183534a048
|   | |   `-CXXThisExpr 0x56183534b0f0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56183534b180 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56183534b160 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56183534a680 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56183534b248 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56183534b1c8 <col:2> 'void *' lvalue ->_thunk 0x56183534a0c8
|     | `-CXXThisExpr 0x56183534b1b8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56183534b230 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56183534b218 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x56183534b1f8 <col:11> 'Element *' lvalue ParmVar 0x561835347920 'element' 'Element *'
|-CXXMethodDecl 0x561835347af8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x561835347a68 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x56183534b400 <col:29, line:94:5>
|   |-BinaryOperator 0x56183534b330 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56183534b2c8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561835349f88
|   | | `-MemberExpr 0x56183534b298 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56183534a048
|   | |   `-CXXThisExpr 0x56183534b288 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56183534b318 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56183534b2f8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56183534a858 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56183534b3e0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56183534b360 <col:2> 'void *' lvalue ->_thunk 0x56183534a0c8
|     | `-CXXThisExpr 0x56183534b350 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56183534b3c8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56183534b3b0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x56183534b390 <col:11> 'Task *' lvalue ParmVar 0x561835347a68 'task' 'Task *'
|-CXXMethodDecl 0x561835347be8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56183534b4e0 <col:37, line:100:5>
|   `-ReturnStmt 0x56183534b4d0 <line:99:2, col:19>
|     `-BinaryOperator 0x56183534b4b0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x56183534b480 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x56183534b430 <col:9> 'Element *const' lvalue ->_owner 0x56183534a128
|       |   `-CXXThisExpr 0x56183534b420 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x56183534b498 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x56183534b460 <col:19> 'int' 0
|-CXXMethodDecl 0x561835347ca8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x56183534b5a0 <col:35, line:105:5>
|   `-ReturnStmt 0x56183534b590 <line:104:2, col:23>
|     `-BinaryOperator 0x56183534b570 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x56183534b558 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x56183534b508 <col:9> 'const int' lvalue ->_schedpos1 0x561835349da8
|       |   `-CXXThisExpr 0x56183534b4f8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x56183534b538 <col:23> 'int' 0
|-CXXMethodDecl 0x561835347d68 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x56183534b608 <col:51, line:118:5>
|   `-ReturnStmt 0x56183534b5f8 <line:117:2, col:9>
|     `-MemberExpr 0x56183534b5c8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x561835349e08
|       `-CXXThisExpr 0x56183534b5b8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561835347e28 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x56183534bb60 <col:37, line:136:5>
|   `-IfStmt 0x56183534bb38 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x56183534b6c8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x56183534b6b0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x56183534b690 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x56183534b660 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x5618352839f8
|     |       `-MemberExpr 0x56183534b630 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x561835349e08
|     |         `-CXXThisExpr 0x56183534b620 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x56183534baa8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x56183534ba90 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x56183534ba60 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x56183534ba48 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x56183534ba10 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x56183534b9f8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x56183534b9d8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5618352b21d0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x56183534b978 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x56183534b960 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x56183534b888 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x56183534b870 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x56183534b850 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5618352b1e90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x56183534b7f0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x56183534b6f0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561835349e08
|     |         |     |   `-CXXThisExpr 0x56183534b6e0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x56183534b838 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x56183534b820 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x56183534b7d0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x56183534b7b8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x56183534b758 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x5618352a54f0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x56183534b9c0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x56183534b9a8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x56183534b940 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x56183534b928 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x56183534b8f8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x561835100820 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x56183534bb28 <line:135:6, col:13>
|       `-CXXConstructExpr 0x56183534baf8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x56183534bac8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561835349e08
|           `-CXXThisExpr 0x56183534bab8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x561835347ee8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x561835350858 <col:35, line:141:5>
|   `-ReturnStmt 0x561835350848 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x561835350810 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x56183534bbd0 <col:9, col:17> '<bound member function type>' ->router 0x561835304080
|         `-ImplicitCastExpr 0x561835350830 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56183534bbb8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56183534bb88 <col:9> 'Element *const' lvalue ->_owner 0x56183534a128
|               `-CXXThisExpr 0x56183534bb78 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561835347fa8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x5618353508d8 <col:37, line:146:5>
|   `-ReturnStmt 0x5618353508c8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x5618353508b0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561835350880 <col:9> 'Element *const' lvalue ->_owner 0x56183534a128
|         `-CXXThisExpr 0x561835350870 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561835348068 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x561835350958 <col:41, line:151:5>
|   `-ReturnStmt 0x561835350948 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x561835350930 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x561835350900 <col:9> 'RouterThread *const' lvalue ->_thread 0x56183534a188
|         `-CXXThisExpr 0x5618353508f0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561835348130 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x561835348328 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x5618353481e0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561835348258 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56183534aa68 <col:50> 'bool' false
|-CXXMethodDecl 0x5618353484a8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x5618353483e8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x5618353485f0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561835348560 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561835348738 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x5618353486a8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561835348880 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5618353487f0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x5618353489c8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561835348938 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x561835348a90 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x561835350ac0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x561835350aa8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x561835350a50 <col:2, col:47> 'void'
|       |-MemberExpr 0x561835350980 <col:2> '<bound member function type>' ->schedule_at_steady 0x5618353485f0
|       | `-CXXThisExpr 0x561835350970 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561835350a90 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561835350a78 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561835350a30 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x561835350a18 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x5618353509e8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x561835100820 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x561835348bd0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x561835348b40 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x561835348d18 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561835348c88 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561835350c48 <col:56, line:241:5>
|   `-ExprWithCleanups 0x561835350c30 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x561835350bd8 <col:2, col:40> 'void'
|       |-MemberExpr 0x561835350ae8 <col:2> '<bound member function type>' ->schedule_after 0x561835348bd0
|       | `-CXXThisExpr 0x561835350ad8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561835350c18 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561835350c00 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561835350b98 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x561835350b68 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x561835350b28 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835348c88 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x561835350b80 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561835350b48 <col:38> 'int' 0
|-CXXMethodDecl 0x561835348e60 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561835348dd0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561835350eb8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x561835350ea0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x561835350e48 <col:2, col:49> 'void'
|       |-MemberExpr 0x561835350c70 <col:2> '<bound member function type>' ->schedule_after 0x561835348bd0
|       | `-CXXThisExpr 0x561835350c60 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561835350e88 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561835350e70 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561835350df0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x561835350dd8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561835350d48 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5618352857e8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561835350e30 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x561835350e18 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561835350d28 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835348dd0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835348fa8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x561835348f18 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x561835351098 <col:58, line:261:5>
|   `-ExprWithCleanups 0x561835351080 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x561835351028 <col:2, col:38> 'void'
|       |-MemberExpr 0x561835350ee0 <col:2> '<bound member function type>' ->schedule_at_steady 0x5618353485f0
|       | `-CXXThisExpr 0x561835350ed0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561835351068 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561835351050 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561835350ff0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561835350fd8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561835350fb8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5618352b1e90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561835350f88 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561835350f70 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561835350f20 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561835349e08
|             |     `-CXXThisExpr 0x561835350f10 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x561835350f50 <col:33> 'const Timestamp' lvalue ParmVar 0x561835348f18 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x5618353490f0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561835349060 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561835351370 <col:58, line:270:5>
|   `-ExprWithCleanups 0x561835351358 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x561835351300 <col:2, col:79> 'void'
|       |-MemberExpr 0x5618353510c0 <col:2> '<bound member function type>' ->schedule_at_steady 0x5618353485f0
|       | `-CXXThisExpr 0x5618353510b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561835351340 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561835351328 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x5618353512c0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x5618353511f8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x5618353511e0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x561835351170 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x561835351140 <col:31, col:41> '<bound member function type>' .sec 0x561835102318
|             | |     `-ImplicitCastExpr 0x561835351190 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x561835351110 <col:31> 'Timestamp' lvalue ->_expiry_s 0x561835349e08
|             | |         `-CXXThisExpr 0x561835351100 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x5618353511c8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x5618353511a8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561835349060 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x561835351288 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x561835351258 <col:60, col:70> '<bound member function type>' .subsec 0x561835102a10
|                 `-ImplicitCastExpr 0x5618353512a8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x561835351228 <col:60> 'Timestamp' lvalue ->_expiry_s 0x561835349e08
|                     `-CXXThisExpr 0x561835351218 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x561835349238 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x5618353491a8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x5618353516a8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x561835351690 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x561835351638 <col:2, col:65> 'void'
|       |-MemberExpr 0x561835351398 <col:2> '<bound member function type>' ->schedule_at_steady 0x5618353485f0
|       | `-CXXThisExpr 0x561835351388 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561835351678 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561835351660 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561835351600 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x5618353515e8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x5618353515c8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x5618352b1e90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561835351568 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561835351550 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x5618353513d8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561835349e08
|             |     `-CXXThisExpr 0x5618353513c8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x5618353515b0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x561835351598 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x5618353514f8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x5618353514e0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5618353514b0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x5618352857e8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x561835351538 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x561835351520 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x561835351490 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x5618353491a8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561835349300 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x5618353493c0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x561835351b70 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x561835351700 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x5618353516d0 <col:2> '<bound member function type>' ->unschedule 0x561835349300
|   |   `-CXXThisExpr 0x5618353516c0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x561835351b58 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x561835351b20 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x561835351b08 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5618353517b8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561834f998b8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x561835351730 <col:2> 'Timestamp' lvalue ->_expiry_s 0x561835349e08
|       | `-CXXThisExpr 0x561835351720 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x5618353517a0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x561835351770 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561835349480 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x561835351ec8 <col:42, line:310:5>
|   |-IfStmt 0x561835351d10 <line:306:2, line:307:23>
|   | |-CallExpr 0x561835351c40 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x561835351c28 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x561835351bc8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x5618352a3960 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x561835351d00 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x561835351ce8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x561835351cb8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561835351ca0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x561835351c70 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x561835351eb8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x561835351ea0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x561835351e70 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561835351e58 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x561835351e18 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561835351e00 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561835351dd0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561835285b00 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561835351e40 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x561835351db0 <col:30> 'int' 500
|-CXXMethodDecl 0x5618353495c0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561835349530 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561835349668 <col:69> "" ""
|-CXXMethodDecl 0x561835349778 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x5618353496e8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561835349820 <col:70> "" ""
|-CXXMethodDecl 0x561835349930 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x5618353498a0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5618353499d8 <col:71> "" ""
|-CXXMethodDecl 0x561835349ae8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561835349a58 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561835349b90 <col:72> "" ""
|-EnumDecl 0x561835349c00 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x561835349d00 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x561835349d50 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561835349ce0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x561835349cc0 <col:25> 'int' 1
|-AccessSpecDecl 0x561835349d68 <line:339:3, col:10> col:3 private
|-FieldDecl 0x561835349da8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x561835349e08 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x561835349e58 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561835349f88 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56183534aa78 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56183534a048 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56183534a0c8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56183534a128 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56183534a188 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56183534a2d8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56183534a1e8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56183534a4a8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56183534a390 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56183534a410 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56183534a680 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56183534a568 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56183534a5e8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56183534a858 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56183534a740 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56183534a7c0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56183534aa28 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56183535ec80 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56183553bfb8 <line:167:18>
|-CXXRecordDecl 0x56183553c078 prev 0x56183535ec80 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56183553c188 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
