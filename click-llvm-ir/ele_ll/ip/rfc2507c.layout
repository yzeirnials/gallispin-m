
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct RFC2507c::tcpip
         0 |   struct click_ip _ip
     0:0-3 |     unsigned int ip_hl
     0:4-7 |     unsigned int ip_v
         1 |     uint8_t ip_tos
         2 |     uint16_t ip_len
         4 |     uint16_t ip_id
         6 |     uint16_t ip_off
         8 |     uint8_t ip_ttl
         9 |     uint8_t ip_p
        10 |     uint16_t ip_sum
        12 |     struct in_addr ip_src
        12 |       in_addr_t s_addr
        16 |     struct in_addr ip_dst
        16 |       in_addr_t s_addr
        20 |   struct click_tcp _tcp
        20 |     uint16_t th_sport
        22 |     uint16_t th_dport
        24 |     tcp_seq_t th_seq
        28 |     tcp_seq_t th_ack
    32:0-3 |     unsigned int th_flags2
    32:4-7 |     unsigned int th_off
        33 |     uint8_t th_flags
        34 |     uint16_t th_win
        36 |     uint16_t th_sum
        38 |     uint16_t th_urp
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | struct RFC2507c::ccb
         0 |   struct RFC2507c::tcpip _context
         0 |     struct click_ip _ip
     0:0-3 |       unsigned int ip_hl
     0:4-7 |       unsigned int ip_v
         1 |       uint8_t ip_tos
         2 |       uint16_t ip_len
         4 |       uint16_t ip_id
         6 |       uint16_t ip_off
         8 |       uint8_t ip_ttl
         9 |       uint8_t ip_p
        10 |       uint16_t ip_sum
        12 |       struct in_addr ip_src
        12 |         in_addr_t s_addr
        16 |       struct in_addr ip_dst
        16 |         in_addr_t s_addr
        20 |     struct click_tcp _tcp
        20 |       uint16_t th_sport
        22 |       uint16_t th_dport
        24 |       tcp_seq_t th_seq
        28 |       tcp_seq_t th_ack
    32:0-3 |       unsigned int th_flags2
    32:4-7 |       unsigned int th_off
        33 |       uint8_t th_flags
        34 |       uint16_t th_win
        36 |       uint16_t th_sum
        38 |       uint16_t th_urp
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Pair<const class IPFlowID, int>
         0 |   class IPFlowID first
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
        12 |   int second
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt
         0 |   struct Pair<const class IPFlowID, int> v
         0 |     class IPFlowID first
         0 |       class IPAddress _saddr
         0 |         uint32_t _addr
         4 |       class IPAddress _daddr
         4 |         uint32_t _addr
         8 |       uint16_t _sport
        10 |       uint16_t _dport
        12 |     int second
        16 |   struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042ba0018 prev 0x563042b977b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042ba0110 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x563042ba01a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x563042ba0218 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x563042ba02d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x563042ba03a0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x563042ba0518 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x563042ba0450 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x563042ba05c0 <col:24>
| `-OptimizeNoneAttr 0x563042ba0618 <col:34>
|-CXXMethodDecl 0x563042ba0660 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x563042ba0918 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x563042ba0710 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563042ba0788 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x563042ba0808 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x563042ba09d0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x563042ba0a08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x563042ba0a70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x563042ba0af8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x563042ba0e18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x563042ba0bb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563042ba0c28 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x563042ba0ca0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x563042ba0d20 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x563042ba0f30 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x563042ba88a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563042ba88a8
| `-ParmVarDecl 0x563042ba89b8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x563042ba8a58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563042ba8a58
| `-ParmVarDecl 0x563042ba8b68 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x563042c51c30 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042b93030 prev 0x563042b92db0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563042b93128 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x563042b931b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x563042b93218 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x563042b93308 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x563042b93408 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x563042b935d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x563042b93488 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x563042b93500 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x563042b93768 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x563042b936a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x563042b93810 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x563042b93948 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x563042b93880 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x563042b93ae8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x563042b93a28 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x563042b93c88 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x563042b93bc8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x563042b93d30 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x563042b93e30 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x563042b93f10 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b93e10 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x563042b93df0 <col:26> 'int' 1
| `-EnumConstantDecl 0x563042b93ec0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x563042b93f28 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b93ea0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x563042b93e80 <col:44> 'int' 2
|-CXXMethodDecl 0x563042b94070 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x563042b93f58 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563042b93fd8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x563042b941c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x563042b94138 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x563042b94408 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x563042b94288 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x563042b94300 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x563042b944b8 <col:20>
| `-OptimizeNoneAttr 0x563042b94510 <col:30>
|-CXXMethodDecl 0x563042b94618 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x563042b94550 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x563042b946c0 <col:20>
| `-OptimizeNoneAttr 0x563042b94718 <col:30>
|-CXXMethodDecl 0x563042b94768 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x563042b94830 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x563042b94948 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x563042b949d0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x563042b94a58 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x563042b94ae0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x563042b94b68 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x563042b94bf8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x563042b94cb8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x563042b94d40 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x563042b94dc8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x563042b94e50 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x563042b94ed8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x563042b94f60 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x563042b94ff0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x563042b950b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x563042b95140 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x563042b95290 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x563042b951f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x563042b95420 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x563042b95350 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x563042b956d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x563042b954d8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x563042b95558 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x563042b955d8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x563042b95788 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x563042b95890 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563042b95b20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b95870 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x563042b95850 <col:33> 'int' 0
| |-EnumConstantDecl 0x563042b95920 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563042b95b38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b95900 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x563042b958e0 <col:32> 'int' 20
| |-EnumConstantDecl 0x563042b959b0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563042b95b50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b95990 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x563042b95970 <col:38> 'int' 90
| |-EnumConstantDecl 0x563042b95a40 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563042b95b68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b95a20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x563042b95a00 <col:35> 'int' 100
| `-EnumConstantDecl 0x563042b95ad0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x563042b95b80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b95ab0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x563042b95a90 <col:32> 'int' 2000
|-CXXMethodDecl 0x563042b95bc0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x563042b96000 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563042b95e70 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x563042b95ee8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563042b960d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x563042b96250 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x563042b96180 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563042b96458 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563042b96308 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x563042b96380 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563042b96558 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x563042b965f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x563042b966c0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x563042b96750 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x563042b96980 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b96730 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x563042b96710 <col:36> 'int' EnumConstant 0x563042b966c0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x563042b967a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563042b967f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563042b96840 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563042b96890 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563042b968e0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x563042b96930 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x563042b96a68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x563042b969a8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x563042b96b30 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x563042b96bf0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x563042b96cb0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x563042b96d70 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x563042b96e88 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x563042b96f50 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x563042b970d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x563042b97000 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x563042b971f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563042b973f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x563042b972a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x563042b97328 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x563042ba4d48 <col:54, line:127:5>
|   |-ParenExpr 0x563042ba4bf8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x563042ba4bc8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x563042ba48b8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563042ba4890 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x563042ba4878 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x563042ba4860 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x563042ba4830 <col:31> 'Router *' lvalue ->_router 0x563042ba2710
|   |   |         `-CXXThisExpr 0x563042ba4820 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563042ba4918 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042ba48f8 <col:48> 'int' 0
|   |   `-CallExpr 0x563042ba4b28 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x563042ba4b10 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042ba4af0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042ba4b68 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042ba4988 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x563042ba4b80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042ba49a8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x563042ba4b98 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042ba49e0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x563042ba4bb0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042ba4ad8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042ba4ac0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042ba4a78 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x563042ba4c90 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x563042ba4c28 <col:9> 'Router *' lvalue ->_router 0x563042ba2710
|   | | `-CXXThisExpr 0x563042ba4c18 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x563042ba4c78 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563042ba4c58 <col:19> 'Router *' lvalue ParmVar 0x563042b972a8 'r' 'Router *'
|   `-BinaryOperator 0x563042ba4d28 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x563042ba4cc0 <col:9> 'int' lvalue ->_eindex 0x563042ba2778
|     | `-CXXThisExpr 0x563042ba4cb0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x563042ba4d10 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x563042ba4cf0 <col:19> 'int' lvalue ParmVar 0x563042b97328 'eindex' 'int'
|-CXXMethodDecl 0x563042b97580 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x563042b974b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x563042b97650 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x563042b97718 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x563042b977b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x563042b97a08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x563042b97880 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x563042b97900 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x563042b97ab8 <col:20>
| `-OptimizeNoneAttr 0x563042b97b10 <col:30>
|-CXXMethodDecl 0x563042b97c18 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563042b97b50 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x563042b97cc0 <col:20>
| `-OptimizeNoneAttr 0x563042b97d18 <col:30>
|-CXXMethodDecl 0x563042b97de8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563042b97d58 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x563042b97e90 <col:20>
| `-OptimizeNoneAttr 0x563042b97ee8 <col:30>
|-CXXMethodDecl 0x563042b98078 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x563042b97f20 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x563042b97fa0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x563042b98208 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563042b98140 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563042b98358 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563042b982c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563042b984a8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563042b98418 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563042b985f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563042b98568 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563042b988b8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x563042b986b0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x563042b98730 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x563042b987d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x563042b98990 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x563042b98a50 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x563042b98d20 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563042b98bd0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x563042b98c48 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x563042b98e48 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x563042b99020 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x563042b98f00 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x563042b98f80 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x563042b99208 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x563042b990e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x563042b99168 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x563042b99578 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563042b992c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563042b99340 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563042b993c0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563042ba4330 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563042ba4310 <col:106> 'int' 0
| `-ParmVarDecl 0x563042b99438 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563042ba4368 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563042ba4348 <col:126> 'int' 0
|-CXXMethodDecl 0x563042b99918 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563042b99648 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563042b996e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563042b99760 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x563042b997d8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563042ba43a0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563042ba4380 <col:114> 'int' 0
|-CXXMethodDecl 0x563042b99ca8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563042b999f0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x563042b99a68 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563042b99ae8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x563042ba43b8 <col:96> 'int' 0
| `-ParmVarDecl 0x563042b99b60 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563042ba43f8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563042ba43d8 <col:116> 'int' 0
|-CXXMethodDecl 0x563042b9a028 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563042b99d78 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563042b99df0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563042b99e70 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563042ba4430 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563042ba4410 <col:109> 'int' 0
| `-ParmVarDecl 0x563042b99ee8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563042ba4468 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563042ba4448 <col:129> 'int' 0
|-CXXMethodDecl 0x563042b9a3a8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563042b9a0f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563042b9a170 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563042b9a1f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x563042b9a268 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563042ba44a0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563042ba4480 <col:117> 'int' 0
|-CXXMethodDecl 0x563042b9a738 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563042b9a480 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9a4f8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563042b9a578 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x563042ba44b8 <col:99> 'int' 0
| `-ParmVarDecl 0x563042b9a5f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563042ba44f8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563042ba44d8 <col:119> 'int' 0
|-CXXMethodDecl 0x563042b9ab58 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x563042b9a808 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563042b9a888 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563042b9a900 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563042b9a980 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563042ba4530 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563042ba4510 <col:108> 'int' 0
| `-ParmVarDecl 0x563042b9aa00 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x563042ba4568 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x563042ba4548 <col:141> 'int' 0
|-CXXMethodDecl 0x563042b9af78 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563042b9ac30 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563042b9acb0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563042b9ad28 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563042b9ada8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x563042b9ae28 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563042ba4580 <col:121> 'int' 0
|-CXXMethodDecl 0x563042b9b3a8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563042b9b058 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x563042b9b0d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x563042b9b150 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563042b9b1d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x563042ba45a0 <col:98> 'int' 0
| `-ParmVarDecl 0x563042b9b250 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563042ba45c0 <col:123> 'int' 0
|-CXXMethodDecl 0x563042b9b670 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x563042b9b480 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563042b9b500 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x563042b9b580 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x563042ba45e0 <col:80> 'int' 0
|-EnumDecl 0x563042b9b728 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x563042b9b830 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563042b9bac0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b9b810 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x563042b9b7f0 <col:42> 'int' 1
| |-EnumConstantDecl 0x563042b9b8c0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563042b9bad8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b9b8a0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x563042b9b880 <col:40> 'int' 2
| |-EnumConstantDecl 0x563042b9b950 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563042b9baf0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b9b930 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x563042b9b910 <col:44> 'int' 4
| |-EnumConstantDecl 0x563042b9b9e0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563042b9bb08 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b9b9c0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x563042b9b9a0 <col:36> 'int' 7
| `-EnumConstantDecl 0x563042b9ba70 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x563042b9bb20 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b9ba50 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x563042b9ba30 <col:34> 'int' 6
|-CXXMethodDecl 0x563042b9bdd8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x563042b9bb48 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x563042b9bbe8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x563042b9bc68 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x563042b9bce0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x563042ba4698 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563042ba4680 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x563042ba4668 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563042ba4648 <col:98, col:105> 'String' (CXXTemporary 0x563042ba4648)
|           `-CXXTemporaryObjectExpr 0x563042ba4610 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x563042b9c078 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x563042b9bea8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563042b9bf20 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x563042b9bf98 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563042ba4748 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563042ba4730 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563042ba4718 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563042ba46f8 <col:94, col:101> 'String' (CXXTemporary 0x563042ba46f8)
| |         `-CXXTemporaryObjectExpr 0x563042ba46c0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x563042ba4f30 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x563042ba4ea8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x563042ba4e78 <col:9> '<bound member function type>' ->add_task_handlers 0x563042b9bdd8
|     | `-CXXThisExpr 0x563042ba4e68 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563042ba4ee8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563042ba4de8 <col:27> 'Task *' lvalue ParmVar 0x563042b9bea8 'task' 'Task *'
|     |-ImplicitCastExpr 0x563042ba4f00 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x563042ba4e08 <col:33> 'NotifierSignal *' lvalue ParmVar 0x563042b9bf20 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x563042ba4f18 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563042ba4e28 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563042b9ba70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563042ba4e48 <col:62> 'const String' lvalue ParmVar 0x563042b9bf98 'prefix' 'const String &'
|-CXXMethodDecl 0x563042b9c288 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x563042b9c140 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563042b9c1b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563042ba47f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563042ba47e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563042ba47c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563042ba47a8 <col:70, col:77> 'String' (CXXTemporary 0x563042ba47a8)
| |         `-CXXTemporaryObjectExpr 0x563042ba4770 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x563042ba5108 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x563042ba5080 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x563042ba5050 <col:9> '<bound member function type>' ->add_task_handlers 0x563042b9bdd8
|     | `-CXXThisExpr 0x563042ba5040 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563042ba50c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563042ba4fc0 <col:27> 'Task *' lvalue ParmVar 0x563042b9c140 'task' 'Task *'
|     |-ImplicitCastExpr 0x563042ba50d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x563042ba4fe0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x563042ba50f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563042ba5000 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563042b9ba70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563042ba5020 <col:57> 'const String' lvalue ParmVar 0x563042b9c1b8 'prefix' 'const String &'
|-CXXMethodDecl 0x563042b9c568 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x563042b9c350 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9c3d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9c448 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x563042b9c818 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x563042b9c638 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9c6b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9c738 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x563042b9cb08 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563042b9c8e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9c968 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9c9e0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x563042b9cdb8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x563042b9cbd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9cc58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9ccd8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x563042b9d068 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x563042b9ce88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9cf08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9cf88 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x563042b9d318 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x563042b9d138 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9d1b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9d230 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x563042b9d5c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x563042b9d3e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9d468 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9d4e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x563042b9d8d8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x563042b9d6f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9d770 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9d7f0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x563042b9dbb8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x563042b9d9a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9da28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9dad0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x563042b9de98 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x563042b9dc88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9dd08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9ddb0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x563042b9e100 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563042b9df68 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563042b9dfe8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563042b9e060 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x563042b9e3a8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x563042b9e1d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563042b9e250 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563042b9e2c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x563042b9e658 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x563042b9e478 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9e4f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9e578 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x563042b9e908 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x563042b9e728 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9e7a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9e820 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x563042b9ebb8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x563042b9e9d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9ea58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9ead0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x563042b9ee88 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x563042b9ec88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9ed08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563042b9eda8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x563042b9f1b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x563042b9ef58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563042b9efd8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x563042b9f050 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x563042b9f0c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563042ba4810 <col:93> 'bool' false
|-CXXMethodDecl 0x563042b9f3a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563042b9f288 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x563042b9f308 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x563042b9f578 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563042b9f460 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x563042b9f4e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x563042b9f858 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563042b9f638 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x563042b9f6b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x563042b9f730 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x563042b9f7a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x563042b9fb48 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563042b9f928 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x563042b9f9a0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x563042b9fa20 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x563042b9fa98 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x563042b9fd80 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x563042b9fc20 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x563042b9fca0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x563042b9ff68 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x563042b9fe48 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x563042b9fec8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x563042ba0018 prev 0x563042b977b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563042ba0110 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x563042ba01a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x563042ba0218 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x563042ba02d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x563042ba03a0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x563042ba0518 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x563042ba0450 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x563042ba05c0 <col:24>
| | `-OptimizeNoneAttr 0x563042ba0618 <col:34>
| |-CXXMethodDecl 0x563042ba0660 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x563042ba0918 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x563042ba0710 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563042ba0788 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x563042ba0808 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x563042ba09d0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x563042ba0a08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x563042ba0a70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x563042ba0af8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x563042ba0e18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x563042ba0bb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563042ba0c28 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x563042ba0ca0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x563042ba0d20 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x563042ba0f30 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x563042ba88a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563042ba88a8
| | `-ParmVarDecl 0x563042ba89b8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x563042ba8a58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563042ba8a58
| | `-ParmVarDecl 0x563042ba8b68 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x563042c51c30 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563042ba0fa8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x563042ba1048 <col:38> "" ""
|-CXXMethodDecl 0x563042ba10d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x563042ba1178 <col:44> "" ""
|-AccessSpecDecl 0x563042ba11e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x563042ba1210 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x563042ba1310 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x563042ba1360 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042ba12f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x563042ba12d0 <col:27> 'int' 4
|-FieldDecl 0x563042ba1418 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x563042ba15c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x563042ba1680 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x563042ba2710 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x563042ba2778 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x563042ba28c8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x563042ba2808 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x563042ba2a78 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x563042ba2988 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x563042ba2c58 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x563042ba2b38 <col:20> col:23 'int'
| `-ParmVarDecl 0x563042ba2bb8 <col:25> col:28 'int'
|-CXXMethodDecl 0x563042ba2f00 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x563042ba2d20 <col:23> col:26 'int'
| |-ParmVarDecl 0x563042ba2da0 <col:28> col:31 'int'
| `-ParmVarDecl 0x563042ba2e18 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x563042ba2fb8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x563042ba3080 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x563042ba30d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x563042ba3120 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x563042ba3300 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x563042ba31b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x563042ba3228 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563042ba35a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x563042ba33c8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x563042ba3448 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x563042ba34c0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x563042ba37c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x563042ba3678 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x563042ba36f8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x563042ba3b00 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x563042ba3888 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x563042ba3908 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x563042ba3980 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x563042ba3a00 <col:57> col:60 'int'
|-CXXMethodDecl 0x563042ba3ce8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563042ba3bd0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563042ba3c50 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x563042ba3e38 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x563042ba3da8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x563042ba41b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x563042ba3ef8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x563042ba3f78 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x563042ba3ff0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x563042ba4070 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x563042ba42d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >
         0 |   class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> (base) (empty)
         0 |   struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >
         0 |   class HashContainer_rep<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |     class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> (base) (empty)
         0 |     struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<24>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable<struct Pair<const class IPFlowID, int>, void>
         0 |   class HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |     class HashContainer_rep<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |       class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> (base) (empty)
         0 |       struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** buckets
         8 |       uint32_t nbuckets
        12 |       uint32_t first_bucket
        16 |       size_t size
        24 |       struct libdivide_u32_t bucket_divider
        24 |         uint32_t magic
        28 |         uint8_t more
        32 |   class SizedHashAllocator<24> _alloc
        32 |     class HashAllocator (base)
        32 |       struct HashAllocator::link * _free
        40 |       struct HashAllocator::buffer * _buffer
        48 |       size_t _size
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable<class IPFlowID, int>
         0 |   class HashTable<struct Pair<const class IPFlowID, int>, void> _rep
         0 |     class HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |       class HashContainer_rep<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |         class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> (base) (empty)
         0 |         struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** buckets
         8 |         uint32_t nbuckets
        12 |         uint32_t first_bucket
        16 |         size_t size
        24 |         struct libdivide_u32_t bucket_divider
        24 |           uint32_t magic
        28 |           uint8_t more
        32 |     class SizedHashAllocator<24> _alloc
        32 |       class HashAllocator (base)
        32 |         struct HashAllocator::link * _free
        40 |         struct HashAllocator::buffer * _buffer
        48 |         size_t _size
        56 |   int _default_value
           | [sizeof=64, dsize=60, align=8,
           |  nvsize=60, nvalign=8]

*** Dumping AST Record Layout
         0 | class RFC2507c
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   struct ccb [15] _ccbs
       712 |   class HashTable<class IPFlowID, int> _map
       712 |     class HashTable<struct Pair<const class IPFlowID, int>, void> _rep
       712 |       class HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
       712 |         class HashContainer_rep<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
       712 |           class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> (base) (empty)
       712 |           struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** buckets
       720 |           uint32_t nbuckets
       724 |           uint32_t first_bucket
       728 |           size_t size
       736 |           struct libdivide_u32_t bucket_divider
       736 |             uint32_t magic
       740 |             uint8_t more
       744 |       class SizedHashAllocator<24> _alloc
       744 |         class HashAllocator (base)
       744 |           struct HashAllocator::link * _free
       752 |           struct HashAllocator::buffer * _buffer
       760 |           size_t _size
       768 |     int _default_value
           | [sizeof=776, dsize=776, align=8,
           |  nvsize=776, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5630428c7c08 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5630428c7d28 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x5630428c7df0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x5630429983c0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56304299d6d8 <col:8>
|-CXXConstructorDecl 0x5630429984c8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x5630429984c8
| `-ParmVarDecl 0x5630429985d8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x563042998678 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563042998788 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x5630428c7df0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x56304299d8f0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56304299d8c0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x5630428c7df0
| |     `-CXXStaticCastExpr 0x56304299d890 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x56304299d860 <col:8> 'in_addr' lvalue ParmVar 0x563042998788 '' 'in_addr &&'
| `-CompoundStmt 0x56304299d938 <col:8>
`-CXXDestructorDecl 0x56304299db70 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5630429900a8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5630429901c8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x5630429902b0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x563042990290 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x563042990258 <col:22> 'int' 4
|-FieldDecl 0x563042990358 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x563042990338 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x563042990300 <col:21> 'int' 4
|-FieldDecl 0x5630429903b8 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x563042990418 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x563042990478 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x5630429904d8 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x563042990538 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x563042990598 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x5630429905f8 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x563042990668 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
|-FieldDecl 0x5630429906d8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'
|-CXXConstructorDecl 0x563042c50178 <line:23:8> col:8 implicit used click_ip 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563042990668 'ip_src' 'struct in_addr':'in_addr'
| | `-CXXConstructExpr 0x563042c505a8 <col:8> 'struct in_addr':'in_addr' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5630429906d8 'ip_dst' 'struct in_addr':'in_addr'
| | `-CXXConstructExpr 0x563042c505f8 <col:8> 'struct in_addr':'in_addr' 'void () noexcept'
| `-CompoundStmt 0x563042c50658 <col:8>
|-CXXConstructorDecl 0x563042c50278 <col:8> col:8 implicit constexpr click_ip 'void (const click_ip &)' inline default trivial noexcept-unevaluated 0x563042c50278
| `-ParmVarDecl 0x563042c50388 <col:8> col:8 'const click_ip &'
|-CXXConstructorDecl 0x563042c50428 <col:8> col:8 implicit constexpr click_ip 'void (click_ip &&)' inline default trivial noexcept-unevaluated 0x563042c50428
| `-ParmVarDecl 0x563042c50538 <col:8> col:8 'click_ip &&'
`-CXXDestructorDecl 0x563042c510c0 <col:8> col:8 implicit ~click_ip 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042c34ac0 prev 0x563042b59d20 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042c34bb8 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x563042c34c58 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x563042c34cb8 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x563042c34d40 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x563042c34da0 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x563042c34e48 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x563042c34e28 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x563042c34df0 <col:26> 'int' 4
|-FieldDecl 0x563042c34ef0 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x563042c34ed0 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x563042c34e98 <col:23> 'int' 4
|-FieldDecl 0x563042c34f50 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x563042c34fb0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x563042c35010 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x563042c35070 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x563042c506d0 <line:24:8> col:8 implicit used click_tcp 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563042c50b08 <col:8>
|-CXXConstructorDecl 0x563042c507d8 <col:8> col:8 implicit constexpr click_tcp 'void (const click_tcp &)' inline default trivial noexcept-unevaluated 0x563042c507d8
| `-ParmVarDecl 0x563042c508e8 <col:8> col:8 'const click_tcp &'
|-CXXConstructorDecl 0x563042c50988 <col:8> col:8 implicit constexpr click_tcp 'void (click_tcp &&)' inline default trivial noexcept-unevaluated 0x563042c50988
| `-ParmVarDecl 0x563042c50a98 <col:8> col:8 'click_tcp &&'
`-CXXDestructorDecl 0x563042c511a0 <col:8> col:8 implicit ~click_tcp 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042c352f0 <../elements/ip/rfc2507c.hh:34:3, line:40:3> line:34:10 struct tcpip definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042c35408 <col:3, col:10> col:10 implicit referenced struct tcpip
|-FieldDecl 0x563042c354a8 <line:35:5, col:14> col:14 referenced _ip 'click_ip'
|-FieldDecl 0x563042c35508 <line:36:5, col:15> col:15 _tcp 'click_tcp'
|-CXXConversionDecl 0x563042c355b8 <line:37:5, col:61> col:5 operator bool 'bool () const'
| `-CompoundStmt 0x563042c50148 <col:27, col:61>
|   `-ReturnStmt 0x563042c50138 <col:29, col:58>
|     `-ParenExpr 0x563042c50118 <col:35, col:58> 'bool'
|       `-BinaryOperator 0x563042c500f8 <col:36, col:57> 'bool' '!='
|         |-ImplicitCastExpr 0x563042c500c8 <col:36, col:47> 'in_addr_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x563042c50078 <col:36, col:47> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x5630428c7df0
|         |   `-MemberExpr 0x563042c50048 <col:36, col:40> 'const struct in_addr':'const in_addr' lvalue .ip_src 0x563042990668
|         |     `-MemberExpr 0x563042c50018 <col:36> 'const click_ip' lvalue ->_ip 0x563042c354a8
|         |       `-CXXThisExpr 0x563042c50008 <col:36> 'const RFC2507c::tcpip *' implicit this
|         `-ImplicitCastExpr 0x563042c500e0 <col:57> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x563042c500a8 <col:57> 'int' 0
|-CXXConstructorDecl 0x563042c356d0 <line:38:5, col:38> col:5 used tcpip 'void ()'
| |-CXXCtorInitializer Field 0x563042c354a8 '_ip' 'click_ip'
| | `-CXXConstructExpr 0x563042c50668 <col:5> 'click_ip' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563042c35508 '_tcp' 'click_tcp'
| | `-CXXConstructExpr 0x563042c50b18 <col:5> 'click_tcp' 'void () noexcept'
| `-CompoundStmt 0x563042c50c70 <col:13, col:38>
|   `-BinaryOperator 0x563042c50c50 <col:15, col:35> 'in_addr_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x563042c50be8 <col:15, col:26> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5630428c7df0
|     | `-MemberExpr 0x563042c50bb8 <col:15, col:19> 'struct in_addr':'in_addr' lvalue .ip_src 0x563042990668
|     |   `-MemberExpr 0x563042c50b88 <col:15> 'click_ip' lvalue ->_ip 0x563042c354a8
|     |     `-CXXThisExpr 0x563042c50b78 <col:15> 'RFC2507c::tcpip *' implicit this
|     `-ImplicitCastExpr 0x563042c50c38 <col:35> 'in_addr_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x563042c50c18 <col:35> 'int' 0
|-CXXConversionDecl 0x563042c357c0 <line:39:5, col:25> col:5 operator IPFlowID 'IPFlowID () const'
|-CXXDestructorDecl 0x563042c50fe0 <line:34:10> col:10 implicit ~tcpip 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563042c512a8 <col:10> col:10 implicit constexpr tcpip 'void (const RFC2507c::tcpip &)' inline default trivial noexcept-unevaluated 0x563042c512a8
| `-ParmVarDecl 0x563042c513b8 <col:10> col:10 'const RFC2507c::tcpip &'
`-CXXConstructorDecl 0x563042c51458 <col:10> col:10 implicit constexpr tcpip 'void (RFC2507c::tcpip &&)' inline default trivial noexcept-unevaluated 0x563042c51458
  `-ParmVarDecl 0x563042c51568 <col:10> col:10 'RFC2507c::tcpip &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.RFC2507c::tcpip" = type { %struct.click_ip, %struct.click_tcp }
  NonVirtualBaseLLVMType:%"struct.RFC2507c::tcpip" = type { %struct.click_ip, %struct.click_tcp }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042c36218 <../elements/ip/rfc2507c.hh:60:3, line:62:3> line:60:10 struct ccb definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042c36338 <col:3, col:10> col:10 implicit struct ccb
|-FieldDecl 0x563042c36420 <line:61:5, col:18> col:18 _context 'struct tcpip':'RFC2507c::tcpip'
|-CXXConstructorDecl 0x563042c50f08 <line:60:10> col:10 implicit used ccb 'void () noexcept(false)' inline default
| |-CXXCtorInitializer Field 0x563042c36420 '_context' 'struct tcpip':'RFC2507c::tcpip'
| | `-CXXConstructExpr 0x563042c51950 <col:10> 'struct tcpip':'RFC2507c::tcpip' 'void ()'
| `-CompoundStmt 0x563042c519a8 <col:10>
|-CXXConstructorDecl 0x563042c515d8 <col:10> col:10 implicit constexpr ccb 'void (const RFC2507c::ccb &)' inline default trivial noexcept-unevaluated 0x563042c515d8
| `-ParmVarDecl 0x563042c516e8 <col:10> col:10 'const RFC2507c::ccb &'
|-CXXConstructorDecl 0x563042c51788 <col:10> col:10 implicit constexpr ccb 'void (RFC2507c::ccb &&)' inline default trivial noexcept-unevaluated 0x563042c51788
| `-ParmVarDecl 0x563042c51898 <col:10> col:10 'RFC2507c::ccb &&'
`-CXXDestructorDecl 0x563042c519e0 <col:10> col:10 implicit referenced ~ccb 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.RFC2507c::ccb" = type { %"struct.RFC2507c::tcpip" }
  NonVirtualBaseLLVMType:%"struct.RFC2507c::ccb" = type { %"struct.RFC2507c::tcpip" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c37678 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|-CXXRecordDecl 0x563042c3c098 prev 0x563042c37678 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x563042c3c128 <col:31, col:37> col:31 public
|-TypedefDecl 0x563042c3db80 <line:34:5, col:34> col:34 referenced key_type 'typename elt::key_type':'const IPFlowID'
| `-ElaboratedType 0x563042c3db30 'typename elt::key_type' sugar
|   `-TypedefType 0x563042c3db10 'HashTable<Pair<const IPFlowID, int>, void>::elt::key_type' sugar
|     |-Typedef 0x563042c3c5d0 'key_type'
|     `-ElaboratedType 0x563042c3bc50 'typename Pair<const IPFlowID, int>::key_type' sugar
|       `-TypedefType 0x563042c3bc30 'Pair<const IPFlowID, int>::key_type' sugar
|         |-Typedef 0x563042c37c60 'key_type'
|         `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|           |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563042bb02f8 'T'
|           `-QualType 0x563042c2bcb1 'const IPFlowID' const
|             `-RecordType 0x563042c2bcb0 'IPFlowID'
|               `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c3dc50 <line:35:5, col:45> col:45 key_const_reference 'typename elt::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x563042c3dc00 'typename elt::key_const_reference' sugar
|   `-TypedefType 0x563042c3c6c0 'HashTable<Pair<const IPFlowID, int>, void>::elt::key_const_reference' sugar
|     |-Typedef 0x563042c3c668 'key_const_reference'
|     `-ElaboratedType 0x563042c3bd40 'typename Pair<const IPFlowID, int>::key_const_reference' sugar
|       `-TypedefType 0x563042c3bd20 'Pair<const IPFlowID, int>::key_const_reference' sugar
|         |-Typedef 0x563042c37cf8 'key_const_reference'
|         `-LValueReferenceType 0x563042c37cc0 'const IPFlowID &'
|           `-QualType 0x563042c37b31 'const const IPFlowID' const
|             `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|               |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|               | `-TemplateTypeParm 0x563042bb02f8 'T'
|               `-QualType 0x563042c2bcb1 'const IPFlowID' const
|                 `-RecordType 0x563042c2bcb0 'IPFlowID'
|                   `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-CXXMethodDecl 0x563042c3de40 <line:36:5, line:38:5> line:36:16 hashnext 'HashTable<Pair<const IPFlowID, int>, void>::elt *&(HashTable<Pair<const IPFlowID, int>, void>::elt *)' static
| `-ParmVarDecl 0x563042c3dd48 <col:25, col:28> col:28 e 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
|-CXXMethodDecl 0x563042c3e078 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>::key_const_reference (const HashTable<Pair<const IPFlowID, int>, void>::elt *)' static
| `-ParmVarDecl 0x563042c3df88 <col:40, col:49> col:49 e 'const HashTable<Pair<const IPFlowID, int>, void>::elt *'
|-CXXMethodDecl 0x563042c3e2d8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>::key_type &, const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>::key_type &)' static
| |-ParmVarDecl 0x563042c3e188 <col:27, col:43> col:43 a 'const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>::key_type &'
| `-ParmVarDecl 0x563042c3e200 <col:46, col:62> col:62 b 'const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>::key_type &'
|-CXXConstructorDecl 0x563042c42388 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &)' inline default trivial noexcept-unevaluated 0x563042c42388
| `-ParmVarDecl 0x563042c42498 <col:7> col:7 'const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &'
|-CXXConstructorDecl 0x563042c42538 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &&)' inline default trivial noexcept-unevaluated 0x563042c42538
| `-ParmVarDecl 0x563042c42648 <col:7> col:7 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &&'
|-CXXDestructorDecl 0x563042c42858 <col:7> col:7 implicit ~HashContainer_adapter 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563042c42998 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &(const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &)' inline default trivial noexcept-unevaluated 0x563042c42998
| `-ParmVarDecl 0x563042c42aa8 <col:7> col:7 'const HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &'
`-CXXMethodDecl 0x563042c42b18 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &(HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &&)' inline default trivial noexcept-unevaluated 0x563042c42b18
  `-ParmVarDecl 0x563042c42c28 <col:7> col:7 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042992ff0 prev 0x5630428f9038 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5630429930e8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x563042993178 <col:19, col:25> col:19 public
|-TypedefDecl 0x5630429931b0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x563042786910 'uninitialized_type'
|   `-CXXRecord 0x563042786878 'uninitialized_type'
|-CXXConstructorDecl 0x563042993270 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042997a78 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563042997a38 <col:10> 'int' 0
| `-CompoundStmt 0x563042997ac0 <col:13, line:22:5>
|-CXXConstructorDecl 0x5630429933c0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x563042993330 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042997b10 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x563042997ad0 <col:10> 'unsigned int' lvalue ParmVar 0x563042993330 'x' 'unsigned int'
| `-CompoundStmt 0x563042997b58 <col:13, line:27:5>
|-CXXConstructorDecl 0x563042993518 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x563042993488 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042997bc0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x563042997ba8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x563042997b68 <col:10> 'int' lvalue ParmVar 0x563042993488 'x' 'int'
| `-CompoundStmt 0x563042997c08 <col:13, line:31:5>
|-CXXConstructorDecl 0x563042993670 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5630429935e0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042997c70 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x563042997c58 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x563042997c18 <col:10> 'unsigned long' lvalue ParmVar 0x5630429935e0 'x' 'unsigned long'
| `-CompoundStmt 0x563042997cb8 <col:13, line:35:5>
|-CXXConstructorDecl 0x5630429937c8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x563042993738 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042997d20 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x563042997d08 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x563042997cc8 <col:10> 'long' lvalue ParmVar 0x563042993738 'x' 'long'
| `-CompoundStmt 0x563042997d68 <col:13, line:39:5>
|-CXXConstructorDecl 0x563042993988 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x563042993898 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042997de8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563042997d98 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5630428c7df0
| |     `-DeclRefExpr 0x563042997d78 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x563042993898 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x563042997e30 <col:20, line:44:5>
|-CXXConstructorDecl 0x563042993b18 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x563042993a50 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x563042997f98 <col:51, line:56:5>
|   `-BinaryOperator 0x563042997f78 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x563042997e50 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5630429979d0
|     | `-CXXThisExpr 0x563042997e40 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x563042997f60 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563042997f48 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x563042997f28 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x563042997ef8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x563042997ee0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x563042997e80 <col:47> 'const unsigned char *' lvalue ParmVar 0x563042993a50 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x563042993c68 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x563042993bd8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x563042993e18 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x563042993d58 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x563042998008 <col:56, line:68:5>
|   `-CStyleCastExpr 0x563042997fe0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x563042997fb0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x563042993d58 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x563042993fa8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x563042993ee0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x563042994098 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x563042998fc8 <col:46, line:83:5>
|   `-ReturnStmt 0x563042998fb8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x563042998fa0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x563042998f70 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563042998e28 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x563042998d10 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x563042998bf8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x563042998030 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x563042994188 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x563042999078 <col:31, line:88:5>
|   `-ReturnStmt 0x563042999068 <line:87:2, col:10>
|     `-UnaryOperator 0x563042999050 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x563042999038 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x563042999020 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x563042998ff0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5630429979d0
|             `-CXXThisExpr 0x563042998fe0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x563042994248 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5630429990f8 <col:34, line:93:5>
|   `-ReturnStmt 0x5630429990e8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5630429990d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5630429990a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5630429979d0
|         `-CXXThisExpr 0x563042999090 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x563042994318 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x563042999178 <col:38, line:101:5>
|   `-ReturnStmt 0x563042999168 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x563042999150 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563042999120 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5630429979d0
|         `-CXXThisExpr 0x563042999110 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5630429943e8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x563042999448 <col:38, line:108:5>
|   `-ReturnStmt 0x563042999438 <line:107:2, col:58>
|     `-BinaryOperator 0x563042999418 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x563042999330 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x563042999310 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5630429992f8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5630429991a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5630429979d0
|       |   |   `-CXXThisExpr 0x563042999190 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5630429992d0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5630429992b8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563042999238 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5630428d6328 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x563042999218 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5630429993f0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5630429993d8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5630429993b8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x5630428d6328 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x563042999398 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5630429944a8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5630429996b8 <col:39, line:112:5>
|   `-ReturnStmt 0x5630429996a8 <line:111:2, col:56>
|     `-BinaryOperator 0x563042999688 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5630429995a0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x563042999580 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563042999568 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563042999470 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5630429979d0
|       |   |   `-CXXThisExpr 0x563042999460 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x563042999540 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x563042999528 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563042999508 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5630428d6328 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5630429994e8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x563042999660 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x563042999648 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563042999628 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x5630428d6328 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x563042999608 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5630429945d8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5630429946e0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5630429947f0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5630429968c8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563042996988 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563042996a50 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x563042996c48 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x563042996b00 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x563042996b78 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x563042996dc8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x563042996d08 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x563042996f10 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x563042996e80 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5630429970b8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x563042996fc8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x563042997200 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x563042997170 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x563042997348 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5630429972b8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x563042997410 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5630429974d0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x563042997648 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x563042997580 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x563042997710 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5630429977f8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5630429978a0 <col:51> "" ""
|-TypedefDecl 0x563042997940 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x5630428f90d0 'IPAddress'
|   `-CXXRecord 0x563042992ff0 'IPAddress'
|-AccessSpecDecl 0x563042997998 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5630429979d0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563042998078 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x563042998188 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042c2e628 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563042c2e5e0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x5630429979d0
| |     `-DeclRefExpr 0x563042c2e5c0 <col:7> 'const IPAddress' lvalue ParmVar 0x563042998188 '' 'const IPAddress &'
| `-CompoundStmt 0x563042c2e670 <col:7>
|-CXXConstructorDecl 0x563042998228 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563042998338 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5630429979d0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042998f18 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563042998ed0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5630429979d0
| |     `-CXXStaticCastExpr 0x563042998ea0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x563042998e70 <col:7> 'IPAddress' lvalue ParmVar 0x563042998338 '' 'IPAddress &&'
| `-CompoundStmt 0x563042998f60 <col:7>
|-CXXDestructorDecl 0x563042998c28 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563042c2ef18 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x563042c2f028 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x563042c2f380 <col:7>
|   |-BinaryOperator 0x563042c2f328 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x563042c2f2e0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x5630429979d0
|   | | `-CXXThisExpr 0x563042c2f2d0 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x563042c2f310 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x563042c2f2a0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x5630429979d0
|   |     `-DeclRefExpr 0x563042c2f280 <col:7> 'const IPAddress' lvalue ParmVar 0x563042c2f028 '' 'const IPAddress &'
|   `-ReturnStmt 0x563042c2f370 <col:7>
|     `-UnaryOperator 0x563042c2f358 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563042c2f348 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x563042c2f098 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x563042c2f098
  `-ParmVarDecl 0x563042c2f1a8 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042c2bc20 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042c2bd38 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x563042c2bdc8 <col:18, col:24> col:18 public
|-TypedefDecl 0x563042c2be00 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x563042786910 'uninitialized_type'
|   `-CXXRecord 0x563042786878 'uninitialized_type'
|-CXXConstructorDecl 0x563042c2bec0 <line:17:5, line:19:5> line:17:5 IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x563042c2dd78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c2e348 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x563042c2ddd8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c2e3b0 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x563042c2de38 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x563042c2e440 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x563042c2e400 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x563042c2de98 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x563042c2e4c0 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x563042c2e480 <col:42> 'int' 0
| `-CompoundStmt 0x563042c2e520 <col:45, line:19:5>
|-CXXConstructorDecl 0x563042c2c228 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x563042c2bf78 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x563042c2bff0 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x563042c2c068 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x563042c2c0e0 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x563042c2dd78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c2e680 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x563042c2e570 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x563042c2e530 <col:11> 'IPAddress' lvalue ParmVar 0x563042c2bf78 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x563042c2ddd8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c2e730 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x563042c2e718 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x563042c2e6d8 <col:26> 'IPAddress' lvalue ParmVar 0x563042c2c068 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x563042c2de38 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x563042c2e7c8 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x563042c2e788 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042c2bff0 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x563042c2de98 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x563042c2e848 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x563042c2e808 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042c2c0e0 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563042c2e8a8 <col:63, line:28:5>
|-CXXConstructorDecl 0x563042c2c448 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x563042c2c300 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x563042c2c378 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563042c2e310 <col:55> 'bool' false
|-CXXConstructorDecl 0x563042c2c658 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x563042c2c510 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x563042c2c588 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563042c2e320 <col:59> 'bool' false
|-CXXConstructorDecl 0x563042c2c7b0 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x563042c2c720 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x563042c2dd78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c2e8b8 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x563042c2ddd8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c2e908 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x563042c2e9c0 <col:55, line:52:5>
|   `-CStyleCastExpr 0x563042c2e998 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x563042c2e968 <col:9> 'const uninitialized_type' lvalue ParmVar 0x563042c2c720 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x563042c2c968 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x563042c2c8e0 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x563042c2bcb0 'IPFlowID'
|   | `-CXXRecord 0x563042c2bc20 'IPFlowID'
|   `-ParenType 0x563042c2c880 'IPAddress () const' sugar
|     `-FunctionProtoType 0x563042b62830 'IPAddress () const' const cdecl
|       `-RecordType 0x5630428f90d0 'IPAddress'
|         `-CXXRecord 0x563042992ff0 'IPAddress'
|-CXXConversionDecl 0x563042c2caa8 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x563042c2ec70 <col:44, line:59:5>
|   `-ReturnStmt 0x563042c2ec60 <line:58:2, col:47>
|     `-ConditionalOperator 0x563042c2ec30 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x563042c2eb58 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x563042c2eb28 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x563042c2eaa8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x563042c2ea88 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x563042c2ea58 <col:9> '<bound member function type>' .operator unsigned int 0x563042994318
|       | |       `-MemberExpr 0x563042c2e9e8 <col:9> 'const IPAddress' lvalue ->_saddr 0x563042c2dd78
|       | |         `-CXXThisExpr 0x563042c2e9d8 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x563042c2eb40 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x563042c2eb10 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x563042c2eaf0 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x563042c2eac0 <col:19> '<bound member function type>' .operator unsigned int 0x563042994318
|       |         `-MemberExpr 0x563042c2ea28 <col:19> 'const IPAddress' lvalue ->_daddr 0x563042c2ddd8
|       |           `-CXXThisExpr 0x563042c2ea18 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x563042c2ebe0 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x563042c2ebb0 <col:29, col:39> 'IPAddress () const' CXXMethod 0x563042c2cb78 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x563042c2ec18 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x563042c2ebf8 <col:47> 'int' 0
|-CXXMethodDecl 0x563042c2cb78 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x563042c2ed08 <col:29, line:65:5>
|   `-ReturnStmt 0x563042c2ecf8 <line:64:2, col:9>
|     `-CXXConstructExpr 0x563042c2ecc8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x563042c2ec98 <col:9> 'const IPAddress' lvalue ->_saddr 0x563042c2dd78
|         `-CXXThisExpr 0x563042c2ec88 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x563042c2cc98 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x563042c2ed88 <col:28, line:69:5>
|   `-ReturnStmt 0x563042c2ed78 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x563042c2ed60 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x563042c2ed30 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x563042c2de38
|         `-CXXThisExpr 0x563042c2ed20 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x563042c2cd58 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x563042c2ee20 <col:29, line:73:5>
|   `-ReturnStmt 0x563042c2ee10 <line:72:2, col:9>
|     `-CXXConstructExpr 0x563042c2ede0 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x563042c2edb0 <col:9> 'const IPAddress' lvalue ->_daddr 0x563042c2ddd8
|         `-CXXThisExpr 0x563042c2eda0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x563042c2ce18 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x563042c2eea0 <col:28, line:77:5>
|   `-ReturnStmt 0x563042c2ee90 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x563042c2ee78 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x563042c2ee48 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x563042c2de98
|         `-CXXThisExpr 0x563042c2ee38 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x563042c2cf58 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x563042c2cec8 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x563042c2f448 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x563042c2f410 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x563042c2f3f8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563042c2f230 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x563042c2ef18 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x563042c2eec8 <col:2> 'IPAddress' lvalue ->_saddr 0x563042c2dd78
|     | `-CXXThisExpr 0x563042c2eeb8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x563042c2f218 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x563042c2eef8 <col:11> 'IPAddress' lvalue ParmVar 0x563042c2cec8 'a' 'IPAddress'
|-CXXMethodDecl 0x563042c2d108 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x563042c2d010 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563042c2f4f8 <col:32, line:87:5>
|   `-BinaryOperator 0x563042c2f4d8 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x563042c2f470 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x563042c2de38
|     | `-CXXThisExpr 0x563042c2f460 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x563042c2f4c0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563042c2f4a0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042c2d010 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563042c2d250 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x563042c2d1c0 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x563042c2f5f8 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x563042c2f5c0 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x563042c2f5a8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563042c2f588 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x563042c2ef18 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x563042c2f520 <col:2> 'IPAddress' lvalue ->_daddr 0x563042c2ddd8
|     | `-CXXThisExpr 0x563042c2f510 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x563042c2f570 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x563042c2f550 <col:11> 'IPAddress' lvalue ParmVar 0x563042c2d1c0 'a' 'IPAddress'
|-CXXMethodDecl 0x563042c2d398 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x563042c2d308 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563042c2f6a8 <col:32, line:96:5>
|   `-BinaryOperator 0x563042c2f688 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x563042c2f620 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x563042c2de98
|     | `-CXXThisExpr 0x563042c2f610 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x563042c2f670 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563042c2f650 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042c2d308 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563042c2d660 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x563042c2d450 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x563042c2d4c8 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x563042c2d540 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x563042c2d5b8 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563042c2f9c0 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x563042c2f770 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x563042c2f758 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563042c2f738 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x563042c2ef18 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x563042c2f6d0 <col:2> 'IPAddress' lvalue ->_saddr 0x563042c2dd78
|   | | `-CXXThisExpr 0x563042c2f6c0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x563042c2f720 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x563042c2f700 <col:11> 'IPAddress' lvalue ParmVar 0x563042c2d450 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x563042c2f858 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x563042c2f840 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x563042c2f820 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x563042c2ef18 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x563042c2f7b8 <col:2> 'IPAddress' lvalue ->_daddr 0x563042c2ddd8
|   | | `-CXXThisExpr 0x563042c2f7a8 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x563042c2f808 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x563042c2f7e8 <col:11> 'IPAddress' lvalue ParmVar 0x563042c2d540 'daddr' 'IPAddress'
|   |-BinaryOperator 0x563042c2f908 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x563042c2f8a0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x563042c2de38
|   | | `-CXXThisExpr 0x563042c2f890 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x563042c2f8f0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x563042c2f8d0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042c2d4c8 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x563042c2f9a0 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x563042c2f938 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x563042c2de98
|     | `-CXXThisExpr 0x563042c2f928 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x563042c2f988 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563042c2f968 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042c2d5b8 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563042c2d768 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x563042c304f8 <col:30, line:115:5>
|   `-ReturnStmt 0x563042c304e8 <line:114:2, col:48>
|     `-ExprWithCleanups 0x563042c304d0 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x563042c304a0 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563042c30058 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x563042c2fec8 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x563042c2fe38 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x563042c2fa10 <col:18> 'const IPAddress' lvalue ->_daddr 0x563042c2ddd8
|             |   `-CXXThisExpr 0x563042c2fa00 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x563042c2fe68 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x563042c2fa50 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x563042c2de98
|             |   `-CXXThisExpr 0x563042c2fa40 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x563042c2fe80 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x563042c2fa90 <col:34> 'const IPAddress' lvalue ->_saddr 0x563042c2dd78
|             |   `-CXXThisExpr 0x563042c2fa80 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x563042c2feb0 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x563042c2fad0 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x563042c2de38
|                 `-CXXThisExpr 0x563042c2fac0 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x563042c2d828 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x563042c2d8c8 <col:48> "" ""
|-CXXMethodDecl 0x563042c2d958 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x563042c2da18 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x563042c2dae8 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x563042c2db90 <col:51> "" ""
|-CXXMethodDecl 0x563042c2dc30 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x563042c2dcd0 <col:44> "" ""
|-AccessSpecDecl 0x563042c2dd40 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x563042c2dd78 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x563042c2ddd8 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x563042c2de38 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x563042c2de98 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563042c2dfd0 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x563042c2df00 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x563042c2e2b8 <line:141:5, col:76> col:25
| `-FunctionDecl 0x563042c2e1f8 parent 0x563042631488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x563042c2e088 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x563042c2e128 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x563042c2fb00 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x563042c2fb00
| `-ParmVarDecl 0x563042c2fc18 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x563042c2fcb8 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563042c2fdc8 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x563042c2dd78 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c30148 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x563042c30100 <col:7> 'IPAddress' xvalue ._saddr 0x563042c2dd78
| |     `-CXXStaticCastExpr 0x563042c300d0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x563042c300a0 <col:7> 'IPFlowID' lvalue ParmVar 0x563042c2fdc8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x563042c2ddd8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x563042c30248 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x563042c30200 <col:7> 'IPAddress' xvalue ._daddr 0x563042c2ddd8
| |     `-CXXStaticCastExpr 0x563042c301d0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x563042c301a0 <col:7> 'IPFlowID' lvalue ParmVar 0x563042c2fdc8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x563042c2de38 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x563042c30348 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x563042c30300 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x563042c2de38
| |     `-CXXStaticCastExpr 0x563042c302d0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x563042c302a0 <col:7> 'IPFlowID' lvalue ParmVar 0x563042c2fdc8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x563042c2de98 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x563042c30430 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x563042c303e8 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x563042c2de98
| |     `-CXXStaticCastExpr 0x563042c303b8 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x563042c30388 <col:7> 'IPFlowID' lvalue ParmVar 0x563042c2fdc8 '' 'IPFlowID &&'
| `-CompoundStmt 0x563042c30490 <col:7>
|-CXXDestructorDecl 0x563042c2ff18 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563042c3d388 <col:7> col:7 implicit operator= 'IPFlowID &(const IPFlowID &)' inline default trivial noexcept-unevaluated 0x563042c3d388
| `-ParmVarDecl 0x563042c3d498 <col:7> col:7 'const IPFlowID &'
`-CXXMethodDecl 0x563042c3d508 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x563042c3d508
  `-ParmVarDecl 0x563042c3d618 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c36d48 <../dummy_inc/click/pair.hh:8:1, line:55:1> line:9:8 struct Pair definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'const IPFlowID'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x563042c37aa0 prev 0x563042c36d48 <col:1, col:8> col:8 implicit struct Pair
|-TypedefDecl 0x563042c37b68 <line:11:5, col:15> col:15 first_type 'const IPFlowID':'const IPFlowID'
| `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|   |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563042bb02f8 'T'
|   `-QualType 0x563042c2bcb1 'const IPFlowID' const
|     `-RecordType 0x563042c2bcb0 'IPFlowID'
|       `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c37bf8 <line:12:5, col:15> col:15 second_type 'int':'int'
| `-SubstTemplateTypeParmType 0x563042c37bc0 'int' sugar
|   |-TemplateTypeParmType 0x563042bb03d0 'U' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x563042bb0378 'U'
|   `-BuiltinType 0x563042631580 'int'
|-TypedefDecl 0x563042c37c60 <line:13:5, col:15> col:15 referenced key_type 'const IPFlowID':'const IPFlowID'
| `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|   |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563042bb02f8 'T'
|   `-QualType 0x563042c2bcb1 'const IPFlowID' const
|     `-RecordType 0x563042c2bcb0 'IPFlowID'
|       `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c37cf8 <line:14:5, col:22> col:22 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x563042c37cc0 'const IPFlowID &'
|   `-QualType 0x563042c37b31 'const const IPFlowID' const
|     `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|       |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563042bb02f8 'T'
|       `-QualType 0x563042c2bcb1 'const IPFlowID' const
|         `-RecordType 0x563042c2bcb0 'IPFlowID'
|           `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-FieldDecl 0x563042c37d60 <line:16:5, col:7> col:7 first 'const IPFlowID':'const IPFlowID'
|-FieldDecl 0x563042c37dc0 <line:17:5, col:7> col:7 second 'int':'int'
|-CXXConstructorDecl 0x563042c37e48 <line:19:5, line:21:5> line:19:12 Pair 'void ()' inline
|-CXXConstructorDecl 0x563042c3a4b8 <line:23:5, line:26:5> line:23:12 Pair 'void (typename fast_argument<const IPFlowID>::type, typename fast_argument<int>::type)' inline
| |-ParmVarDecl 0x563042c393d0 <col:17, col:49> col:49 t 'typename fast_argument<const IPFlowID>::type':'const IPFlowID &'
| `-ParmVarDecl 0x563042c3a380 <line:24:3, col:35> col:35 u 'typename fast_argument<int>::type':'int'
|-CXXConstructorDecl 0x563042c3a7b8 <line:28:5, line:30:5> line:28:12 Pair 'void (const Pair<const IPFlowID, int> &)' inline
| `-ParmVarDecl 0x563042c3a6a8 <col:17, col:35> col:35 p 'const Pair<const IPFlowID, int> &'
|-FunctionTemplateDecl 0x563042c3b080 <line:32:5, line:35:5> line:33:12 Pair
| |-TemplateTypeParmDecl 0x563042c3a878 <line:32:15, col:24> col:24 typename depth 0 index 0 V
| |-TemplateTypeParmDecl 0x563042c3a8f8 <col:27, col:36> col:36 typename depth 0 index 1 W
| |-CXXConstructorDecl 0x563042c3afd8 <line:33:5, line:35:5> line:33:12 Pair 'void (const Pair<V, W> &)' inline
| | `-ParmVarDecl 0x563042c3aa98 <col:17, col:35> col:35 p 'const Pair<V, W> &'
| `-CXXConstructorDecl 0x563042c3ca88 <col:5, line:35:5> line:33:12 Pair 'void (const Pair<const IPFlowID, int> &)' inline
|   |-TemplateArgument type 'const IPFlowID'
|   |-TemplateArgument type 'int'
|   `-ParmVarDecl 0x563042c3c9c8 <col:17, col:35> col:35 p 'const Pair<const IPFlowID, int> &'
|-TypedefDecl 0x563042c3b2b8 <line:37:5, col:63> col:38 unspecified_bool_type 'hashcode_t (Pair<const IPFlowID, int>::*)() const'
| `-MemberPointerType 0x563042c3b250 'hashcode_t (Pair<const IPFlowID, int>::*)() const'
|   |-TemplateSpecializationType 0x563042c3b180 'Pair<const IPFlowID, int>' sugar Pair
|   | |-TemplateArgument type 'const IPFlowID':'const IPFlowID'
|   | |-TemplateArgument type 'int':'int'
|   | `-RecordType 0x563042c36e40 'Pair<const IPFlowID, int>'
|   |   `-ClassTemplateSpecialization 0x563042c36d48 'Pair'
|   `-ParenType 0x563042bb2010 'hashcode_t () const' sugar
|     `-FunctionProtoType 0x563042bb1fe0 'hashcode_t () const' const cdecl
|       `-TypedefType 0x563042babb20 'hashcode_t' sugar
|         |-Typedef 0x563042baba28 'hashcode_t'
|         `-TypedefType 0x5630426d6950 'size_t' sugar
|           |-Typedef 0x5630426a1be0 'size_t'
|           `-BuiltinType 0x563042631640 'unsigned long'
|-CXXConversionDecl 0x563042c3b3d0 <line:38:5, line:40:5> line:38:12 operator unsigned long (Pair<const IPFlowID, int>::*)() const 'Pair<const IPFlowID, int>::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563042c3b508 <line:42:5, line:44:5> line:42:21 hashkey 'const IPFlowID &() const' inline
|-CXXMethodDecl 0x563042c3b5b8 <line:46:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-FunctionTemplateDecl 0x563042c3bb38 <line:48:5, line:53:5> line:49:17 operator=
| |-TemplateTypeParmDecl 0x563042c3b668 <line:48:15, col:24> col:24 typename depth 0 index 0 V
| |-TemplateTypeParmDecl 0x563042c3b6e8 <col:27, col:36> col:36 typename depth 0 index 1 W
| |-CXXMethodDecl 0x563042c3ba98 <line:49:5, line:53:5> line:49:17 operator= 'Pair<const IPFlowID, int> &(const Pair<V, W> &)'
| | `-ParmVarDecl 0x563042c3b968 <col:27, col:45> col:45 p 'const Pair<V, W> &'
| `-CXXMethodDecl 0x563042c3d9d8 <col:5, line:53:5> line:49:17 operator= 'Pair<const IPFlowID, int> &(const Pair<const IPFlowID, int> &)'
|   |-TemplateArgument type 'const IPFlowID'
|   |-TemplateArgument type 'int'
|   `-ParmVarDecl 0x563042c3d8d8 <col:27, col:45> col:45 p 'const Pair<const IPFlowID, int> &'
|-CXXDestructorDecl 0x563042c3cd28 <line:9:8> col:8 implicit ~Pair 'void ()' inline default trivial noexcept-unevaluated 0x563042c3cd28
`-CXXMethodDecl 0x563042c3d1d8 <col:8> col:8 implicit operator= 'Pair<const IPFlowID, int> &(const Pair<const IPFlowID, int> &)' inline default_delete trivial noexcept-unevaluated 0x563042c3d1d8
  `-ParmVarDecl 0x563042c3d2e8 <col:8> col:8 'const Pair<const IPFlowID, int> &'

Layout: <CGRecordLayout
  LLVMType:%struct.Pair = type { %class.IPFlowID, i32 }
  NonVirtualBaseLLVMType:%struct.Pair = type { %class.IPFlowID, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042c37570 <../dummy_inc/click/hashtable.hh:101:5, line:112:5> line:101:12 struct elt definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists trivial needs_overload_resolution
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563042c3c218 prev 0x563042c37570 <col:5, col:12> col:12 implicit struct elt
|-FieldDecl 0x563042c3c2b8 <line:102:2, col:4> col:4 v 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
|-FieldDecl 0x563042c3c348 <line:103:2, col:7> col:7 _hashnext 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
|-CXXConstructorDecl 0x563042c3c4d0 <line:104:2, line:106:2> line:104:2 elt 'void (const Pair<const IPFlowID, int> &)'
| `-ParmVarDecl 0x563042c3c3d8 <col:6, col:15> col:15 v_ 'const Pair<const IPFlowID, int> &'
|-TypedefDecl 0x563042c3c5d0 <line:107:2, col:31> col:31 referenced key_type 'typename Pair<const IPFlowID, int>::key_type':'const IPFlowID'
| `-ElaboratedType 0x563042c3bc50 'typename Pair<const IPFlowID, int>::key_type' sugar
|   `-TypedefType 0x563042c3bc30 'Pair<const IPFlowID, int>::key_type' sugar
|     |-Typedef 0x563042c37c60 'key_type'
|     `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|       |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563042bb02f8 'T'
|       `-QualType 0x563042c2bcb1 'const IPFlowID' const
|         `-RecordType 0x563042c2bcb0 'IPFlowID'
|           `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c3c668 <line:108:2, col:42> col:42 referenced key_const_reference 'typename Pair<const IPFlowID, int>::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x563042c3bd40 'typename Pair<const IPFlowID, int>::key_const_reference' sugar
|   `-TypedefType 0x563042c3bd20 'Pair<const IPFlowID, int>::key_const_reference' sugar
|     |-Typedef 0x563042c37cf8 'key_const_reference'
|     `-LValueReferenceType 0x563042c37cc0 'const IPFlowID &'
|       `-QualType 0x563042c37b31 'const const IPFlowID' const
|         `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|           |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563042bb02f8 'T'
|           `-QualType 0x563042c2bcb1 'const IPFlowID' const
|             `-RecordType 0x563042c2bcb0 'IPFlowID'
|               `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-CXXMethodDecl 0x563042c3c728 <line:109:2, line:111:2> line:109:22 hashkey 'HashTable<Pair<const IPFlowID, int>, void>::elt::key_const_reference () const'
|-CXXConstructorDecl 0x563042c3cba8 <line:101:12> col:12 implicit elt 'void (const HashTable<Pair<const IPFlowID, int>, void>::elt &)' inline default noexcept-unevaluated 0x563042c3cba8
| `-ParmVarDecl 0x563042c3ccb8 <col:12> col:12 'const HashTable<Pair<const IPFlowID, int>, void>::elt &'
|-CXXConstructorDecl 0x563042c3cea0 <col:12> col:12 implicit elt 'void (HashTable<Pair<const IPFlowID, int>, void>::elt &&)' inline default noexcept-unevaluated 0x563042c3cea0
| `-ParmVarDecl 0x563042c3cfb8 <col:12> col:12 'HashTable<Pair<const IPFlowID, int>, void>::elt &&'
`-CXXMethodDecl 0x563042c3d058 <col:12> col:12 implicit operator= 'HashTable<Pair<const IPFlowID, int>, void>::elt &(HashTable<Pair<const IPFlowID, int>, void>::elt &&)' inline default_delete trivial noexcept-unevaluated 0x563042c3d058
  `-ParmVarDecl 0x563042c3d168 <col:12> col:12 'HashTable<Pair<const IPFlowID, int>, void>::elt &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashTable<Pair<const IPFlowID, int>, void>::elt" = type { %struct.Pair, %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"* }
  NonVirtualBaseLLVMType:%"struct.HashTable<Pair<const IPFlowID, int>, void>::elt" = type { %struct.Pair, %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042b16098 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042b161b8 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x563042b16258 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x563042b162b8 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x563042b193a0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563042b197d8 <col:8>
|-CXXConstructorDecl 0x563042b194a8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x563042b194a8
| `-ParmVarDecl 0x563042b195b8 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x563042b19658 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563042b19768 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x563042b16258 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563042bc5c50 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563042bc5c20 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x563042b16258
| |     `-CXXStaticCastExpr 0x563042bc5bf0 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x563042bc5bc0 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x563042b19768 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x563042b162b8 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x563042bc5d20 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x563042bc5cf0 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x563042b162b8
| |     `-CXXStaticCastExpr 0x563042bc5cc0 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x563042bc5c90 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x563042b19768 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x563042bc5d70 <col:8>
|-CXXDestructorDecl 0x563042bc60e8 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563042c42cc8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x563042c42cc8
| `-ParmVarDecl 0x563042c42dd8 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x563042c42e48 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x563042c42e48
  `-ParmVarDecl 0x563042c43fe0 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c419a0 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|-CXXRecordDecl 0x563042c41c38 prev 0x563042c419a0 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x563042c41da0 <line:21:5, col:9> col:9 buckets 'HashTable<Pair<const IPFlowID, int>, void>::elt **'
|-FieldDecl 0x563042c41df0 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x563042c41e40 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x563042c41e90 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x563042c41ee0 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x563042c42038 <line:26:5, col:36> col:12 'class HashContainer<elt, HashContainer_adapter<elt> >':'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-FriendDecl 0x563042c42188 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-FriendDecl 0x563042c422d8 <line:28:5, col:45> col:12 'class HashContainer_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-CXXConstructorDecl 0x563042c426d0 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x563042c426d0
| `-ParmVarDecl 0x563042c427e8 <col:7> col:7 'const HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
|-CXXMethodDecl 0x563042c44050 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &(const HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x563042c44050
| `-ParmVarDecl 0x563042c44158 <col:7> col:7 'const HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
`-CXXDestructorDecl 0x563042c51b50 <col:7> col:7 implicit ~HashContainer_rep 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c377f0 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|-CXXRecordDecl 0x563042c3bf10 prev 0x563042c377f0 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x563042c3bfa0 <col:23, col:29> col:23 public
|-TypedefDecl 0x563042c3e400 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<elt>::key_type':'const IPFlowID'
| `-ElaboratedType 0x563042c3e3b0 'typename HashContainer_adapter<elt>::key_type' sugar
|   `-TypedefType 0x563042c3e130 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>::key_type' sugar
|     |-Typedef 0x563042c3db80 'key_type'
|     `-ElaboratedType 0x563042c3db30 'typename elt::key_type' sugar
|       `-TypedefType 0x563042c3db10 'HashTable<Pair<const IPFlowID, int>, void>::elt::key_type' sugar
|         |-Typedef 0x563042c3c5d0 'key_type'
|         `-ElaboratedType 0x563042c3bc50 'typename Pair<const IPFlowID, int>::key_type' sugar
|           `-TypedefType 0x563042c3bc30 'Pair<const IPFlowID, int>::key_type' sugar
|             |-Typedef 0x563042c37c60 'key_type'
|             `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|               |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|               | `-TemplateTypeParm 0x563042bb02f8 'T'
|               `-QualType 0x563042c2bcb1 'const IPFlowID' const
|                 `-RecordType 0x563042c2bcb0 'IPFlowID'
|                   `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c3e498 <line:90:5, col:15> col:15 value_type 'HashTable<Pair<const IPFlowID, int>, void>::elt':'HashTable<Pair<const IPFlowID, int>, void>::elt'
| `-SubstTemplateTypeParmType 0x563042c3e460 'HashTable<Pair<const IPFlowID, int>, void>::elt' sugar
|   |-TemplateTypeParmType 0x563042bd0610 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563042bd05b8 'T'
|   `-RecordType 0x563042c37600 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|     `-CXXRecord 0x563042c37570 'elt'
|-TypedefDecl 0x563042c3e4f0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x5630426d6950 'size_t' sugar
|   |-Typedef 0x5630426a1be0 'size_t'
|   `-BuiltinType 0x563042631640 'unsigned long'
|-TypedefDecl 0x563042c3e548 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x563042786c00 'uint32_t' sugar
|   |-Typedef 0x56304269a4c8 'uint32_t'
|   `-TypedefType 0x5630426735a0 '__uint32_t' sugar
|     |-Typedef 0x563042673198 '__uint32_t'
|     `-BuiltinType 0x563042631620 'unsigned int'
|-EnumDecl 0x563042c3e5a0 <line:98:5> col:5
| |-EnumConstantDecl 0x563042c3e6d0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x563042c3e6b0 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x563042c3e688 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x563042c3e670 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x563042bd0c60 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x563042bd0c40 <col:42> 'int' 1
| `-EnumConstantDecl 0x563042c3e740 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x563042c3e790 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042c3e720 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x563042bd0d18 <col:25> 'int' 63
|-CXXConstructorDecl 0x563042c3e7e0 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x563042c3e948 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x563042c3e898 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x563042c3ea30 <line:114:5, col:20> col:5 ~HashContainer 'void () noexcept'
|-CXXMethodDecl 0x563042c3eb20 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x563042c3ebd0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563042c3ec80 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x563042c3ee18 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x563042c3ed50 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c3f038 <line:142:5, col:51> col:23 bucket 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &) const'
| `-ParmVarDecl 0x563042c3ef48 <col:30, col:46> col:46 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c3f0f0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x563042c3f380 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
| `-TemplateSpecializationType 0x563042c3f2e0 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt':'HashTable<Pair<const IPFlowID, int>, void>::elt'
|   |-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|   `-RecordType 0x563042c3f2c0 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x563042c3f1c0 'HashContainer_const_iterator'
|-TypedefDecl 0x563042c3f5b0 <line:150:5, col:42> col:42 iterator 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
| `-TemplateSpecializationType 0x563042c3f510 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt':'HashTable<Pair<const IPFlowID, int>, void>::elt'
|   |-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|   `-RecordType 0x563042c3f4f0 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x563042c3f3f8 'HashContainer_iterator'
|-CXXMethodDecl 0x563042c3f6a8 <line:155:5, col:27> col:21 begin 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator ()' inline
|-CXXMethodDecl 0x563042c3f7f8 <line:157:5, col:35> col:27 begin 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::const_iterator () const' inline
|-CXXMethodDecl 0x563042c3f8c8 <line:161:5, col:25> col:21 end 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator ()' inline
|-CXXMethodDecl 0x563042c3f998 <line:163:5, col:33> col:27 end 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::const_iterator () const' inline
|-CXXMethodDecl 0x563042c3fb38 <line:166:5, col:46> col:21 begin 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x563042c3fa48 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c3fce8 <line:168:5, col:54> col:27 begin 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x563042c3fbf0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c3fea8 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &) const' inline
| `-ParmVarDecl 0x563042c3fdb0 <col:26, col:42> col:42 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c40068 <line:173:5, col:49> col:22 count 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::size_type (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &) const' inline
| `-ParmVarDecl 0x563042c3ff70 <col:28, col:44> col:44 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c40228 <line:183:5, col:45> col:21 find 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &)' inline
| `-ParmVarDecl 0x563042c40130 <col:26, col:42> col:42 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c403e8 <line:185:5, col:53> col:27 find 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::const_iterator (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &) const' inline
| `-ParmVarDecl 0x563042c402f0 <col:32, col:48> col:48 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c40540 <line:191:5, col:52> col:21 find_prefer 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &)' inline
| `-ParmVarDecl 0x563042c404b0 <col:33, col:49> col:49 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c40728 <line:197:5, col:68> col:43 get 'HashTable<Pair<const IPFlowID, int>, void>::elt *(const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &) const'
| |-ParmVarDecl 0x563042c40638 <col:47, col:63> col:63 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
| |-NoInlineAttr 0x563042c40808 <col:20> Inherited
| `-OptimizeNoneAttr 0x563042c40860 <col:30> Inherited
|-CXXMethodDecl 0x563042c40a88 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator &, HashTable<Pair<const IPFlowID, int>, void>::elt *)' inline
| |-ParmVarDecl 0x563042c408f8 <col:27, col:37> col:37 it 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator &'
| `-ParmVarDecl 0x563042c40970 <col:41, col:44> col:44 element 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
|-CXXMethodDecl 0x563042c40d58 <line:239:5, col:58> col:8 set 'HashTable<Pair<const IPFlowID, int>, void>::elt *(HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator &, HashTable<Pair<const IPFlowID, int>, void>::elt *, bool)'
| |-ParmVarDecl 0x563042c40b58 <col:12, col:22> col:22 it 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator &'
| |-ParmVarDecl 0x563042c40bd0 <col:26, col:29> col:29 element 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
| `-ParmVarDecl 0x563042c40c38 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x563042c40f28 <line:249:5, col:57> col:43 set 'HashTable<Pair<const IPFlowID, int>, void>::elt *(HashTable<Pair<const IPFlowID, int>, void>::elt *)'
| |-ParmVarDecl 0x563042c40e30 <col:47, col:50> col:50 element 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
| |-NoInlineAttr 0x563042c40fe0 <col:20> Inherited
| `-OptimizeNoneAttr 0x563042c41038 <col:30> Inherited
|-CXXMethodDecl 0x563042c41168 <line:256:5, col:33> col:15 erase 'HashTable<Pair<const IPFlowID, int>, void>::elt *(HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator &)' inline
| `-ParmVarDecl 0x563042c41070 <col:21, col:31> col:31 it 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::iterator &'
|-CXXMethodDecl 0x563042c41328 <line:262:5, col:40> col:15 erase 'HashTable<Pair<const IPFlowID, int>, void>::elt *(const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &)' inline
| `-ParmVarDecl 0x563042c41230 <col:21, col:37> col:37 key 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::key_type &'
|-CXXMethodDecl 0x563042c413e0 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x563042c416a8 <line:269:5, col:44> col:17 swap 'void (HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)' inline
| `-ParmVarDecl 0x563042c415b8 <col:22, col:43> col:43 x 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
|-CXXMethodDecl 0x563042c417f0 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x563042c41760 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c418a8 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x563042c41958 <line:287:3, col:10> col:3 private
|-FieldDecl 0x563042c441e0 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_rep<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-CXXConstructorDecl 0x563042c44468 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)'
| `-ParmVarDecl 0x563042c44358 <col:19, col:45> col:46 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
|-CXXMethodDecl 0x563042c44808 <line:292:5, col:63> col:26 operator= 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &(const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)'
| `-ParmVarDecl 0x563042c446d8 <col:36, col:62> col:63 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
|-FriendDecl 0x563042c449c8 <line:294:5, col:45> col:12 'class HashContainer_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
`-FriendDecl 0x563042c44b18 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042bf8cb8 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563042bf8dd8 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x563042bf8ea8 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042bf8f10 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563042bf9028 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x563042bf90f8 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x563042bf9158 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x563042bf91b8 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042bf82d0 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563042bf83e8 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x563042bf8478 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x563042bf85b8 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x563042bf84b0 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x563042bf86b0 <line:12:5, col:20> col:5 ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x563042bf8830 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x563042bf87a0 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x563042bfa010 <col:48, line:17:5>
|   |-ParenExpr 0x563042bf9f58 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x563042bf9f28 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x563042bf9bf0 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042bf9bc0 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042bf9af0 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x563042bf9a50 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x563042bf9a38 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x563042bf9a20 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x563042bf99f0 <col:24> 'HashAllocator::link *' lvalue ->_free 0x563042bf94e8
|   |   |   | |       `-CXXThisExpr 0x563042bf99e0 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x563042bf9ad8 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x563042bf9ac0 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x563042bf9aa8 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x563042bf9a78 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x563042bf9548
|   |   |   |         `-CXXThisExpr 0x563042bf9a68 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x563042bf9ba0 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x563042bf9b70 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042bf9b10 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x563042bf87a0 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x563042bf9b88 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x563042bf9b40 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x563042bf95a8
|   |   |         `-CXXThisExpr 0x563042bf9b30 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563042bf9c50 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042bf9c30 <col:72> 'int' 0
|   |   `-CallExpr 0x563042bf9e88 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x563042bf9e70 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042bf9e50 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042bf9ec8 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042bf9cc0 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x563042bf9ee0 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042bf9d00 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x563042bf9ef8 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042bf9d40 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x563042bf9f10 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042bf9e38 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042bf9e20 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042bf9dd8 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x563042bf9ff0 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x563042bf9f88 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x563042bf95a8
|     | `-CXXThisExpr 0x563042bf9f78 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x563042bf9fd8 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x563042bf9fb8 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x563042bf87a0 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x563042bf8900 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x563042bf8a48 <line:20:5, col:35> col:17 deallocate 'void (void *)' inline
| `-ParmVarDecl 0x563042bf89b8 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x563042bf8be8 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x563042bf8b28 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x563042bf8c90 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x563042bf8cb8 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563042bf8dd8 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x563042bf8ea8 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x563042bf8f10 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563042bf9028 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x563042bf90f8 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x563042bf9158 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x563042bf91b8 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x563042bf9220 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x563042bf9320 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x563042bf9490 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042bf9300 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x563042bf92e0 <col:20> 'int' 1024
| |-EnumConstantDecl 0x563042bf93b0 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x563042bf94a8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042bf9390 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x563042bf9370 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x563042bf9440 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x563042bf94c0 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042bf9420 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x563042bf9400 <col:18> 'int' 8
|-FieldDecl 0x563042bf94e8 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x563042bf9548 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x563042bf95a8 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x563042bf9620 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x563042bf97b8 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x563042bf96f8 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x563042bf9938 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x563042bf9878 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c48130 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 24
|-CXXRecordDecl 0x563042c48338 prev 0x563042c48130 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x563042c483c8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x563042c48428 <line:61:5, line:63:5> line:61:5 SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x563042c48508 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<24> &)' inline default_delete noexcept-unevaluated 0x563042c48508
| `-ParmVarDecl 0x563042c48618 <col:7> col:7 'const SizedHashAllocator<24> &'
|-CXXConstructorDecl 0x563042c486b8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<24> &&)' inline default_delete noexcept-unevaluated 0x563042c486b8
| `-ParmVarDecl 0x563042c487c8 <col:7> col:7 'SizedHashAllocator<24> &&'
|-CXXMethodDecl 0x563042c48868 <col:7> col:7 implicit operator= 'SizedHashAllocator<24> &(SizedHashAllocator<24> &&)' inline default_delete noexcept-unevaluated 0x563042c48868
| `-ParmVarDecl 0x563042c48978 <col:7> col:7 'SizedHashAllocator<24> &&'
`-CXXDestructorDecl 0x563042c48a00 <col:7> col:7 implicit ~SizedHashAllocator 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c36f00 <../dummy_inc/click/hashtable.hh:98:1, line:321:1> line:99:7 class HashTable definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-TemplateArgument type 'Pair<const IPFlowID, int>'
|-TemplateArgument type 'void'
|-CXXRecordDecl 0x563042c374e0 prev 0x563042c36f00 <col:1, col:7> col:7 implicit class HashTable
|-CXXRecordDecl 0x563042c37570 <line:101:5, line:112:5> line:101:12 struct elt definition
| |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists trivial needs_overload_resolution
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563042c3c218 prev 0x563042c37570 <col:5, col:12> col:12 implicit struct elt
| |-FieldDecl 0x563042c3c2b8 <line:102:2, col:4> col:4 v 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
| |-FieldDecl 0x563042c3c348 <line:103:2, col:7> col:7 _hashnext 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
| |-CXXConstructorDecl 0x563042c3c4d0 <line:104:2, line:106:2> line:104:2 elt 'void (const Pair<const IPFlowID, int> &)'
| | `-ParmVarDecl 0x563042c3c3d8 <col:6, col:15> col:15 v_ 'const Pair<const IPFlowID, int> &'
| |-TypedefDecl 0x563042c3c5d0 <line:107:2, col:31> col:31 referenced key_type 'typename Pair<const IPFlowID, int>::key_type':'const IPFlowID'
| | `-ElaboratedType 0x563042c3bc50 'typename Pair<const IPFlowID, int>::key_type' sugar
| |   `-TypedefType 0x563042c3bc30 'Pair<const IPFlowID, int>::key_type' sugar
| |     |-Typedef 0x563042c37c60 'key_type'
| |     `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
| |       |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
| |       | `-TemplateTypeParm 0x563042bb02f8 'T'
| |       `-QualType 0x563042c2bcb1 'const IPFlowID' const
| |         `-RecordType 0x563042c2bcb0 'IPFlowID'
| |           `-CXXRecord 0x563042c2bc20 'IPFlowID'
| |-TypedefDecl 0x563042c3c668 <line:108:2, col:42> col:42 referenced key_const_reference 'typename Pair<const IPFlowID, int>::key_const_reference':'const IPFlowID &'
| | `-ElaboratedType 0x563042c3bd40 'typename Pair<const IPFlowID, int>::key_const_reference' sugar
| |   `-TypedefType 0x563042c3bd20 'Pair<const IPFlowID, int>::key_const_reference' sugar
| |     |-Typedef 0x563042c37cf8 'key_const_reference'
| |     `-LValueReferenceType 0x563042c37cc0 'const IPFlowID &'
| |       `-QualType 0x563042c37b31 'const const IPFlowID' const
| |         `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
| |           |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
| |           | `-TemplateTypeParm 0x563042bb02f8 'T'
| |           `-QualType 0x563042c2bcb1 'const IPFlowID' const
| |             `-RecordType 0x563042c2bcb0 'IPFlowID'
| |               `-CXXRecord 0x563042c2bc20 'IPFlowID'
| |-CXXMethodDecl 0x563042c3c728 <line:109:2, line:111:2> line:109:22 hashkey 'HashTable<Pair<const IPFlowID, int>, void>::elt::key_const_reference () const'
| |-CXXConstructorDecl 0x563042c3cba8 <line:101:12> col:12 implicit elt 'void (const HashTable<Pair<const IPFlowID, int>, void>::elt &)' inline default noexcept-unevaluated 0x563042c3cba8
| | `-ParmVarDecl 0x563042c3ccb8 <col:12> col:12 'const HashTable<Pair<const IPFlowID, int>, void>::elt &'
| |-CXXConstructorDecl 0x563042c3cea0 <col:12> col:12 implicit elt 'void (HashTable<Pair<const IPFlowID, int>, void>::elt &&)' inline default noexcept-unevaluated 0x563042c3cea0
| | `-ParmVarDecl 0x563042c3cfb8 <col:12> col:12 'HashTable<Pair<const IPFlowID, int>, void>::elt &&'
| `-CXXMethodDecl 0x563042c3d058 <col:12> col:12 implicit operator= 'HashTable<Pair<const IPFlowID, int>, void>::elt &(HashTable<Pair<const IPFlowID, int>, void>::elt &&)' inline default_delete trivial noexcept-unevaluated 0x563042c3d058
|   `-ParmVarDecl 0x563042c3d168 <col:12> col:12 'HashTable<Pair<const IPFlowID, int>, void>::elt &&'
|-TypedefDecl 0x563042c37980 <line:114:5, col:32> col:32 rep_type 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt>':'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
| `-TemplateSpecializationType 0x563042c37910 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt>' sugar HashContainer
|   |-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|   `-RecordType 0x563042c378f0 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x563042c377f0 'HashContainer'
|-AccessSpecDecl 0x563042c379d8 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563042c3bca0 <line:119:5, col:34> col:34 key_type 'typename Pair<const IPFlowID, int>::key_type':'const IPFlowID'
| `-ElaboratedType 0x563042c3bc50 'typename Pair<const IPFlowID, int>::key_type' sugar
|   `-TypedefType 0x563042c3bc30 'Pair<const IPFlowID, int>::key_type' sugar
|     |-Typedef 0x563042c37c60 'key_type'
|     `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|       |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563042bb02f8 'T'
|       `-QualType 0x563042c2bcb1 'const IPFlowID' const
|         `-RecordType 0x563042c2bcb0 'IPFlowID'
|           `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c3bd90 <line:122:5, col:45> col:45 key_const_reference 'typename Pair<const IPFlowID, int>::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x563042c3bd40 'typename Pair<const IPFlowID, int>::key_const_reference' sugar
|   `-TypedefType 0x563042c3bd20 'Pair<const IPFlowID, int>::key_const_reference' sugar
|     |-Typedef 0x563042c37cf8 'key_const_reference'
|     `-LValueReferenceType 0x563042c37cc0 'const IPFlowID &'
|       `-QualType 0x563042c37b31 'const const IPFlowID' const
|         `-SubstTemplateTypeParmType 0x563042c37b30 'const IPFlowID' sugar
|           |-TemplateTypeParmType 0x563042bb0350 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563042bb02f8 'T'
|           `-QualType 0x563042c2bcb1 'const IPFlowID' const
|             `-RecordType 0x563042c2bcb0 'IPFlowID'
|               `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c3bdf8 <line:125:5, col:15> col:15 value_type 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
| `-SubstTemplateTypeParmType 0x563042c37430 'Pair<const IPFlowID, int>' sugar
|   |-TemplateTypeParmType 0x563042bfbf90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563042bfbf38 'T'
|   `-RecordType 0x563042c36e40 'Pair<const IPFlowID, int>'
|     `-ClassTemplateSpecialization 0x563042c36d48 'Pair'
|-TypedefDecl 0x563042c44bb0 <line:128:5, col:42> col:42 referenced size_type 'typename rep_type::size_type':'unsigned long'
| `-ElaboratedType 0x563042c44b60 'typename rep_type::size_type' sugar
|   `-TypedefType 0x563042c3ed30 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::size_type' sugar
|     |-Typedef 0x563042c3e4f0 'size_type'
|     `-TypedefType 0x5630426d6950 'size_t' sugar
|       |-Typedef 0x5630426a1be0 'size_t'
|       `-BuiltinType 0x563042631640 'unsigned long'
|-TypedefDecl 0x563042c44c80 <line:131:5, col:50> col:50 referenced bucket_count_type 'typename rep_type::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x563042c44c30 'typename rep_type::bucket_count_type' sugar
|   `-TypedefType 0x563042c3eed0 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type' sugar
|     |-Typedef 0x563042c3e548 'bucket_count_type'
|     `-TypedefType 0x563042786c00 'uint32_t' sugar
|       |-Typedef 0x56304269a4c8 'uint32_t'
|       `-TypedefType 0x5630426735a0 '__uint32_t' sugar
|         |-Typedef 0x563042673198 '__uint32_t'
|         `-BuiltinType 0x563042631620 'unsigned int'
|-CXXConstructorDecl 0x563042c44d10 <line:135:5, line:137:5> line:135:5 HashTable 'void ()'
|-CXXConstructorDecl 0x563042c44ee8 <line:143:5, line:145:5> line:143:14 HashTable 'void (HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type)'
| `-ParmVarDecl 0x563042c44e00 <col:24, col:42> col:42 n 'HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type':'unsigned int'
|-CXXConstructorDecl 0x563042c451a8 <line:148:5, line:151:5> line:148:5 HashTable 'void (const HashTable<Pair<const IPFlowID, int> > &)'
| `-ParmVarDecl 0x563042c45090 <col:15, col:35> col:35 x 'const HashTable<Pair<const IPFlowID, int> > &'
|-CXXConstructorDecl 0x563042c45468 <line:155:5, line:158:5> line:155:5 HashTable 'void (HashTable<Pair<const IPFlowID, int> > &&)'
| `-ParmVarDecl 0x563042c45350 <col:15, col:30> col:30 x 'HashTable<Pair<const IPFlowID, int> > &&'
|-CXXDestructorDecl 0x563042c45550 <line:162:5, col:16> col:5 ~HashTable 'void () noexcept'
|-CXXMethodDecl 0x563042c456a8 <line:166:5, line:168:5> line:166:22 size 'HashTable<Pair<const IPFlowID, int>, void>::size_type () const' inline
|-CXXMethodDecl 0x563042c45758 <line:171:5, line:173:5> line:171:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563042c45858 <line:176:5, line:178:5> line:176:30 bucket_count 'HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type () const' inline
|-CXXMethodDecl 0x563042c459d8 <line:182:5, line:184:5> line:182:22 bucket_size 'HashTable<Pair<const IPFlowID, int>, void>::size_type (HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type) const' inline
| `-ParmVarDecl 0x563042c45918 <col:34, col:52> col:52 n 'HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type':'unsigned int'
|-TypedefDecl 0x563042c45c10 <line:187:5, col:41> col:41 const_iterator 'HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >'
| `-TemplateSpecializationType 0x563042c45ba0 'HashTable_const_iterator<Pair<const IPFlowID, int> >' sugar HashTable_const_iterator
|   |-TemplateArgument type 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
|   `-RecordType 0x563042c45b80 'HashTable_const_iterator<Pair<const IPFlowID, int> >'
|     `-ClassTemplateSpecialization 0x563042c45aa0 'HashTable_const_iterator'
|-TypedefDecl 0x563042c45df0 <line:188:5, col:35> col:35 iterator 'HashTable_iterator<Pair<const IPFlowID, int> >':'HashTable_iterator<Pair<const IPFlowID, int> >'
| `-TemplateSpecializationType 0x563042c45d80 'HashTable_iterator<Pair<const IPFlowID, int> >' sugar HashTable_iterator
|   |-TemplateArgument type 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
|   `-RecordType 0x563042c45d60 'HashTable_iterator<Pair<const IPFlowID, int> >'
|     `-ClassTemplateSpecialization 0x563042c45c78 'HashTable_iterator'
|-CXXMethodDecl 0x563042c45ee8 <line:193:5, col:27> col:21 begin 'HashTable<Pair<const IPFlowID, int>, void>::iterator ()' inline
|-CXXMethodDecl 0x563042c46038 <line:195:5, col:35> col:27 begin 'HashTable<Pair<const IPFlowID, int>, void>::const_iterator () const' inline
|-CXXMethodDecl 0x563042c46108 <line:199:5, col:25> col:21 end 'HashTable<Pair<const IPFlowID, int>, void>::iterator ()' inline
|-CXXMethodDecl 0x563042c461d8 <line:201:5, col:33> col:27 end 'HashTable<Pair<const IPFlowID, int>, void>::const_iterator () const' inline
|-CXXMethodDecl 0x563042c46388 <line:205:5, col:53> col:22 count 'HashTable<Pair<const IPFlowID, int>, void>::size_type (HashTable<Pair<const IPFlowID, int>, void>::key_const_reference) const' inline
| `-ParmVarDecl 0x563042c462c0 <col:28, col:48> col:48 key 'HashTable<Pair<const IPFlowID, int>, void>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c46548 <line:210:5, col:49> col:21 find 'HashTable<Pair<const IPFlowID, int>, void>::iterator (HashTable<Pair<const IPFlowID, int>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c46450 <col:26, col:46> col:46 key 'HashTable<Pair<const IPFlowID, int>, void>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c46708 <line:212:5, col:57> col:27 find 'HashTable<Pair<const IPFlowID, int>, void>::const_iterator (HashTable<Pair<const IPFlowID, int>, void>::key_const_reference) const' inline
| `-ParmVarDecl 0x563042c46610 <col:32, col:52> col:52 key 'HashTable<Pair<const IPFlowID, int>, void>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c46860 <line:221:5, col:56> col:21 find_prefer 'HashTable<Pair<const IPFlowID, int>, void>::iterator (HashTable<Pair<const IPFlowID, int>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c467d0 <col:33, col:53> col:53 key 'HashTable<Pair<const IPFlowID, int>, void>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c469b8 <line:234:5, col:56> col:21 find_insert 'HashTable<Pair<const IPFlowID, int>, void>::iterator (HashTable<Pair<const IPFlowID, int>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c46928 <col:33, col:53> col:53 key 'HashTable<Pair<const IPFlowID, int>, void>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c46bb8 <line:246:5, col:58> col:24 operator[] 'HashTable<Pair<const IPFlowID, int>, void>::value_type &(HashTable<Pair<const IPFlowID, int>, void>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c46ac8 <col:35, col:55> col:55 key 'HashTable<Pair<const IPFlowID, int>, void>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c46d98 <line:257:5, col:56> col:21 find_insert 'HashTable<Pair<const IPFlowID, int>, void>::iterator (const HashTable<Pair<const IPFlowID, int>, void>::value_type &)' inline
| `-ParmVarDecl 0x563042c46ca8 <col:33, col:51> col:51 value 'const HashTable<Pair<const IPFlowID, int>, void>::value_type &'
|-CXXMethodDecl 0x563042c46f58 <line:268:5, col:37> col:10 set 'bool (const HashTable<Pair<const IPFlowID, int>, void>::value_type &)'
| `-ParmVarDecl 0x563042c46e60 <col:14, col:32> col:32 value 'const HashTable<Pair<const IPFlowID, int>, void>::value_type &'
|-CXXMethodDecl 0x563042c47168 <line:273:5, col:38> col:14 erase 'HashTable<Pair<const IPFlowID, int>, void>::iterator (const HashTable<Pair<const IPFlowID, int>, void>::iterator &)'
| `-ParmVarDecl 0x563042c47078 <col:20, col:36> col:36 it 'const HashTable<Pair<const IPFlowID, int>, void>::iterator &'
|-CXXMethodDecl 0x563042c47368 <line:278:5, col:40> col:15 erase 'HashTable<Pair<const IPFlowID, int>, void>::size_type (const HashTable<Pair<const IPFlowID, int>, void>::key_type &)'
| `-ParmVarDecl 0x563042c47278 <col:21, col:37> col:37 key 'const HashTable<Pair<const IPFlowID, int>, void>::key_type &'
|-CXXMethodDecl 0x563042c47420 <line:282:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x563042c476a8 <line:286:5, col:30> col:10 swap 'void (HashTable<Pair<const IPFlowID, int> > &)'
| `-ParmVarDecl 0x563042c475b0 <col:15, col:29> col:29 x 'HashTable<Pair<const IPFlowID, int> > &'
|-CXXMethodDecl 0x563042c47800 <line:293:5, line:295:5> line:293:10 rehash 'void (HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type)'
| `-ParmVarDecl 0x563042c47770 <col:17, col:35> col:35 n 'HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c47b10 <line:299:5, col:50> col:19 operator= 'HashTable<Pair<const IPFlowID, int> > &(const HashTable<Pair<const IPFlowID, int> > &)'
| `-ParmVarDecl 0x563042c479f0 <col:29, col:49> col:49 x 'const HashTable<Pair<const IPFlowID, int> > &'
|-CXXMethodDecl 0x563042c47e20 <line:303:5, line:306:5> line:303:26 operator= 'HashTable<Pair<const IPFlowID, int> > &(HashTable<Pair<const IPFlowID, int> > &&)' inline
| `-ParmVarDecl 0x563042c47d00 <col:36, col:51> col:51 x 'HashTable<Pair<const IPFlowID, int> > &&'
|-AccessSpecDecl 0x563042c47ed8 <line:309:3, col:10> col:3 private
|-FieldDecl 0x563042c47f10 <line:311:5, col:14> col:14 _rep 'HashTable<Pair<const IPFlowID, int>, void>::rep_type':'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-FieldDecl 0x563042c48ae0 <line:312:5, col:37> col:37 _alloc 'SizedHashAllocator<sizeof(HashTable<Pair<const IPFlowID, int>, void>::elt)>':'SizedHashAllocator<24>'
|-CXXMethodDecl 0x563042c48ca8 <line:314:5, col:45> col:10 clone_elements 'void (const HashTable<Pair<const IPFlowID, int> > &)'
| `-ParmVarDecl 0x563042c48be0 <col:25, col:44> col:45 'const HashTable<Pair<const IPFlowID, int> > &'
|-CXXMethodDecl 0x563042c48ed8 <line:315:5, col:44> col:10 copy_elements 'void (const HashTable<Pair<const IPFlowID, int> > &)'
| `-ParmVarDecl 0x563042c48e10 <col:24, col:43> col:44 'const HashTable<Pair<const IPFlowID, int> > &'
|-FriendDecl 0x563042c49050 <line:317:5, col:38> col:12 'class HashTable_iterator<Pair<const IPFlowID, int> >':'HashTable_iterator<Pair<const IPFlowID, int> >'
|-FriendDecl 0x563042c49150 <line:318:5, col:44> col:12 'class HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >'
`-FriendDecl 0x563042c493b8 <line:319:5, col:52> col:52
  `-ClassTemplateDecl 0x563042c49340 parent 0x563042631488 prev 0x563042c0e5b0 <col:5, col:52> col:52 HashTable
    |-TemplateTypeParmDecl 0x563042c49190 <col:15, col:24> col:24 typename depth 0 index 0 K
    |-TemplateTypeParmDecl 0x563042c49208 <col:27, col:36> col:36 typename depth 0 index 1 V
    | `-TemplateArgument type 'void'
    |   `-inherited from TemplateTypeParm 0x563042bfb598 'V'
    |-CXXRecordDecl 0x563042c492b0 parent 0x563042631488 prev 0x563042c0e520 <col:46, col:52> col:52 class HashTable
    |-ClassTemplateSpecialization 0x563042c369a0 'HashTable'
    `-ClassTemplateSpecialization 0x563042c36f00 'HashTable'

Layout: <CGRecordLayout
  LLVMType:%class.HashTable.0 = type { %class.HashContainer, %class.SizedHashAllocator }
  NonVirtualBaseLLVMType:%class.HashTable.0 = type { %class.HashContainer, %class.SizedHashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c369a0 <../dummy_inc/click/hashtable.hh:569:1, line:876:1> line:570:7 class HashTable definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-TemplateArgument type 'IPFlowID'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x563042c36c40 prev 0x563042c369a0 <col:1, col:7> col:7 implicit class HashTable
|-TypedefDecl 0x563042c37090 <line:572:5, col:42> col:42 rep_type 'HashTable<Pair<const IPFlowID, int> >':'HashTable<Pair<const IPFlowID, int>, void>'
| `-TemplateSpecializationType 0x563042c37020 'HashTable<Pair<const IPFlowID, int> >' sugar HashTable
|   |-TemplateArgument type 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
|   `-RecordType 0x563042c37000 'HashTable<Pair<const IPFlowID, int>, void>'
|     `-ClassTemplateSpecialization 0x563042c36f00 'HashTable'
|-AccessSpecDecl 0x563042c370e8 <line:574:3, col:9> col:3 public
|-TypedefDecl 0x563042c37120 <line:577:5, col:15> col:15 key_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x563042c36cd0 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x563042c0e450 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563042c0e400 'K'
|   `-RecordType 0x563042c2bcb0 'IPFlowID'
|     `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c371b8 <line:580:5, col:22> col:22 key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x563042c37180 'const IPFlowID &'
|   `-QualType 0x563042c36cd1 'const IPFlowID' const
|     `-SubstTemplateTypeParmType 0x563042c36cd0 'IPFlowID' sugar
|       |-TemplateTypeParmType 0x563042c0e450 'K' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563042c0e400 'K'
|       `-RecordType 0x563042c2bcb0 'IPFlowID'
|         `-CXXRecord 0x563042c2bc20 'IPFlowID'
|-TypedefDecl 0x563042c37220 <line:583:5, col:15> col:15 mapped_type 'int':'int'
| `-SubstTemplateTypeParmType 0x563042c36d10 'int' sugar
|   |-TemplateTypeParmType 0x563042c0e4d0 'V' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x563042c0e478 'V'
|   `-BuiltinType 0x563042631580 'int'
|-TypedefDecl 0x563042c37340 <line:586:5, col:30> col:30 value_type 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
| `-TemplateSpecializationType 0x563042c372a0 'Pair<const IPFlowID, int>' sugar Pair
|   |-TemplateArgument type 'const IPFlowID':'const IPFlowID'
|   |-TemplateArgument type 'int':'int'
|   `-RecordType 0x563042c36e40 'Pair<const IPFlowID, int>'
|     `-ClassTemplateSpecialization 0x563042c36d48 'Pair'
|-TypedefDecl 0x563042c49450 <line:589:5, col:42> col:42 size_type 'typename rep_type::size_type':'unsigned long'
| `-ElaboratedType 0x563042c49400 'typename rep_type::size_type' sugar
|   `-TypedefType 0x563042c45640 'HashTable<Pair<const IPFlowID, int>, void>::size_type' sugar
|     |-Typedef 0x563042c44bb0 'size_type'
|     `-ElaboratedType 0x563042c44b60 'typename rep_type::size_type' sugar
|       `-TypedefType 0x563042c3ed30 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::size_type' sugar
|         |-Typedef 0x563042c3e4f0 'size_type'
|         `-TypedefType 0x5630426d6950 'size_t' sugar
|           |-Typedef 0x5630426a1be0 'size_t'
|           `-BuiltinType 0x563042631640 'unsigned long'
|-TypedefDecl 0x563042c49520 <line:592:5, col:50> col:50 bucket_count_type 'typename rep_type::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x563042c494d0 'typename rep_type::bucket_count_type' sugar
|   `-TypedefType 0x563042c44dd0 'HashTable<Pair<const IPFlowID, int>, void>::bucket_count_type' sugar
|     |-Typedef 0x563042c44c80 'bucket_count_type'
|     `-ElaboratedType 0x563042c44c30 'typename rep_type::bucket_count_type' sugar
|       `-TypedefType 0x563042c3eed0 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type' sugar
|         |-Typedef 0x563042c3e548 'bucket_count_type'
|         `-TypedefType 0x563042786c00 'uint32_t' sugar
|           |-Typedef 0x56304269a4c8 'uint32_t'
|           `-TypedefType 0x5630426735a0 '__uint32_t' sugar
|             |-Typedef 0x563042673198 '__uint32_t'
|             `-BuiltinType 0x563042631620 'unsigned int'
|-CXXConstructorDecl 0x563042c495b0 <line:596:5, line:598:5> line:596:5 used HashTable 'void ()'
|-CXXConstructorDecl 0x563042c497d8 <line:601:5, line:603:5> line:601:14 HashTable 'void (const HashTable<IPFlowID, int>::mapped_type &)'
| `-ParmVarDecl 0x563042c496c8 <col:24, col:43> col:43 d 'const HashTable<IPFlowID, int>::mapped_type &'
|-CXXConstructorDecl 0x563042c49a78 <line:608:5, line:610:5> line:608:5 HashTable 'void (const HashTable<IPFlowID, int>::mapped_type &, HashTable<IPFlowID, int>::bucket_count_type)'
| |-ParmVarDecl 0x563042c498a8 <col:15, col:34> col:34 d 'const HashTable<IPFlowID, int>::mapped_type &'
| `-ParmVarDecl 0x563042c49940 <col:37, col:55> col:55 n 'HashTable<IPFlowID, int>::bucket_count_type':'unsigned int'
|-CXXConstructorDecl 0x563042c49d78 <line:613:5, line:615:5> line:613:5 HashTable 'void (const HashTable<IPFlowID, int> &)'
| `-ParmVarDecl 0x563042c49c68 <col:15, col:38> col:38 x 'const HashTable<IPFlowID, int> &'
|-CXXConstructorDecl 0x563042c4a078 <line:619:5, line:622:5> line:619:5 HashTable 'void (HashTable<IPFlowID, int> &&)'
| `-ParmVarDecl 0x563042c49f68 <col:15, col:33> col:33 x 'HashTable<IPFlowID, int> &&'
|-CXXDestructorDecl 0x563042c4a160 <line:626:5, line:627:5> line:626:5 used ~HashTable 'void () noexcept'
|-CXXMethodDecl 0x563042c4a2b8 <line:631:5, line:633:5> line:631:22 size 'HashTable<IPFlowID, int>::size_type () const' inline
|-CXXMethodDecl 0x563042c4a368 <line:636:5, line:638:5> line:636:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563042c4a468 <line:641:5, line:643:5> line:641:30 bucket_count 'HashTable<IPFlowID, int>::bucket_count_type () const' inline
|-CXXMethodDecl 0x563042c4a5e8 <line:647:5, line:649:5> line:647:22 bucket_size 'HashTable<IPFlowID, int>::size_type (HashTable<IPFlowID, int>::bucket_count_type) const' inline
| `-ParmVarDecl 0x563042c4a528 <col:34, col:52> col:52 n 'HashTable<IPFlowID, int>::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c4a718 <line:655:5, line:657:5> line:655:31 default_value 'const HashTable<IPFlowID, int>::mapped_type &() const' inline
|-TypedefDecl 0x563042c4a870 <line:660:5, col:50> col:50 const_iterator 'HashTable_const_iterator<HashTable<IPFlowID, int>::value_type>':'HashTable_const_iterator<Pair<const IPFlowID, int> >'
| `-TemplateSpecializationType 0x563042c4a800 'HashTable_const_iterator<HashTable<IPFlowID, int>::value_type>' sugar HashTable_const_iterator
|   |-TemplateArgument type 'HashTable<IPFlowID, int>::value_type':'Pair<const IPFlowID, int>'
|   `-RecordType 0x563042c45b80 'HashTable_const_iterator<Pair<const IPFlowID, int> >'
|     `-ClassTemplateSpecialization 0x563042c45aa0 'HashTable_const_iterator'
|-TypedefDecl 0x563042c4a950 <line:661:5, col:44> col:44 iterator 'HashTable_iterator<HashTable<IPFlowID, int>::value_type>':'HashTable_iterator<Pair<const IPFlowID, int> >'
| `-TemplateSpecializationType 0x563042c4a8e0 'HashTable_iterator<HashTable<IPFlowID, int>::value_type>' sugar HashTable_iterator
|   |-TemplateArgument type 'HashTable<IPFlowID, int>::value_type':'Pair<const IPFlowID, int>'
|   `-RecordType 0x563042c45d60 'HashTable_iterator<Pair<const IPFlowID, int> >'
|     `-ClassTemplateSpecialization 0x563042c45c78 'HashTable_iterator'
|-CXXMethodDecl 0x563042c4aa18 <line:666:5, line:668:5> line:666:21 begin 'HashTable<IPFlowID, int>::iterator ()' inline
|-CXXMethodDecl 0x563042c4ab38 <line:670:5, line:672:5> line:670:27 begin 'HashTable<IPFlowID, int>::const_iterator () const' inline
|-CXXMethodDecl 0x563042c4ac08 <line:676:5, line:678:5> line:676:21 end 'HashTable<IPFlowID, int>::iterator ()' inline
|-CXXMethodDecl 0x563042c4acd8 <line:680:5, line:682:5> line:680:27 end 'HashTable<IPFlowID, int>::const_iterator () const' inline
|-CXXMethodDecl 0x563042c4ae88 <line:686:5, line:688:5> line:686:22 count 'HashTable<IPFlowID, int>::size_type (HashTable<IPFlowID, int>::key_const_reference) const' inline
| `-ParmVarDecl 0x563042c4adc0 <col:28, col:48> col:48 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b018 <line:693:5, line:695:5> line:693:27 find 'HashTable<IPFlowID, int>::const_iterator (HashTable<IPFlowID, int>::key_const_reference) const' inline
| `-ParmVarDecl 0x563042c4af50 <col:32, col:52> col:52 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b1a8 <line:697:5, line:699:5> line:697:21 find 'HashTable<IPFlowID, int>::iterator (HashTable<IPFlowID, int>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c4b0e0 <col:26, col:46> col:46 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b300 <line:705:5, line:707:5> line:705:21 find_prefer 'HashTable<IPFlowID, int>::iterator (HashTable<IPFlowID, int>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c4b270 <col:33, col:53> col:53 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b4b8 <line:714:5, line:719:5> line:714:24 get 'const HashTable<IPFlowID, int>::mapped_type &(HashTable<IPFlowID, int>::key_const_reference) const'
| `-ParmVarDecl 0x563042c4b3c8 <col:28, col:48> col:48 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b698 <line:725:5, line:730:5> line:725:18 get_pointer 'HashTable<IPFlowID, int>::mapped_type *(HashTable<IPFlowID, int>::key_const_reference)'
| `-ParmVarDecl 0x563042c4b5a8 <col:30, col:50> col:50 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b878 <line:732:5, line:737:5> line:732:24 get_pointer 'const HashTable<IPFlowID, int>::mapped_type *(HashTable<IPFlowID, int>::key_const_reference) const'
| `-ParmVarDecl 0x563042c4b788 <col:36, col:56> col:56 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4b9d0 <line:747:5, line:752:5> line:747:24 operator[] 'const HashTable<IPFlowID, int>::mapped_type &(HashTable<IPFlowID, int>::key_const_reference) const'
| `-ParmVarDecl 0x563042c4b940 <col:35, col:55> col:55 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4bbb8 <line:765:5, col:59> col:25 operator[] 'HashTable<IPFlowID, int>::mapped_type &(HashTable<IPFlowID, int>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c4bac8 <col:36, col:56> col:56 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4bd10 <line:778:5, line:780:5> line:778:21 find_insert 'HashTable<IPFlowID, int>::iterator (HashTable<IPFlowID, int>::key_const_reference)' inline
| `-ParmVarDecl 0x563042c4bc80 <col:33, col:53> col:53 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4d410 <line:791:5, line:794:5> line:791:21 find_insert 'HashTable<IPFlowID, int>::iterator (HashTable<IPFlowID, int>::key_const_reference, const HashTable<IPFlowID, int>::mapped_type &)' inline
| |-ParmVarDecl 0x563042c4bdd8 <col:33, col:53> col:53 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
| `-ParmVarDecl 0x563042c4be50 <line:792:33, col:52> col:52 value 'const HashTable<IPFlowID, int>::mapped_type &'
|-CXXMethodDecl 0x563042c4d668 <line:810:5, col:63> col:10 set 'bool (HashTable<IPFlowID, int>::key_const_reference, const HashTable<IPFlowID, int>::mapped_type &)'
| |-ParmVarDecl 0x563042c4d4e0 <col:14, col:34> col:34 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
| `-ParmVarDecl 0x563042c4d558 <col:39, col:58> col:58 value 'const HashTable<IPFlowID, int>::mapped_type &'
|-CXXMethodDecl 0x563042c4d848 <line:817:5, col:95> col:10 replace 'bool (HashTable<IPFlowID, int>::key_const_reference, const HashTable<IPFlowID, int>::mapped_type &)'
| |-ParmVarDecl 0x563042c4d738 <col:18, col:38> col:38 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
| |-ParmVarDecl 0x563042c4d7b0 <col:43, col:62> col:62 value 'const HashTable<IPFlowID, int>::mapped_type &'
| `-DeprecatedAttr 0x563042c4d938 <col:84> Inherited "" ""
|-CXXMethodDecl 0x563042c4daa8 <line:822:5, line:824:5> line:822:14 erase 'HashTable<IPFlowID, int>::iterator (const HashTable<IPFlowID, int>::iterator &)'
| `-ParmVarDecl 0x563042c4d9e8 <col:20, col:36> col:36 it 'const HashTable<IPFlowID, int>::iterator &'
|-CXXMethodDecl 0x563042c4dc38 <line:829:5, line:831:5> line:829:15 erase 'HashTable<IPFlowID, int>::size_type (HashTable<IPFlowID, int>::key_const_reference)'
| `-ParmVarDecl 0x563042c4db70 <col:21, col:41> col:41 key 'HashTable<IPFlowID, int>::key_const_reference':'const IPFlowID &'
|-CXXMethodDecl 0x563042c4dcf0 <line:835:5, line:837:5> line:835:10 clear 'void ()'
|-CXXMethodDecl 0x563042c4dfb8 <line:841:5, line:844:5> line:841:10 swap 'void (HashTable<IPFlowID, int> &)'
| `-ParmVarDecl 0x563042c4dec8 <col:15, col:32> col:32 x 'HashTable<IPFlowID, int> &'
|-CXXMethodDecl 0x563042c4e148 <line:851:5, line:853:5> line:851:10 rehash 'void (HashTable<IPFlowID, int>::bucket_count_type)'
| `-ParmVarDecl 0x563042c4e080 <col:17, col:35> col:35 nb 'HashTable<IPFlowID, int>::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x563042c4e4d8 <line:857:5, line:861:5> line:857:22 operator= 'HashTable<IPFlowID, int> &(const HashTable<IPFlowID, int> &)'
| `-ParmVarDecl 0x563042c4e3a8 <col:32, col:55> col:55 x 'const HashTable<IPFlowID, int> &'
|-CXXMethodDecl 0x563042c4e868 <line:865:5, line:868:5> line:865:22 operator= 'HashTable<IPFlowID, int> &(HashTable<IPFlowID, int> &&)'
| `-ParmVarDecl 0x563042c4e738 <col:32, col:50> col:50 x 'HashTable<IPFlowID, int> &&'
|-AccessSpecDecl 0x563042c4e920 <line:871:3, col:10> col:3 private
|-FieldDecl 0x563042c4e958 <line:873:5, col:14> col:14 _rep 'HashTable<IPFlowID, int>::rep_type':'HashTable<Pair<const IPFlowID, int>, void>'
`-FieldDecl 0x563042c4e9b8 <line:874:5, col:7> col:7 _default_value 'int':'int'

Layout: <CGRecordLayout
  LLVMType:%class.HashTable = type <{ %class.HashTable.0, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.HashTable.base = type <{ %class.HashTable.0, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042c350d8 <../elements/ip/rfc2507c.hh:30:1, line:75:1> line:30:7 class RFC2507c definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x563042c35238 <col:1, col:7> col:7 implicit referenced class RFC2507c
|-AccessSpecDecl 0x563042c352c8 <line:31:1, col:7> col:1 public
|-CXXRecordDecl 0x563042c352f0 <line:34:3, line:40:3> line:34:10 struct tcpip definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563042c35408 <col:3, col:10> col:10 implicit referenced struct tcpip
| |-FieldDecl 0x563042c354a8 <line:35:5, col:14> col:14 referenced _ip 'click_ip'
| |-FieldDecl 0x563042c35508 <line:36:5, col:15> col:15 _tcp 'click_tcp'
| |-CXXConversionDecl 0x563042c355b8 <line:37:5, col:61> col:5 operator bool 'bool () const'
| | `-CompoundStmt 0x563042c50148 <col:27, col:61>
| |   `-ReturnStmt 0x563042c50138 <col:29, col:58>
| |     `-ParenExpr 0x563042c50118 <col:35, col:58> 'bool'
| |       `-BinaryOperator 0x563042c500f8 <col:36, col:57> 'bool' '!='
| |         |-ImplicitCastExpr 0x563042c500c8 <col:36, col:47> 'in_addr_t':'unsigned int' <LValueToRValue>
| |         | `-MemberExpr 0x563042c50078 <col:36, col:47> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x5630428c7df0
| |         |   `-MemberExpr 0x563042c50048 <col:36, col:40> 'const struct in_addr':'const in_addr' lvalue .ip_src 0x563042990668
| |         |     `-MemberExpr 0x563042c50018 <col:36> 'const click_ip' lvalue ->_ip 0x563042c354a8
| |         |       `-CXXThisExpr 0x563042c50008 <col:36> 'const RFC2507c::tcpip *' implicit this
| |         `-ImplicitCastExpr 0x563042c500e0 <col:57> 'unsigned int' <IntegralCast>
| |           `-IntegerLiteral 0x563042c500a8 <col:57> 'int' 0
| |-CXXConstructorDecl 0x563042c356d0 <line:38:5, col:38> col:5 used tcpip 'void ()'
| | |-CXXCtorInitializer Field 0x563042c354a8 '_ip' 'click_ip'
| | | `-CXXConstructExpr 0x563042c50668 <col:5> 'click_ip' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x563042c35508 '_tcp' 'click_tcp'
| | | `-CXXConstructExpr 0x563042c50b18 <col:5> 'click_tcp' 'void () noexcept'
| | `-CompoundStmt 0x563042c50c70 <col:13, col:38>
| |   `-BinaryOperator 0x563042c50c50 <col:15, col:35> 'in_addr_t':'unsigned int' lvalue '='
| |     |-MemberExpr 0x563042c50be8 <col:15, col:26> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5630428c7df0
| |     | `-MemberExpr 0x563042c50bb8 <col:15, col:19> 'struct in_addr':'in_addr' lvalue .ip_src 0x563042990668
| |     |   `-MemberExpr 0x563042c50b88 <col:15> 'click_ip' lvalue ->_ip 0x563042c354a8
| |     |     `-CXXThisExpr 0x563042c50b78 <col:15> 'RFC2507c::tcpip *' implicit this
| |     `-ImplicitCastExpr 0x563042c50c38 <col:35> 'in_addr_t':'unsigned int' <IntegralCast>
| |       `-IntegerLiteral 0x563042c50c18 <col:35> 'int' 0
| |-CXXConversionDecl 0x563042c357c0 <line:39:5, col:25> col:5 operator IPFlowID 'IPFlowID () const'
| |-CXXDestructorDecl 0x563042c50fe0 <line:34:10> col:10 implicit ~tcpip 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563042c512a8 <col:10> col:10 implicit constexpr tcpip 'void (const RFC2507c::tcpip &)' inline default trivial noexcept-unevaluated 0x563042c512a8
| | `-ParmVarDecl 0x563042c513b8 <col:10> col:10 'const RFC2507c::tcpip &'
| `-CXXConstructorDecl 0x563042c51458 <col:10> col:10 implicit constexpr tcpip 'void (RFC2507c::tcpip &&)' inline default trivial noexcept-unevaluated 0x563042c51458
|   `-ParmVarDecl 0x563042c51568 <col:10> col:10 'RFC2507c::tcpip &&'
|-CXXConstructorDecl 0x563042c358f0 <line:42:3, col:12> col:3 RFC2507c 'void ()'
|-CXXDestructorDecl 0x563042c359e0 <line:43:3, col:13> col:3 ~RFC2507c 'void ()' noexcept-unevaluated 0x563042c359e0
| `-Overrides: [ 0x563042b93308 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x563042c35b10 <line:45:3, col:58> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x563042b94768 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x563042c50cd8 <col:34, col:58>
|   `-ReturnStmt 0x563042c50cc8 <col:36, col:43>
|     `-ImplicitCastExpr 0x563042c50cb0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x563042c50c88 <col:43> 'const char [12]' lvalue "RFC2507Comp"
|-CXXMethodDecl 0x563042c35bd8 <line:46:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x563042b94830 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x563042c50d38 <col:34, col:54>
|   `-ReturnStmt 0x563042c50d28 <col:36, col:43>
|     `-ImplicitCastExpr 0x563042c50d10 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x563042c50cf0 <col:43> 'const char []' lvalue Var 0x563042b94ae0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x563042c35d18 <line:48:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x563042b93948 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x563042c35c88 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x563042c35dc0 <line:50:1, col:8> col:1 private
|-EnumDecl 0x563042c35de8 <line:52:3, col:25> col:3
| `-EnumConstantDecl 0x563042c35ef0 <col:10, col:22> col:10 referenced TCP_SPACE 'RFC2507c::(anonymous enum at ../elements/ip/rfc2507c.hh:52:3)'
|   `-ImplicitCastExpr 0x563042c35f40 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042c35ed0 <col:22> 'int' Int: 15
|       `-IntegerLiteral 0x563042c35eb0 <col:22> 'int' 15
|-EnumDecl 0x563042c35f58 <line:55:3, line:57:25> line:55:3
| |-EnumConstantDecl 0x563042c36060 <col:10, col:21> col:10 PT_OTHER 'RFC2507c::(anonymous enum at ../elements/ip/rfc2507c.hh:55:3)'
| | `-ImplicitCastExpr 0x563042c361d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042c36040 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563042c36020 <col:21> 'int' 0
| |-EnumConstantDecl 0x563042c360f0 <line:56:3, col:20> col:3 PT_FULL_HEADER 'RFC2507c::(anonymous enum at ../elements/ip/rfc2507c.hh:55:3)'
| | `-ImplicitCastExpr 0x563042c361e8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042c360d0 <col:20> 'int' Int: 1
| |     `-IntegerLiteral 0x563042c360b0 <col:20> 'int' 1
| `-EnumConstantDecl 0x563042c36180 <line:57:3, col:23> col:3 PT_COMPRESSED_TCP 'RFC2507c::(anonymous enum at ../elements/ip/rfc2507c.hh:55:3)'
|   `-ImplicitCastExpr 0x563042c36200 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042c36160 <col:23> 'int' Int: 2
|       `-IntegerLiteral 0x563042c36140 <col:23> 'int' 2
|-CXXRecordDecl 0x563042c36218 <line:60:3, line:62:3> line:60:10 struct ccb definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable can_const_default_init
| | |-DefaultConstructor exists non_trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563042c36338 <col:3, col:10> col:10 implicit struct ccb
| |-FieldDecl 0x563042c36420 <line:61:5, col:18> col:18 _context 'struct tcpip':'RFC2507c::tcpip'
| |-CXXConstructorDecl 0x563042c50f08 <line:60:10> col:10 implicit used ccb 'void () noexcept(false)' inline default
| | |-CXXCtorInitializer Field 0x563042c36420 '_context' 'struct tcpip':'RFC2507c::tcpip'
| | | `-CXXConstructExpr 0x563042c51950 <col:10> 'struct tcpip':'RFC2507c::tcpip' 'void ()'
| | `-CompoundStmt 0x563042c519a8 <col:10>
| |-CXXConstructorDecl 0x563042c515d8 <col:10> col:10 implicit constexpr ccb 'void (const RFC2507c::ccb &)' inline default trivial noexcept-unevaluated 0x563042c515d8
| | `-ParmVarDecl 0x563042c516e8 <col:10> col:10 'const RFC2507c::ccb &'
| |-CXXConstructorDecl 0x563042c51788 <col:10> col:10 implicit constexpr ccb 'void (RFC2507c::ccb &&)' inline default trivial noexcept-unevaluated 0x563042c51788
| | `-ParmVarDecl 0x563042c51898 <col:10> col:10 'RFC2507c::ccb &&'
| `-CXXDestructorDecl 0x563042c519e0 <col:10> col:10 implicit referenced ~ccb 'void () noexcept' inline default trivial
|-FieldDecl 0x563042c36928 <line:63:3, col:29> col:14 _ccbs 'struct ccb [15]'
|-FieldDecl 0x563042c4ea08 <line:66:3, col:28> col:28 _map 'HashTable<IPFlowID, int>':'HashTable<IPFlowID, int>'
|-CXXMethodDecl 0x563042c4ece8 <line:68:3, col:59> col:8 make_key 'void (const struct tcpip &, struct tcpip &)'
| |-ParmVarDecl 0x563042c4eae0 <col:17, col:37> col:37 from 'const struct tcpip &'
| `-ParmVarDecl 0x563042c4ebd0 <col:43, col:57> col:57 to 'struct tcpip &'
|-CXXMethodDecl 0x563042c4ee68 <line:69:3, col:39> col:19 make_other 'WritablePacket *(Packet *)'
| `-ParmVarDecl 0x563042c4eda8 <col:30, col:38> col:38 p 'Packet *'
|-CXXMethodDecl 0x563042c4f078 <line:70:3, col:47> col:19 make_full 'WritablePacket *(int, Packet *)'
| |-ParmVarDecl 0x563042c4ef28 <col:29, col:33> col:33 cid 'int'
| `-ParmVarDecl 0x563042c4efa0 <col:38, col:46> col:46 p 'Packet *'
|-CXXMethodDecl 0x563042c4f3c0 <line:71:3, col:45> col:7 encode16 'int (int, int, char *, int &)'
| |-ParmVarDecl 0x563042c4f140 <col:16, col:20> col:20 o 'int'
| |-ParmVarDecl 0x563042c4f1c0 <col:23, col:27> col:27 n 'int'
| |-ParmVarDecl 0x563042c4f240 <col:30, col:36> col:36 p 'char *'
| `-ParmVarDecl 0x563042c4f2c0 <col:39, col:44> col:44 i 'int &'
|-CXXMethodDecl 0x563042c4f6c8 <line:72:3, col:45> col:7 encode32 'int (int, int, char *, int &)'
| |-ParmVarDecl 0x563042c4f498 <col:16, col:20> col:20 o 'int'
| |-ParmVarDecl 0x563042c4f518 <col:23, col:27> col:27 n 'int'
| |-ParmVarDecl 0x563042c4f598 <col:30, col:36> col:36 p 'char *'
| `-ParmVarDecl 0x563042c4f618 <col:39, col:44> col:44 i 'int &'
|-CXXMethodDecl 0x563042c4f9d0 <line:73:3, col:44> col:7 encodeX 'int (int, int, char *, int &)'
| |-ParmVarDecl 0x563042c4f7a0 <col:15, col:19> col:19 o 'int'
| |-ParmVarDecl 0x563042c4f820 <col:22, col:26> col:26 n 'int'
| |-ParmVarDecl 0x563042c4f8a0 <col:29, col:35> col:35 p 'char *'
| `-ParmVarDecl 0x563042c4f920 <col:38, col:43> col:43 i 'int &'
|-CXXMethodDecl 0x563042c4fbf8 <line:74:3, col:45> col:11 make_compressed 'Packet *(int, Packet *)'
| |-ParmVarDecl 0x563042c4faa8 <col:27, col:31> col:31 cid 'int'
| `-ParmVarDecl 0x563042c4fb20 <col:36, col:44> col:44 p 'Packet *'
|-CXXConstructorDecl 0x563042c4fcd8 <line:30:7> col:7 implicit RFC2507c 'void (const RFC2507c &)' inline default_delete noexcept-unevaluated 0x563042c4fcd8
| `-ParmVarDecl 0x563042c4fde8 <col:7> col:7 'const RFC2507c &'
`-CXXMethodDecl 0x563042c4fe88 <col:7> col:7 implicit operator= 'RFC2507c &(const RFC2507c &)' inline default_delete noexcept-unevaluated 0x563042c4fe88
  `-ParmVarDecl 0x563042c4ff98 <col:7> col:7 'const RFC2507c &'

Layout: <CGRecordLayout
  LLVMType:%class.RFC2507c = type { %class.Element.base, [15 x %"struct.RFC2507c::ccb"], [4 x i8], %class.HashTable }
  NonVirtualBaseLLVMType:%class.RFC2507c = type { %class.Element.base, [15 x %"struct.RFC2507c::ccb"], [4 x i8], %class.HashTable }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042951ae0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042951bf8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x563042951c88 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x563042951d58 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x563042951e40 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x563042952058 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563042951f00 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042952208 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563042952110 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563042952350 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5630429522c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563042952498 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563042952408 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5630429525e0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563042952550 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5630429526a8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5630429527f0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x563042952760 <col:28> col:31 'int'
|-CXXMethodDecl 0x5630429528b8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x563042952a00 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x563042952970 <col:28> col:31 'int'
|-CXXMethodDecl 0x563042952b78 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563042952ab8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042952cc0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563042952c30 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042952d88 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x563042952f48 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563042952e38 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563042952eb0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042953198 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563042953008 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042953080 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563042953248 <col:86> "" ""
|-CXXMethodDecl 0x5630429534b8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x563042953328 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5630429533a0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042953668 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563042953578 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563042953818 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563042953720 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563042953ae8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5630429538d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563042953948 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5630429539c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042953dc8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563042953bb0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563042953c28 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042953ca0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563042953e80 <col:115> "" ""
|-AccessSpecDecl 0x563042953ef0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x563042953f28 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042954430 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563042954430
| `-ParmVarDecl 0x563042954538 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5630429545d8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5630429545d8
| `-ParmVarDecl 0x5630429546e8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x563042989d18 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563042b7cb20 <col:7>
|-CXXConstructorDecl 0x563042989df0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563042989df0
| `-ParmVarDecl 0x563042989f08 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x563042989f78 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563042989f78
| `-ParmVarDecl 0x56304298a088 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x563042b7f520 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042b6b6c8 prev 0x563042b608d0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042b6b7c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x563042b6b8b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x563042b6b9d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x563042b6bb58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x563042b6bcd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x563042b6be58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x563042b7cc88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563042b7d4f8 <col:11>
|-CXXDestructorDecl 0x563042b7cd60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563042b7ce98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563042b7ce98
| `-ParmVarDecl 0x563042b7cfa8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x563042b7d048 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563042b7d048
| `-ParmVarDecl 0x563042b7d158 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x563042b7ff18 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x563042b80028 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x563042b802a8 <col:11>
|   `-ReturnStmt 0x563042b80298 <col:11>
|     `-UnaryOperator 0x563042b80280 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563042b80270 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x563042b80098 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563042b80098
  `-ParmVarDecl 0x563042b801a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042b6bec0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042b6bfd8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x563042b6c078 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x563042b6c0e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x563042b6c148 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x563042b6c1b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x563042b6c210 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x563042b6c2d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x563042b6c330 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x563042b6c390 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x563042b7cb98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563042b6c078 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x563042b7d508 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x563042b7d560 <col:12>
|-CXXConstructorDecl 0x563042b7d1c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563042b7d1c8
| `-ParmVarDecl 0x563042b7d2d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x563042b7d378 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563042b7d378
| `-ParmVarDecl 0x563042b7d488 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x563042b7f600 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042b59fe0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563042b5a0f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x563042b5a188 <col:16, col:22> col:16 public
|-EnumDecl 0x563042b5a1b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x563042b5a2b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x563042b5a390 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b5a290 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x563042b5a270 <col:21> 'int' 28
| `-EnumConstantDecl 0x563042b5a340 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x563042b5a3a8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b5a320 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x563042b5a300 <col:22> 'int' 64
|-CXXMethodDecl 0x563042b5a6e8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563042b5a3d0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042b5a450 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x563042b5a4c8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042b5a540 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563042b5a7a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563042b5a9a8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x563042b5a820 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x563042b5a898 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563042b5aa58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563042b5abb8 <line:55:5, col:91> col:35 used make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x563042b5aac8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563042b5ac60 <col:72> warn_unused_result ""
|-TypedefDecl 0x563042b5afc0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x563042b5af50 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x563042b5aef0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x563042b5aeb0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5630426314e0 'void'
|       |-PointerType 0x5630428da380 'unsigned char *'
|       | `-BuiltinType 0x5630426315e0 'unsigned char'
|       |-TypedefType 0x5630426d6950 'size_t' sugar
|       | |-Typedef 0x5630426a1be0 'size_t'
|       | `-BuiltinType 0x563042631640 'unsigned long'
|       `-PointerType 0x563042631ce0 'void *'
|         `-BuiltinType 0x5630426314e0 'void'
|-CXXMethodDecl 0x563042b5b438 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x563042b5b030 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x563042b5b0a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042b5b140 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x563042b5b1c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x563042b75b30 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x563042b75b18 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x563042b75ae0 <col:58> 'int' 0
| |-ParmVarDecl 0x563042b5b240 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x563042b75b58 <col:76> 'int' 0
| |-ParmVarDecl 0x563042b5b2c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x563042b75b78 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x563042b5b508 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x563042b5b588 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563042b5b648 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x563042b5b6e8 <col:20>
| `-OptimizeNoneAttr 0x563042b5b740 <col:30>
|-CXXMethodDecl 0x563042b5b7b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x563042b5b858 <col:20>
| `-OptimizeNoneAttr 0x563042b5b8b0 <col:30>
|-CXXMethodDecl 0x563042b5b928 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x563042b5b9c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x563042b5ba78 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x563042b5bb18 <col:20>
| |-OptimizeNoneAttr 0x563042b5bb70 <col:30>
| `-WarnUnusedResultAttr 0x563042b5bb98 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x563042b5bbf0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x563042b5bc90 <col:20>
| `-OptimizeNoneAttr 0x563042b5bce8 <col:30>
|-CXXMethodDecl 0x563042b5bd38 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x563042b5bdd8 <col:20>
| `-OptimizeNoneAttr 0x563042b5be30 <col:30>
|-CXXMethodDecl 0x563042b5be78 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x563042b5bf18 <col:20>
| `-OptimizeNoneAttr 0x563042b5bf70 <col:30>
|-CXXMethodDecl 0x563042b5bfb8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563042b5c078 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563042b5c140 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563042b5c208 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563042b5c2c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563042b5c3e8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x563042b75c40 <col:54, line:99:5>
|   `-ReturnStmt 0x563042b75c30 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x563042b75c18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x563042b75be8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563042b6c6c8
|         `-CXXThisExpr 0x563042b75bd8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x563042b5c588 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x563042b5c498 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x563042b75cf0 <col:67, line:103:5>
|   `-BinaryOperator 0x563042b75cd0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563042b75c68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563042b6c6c8
|     | `-CXXThisExpr 0x563042b75c58 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563042b75cb8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x563042b75c98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x563042b5c498 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x563042b5c680 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x563042b75d70 <col:33, line:107:5>
|   `-ReturnStmt 0x563042b75d60 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x563042b75d48 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563042b75d18 <col:16> 'void *' lvalue ->_destructor_argument 0x563042b6c730
|         `-CXXThisExpr 0x563042b75d08 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563042b5c740 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x563042b763a0 <col:25, line:113:5>
|   |-ParenExpr 0x563042b760e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x563042b760b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x563042b75e28 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563042b75e00 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x563042b75dc8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x563042b75d98 <col:24> '<bound member function type>' ->shared 0x563042b5b7b8
|   |   |       `-ImplicitCastExpr 0x563042b75de8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x563042b75d88 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563042b75e88 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b75e68 <col:42> 'int' 0
|   |   `-CallExpr 0x563042b76018 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x563042b76000 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b75fe0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b76058 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b75ef8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x563042b76070 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b75f20 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b76088 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b75f58 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x563042b760a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b75fc8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b75fb0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b75f78 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x563042b762e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x563042b76118 <col:2> 'unsigned char *' lvalue ->_head 0x563042b6c4d0
|   | | `-CXXThisExpr 0x563042b76108 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x563042b762d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x563042b762b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x563042b76158 <col:10> 'unsigned char *' lvalue ->_data 0x563042b6c538
|   |     | `-CXXThisExpr 0x563042b76148 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x563042b76298 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x563042b76278 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x563042b76198 <col:18> 'unsigned char *' lvalue ->_tail 0x563042b6c5a0
|   |         | `-CXXThisExpr 0x563042b76188 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x563042b76260 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x563042b76240 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x563042b761d8 <col:26> 'unsigned char *' lvalue ->_end 0x563042b6c608
|   |             | `-CXXThisExpr 0x563042b761c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x563042b76228 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x563042b76208 <col:33> 'int' 0
|   `-BinaryOperator 0x563042b76380 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563042b76318 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563042b6c6c8
|     | `-CXXThisExpr 0x563042b76308 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563042b76368 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x563042b76348 <col:16> 'int' 0
|-CXXMethodDecl 0x563042b5c880 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563042b5c7f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b5c928 <col:20>
| |-OptimizeNoneAttr 0x563042b5c980 <col:30>
| `-WarnUnusedResultAttr 0x563042b5c9a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563042b5ca78 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563042b5c9e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b5cb20 <col:20>
| |-OptimizeNoneAttr 0x563042b5cb78 <col:30>
| `-WarnUnusedResultAttr 0x563042b5cba0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x563042b5ccd8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563042b5cbe0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563042b5cd80 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x563042b5ce80 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x563042b5cdf0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b5cf28 <col:20>
| `-OptimizeNoneAttr 0x563042b5cf80 <col:30>
|-CXXMethodDecl 0x563042b5d048 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563042b5cfb8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563042b5d0f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x563042b5d1f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563042b5d160 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563042b5d298 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563042b5d398 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x563042b5d308 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b5d440 <col:20>
| `-OptimizeNoneAttr 0x563042b5d498 <col:30>
|-CXXMethodDecl 0x563042b5d628 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x563042b5d4d8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x563042b5d550 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x563042b75b98 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x563042b5d6d8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x563042b5d8d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563042b5d750 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x563042b5d7c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b5dae8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563042b5d998 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563042b5da10 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b5dcf8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x563042b5dba8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x563042b5dc28 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x563042b75ba8 <col:39> 'int' 0
|-CXXMethodDecl 0x563042b5ddc8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x563042b5de90 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563042b5df58 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x563042b5e018 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563042b5e0e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x563042b5e228 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x563042b5e198 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x563042b5e3f8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563042b5e2e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x563042b5e360 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b5e4c8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x563042b5e588 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x563042b5e628 <col:20>
| `-OptimizeNoneAttr 0x563042b5e680 <col:30>
|-CXXMethodDecl 0x563042b5e6d0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563042b5e770 <col:20>
| `-OptimizeNoneAttr 0x563042b5e7c8 <col:30>
|-CXXMethodDecl 0x563042b5e818 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x563042b5e8d8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563042b5e9a0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x563042b5ea40 <col:20>
| `-OptimizeNoneAttr 0x563042b5ea98 <col:30>
|-CXXMethodDecl 0x563042b5ebe8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563042b5ead8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x563042b5eb50 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b5ed38 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x563042b5eca8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b5ee10 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x563042b5eed0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x563042b5ef70 <col:20>
| `-OptimizeNoneAttr 0x563042b5efc8 <col:30>
|-CXXMethodDecl 0x563042b5f018 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563042b5f0b8 <col:20>
| `-OptimizeNoneAttr 0x563042b5f110 <col:30>
|-CXXMethodDecl 0x563042b5f160 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x563042b5f228 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x563042b5f2c8 <col:20>
| `-OptimizeNoneAttr 0x563042b5f320 <col:30>
|-CXXMethodDecl 0x563042b5f368 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x563042b5f488 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x563042b5f5f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x563042b5f538 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x563042b5f6e8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x563042b5f788 <col:20>
| `-OptimizeNoneAttr 0x563042b5f7e0 <col:30>
|-CXXMethodDecl 0x563042b5f830 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x563042b5f8f0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563042b5fb28 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x563042b5f9a0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x563042b5fa18 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b5fbd8 <col:20>
| `-OptimizeNoneAttr 0x563042b5fc30 <col:30>
|-CXXMethodDecl 0x563042b5fcd8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x563042b5fd78 <col:20>
| `-OptimizeNoneAttr 0x563042b5fdd0 <col:30>
|-CXXMethodDecl 0x563042b5fe20 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x563042b5fec0 <col:20>
| `-OptimizeNoneAttr 0x563042b5ff18 <col:30>
|-CXXMethodDecl 0x563042b5ff60 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x563042b60000 <col:20>
| `-OptimizeNoneAttr 0x563042b60058 <col:30>
|-CXXMethodDecl 0x563042b60158 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x563042b60090 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x563042b60200 <col:20>
| `-OptimizeNoneAttr 0x563042b60258 <col:30>
|-CXXMethodDecl 0x563042b60418 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x563042b60290 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x563042b60308 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b604c8 <col:20>
| `-OptimizeNoneAttr 0x563042b60520 <col:30>
|-CXXMethodDecl 0x563042b605c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x563042b606e8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x563042b60808 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x563042b608a8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x563042b608d0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x563042b609f8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x563042b60a98 <col:20>
| `-OptimizeNoneAttr 0x563042b60af0 <col:30>
|-CXXMethodDecl 0x563042b60b98 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x563042b60c38 <col:20>
| `-OptimizeNoneAttr 0x563042b60c90 <col:30>
|-AccessSpecDecl 0x563042b60cb8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x563042b60ce0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x563042b60de0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x563042b60e30 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b60dc0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x563042b60da0 <col:14> 'int' 48
|-CXXMethodDecl 0x563042b60e98 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x563042b60f38 <col:20>
| `-OptimizeNoneAttr 0x563042b60f90 <col:30>
|-CXXMethodDecl 0x563042b61008 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x563042b610a8 <col:20>
| `-OptimizeNoneAttr 0x563042b61100 <col:30>
|-CXXMethodDecl 0x563042b611c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563042b61138 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x563042b61368 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x563042b61508 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x563042b61418 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x563042b615b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x563042b616b0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563042b61a60 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b61690 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x563042b61670 <col:9> 'int' 0
| |-EnumConstantDecl 0x563042b61740 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563042b61a78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b61720 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x563042b61700 <col:14> 'int' 1
| |-EnumConstantDecl 0x563042b617d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563042b61a90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b617b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x563042b61790 <col:14> 'int' 2
| |-EnumConstantDecl 0x563042b61860 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563042b61aa8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b61840 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x563042b61820 <col:14> 'int' 3
| |-EnumConstantDecl 0x563042b618f0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563042b61ac0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b618d0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x563042b618b0 <col:13> 'int' 4
| |-EnumConstantDecl 0x563042b61980 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563042b61ad8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b61960 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x563042b61940 <col:13> 'int' 5
| `-EnumConstantDecl 0x563042b61a10 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x563042b61af0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b619f0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x563042b619d0 <col:14> 'int' 6
|-CXXMethodDecl 0x563042b61b58 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x563042b61bf8 <col:20>
| `-OptimizeNoneAttr 0x563042b61c50 <col:30>
|-CXXMethodDecl 0x563042b61d48 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x563042b61c88 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x563042b61df0 <col:20>
| `-OptimizeNoneAttr 0x563042b61e48 <col:30>
|-CXXMethodDecl 0x563042b61eb8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x563042b61fe0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x563042b62158 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x563042b62090 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x563042b62220 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x563042b622e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x563042b62428 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x563042b62398 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x563042b624d0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x563042b625d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563042b627d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b625b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x563042b62590 <col:23> 'int' 0
| |-EnumConstantDecl 0x563042b62660 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563042b627e8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b62640 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x563042b62620 <col:45> 'int' 4
| |-EnumConstantDecl 0x563042b626f0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563042b62800 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b626d0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x563042b626b0 <col:24> 'int' 0
| `-EnumConstantDecl 0x563042b62780 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x563042b62818 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b62760 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x563042b62740 <col:47> 'int' 16
|-CXXMethodDecl 0x563042b62878 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x563042b629e8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x563042b62928 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x563042b62a90 <col:20>
| `-OptimizeNoneAttr 0x563042b62ae8 <col:30>
|-CXXMethodDecl 0x563042b62b38 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x563042b764c0 <col:18, col:36>
|   `-ReturnStmt 0x563042b764b0 <col:20, col:33>
|     `-ImplicitCastExpr 0x563042b76498 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x563042b76478 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x563042b76448 <col:27> '<bound member function type>' ->xanno 0x563042b60b98
|           `-CXXThisExpr 0x563042b76438 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x563042b62c30 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x563042b765d0 <col:30, col:48>
|   `-ReturnStmt 0x563042b765c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x563042b765a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x563042b76588 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x563042b76558 <col:39> '<bound member function type>' ->xanno 0x563042b609f8
|           `-CXXThisExpr 0x563042b76548 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x563042b62d18 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x563042b76768 <col:24, col:50>
|   `-ReturnStmt 0x563042b76758 <col:26, col:47>
|     `-UnaryOperator 0x563042b76740 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563042b76720 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563042b76708 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563042b766b8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x563042b6b9d8
|         |   `-CXXMemberCallExpr 0x563042b76698 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x563042b76668 <col:34> '<bound member function type>' ->xanno 0x563042b60b98
|         |       `-CXXThisExpr 0x563042b76658 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x563042b766e8 <col:46> 'int' 0
|-CXXMethodDecl 0x563042b62e20 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x563042b76938 <col:36, col:62>
|   `-ReturnStmt 0x563042b76928 <col:38, col:59>
|     `-UnaryOperator 0x563042b76910 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563042b768f0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563042b768d8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563042b76850 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x563042b6b9d8
|         |   `-CXXMemberCallExpr 0x563042b76830 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563042b76800 <col:46> '<bound member function type>' ->xanno 0x563042b609f8
|         |       `-CXXThisExpr 0x563042b767f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563042b76880 <col:58> 'int' 0
|-CXXMethodDecl 0x563042b62f38 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x563042b76ad0 <col:26, col:53>
|   `-ReturnStmt 0x563042b76ac0 <col:28, col:50>
|     `-UnaryOperator 0x563042b76aa8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563042b76a88 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x563042b76a70 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563042b76a20 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x563042b6bcd8
|         |   `-CXXMemberCallExpr 0x563042b76a00 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x563042b769d0 <col:36> '<bound member function type>' ->xanno 0x563042b60b98
|         |       `-CXXThisExpr 0x563042b769c0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x563042b76a50 <col:49> 'int' 0
|-CXXMethodDecl 0x563042b63058 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x563042b76ca8 <col:38, col:65>
|   `-ReturnStmt 0x563042b76c98 <col:40, col:62>
|     `-UnaryOperator 0x563042b76c80 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563042b76c60 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x563042b76c48 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563042b76bb8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x563042b6bcd8
|         |   `-CXXMemberCallExpr 0x563042b76b98 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563042b76b68 <col:48> '<bound member function type>' ->xanno 0x563042b609f8
|         |       `-CXXThisExpr 0x563042b76b58 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563042b76be8 <col:61> 'int' 0
|-CXXMethodDecl 0x563042b63208 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x563042b63110 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x563042b77378 <col:34, line:463:5>
|   |-ParenExpr 0x563042b771c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x563042b77190 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563042b76df8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b76dc8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b76d18 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b76d00 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b76cc0 <col:23> 'int' lvalue ParmVar 0x563042b63110 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b76ce0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b76da8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b76d78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b76d38 <col:33> 'int' lvalue ParmVar 0x563042b63110 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563042b76d90 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563042b76d58 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563042b76e58 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b76e38 <col:56> 'int' 0
|   |   `-CallExpr 0x563042b770f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563042b770d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b770b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b77130 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b76f48 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563042b77148 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b76f78 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b77160 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b76fb0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x563042b77178 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b770a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b77088 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b77048 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x563042b77368 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x563042b77350 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x563042b77330 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563042b77300 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563042b772b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x563042b6b9d8
|         |   `-CXXMemberCallExpr 0x563042b77290 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563042b77260 <col:9> '<bound member function type>' ->xanno 0x563042b609f8
|         |       `-CXXThisExpr 0x563042b77250 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x563042b77318 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x563042b772e0 <col:21> 'int' lvalue ParmVar 0x563042b63110 'i' 'int'
|-CXXMethodDecl 0x563042b63458 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x563042b632c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x563042b63340 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x563042b77a08 <col:40, line:472:5>
|   |-ParenExpr 0x563042b77820 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x563042b777f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563042b774d0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b774a0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b773f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b773d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b77398 <col:23> 'int' lvalue ParmVar 0x563042b632c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b773b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b77480 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b77450 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b77410 <col:33> 'int' lvalue ParmVar 0x563042b632c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563042b77468 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563042b77430 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563042b77530 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b77510 <col:56> 'int' 0
|   |   `-CallExpr 0x563042b77750 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563042b77738 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b77718 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b77790 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b775a0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563042b777a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b775d0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b777c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b77608 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x563042b777d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b77700 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b776e8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b776a8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x563042b779e8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x563042b77990 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x563042b77960 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x563042b77910 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x563042b6b9d8
|     | |   `-CXXMemberCallExpr 0x563042b778f0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x563042b778c0 <col:2> '<bound member function type>' ->xanno 0x563042b60b98
|     | |       `-CXXThisExpr 0x563042b778b0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x563042b77978 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563042b77940 <col:14> 'int' lvalue ParmVar 0x563042b632c8 'i' 'int'
|     `-ImplicitCastExpr 0x563042b779d0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x563042b779b0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x563042b63340 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x563042b63618 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x563042b63520 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563042b78188 <col:36, line:485:5>
|   |-ParenExpr 0x563042b77ef0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b77ec0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b77ba0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b77b70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b77a80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b77a68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b77a28 <col:23> 'int' lvalue ParmVar 0x563042b63520 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b77a48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b77b50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b77b38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b77aa0 <col:33> 'int' lvalue ParmVar 0x563042b63520 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b77b18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b77b00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b77ac0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b77ae0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563042b77c00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b77be0 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b77e20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b77e08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b77de8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b77e60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b77c70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563042b77e78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b77ca8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b77e90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b77ce0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x563042b77ea8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b77dd0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b77db8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b77d78 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x563042b78178 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x563042b78160 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x563042b78148 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563042b78118 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x563042b780b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563042b78088 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563042b78000 <col:61, col:70> 'char const[48]' lvalue ->c 0x563042b6b8b0
|             |   `-CXXMemberCallExpr 0x563042b77fe0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563042b77fb0 <col:61> '<bound member function type>' ->xanno 0x563042b609f8
|             |       `-CXXThisExpr 0x563042b77fa0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563042b780a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563042b78030 <col:74> 'int' lvalue ParmVar 0x563042b63520 'i' 'int'
|-CXXMethodDecl 0x563042b63868 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x563042b636d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563042b63750 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563042b788d8 <col:42, line:500:5>
|   |-ParenExpr 0x563042b78670 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b78640 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b78320 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b782f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b78200 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b781e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b781a8 <col:23> 'int' lvalue ParmVar 0x563042b636d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b781c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b782d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b782b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b78220 <col:33> 'int' lvalue ParmVar 0x563042b636d8 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b78298 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b78280 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b78240 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b78260 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563042b78380 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b78360 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b785a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b78588 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b78568 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b785e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b783f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563042b785f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b78428 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b78610 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b78460 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x563042b78628 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b78550 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b78538 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b784f8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x563042b788b8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x563042b78868 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563042b78838 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x563042b787e0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563042b787b0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563042b78760 <col:48, col:57> 'char [48]' lvalue ->c 0x563042b6b8b0
|     |     |   `-CXXMemberCallExpr 0x563042b78740 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563042b78710 <col:48> '<bound member function type>' ->xanno 0x563042b60b98
|     |     |       `-CXXThisExpr 0x563042b78700 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563042b787c8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563042b78790 <col:61> 'int' lvalue ParmVar 0x563042b636d8 'i' 'int'
|     `-ImplicitCastExpr 0x563042b788a0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563042b78880 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x563042b63750 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563042b63a28 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x563042b63930 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563042b79038 <col:35, line:513:5>
|   |-ParenExpr 0x563042b78d48 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b78d18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b78a70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b78a40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b78950 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b78938 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b788f8 <col:23> 'int' lvalue ParmVar 0x563042b63930 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b78918 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b78a20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b78a08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b78970 <col:33> 'int' lvalue ParmVar 0x563042b63930 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b789e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b789d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b78990 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b789b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563042b78ad0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b78ab0 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b78c78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b78c60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b78c40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b78cb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b78b40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563042b78cd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b78b78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b78ce8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b78bb0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x563042b78d00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b78c28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b78c10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b78bd0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x563042b79028 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x563042b79010 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x563042b78ff8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563042b78fc8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x563042b78f40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563042b78f10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563042b78ec0 <col:60, col:69> 'char const[48]' lvalue ->c 0x563042b6b8b0
|             |   `-CXXMemberCallExpr 0x563042b78ea0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563042b78e70 <col:60> '<bound member function type>' ->xanno 0x563042b609f8
|             |       `-CXXThisExpr 0x563042b78e60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563042b78f28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563042b78ef0 <col:73> 'int' lvalue ParmVar 0x563042b63930 'i' 'int'
|-CXXMethodDecl 0x563042b63c78 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x563042b63ae8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563042b63b60 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x563042b79758 <col:41, line:528:5>
|   |-ParenExpr 0x563042b794e0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b794b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b791d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b791a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b790b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b79098 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b79058 <col:23> 'int' lvalue ParmVar 0x563042b63ae8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b79078 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b79180 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b79168 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b790d0 <col:33> 'int' lvalue ParmVar 0x563042b63ae8 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b79148 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b79130 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b790f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b79110 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563042b79230 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b79210 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b79410 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b793f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b793d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b79450 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b792a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563042b79468 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b792d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b79480 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b79310 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x563042b79498 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b793c0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b793a8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b79368 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x563042b79738 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x563042b796e8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563042b796b8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x563042b79660 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563042b79620 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563042b795d0 <col:47, col:56> 'char [48]' lvalue ->c 0x563042b6b8b0
|     |     |   `-CXXMemberCallExpr 0x563042b795b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563042b79580 <col:47> '<bound member function type>' ->xanno 0x563042b60b98
|     |     |       `-CXXThisExpr 0x563042b79570 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563042b79638 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563042b79600 <col:60> 'int' lvalue ParmVar 0x563042b63ae8 'i' 'int'
|     `-ImplicitCastExpr 0x563042b79720 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x563042b79700 <col:65> 'int16_t':'short' lvalue ParmVar 0x563042b63b60 'x' 'int16_t':'short'
|-CXXMethodDecl 0x563042b63e38 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x563042b63d40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563042b79e28 <col:36, line:541:5>
|   |-ParenExpr 0x563042b79bc8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b79b98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b798f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b798c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b797d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b797b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b79778 <col:23> 'int' lvalue ParmVar 0x563042b63d40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b79798 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b798a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b79888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b797f0 <col:33> 'int' lvalue ParmVar 0x563042b63d40 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b79868 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b79850 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b79810 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b79830 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563042b79950 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b79930 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b79af8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b79ae0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b79ac0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b79b38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b799c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563042b79b50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b799f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b79b68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b79a30 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x563042b79b80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b79aa8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b79a90 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b79a50 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x563042b79e18 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x563042b79e00 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563042b79de8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563042b79db8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x563042b79d60 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563042b79d30 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563042b79ce0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563042b6b8b0
|             |   `-CXXMemberCallExpr 0x563042b79cc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563042b79c90 <col:61> '<bound member function type>' ->xanno 0x563042b609f8
|             |       `-CXXThisExpr 0x563042b79c80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563042b79d48 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563042b79d10 <col:74> 'int' lvalue ParmVar 0x563042b63d40 'i' 'int'
|-CXXMethodDecl 0x563042b64008 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x563042b63ef8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x563042b63f70 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563042b640b8 <col:20>
| `-OptimizeNoneAttr 0x563042b64110 <col:30>
|-CXXMethodDecl 0x563042b64248 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x563042b64150 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563042b7a4f8 <col:35, line:562:5>
|   |-ParenExpr 0x563042b7a298 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b7a268 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b79fc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b79f90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b79ea0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b79e88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b79e48 <col:23> 'int' lvalue ParmVar 0x563042b64150 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b79e68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b79f70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b79f58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b79ec0 <col:33> 'int' lvalue ParmVar 0x563042b64150 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b79f38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b79f20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b79ee0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b79f00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563042b7a020 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b7a000 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b7a1c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b7a1b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b7a190 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b7a208 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7a090 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563042b7a220 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7a0c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b7a238 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b7a100 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x563042b7a250 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b7a178 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b7a160 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b7a120 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x563042b7a4e8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x563042b7a4d0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x563042b7a4b8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563042b7a488 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x563042b7a430 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563042b7a400 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563042b7a3b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x563042b6b8b0
|             |   `-CXXMemberCallExpr 0x563042b7a390 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563042b7a360 <col:60> '<bound member function type>' ->xanno 0x563042b609f8
|             |       `-CXXThisExpr 0x563042b7a350 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563042b7a418 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563042b7a3e0 <col:73> 'int' lvalue ParmVar 0x563042b64150 'i' 'int'
|-CXXMethodDecl 0x563042b64458 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x563042b64308 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563042b64380 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x563042b7abd8 <col:41, line:577:5>
|   |-ParenExpr 0x563042b7a968 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b7a938 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b7a690 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b7a660 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b7a570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b7a558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b7a518 <col:23> 'int' lvalue ParmVar 0x563042b64308 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b7a538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b7a640 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b7a628 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b7a590 <col:33> 'int' lvalue ParmVar 0x563042b64308 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b7a608 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b7a5f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b7a5b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b7a5d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563042b7a6f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b7a6d0 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b7a898 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b7a880 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b7a860 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b7a8d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7a760 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563042b7a8f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7a798 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b7a908 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b7a7d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x563042b7a920 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b7a848 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b7a830 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b7a7f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x563042b7abb8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x563042b7ab68 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563042b7ab38 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x563042b7aad8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563042b7aaa8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563042b7aa58 <col:47, col:56> 'char [48]' lvalue ->c 0x563042b6b8b0
|     |     |   `-CXXMemberCallExpr 0x563042b7aa38 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563042b7aa08 <col:47> '<bound member function type>' ->xanno 0x563042b60b98
|     |     |       `-CXXThisExpr 0x563042b7a9f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563042b7aac0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563042b7aa88 <col:60> 'int' lvalue ParmVar 0x563042b64308 'i' 'int'
|     `-ImplicitCastExpr 0x563042b7aba0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x563042b7ab80 <col:65> 'int32_t':'int' lvalue ParmVar 0x563042b64380 'x' 'int32_t':'int'
|-CXXMethodDecl 0x563042b64618 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x563042b64520 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563042b7b308 <col:36, line:591:5>
|   |-ParenExpr 0x563042b7b048 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b7b018 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b7ad70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b7ad40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b7ac50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b7ac38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b7abf8 <col:23> 'int' lvalue ParmVar 0x563042b64520 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b7ac18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b7ad20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b7ad08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b7ac70 <col:33> 'int' lvalue ParmVar 0x563042b64520 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b7ace8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b7acd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b7ac90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b7acb0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563042b7add0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b7adb0 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b7af78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b7af60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b7af40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b7afb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7ae40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563042b7afd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7ae78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b7afe8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b7aeb0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x563042b7b000 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b7af28 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b7af10 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b7aed0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x563042b7b2f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x563042b7b2e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x563042b7b2c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563042b7b298 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x563042b7b210 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563042b7b1e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563042b7b190 <col:61, col:70> 'char const[48]' lvalue ->c 0x563042b6b8b0
|             |   `-CXXMemberCallExpr 0x563042b7b170 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563042b7b140 <col:61> '<bound member function type>' ->xanno 0x563042b609f8
|             |       `-CXXThisExpr 0x563042b7b130 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563042b7b1f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563042b7b1c0 <col:74> 'int' lvalue ParmVar 0x563042b64520 'i' 'int'
|-CXXMethodDecl 0x563042b64868 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x563042b646d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563042b64750 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x563042b7b9e8 <col:42, line:606:5>
|   |-ParenExpr 0x563042b7b778 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x563042b7b748 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563042b7b4a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b7b470 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b7b380 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b7b368 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b7b328 <col:23> 'int' lvalue ParmVar 0x563042b646d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b7b348 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b7b450 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563042b7b438 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b7b3a0 <col:33> 'int' lvalue ParmVar 0x563042b646d8 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b7b418 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b7b400 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b7b3c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563042b7b3e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563042b7b500 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b7b4e0 <col:60> 'int' 0
|   |   `-CallExpr 0x563042b7b6a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563042b7b690 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b7b670 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b7b6e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7b570 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563042b7b700 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7b5a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b7b718 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b7b5e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x563042b7b730 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b7b658 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b7b640 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b7b600 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x563042b7b9c8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x563042b7b978 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563042b7b948 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x563042b7b8e8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563042b7b8b8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563042b7b868 <col:48, col:57> 'char [48]' lvalue ->c 0x563042b6b8b0
|     |     |   `-CXXMemberCallExpr 0x563042b7b848 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563042b7b818 <col:48> '<bound member function type>' ->xanno 0x563042b60b98
|     |     |       `-CXXThisExpr 0x563042b7b808 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563042b7b8d0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563042b7b898 <col:61> 'int' lvalue ParmVar 0x563042b646d8 'i' 'int'
|     `-ImplicitCastExpr 0x563042b7b9b0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x563042b7b990 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x563042b64750 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x563042b64a00 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x563042b64930 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x563042b7c258 <col:33, line:620:5>
|   |-ParenExpr 0x563042b7bfd0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x563042b7bfa0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563042b7bbf0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b7bbc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b7ba60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b7ba48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b7ba08 <col:23> 'int' lvalue ParmVar 0x563042b64930 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b7ba28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b7bba0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563042b7bb88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b7ba80 <col:33> 'int' lvalue ParmVar 0x563042b64930 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b7bb68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b7bb50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b7baa0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563042b7bb28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563042b7bb10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563042b7bad8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563042b7bc50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b7bc30 <col:79> 'int' 0
|   |   `-CallExpr 0x563042b7bf00 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563042b7bee8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b7bec8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b7bf40 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7bd38 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563042b7bf58 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7bd80 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b7bf70 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b7bdb8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x563042b7bf88 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b7beb0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b7be98 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b7be58 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x563042b7c248 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x563042b7c230 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x563042b7c218 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563042b7c1e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x563042b7c160 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x563042b7c130 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563042b7c0e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x563042b6b8b0
|             |   `-CXXMemberCallExpr 0x563042b7c0c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563042b7c090 <col:67> '<bound member function type>' ->xanno 0x563042b609f8
|             |       `-CXXThisExpr 0x563042b7c080 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563042b7c148 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563042b7c110 <col:80> 'int' lvalue ParmVar 0x563042b64930 'i' 'int'
|-CXXMethodDecl 0x563042b64c18 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x563042b64ac0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563042b64b40 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x563042b7ca80 <col:45, line:635:5>
|   |-ParenExpr 0x563042b7c7c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x563042b7c798 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563042b7c460 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563042b7c430 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563042b7c2d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563042b7c2b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563042b7c278 <col:23> 'int' lvalue ParmVar 0x563042b64ac0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563042b7c298 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563042b7c410 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563042b7c3f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563042b7c2f0 <col:33> 'int' lvalue ParmVar 0x563042b64ac0 'i' 'int'
|   |   |     `-BinaryOperator 0x563042b7c3d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563042b7c3c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563042b7c310 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563042b60de0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563042b7c398 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563042b7c380 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563042b7c348 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563042b7c4c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563042b7c4a0 <col:79> 'int' 0
|   |   `-CallExpr 0x563042b7c6f8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563042b7c6e0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563042b7c6c0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563042b7c738 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7c530 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563042b7c750 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563042b7c578 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563042b7c768 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563042b7c5b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x563042b7c780 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563042b7c6a8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563042b7c690 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563042b7c648 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x563042b7ca60 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x563042b7c9c8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563042b7c998 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x563042b7c938 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563042b7c908 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563042b7c8b8 <col:54, col:63> 'char [48]' lvalue ->c 0x563042b6b8b0
|     |     |   `-CXXMemberCallExpr 0x563042b7c898 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563042b7c868 <col:54> '<bound member function type>' ->xanno 0x563042b60b98
|     |     |       `-CXXThisExpr 0x563042b7c858 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563042b7c920 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563042b7c8e8 <col:67> 'int' lvalue ParmVar 0x563042b64ac0 'i' 'int'
|     `-CXXConstCastExpr 0x563042b7ca30 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x563042b7ca18 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x563042b7c9e0 <col:91> 'const void *' lvalue ParmVar 0x563042b64b40 'x' 'const void *'
|-CXXMethodDecl 0x563042b64ce8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x563042b7cb08 <col:34, line:640:5>
|   `-ReturnStmt 0x563042b7caf8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x563042b7cae0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x563042b7cab0 <col:16> 'Packet *' lvalue ->_data_packet 0x563042b6c468
|         `-CXXThisExpr 0x563042b7caa0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563042b64e28 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x563042b64d98 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563042b75bc8 <col:46> 'bool' true
|-CXXMethodDecl 0x563042b64fa8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x563042b64ee0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x563042b65050 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x563042b65800 <line:660:22> "" ""
| |-EnumConstantDecl 0x563042b65150 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b65870 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b65130 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x563042b65110 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563042b5a2b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563042b651e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b65888 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b651c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x563042b651a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563042b5a340 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563042b65270 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b658a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b65250 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563042b65230 <col:21> 'int' 0
| |-EnumConstantDecl 0x563042b65300 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b658b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b652e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x563042b652c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x563042b65390 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b658d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b65370 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x563042b65350 <col:21> 'int' 16
| |-EnumConstantDecl 0x563042b65420 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b658e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b65400 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563042b653e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563042b654b0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b65900 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b65490 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x563042b65470 <col:19> 'int' EnumConstant 0x563042b65300 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563042b65540 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b65918 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b65520 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x563042b65500 <col:19> 'int' EnumConstant 0x563042b65420 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563042b65610 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b65930 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b655f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x563042b655d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563042b65590 <col:23> 'int' EnumConstant 0x563042b65540 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563042b655b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x563042b656e0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563042b65948 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563042b656c0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x563042b656a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563042b65660 <col:23> 'int' EnumConstant 0x563042b65540 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563042b65680 <col:40> 'int' 4
| `-EnumConstantDecl 0x563042b657b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x563042b65960 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042b65790 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x563042b65770 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x563042b65730 <col:23> 'int' EnumConstant 0x563042b65540 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x563042b65750 <col:40> 'int' 8
|-CXXMethodDecl 0x563042b659a0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x563042b65a40 <col:68> "" ""
|-CXXMethodDecl 0x563042b65ad8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x563042b65b78 <col:45> "" ""
|-CXXMethodDecl 0x563042b65c10 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563042b65cb0 <col:57> "" ""
|-CXXMethodDecl 0x563042b65d48 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x563042b65de8 <col:45> "" ""
|-CXXMethodDecl 0x563042b65e80 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563042b65f20 <col:57> "" ""
|-CXXMethodDecl 0x563042b65fb0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x563042b66050 <col:51> "" ""
|-CXXMethodDecl 0x563042b660e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563042b66180 <col:63> "" ""
|-CXXMethodDecl 0x563042b66210 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x563042b662b0 <col:53> "" ""
|-CXXMethodDecl 0x563042b66340 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563042b663e0 <col:65> "" ""
|-CXXMethodDecl 0x563042b664f8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563042b66468 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x563042b665a0 <col:61> "" ""
|-CXXMethodDecl 0x563042b66738 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563042b66628 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x563042b666a0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563042b667e8 <col:67> "" ""
|-CXXMethodDecl 0x563042b66900 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563042b66870 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563042b669a8 <col:63> "" ""
|-CXXMethodDecl 0x563042b66b40 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563042b66a30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563042b66aa8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563042b66bf0 <col:69> "" ""
|-CXXMethodDecl 0x563042b66d08 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563042b66c78 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563042b66db0 <col:63> "" ""
|-CXXMethodDecl 0x563042b69488 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563042b69378 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563042b693f0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563042b69538 <col:69> "" ""
|-CXXMethodDecl 0x563042b69650 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x563042b695c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x563042b696f8 <col:62> "" ""
|-CXXMethodDecl 0x563042b69890 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563042b69780 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563042b697f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x563042b69940 <col:68> "" ""
|-CXXMethodDecl 0x563042b69a58 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x563042b699c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563042b69b00 <col:63> "" ""
|-CXXMethodDecl 0x563042b69c98 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x563042b69b88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563042b69c00 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x563042b69d48 <col:69> "" ""
|-CXXMethodDecl 0x563042b69dd8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563042b69e78 <col:64> "" ""
|-CXXMethodDecl 0x563042b69f08 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x563042b69fa8 <col:52> "" ""
|-CXXMethodDecl 0x563042b6a038 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563042b6a0d8 <col:67> "" ""
|-CXXMethodDecl 0x563042b6a168 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x563042b6a208 <col:55> "" ""
|-CXXMethodDecl 0x563042b6a320 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563042b6a290 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563042b6a3c8 <col:58> "" ""
|-CXXMethodDecl 0x563042b6a560 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563042b6a450 <col:33> col:36 'int'
| |-ParmVarDecl 0x563042b6a4c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563042b6a610 <col:62> "" ""
|-CXXMethodDecl 0x563042b6a728 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x563042b6a698 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563042b6a7d0 <col:58> "" ""
|-CXXMethodDecl 0x563042b6a968 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x563042b6a858 <col:33> col:36 'int'
| |-ParmVarDecl 0x563042b6a8d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x563042b6aa18 <col:62> "" ""
|-CXXMethodDecl 0x563042b6ab30 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563042b6aaa0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x563042b6abd8 <col:60> "" ""
|-CXXMethodDecl 0x563042b6ad70 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563042b6ac60 <col:34> col:37 'int'
| |-ParmVarDecl 0x563042b6acd8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563042b6ae20 <col:64> "" ""
|-CXXMethodDecl 0x563042b6af38 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x563042b6aea8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563042b6afe0 <col:58> "" ""
|-CXXMethodDecl 0x563042b6b178 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563042b6b068 <col:33> col:36 'int'
| |-ParmVarDecl 0x563042b6b0e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x563042b6b228 <col:62> "" ""
|-CXXMethodDecl 0x563042b6b340 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563042b6b2b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x563042b6b3e8 <col:59> "" ""
|-CXXMethodDecl 0x563042b6b580 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563042b6b470 <col:33> col:36 'int'
| |-ParmVarDecl 0x563042b6b4e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563042b6b630 <col:63> "" ""
|-AccessSpecDecl 0x563042b6b6a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x563042b6b6c8 prev 0x563042b608d0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563042b6b7c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x563042b6b8b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x563042b6b9d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x563042b6bb58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x563042b6bcd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x563042b6be58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x563042b7cc88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563042b7d4f8 <col:11>
| |-CXXDestructorDecl 0x563042b7cd60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563042b7ce98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563042b7ce98
| | `-ParmVarDecl 0x563042b7cfa8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x563042b7d048 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563042b7d048
| | `-ParmVarDecl 0x563042b7d158 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x563042b7ff18 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563042b80028 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x563042b802a8 <col:11>
| |   `-ReturnStmt 0x563042b80298 <col:11>
| |     `-UnaryOperator 0x563042b80280 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563042b80270 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x563042b80098 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563042b80098
|   `-ParmVarDecl 0x563042b801a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x563042b6bec0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563042b6bfd8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x563042b6c078 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x563042b6c0e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x563042b6c148 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x563042b6c1b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x563042b6c210 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x563042b6c2d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x563042b6c330 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x563042b6c390 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x563042b7cb98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x563042b6c078 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x563042b7d508 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x563042b7d560 <col:12>
| |-CXXConstructorDecl 0x563042b7d1c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563042b7d1c8
| | `-ParmVarDecl 0x563042b7d2d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x563042b7d378 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563042b7d378
| | `-ParmVarDecl 0x563042b7d488 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x563042b7f600 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x563042b6c408 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x563042b6c468 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x563042b6c4d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x563042b6c538 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x563042b6c5a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x563042b6c608 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x563042b6c668 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x563042b6c6c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x563042b6c730 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x563042b6c7b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x563042b6c408 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x563042b7cb30 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563042b6c668 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x563042b7d570 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x563042b7d5d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x563042b6c958 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x563042b6c898 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x563042b6ca50 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x563042b6cc38 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x563042b6cb40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x563042b6cf08 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x563042b6ccf0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042b6cd68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563042b6cde0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b6d128 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x563042b6cfd8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x563042b6d050 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x563042b75708 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x563042b6d1e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x563042b6d260 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x563042b6d2d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x563042b75860 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563042b757d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b759a8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563042b75918 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x563042b75aa0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042b7d670 prev 0x563042b59f30 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x563042b7d7a8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x563042b7d838 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x563042b7d8e0 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x563042b7d980 <col:20>
| `-OptimizeNoneAttr 0x563042b7d9d8 <col:30>
|-CXXMethodDecl 0x563042b7da28 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x563042b7dac8 <col:20>
| `-OptimizeNoneAttr 0x563042b7db20 <col:30>
|-CXXMethodDecl 0x563042b7db70 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x563042b7dc38 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x563042b7dd00 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x563042b7de18 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x563042b7dee0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x563042b7df80 <col:20>
| `-OptimizeNoneAttr 0x563042b7dfd8 <col:30>
|-CXXMethodDecl 0x563042b7e048 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x563042b7e0e8 <col:20>
| `-OptimizeNoneAttr 0x563042b7e140 <col:30>
|-CXXMethodDecl 0x563042b7e1e8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x563042b7e288 <col:20>
| `-OptimizeNoneAttr 0x563042b7e2e0 <col:30>
|-CXXMethodDecl 0x563042b7e330 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x563042b7e448 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x563042b7e568 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x563042b7e688 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x563042b7e750 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x563042b7e7f0 <col:62> "" ""
|-AccessSpecDecl 0x563042b7e860 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x563042b7e8c0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x563042b7f4b8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x563042b7f6e0 <col:29, col:31>
|-CXXMethodDecl 0x563042b7e988 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x563042b7eac8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x563042b7ea38 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x563042b7ebc0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x563042b7f6f0 <col:23, col:25>
|-CXXMethodDecl 0x563042b7ed78 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x563042b7ecb0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x563042b7f048 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563042b7ee30 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563042b7eea8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563042b7ef20 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563042b7f1d8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x563042b7f110 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x563042b7f2d0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x563042b7f338 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x563042b7f338
  `-ParmVarDecl 0x563042b7f448 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >
         0 |   struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt * _element
         8 |   struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** _pprev
        16 |   HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >::bucket_count_type _bucket
        24 |   const HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable_const_iterator<struct Pair<const class IPFlowID, int> >
         0 |   class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |     struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt * _element
         8 |     struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** _pprev
        16 |     HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >::bucket_count_type _bucket
        24 |     const HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashTable_iterator<struct Pair<const class IPFlowID, int> >
         0 |   class HashTable_const_iterator<struct Pair<const class IPFlowID, int> > (base)
         0 |     class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > _rep
         0 |       struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt * _element
         8 |       struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** _pprev
        16 |       HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >::bucket_count_type _bucket
        24 |       const HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c3f1c0 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|-CXXRecordDecl 0x563042cc57f8 prev 0x563042c3f1c0 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x563042cc5888 <col:38, col:44> col:38 public
|-TypedefDecl 0x563042cc5a50 <line:304:5, col:53> col:53 size_type 'typename HashContainer<elt, HashContainer_adapter<elt> >::size_type':'unsigned long'
| `-ElaboratedType 0x563042cc5a00 'typename HashContainer<elt, HashContainer_adapter<elt> >::size_type' sugar
|   `-TypedefType 0x563042c3ed30 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::size_type' sugar
|     |-Typedef 0x563042c3e4f0 'size_type'
|     `-TypedefType 0x5630426d6950 'size_t' sugar
|       |-Typedef 0x5630426a1be0 'size_t'
|       `-BuiltinType 0x563042631640 'unsigned long'
|-TypedefDecl 0x563042cc5bf0 <line:305:5, col:61> col:61 bucket_count_type 'typename HashContainer<elt, HashContainer_adapter<elt> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x563042cc5ba0 'typename HashContainer<elt, HashContainer_adapter<elt> >::bucket_count_type' sugar
|   `-TypedefType 0x563042c3eed0 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type' sugar
|     |-Typedef 0x563042c3e548 'bucket_count_type'
|     `-TypedefType 0x563042786c00 'uint32_t' sugar
|       |-Typedef 0x56304269a4c8 'uint32_t'
|       `-TypedefType 0x5630426735a0 '__uint32_t' sugar
|         |-Typedef 0x563042673198 '__uint32_t'
|         `-BuiltinType 0x563042631620 'unsigned int'
|-CXXConstructorDecl 0x563042cc5c80 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x563042cc5de8 <line:312:5, line:314:5> line:312:8 get 'HashTable<Pair<const IPFlowID, int>, void>::elt *() const'
|-CXXMethodDecl 0x563042cc5eb8 <line:317:5, line:319:5> line:317:8 operator-> 'HashTable<Pair<const IPFlowID, int>, void>::elt *() const'
|-CXXMethodDecl 0x563042cc6018 <line:323:5, line:325:5> line:323:8 operator* 'HashTable<Pair<const IPFlowID, int>, void>::elt &() const'
|-CXXMethodDecl 0x563042cc60c8 <line:328:5, line:330:5> line:328:17 live 'bool () const' inline
|-TypedefDecl 0x563042cc6258 <line:332:5, col:73> col:48 unspecified_bool_type 'HashTable<Pair<const IPFlowID, int>, void>::elt *(HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::*)() const'
| `-MemberPointerType 0x563042cc61f0 'HashTable<Pair<const IPFlowID, int>, void>::elt *(HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::*)() const'
|   |-RecordType 0x563042c3f2c0 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|   | `-ClassTemplateSpecialization 0x563042c3f1c0 'HashContainer_const_iterator'
|   `-ParenType 0x563042cc6180 'HashTable<Pair<const IPFlowID, int>, void>::elt *() const' sugar
|     `-FunctionProtoType 0x563042cc5da0 'HashTable<Pair<const IPFlowID, int>, void>::elt *() const' const cdecl
|       `-PointerType 0x563042cc5d40 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
|         `-SubstTemplateTypeParmType 0x563042cc58b0 'HashTable<Pair<const IPFlowID, int>, void>::elt' sugar
|           |-TemplateTypeParmType 0x563042bd5740 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563042bd56e8 'T'
|           `-RecordType 0x563042c37600 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|             `-CXXRecord 0x563042c37570 'elt'
|-CXXConversionDecl 0x563042cc6370 <line:334:5, line:336:5> line:334:12 operator HashTable<Pair<const IPFlowID, int>, void>::elt *(HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::*)() const 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563042cc65c8 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *() const'
|-CXXMethodDecl 0x563042cc66e8 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type () const'
|-CXXMethodDecl 0x563042cc6798 <line:349:5, line:361:5> line:349:10 operator++ 'void ()'
|-CXXMethodDecl 0x563042cc68d8 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x563042cc6848 <col:21> col:24 'int'
|-AccessSpecDecl 0x563042cc6990 <line:368:3, col:10> col:3 private
|-FieldDecl 0x563042cc69c8 <line:370:5, col:8> col:8 referenced _element 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
|-FieldDecl 0x563042cc6a60 <line:371:5, col:9> col:9 referenced _pprev 'HashTable<Pair<const IPFlowID, int>, void>::elt **'
|-FieldDecl 0x563042cc6ac0 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x563042cc6c08 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
|-CXXConstructorDecl 0x563042cc6e68 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *)' inline
| `-ParmVarDecl 0x563042cc6d58 <col:41, col:68> col:68 hc 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
|-CXXConstructorDecl 0x563042cc72f8 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *, HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type, HashTable<Pair<const IPFlowID, int>, void>::elt **, HashTable<Pair<const IPFlowID, int>, void>::elt *)' inline
| |-ParmVarDecl 0x563042cc7028 <col:41, col:68> col:68 hc 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
| |-ParmVarDecl 0x563042cc70a0 <col:72, col:90> col:90 b 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x563042cc7120 <col:93, col:97> col:97 pprev 'HashTable<Pair<const IPFlowID, int>, void>::elt **'
| `-ParmVarDecl 0x563042cc7198 <col:104, col:107> col:107 element 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
|-FriendDecl 0x563042cc74d8 <line:392:5, col:36> col:12 'class HashContainer<elt, HashContainer_adapter<elt> >':'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-FriendDecl 0x563042cc7628 <line:393:5, col:45> col:12 'class HashContainer_iterator<elt, HashContainer_adapter<elt> >':'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-CXXDestructorDecl 0x563042ca8f30 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563042ca9038 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x563042ca9038
| `-ParmVarDecl 0x563042ca9118 <col:7> col:7 'const HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
`-CXXConstructorDecl 0x563042ca91b8 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563042ca92c8 <col:7> col:7 used 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x563042cc69c8 '_element' 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
  | `-ImplicitCastExpr 0x563042ca9cd0 <col:7> 'HashTable<Pair<const IPFlowID, int>, void>::elt *' <LValueToRValue>
  |   `-MemberExpr 0x563042ca9c88 <col:7> 'HashTable<Pair<const IPFlowID, int>, void>::elt *' xvalue ._element 0x563042cc69c8
  |     `-CXXStaticCastExpr 0x563042ca9c58 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042ca9c28 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' lvalue ParmVar 0x563042ca92c8 '' 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x563042cc6a60 '_pprev' 'HashTable<Pair<const IPFlowID, int>, void>::elt **'
  | `-ImplicitCastExpr 0x563042ca9db8 <col:7> 'HashTable<Pair<const IPFlowID, int>, void>::elt **' <LValueToRValue>
  |   `-MemberExpr 0x563042ca9d70 <col:7> 'HashTable<Pair<const IPFlowID, int>, void>::elt **' xvalue ._pprev 0x563042cc6a60
  |     `-CXXStaticCastExpr 0x563042ca9d40 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042ca9d10 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' lvalue ParmVar 0x563042ca92c8 '' 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x563042cc6ac0 '_bucket' 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type':'unsigned int'
  | `-ImplicitCastExpr 0x563042ca9ea0 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type':'unsigned int' <LValueToRValue>
  |   `-MemberExpr 0x563042ca9e58 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x563042cc6ac0
  |     `-CXXStaticCastExpr 0x563042ca9e28 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042ca9df8 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' lvalue ParmVar 0x563042ca92c8 '' 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  |-CXXCtorInitializer Field 0x563042cc6c08 '_hc' 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
  | `-ImplicitCastExpr 0x563042ca9f88 <col:7> 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' <LValueToRValue>
  |   `-MemberExpr 0x563042ca9f40 <col:7> 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' xvalue ._hc 0x563042cc6c08
  |     `-CXXStaticCastExpr 0x563042ca9f10 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue static_cast<class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042ca9ee0 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' lvalue ParmVar 0x563042ca92c8 '' 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  `-CompoundStmt 0x563042ca9fe8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"*, %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"*, %"struct.HashTable<Pair<const IPFlowID, int>, void>::elt"**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c45aa0 <../dummy_inc/click/hashtable.hh:449:1, line:522:1> line:450:7 class HashTable_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'Pair<const IPFlowID, int>'
|-CXXRecordDecl 0x563042cc4608 prev 0x563042c45aa0 <col:1, col:7> col:7 implicit class HashTable_const_iterator
|-AccessSpecDecl 0x563042cc4698 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x563042cc46f8 <line:453:5, line:454:5> line:453:5 HashTable_const_iterator 'void ()'
|-CXXMethodDecl 0x563042cc4948 <line:457:5, line:462:5> line:457:23 get 'const Pair<const IPFlowID, int> *() const'
|-CXXMethodDecl 0x563042cc4b38 <line:466:5, line:468:5> line:466:23 operator-> 'const Pair<const IPFlowID, int> *() const'
|-CXXMethodDecl 0x563042cc4d58 <line:472:5, line:474:5> line:472:23 operator* 'const Pair<const IPFlowID, int> &() const'
|-CXXMethodDecl 0x563042cc4e88 <line:479:5, line:481:5> line:479:14 key 'const IPFlowID &() const'
|-CXXMethodDecl 0x563042cc4fb8 <line:486:5, line:488:5> line:486:14 value 'const int &() const'
|-CXXMethodDecl 0x563042cc5068 <line:491:5, line:493:5> line:491:10 live 'bool () const'
|-TypedefDecl 0x563042cc51c8 <line:495:5, col:71> col:46 unspecified_bool_type 'bool (HashTable_const_iterator<Pair<const IPFlowID, int> >::*)() const'
| `-MemberPointerType 0x563042cc5160 'bool (HashTable_const_iterator<Pair<const IPFlowID, int> >::*)() const'
|   |-RecordType 0x563042c45b80 'HashTable_const_iterator<Pair<const IPFlowID, int> >'
|   | `-ClassTemplateSpecialization 0x563042c45aa0 'HashTable_const_iterator'
|   `-ParenType 0x563042c04280 'bool () const' sugar
|     `-FunctionProtoType 0x5630426d9690 'bool () const' const cdecl
|       `-BuiltinType 0x563042631500 'bool'
|-CXXConversionDecl 0x563042cc52e0 <line:497:5, line:499:5> line:497:12 operator bool (HashTable_const_iterator<Pair<const IPFlowID, int> >::*)() const 'HashTable_const_iterator<Pair<const IPFlowID, int> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563042cc5430 <line:502:5, line:504:5> line:502:10 operator++ 'void (int)'
| `-ParmVarDecl 0x563042cc53a0 <col:21> col:24 'int'
|-CXXMethodDecl 0x563042cc54e8 <line:507:5, line:509:5> line:507:10 operator++ 'void ()'
|-AccessSpecDecl 0x563042cc5598 <line:511:3, col:10> col:3 private
|-FieldDecl 0x563042cc7680 <line:513:5, col:63> col:63 referenced _rep 'typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-CXXConstructorDecl 0x563042cc7a18 <line:515:5, line:517:5> line:515:12 HashTable_const_iterator 'void (const typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator &)' inline
| `-ParmVarDecl 0x563042cc7900 <col:37, col:102> col:102 i 'const typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator &'
|-FriendDecl 0x563042cc7c50 <line:519:5, col:39> col:12 'class HashTable<Pair<const IPFlowID, int> >':'HashTable<Pair<const IPFlowID, int>, void>'
|-FriendDecl 0x563042cc7e00 <line:520:5, col:48> col:12 'class HashTable_iterator<Pair<const IPFlowID, int> >':'HashTable_iterator<Pair<const IPFlowID, int> >'
|-CXXDestructorDecl 0x563042ca8e50 <line:450:7> col:7 implicit ~HashTable_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563042ca9338 <col:7> col:7 implicit constexpr HashTable_const_iterator 'void (const HashTable_const_iterator<Pair<const IPFlowID, int> > &)' inline default trivial noexcept-unevaluated 0x563042ca9338
| `-ParmVarDecl 0x563042ca9448 <col:7> col:7 'const HashTable_const_iterator<Pair<const IPFlowID, int> > &'
`-CXXConstructorDecl 0x563042ca94e8 <col:7> col:7 implicit used constexpr HashTable_const_iterator 'void (HashTable_const_iterator<Pair<const IPFlowID, int> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563042ca95f8 <col:7> col:7 used 'HashTable_const_iterator<Pair<const IPFlowID, int> > &&'
  |-CXXCtorInitializer Field 0x563042cc7680 '_rep' 'typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
  | `-CXXConstructExpr 0x563042ca9ff8 <col:7> 'typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' 'void (HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&) noexcept'
  |   `-MemberExpr 0x563042ca9b80 <col:7> 'typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue ._rep 0x563042cc7680
  |     `-CXXStaticCastExpr 0x563042ca9b50 <col:7> 'HashTable_const_iterator<Pair<const IPFlowID, int> >' xvalue static_cast<class HashTable_const_iterator<struct Pair<const class IPFlowID, int> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042ca9b20 <col:7> 'HashTable_const_iterator<Pair<const IPFlowID, int> >' lvalue ParmVar 0x563042ca95f8 '' 'HashTable_const_iterator<Pair<const IPFlowID, int> > &&'
  `-CompoundStmt 0x563042caa058 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashTable_const_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashTable_const_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c45c78 <../dummy_inc/click/hashtable.hh:526:1, line:566:1> line:527:7 class HashTable_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >'
|-TemplateArgument type 'Pair<const IPFlowID, int>'
|-CXXRecordDecl 0x563042cc7e88 prev 0x563042c45c78 <col:1, col:7> col:7 implicit class HashTable_iterator
|-AccessSpecDecl 0x563042cc7f18 <col:88, col:94> col:88 public
|-TypedefDecl 0x563042cc8070 <line:529:5, col:51> col:51 inherited 'HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >'
| `-TemplateSpecializationType 0x563042cc8000 'HashTable_const_iterator<Pair<const IPFlowID, int> >' sugar HashTable_const_iterator
|   |-TemplateArgument type 'Pair<const IPFlowID, int>':'Pair<const IPFlowID, int>'
|   `-RecordType 0x563042c45b80 'HashTable_const_iterator<Pair<const IPFlowID, int> >'
|     `-ClassTemplateSpecialization 0x563042c45aa0 'HashTable_const_iterator'
|-CXXConstructorDecl 0x563042cc8100 <line:532:5, line:533:5> line:532:5 HashTable_iterator 'void ()'
|-CXXMethodDecl 0x563042ca81a0 <line:536:5, line:538:5> line:536:17 get 'Pair<const IPFlowID, int> *() const'
|-CXXMethodDecl 0x563042ca8388 <line:541:5, line:543:5> line:541:24 operator-> 'Pair<const IPFlowID, int> *() const' inline
|-CXXMethodDecl 0x563042ca85a8 <line:547:5, line:549:5> line:547:24 operator* 'Pair<const IPFlowID, int> &() const' inline
|-CXXMethodDecl 0x563042ca8708 <line:554:5, line:556:5> line:554:8 used value 'int &() const'
|-AccessSpecDecl 0x563042ca87b8 <line:558:3, col:10> col:3 private
|-CXXConstructorDecl 0x563042ca8ac8 <line:560:5, line:562:5> line:560:12 HashTable_iterator 'void (const typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator &)' inline
| `-ParmVarDecl 0x563042ca89e0 <col:31, col:96> col:96 i 'const typename HashTable<Pair<const IPFlowID, int> >::rep_type::const_iterator &'
|-FriendDecl 0x563042ca8d00 <line:564:5, col:39> col:12 'class HashTable<Pair<const IPFlowID, int> >':'HashTable<Pair<const IPFlowID, int>, void>'
|-CXXDestructorDecl 0x563042ca8d70 <line:527:7> col:7 implicit referenced ~HashTable_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563042ca9668 <col:7> col:7 implicit constexpr HashTable_iterator 'void (const HashTable_iterator<Pair<const IPFlowID, int> > &)' inline default trivial noexcept-unevaluated 0x563042ca9668
| `-ParmVarDecl 0x563042ca9778 <col:7> col:7 'const HashTable_iterator<Pair<const IPFlowID, int> > &'
`-CXXConstructorDecl 0x563042ca9818 <col:7> col:7 implicit used constexpr HashTable_iterator 'void (HashTable_iterator<Pair<const IPFlowID, int> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563042ca9928 <col:7> col:7 used 'HashTable_iterator<Pair<const IPFlowID, int> > &&'
  |-CXXCtorInitializer 'HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >'
  | `-CXXConstructExpr 0x563042caa068 <col:7> 'HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >' 'void (HashTable_const_iterator<Pair<const IPFlowID, int> > &&) noexcept'
  |   `-ImplicitCastExpr 0x563042ca9b00 <col:7> 'HashTable_const_iterator<Pair<const IPFlowID, int> >':'HashTable_const_iterator<Pair<const IPFlowID, int> >' xvalue <UncheckedDerivedToBase (HashTable_const_iterator)>
  |     `-CXXStaticCastExpr 0x563042ca9ad0 <col:7> 'HashTable_iterator<Pair<const IPFlowID, int> >' xvalue static_cast<class HashTable_iterator<struct Pair<const class IPFlowID, int> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042ca9aa0 <col:7> 'HashTable_iterator<Pair<const IPFlowID, int> >' lvalue ParmVar 0x563042ca9928 '' 'HashTable_iterator<Pair<const IPFlowID, int> > &&'
  `-CompoundStmt 0x563042caa160 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashTable_iterator = type { %class.HashTable_const_iterator }
  NonVirtualBaseLLVMType:%class.HashTable_iterator = type { %class.HashTable_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563042965ec0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563042965fd8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x563042966078 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5630429660d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x563042966138 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5630429661e8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5630429664f0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563042966608 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5630429666b0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x563042966718 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5630429667a8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56304296c840 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56304296cc78 <col:12>
|-CXXConstructorDecl 0x56304296c948 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56304296ca58 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5630429666b0 'data' 'const char *'
| | `-ImplicitCastExpr 0x56304296f200 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56304296f1d0 <col:12> 'const char *const' lvalue .data 0x5630429666b0
| |     `-DeclRefExpr 0x56304296f1b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304296ca58 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563042966718 'length' 'int'
| | `-ImplicitCastExpr 0x56304296f290 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56304296f260 <col:12> 'const int' lvalue .length 0x563042966718
| |     `-DeclRefExpr 0x56304296f240 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304296ca58 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5630429667a8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56304296f320 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56304296f2f0 <col:12> 'String::memo_t *const' lvalue .memo 0x5630429667a8
| |     `-DeclRefExpr 0x56304296f2d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304296ca58 '' 'const String::rep_t &'
| `-CompoundStmt 0x56304296f378 <col:12>
|-CXXConstructorDecl 0x56304296caf8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56304296caf8
| `-ParmVarDecl 0x56304296cc08 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x563042972160 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56304297db78 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56304297dc88 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56304297e1a0 <col:12>
|   |-BinaryOperator 0x56304297dfb8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56304297df70 <col:12> 'const char *' lvalue ->data 0x5630429666b0
|   | | `-CXXThisExpr 0x56304297df60 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56304297dfa0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56304297df30 <col:12> 'const char *const' lvalue .data 0x5630429666b0
|   |     `-DeclRefExpr 0x56304297df10 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304297dc88 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56304297e080 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56304297e038 <col:12> 'int' lvalue ->length 0x563042966718
|   | | `-CXXThisExpr 0x56304297e028 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56304297e068 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56304297dff8 <col:12> 'const int' lvalue .length 0x563042966718
|   |     `-DeclRefExpr 0x56304297dfd8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304297dc88 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56304297e148 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56304297e100 <col:12> 'String::memo_t *' lvalue ->memo 0x5630429667a8
|   | | `-CXXThisExpr 0x56304297e0f0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56304297e130 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56304297e0c0 <col:12> 'String::memo_t *const' lvalue .memo 0x5630429667a8
|   |     `-DeclRefExpr 0x56304297e0a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304297dc88 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56304297e190 <col:12>
|     `-UnaryOperator 0x56304297e178 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56304297e168 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56304297dcf8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56304297dcf8
  `-ParmVarDecl 0x56304297de08 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56304295d430 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56304295d548 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56304295d5d8 <col:16, col:22> col:16 public
|-TypedefDecl 0x56304295d618 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x563042631fd0 'const char *'
|   `-QualType 0x563042631521 'const char' const
|     `-BuiltinType 0x563042631520 'char'
|-TypedefDecl 0x56304295d6a0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56304295d670 'String::const_iterator' sugar
|   |-Typedef 0x56304295d618 'const_iterator'
|   `-PointerType 0x563042631fd0 'const char *'
|     `-QualType 0x563042631521 'const char' const
|       `-BuiltinType 0x563042631520 'char'
|-TypedefDecl 0x56304295d810 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56304295d780 'int (String::*)() const'
|   |-RecordType 0x56304295d4c0 'String'
|   | `-CXXRecord 0x56304295d430 'String'
|   `-ParenType 0x56304295d720 'int () const' sugar
|     `-FunctionProtoType 0x5630429322c0 'int () const' const cdecl
|       `-BuiltinType 0x563042631580 'int'
|-TypedefDecl 0x56304295d878 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x563042786ea0 'int64_t' sugar
|   |-Typedef 0x56304269a390 'int64_t'
|   `-TypedefType 0x563042673630 '__int64_t' sugar
|     |-Typedef 0x563042673208 '__int64_t'
|     `-BuiltinType 0x5630426315a0 'long'
|-TypedefDecl 0x56304295d8e0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x563042786dc0 'uint64_t' sugar
|   |-Typedef 0x56304269a530 'uint64_t'
|   `-TypedefType 0x5630426736c0 '__uint64_t' sugar
|     |-Typedef 0x563042673278 '__uint64_t'
|     `-BuiltinType 0x563042631640 'unsigned long'
|-TypedefDecl 0x56304295d970 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56304295d940 'String::intmax_t' sugar
|   |-Typedef 0x56304295d878 'intmax_t'
|   `-TypedefType 0x563042786ea0 'int64_t' sugar
|     |-Typedef 0x56304269a390 'int64_t'
|     `-TypedefType 0x563042673630 '__int64_t' sugar
|       |-Typedef 0x563042673208 '__int64_t'
|       `-BuiltinType 0x5630426315a0 'long'
|-TypedefDecl 0x56304295da00 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56304295d9d0 'String::uintmax_t' sugar
|   |-Typedef 0x56304295d8e0 'uintmax_t'
|   `-TypedefType 0x563042786dc0 'uint64_t' sugar
|     |-Typedef 0x56304269a530 'uint64_t'
|     `-TypedefType 0x5630426736c0 '__uint64_t' sugar
|       |-Typedef 0x563042673278 '__uint64_t'
|       `-BuiltinType 0x563042631640 'unsigned long'
|-CXXConstructorDecl 0x56304295dac0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56304295dc68 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56304295dba8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56304295de18 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56304295dd58 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56304295df70 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56304295dee0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56304295e188 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56304295e038 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56304295e0b8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56304295e3a8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56304295e258 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56304295e2d8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56304295e5c8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56304295e478 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56304295e4f8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56304295e7e8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56304295e698 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56304295e718 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56304295e978 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56304295e8b0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56304295eaf8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56304295ea38 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56304295ec88 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56304295ebc0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56304295ede0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56304295ed50 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56304295ef38 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56304295eea8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56304295f090 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56304295f000 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56304295f218 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56304295f158 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56304295f3a8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56304295f2e0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56304295f538 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56304295f470 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56304295f6c8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56304295f600 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56304295f7c0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56304295f8e8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56304295fa68 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56304295f9a0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56304295fbb8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56304295fb28 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56304295fc70 <col:63> "" ""
|-CXXMethodDecl 0x56304295fdb8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56304295fcf8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56304295ffc8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56304295fe78 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56304295fef8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5630429601e8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x563042960090 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x563042960110 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5630429604c8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5630429602a8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x563042960328 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56304296c310 <col:55> 'int' 10
| `-ParmVarDecl 0x5630429603a0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56304296c330 <col:76> 'bool' true
|-CXXMethodDecl 0x5630429607a8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x563042960590 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x563042960610 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56304296c340 <col:56> 'int' 10
| `-ParmVarDecl 0x563042960688 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56304296c360 <col:77> 'bool' true
|-CXXMethodDecl 0x5630429608b0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x563042960978 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x563042960a40 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x563042960ae0 <col:20>
| `-OptimizeNoneAttr 0x563042960b38 <col:30>
|-CXXConversionDecl 0x563042960c28 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563042960cf8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563042960db8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x563042960ea8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563042960f68 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5630429610e8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x563042961020 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x563042961238 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5630429611a8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x563042961328 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5630429613e8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x563042961638 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5630429614a0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x563042961520 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x563042961898 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x563042961700 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x563042961780 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x563042961968 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563042961b78 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x563042961a20 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x563042961aa0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x563042961d98 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x563042961c40 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x563042961cc0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x563042961f28 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x563042961e60 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x563042962018 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x563042962188 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5630429620c8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563042962398 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x563042962248 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5630429622c8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5630429625b0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x563042962458 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5630429624d0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x563042962740 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x563042962670 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563042962960 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x563042962800 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x563042962880 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563042962ab0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x563042962a20 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x563042962c88 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x563042962b70 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563042962bf0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x563042962dd8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x563042962d48 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x563042962ff0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x563042962e90 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x563042962f10 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56304296c370 <col:39> 'int' 0
|-CXXMethodDecl 0x563042963210 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5630429630b0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x563042963130 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56304296c390 <col:48> 'int' 0
|-CXXMethodDecl 0x5630429633f0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5630429632d0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x563042963350 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56304296c3b0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5630429634c0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x563042963580 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x563042963640 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x563042963700 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5630429637c0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x563042963968 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x563042963870 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x563042963ae8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x563042963a20 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x563042963cc0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x563042963ba8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x563042963e38 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x563042963d78 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x563042963f80 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x563042963ef0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5630429640d0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x563042964040 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5630429642a8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x563042964190 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563042964210 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563042964488 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563042964370 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5630429643f0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5630429645d8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x563042964548 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5630429647e8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x563042964698 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x563042964718 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x563042964948 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5630429648b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563042964aa0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x563042964a08 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x563042964b48 <col:57> "" ""
|-CXXMethodDecl 0x563042964c58 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x563042964bc8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x563042964da8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x563042964d18 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x563042964f28 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x563042964e60 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x563042964ff0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5630429650b0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x563042965170 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x563042965210 <col:49> "" ""
|-CXXMethodDecl 0x5630429652a0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x563042965360 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x563042965450 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x563042965518 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5630429655d8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x563042965698 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x563042965790 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x563042965858 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x563042965920 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x563042965af8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5630429659d8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x563042965a58 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x563042965d20 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x563042965bc0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x563042965c40 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x563042965e30 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x563042965e98 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x563042965ec0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563042965fd8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x563042966078 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5630429660d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x563042966138 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5630429661e8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x563042966250 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x563042966488 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5630429664d8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563042966468 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x563042966378 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x563042966320 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x563042966360 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x563042966340 <col:32> 'int' 8
|-CXXRecordDecl 0x5630429664f0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563042966608 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5630429666b0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x563042966718 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5630429667a8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56304296c840 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56304296cc78 <col:12>
| |-CXXConstructorDecl 0x56304296c948 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56304296ca58 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5630429666b0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56304296f200 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56304296f1d0 <col:12> 'const char *const' lvalue .data 0x5630429666b0
| | |     `-DeclRefExpr 0x56304296f1b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304296ca58 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563042966718 'length' 'int'
| | | `-ImplicitCastExpr 0x56304296f290 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56304296f260 <col:12> 'const int' lvalue .length 0x563042966718
| | |     `-DeclRefExpr 0x56304296f240 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304296ca58 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5630429667a8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56304296f320 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56304296f2f0 <col:12> 'String::memo_t *const' lvalue .memo 0x5630429667a8
| | |     `-DeclRefExpr 0x56304296f2d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304296ca58 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56304296f378 <col:12>
| |-CXXConstructorDecl 0x56304296caf8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56304296caf8
| | `-ParmVarDecl 0x56304296cc08 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x563042972160 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56304297db78 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56304297dc88 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56304297e1a0 <col:12>
| |   |-BinaryOperator 0x56304297dfb8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56304297df70 <col:12> 'const char *' lvalue ->data 0x5630429666b0
| |   | | `-CXXThisExpr 0x56304297df60 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56304297dfa0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56304297df30 <col:12> 'const char *const' lvalue .data 0x5630429666b0
| |   |     `-DeclRefExpr 0x56304297df10 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304297dc88 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56304297e080 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56304297e038 <col:12> 'int' lvalue ->length 0x563042966718
| |   | | `-CXXThisExpr 0x56304297e028 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56304297e068 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56304297dff8 <col:12> 'const int' lvalue .length 0x563042966718
| |   |     `-DeclRefExpr 0x56304297dfd8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304297dc88 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56304297e148 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56304297e100 <col:12> 'String::memo_t *' lvalue ->memo 0x5630429667a8
| |   | | `-CXXThisExpr 0x56304297e0f0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56304297e130 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56304297e0c0 <col:12> 'String::memo_t *const' lvalue .memo 0x5630429667a8
| |   |     `-DeclRefExpr 0x56304297e0a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56304297dc88 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56304297e190 <col:12>
| |     `-UnaryOperator 0x56304297e178 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56304297e168 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56304297dcf8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56304297dcf8
|   `-ParmVarDecl 0x56304297de08 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x563042966820 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x563042966a68 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x563042966888 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x563042966908 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x563042966980 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56304296c800 <col:79, line:261:5>
|   |-BinaryOperator 0x56304296c478 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56304296c410 <col:2, col:5> 'const char *' lvalue .data 0x5630429666b0
|   | | `-MemberExpr 0x56304296c3e0 <col:2> 'String::rep_t' lvalue ->_r 0x563042966820
|   | |   `-CXXThisExpr 0x56304296c3d0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56304296c460 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56304296c440 <col:12> 'const char *' lvalue ParmVar 0x563042966888 'data' 'const char *'
|   |-BinaryOperator 0x56304296c540 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56304296c4d8 <col:2, col:5> 'int' lvalue .length 0x563042966718
|   | | `-MemberExpr 0x56304296c4a8 <col:2> 'String::rep_t' lvalue ->_r 0x563042966820
|   | |   `-CXXThisExpr 0x56304296c498 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56304296c528 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56304296c508 <col:14> 'int' lvalue ParmVar 0x563042966908 'length' 'int'
|   `-IfStmt 0x56304296c7e8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56304296c660 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56304296c648 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56304296c628 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56304296c608 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56304296c5a0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5630429667a8
|     |       | `-MemberExpr 0x56304296c570 <col:7> 'String::rep_t' lvalue ->_r 0x563042966820
|     |       |   `-CXXThisExpr 0x56304296c560 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56304296c5f0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56304296c5d0 <col:17> 'String::memo_t *' lvalue ParmVar 0x563042966980 'memo' 'String::memo_t *'
|     `-CallExpr 0x56304296c7c0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56304296c7a8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56304296c6b0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x563042955498 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56304296c718 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563042966078
|         `-ImplicitCastExpr 0x56304296c700 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56304296c6e0 <col:27> 'String::memo_t *' lvalue ParmVar 0x563042966980 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x563042966d18 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x563042966b38 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x563042966bb8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x563042966c30 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x563042966820 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56304296cc88 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56304296ce18 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56304296cd80 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56304296ccf0 <col:2> '<bound member function type>' ->assign_memo 0x563042966a68
|     | `-ImplicitCastExpr 0x56304296cdb8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56304296cce0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56304296cdd0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56304296cd20 <col:14> 'const char *' lvalue ParmVar 0x563042966b38 'data' 'const char *'
|     |-ImplicitCastExpr 0x56304296cde8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56304296cd40 <col:20> 'int' lvalue ParmVar 0x563042966bb8 'length' 'int'
|     `-ImplicitCastExpr 0x56304296ce00 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56304296cd60 <col:28> 'String::memo_t *' lvalue ParmVar 0x563042966c30 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x563042966ea8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x563042966de8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56304296d070 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56304296cff0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56304296ce40 <col:2> '<bound member function type>' ->assign_memo 0x563042966a68
|     | `-CXXThisExpr 0x56304296ce30 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56304296d028 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56304296cec0 <col:14, col:19> 'const char *' lvalue .data 0x5630429666b0
|     |   `-MemberExpr 0x56304296ce90 <col:14, col:16> 'String::rep_t' lvalue ._r 0x563042966820
|     |     `-DeclRefExpr 0x56304296ce70 <col:14> 'const String' lvalue ParmVar 0x563042966de8 'x' 'const String &'
|     |-ImplicitCastExpr 0x56304296d040 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56304296cf40 <col:25, col:30> 'int' lvalue .length 0x563042966718
|     |   `-MemberExpr 0x56304296cf10 <col:25, col:27> 'String::rep_t' lvalue ._r 0x563042966820
|     |     `-DeclRefExpr 0x56304296cef0 <col:25> 'const String' lvalue ParmVar 0x563042966de8 'x' 'const String &'
|     `-ImplicitCastExpr 0x56304296d058 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56304296cfc0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5630429667a8
|         `-MemberExpr 0x56304296cf90 <col:38, col:40> 'String::rep_t' lvalue ._r 0x563042966820
|           `-DeclRefExpr 0x56304296cf70 <col:38> 'const String' lvalue ParmVar 0x563042966de8 'x' 'const String &'
|-CXXMethodDecl 0x563042966f70 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56304296da30 <col:31, line:278:5>
|   `-IfStmt 0x56304296da18 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56304296d110 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56304296d0f8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56304296d0c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5630429667a8
|     |     `-MemberExpr 0x56304296d098 <col:6> 'String::rep_t' lvalue ->_r 0x563042966820
|     |       `-CXXThisExpr 0x56304296d088 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56304296d9f0 <col:15, line:277:2>
|       |-ParenExpr 0x56304296d5c0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56304296d590 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56304296d220 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56304296d208 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56304296d1f0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56304296d1b0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563042966078
|       |   |       `-ImplicitCastExpr 0x56304296d198 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56304296d168 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5630429667a8
|       |   |           `-MemberExpr 0x56304296d138 <col:27> 'String::rep_t' lvalue ->_r 0x563042966820
|       |   |             `-CXXThisExpr 0x56304296d128 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56304296d280 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56304296d260 <col:54> 'int' 0
|       |   `-CallExpr 0x56304296d4f0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56304296d4d8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56304296d458 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5630426cd6b0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56304296d530 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56304296d368 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56304296d548 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56304296d398 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56304296d560 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56304296d3d0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56304296d578 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56304296d440 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56304296d428 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56304296d3f0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56304296d910 <line:274:6, line:275:22>
|       | |-CallExpr 0x56304296d7d0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56304296d7b8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56304296d730 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5630429568e0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56304296d700 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563042966078
|       | |   `-ImplicitCastExpr 0x56304296d6e8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56304296d6b8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5630429667a8
|       | |       `-MemberExpr 0x56304296d688 <col:40> 'String::rep_t' lvalue ->_r 0x563042966820
|       | |         `-CXXThisExpr 0x56304296d678 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56304296d8d0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56304296d8b8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56304296d7f8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56304296b750 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56304296d8f8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56304296d858 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5630429667a8
|       |       `-MemberExpr 0x56304296d828 <col:15> 'String::rep_t' lvalue ->_r 0x563042966820
|       |         `-CXXThisExpr 0x56304296d818 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56304296d9d0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56304296d968 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5630429667a8
|         | `-MemberExpr 0x56304296d938 <col:6> 'String::rep_t' lvalue ->_r 0x563042966820
|         |   `-CXXThisExpr 0x56304296d928 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56304296d9b8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56304296d998 <col:16> 'int' 0
|-CXXMethodDecl 0x563042967208 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x563042967028 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5630429670a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563042967120 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5630429672e0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x563042967530 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x563042967398 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563042967418 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563042967490 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x563042967718 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x563042967600 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x563042967680 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x563042967818 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56304296db08 <col:41, line:286:5>
|   `-ReturnStmt 0x56304296daf8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56304296dac8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56304296da90 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56304296da78 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56304296da58 <col:46> 'int' 1
|-CXXMethodDecl 0x563042967ab8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5630429678d0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x563042967950 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5630429679d0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56304296b750 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x563042967b80 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56304296b820 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56304296b9f0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56304296b8d8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56304296b958 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56304296bab0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56304296bb78 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56304296bc78 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56304296bcf0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56304296bd68 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56304296bdd0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56304296bed0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56304296bf20 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56304296beb0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56304296be90 <col:22> 'int' 14
|-CXXMethodDecl 0x56304296c138 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56304296bf50 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56304296bfd0 <col:38> col:41 'int'
| `-ParmVarDecl 0x56304296c050 <col:43> col:46 'int'
|-FriendDecl 0x56304296c240 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56304296c2d0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >
         0 |   class HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > (base)
         0 |     struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt * _element
         8 |     struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt ** _pprev
        16 |     HashContainer_const_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> >::bucket_count_type _bucket
        24 |     const HashContainer<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563042c3f3f8 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt'
|-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|-CXXRecordDecl 0x563042cadfc0 prev 0x563042c3f3f8 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x563042cae050 <col:76, col:82> col:76 public
|-TypedefDecl 0x563042cae140 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
| `-TemplateSpecializationType 0x563042cae0a0 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'HashTable<Pair<const IPFlowID, int>, void>::elt':'HashTable<Pair<const IPFlowID, int>, void>::elt'
|   |-TemplateArgument type 'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>':'HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt>'
|   `-RecordType 0x563042c3f2c0 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|     `-ClassTemplateSpecialization 0x563042c3f1c0 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x563042cae1d0 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x563042cae288 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x563042cae4a8 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *() const'
|-AccessSpecDecl 0x563042cae558 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x563042cae788 <line:425:5, line:427:5> line:425:12 used HashContainer_iterator 'void (HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *)' inline
| |-ParmVarDecl 0x563042cae678 <col:35, col:56> col:56 used hc 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
| |-CXXCtorInitializer 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::inherited':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
| | `-CXXConstructExpr 0x563042cafe88 <line:426:4, col:16> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' 'void (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *)'
| |   `-ImplicitCastExpr 0x563042cafe70 <col:14> 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' <NoOp>
| |     `-ImplicitCastExpr 0x563042cafe58 <col:14> 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' <LValueToRValue>
| |       `-DeclRefExpr 0x563042cafdd8 <col:14> 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' lvalue ParmVar 0x563042cae678 'hc' 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
| `-CompoundStmt 0x563042be0820 <col:18, line:427:5>
|-CXXConstructorDecl 0x563042caed18 <line:429:5, line:431:5> line:429:12 used HashContainer_iterator 'void (HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *, typename inherited::bucket_count_type, HashTable<Pair<const IPFlowID, int>, void>::elt **, HashTable<Pair<const IPFlowID, int>, void>::elt *)' inline
| |-ParmVarDecl 0x563042cae948 <col:35, col:56> col:56 used hc 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
| |-ParmVarDecl 0x563042caea60 <col:60, col:98> col:98 used b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x563042caeb40 <col:101, col:105> col:105 used pprev 'HashTable<Pair<const IPFlowID, int>, void>::elt **'
| |-ParmVarDecl 0x563042caebb8 <col:112, col:115> col:115 used element 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
| |-CXXCtorInitializer 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::inherited':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
| | `-CXXConstructExpr 0x563042cdbaf8 <line:430:4, col:35> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' 'void (const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *, HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >::bucket_count_type, HashTable<Pair<const IPFlowID, int>, void>::elt **, HashTable<Pair<const IPFlowID, int>, void>::elt *)'
| |   |-ImplicitCastExpr 0x563042cdba98 <col:14> 'const HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' <NoOp>
| |   | `-ImplicitCastExpr 0x563042cdba80 <col:14> 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' <LValueToRValue>
| |   |   `-DeclRefExpr 0x563042cdb9b8 <col:14> 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *' lvalue ParmVar 0x563042cae948 'hc' 'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > *'
| |   |-ImplicitCastExpr 0x563042cdbab0 <col:18> 'typename inherited::bucket_count_type':'unsigned int' <LValueToRValue>
| |   | `-DeclRefExpr 0x563042cdb9d8 <col:18> 'typename inherited::bucket_count_type':'unsigned int' lvalue ParmVar 0x563042caea60 'b' 'typename inherited::bucket_count_type':'unsigned int'
| |   |-ImplicitCastExpr 0x563042cdbac8 <col:21> 'HashTable<Pair<const IPFlowID, int>, void>::elt **' <LValueToRValue>
| |   | `-DeclRefExpr 0x563042cdb9f8 <col:21> 'HashTable<Pair<const IPFlowID, int>, void>::elt **' lvalue ParmVar 0x563042caeb40 'pprev' 'HashTable<Pair<const IPFlowID, int>, void>::elt **'
| |   `-ImplicitCastExpr 0x563042cdbae0 <col:28> 'HashTable<Pair<const IPFlowID, int>, void>::elt *' <LValueToRValue>
| |     `-DeclRefExpr 0x563042cdba18 <col:28> 'HashTable<Pair<const IPFlowID, int>, void>::elt *' lvalue ParmVar 0x563042caebb8 'element' 'HashTable<Pair<const IPFlowID, int>, void>::elt *'
| `-CompoundStmt 0x563042be0928 <col:37, line:431:5>
|-FriendDecl 0x563042caeef8 <line:433:5, col:36> col:12 'class HashContainer<elt, HashContainer_adapter<elt> >':'HashContainer<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
|-CXXDestructorDecl 0x563042caef50 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563042caf058 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &)' inline default trivial noexcept-unevaluated 0x563042caf058
| `-ParmVarDecl 0x563042caf168 <col:7> col:7 'const HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &'
`-CXXConstructorDecl 0x563042caf208 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x563042caf318 <col:7> col:7 used 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  |-CXXCtorInitializer 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >'
  | `-CXXConstructExpr 0x563042caf460 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' 'void (HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&) noexcept'
  |   `-ImplicitCastExpr 0x563042caf440 <col:7> 'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >':'HashContainer_const_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
  |     `-CXXStaticCastExpr 0x563042caf410 <col:7> 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' xvalue static_cast<class HashContainer_iterator<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt, class HashContainer_adapter<struct HashTable<struct Pair<const class IPFlowID, int>, void>::elt> > &&> <NoOp>
  |       `-DeclRefExpr 0x563042caf3e0 <col:7> 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> >' lvalue ParmVar 0x563042caf318 '' 'HashContainer_iterator<HashTable<Pair<const IPFlowID, int>, void>::elt, HashContainer_adapter<HashTable<Pair<const IPFlowID, int>, void>::elt> > &&'
  `-CompoundStmt 0x563042caf528 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>
