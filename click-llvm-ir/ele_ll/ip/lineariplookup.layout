
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct IPRoute
         0 |   class IPAddress addr
         0 |     uint32_t _addr
         4 |   class IPAddress mask
         4 |     uint32_t _addr
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int32_t port
        16 |   int32_t extra
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed171eb8 prev 0x559fed169658 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fed171fb0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x559fed172040 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x559fed1720b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x559fed172178 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x559fed172240 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x559fed1723b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x559fed1722f0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x559fed172460 <col:24>
| `-OptimizeNoneAttr 0x559fed1724b8 <col:34>
|-CXXMethodDecl 0x559fed172500 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x559fed1727b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x559fed1725b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x559fed172628 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x559fed1726a8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x559fed172870 <line:229:7, col:14> col:7 private
|-FieldDecl 0x559fed1728a8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x559fed172910 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x559fed172998 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x559fed172cb8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x559fed172a50 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x559fed172ac8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x559fed172b40 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x559fed172bc0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x559fed172dd0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x559fed17a748 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x559fed17a748
| `-ParmVarDecl 0x559fed17a858 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x559fed17a8f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x559fed17a8f8
| `-ParmVarDecl 0x559fed17aa08 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x559fed1d4f08 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed164ed0 prev 0x559fed164c50 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559fed164fc8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x559fed165058 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x559fed1650b8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x559fed1651a8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x559fed1652a8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x559fed165478 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x559fed165328 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x559fed1653a0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x559fed165608 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x559fed165540 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x559fed1656b0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x559fed1657e8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x559fed165720 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x559fed165988 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x559fed1658c8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x559fed165b28 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x559fed165a68 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x559fed165bd0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x559fed165cd0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x559fed165db0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed165cb0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x559fed165c90 <col:26> 'int' 1
| `-EnumConstantDecl 0x559fed165d60 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x559fed165dc8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed165d40 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x559fed165d20 <col:44> 'int' 2
|-CXXMethodDecl 0x559fed165f10 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x559fed165df8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x559fed165e78 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x559fed166068 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x559fed165fd8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x559fed1662a8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x559fed166128 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x559fed1661a0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x559fed166358 <col:20>
| `-OptimizeNoneAttr 0x559fed1663b0 <col:30>
|-CXXMethodDecl 0x559fed1664b8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x559fed1663f0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x559fed166560 <col:20>
| `-OptimizeNoneAttr 0x559fed1665b8 <col:30>
|-CXXMethodDecl 0x559fed166608 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x559fed1666d0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x559fed1667e8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x559fed166870 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x559fed1668f8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x559fed166980 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x559fed166a08 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x559fed166a98 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x559fed166b58 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x559fed166be0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x559fed166c68 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x559fed166cf0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x559fed166d78 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x559fed166e00 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x559fed166e90 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x559fed166f50 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x559fed166fe0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x559fed167130 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x559fed167098 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x559fed1672c0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x559fed1671f0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x559fed167570 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x559fed167378 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x559fed1673f8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x559fed167478 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x559fed167628 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x559fed167730 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559fed1679c0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed167710 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x559fed1676f0 <col:33> 'int' 0
| |-EnumConstantDecl 0x559fed1677c0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559fed1679d8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1677a0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x559fed167780 <col:32> 'int' 20
| |-EnumConstantDecl 0x559fed167850 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559fed1679f0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed167830 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x559fed167810 <col:38> 'int' 90
| |-EnumConstantDecl 0x559fed1678e0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559fed167a08 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1678c0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x559fed1678a0 <col:35> 'int' 100
| `-EnumConstantDecl 0x559fed167970 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x559fed167a20 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed167950 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x559fed167930 <col:32> 'int' 2000
|-CXXMethodDecl 0x559fed167a60 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x559fed167ea0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559fed167d10 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x559fed167d88 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed167f70 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x559fed1680f0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x559fed168020 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1682f8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559fed1681a8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x559fed168220 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1683f8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x559fed168498 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x559fed168560 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x559fed1685f0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x559fed168820 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1685d0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x559fed1685b0 <col:36> 'int' EnumConstant 0x559fed168560 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x559fed168640 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559fed168690 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559fed1686e0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559fed168730 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559fed168780 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x559fed1687d0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x559fed168908 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x559fed168848 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x559fed1689d0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x559fed168a90 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x559fed168b50 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x559fed168c10 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x559fed168d28 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x559fed168df0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x559fed168f70 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x559fed168ea0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x559fed169098 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x559fed169298 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x559fed169148 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x559fed1691c8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x559fed176be8 <col:54, line:127:5>
|   |-ParenExpr 0x559fed176a98 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x559fed176a68 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x559fed176758 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559fed176730 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x559fed176718 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x559fed176700 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x559fed1766d0 <col:31> 'Router *' lvalue ->_router 0x559fed1745b0
|   |   |         `-CXXThisExpr 0x559fed1766c0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559fed1767b8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed176798 <col:48> 'int' 0
|   |   `-CallExpr 0x559fed1769c8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x559fed1769b0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed176990 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed176a08 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed176828 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x559fed176a20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed176848 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x559fed176a38 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed176880 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x559fed176a50 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed176978 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed176960 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed176918 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x559fed176b30 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x559fed176ac8 <col:9> 'Router *' lvalue ->_router 0x559fed1745b0
|   | | `-CXXThisExpr 0x559fed176ab8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x559fed176b18 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x559fed176af8 <col:19> 'Router *' lvalue ParmVar 0x559fed169148 'r' 'Router *'
|   `-BinaryOperator 0x559fed176bc8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x559fed176b60 <col:9> 'int' lvalue ->_eindex 0x559fed174618
|     | `-CXXThisExpr 0x559fed176b50 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x559fed176bb0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x559fed176b90 <col:19> 'int' lvalue ParmVar 0x559fed1691c8 'eindex' 'int'
|-CXXMethodDecl 0x559fed169420 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x559fed169358 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x559fed1694f0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x559fed1695b8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x559fed169658 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x559fed1698a8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x559fed169720 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x559fed1697a0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x559fed169958 <col:20>
| `-OptimizeNoneAttr 0x559fed1699b0 <col:30>
|-CXXMethodDecl 0x559fed169ab8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x559fed1699f0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x559fed169b60 <col:20>
| `-OptimizeNoneAttr 0x559fed169bb8 <col:30>
|-CXXMethodDecl 0x559fed169c88 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x559fed169bf8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x559fed169d30 <col:20>
| `-OptimizeNoneAttr 0x559fed169d88 <col:30>
|-CXXMethodDecl 0x559fed169f18 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x559fed169dc0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x559fed169e40 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x559fed16a0a8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559fed169fe0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559fed16a1f8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559fed16a168 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559fed16a348 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559fed16a2b8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559fed16a498 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559fed16a408 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559fed16a758 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x559fed16a550 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x559fed16a5d0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x559fed16a678 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x559fed16a830 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x559fed16a8f0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x559fed16abc0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559fed16aa70 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x559fed16aae8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x559fed16ace8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x559fed16aec0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x559fed16ada0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x559fed16ae20 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x559fed16b0a8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x559fed16af88 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x559fed16b008 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x559fed16b418 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559fed16b168 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559fed16b1e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559fed16b260 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559fed1761d0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559fed1761b0 <col:106> 'int' 0
| `-ParmVarDecl 0x559fed16b2d8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559fed176208 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559fed1761e8 <col:126> 'int' 0
|-CXXMethodDecl 0x559fed16b7b8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559fed16b4e8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559fed16b580 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559fed16b600 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x559fed16b678 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559fed176240 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559fed176220 <col:114> 'int' 0
|-CXXMethodDecl 0x559fed16bb48 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559fed16b890 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x559fed16b908 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559fed16b988 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x559fed176258 <col:96> 'int' 0
| `-ParmVarDecl 0x559fed16ba00 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559fed176298 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559fed176278 <col:116> 'int' 0
|-CXXMethodDecl 0x559fed16bec8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559fed16bc18 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559fed16bc90 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed16bd10 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559fed1762d0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559fed1762b0 <col:109> 'int' 0
| `-ParmVarDecl 0x559fed16bd88 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559fed176308 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559fed1762e8 <col:129> 'int' 0
|-CXXMethodDecl 0x559fed16c248 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559fed16bf98 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559fed16c010 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed16c090 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x559fed16c108 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559fed176340 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559fed176320 <col:117> 'int' 0
|-CXXMethodDecl 0x559fed16c5d8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559fed16c320 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16c398 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed16c418 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x559fed176358 <col:99> 'int' 0
| `-ParmVarDecl 0x559fed16c490 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559fed176398 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559fed176378 <col:119> 'int' 0
|-CXXMethodDecl 0x559fed16c9f8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x559fed16c6a8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559fed16c728 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559fed16c7a0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed16c820 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559fed1763d0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559fed1763b0 <col:108> 'int' 0
| `-ParmVarDecl 0x559fed16c8a0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x559fed176408 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x559fed1763e8 <col:141> 'int' 0
|-CXXMethodDecl 0x559fed16ce18 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559fed16cad0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559fed16cb50 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559fed16cbc8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed16cc48 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x559fed16ccc8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x559fed176420 <col:121> 'int' 0
|-CXXMethodDecl 0x559fed16d248 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559fed16cef8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x559fed16cf78 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x559fed16cff0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed16d070 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x559fed176440 <col:98> 'int' 0
| `-ParmVarDecl 0x559fed16d0f0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x559fed176460 <col:123> 'int' 0
|-CXXMethodDecl 0x559fed16d510 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x559fed16d320 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559fed16d3a0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x559fed16d420 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x559fed176480 <col:80> 'int' 0
|-EnumDecl 0x559fed16d5c8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x559fed16d6d0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559fed16d960 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed16d6b0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x559fed16d690 <col:42> 'int' 1
| |-EnumConstantDecl 0x559fed16d760 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559fed16d978 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed16d740 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x559fed16d720 <col:40> 'int' 2
| |-EnumConstantDecl 0x559fed16d7f0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559fed16d990 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed16d7d0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x559fed16d7b0 <col:44> 'int' 4
| |-EnumConstantDecl 0x559fed16d880 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559fed16d9a8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed16d860 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x559fed16d840 <col:36> 'int' 7
| `-EnumConstantDecl 0x559fed16d910 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x559fed16d9c0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed16d8f0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x559fed16d8d0 <col:34> 'int' 6
|-CXXMethodDecl 0x559fed16dc78 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x559fed16d9e8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x559fed16da88 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x559fed16db08 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x559fed16db80 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x559fed176538 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x559fed176520 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x559fed176508 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x559fed1764e8 <col:98, col:105> 'String' (CXXTemporary 0x559fed1764e8)
|           `-CXXTemporaryObjectExpr 0x559fed1764b0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x559fed16df18 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x559fed16dd48 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559fed16ddc0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x559fed16de38 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x559fed1765e8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x559fed1765d0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x559fed1765b8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x559fed176598 <col:94, col:101> 'String' (CXXTemporary 0x559fed176598)
| |         `-CXXTemporaryObjectExpr 0x559fed176560 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x559fed176dd0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x559fed176d48 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x559fed176d18 <col:9> '<bound member function type>' ->add_task_handlers 0x559fed16dc78
|     | `-CXXThisExpr 0x559fed176d08 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x559fed176d88 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x559fed176c88 <col:27> 'Task *' lvalue ParmVar 0x559fed16dd48 'task' 'Task *'
|     |-ImplicitCastExpr 0x559fed176da0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x559fed176ca8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x559fed16ddc0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x559fed176db8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x559fed176cc8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x559fed16d910 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x559fed176ce8 <col:62> 'const String' lvalue ParmVar 0x559fed16de38 'prefix' 'const String &'
|-CXXMethodDecl 0x559fed16e128 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x559fed16dfe0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559fed16e058 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x559fed176698 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x559fed176680 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x559fed176668 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x559fed176648 <col:70, col:77> 'String' (CXXTemporary 0x559fed176648)
| |         `-CXXTemporaryObjectExpr 0x559fed176610 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x559fed176fa8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x559fed176f20 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x559fed176ef0 <col:9> '<bound member function type>' ->add_task_handlers 0x559fed16dc78
|     | `-CXXThisExpr 0x559fed176ee0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x559fed176f60 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x559fed176e60 <col:27> 'Task *' lvalue ParmVar 0x559fed16dfe0 'task' 'Task *'
|     |-ImplicitCastExpr 0x559fed176f78 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x559fed176e80 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x559fed176f90 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x559fed176ea0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x559fed16d910 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x559fed176ec0 <col:57> 'const String' lvalue ParmVar 0x559fed16e058 'prefix' 'const String &'
|-CXXMethodDecl 0x559fed16e408 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x559fed16e1f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16e270 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16e2e8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x559fed16e6b8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x559fed16e4d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16e558 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16e5d8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x559fed16e9a8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x559fed16e788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16e808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16e880 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x559fed16ec58 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x559fed16ea78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16eaf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16eb78 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x559fed16ef08 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x559fed16ed28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16eda8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16ee28 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x559fed16f1b8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x559fed16efd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16f058 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16f0d0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x559fed16f468 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x559fed16f288 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16f308 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16f388 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x559fed16f778 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x559fed16f590 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16f610 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16f690 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x559fed16fa58 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x559fed16f848 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16f8c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16f970 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x559fed16fd38 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x559fed16fb28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed16fba8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed16fc50 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x559fed16ffa0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x559fed16fe08 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x559fed16fe88 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x559fed16ff00 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x559fed170248 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x559fed170070 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x559fed1700f0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x559fed170168 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x559fed1704f8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x559fed170318 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed170398 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed170418 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x559fed1707a8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x559fed1705c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed170648 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed1706c0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x559fed170a58 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x559fed170878 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed1708f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed170970 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x559fed170d28 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x559fed170b28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed170ba8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559fed170c48 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x559fed171058 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x559fed170df8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559fed170e78 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x559fed170ef0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x559fed170f68 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fed1766b0 <col:93> 'bool' false
|-CXXMethodDecl 0x559fed171240 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559fed171128 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x559fed1711a8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x559fed171418 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559fed171300 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x559fed171380 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x559fed1716f8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed1714d8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x559fed171550 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x559fed1715d0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x559fed171648 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1719e8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed1717c8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x559fed171840 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x559fed1718c0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x559fed171938 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x559fed171c20 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x559fed171ac0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x559fed171b40 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x559fed171e08 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x559fed171ce8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x559fed171d68 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x559fed171eb8 prev 0x559fed169658 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559fed171fb0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x559fed172040 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x559fed1720b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x559fed172178 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x559fed172240 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x559fed1723b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x559fed1722f0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x559fed172460 <col:24>
| | `-OptimizeNoneAttr 0x559fed1724b8 <col:34>
| |-CXXMethodDecl 0x559fed172500 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x559fed1727b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x559fed1725b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x559fed172628 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x559fed1726a8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x559fed172870 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x559fed1728a8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x559fed172910 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x559fed172998 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x559fed172cb8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x559fed172a50 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x559fed172ac8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x559fed172b40 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x559fed172bc0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x559fed172dd0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x559fed17a748 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x559fed17a748
| | `-ParmVarDecl 0x559fed17a858 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x559fed17a8f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x559fed17a8f8
| | `-ParmVarDecl 0x559fed17aa08 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x559fed1d4f08 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559fed172e48 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x559fed172ee8 <col:38> "" ""
|-CXXMethodDecl 0x559fed172f78 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x559fed173018 <col:44> "" ""
|-AccessSpecDecl 0x559fed173088 <line:260:3, col:10> col:3 private
|-EnumDecl 0x559fed1730b0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x559fed1731b0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x559fed173200 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed173190 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x559fed173170 <col:27> 'int' 4
|-FieldDecl 0x559fed1732b8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x559fed173468 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x559fed173520 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x559fed1745b0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x559fed174618 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x559fed174768 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x559fed1746a8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x559fed174918 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x559fed174828 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x559fed174af8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x559fed1749d8 <col:20> col:23 'int'
| `-ParmVarDecl 0x559fed174a58 <col:25> col:28 'int'
|-CXXMethodDecl 0x559fed174da0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x559fed174bc0 <col:23> col:26 'int'
| |-ParmVarDecl 0x559fed174c40 <col:28> col:31 'int'
| `-ParmVarDecl 0x559fed174cb8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x559fed174e58 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x559fed174f20 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x559fed174f70 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x559fed174fc0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x559fed1751a0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed175050 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x559fed1750c8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed175448 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x559fed175268 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x559fed1752e8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x559fed175360 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x559fed175668 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x559fed175518 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x559fed175598 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x559fed1759a0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x559fed175728 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x559fed1757a8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x559fed175820 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x559fed1758a0 <col:57> col:60 'int'
|-CXXMethodDecl 0x559fed175b88 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559fed175a70 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x559fed175af0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x559fed175cd8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x559fed175c48 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x559fed176058 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x559fed175d98 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x559fed175e18 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x559fed175e90 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x559fed175f10 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x559fed176170 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed17fe88 <../elements/ip/iproutetable.hh:188:1, line:212:1> line:188:7 referenced class IPRouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x559fed17ffe8 <col:1, col:7> col:7 implicit class IPRouteTable
|-AccessSpecDecl 0x559fed180078 <col:39, col:45> col:39 public
|-CXXMethodDecl 0x559fed180178 <line:190:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x559fed1672c0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x559fed1800b8 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x559fed180450 <line:191:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x559fed167ea0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x559fed180300 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x559fed180378 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x559fed180520 <line:192:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x559fed167f70 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x559fed180830 <line:194:5, col:112> col:17 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559fed1805d0 <col:27, col:42> col:42 route 'const IPRoute &'
| |-ParmVarDecl 0x559fed180648 <col:49, col:54> col:54 allow_replace 'bool'
| |-ParmVarDecl 0x559fed1806c0 <col:69, col:78> col:78 replaced_route 'IPRoute *'
| `-ParmVarDecl 0x559fed180738 <col:94, col:108> col:108 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed180ae0 <line:195:5, col:94> col:17 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559fed180900 <col:30, col:45> col:45 route 'const IPRoute &'
| |-ParmVarDecl 0x559fed180978 <col:52, col:61> col:61 removed_route 'IPRoute *'
| `-ParmVarDecl 0x559fed1809f0 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed180d30 <line:196:5, col:69> col:17 lookup_route 'int (IPAddress, IPAddress &) const' virtual pure
| |-ParmVarDecl 0x559fed180ba8 <col:30, col:40> col:40 addr 'IPAddress'
| `-ParmVarDecl 0x559fed180c20 <col:46, col:57> col:57 gw 'IPAddress &'
|-CXXMethodDecl 0x559fed180e28 <line:197:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x559fed180ff0 <line:199:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x559fed165478 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x559fed180ee0 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x559fed180f58 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x559fed1812d0 <line:201:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed1810b0 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x559fed181128 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x559fed1811a8 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x559fed181220 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1815c0 <line:202:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed1813a0 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x559fed181418 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x559fed181498 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x559fed181510 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1818b0 <line:203:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed181690 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x559fed181708 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x559fed181788 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x559fed181800 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x559fed181c20 <line:204:5, col:94> col:16 lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x559fed181988 <col:31, col:35> col:35 operation 'int'
| |-ParmVarDecl 0x559fed181a00 <col:46, col:52> col:53 'String &'
| |-ParmVarDecl 0x559fed181a78 <col:55, col:62> col:63 'Element *'
| |-ParmVarDecl 0x559fed181af0 <col:65, col:78> col:79 'const Handler *'
| `-ParmVarDecl 0x559fed181b68 <col:81, col:93> col:94 'ErrorHandler *'
|-CXXMethodDecl 0x559fed181e10 <line:205:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559fed181cf8 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x559fed181d78 <col:43, col:47> col:48 'void *'
|-AccessSpecDecl 0x559fed181ec0 <line:207:3, col:10> col:3 private
|-EnumDecl 0x559fed181ee8 <line:209:5, col:41> col:5
| |-EnumConstantDecl 0x559fed181fb0 <col:12> col:12 CMD_ADD 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| |-EnumConstantDecl 0x559fed182000 <col:21> col:21 CMD_SET 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| `-EnumConstantDecl 0x559fed182050 <col:30> col:30 CMD_REMOVE 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
|-CXXMethodDecl 0x559fed182570 <line:210:5, col:92> col:9 run_command 'int (int, const String &, Vector<IPRoute> *, ErrorHandler *)'
| |-ParmVarDecl 0x559fed1820b8 <col:21, col:25> col:25 command 'int'
| |-ParmVarDecl 0x559fed182130 <col:34, col:47> col:48 'const String &'
| |-ParmVarDecl 0x559fed1823b0 <col:50, col:67> col:67 old_routes 'Vector<IPRoute> *'
| `-ParmVarDecl 0x559fed182428 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXConstructorDecl 0x559fed182670 <line:188:7> col:7 implicit IPRouteTable 'void (const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x559fed182670
| `-ParmVarDecl 0x559fed182788 <col:7> col:7 'const IPRouteTable &'
|-CXXConstructorDecl 0x559fed182828 <col:7> col:7 implicit IPRouteTable 'void (IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x559fed182828
| `-ParmVarDecl 0x559fed182938 <col:7> col:7 'IPRouteTable &&'
|-CXXMethodDecl 0x559fed1829d8 <col:7> col:7 implicit operator= 'IPRouteTable &(const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x559fed1829d8
| `-ParmVarDecl 0x559fed182ae8 <col:7> col:7 'const IPRouteTable &'
|-CXXMethodDecl 0x559fed182b58 <col:7> col:7 implicit operator= 'IPRouteTable &(IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x559fed182b58
| `-ParmVarDecl 0x559fed182c68 <col:7> col:7 'IPRouteTable &&'
|-CXXDestructorDecl 0x559fed182cf0 <col:7> col:7 implicit used ~IPRouteTable 'void () noexcept' inline default
| |-Overrides: [ 0x559fed1651a8 Element::~Element 'void () noexcept' ]
| `-CompoundStmt 0x559fed1d5188 <col:7>
`-CXXConstructorDecl 0x559fed1d4d88 <col:7> col:7 implicit used IPRouteTable 'void () noexcept(false)' inline default
  |-CXXCtorInitializer 'Element'
  | `-CXXConstructExpr 0x559fed1d4ea0 <col:7> 'Element' 'void ()'
  `-CompoundStmt 0x559fed1d4ff0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IPRouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<20> >
         0 |   vector_memory<class sized_array_memory<20> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct IPRoute>
         0 |   class vector_memory<class sized_array_memory<20> > vm_
         0 |     vector_memory<class sized_array_memory<20> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class LinearIPLookup
         0 |   class IPRouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   class Vector<struct IPRoute> _t
       112 |     class vector_memory<class sized_array_memory<20> > vm_
       112 |       vector_memory<class sized_array_memory<20> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   int _zero_route
       132 |   class IPAddress _last_addr
       132 |     uint32_t _addr
       136 |   int _last_entry
       140 |   class IPAddress _last_addr2
       140 |     uint32_t _addr
       144 |   int _last_entry2
           | [sizeof=152, dsize=148, align=8,
           |  nvsize=148, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559fed0e6a50 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<20>'
|-CXXRecordDecl 0x559fed0e6c28 prev 0x559fed0e6a50 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x559fed0e6cb8 <col:46, col:52> col:46 public
|-TypedefDecl 0x559fed0e6ce0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559fecc04580 'int'
|-TypedefDecl 0x559fed0e88b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<20>::type':'char_array<20>'
| `-ElaboratedType 0x559fed0e8860 'typename sized_array_memory<20>::type' sugar
|   `-TypedefType 0x559fed0e7190 'sized_array_memory<20>::type' sugar
|     |-Typedef 0x559fed0e7090 'type'
|     `-TemplateSpecializationType 0x559fed0e7020 'char_array<20UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x559fed0e6f00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|       |   `-SubstNonTypeTemplateParmExpr 0x559fed0e6ee0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x559fed0e6ec0 <col:24> 'unsigned long' 20
|       `-RecordType 0x559fed0e7000 'char_array<20>'
|         `-ClassTemplateSpecialization 0x559fed0e6f20 'char_array'
|-TypedefDecl 0x559fed0e8968 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<20> >::type *'
| `-PointerType 0x559fed0e8930 'vector_memory<sized_array_memory<20> >::type *'
|   `-TypedefType 0x559fed0e8910 'vector_memory<sized_array_memory<20> >::type' sugar
|     |-Typedef 0x559fed0e88b0 'type'
|     `-ElaboratedType 0x559fed0e8860 'typename sized_array_memory<20>::type' sugar
|       `-TypedefType 0x559fed0e7190 'sized_array_memory<20>::type' sugar
|         |-Typedef 0x559fed0e7090 'type'
|         `-TemplateSpecializationType 0x559fed0e7020 'char_array<20UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x559fed0e6f00 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|           |   `-SubstNonTypeTemplateParmExpr 0x559fed0e6ee0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x559fed0e6ec0 <col:24> 'unsigned long' 20
|           `-RecordType 0x559fed0e7000 'char_array<20>'
|             `-ClassTemplateSpecialization 0x559fed0e6f20 'char_array'
|-CXXMethodDecl 0x559fed0e8ae8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<20> >::type *) const' inline
| `-ParmVarDecl 0x559fed0e89f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXConstructorDecl 0x559fed0e8bd8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x559fed0e8cb8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x559fed0e8f88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x559fed0e8e90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<20> > &'
|-CXXMethodDecl 0x559fed0e91c8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x559fed0e9040 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559fed0e90b8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0e9398 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x559fed0e9288 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559fed0e9300 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0e94f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x559fed0e95c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x559fed0e9818 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x559fed0e9688 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x559fed0e9700 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0e9a78 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, vector_memory<sized_array_memory<20> >::iterator)'
| |-ParmVarDecl 0x559fed0e98e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x559fed0e9960 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0e9c38 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x559fed0e9b48 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0e9df8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x559fed0e9d00 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0e9eb0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559fed0e9f60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x559fed0ea198 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x559fed0ea010 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559fed0ea088 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x559fed0ea438 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x559fed0ea340 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<20> > &'
|-FieldDecl 0x559fed0ea500 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<20> >::type *'
|-FieldDecl 0x559fed0ea550 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x559fed0ea5a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559fed1821a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRoute'
|-CXXRecordDecl 0x559fed0e5568 prev 0x559fed1821a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x559fed0e69c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRoute>::type':'sized_array_memory<20>'
| `-ElaboratedType 0x559fed0e6970 'typename array_memory<IPRoute>::type' sugar
|   `-TypedefType 0x559fed0e6950 'conditional<true, sized_array_memory<20>, typed_array_memory<IPRoute> >::type' sugar
|     |-Typedef 0x559fed0e6800 'type'
|     `-SubstTemplateTypeParmType 0x559fed0e6620 'sized_array_memory<20>' sugar
|       |-TemplateTypeParmType 0x559fecec8f90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559fecec8f38 'T'
|       `-RecordType 0x559fed0e6170 'sized_array_memory<20>'
|         `-ClassTemplateSpecialization 0x559fed0e6090 'sized_array_memory'
|-FieldDecl 0x559fed0ea5f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRoute>::array_memory_type>':'vector_memory<sized_array_memory<20> >' mutable
|-AccessSpecDecl 0x559fed0ea640 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x559fed0ea678 <line:118:5, col:15> col:15 value_type 'IPRoute':'IPRoute'
| `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|   |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x559fecf00e48 'T'
|   `-RecordType 0x559fed17d950 'IPRoute'
|     `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0ea738 <line:119:5, col:16> col:16 reference 'IPRoute &'
| `-LValueReferenceType 0x559fed0ea700 'IPRoute &'
|   `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|     |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559fecf00e48 'T'
|     `-RecordType 0x559fed17d950 'IPRoute'
|       `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0ea7c8 <line:120:5, col:22> col:22 const_reference 'const IPRoute &'
| `-LValueReferenceType 0x559fed0ea790 'const IPRoute &'
|   `-QualType 0x559fed0e5601 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|       |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559fecf00e48 'T'
|       `-RecordType 0x559fed17d950 'IPRoute'
|         `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0ea858 <line:121:5, col:16> col:16 pointer 'IPRoute *'
| `-PointerType 0x559fed0ea820 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|     |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559fecf00e48 'T'
|     `-RecordType 0x559fed17d950 'IPRoute'
|       `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0ea8e8 <line:122:5, col:22> col:22 const_pointer 'const IPRoute *'
| `-PointerType 0x559fed0ea8b0 'const IPRoute *'
|   `-QualType 0x559fed0e5601 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|       |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559fecf00e48 'T'
|       `-RecordType 0x559fed17d950 'IPRoute'
|         `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0eb750 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRoute>::type':'const IPRoute &'
| `-ElaboratedType 0x559fed0eb700 'typename fast_argument<IPRoute>::type' sugar
|   `-TypedefType 0x559fed0eb6e0 'fast_argument<IPRoute, true>::type' sugar
|     |-Typedef 0x559fed0eb618 'type'
|     `-LValueReferenceType 0x559fed0eb5e0 'const IPRoute &'
|       `-QualType 0x559fed0eb381 'const IPRoute' const
|         `-SubstTemplateTypeParmType 0x559fed0eb380 'IPRoute' sugar
|           |-TemplateTypeParmType 0x559feced3880 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x559feced3828 'T'
|           `-RecordType 0x559fed17d950 'IPRoute'
|             `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0eb7b8 <line:126:5, col:22> col:22 const_access_type 'const IPRoute &'
| `-LValueReferenceType 0x559fed0ea790 'const IPRoute &'
|   `-QualType 0x559fed0e5601 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|       |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559fecf00e48 'T'
|       `-RecordType 0x559fed17d950 'IPRoute'
|         `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0eb810 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559fecc04580 'int'
|-TypedefDecl 0x559fed0eb878 <line:130:5, col:16> col:16 iterator 'IPRoute *'
| `-PointerType 0x559fed0ea820 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|     |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559fecf00e48 'T'
|     `-RecordType 0x559fed17d950 'IPRoute'
|       `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-TypedefDecl 0x559fed0eb8e0 <line:131:5, col:22> col:22 const_iterator 'const IPRoute *'
| `-PointerType 0x559fed0ea8b0 'const IPRoute *'
|   `-QualType 0x559fed0e5601 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x559fed0e5600 'IPRoute' sugar
|       |-TemplateTypeParmType 0x559fecf00ea0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559fecf00e48 'T'
|       `-RecordType 0x559fed17d950 'IPRoute'
|         `-CXXRecord 0x559fed17d8b8 'IPRoute'
|-EnumDecl 0x559fed0eb938 <line:134:5> col:5
| `-EnumConstantDecl 0x559fed0eba30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRoute>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x559fed0eba10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x559fecf02528 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x559fecf02500 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x559fecf024e0 <col:40> 'int' 1
|-CXXConstructorDecl 0x559fed0ebab8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x559fed0ebd48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x559fed0ebb70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559fed0ebc10 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXConstructorDecl 0x559fed19c6d0 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x559fed0ebef0 <col:19, col:36> col:36 x 'const Vector<IPRoute> &'
|-CXXConstructorDecl 0x559fed19c988 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x559fed19c870 <col:19, col:31> col:31 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x559fed19ccd0 <line:144:5, col:51> col:23 operator= 'Vector<IPRoute> &(const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x559fed19cbb0 <col:33, col:50> col:50 x 'const Vector<IPRoute> &'
|-CXXMethodDecl 0x559fed19cfe0 <line:146:5, col:46> col:23 operator= 'Vector<IPRoute> &(Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x559fed19cec0 <col:33, col:45> col:45 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x559fed19d2d0 <line:148:5, col:70> col:23 assign 'Vector<IPRoute> &(Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x559fed19d118 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559fed19d190 <col:43, col:69> col:63 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x559fed19d428 <line:150:5, col:55> col:49 begin 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x559fed19d4d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559fed19d530 <col:30> Inherited
|-CXXMethodDecl 0x559fed19d578 <line:151:5, col:53> col:49 end 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x559fed19d628 <col:20> Inherited
| `-OptimizeNoneAttr 0x559fed19d680 <col:30> Inherited
|-CXXMethodDecl 0x559fed19d748 <line:152:5, col:63> col:55 begin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x559fed19d7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559fed19d850 <col:30> Inherited
|-CXXMethodDecl 0x559fed19d898 <line:153:5, col:61> col:55 end 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x559fed19d948 <col:20> Inherited
| `-OptimizeNoneAttr 0x559fed19d9a0 <col:30> Inherited
|-CXXMethodDecl 0x559fed19d9e8 <line:154:5, col:64> col:55 cbegin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x559fed19da98 <col:20> Inherited
| `-OptimizeNoneAttr 0x559fed19daf0 <col:30> Inherited
|-CXXMethodDecl 0x559fed19db38 <line:155:5, col:62> col:55 cend 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x559fed19dbe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559fed19dc40 <col:30> Inherited
|-CXXMethodDecl 0x559fed19dc68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559fed19dd18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559fed19ddc8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559fed19df88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x559fed19de78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559fed19def0 <col:37, col:63> col:57 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x559fed19e0d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x559fed19e048 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x559fed19e288 <line:163:5, col:65> col:43 operator[] 'IPRoute &(Vector::size_type)'
| |-ParmVarDecl 0x559fed19e190 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559fed19e340 <col:20>
| `-OptimizeNoneAttr 0x559fed19e398 <col:30>
|-CXXMethodDecl 0x559fed19e4b8 <line:164:5, col:73> col:49 operator[] 'const IPRoute &(Vector::size_type) const'
| |-ParmVarDecl 0x559fed19e3c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559fed19e570 <col:20>
| `-OptimizeNoneAttr 0x559fed19e5c8 <col:30>
|-CXXMethodDecl 0x559fed19e680 <line:165:5, col:29> col:15 at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x559fed19e5f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559fed19e7c8 <line:166:5, col:37> col:21 at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559fed19e738 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559fed19e8f8 <line:167:5, col:21> col:15 front 'IPRoute &()' inline
|-CXXMethodDecl 0x559fed19ea28 <line:168:5, col:29> col:21 front 'const IPRoute &() const' inline
|-CXXMethodDecl 0x559fed19eaf8 <line:169:5, col:20> col:15 back 'IPRoute &()' inline
|-CXXMethodDecl 0x559fed19ebc8 <line:170:5, col:28> col:21 back 'const IPRoute &() const' inline
|-CXXMethodDecl 0x559fed19ed08 <line:172:5, col:39> col:15 unchecked_at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x559fed19ec78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559fed19ee50 <line:173:5, col:47> col:21 unchecked_at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559fed19edc0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559fed19ef98 <line:174:5, col:59> col:15 at_u 'IPRoute &(Vector::size_type)' inline
| |-ParmVarDecl 0x559fed19ef08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559fed19f050 <col:48> Inherited "" ""
|-CXXMethodDecl 0x559fed19f150 <line:175:5, col:71> col:21 at_u 'const IPRoute &(Vector::size_type) const' inline
| |-ParmVarDecl 0x559fed19f0c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559fed19f208 <col:60> Inherited "" ""
|-CXXMethodDecl 0x559fed19f2c8 <line:177:5, col:20> col:15 data 'IPRoute *()' inline
|-CXXMethodDecl 0x559fed19f3c8 <line:178:5, col:28> col:21 data 'const IPRoute *() const' inline
|-CXXMethodDecl 0x559fed19f578 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x559fed19f488 <col:27, col:47> col:47 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-FunctionTemplateDecl 0x559fed19fd68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x559fed19f630 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRoute>':'fast_argument<IPRoute, true>'
| `-CXXMethodDecl 0x559fed19fcc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRoute &&)' inline
|   `-ParmVarDecl 0x559fed19fbc8 <col:58, col:62> col:62 v 'IPRoute &&'
|-CXXMethodDecl 0x559fed19fe48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559fed19ff98 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x559fed19ff08 <col:28, col:48> col:48 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x559fed1a0050 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x559fed1a0298 <line:189:5, col:62> col:21 insert 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x559fed1a0110 <col:28, col:37> col:37 it 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x559fed1a0188 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x559fed1a0458 <line:190:5, col:38> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator)' inline
| `-ParmVarDecl 0x559fed1a0368 <col:27, col:36> col:36 it 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x559fed1a06a8 <line:191:5, col:49> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::iterator)' inline
| |-ParmVarDecl 0x559fed1a0520 <col:27, col:36> col:36 a 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x559fed1a0598 <col:39, col:48> col:48 b 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x559fed1a0768 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x559fed1a09c8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x559fed1a08d0 <col:22, col:33> col:33 x 'Vector<IPRoute> &'
`-CXXDestructorDecl 0x559fed1a0a98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x559fed1d5178 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fecf65ea0 prev 0x559fececacb8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fecf65f98 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x559fecf66028 <col:19, col:25> col:19 public
|-TypedefDecl 0x559fecf66060 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x559fecd585b0 'uninitialized_type'
|   `-CXXRecord 0x559fecd58518 'uninitialized_type'
|-CXXConstructorDecl 0x559fecf66120 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf69918 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559fecf698d8 <col:10> 'int' 0
| `-CompoundStmt 0x559fecf69960 <col:13, line:22:5>
|-CXXConstructorDecl 0x559fecf66270 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x559fecf661e0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf699b0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x559fecf69970 <col:10> 'unsigned int' lvalue ParmVar 0x559fecf661e0 'x' 'unsigned int'
| `-CompoundStmt 0x559fecf699f8 <col:13, line:27:5>
|-CXXConstructorDecl 0x559fecf663c8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x559fecf66338 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf69a60 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x559fecf69a48 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x559fecf69a08 <col:10> 'int' lvalue ParmVar 0x559fecf66338 'x' 'int'
| `-CompoundStmt 0x559fecf69aa8 <col:13, line:31:5>
|-CXXConstructorDecl 0x559fecf66520 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x559fecf66490 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf69b10 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x559fecf69af8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x559fecf69ab8 <col:10> 'unsigned long' lvalue ParmVar 0x559fecf66490 'x' 'unsigned long'
| `-CompoundStmt 0x559fecf69b58 <col:13, line:35:5>
|-CXXConstructorDecl 0x559fecf66678 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x559fecf665e8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf69bc0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x559fecf69ba8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x559fecf69b68 <col:10> 'long' lvalue ParmVar 0x559fecf665e8 'x' 'long'
| `-CompoundStmt 0x559fecf69c08 <col:13, line:39:5>
|-CXXConstructorDecl 0x559fecf66838 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x559fecf66748 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf69c88 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559fecf69c38 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x559fece99a70
| |     `-DeclRefExpr 0x559fecf69c18 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x559fecf66748 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x559fecf69cd0 <col:20, line:44:5>
|-CXXConstructorDecl 0x559fecf669c8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x559fecf66900 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x559fecf69e38 <col:51, line:56:5>
|   `-BinaryOperator 0x559fecf69e18 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x559fecf69cf0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x559fecf69870
|     | `-CXXThisExpr 0x559fecf69ce0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x559fecf69e00 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x559fecf69de8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x559fecf69dc8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x559fecf69d98 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x559fecf69d80 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x559fecf69d20 <col:47> 'const unsigned char *' lvalue ParmVar 0x559fecf66900 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x559fecf66b18 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x559fecf66a88 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x559fecf66cc8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x559fecf66c08 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x559fecf69ea8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x559fecf69e80 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x559fecf69e50 <col:9> 'const uninitialized_type' lvalue ParmVar 0x559fecf66c08 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x559fecf66e58 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x559fecf66d90 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x559fecf66f48 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x559fecf6ae68 <col:46, line:83:5>
|   `-ReturnStmt 0x559fecf6ae58 <line:82:2, col:29>
|     `-ExprWithCleanups 0x559fecf6ae40 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x559fecf6ae10 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559fecf6acc8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x559fecf6abb0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x559fecf6aa98 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x559fecf69ed0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x559fecf67038 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x559fecf6af18 <col:31, line:88:5>
|   `-ReturnStmt 0x559fecf6af08 <line:87:2, col:10>
|     `-UnaryOperator 0x559fecf6aef0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x559fecf6aed8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x559fecf6aec0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x559fecf6ae90 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559fecf69870
|             `-CXXThisExpr 0x559fecf6ae80 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x559fecf670f8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x559fecf6af98 <col:34, line:93:5>
|   `-ReturnStmt 0x559fecf6af88 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x559fecf6af70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x559fecf6af40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559fecf69870
|         `-CXXThisExpr 0x559fecf6af30 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x559fecf671c8 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x559fecf6b018 <col:38, line:101:5>
|   `-ReturnStmt 0x559fecf6b008 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x559fecf6aff0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x559fecf6afc0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559fecf69870
|         `-CXXThisExpr 0x559fecf6afb0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x559fecf67298 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x559fecf6b2e8 <col:38, line:108:5>
|   `-ReturnStmt 0x559fecf6b2d8 <line:107:2, col:58>
|     `-BinaryOperator 0x559fecf6b2b8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x559fecf6b1d0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x559fecf6b1b0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x559fecf6b198 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x559fecf6b040 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559fecf69870
|       |   |   `-CXXThisExpr 0x559fecf6b030 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x559fecf6b170 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x559fecf6b158 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559fecf6b0d8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x559fecea7fa8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x559fecf6b0b8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x559fecf6b290 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x559fecf6b278 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x559fecf6b258 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x559fecea7fa8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x559fecf6b238 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x559fecf67358 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x559fecf6b558 <col:39, line:112:5>
|   `-ReturnStmt 0x559fecf6b548 <line:111:2, col:56>
|     `-BinaryOperator 0x559fecf6b528 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x559fecf6b440 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x559fecf6b420 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x559fecf6b408 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x559fecf6b310 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559fecf69870
|       |   |   `-CXXThisExpr 0x559fecf6b300 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x559fecf6b3e0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x559fecf6b3c8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559fecf6b3a8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x559fecea7fa8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x559fecf6b388 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x559fecf6b500 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x559fecf6b4e8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x559fecf6b4c8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x559fecea7fa8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x559fecf6b4a8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x559fecf67488 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x559fecf67590 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x559fecf676a0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x559fecf68768 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559fecf68828 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x559fecf688f0 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x559fecf68ae8 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x559fecf689a0 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x559fecf68a18 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x559fecf68c68 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x559fecf68ba8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x559fecf68db0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x559fecf68d20 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x559fecf68f58 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x559fecf68e68 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x559fecf690a0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x559fecf69010 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x559fecf691e8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x559fecf69158 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x559fecf692b0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x559fecf69370 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x559fecf694e8 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x559fecf69420 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x559fecf695b0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x559fecf69698 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x559fecf69740 <col:51> "" ""
|-TypedefDecl 0x559fecf697e0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x559fececad50 'IPAddress'
|   `-CXXRecord 0x559fecf65ea0 'IPAddress'
|-AccessSpecDecl 0x559fecf69838 <line:150:3, col:10> col:3 private
|-FieldDecl 0x559fecf69870 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559fecf69f18 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x559fecf6a028 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fed17eff8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559fed17efb0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x559fecf69870
| |     `-DeclRefExpr 0x559fed17ef90 <col:7> 'const IPAddress' lvalue ParmVar 0x559fecf6a028 '' 'const IPAddress &'
| `-CompoundStmt 0x559fed17f040 <col:7>
|-CXXConstructorDecl 0x559fecf6a0c8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559fecf6a1d8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x559fecf69870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559fecf6adb8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559fecf6ad70 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x559fecf69870
| |     `-CXXStaticCastExpr 0x559fecf6ad40 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x559fecf6ad10 <col:7> 'IPAddress' lvalue ParmVar 0x559fecf6a1d8 '' 'IPAddress &&'
| `-CompoundStmt 0x559fecf6ae00 <col:7>
|-CXXDestructorDecl 0x559fecf6aac8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559fed17f440 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x559fed17f440
| `-ParmVarDecl 0x559fed17f548 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x559fed17f5b8 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559fed17f6c8 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x559fed17f930 <col:7>
    |-BinaryOperator 0x559fed17f8d8 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x559fed17f890 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x559fecf69870
    | | `-CXXThisExpr 0x559fed17f880 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x559fed17f8c0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x559fed17f850 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x559fecf69870
    |     `-CXXStaticCastExpr 0x559fed17f820 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x559fed17f7f0 <col:7> 'IPAddress' lvalue ParmVar 0x559fed17f6c8 '' 'IPAddress &&'
    `-ReturnStmt 0x559fed17f920 <col:7>
      `-UnaryOperator 0x559fed17f908 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x559fed17f8f8 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed0e4198 <../elements/ip/lineariplookup.hh:82:1, line:117:1> line:82:7 class LinearIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'IPRouteTable'
|-CXXRecordDecl 0x559fed0e42f8 <col:1, col:7> col:7 implicit referenced class LinearIPLookup
|-AccessSpecDecl 0x559fed0e4388 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x559fed0e4410 <line:84:5, col:20> col:5 LinearIPLookup 'void ()'
|-CXXDestructorDecl 0x559fed0e4500 <line:85:5, col:21> col:5 ~LinearIPLookup 'void ()' noexcept-unevaluated 0x559fed0e4500
| `-Overrides: [ 0x559fed182cf0 IPRouteTable::~IPRouteTable 'void () noexcept' ]
|-CXXMethodDecl 0x559fed0e4630 <line:87:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x559fed166608 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x559fed1a12f8 <col:36, col:63>
|   `-ReturnStmt 0x559fed1a12e8 <col:38, col:45>
|     `-ImplicitCastExpr 0x559fed1a12d0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x559fed1a12a8 <col:45> 'const char [15]' lvalue "LinearIPLookup"
|-CXXMethodDecl 0x559fed0e46f8 <line:88:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x559fed1666d0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x559fed1a1358 <col:36, col:52>
|   `-ReturnStmt 0x559fed1a1348 <col:38, col:45>
|     `-ImplicitCastExpr 0x559fed1a1330 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x559fed1a1310 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x559fed0e47c0 <line:89:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x559fed166a98 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x559fed1a13b8 <col:36, col:51>
|   `-ReturnStmt 0x559fed1a13a8 <col:38, col:45>
|     `-ImplicitCastExpr 0x559fed1a1390 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x559fed1a1370 <col:45> 'const char []' lvalue Var 0x559fed166be0 'PUSH' 'const char []'
|-CXXMethodDecl 0x559fed0e4908 <line:91:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x559fed1680f0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x559fed0e4870 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x559fed0e4ad8 <line:93:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x559fed180ff0 IPRouteTable::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x559fed0e49c8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x559fed0e4a40 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x559fed0e4db0 <line:95:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x559fed180830 IPRouteTable::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x559fed0e4b98 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x559fed0e4c10 <col:35> col:39 'bool'
| |-ParmVarDecl 0x559fed0e4c88 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x559fed0e4d00 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x559fed0e5018 <line:96:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x559fed180ae0 IPRouteTable::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x559fed0e4e80 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x559fed0e4ef8 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x559fed0e4f70 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x559fed0e51f8 <line:97:5, col:45> col:9 lookup_route 'int (IPAddress, IPAddress &) const'
| |-Overrides: [ 0x559fed180d30 IPRouteTable::lookup_route 'int (IPAddress, IPAddress &) const' ]
| |-ParmVarDecl 0x559fed0e50e0 <col:22> col:31 'IPAddress'
| `-ParmVarDecl 0x559fed0e5158 <col:33, col:42> col:43 'IPAddress &'
|-CXXMethodDecl 0x559fed0e52c8 <line:98:5, col:24> col:12 dump_routes 'String ()'
| `-Overrides: [ 0x559fed180e28 IPRouteTable::dump_routes 'String ()' ]
|-CXXMethodDecl 0x559fed0e5388 <line:100:5, col:18> col:10 check 'bool () const'
|-AccessSpecDecl 0x559fed0e5428 <line:102:3, col:12> col:3 protected
|-FieldDecl 0x559fed1a0b80 <line:104:5, col:21> col:21 _t 'Vector<IPRoute>':'Vector<IPRoute>'
|-FieldDecl 0x559fed1a0be8 <line:105:5, col:9> col:9 _zero_route 'int'
|-FieldDecl 0x559fed1a0c48 <line:107:5, col:15> col:15 _last_addr 'IPAddress'
|-FieldDecl 0x559fed1a0cb0 <line:108:5, col:9> col:9 _last_entry 'int'
|-FieldDecl 0x559fed1a0d10 <line:111:5, col:15> col:15 _last_addr2 'IPAddress'
|-FieldDecl 0x559fed1a0d78 <line:112:5, col:9> col:9 _last_entry2 'int'
|-CXXMethodDecl 0x559fed1a0ea0 <line:115:5, col:33> col:9 lookup_entry 'int (IPAddress) const'
| `-ParmVarDecl 0x559fed1a0dd8 <col:22> col:31 'IPAddress'
|-CXXConstructorDecl 0x559fed1a0f78 <line:82:7> col:7 implicit LinearIPLookup 'void (const LinearIPLookup &)' inline default_delete noexcept-unevaluated 0x559fed1a0f78
| `-ParmVarDecl 0x559fed1a1088 <col:7> col:7 'const LinearIPLookup &'
`-CXXMethodDecl 0x559fed1a1128 <col:7> col:7 implicit operator= 'LinearIPLookup &(const LinearIPLookup &)' inline default_delete noexcept-unevaluated 0x559fed1a1128
  `-ParmVarDecl 0x559fed1a1238 <col:7> col:7 'const LinearIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.LinearIPLookup = type <{ %class.IPRouteTable.base, [4 x i8], %class.Vector, i32, %class.IPAddress, i32, %class.IPAddress, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.LinearIPLookup.base = type <{ %class.IPRouteTable.base, [4 x i8], %class.Vector, i32, %class.IPAddress, i32, %class.IPAddress, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed1bfb48 prev 0x559fed164ce0 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559fed1bfc40 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x559fed1bfcd0 <col:22, col:28> col:22 public
|-EnumDecl 0x559fed1bfcf8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x559fed1bfe18 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1bfdf8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x559fed1bfde0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x559fed1bfdc0 <col:14> 'int' 999
| |-EnumConstantDecl 0x559fed1bfec0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1bfea0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x559fed1bfe88 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x559fed1bfe68 <col:14> 'int' 1
| |-EnumConstantDecl 0x559fed1bff50 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1bff30 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x559fed1bff10 <col:17> 'int' 0
| |-EnumConstantDecl 0x559fed1bffe0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1bffc0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x559fed1bffa0 <col:13> 'int' 1
| |-EnumConstantDecl 0x559fed1c0070 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1c0050 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x559fed1c0030 <col:16> 'int' 2
| |-EnumConstantDecl 0x559fed1c0100 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1c00e0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x559fed1c00c0 <col:13> 'int' 3
| |-EnumConstantDecl 0x559fed1c0190 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1c0170 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x559fed1c0150 <col:15> 'int' 4
| |-EnumConstantDecl 0x559fed1c0220 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1c0200 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x559fed1c01e0 <col:14> 'int' 5
| |-EnumConstantDecl 0x559fed1c02b0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x559fed1c0290 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x559fed1c0270 <col:12> 'int' 6
| `-EnumConstantDecl 0x559fed1c0340 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x559fed1c0320 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x559fed1c0300 <col:13> 'int' 7
|-VarDecl 0x559fed1c03b0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x559fed1c0438 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x559fed1c04c0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x559fed1c0548 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x559fed1c05d0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x559fed1c0658 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x559fed1c06e0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x559fed1c0768 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x559fed1c07f0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x559fed1c0878 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x559fed1c0900 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x559fed1c0a00 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x559fed1c5e08 '_nerrors' 'int'
| | `-IntegerLiteral 0x559fed1c6598 <line:128:13> 'int' 0
| `-CompoundStmt 0x559fed1c6608 <col:16, line:129:5>
|-CXXDestructorDecl 0x559fed1c0af0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x559fed1c6618 <col:29, line:132:5>
|-CXXMethodDecl 0x559fed1c0ca8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x559fed1c0be0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1c0d70 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x559fed1c0e58 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x559fed1c6670 <col:44, line:161:5>
|   `-ReturnStmt 0x559fed1c6660 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x559fed1c6648 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x559fed1c6628 <col:9> 'ErrorHandler *' lvalue Var 0x559fed1c5e68 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1c0fc8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x559fed1c0f08 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559fed1c1090 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x559fed1c66d0 <col:43, line:173:5>
|   `-ReturnStmt 0x559fed1c66c0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x559fed1c66a8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x559fed1c6688 <col:9> 'ErrorHandler *' lvalue Var 0x559fed1c5ee0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x559fed1c1148 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x559fed1c11c8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x559fed1c12d8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x559fed1c1248 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c1428 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x559fed1c1398 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c1580 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x559fed1c14e8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c16d8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x559fed1c1640 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c1830 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x559fed1c1798 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c1a40 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x559fed1c18e8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x559fed1c1968 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c1c18 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x559fed1c1b00 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x559fed1c1b80 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c1e58 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x559fed1c1cd8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x559fed1c1d70 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c2038 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x559fed1c1f18 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x559fed1c1f98 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c2218 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x559fed1c20f8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x559fed1c2178 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c23a0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x559fed1c22d8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x559fed1c2570 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x559fed1c2458 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x559fed1c24d0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x559fed1c6928 <col:57, line:234:5>
|   `-ReturnStmt 0x559fed1c6918 <line:233:2, col:41>
|     `-ExprWithCleanups 0x559fed1c6900 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x559fed1c68a8 <col:9, col:41> 'int'
|         |-MemberExpr 0x559fed1c6878 <col:9> '<bound member function type>' ->xmessage 0x559fed1c23a0
|         | `-CXXThisExpr 0x559fed1c6868 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x559fed1c68e8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x559fed1c68d0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x559fed1c6848 <col:18, col:40> 'String' (CXXTemporary 0x559fed1c6848)
|               `-CallExpr 0x559fed1c6810 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x559fed1c67f8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x559fed1c6770 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x559fed1c45f8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x559fed1c6790 <col:31> 'const String' lvalue ParmVar 0x559fed1c24d0 'str' 'const String &'
|                 `-DeclRefExpr 0x559fed1c67b0 <col:36> 'const String' lvalue ParmVar 0x559fed1c2458 'anno' 'const String &'
|-CXXMethodDecl 0x559fed1c28b0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x559fed1c2630 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x559fed1c26b0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x559fed1c2780 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x559fed1c6bb8 <col:68, line:243:5>
|   `-ReturnStmt 0x559fed1c6ba8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x559fed1c6b90 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x559fed1c6b30 <col:9, col:41> 'int'
|         |-MemberExpr 0x559fed1c6b00 <col:9> '<bound member function type>' ->xmessage 0x559fed1c2570
|         | `-CXXThisExpr 0x559fed1c6af0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x559fed1c69c8 <col:18> 'const String' lvalue ParmVar 0x559fed1c2630 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x559fed1c6b78 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x559fed1c6b60 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x559fed1c6ad0 <col:24, col:40> 'String' (CXXTemporary 0x559fed1c6ad0)
|               `-CXXMemberCallExpr 0x559fed1c6a68 <col:24, col:40> 'String'
|                 |-MemberExpr 0x559fed1c69f8 <col:24> '<bound member function type>' ->vformat 0x559fed1c3a90
|                 | `-CXXThisExpr 0x559fed1c69e8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x559fed1c6a98 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x559fed1c6a28 <col:32> 'const char *' lvalue ParmVar 0x559fed1c26b0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x559fed1c6ab0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x559fed1c6a48 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x559fed1c2780 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559fed1c2b50 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x559fed1c2978 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x559fed1c29f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x559fed1c2a68 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x559fed1c6ef8 <col:23, line:254:5>
|   `-ReturnStmt 0x559fed1c6ee8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x559fed1c6ed0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x559fed1c6e70 <col:9, col:71> 'int'
|         |-MemberExpr 0x559fed1c6e40 <col:9> '<bound member function type>' ->xmessage 0x559fed1c2570
|         | `-CXXThisExpr 0x559fed1c6e30 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x559fed1c6eb8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x559fed1c6ea0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x559fed1c6df0 <col:18, col:65> 'String' (CXXTemporary 0x559fed1c6df0)
|         |     `-CallExpr 0x559fed1c6d88 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x559fed1c6d70 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x559fed1c6c58 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x559fed1c45f8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x559fed1c6c78 <col:31> 'const String' lvalue ParmVar 0x559fed1c29f0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x559fed1c6dd0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x559fed1c6db8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x559fed1c6d50 <col:37, col:64> 'String' (CXXTemporary 0x559fed1c6d50)
|         |             `-CallExpr 0x559fed1c6d20 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x559fed1c6d08 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x559fed1c6c98 <col:37> 'String (const String &)' lvalue CXXMethod 0x559fed1c4c48 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x559fed1c6cb8 <col:56> 'const String' lvalue ParmVar 0x559fed1c2978 'landmark' 'const String &'
|         `-DeclRefExpr 0x559fed1c6e10 <col:68> 'const String' lvalue ParmVar 0x559fed1c2a68 'str' 'const String &'
|-CXXMethodDecl 0x559fed1c2ed0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x559fed1c2c18 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x559fed1c2c90 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x559fed1c2d10 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x559fed1c2d88 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x559fed1c71b0 <col:34, line:267:5>
|   `-ReturnStmt 0x559fed1c71a0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x559fed1c7188 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x559fed1c7120 <col:9, col:51> 'int'
|         |-MemberExpr 0x559fed1c70f0 <col:9> '<bound member function type>' ->xmessage 0x559fed1c2b50
|         | `-CXXThisExpr 0x559fed1c70e0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x559fed1c6f98 <col:18> 'const String' lvalue ParmVar 0x559fed1c2c18 'landmark' 'const String &'
|         |-DeclRefExpr 0x559fed1c6fb8 <col:28> 'const String' lvalue ParmVar 0x559fed1c2c90 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x559fed1c7170 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x559fed1c7158 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x559fed1c70c0 <col:34, col:50> 'String' (CXXTemporary 0x559fed1c70c0)
|               `-CXXMemberCallExpr 0x559fed1c7058 <col:34, col:50> 'String'
|                 |-MemberExpr 0x559fed1c6fe8 <col:34> '<bound member function type>' ->vformat 0x559fed1c3a90
|                 | `-CXXThisExpr 0x559fed1c6fd8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x559fed1c7088 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x559fed1c7018 <col:42> 'const char *' lvalue ParmVar 0x559fed1c2d10 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x559fed1c70a0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x559fed1c7038 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x559fed1c2d88 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559fed1c2fe0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x559fed1c7230 <col:25, line:288:5>
|   `-ReturnStmt 0x559fed1c7220 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x559fed1c7208 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x559fed1c71d8 <col:9> 'const int' lvalue ->_nerrors 0x559fed1c5e08
|         `-CXXThisExpr 0x559fed1c71c8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x559fed1c31f0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x559fed1c3098 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x559fed1c3118 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c34d8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x559fed1c32b8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x559fed1c3338 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x559fed1c33b0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559fed1c3670 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x559fed1c35a8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c38b8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x559fed1c3730 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x559fed1c37a8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x559fed1c7490 <col:58, line:357:5>
|   `-ReturnStmt 0x559fed1c7480 <line:356:2, col:29>
|     `-ExprWithCleanups 0x559fed1c7468 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x559fed1c7438 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x559fed1c7420 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x559fed1c7400 <col:9, col:29> 'String' (CXXTemporary 0x559fed1c7400)
|             `-CallExpr 0x559fed1c7390 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x559fed1c7378 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559fed1c72f8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x559fed1c34d8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x559fed1c7298 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x559fed1c73c8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x559fed1c72b8 <col:21> 'const char *' lvalue ParmVar 0x559fed1c3730 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x559fed1c73e0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x559fed1c72d8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x559fed1c37a8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559fed1c3a90 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x559fed1c3980 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x559fed1c39f8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559fed1c3be8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x559fed1c3b58 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x559fed1c3d68 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x559fed1c3ca0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x559fed1c4000 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x559fed1c3e20 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x559fed1c3ea0 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x559fed1c3f18 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x559fed1c4160 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x559fed1c40d0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x559fed1c75a8 <col:37, line:441:5>
|   `-IfStmt 0x559fed1c7590 <line:439:2, line:440:8>
|     |-BinaryOperator 0x559fed1c7518 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x559fed1c74e8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x559fed1c74a8 <col:6> 'int' lvalue ParmVar 0x559fed1c40d0 'level' 'int'
|     | `-ImplicitCastExpr 0x559fed1c7500 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x559fed1c74c8 <col:15> 'ErrorHandler::Level' EnumConstant 0x559fed1c0100 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x559fed1c7578 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x559fed1c7548 <col:8> 'int' lvalue ->_nerrors 0x559fed1c5e08
|         `-CXXThisExpr 0x559fed1c7538 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x559fed1c4228 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x559fed1c7640 <col:26, line:448:5>
|   `-BinaryOperator 0x559fed1c7620 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x559fed1c75d0 <col:2> 'int' lvalue ->_nerrors 0x559fed1c5e08
|     | `-CXXThisExpr 0x559fed1c75c0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x559fed1c7600 <col:13> 'int' 0
|-CXXMethodDecl 0x559fed1c43f0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x559fed1c42e0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x559fed1c4358 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x559fed1c45f8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x559fed1c44b0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x559fed1c4528 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x559fed1c48a8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x559fed1c46b8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x559fed1c4738 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x559fed1c47b8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x559fed1c4960 <col:59> 0 0
|-CXXMethodDecl 0x559fed1c4af8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x559fed1c49d8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x559fed1c4a58 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x559fed1c7cb0 <col:70, line:534:5>
|   |-DeclStmt 0x559fed1c77b0 <line:528:2, col:20>
|   | |-VarDecl 0x559fed1c7668 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x559fed1c76d0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x559fed1c7708 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x559fed1c7770 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x559fed1c7880 <line:529:2, col:23>
|   | `-VarDecl 0x559fed1c77e0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x559fed1c7868 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x559fed1c7848 <col:18> 'const char *' lvalue ParmVar 0x559fed1c49d8 'begin' 'const char *'
|   |-DoStmt 0x559fed1c7c48 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x559fed1c7b78 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x559fed1c7b60 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x559fed1c7b40 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x559fed1c7898 <col:6> 'const char *' lvalue Var 0x559fed1c77e0 'x' 'const char *'
|   | |     `-CallExpr 0x559fed1c7a90 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x559fed1c7a78 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x559fed1c7a30 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x559fed1c62e0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x559fed1c7af8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x559fed1c7ae0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x559fed1c7950 <col:20, col:27> 'String' (CXXTemporary 0x559fed1c7950)
|   | |       |     `-CXXTemporaryObjectExpr 0x559fed1c7918 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x559fed1c7b10 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x559fed1c7970 <col:30> 'const char *' lvalue Var 0x559fed1c77e0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x559fed1c7b28 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x559fed1c7990 <col:33> 'const char *' lvalue ParmVar 0x559fed1c4a58 'end' 'const char *'
|   | |       |-UnaryOperator 0x559fed1c79d0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x559fed1c79b0 <col:39> 'String' lvalue Var 0x559fed1c7668 'name' 'String'
|   | |       |-UnaryOperator 0x559fed1c7a08 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x559fed1c79e8 <col:46> 'String' lvalue Var 0x559fed1c7708 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x559fed1c7a20 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x559fed1c7c30 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x559fed1c7c18 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x559fed1c7bf8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x559fed1c7bc8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x559fecf33ad8
|   |         `-ImplicitCastExpr 0x559fed1c7bb0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x559fed1c7b90 <col:11> 'String' lvalue Var 0x559fed1c7668 'name' 'String'
|   `-ReturnStmt 0x559fed1c7ca0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x559fed1c7c88 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x559fed1c7c68 <col:9> 'const char *' lvalue Var 0x559fed1c77e0 'x' 'const char *'
|-CXXMethodDecl 0x559fed1c4c48 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x559fed1c4bb8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x559fed1c82b8 <col:55, line:550:5>
|   `-IfStmt 0x559fed1c8290 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x559fed1c7ef0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x559fed1c7ed8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x559fed1c7ec0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x559fed1c7ea0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x559fed1c7e70 <col:6> '<bound member function type>' .operator int (String::*)() const 0x559fecf33ad8
|     | |       `-DeclRefExpr 0x559fed1c7d10 <col:6> 'const String' lvalue ParmVar 0x559fed1c4bb8 'x' 'const String &'
|     | `-BinaryOperator 0x559fed1c7e50 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x559fed1c7e20 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x559fed1c7dd0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x559fed1c7db8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x559fed1c7d70 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x559fecf4d310 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x559fed1c7d30 <col:11> 'const String' lvalue ParmVar 0x559fed1c4bb8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x559fed1c7d50 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x559fed1c7e38 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x559fed1c7e08 <col:19> 'char' 123
|     |-ReturnStmt 0x559fed1c7f60 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x559fed1c7f30 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x559fed1c7f10 <col:13> 'const String' lvalue ParmVar 0x559fed1c4bb8 'x' 'const String &'
|     `-IfStmt 0x559fed1c8268 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x559fed1c7ff8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x559fed1c7fe0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x559fed1c7fc0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x559fed1c7f90 <col:11> '<bound member function type>' .operator int (String::*)() const 0x559fecf33ad8
|       |       `-DeclRefExpr 0x559fed1c7f70 <col:11> 'const String' lvalue ParmVar 0x559fed1c4bb8 'x' 'const String &'
|       |-ReturnStmt 0x559fed1c8180 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x559fed1c8168 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x559fed1c8138 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x559fed1c8120 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x559fed1c8100 <col:13, col:29> 'String' (CXXTemporary 0x559fed1c8100)
|       |         `-CallExpr 0x559fed1c80b0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x559fed1c8098 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x559fed1c8010 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x559fed1c43f0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x559fed1c80e0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x559fed1c8030 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x559fed1c8050 <col:28> 'const String' lvalue ParmVar 0x559fed1c4bb8 'x' 'const String &'
|       `-ReturnStmt 0x559fed1c8258 <line:549:6, col:20>
|         `-ExprWithCleanups 0x559fed1c8240 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x559fed1c8210 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x559fed1c81f8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x559fed1c81d8 <col:13, col:20> 'String' (CXXTemporary 0x559fed1c81d8)
|                 `-CXXTemporaryObjectExpr 0x559fed1c81a0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x559fed1c4e48 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x559fed1c4d00 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x559fed1c4d78 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fed1c6588 <col:71> 'bool' false
|-CXXRecordDecl 0x559fed1c4ef8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x559fed1c51f8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x559fed1c5190 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x559fed1c5130 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x559fed1c50f0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x559fecf30370 'String'
|       | `-CXXRecord 0x559fecf302e0 'String'
|       |-BuiltinType 0x559fecc04580 'int'
|       `-DecayedType 0x559fed1c2750 '__va_list_tag *' sugar
|         |-TypedefType 0x559fed1c2720 'va_list' sugar
|         | |-Typedef 0x559fece21230 'va_list'
|         | `-TypedefType 0x559fece211e0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x559fecd58df8 '__gnuc_va_list'
|         |   `-TypedefType 0x559fecd58d60 '__builtin_va_list' sugar
|         |     |-Typedef 0x559fecc45d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x559fecc45ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x559fecc052d0 '__va_list_tag'
|         |         `-CXXRecord 0x559fecc05238 '__va_list_tag'
|         `-PointerType 0x559fece26ad0 '__va_list_tag *'
|           `-RecordType 0x559fecc052d0 '__va_list_tag'
|             `-CXXRecord 0x559fecc05238 '__va_list_tag'
|-EnumDecl 0x559fed1c5250 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x559fed1c5350 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c58b0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c5330 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x559fed1c5310 <col:16> 'int' 1
| |-EnumConstantDecl 0x559fed1c53e0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c58c8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c53c0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x559fed1c53a0 <col:21> 'int' 2
| |-EnumConstantDecl 0x559fed1c5470 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c58e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c5450 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x559fed1c5430 <col:22> 'int' 4
| |-EnumConstantDecl 0x559fed1c5500 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c58f8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c54e0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x559fed1c54c0 <col:17> 'int' 8
| |-EnumConstantDecl 0x559fed1c5590 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c5910 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c5570 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x559fed1c5550 <col:22> 'int' 16
| |-EnumConstantDecl 0x559fed1c5620 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c5928 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c5600 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x559fed1c55e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x559fed1c56b0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c5940 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c5690 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x559fed1c5670 <col:17> 'int' 64
| |-EnumConstantDecl 0x559fed1c5740 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c5958 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c5720 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x559fed1c5700 <col:14> 'int' 128
| |-EnumConstantDecl 0x559fed1c57d0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559fed1c5970 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1c57b0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x559fed1c5790 <col:16> 'int' 256
| `-EnumConstantDecl 0x559fed1c5860 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x559fed1c5988 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed1c5840 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x559fed1c5820 <col:12> 'int' 1024
|-CXXMethodDecl 0x559fed1c5b98 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x559fed1c59b0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x559fed1c5a50 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x559fed1c5d20 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x559fed1c5c58 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x559fed1c5dc8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x559fed1c5e08 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x559fed1c5e68 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x559fed1c5ee0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x559fed1c62e0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x559fed1c5f58 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x559fed1c5fd8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x559fed1c6058 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x559fed1c60d0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x559fed1c6148 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x559fed1c61c0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x559fed1c6408 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x559fed1c6408
| `-ParmVarDecl 0x559fed1c6518 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x559fed1c8618 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x559fed1c8618
  `-ParmVarDecl 0x559fed1c8728 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed17d8b8 <../elements/ip/iproutetable.hh:163:1, line:186:1> line:163:8 referenced struct IPRoute definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559fed17d9d8 <col:1, col:8> col:8 implicit referenced struct IPRoute
|-FieldDecl 0x559fed17da78 <line:164:5, col:15> col:15 referenced addr 'IPAddress'
|-FieldDecl 0x559fed17dad8 <line:165:5, col:15> col:15 referenced mask 'IPAddress'
|-FieldDecl 0x559fed17db38 <line:166:5, col:15> col:15 referenced gw 'IPAddress'
|-FieldDecl 0x559fed17db98 <line:167:5, col:13> col:13 referenced port 'int32_t':'int'
|-FieldDecl 0x559fed17dbf8 <line:168:5, col:13> col:13 referenced extra 'int32_t':'int'
|-CXXConstructorDecl 0x559fed17dcb0 <line:170:5, col:28> col:5 IPRoute 'void ()'
| |-CXXCtorInitializer Field 0x559fed17da78 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x559fed17ede0 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x559fed17dad8 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x559fed17ee30 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x559fed17db38 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x559fed17ee80 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x559fed17db98 'port' 'int32_t':'int'
| | `-UnaryOperator 0x559fed17ed80 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x559fed17ed60 <col:23> 'int' 1
| `-CompoundStmt 0x559fed17eef0 <col:26, col:28>
|-CXXConstructorDecl 0x559fed17dfc8 <line:171:5, line:172:42> line:171:5 IPRoute 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x559fed17dd68 <col:13, col:23> col:23 used a 'IPAddress'
| |-ParmVarDecl 0x559fed17dde0 <col:26, col:36> col:36 used m 'IPAddress'
| |-ParmVarDecl 0x559fed17de58 <col:39, col:49> col:49 used g 'IPAddress'
| |-ParmVarDecl 0x559fed17ded8 <col:52, col:56> col:56 used p 'int'
| |-CXXCtorInitializer Field 0x559fed17da78 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x559fed17f050 <line:172:7, col:13> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x559fed17ef40 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x559fed17ef00 <col:12> 'IPAddress' lvalue ParmVar 0x559fed17dd68 'a' 'IPAddress'
| |-CXXCtorInitializer Field 0x559fed17dad8 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x559fed17f100 <col:16, col:22> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x559fed17f0e8 <col:21> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x559fed17f0a8 <col:21> 'IPAddress' lvalue ParmVar 0x559fed17dde0 'm' 'IPAddress'
| |-CXXCtorInitializer Field 0x559fed17db38 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x559fed17f1b0 <col:25, col:29> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x559fed17f198 <col:28> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x559fed17f158 <col:28> 'IPAddress' lvalue ParmVar 0x559fed17de58 'g' 'IPAddress'
| |-CXXCtorInitializer Field 0x559fed17db98 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x559fed17f248 <col:37> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x559fed17f208 <col:37> 'int' lvalue ParmVar 0x559fed17ded8 'p' 'int'
| `-CompoundStmt 0x559fed17f2a8 <col:40, col:42>
|-CXXMethodDecl 0x559fed17e0d8 <line:174:5, col:69> col:17 used real 'bool () const' inline
| `-CompoundStmt 0x559fed17f3c8 <col:30, col:69>
|   `-ReturnStmt 0x559fed17f3b8 <col:32, col:57>
|     `-BinaryOperator 0x559fed17f398 <col:39, col:57> 'bool' '>'
|       |-ImplicitCastExpr 0x559fed17f380 <col:39> 'int32_t':'int' <LValueToRValue>
|       | `-MemberExpr 0x559fed17f2c8 <col:39> 'const int32_t':'const int' lvalue ->port 0x559fed17db98
|       |   `-CXXThisExpr 0x559fed17f2b8 <col:39> 'const IPRoute *' implicit this
|       `-CStyleCastExpr 0x559fed17f358 <col:46, col:57> 'int32_t':'int' <NoOp>
|         `-ImplicitCastExpr 0x559fed17f340 <col:56, col:57> 'int32_t':'int' <IntegralCast> part_of_explicit_cast
|           `-UnaryOperator 0x559fed17f318 <col:56, col:57> 'unsigned int' prefix '-'
|             `-IntegerLiteral 0x559fed17f2f8 <col:57> 'unsigned int' 2147483648
|-CXXMethodDecl 0x559fed17e198 <line:175:5, col:76> col:17 kill 'void ()' inline
| `-CompoundStmt 0x559fed17fbf0 <col:24, col:76>
|   |-ExprWithCleanups 0x559fed17f9f8 <col:26, col:33> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x559fed17f9c0 <col:26, col:33> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x559fed17f9a8 <col:31> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x559fed17f798 <col:31> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x559fed17f5b8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x559fed17f3f0 <col:26> 'IPAddress' lvalue ->addr 0x559fed17da78
|   |   | `-CXXThisExpr 0x559fed17f3e0 <col:26> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x559fed17f780 <col:33> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x559fed17f750 <col:33> 'IPAddress' 'void (unsigned int)'
|   |       `-ImplicitCastExpr 0x559fed17f738 <col:33> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x559fed17f420 <col:33> 'int' 0
|   |-ExprWithCleanups 0x559fed17fb28 <col:36, col:43> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x559fed17faf0 <col:36, col:43> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x559fed17fad8 <col:41> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x559fed17fab8 <col:41> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x559fed17f5b8 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x559fed17fa20 <col:36> 'IPAddress' lvalue ->mask 0x559fed17dad8
|   |   | `-CXXThisExpr 0x559fed17fa10 <col:36> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x559fed17faa0 <col:43> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x559fed17fa70 <col:43> 'IPAddress' 'void (unsigned int)'
|   |       `-IntegerLiteral 0x559fed17fa50 <col:43> 'unsigned int' 4294967295
|   `-BinaryOperator 0x559fed17fbd0 <col:56, col:64> 'int32_t':'int' lvalue '='
|     |-MemberExpr 0x559fed17fb50 <col:56> 'int32_t':'int' lvalue ->port 0x559fed17db98
|     | `-CXXThisExpr 0x559fed17fb40 <col:56> 'IPRoute *' implicit this
|     `-ImplicitCastExpr 0x559fed17fbb8 <col:63, col:64> 'int32_t':'int' <IntegralCast>
|       `-UnaryOperator 0x559fed17fba0 <col:63, col:64> 'unsigned int' prefix '-'
|         `-IntegerLiteral 0x559fed17fb80 <col:64> 'unsigned int' 2147483648
|-CXXMethodDecl 0x559fed17e2d8 <line:176:5, col:39> col:17 contains 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x559fed17e248 <col:26, col:36> col:36 a 'IPAddress'
|-CXXMethodDecl 0x559fed17e478 <line:177:5, col:44> col:17 used contains 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x559fed17e3b8 <col:26, col:41> col:41 r 'const IPRoute &'
|-CXXMethodDecl 0x559fed17e5c0 <line:178:5, col:47> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x559fed17e530 <col:34, col:44> col:44 m 'IPAddress'
|-CXXMethodDecl 0x559fed17e708 <line:179:5, col:52> col:17 mask_as_specific 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x559fed17e678 <col:34, col:49> col:49 r 'const IPRoute &'
|-CXXMethodDecl 0x559fed17e850 <line:180:5, col:41> col:17 match 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x559fed17e7c0 <col:23, col:38> col:38 r 'const IPRoute &'
|-CXXMethodDecl 0x559fed17e920 <line:181:5, col:64> col:9 prefix_len 'int () const'
| `-CompoundStmt 0x559fed17fcb8 <col:28, col:64>
|   `-ReturnStmt 0x559fed17fca8 <col:30, col:61>
|     `-CXXMemberCallExpr 0x559fed17fc88 <col:37, col:61> 'int'
|       `-MemberExpr 0x559fed17fc58 <col:37, col:42> '<bound member function type>' .mask_to_prefix_len 0x559fecf688f0
|         `-MemberExpr 0x559fed17fc28 <col:37> 'const IPAddress' lvalue ->mask 0x559fed17dad8
|           `-CXXThisExpr 0x559fed17fc18 <col:37> 'const IPRoute *' implicit this
|-CXXMethodDecl 0x559fed17eb18 <line:183:5, col:51> col:18 used unparse 'StringAccum &(StringAccum &, bool) const'
| |-ParmVarDecl 0x559fed17e9d0 <col:26, col:37> col:38 'StringAccum &'
| `-ParmVarDecl 0x559fed17ea48 <col:40, col:45> col:45 tabs 'bool'
|-CXXMethodDecl 0x559fed17ebe8 <line:184:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x559fed17eca8 <line:185:5, col:72> col:12 used unparse_addr 'String () const'
| `-CompoundStmt 0x559fed17fe70 <col:33, col:72>
|   `-ReturnStmt 0x559fed17fe60 <col:35, col:69>
|     `-ExprWithCleanups 0x559fed17fe48 <col:42, col:69> 'String'
|       `-CXXConstructExpr 0x559fed17fe18 <col:42, col:69> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x559fed17fe00 <col:42, col:69> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x559fed17fde0 <col:42, col:69> 'String' (CXXTemporary 0x559fed17fde0)
|             `-CXXMemberCallExpr 0x559fed17fd80 <col:42, col:69> 'String'
|               |-MemberExpr 0x559fed17fd10 <col:42, col:47> '<bound member function type>' .unparse_with_mask 0x559fecf694e8
|               | `-MemberExpr 0x559fed17fce0 <col:42> 'const IPAddress' lvalue ->addr 0x559fed17da78
|               |   `-CXXThisExpr 0x559fed17fcd0 <col:42> 'const IPRoute *' implicit this
|               `-CXXConstructExpr 0x559fed17fda8 <col:65> 'IPAddress' 'void (const IPAddress &) noexcept'
|                 `-MemberExpr 0x559fed17fd50 <col:65> 'const IPAddress' lvalue ->mask 0x559fed17dad8
|                   `-CXXThisExpr 0x559fed17fd40 <col:65> 'const IPRoute *' implicit this
|-CXXConstructorDecl 0x559fed1bd740 <line:163:8> col:8 implicit constexpr IPRoute 'void (const IPRoute &)' inline default trivial noexcept-unevaluated 0x559fed1bd740
| `-ParmVarDecl 0x559fed1bd828 <col:8> col:8 'const IPRoute &'
`-CXXConstructorDecl 0x559fed1bd898 <col:8> col:8 implicit constexpr IPRoute 'void (IPRoute &&)' inline default trivial noexcept-unevaluated 0x559fed1bd898
  `-ParmVarDecl 0x559fed1bd9a8 <col:8> col:8 'IPRoute &&'

Layout: <CGRecordLayout
  LLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  NonVirtualBaseLLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fecf38d70 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559fecf38e88 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x559fecf38f28 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x559fecf38f88 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x559fecf38fe8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x559fecf39098 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fecf393a0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fecf394b8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x559fecf39560 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x559fecf395c8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x559fecf39658 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x559fecf3f6f0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559fecf3fb28 <col:12>
|-CXXConstructorDecl 0x559fecf3f7f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559fecf3f908 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559fecf39560 'data' 'const char *'
| | `-ImplicitCastExpr 0x559fecf420b0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x559fecf42080 <col:12> 'const char *const' lvalue .data 0x559fecf39560
| |     `-DeclRefExpr 0x559fecf42060 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf3f908 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559fecf395c8 'length' 'int'
| | `-ImplicitCastExpr 0x559fecf42140 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559fecf42110 <col:12> 'const int' lvalue .length 0x559fecf395c8
| |     `-DeclRefExpr 0x559fecf420f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf3f908 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559fecf39658 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x559fecf421d0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x559fecf421a0 <col:12> 'String::memo_t *const' lvalue .memo 0x559fecf39658
| |     `-DeclRefExpr 0x559fecf42180 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf3f908 '' 'const String::rep_t &'
| `-CompoundStmt 0x559fecf42228 <col:12>
|-CXXConstructorDecl 0x559fecf3f9a8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559fecf3f9a8
| `-ParmVarDecl 0x559fecf3fab8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x559fecf45010 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559fecf50a28 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559fecf50b38 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x559fecf51050 <col:12>
|   |-BinaryOperator 0x559fecf50e68 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x559fecf50e20 <col:12> 'const char *' lvalue ->data 0x559fecf39560
|   | | `-CXXThisExpr 0x559fecf50e10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559fecf50e50 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x559fecf50de0 <col:12> 'const char *const' lvalue .data 0x559fecf39560
|   |     `-DeclRefExpr 0x559fecf50dc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf50b38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x559fecf50f30 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x559fecf50ee8 <col:12> 'int' lvalue ->length 0x559fecf395c8
|   | | `-CXXThisExpr 0x559fecf50ed8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559fecf50f18 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x559fecf50ea8 <col:12> 'const int' lvalue .length 0x559fecf395c8
|   |     `-DeclRefExpr 0x559fecf50e88 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf50b38 '' 'const String::rep_t &'
|   |-BinaryOperator 0x559fecf50ff8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x559fecf50fb0 <col:12> 'String::memo_t *' lvalue ->memo 0x559fecf39658
|   | | `-CXXThisExpr 0x559fecf50fa0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559fecf50fe0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x559fecf50f70 <col:12> 'String::memo_t *const' lvalue .memo 0x559fecf39658
|   |     `-DeclRefExpr 0x559fecf50f50 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf50b38 '' 'const String::rep_t &'
|   `-ReturnStmt 0x559fecf51040 <col:12>
|     `-UnaryOperator 0x559fecf51028 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559fecf51018 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x559fecf50ba8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559fecf50ba8
  `-ParmVarDecl 0x559fecf50cb8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fecf302e0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559fecf303f8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x559fecf30488 <col:16, col:22> col:16 public
|-TypedefDecl 0x559fecf304c8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x559fecc04fd0 'const char *'
|   `-QualType 0x559fecc04521 'const char' const
|     `-BuiltinType 0x559fecc04520 'char'
|-TypedefDecl 0x559fecf30550 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x559fecf30520 'String::const_iterator' sugar
|   |-Typedef 0x559fecf304c8 'const_iterator'
|   `-PointerType 0x559fecc04fd0 'const char *'
|     `-QualType 0x559fecc04521 'const char' const
|       `-BuiltinType 0x559fecc04520 'char'
|-TypedefDecl 0x559fecf306c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x559fecf30630 'int (String::*)() const'
|   |-RecordType 0x559fecf30370 'String'
|   | `-CXXRecord 0x559fecf302e0 'String'
|   `-ParenType 0x559fecf305d0 'int () const' sugar
|     `-FunctionProtoType 0x559fecf04160 'int () const' const cdecl
|       `-BuiltinType 0x559fecc04580 'int'
|-TypedefDecl 0x559fecf30728 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x559fecd58b40 'int64_t' sugar
|   |-Typedef 0x559fecc6d390 'int64_t'
|   `-TypedefType 0x559fecc46630 '__int64_t' sugar
|     |-Typedef 0x559fecc46208 '__int64_t'
|     `-BuiltinType 0x559fecc045a0 'long'
|-TypedefDecl 0x559fecf30790 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x559fecd58a60 'uint64_t' sugar
|   |-Typedef 0x559fecc6d530 'uint64_t'
|   `-TypedefType 0x559fecc466c0 '__uint64_t' sugar
|     |-Typedef 0x559fecc46278 '__uint64_t'
|     `-BuiltinType 0x559fecc04640 'unsigned long'
|-TypedefDecl 0x559fecf30820 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x559fecf307f0 'String::intmax_t' sugar
|   |-Typedef 0x559fecf30728 'intmax_t'
|   `-TypedefType 0x559fecd58b40 'int64_t' sugar
|     |-Typedef 0x559fecc6d390 'int64_t'
|     `-TypedefType 0x559fecc46630 '__int64_t' sugar
|       |-Typedef 0x559fecc46208 '__int64_t'
|       `-BuiltinType 0x559fecc045a0 'long'
|-TypedefDecl 0x559fecf308b0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x559fecf30880 'String::uintmax_t' sugar
|   |-Typedef 0x559fecf30790 'uintmax_t'
|   `-TypedefType 0x559fecd58a60 'uint64_t' sugar
|     |-Typedef 0x559fecc6d530 'uint64_t'
|     `-TypedefType 0x559fecc466c0 '__uint64_t' sugar
|       |-Typedef 0x559fecc46278 '__uint64_t'
|       `-BuiltinType 0x559fecc04640 'unsigned long'
|-CXXConstructorDecl 0x559fecf30970 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x559fecf30b18 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x559fecf30a58 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x559fecf30cc8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x559fecf30c08 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x559fecf30e20 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x559fecf30d90 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x559fecf31038 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x559fecf30ee8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x559fecf30f68 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x559fecf31258 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x559fecf31108 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x559fecf31188 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x559fecf31478 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559fecf31328 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x559fecf313a8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x559fecf31698 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x559fecf31548 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x559fecf315c8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x559fecf31828 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x559fecf31760 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x559fecf319a8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x559fecf318e8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x559fecf31b38 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x559fecf31a70 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x559fecf31c90 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x559fecf31c00 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x559fecf31de8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x559fecf31d58 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x559fecf31f40 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x559fecf31eb0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x559fecf320c8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x559fecf32008 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x559fecf32258 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x559fecf32190 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x559fecf323e8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x559fecf32320 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x559fecf32578 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x559fecf324b0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x559fecf32670 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x559fecf32798 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x559fecf32918 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x559fecf32850 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x559fecf32a68 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x559fecf329d8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x559fecf32b20 <col:63> "" ""
|-CXXMethodDecl 0x559fecf32c68 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x559fecf32ba8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x559fecf32e78 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x559fecf32d28 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x559fecf32da8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x559fecf33098 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x559fecf32f40 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x559fecf32fc0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x559fecf33378 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x559fecf33158 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x559fecf331d8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x559fecf3f1c0 <col:55> 'int' 10
| `-ParmVarDecl 0x559fecf33250 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fecf3f1e0 <col:76> 'bool' true
|-CXXMethodDecl 0x559fecf33658 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x559fecf33440 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x559fecf334c0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x559fecf3f1f0 <col:56> 'int' 10
| `-ParmVarDecl 0x559fecf33538 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fecf3f210 <col:77> 'bool' true
|-CXXMethodDecl 0x559fecf33760 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x559fecf33828 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x559fecf338f0 <line:81:5, col:60> col:52 used c_str 'const char *() const'
| |-NoInlineAttr 0x559fecf33990 <col:20>
| `-OptimizeNoneAttr 0x559fecf339e8 <col:30>
|-CXXConversionDecl 0x559fecf33ad8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559fecf33ba8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x559fecf33c68 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x559fecf33d58 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x559fecf33e18 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x559fecf33f98 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x559fecf33ed0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x559fecf340e8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x559fecf34058 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x559fecf341d8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x559fecf34298 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x559fecf344e8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x559fecf34350 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x559fecf343d0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x559fecf34748 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x559fecf345b0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x559fecf34630 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x559fecf34818 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x559fecf34a28 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x559fecf348d0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x559fecf34950 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x559fecf34c48 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x559fecf34af0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x559fecf34b70 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x559fecf34dd8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x559fecf34d10 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x559fecf34ec8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x559fecf35038 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x559fecf34f78 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559fecf35248 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x559fecf350f8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559fecf35178 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559fecf35460 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x559fecf35308 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x559fecf35380 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x559fecf355f0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x559fecf35520 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559fecf35810 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x559fecf356b0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x559fecf35730 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559fecf35960 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x559fecf358d0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x559fecf35b38 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x559fecf35a20 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559fecf35aa0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x559fecf35c88 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x559fecf35bf8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x559fecf35ea0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x559fecf35d40 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x559fecf35dc0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x559fecf3f220 <col:39> 'int' 0
|-CXXMethodDecl 0x559fecf360c0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x559fecf35f60 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x559fecf35fe0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x559fecf3f240 <col:48> 'int' 0
|-CXXMethodDecl 0x559fecf362a0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x559fecf36180 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x559fecf36200 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x559fecf3f260 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x559fecf36370 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x559fecf36430 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x559fecf364f0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x559fecf365b0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x559fecf36670 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x559fecf36818 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x559fecf36720 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x559fecf36998 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x559fecf368d0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x559fecf36b70 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x559fecf36a58 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x559fecf36ce8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x559fecf36c28 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x559fecf36e30 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x559fecf36da0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559fecf36f80 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x559fecf36ef0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x559fecf37158 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x559fecf37040 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559fecf370c0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559fecf37338 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559fecf37220 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x559fecf372a0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x559fecf37488 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x559fecf373f8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x559fecf37698 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x559fecf37548 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x559fecf375c8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x559fecf377f8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x559fecf37760 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559fecf37950 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x559fecf378b8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x559fecf379f8 <col:57> "" ""
|-CXXMethodDecl 0x559fecf37b08 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x559fecf37a78 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x559fecf37c58 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x559fecf37bc8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x559fecf37dd8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x559fecf37d10 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x559fecf37ea0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x559fecf37f60 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x559fecf38020 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x559fecf380c0 <col:49> "" ""
|-CXXMethodDecl 0x559fecf38150 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x559fecf38210 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x559fecf38300 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x559fecf383c8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x559fecf38488 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x559fecf38548 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x559fecf38640 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x559fecf38708 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x559fecf387d0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x559fecf389a8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x559fecf38888 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x559fecf38908 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x559fecf38bd0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x559fecf38a70 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x559fecf38af0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x559fecf38ce0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x559fecf38d48 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x559fecf38d70 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559fecf38e88 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x559fecf38f28 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x559fecf38f88 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x559fecf38fe8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x559fecf39098 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x559fecf39100 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x559fecf39338 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x559fecf39388 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fecf39318 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x559fecf39228 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x559fecf391d0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x559fecf39210 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x559fecf391f0 <col:32> 'int' 8
|-CXXRecordDecl 0x559fecf393a0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559fecf394b8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x559fecf39560 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x559fecf395c8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x559fecf39658 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x559fecf3f6f0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559fecf3fb28 <col:12>
| |-CXXConstructorDecl 0x559fecf3f7f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559fecf3f908 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559fecf39560 'data' 'const char *'
| | | `-ImplicitCastExpr 0x559fecf420b0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x559fecf42080 <col:12> 'const char *const' lvalue .data 0x559fecf39560
| | |     `-DeclRefExpr 0x559fecf42060 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf3f908 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559fecf395c8 'length' 'int'
| | | `-ImplicitCastExpr 0x559fecf42140 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559fecf42110 <col:12> 'const int' lvalue .length 0x559fecf395c8
| | |     `-DeclRefExpr 0x559fecf420f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf3f908 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559fecf39658 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x559fecf421d0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x559fecf421a0 <col:12> 'String::memo_t *const' lvalue .memo 0x559fecf39658
| | |     `-DeclRefExpr 0x559fecf42180 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf3f908 '' 'const String::rep_t &'
| | `-CompoundStmt 0x559fecf42228 <col:12>
| |-CXXConstructorDecl 0x559fecf3f9a8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559fecf3f9a8
| | `-ParmVarDecl 0x559fecf3fab8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x559fecf45010 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x559fecf50a28 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559fecf50b38 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x559fecf51050 <col:12>
| |   |-BinaryOperator 0x559fecf50e68 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x559fecf50e20 <col:12> 'const char *' lvalue ->data 0x559fecf39560
| |   | | `-CXXThisExpr 0x559fecf50e10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559fecf50e50 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x559fecf50de0 <col:12> 'const char *const' lvalue .data 0x559fecf39560
| |   |     `-DeclRefExpr 0x559fecf50dc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf50b38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x559fecf50f30 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x559fecf50ee8 <col:12> 'int' lvalue ->length 0x559fecf395c8
| |   | | `-CXXThisExpr 0x559fecf50ed8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559fecf50f18 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x559fecf50ea8 <col:12> 'const int' lvalue .length 0x559fecf395c8
| |   |     `-DeclRefExpr 0x559fecf50e88 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf50b38 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x559fecf50ff8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x559fecf50fb0 <col:12> 'String::memo_t *' lvalue ->memo 0x559fecf39658
| |   | | `-CXXThisExpr 0x559fecf50fa0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559fecf50fe0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x559fecf50f70 <col:12> 'String::memo_t *const' lvalue .memo 0x559fecf39658
| |   |     `-DeclRefExpr 0x559fecf50f50 <col:12> 'const String::rep_t' lvalue ParmVar 0x559fecf50b38 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x559fecf51040 <col:12>
| |     `-UnaryOperator 0x559fecf51028 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559fecf51018 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x559fecf50ba8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559fecf50ba8
|   `-ParmVarDecl 0x559fecf50cb8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x559fecf396d0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x559fecf39918 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x559fecf39738 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x559fecf397b8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x559fecf39830 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x559fecf3f6b0 <col:79, line:261:5>
|   |-BinaryOperator 0x559fecf3f328 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x559fecf3f2c0 <col:2, col:5> 'const char *' lvalue .data 0x559fecf39560
|   | | `-MemberExpr 0x559fecf3f290 <col:2> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|   | |   `-CXXThisExpr 0x559fecf3f280 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x559fecf3f310 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x559fecf3f2f0 <col:12> 'const char *' lvalue ParmVar 0x559fecf39738 'data' 'const char *'
|   |-BinaryOperator 0x559fecf3f3f0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x559fecf3f388 <col:2, col:5> 'int' lvalue .length 0x559fecf395c8
|   | | `-MemberExpr 0x559fecf3f358 <col:2> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|   | |   `-CXXThisExpr 0x559fecf3f348 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x559fecf3f3d8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559fecf3f3b8 <col:14> 'int' lvalue ParmVar 0x559fecf397b8 'length' 'int'
|   `-IfStmt 0x559fecf3f698 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x559fecf3f510 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x559fecf3f4f8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x559fecf3f4d8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x559fecf3f4b8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x559fecf3f450 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x559fecf39658
|     |       | `-MemberExpr 0x559fecf3f420 <col:7> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|     |       |   `-CXXThisExpr 0x559fecf3f410 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x559fecf3f4a0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x559fecf3f480 <col:17> 'String::memo_t *' lvalue ParmVar 0x559fecf39830 'memo' 'String::memo_t *'
|     `-CallExpr 0x559fecf3f670 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x559fecf3f658 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559fecf3f560 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x559fecf28348 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x559fecf3f5c8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559fecf38f28
|         `-ImplicitCastExpr 0x559fecf3f5b0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x559fecf3f590 <col:27> 'String::memo_t *' lvalue ParmVar 0x559fecf39830 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x559fecf39bc8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x559fecf399e8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x559fecf39a68 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x559fecf39ae0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x559fecf396d0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x559fecf3fb38 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559fecf3fcc8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x559fecf3fc30 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x559fecf3fba0 <col:2> '<bound member function type>' ->assign_memo 0x559fecf39918
|     | `-ImplicitCastExpr 0x559fecf3fc68 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x559fecf3fb90 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x559fecf3fc80 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x559fecf3fbd0 <col:14> 'const char *' lvalue ParmVar 0x559fecf399e8 'data' 'const char *'
|     |-ImplicitCastExpr 0x559fecf3fc98 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559fecf3fbf0 <col:20> 'int' lvalue ParmVar 0x559fecf39a68 'length' 'int'
|     `-ImplicitCastExpr 0x559fecf3fcb0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x559fecf3fc10 <col:28> 'String::memo_t *' lvalue ParmVar 0x559fecf39ae0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x559fecf39d58 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x559fecf39c98 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x559fecf3ff20 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x559fecf3fea0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x559fecf3fcf0 <col:2> '<bound member function type>' ->assign_memo 0x559fecf39918
|     | `-CXXThisExpr 0x559fecf3fce0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x559fecf3fed8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x559fecf3fd70 <col:14, col:19> 'const char *' lvalue .data 0x559fecf39560
|     |   `-MemberExpr 0x559fecf3fd40 <col:14, col:16> 'String::rep_t' lvalue ._r 0x559fecf396d0
|     |     `-DeclRefExpr 0x559fecf3fd20 <col:14> 'const String' lvalue ParmVar 0x559fecf39c98 'x' 'const String &'
|     |-ImplicitCastExpr 0x559fecf3fef0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x559fecf3fdf0 <col:25, col:30> 'int' lvalue .length 0x559fecf395c8
|     |   `-MemberExpr 0x559fecf3fdc0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x559fecf396d0
|     |     `-DeclRefExpr 0x559fecf3fda0 <col:25> 'const String' lvalue ParmVar 0x559fecf39c98 'x' 'const String &'
|     `-ImplicitCastExpr 0x559fecf3ff08 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x559fecf3fe70 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x559fecf39658
|         `-MemberExpr 0x559fecf3fe40 <col:38, col:40> 'String::rep_t' lvalue ._r 0x559fecf396d0
|           `-DeclRefExpr 0x559fecf3fe20 <col:38> 'const String' lvalue ParmVar 0x559fecf39c98 'x' 'const String &'
|-CXXMethodDecl 0x559fecf39e20 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x559fecf408e0 <col:31, line:278:5>
|   `-IfStmt 0x559fecf408c8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x559fecf3ffc0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x559fecf3ffa8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x559fecf3ff78 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559fecf39658
|     |     `-MemberExpr 0x559fecf3ff48 <col:6> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|     |       `-CXXThisExpr 0x559fecf3ff38 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x559fecf408a0 <col:15, line:277:2>
|       |-ParenExpr 0x559fecf40470 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x559fecf40440 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x559fecf400d0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x559fecf400b8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x559fecf400a0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x559fecf40060 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559fecf38f28
|       |   |       `-ImplicitCastExpr 0x559fecf40048 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x559fecf40018 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x559fecf39658
|       |   |           `-MemberExpr 0x559fecf3ffe8 <col:27> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|       |   |             `-CXXThisExpr 0x559fecf3ffd8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x559fecf40130 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x559fecf40110 <col:54> 'int' 0
|       |   `-CallExpr 0x559fecf403a0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x559fecf40388 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559fecf40308 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x559fecf403e0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x559fecf40218 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x559fecf403f8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x559fecf40248 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x559fecf40410 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x559fecf40280 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x559fecf40428 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x559fecf402f0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x559fecf402d8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x559fecf402a0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x559fecf407c0 <line:274:6, line:275:22>
|       | |-CallExpr 0x559fecf40680 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x559fecf40668 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x559fecf405e0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x559fecf29790 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x559fecf405b0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559fecf38f28
|       | |   `-ImplicitCastExpr 0x559fecf40598 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x559fecf40568 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x559fecf39658
|       | |       `-MemberExpr 0x559fecf40538 <col:40> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|       | |         `-CXXThisExpr 0x559fecf40528 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x559fecf40780 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x559fecf40768 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x559fecf406a8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x559fecf3e600 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x559fecf407a8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x559fecf40708 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x559fecf39658
|       |       `-MemberExpr 0x559fecf406d8 <col:15> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|       |         `-CXXThisExpr 0x559fecf406c8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x559fecf40880 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x559fecf40818 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559fecf39658
|         | `-MemberExpr 0x559fecf407e8 <col:6> 'String::rep_t' lvalue ->_r 0x559fecf396d0
|         |   `-CXXThisExpr 0x559fecf407d8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x559fecf40868 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x559fecf40848 <col:16> 'int' 0
|-CXXMethodDecl 0x559fecf3a0b8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x559fecf39ed8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559fecf39f58 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559fecf39fd0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x559fecf3a190 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x559fecf3a3e0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x559fecf3a248 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559fecf3a2c8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559fecf3a340 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x559fecf3a5c8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x559fecf3a4b0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x559fecf3a530 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x559fecf3a6c8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x559fecf409b8 <col:41, line:286:5>
|   `-ReturnStmt 0x559fecf409a8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x559fecf40978 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x559fecf40940 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x559fecf40928 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x559fecf40908 <col:46> 'int' 1
|-CXXMethodDecl 0x559fecf3a968 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x559fecf3a780 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x559fecf3a800 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x559fecf3a880 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x559fecf3e600 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x559fecf3aa30 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x559fecf3e6d0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x559fecf3e8a0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x559fecf3e788 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559fecf3e808 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x559fecf3e960 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x559fecf3ea28 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x559fecf3eb28 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x559fecf3eba0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x559fecf3ec18 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x559fecf3ec80 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x559fecf3ed80 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x559fecf3edd0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fecf3ed60 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x559fecf3ed40 <col:22> 'int' 14
|-CXXMethodDecl 0x559fecf3efe8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x559fecf3ee00 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x559fecf3ee80 <col:38> col:41 'int'
| `-ParmVarDecl 0x559fecf3ef00 <col:43> col:46 'int'
|-FriendDecl 0x559fecf3f0f0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x559fecf3f180 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed1a7270 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fed1a7388 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x559fed1a7430 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x559fed1a7498 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x559fed1a7500 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x559fed1a75b0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x559fed1a7430 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x559fed1a8430 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x559fed1a83e8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x559fed1a83b0 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x559fed1a8398 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x559fed1a8340 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x559fecf565c0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x559fed1a7498 'len' 'int'
| | `-IntegerLiteral 0x559fed1a84a8 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x559fed1a7500 'cap' 'int'
| | `-IntegerLiteral 0x559fed1a8510 <col:20> 'int' 0
| `-CompoundStmt 0x559fed1a8590 <col:23, line:119:2>
|-CXXConstructorDecl 0x559fed1a7728 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x559fed1a7668 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x559fed1a85a0 <col:37, line:121:2>
|-CXXConstructorDecl 0x559fed1aa7b8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559fed1aa8c8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x559fed1a7430 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x559fed1ac280 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x559fed1ac250 <col:12> 'unsigned char *const' lvalue .s 0x559fed1a7430
| |     `-DeclRefExpr 0x559fed1ac230 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559fed1aa8c8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x559fed1a7498 'len' 'int'
| | `-ImplicitCastExpr 0x559fed1ac310 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559fed1ac2e0 <col:12> 'const int' lvalue .len 0x559fed1a7498
| |     `-DeclRefExpr 0x559fed1ac2c0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559fed1aa8c8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x559fed1a7500 'cap' 'int'
| | `-ImplicitCastExpr 0x559fed1ac3a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559fed1ac370 <col:12> 'const int' lvalue .cap 0x559fed1a7500
| |     `-DeclRefExpr 0x559fed1ac350 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559fed1aa8c8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x559fed1ac3f8 <col:12>
|-CXXConstructorDecl 0x559fed1aa968 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x559fed1aa968
| `-ParmVarDecl 0x559fed1aaa78 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x559fed1ac6b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed1a13d0 prev 0x559fecf65ab0 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559fed1a14c8 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x559fed1a1558 <col:21, col:27> col:21 public
|-TypedefDecl 0x559fed1a1598 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x559fecc04fd0 'const char *'
|   `-QualType 0x559fecc04521 'const char' const
|     `-BuiltinType 0x559fecc04520 'char'
|-TypedefDecl 0x559fed1a1608 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x559fecc051a0 'char *'
|   `-BuiltinType 0x559fecc04520 'char'
|-TypedefDecl 0x559fed1a1740 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x559fed1a16b0 'int (StringAccum::*)() const'
|   |-RecordType 0x559fecec0c60 'StringAccum'
|   | `-CXXRecord 0x559fed1a13d0 'StringAccum'
|   `-ParenType 0x559fecf305d0 'int () const' sugar
|     `-FunctionProtoType 0x559fecf04160 'int () const' const cdecl
|       `-BuiltinType 0x559fecc04580 'int'
|-CXXConstructorDecl 0x559fed1a1800 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x559fed1a1950 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x559fed1a18c0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x559fed1a1aa0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x559fed1a1a10 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x559fed1a1c48 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x559fed1a1b88 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x559fed1a1df8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x559fed1a1d38 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x559fed1a1ef0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x559fed1a20a8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x559fed1a1fe0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x559fed1a2228 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x559fed1a2160 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x559fed1a2320 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x559fed1a23e8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x559fed1a24b0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x559fed1a2578 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x559fed1a2640 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x559fed1a27a8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559fed1a2878 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559fed1a2938 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x559fed1a2a48 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x559fed1a2b58 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x559fed1a2c18 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x559fed1a2cd8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x559fed1a2e20 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x559fed1a2d90 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x559fed1a2fb0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x559fed1a2ee0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x559fed1a3078 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x559fed1a3170 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x559fed1a3230 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x559fed1a32f8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x559fed1a33b8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x559fed1a3478 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x559fed1a3538 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x559fed1a3688 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x559fed1a35f0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x559fed1a37d8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x559fed1a3748 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x559fed1a3930 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x559fed1a3898 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x559fed1a3a80 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x559fed1a39f0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x559fed1a3ca0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x559fed1a3b40 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x559fed1a3bc0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x559fed1a8268 <col:53> 'int' 0
|-CXXMethodDecl 0x559fed1a3df8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x559fed1a3d68 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x559fed1a8288 <col:34> 'int' 1
|-CXXMethodDecl 0x559fed1a3f40 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x559fed1a3eb0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x559fed1a4090 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x559fed1a4000 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x559fed1a41e0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x559fed1a4150 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x559fed1a4330 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x559fed1a42a0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x559fed1a4508 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x559fed1a43f0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559fed1a4470 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559fed1a5d60 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x559fed1a45d0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x559fed1a4650 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x559fed1a5f40 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559fed1a5e28 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x559fed1a5ea8 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x559fed1a6120 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x559fed1a6008 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x559fed1a6088 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x559fed1a6300 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x559fed1a61e8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x559fed1a6268 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x559fed1a6658 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x559fed1a6440 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x559fed1a64c0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x559fed1a82a8 <col:56> 'int' 10
| `-ParmVarDecl 0x559fed1a6538 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fed1a82c8 <col:77> 'bool' true
|-CXXMethodDecl 0x559fed1a69b8 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x559fed1a67a0 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x559fed1a6820 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x559fed1a82d8 <col:57> 'int' 10
| `-ParmVarDecl 0x559fed1a6898 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fed1a82f8 <col:78> 'bool' true
|-CXXMethodDecl 0x559fed1a6be0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x559fed1a6a88 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x559fed1a6b08 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x559fed1a6cb0 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x559fed1a6e28 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x559fed1a6d60 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x559fed1a6f78 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x559fed1a6ee8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x559fed1a7020 <col:51> "" ""
|-AccessSpecDecl 0x559fed1a7090 <line:106:3, col:10> col:3 private
|-EnumDecl 0x559fed1a70b8 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x559fed1a7208 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x559fed1a7258 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed1a71e8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x559fed1a71b8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x559fecf39338 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x559fed1a7270 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559fed1a7388 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x559fed1a7430 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x559fed1a7498 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x559fed1a7500 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x559fed1a75b0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x559fed1a7430 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x559fed1a8430 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x559fed1a83e8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x559fed1a83b0 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x559fed1a8398 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x559fed1a8340 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x559fecf565c0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x559fed1a7498 'len' 'int'
| | | `-IntegerLiteral 0x559fed1a84a8 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x559fed1a7500 'cap' 'int'
| | | `-IntegerLiteral 0x559fed1a8510 <col:20> 'int' 0
| | `-CompoundStmt 0x559fed1a8590 <col:23, line:119:2>
| |-CXXConstructorDecl 0x559fed1a7728 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x559fed1a7668 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x559fed1a85a0 <col:37, line:121:2>
| |-CXXConstructorDecl 0x559fed1aa7b8 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559fed1aa8c8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x559fed1a7430 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x559fed1ac280 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x559fed1ac250 <col:12> 'unsigned char *const' lvalue .s 0x559fed1a7430
| | |     `-DeclRefExpr 0x559fed1ac230 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559fed1aa8c8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x559fed1a7498 'len' 'int'
| | | `-ImplicitCastExpr 0x559fed1ac310 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559fed1ac2e0 <col:12> 'const int' lvalue .len 0x559fed1a7498
| | |     `-DeclRefExpr 0x559fed1ac2c0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559fed1aa8c8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x559fed1a7500 'cap' 'int'
| | | `-ImplicitCastExpr 0x559fed1ac3a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559fed1ac370 <col:12> 'const int' lvalue .cap 0x559fed1a7500
| | |     `-DeclRefExpr 0x559fed1ac350 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559fed1aa8c8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x559fed1ac3f8 <col:12>
| |-CXXConstructorDecl 0x559fed1aa968 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x559fed1aa968
| | `-ParmVarDecl 0x559fed1aaa78 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x559fed1ac6b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x559fed1a7800 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x559fed1a7900 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x559fed1a7868 <col:16> col:19 'int'
|-CXXMethodDecl 0x559fed1a7ae0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x559fed1a79c0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x559fed1a7a40 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x559fed1a7cc0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x559fed1a7ba8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559fed1a7c28 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x559fed1a7e18 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x559fed1a7d88 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x559fed1a7f68 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x559fed1a7ed8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x559fed1a8228 <line:132:5, col:70> col:25
  `-FunctionDecl 0x559fed1a8168 parent 0x559fecc04488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x559fed1a8020 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x559fed1a8098 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fecf23980 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fecf23a98 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x559fecf23b28 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x559fecf23bf8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x559fecf23ce0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x559fecf23ef8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559fecf23da0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf240a8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x559fecf23fb0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x559fecf241f0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x559fecf24160 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x559fecf24338 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559fecf242a8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf24480 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559fecf243f0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf24548 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x559fecf24690 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x559fecf24600 <col:28> col:31 'int'
|-CXXMethodDecl 0x559fecf24758 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x559fecf248a0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x559fecf24810 <col:28> col:31 'int'
|-CXXMethodDecl 0x559fecf24a18 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559fecf24958 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf24b60 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559fecf24ad0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf24c28 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x559fecf24de8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559fecf24cd8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559fecf24d50 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf25038 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559fecf24ea8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559fecf24f20 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559fecf250e8 <col:86> "" ""
|-CXXMethodDecl 0x559fecf25358 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x559fecf251c8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x559fecf25240 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf25508 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559fecf25418 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559fecf256b8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559fecf255c0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559fecf25988 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559fecf25770 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559fecf257e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559fecf25860 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf25c68 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559fecf25a50 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559fecf25ac8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559fecf25b40 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559fecf25d20 <col:115> "" ""
|-AccessSpecDecl 0x559fecf25d90 <line:84:3, col:10> col:3 private
|-FieldDecl 0x559fecf25dc8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fecf272e0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559fecf272e0
| `-ParmVarDecl 0x559fecf273e8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x559fecf27488 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559fecf27488
| `-ParmVarDecl 0x559fecf27598 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x559fecf5cbc8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559fed14e9c0 <col:7>
|-CXXConstructorDecl 0x559fecf5cca0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559fecf5cca0
| `-ParmVarDecl 0x559fecf5cdb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x559fecf5ce28 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559fecf5ce28
| `-ParmVarDecl 0x559fecf5cf38 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x559fed1513c0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed13d568 prev 0x559fed132770 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fed13d660 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x559fed13d750 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x559fed13d878 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x559fed13d9f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x559fed13db78 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x559fed13dcf8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x559fed14eb28 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559fed14f398 <col:11>
|-CXXDestructorDecl 0x559fed14ec00 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559fed14ed38 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x559fed14ed38
| `-ParmVarDecl 0x559fed14ee48 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x559fed14eee8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559fed14eee8
| `-ParmVarDecl 0x559fed14eff8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x559fed151db8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x559fed151ec8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x559fed152148 <col:11>
|   `-ReturnStmt 0x559fed152138 <col:11>
|     `-UnaryOperator 0x559fed152120 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559fed152110 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x559fed151f38 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559fed151f38
  `-ParmVarDecl 0x559fed152048 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed13dd60 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559fed13de78 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x559fed13df18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x559fed13df80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x559fed13dfe8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x559fed13e050 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x559fed13e0b0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x559fed13e170 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x559fed13e1d0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x559fed13e230 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x559fed14ea38 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x559fed13df18 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x559fed14f3a8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x559fed14f400 <col:12>
|-CXXConstructorDecl 0x559fed14f068 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x559fed14f068
| `-ParmVarDecl 0x559fed14f178 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x559fed14f218 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x559fed14f218
| `-ParmVarDecl 0x559fed14f328 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x559fed1514a0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559fed12be80 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559fed12bf98 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x559fed12c028 <col:16, col:22> col:16 public
|-EnumDecl 0x559fed12c050 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x559fed12c150 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x559fed12c230 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed12c130 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x559fed12c110 <col:21> 'int' 28
| `-EnumConstantDecl 0x559fed12c1e0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x559fed12c248 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed12c1c0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x559fed12c1a0 <col:22> 'int' 64
|-CXXMethodDecl 0x559fed12c588 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x559fed12c270 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559fed12c2f0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x559fed12c368 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559fed12c3e0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559fed12c648 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x559fed12c848 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x559fed12c6c0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x559fed12c738 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559fed12c8f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559fed12ca58 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x559fed12c968 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559fed12cb00 <col:72> warn_unused_result ""
|-TypedefDecl 0x559fed12ce60 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x559fed12cdf0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x559fed12cd90 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x559fed12cd50 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x559fecc044e0 'void'
|       |-PointerType 0x559feceac000 'unsigned char *'
|       | `-BuiltinType 0x559fecc045e0 'unsigned char'
|       |-TypedefType 0x559fecca85f0 'size_t' sugar
|       | |-Typedef 0x559fecc74be0 'size_t'
|       | `-BuiltinType 0x559fecc04640 'unsigned long'
|       `-PointerType 0x559fecc04ce0 'void *'
|         `-BuiltinType 0x559fecc044e0 'void'
|-CXXMethodDecl 0x559fed12d2d8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x559fed12ced0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x559fed12cf48 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559fed12cfe0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x559fed12d060 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x559fed1479d0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x559fed1479b8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x559fed147980 <col:58> 'int' 0
| |-ParmVarDecl 0x559fed12d0e0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x559fed1479f8 <col:76> 'int' 0
| |-ParmVarDecl 0x559fed12d160 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x559fed147a18 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x559fed12d3a8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x559fed12d428 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x559fed12d4e8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x559fed12d588 <col:20>
| `-OptimizeNoneAttr 0x559fed12d5e0 <col:30>
|-CXXMethodDecl 0x559fed12d658 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x559fed12d6f8 <col:20>
| `-OptimizeNoneAttr 0x559fed12d750 <col:30>
|-CXXMethodDecl 0x559fed12d7c8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x559fed12d868 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x559fed12d918 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x559fed12d9b8 <col:20>
| |-OptimizeNoneAttr 0x559fed12da10 <col:30>
| `-WarnUnusedResultAttr 0x559fed12da38 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x559fed12da90 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x559fed12db30 <col:20>
| `-OptimizeNoneAttr 0x559fed12db88 <col:30>
|-CXXMethodDecl 0x559fed12dbd8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x559fed12dc78 <col:20>
| `-OptimizeNoneAttr 0x559fed12dcd0 <col:30>
|-CXXMethodDecl 0x559fed12dd18 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x559fed12ddb8 <col:20>
| `-OptimizeNoneAttr 0x559fed12de10 <col:30>
|-CXXMethodDecl 0x559fed12de58 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559fed12df18 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559fed12dfe0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559fed12e0a8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559fed12e168 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559fed12e288 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x559fed147ae0 <col:54, line:99:5>
|   `-ReturnStmt 0x559fed147ad0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x559fed147ab8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x559fed147a88 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559fed13e568
|         `-CXXThisExpr 0x559fed147a78 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x559fed12e428 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x559fed12e338 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x559fed147b90 <col:67, line:103:5>
|   `-BinaryOperator 0x559fed147b70 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559fed147b08 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559fed13e568
|     | `-CXXThisExpr 0x559fed147af8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559fed147b58 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x559fed147b38 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x559fed12e338 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x559fed12e520 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x559fed147c10 <col:33, line:107:5>
|   `-ReturnStmt 0x559fed147c00 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x559fed147be8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x559fed147bb8 <col:16> 'void *' lvalue ->_destructor_argument 0x559fed13e5d0
|         `-CXXThisExpr 0x559fed147ba8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559fed12e5e0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x559fed148240 <col:25, line:113:5>
|   |-ParenExpr 0x559fed147f88 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x559fed147f58 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x559fed147cc8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559fed147ca0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x559fed147c68 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x559fed147c38 <col:24> '<bound member function type>' ->shared 0x559fed12d658
|   |   |       `-ImplicitCastExpr 0x559fed147c88 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x559fed147c28 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559fed147d28 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed147d08 <col:42> 'int' 0
|   |   `-CallExpr 0x559fed147eb8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x559fed147ea0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed147e80 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed147ef8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed147d98 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x559fed147f10 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed147dc0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed147f28 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed147df8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x559fed147f40 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed147e68 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed147e50 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed147e18 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x559fed148188 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x559fed147fb8 <col:2> 'unsigned char *' lvalue ->_head 0x559fed13e370
|   | | `-CXXThisExpr 0x559fed147fa8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x559fed148170 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x559fed148150 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x559fed147ff8 <col:10> 'unsigned char *' lvalue ->_data 0x559fed13e3d8
|   |     | `-CXXThisExpr 0x559fed147fe8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x559fed148138 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x559fed148118 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x559fed148038 <col:18> 'unsigned char *' lvalue ->_tail 0x559fed13e440
|   |         | `-CXXThisExpr 0x559fed148028 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x559fed148100 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x559fed1480e0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x559fed148078 <col:26> 'unsigned char *' lvalue ->_end 0x559fed13e4a8
|   |             | `-CXXThisExpr 0x559fed148068 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x559fed1480c8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x559fed1480a8 <col:33> 'int' 0
|   `-BinaryOperator 0x559fed148220 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559fed1481b8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559fed13e568
|     | `-CXXThisExpr 0x559fed1481a8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559fed148208 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x559fed1481e8 <col:16> 'int' 0
|-CXXMethodDecl 0x559fed12e720 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559fed12e690 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed12e7c8 <col:20>
| |-OptimizeNoneAttr 0x559fed12e820 <col:30>
| `-WarnUnusedResultAttr 0x559fed12e848 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559fed12e918 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559fed12e888 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed12e9c0 <col:20>
| |-OptimizeNoneAttr 0x559fed12ea18 <col:30>
| `-WarnUnusedResultAttr 0x559fed12ea40 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x559fed12eb78 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x559fed12ea80 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559fed12ec20 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x559fed12ed20 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x559fed12ec90 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed12edc8 <col:20>
| `-OptimizeNoneAttr 0x559fed12ee20 <col:30>
|-CXXMethodDecl 0x559fed12eee8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559fed12ee58 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559fed12ef90 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x559fed12f090 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x559fed12f000 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559fed12f138 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x559fed12f238 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x559fed12f1a8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed12f2e0 <col:20>
| `-OptimizeNoneAttr 0x559fed12f338 <col:30>
|-CXXMethodDecl 0x559fed12f4c8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x559fed12f378 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x559fed12f3f0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x559fed147a38 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x559fed12f578 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x559fed12f778 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559fed12f5f0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x559fed12f668 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed12f988 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559fed12f838 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559fed12f8b0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed12fb98 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x559fed12fa48 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x559fed12fac8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x559fed147a48 <col:39> 'int' 0
|-CXXMethodDecl 0x559fed12fc68 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x559fed12fd30 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559fed12fdf8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x559fed12feb8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559fed12ff80 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x559fed1300c8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x559fed130038 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x559fed130298 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559fed130188 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x559fed130200 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed130368 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x559fed130428 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x559fed1304c8 <col:20>
| `-OptimizeNoneAttr 0x559fed130520 <col:30>
|-CXXMethodDecl 0x559fed130570 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x559fed130610 <col:20>
| `-OptimizeNoneAttr 0x559fed130668 <col:30>
|-CXXMethodDecl 0x559fed1306b8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x559fed130778 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559fed130840 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x559fed1308e0 <col:20>
| `-OptimizeNoneAttr 0x559fed130938 <col:30>
|-CXXMethodDecl 0x559fed130a88 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559fed130978 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x559fed1309f0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed130bd8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x559fed130b48 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed130cb0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x559fed130d70 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x559fed130e10 <col:20>
| `-OptimizeNoneAttr 0x559fed130e68 <col:30>
|-CXXMethodDecl 0x559fed130eb8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x559fed130f58 <col:20>
| `-OptimizeNoneAttr 0x559fed130fb0 <col:30>
|-CXXMethodDecl 0x559fed131000 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x559fed1310c8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x559fed131168 <col:20>
| `-OptimizeNoneAttr 0x559fed1311c0 <col:30>
|-CXXMethodDecl 0x559fed131208 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x559fed131328 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x559fed131498 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x559fed1313d8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x559fed131588 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x559fed131628 <col:20>
| `-OptimizeNoneAttr 0x559fed131680 <col:30>
|-CXXMethodDecl 0x559fed1316d0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x559fed131790 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559fed1319c8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x559fed131840 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x559fed1318b8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed131a78 <col:20>
| `-OptimizeNoneAttr 0x559fed131ad0 <col:30>
|-CXXMethodDecl 0x559fed131b78 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x559fed131c18 <col:20>
| `-OptimizeNoneAttr 0x559fed131c70 <col:30>
|-CXXMethodDecl 0x559fed131cc0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x559fed131d60 <col:20>
| `-OptimizeNoneAttr 0x559fed131db8 <col:30>
|-CXXMethodDecl 0x559fed131e00 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x559fed131ea0 <col:20>
| `-OptimizeNoneAttr 0x559fed131ef8 <col:30>
|-CXXMethodDecl 0x559fed131ff8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x559fed131f30 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x559fed1320a0 <col:20>
| `-OptimizeNoneAttr 0x559fed1320f8 <col:30>
|-CXXMethodDecl 0x559fed1322b8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x559fed132130 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x559fed1321a8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed132368 <col:20>
| `-OptimizeNoneAttr 0x559fed1323c0 <col:30>
|-CXXMethodDecl 0x559fed132468 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x559fed132588 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x559fed1326a8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x559fed132748 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x559fed132770 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x559fed132898 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x559fed132938 <col:20>
| `-OptimizeNoneAttr 0x559fed132990 <col:30>
|-CXXMethodDecl 0x559fed132a38 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x559fed132ad8 <col:20>
| `-OptimizeNoneAttr 0x559fed132b30 <col:30>
|-AccessSpecDecl 0x559fed132b58 <line:344:3, col:9> col:3 public
|-EnumDecl 0x559fed132b80 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x559fed132c80 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x559fed132cd0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed132c60 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x559fed132c40 <col:14> 'int' 48
|-CXXMethodDecl 0x559fed132d38 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x559fed132dd8 <col:20>
| `-OptimizeNoneAttr 0x559fed132e30 <col:30>
|-CXXMethodDecl 0x559fed132ea8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x559fed132f48 <col:20>
| `-OptimizeNoneAttr 0x559fed132fa0 <col:30>
|-CXXMethodDecl 0x559fed133068 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x559fed132fd8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x559fed133208 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x559fed1333a8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x559fed1332b8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x559fed133450 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x559fed133550 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559fed133900 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed133530 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x559fed133510 <col:9> 'int' 0
| |-EnumConstantDecl 0x559fed1335e0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559fed133918 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1335c0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x559fed1335a0 <col:14> 'int' 1
| |-EnumConstantDecl 0x559fed133670 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559fed133930 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed133650 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x559fed133630 <col:14> 'int' 2
| |-EnumConstantDecl 0x559fed133700 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559fed133948 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1336e0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x559fed1336c0 <col:14> 'int' 3
| |-EnumConstantDecl 0x559fed133790 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559fed133960 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed133770 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x559fed133750 <col:13> 'int' 4
| |-EnumConstantDecl 0x559fed133820 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559fed133978 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed133800 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x559fed1337e0 <col:13> 'int' 5
| `-EnumConstantDecl 0x559fed1338b0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x559fed133990 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed133890 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x559fed133870 <col:14> 'int' 6
|-CXXMethodDecl 0x559fed1339f8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x559fed133a98 <col:20>
| `-OptimizeNoneAttr 0x559fed133af0 <col:30>
|-CXXMethodDecl 0x559fed133be8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x559fed133b28 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x559fed133c90 <col:20>
| `-OptimizeNoneAttr 0x559fed133ce8 <col:30>
|-CXXMethodDecl 0x559fed133d58 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x559fed133e80 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x559fed133ff8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x559fed133f30 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x559fed1340c0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x559fed134188 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x559fed1342c8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x559fed134238 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x559fed134370 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x559fed134470 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559fed134670 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed134450 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x559fed134430 <col:23> 'int' 0
| |-EnumConstantDecl 0x559fed134500 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559fed134688 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1344e0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x559fed1344c0 <col:45> 'int' 4
| |-EnumConstantDecl 0x559fed134590 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559fed1346a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed134570 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x559fed134550 <col:24> 'int' 0
| `-EnumConstantDecl 0x559fed134620 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x559fed1346b8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed134600 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x559fed1345e0 <col:47> 'int' 16
|-CXXMethodDecl 0x559fed134718 <line:431:5, col:36> col:22 used dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x559fed134888 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x559fed1347c8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x559fed134930 <col:20>
| `-OptimizeNoneAttr 0x559fed134988 <col:30>
|-CXXMethodDecl 0x559fed1349d8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x559fed148360 <col:18, col:36>
|   `-ReturnStmt 0x559fed148350 <col:20, col:33>
|     `-ImplicitCastExpr 0x559fed148338 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x559fed148318 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x559fed1482e8 <col:27> '<bound member function type>' ->xanno 0x559fed132a38
|           `-CXXThisExpr 0x559fed1482d8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x559fed134ad0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x559fed148470 <col:30, col:48>
|   `-ReturnStmt 0x559fed148460 <col:32, col:45>
|     `-ImplicitCastExpr 0x559fed148448 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x559fed148428 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x559fed1483f8 <col:39> '<bound member function type>' ->xanno 0x559fed132898
|           `-CXXThisExpr 0x559fed1483e8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x559fed134bb8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x559fed148608 <col:24, col:50>
|   `-ReturnStmt 0x559fed1485f8 <col:26, col:47>
|     `-UnaryOperator 0x559fed1485e0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559fed1485c0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x559fed1485a8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559fed148558 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x559fed13d878
|         |   `-CXXMemberCallExpr 0x559fed148538 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x559fed148508 <col:34> '<bound member function type>' ->xanno 0x559fed132a38
|         |       `-CXXThisExpr 0x559fed1484f8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x559fed148588 <col:46> 'int' 0
|-CXXMethodDecl 0x559fed134cc0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x559fed1487d8 <col:36, col:62>
|   `-ReturnStmt 0x559fed1487c8 <col:38, col:59>
|     `-UnaryOperator 0x559fed1487b0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559fed148790 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559fed148778 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559fed1486f0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x559fed13d878
|         |   `-CXXMemberCallExpr 0x559fed1486d0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559fed1486a0 <col:46> '<bound member function type>' ->xanno 0x559fed132898
|         |       `-CXXThisExpr 0x559fed148690 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559fed148720 <col:58> 'int' 0
|-CXXMethodDecl 0x559fed134dd8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x559fed148970 <col:26, col:53>
|   `-ReturnStmt 0x559fed148960 <col:28, col:50>
|     `-UnaryOperator 0x559fed148948 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559fed148928 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x559fed148910 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559fed1488c0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x559fed13db78
|         |   `-CXXMemberCallExpr 0x559fed1488a0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x559fed148870 <col:36> '<bound member function type>' ->xanno 0x559fed132a38
|         |       `-CXXThisExpr 0x559fed148860 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x559fed1488f0 <col:49> 'int' 0
|-CXXMethodDecl 0x559fed134ef8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x559fed148b48 <col:38, col:65>
|   `-ReturnStmt 0x559fed148b38 <col:40, col:62>
|     `-UnaryOperator 0x559fed148b20 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559fed148b00 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x559fed148ae8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559fed148a58 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x559fed13db78
|         |   `-CXXMemberCallExpr 0x559fed148a38 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559fed148a08 <col:48> '<bound member function type>' ->xanno 0x559fed132898
|         |       `-CXXThisExpr 0x559fed1489f8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559fed148a88 <col:61> 'int' 0
|-CXXMethodDecl 0x559fed1350a8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x559fed134fb0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x559fed149218 <col:34, line:463:5>
|   |-ParenExpr 0x559fed149060 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x559fed149030 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559fed148c98 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed148c68 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed148bb8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed148ba0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed148b60 <col:23> 'int' lvalue ParmVar 0x559fed134fb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed148b80 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed148c48 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed148c18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed148bd8 <col:33> 'int' lvalue ParmVar 0x559fed134fb0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559fed148c30 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559fed148bf8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559fed148cf8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed148cd8 <col:56> 'int' 0
|   |   `-CallExpr 0x559fed148f90 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559fed148f78 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed148f58 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed148fd0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed148de8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559fed148fe8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed148e18 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed149000 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed148e50 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x559fed149018 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed148f40 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed148f28 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed148ee8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x559fed149208 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x559fed1491f0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x559fed1491d0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559fed1491a0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559fed149150 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x559fed13d878
|         |   `-CXXMemberCallExpr 0x559fed149130 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559fed149100 <col:9> '<bound member function type>' ->xanno 0x559fed132898
|         |       `-CXXThisExpr 0x559fed1490f0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x559fed1491b8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x559fed149180 <col:21> 'int' lvalue ParmVar 0x559fed134fb0 'i' 'int'
|-CXXMethodDecl 0x559fed1352f8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x559fed135168 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x559fed1351e0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x559fed1498a8 <col:40, line:472:5>
|   |-ParenExpr 0x559fed1496c0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x559fed149690 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559fed149370 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed149340 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed149290 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed149278 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed149238 <col:23> 'int' lvalue ParmVar 0x559fed135168 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed149258 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed149320 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed1492f0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed1492b0 <col:33> 'int' lvalue ParmVar 0x559fed135168 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559fed149308 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559fed1492d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559fed1493d0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed1493b0 <col:56> 'int' 0
|   |   `-CallExpr 0x559fed1495f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559fed1495d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed1495b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed149630 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed149440 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559fed149648 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed149470 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed149660 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed1494a8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x559fed149678 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed1495a0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed149588 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed149548 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x559fed149888 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x559fed149830 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x559fed149800 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x559fed1497b0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x559fed13d878
|     | |   `-CXXMemberCallExpr 0x559fed149790 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x559fed149760 <col:2> '<bound member function type>' ->xanno 0x559fed132a38
|     | |       `-CXXThisExpr 0x559fed149750 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x559fed149818 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x559fed1497e0 <col:14> 'int' lvalue ParmVar 0x559fed135168 'i' 'int'
|     `-ImplicitCastExpr 0x559fed149870 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x559fed149850 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x559fed1351e0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x559fed1354b8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x559fed1353c0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559fed14a028 <col:36, line:485:5>
|   |-ParenExpr 0x559fed149d90 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed149d60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed149a40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed149a10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed149920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed149908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed1498c8 <col:23> 'int' lvalue ParmVar 0x559fed1353c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed1498e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed1499f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed1499d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed149940 <col:33> 'int' lvalue ParmVar 0x559fed1353c0 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed1499b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed1499a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed149960 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed149980 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559fed149aa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed149a80 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed149cc0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed149ca8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed149c88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed149d00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed149b10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559fed149d18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed149b48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed149d30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed149b80 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x559fed149d48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed149c70 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed149c58 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed149c18 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x559fed14a018 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x559fed14a000 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x559fed149fe8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559fed149fb8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x559fed149f58 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559fed149f28 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559fed149ea0 <col:61, col:70> 'char const[48]' lvalue ->c 0x559fed13d750
|             |   `-CXXMemberCallExpr 0x559fed149e80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559fed149e50 <col:61> '<bound member function type>' ->xanno 0x559fed132898
|             |       `-CXXThisExpr 0x559fed149e40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559fed149f40 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559fed149ed0 <col:74> 'int' lvalue ParmVar 0x559fed1353c0 'i' 'int'
|-CXXMethodDecl 0x559fed135708 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x559fed135578 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559fed1355f0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559fed14a778 <col:42, line:500:5>
|   |-ParenExpr 0x559fed14a510 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14a4e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14a1c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14a190 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14a0a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14a088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14a048 <col:23> 'int' lvalue ParmVar 0x559fed135578 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14a068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14a170 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14a158 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14a0c0 <col:33> 'int' lvalue ParmVar 0x559fed135578 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14a138 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14a120 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14a0e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14a100 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559fed14a220 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14a200 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14a440 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14a428 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14a408 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14a480 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14a290 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559fed14a498 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14a2c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14a4b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14a300 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x559fed14a4c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14a3f0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14a3d8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14a398 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x559fed14a758 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x559fed14a708 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559fed14a6d8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x559fed14a680 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559fed14a650 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559fed14a600 <col:48, col:57> 'char [48]' lvalue ->c 0x559fed13d750
|     |     |   `-CXXMemberCallExpr 0x559fed14a5e0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559fed14a5b0 <col:48> '<bound member function type>' ->xanno 0x559fed132a38
|     |     |       `-CXXThisExpr 0x559fed14a5a0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559fed14a668 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559fed14a630 <col:61> 'int' lvalue ParmVar 0x559fed135578 'i' 'int'
|     `-ImplicitCastExpr 0x559fed14a740 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x559fed14a720 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x559fed1355f0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559fed1358c8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x559fed1357d0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559fed14aed8 <col:35, line:513:5>
|   |-ParenExpr 0x559fed14abe8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14abb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14a910 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14a8e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14a7f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14a7d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14a798 <col:23> 'int' lvalue ParmVar 0x559fed1357d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14a7b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14a8c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14a8a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14a810 <col:33> 'int' lvalue ParmVar 0x559fed1357d0 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14a888 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14a870 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14a830 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14a850 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559fed14a970 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14a950 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14ab18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14ab00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14aae0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14ab58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14a9e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559fed14ab70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14aa18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14ab88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14aa50 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x559fed14aba0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14aac8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14aab0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14aa70 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x559fed14aec8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x559fed14aeb0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x559fed14ae98 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559fed14ae68 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x559fed14ade0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559fed14adb0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559fed14ad60 <col:60, col:69> 'char const[48]' lvalue ->c 0x559fed13d750
|             |   `-CXXMemberCallExpr 0x559fed14ad40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559fed14ad10 <col:60> '<bound member function type>' ->xanno 0x559fed132898
|             |       `-CXXThisExpr 0x559fed14ad00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559fed14adc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559fed14ad90 <col:73> 'int' lvalue ParmVar 0x559fed1357d0 'i' 'int'
|-CXXMethodDecl 0x559fed135b18 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x559fed135988 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559fed135a00 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x559fed14b5f8 <col:41, line:528:5>
|   |-ParenExpr 0x559fed14b380 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14b350 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14b070 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14b040 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14af50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14af38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14aef8 <col:23> 'int' lvalue ParmVar 0x559fed135988 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14af18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14b020 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14b008 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14af70 <col:33> 'int' lvalue ParmVar 0x559fed135988 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14afe8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14afd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14af90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14afb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559fed14b0d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14b0b0 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14b2b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14b298 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14b278 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14b2f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14b140 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559fed14b308 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14b178 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14b320 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14b1b0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x559fed14b338 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14b260 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14b248 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14b208 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x559fed14b5d8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x559fed14b588 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559fed14b558 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x559fed14b500 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559fed14b4c0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559fed14b470 <col:47, col:56> 'char [48]' lvalue ->c 0x559fed13d750
|     |     |   `-CXXMemberCallExpr 0x559fed14b450 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559fed14b420 <col:47> '<bound member function type>' ->xanno 0x559fed132a38
|     |     |       `-CXXThisExpr 0x559fed14b410 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559fed14b4d8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559fed14b4a0 <col:60> 'int' lvalue ParmVar 0x559fed135988 'i' 'int'
|     `-ImplicitCastExpr 0x559fed14b5c0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x559fed14b5a0 <col:65> 'int16_t':'short' lvalue ParmVar 0x559fed135a00 'x' 'int16_t':'short'
|-CXXMethodDecl 0x559fed135cd8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x559fed135be0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559fed14bcc8 <col:36, line:541:5>
|   |-ParenExpr 0x559fed14ba68 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14ba38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14b790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14b760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14b670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14b658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14b618 <col:23> 'int' lvalue ParmVar 0x559fed135be0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14b638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14b740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14b728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14b690 <col:33> 'int' lvalue ParmVar 0x559fed135be0 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14b708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14b6f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14b6b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14b6d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559fed14b7f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14b7d0 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14b998 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14b980 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14b960 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14b9d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14b860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559fed14b9f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14b898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14ba08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14b8d0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x559fed14ba20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14b948 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14b930 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14b8f0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x559fed14bcb8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x559fed14bca0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x559fed14bc88 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559fed14bc58 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x559fed14bc00 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559fed14bbd0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559fed14bb80 <col:61, col:70> 'char const[48]' lvalue ->c 0x559fed13d750
|             |   `-CXXMemberCallExpr 0x559fed14bb60 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559fed14bb30 <col:61> '<bound member function type>' ->xanno 0x559fed132898
|             |       `-CXXThisExpr 0x559fed14bb20 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559fed14bbe8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559fed14bbb0 <col:74> 'int' lvalue ParmVar 0x559fed135be0 'i' 'int'
|-CXXMethodDecl 0x559fed135ea8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x559fed135d98 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x559fed135e10 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559fed135f58 <col:20>
| `-OptimizeNoneAttr 0x559fed135fb0 <col:30>
|-CXXMethodDecl 0x559fed1360e8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x559fed135ff0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559fed14c398 <col:35, line:562:5>
|   |-ParenExpr 0x559fed14c138 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14c108 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14be60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14be30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14bd40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14bd28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14bce8 <col:23> 'int' lvalue ParmVar 0x559fed135ff0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14bd08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14be10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14bdf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14bd60 <col:33> 'int' lvalue ParmVar 0x559fed135ff0 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14bdd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14bdc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14bd80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14bda0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559fed14bec0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14bea0 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14c068 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14c050 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14c030 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14c0a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14bf30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559fed14c0c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14bf68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14c0d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14bfa0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x559fed14c0f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14c018 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14c000 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14bfc0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x559fed14c388 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x559fed14c370 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x559fed14c358 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559fed14c328 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x559fed14c2d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559fed14c2a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559fed14c250 <col:60, col:69> 'char const[48]' lvalue ->c 0x559fed13d750
|             |   `-CXXMemberCallExpr 0x559fed14c230 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559fed14c200 <col:60> '<bound member function type>' ->xanno 0x559fed132898
|             |       `-CXXThisExpr 0x559fed14c1f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559fed14c2b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559fed14c280 <col:73> 'int' lvalue ParmVar 0x559fed135ff0 'i' 'int'
|-CXXMethodDecl 0x559fed1362f8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x559fed1361a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559fed136220 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x559fed14ca78 <col:41, line:577:5>
|   |-ParenExpr 0x559fed14c808 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14c7d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14c530 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14c500 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14c410 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14c3f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14c3b8 <col:23> 'int' lvalue ParmVar 0x559fed1361a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14c3d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14c4e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14c4c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14c430 <col:33> 'int' lvalue ParmVar 0x559fed1361a8 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14c4a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14c490 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14c450 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14c470 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559fed14c590 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14c570 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14c738 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14c720 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14c700 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14c778 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14c600 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559fed14c790 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14c638 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14c7a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14c670 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x559fed14c7c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14c6e8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14c6d0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14c690 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x559fed14ca58 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x559fed14ca08 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559fed14c9d8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x559fed14c978 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559fed14c948 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559fed14c8f8 <col:47, col:56> 'char [48]' lvalue ->c 0x559fed13d750
|     |     |   `-CXXMemberCallExpr 0x559fed14c8d8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559fed14c8a8 <col:47> '<bound member function type>' ->xanno 0x559fed132a38
|     |     |       `-CXXThisExpr 0x559fed14c898 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559fed14c960 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559fed14c928 <col:60> 'int' lvalue ParmVar 0x559fed1361a8 'i' 'int'
|     `-ImplicitCastExpr 0x559fed14ca40 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x559fed14ca20 <col:65> 'int32_t':'int' lvalue ParmVar 0x559fed136220 'x' 'int32_t':'int'
|-CXXMethodDecl 0x559fed1364b8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x559fed1363c0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559fed14d1a8 <col:36, line:591:5>
|   |-ParenExpr 0x559fed14cee8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14ceb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14cc10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14cbe0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14caf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14cad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14ca98 <col:23> 'int' lvalue ParmVar 0x559fed1363c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14cab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14cbc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14cba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14cb10 <col:33> 'int' lvalue ParmVar 0x559fed1363c0 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14cb88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14cb70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14cb30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14cb50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559fed14cc70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14cc50 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14ce18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14ce00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14cde0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14ce58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14cce0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559fed14ce70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14cd18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14ce88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14cd50 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x559fed14cea0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14cdc8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14cdb0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14cd70 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x559fed14d198 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x559fed14d180 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x559fed14d168 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559fed14d138 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x559fed14d0b0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559fed14d080 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559fed14d030 <col:61, col:70> 'char const[48]' lvalue ->c 0x559fed13d750
|             |   `-CXXMemberCallExpr 0x559fed14d010 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559fed14cfe0 <col:61> '<bound member function type>' ->xanno 0x559fed132898
|             |       `-CXXThisExpr 0x559fed14cfd0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559fed14d098 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559fed14d060 <col:74> 'int' lvalue ParmVar 0x559fed1363c0 'i' 'int'
|-CXXMethodDecl 0x559fed136708 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x559fed136578 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559fed1365f0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x559fed14d888 <col:42, line:606:5>
|   |-ParenExpr 0x559fed14d618 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x559fed14d5e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14d340 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14d310 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14d220 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14d208 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14d1c8 <col:23> 'int' lvalue ParmVar 0x559fed136578 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14d1e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14d2f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559fed14d2d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14d240 <col:33> 'int' lvalue ParmVar 0x559fed136578 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14d2b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14d2a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14d260 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559fed14d280 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559fed14d3a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14d380 <col:60> 'int' 0
|   |   `-CallExpr 0x559fed14d548 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559fed14d530 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14d510 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14d588 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14d410 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559fed14d5a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14d448 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14d5b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14d480 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x559fed14d5d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14d4f8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14d4e0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14d4a0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x559fed14d868 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x559fed14d818 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559fed14d7e8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x559fed14d788 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559fed14d758 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559fed14d708 <col:48, col:57> 'char [48]' lvalue ->c 0x559fed13d750
|     |     |   `-CXXMemberCallExpr 0x559fed14d6e8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559fed14d6b8 <col:48> '<bound member function type>' ->xanno 0x559fed132a38
|     |     |       `-CXXThisExpr 0x559fed14d6a8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559fed14d770 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559fed14d738 <col:61> 'int' lvalue ParmVar 0x559fed136578 'i' 'int'
|     `-ImplicitCastExpr 0x559fed14d850 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x559fed14d830 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x559fed1365f0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x559fed1368a0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x559fed1367d0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x559fed14e0f8 <col:33, line:620:5>
|   |-ParenExpr 0x559fed14de70 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x559fed14de40 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14da90 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14da60 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14d900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14d8e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14d8a8 <col:23> 'int' lvalue ParmVar 0x559fed1367d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14d8c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14da40 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559fed14da28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14d920 <col:33> 'int' lvalue ParmVar 0x559fed1367d0 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14da08 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14d9f0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14d940 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559fed14d9c8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559fed14d9b0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559fed14d978 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559fed14daf0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14dad0 <col:79> 'int' 0
|   |   `-CallExpr 0x559fed14dda0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559fed14dd88 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14dd68 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14dde0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14dbd8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x559fed14ddf8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14dc20 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14de10 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14dc58 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x559fed14de28 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14dd50 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14dd38 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14dcf8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x559fed14e0e8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x559fed14e0d0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x559fed14e0b8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559fed14e088 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x559fed14e000 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x559fed14dfd0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559fed14df80 <col:67, col:76> 'char const[48]' lvalue ->c 0x559fed13d750
|             |   `-CXXMemberCallExpr 0x559fed14df60 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559fed14df30 <col:67> '<bound member function type>' ->xanno 0x559fed132898
|             |       `-CXXThisExpr 0x559fed14df20 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559fed14dfe8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559fed14dfb0 <col:80> 'int' lvalue ParmVar 0x559fed1367d0 'i' 'int'
|-CXXMethodDecl 0x559fed136ab8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x559fed136960 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559fed1369e0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x559fed14e920 <col:45, line:635:5>
|   |-ParenExpr 0x559fed14e668 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x559fed14e638 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559fed14e300 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559fed14e2d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559fed14e170 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559fed14e158 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559fed14e118 <col:23> 'int' lvalue ParmVar 0x559fed136960 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559fed14e138 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559fed14e2b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559fed14e298 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559fed14e190 <col:33> 'int' lvalue ParmVar 0x559fed136960 'i' 'int'
|   |   |     `-BinaryOperator 0x559fed14e278 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559fed14e260 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559fed14e1b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559fed132c80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559fed14e238 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559fed14e220 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559fed14e1e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559fed14e360 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559fed14e340 <col:79> 'int' 0
|   |   `-CallExpr 0x559fed14e598 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559fed14e580 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559fed14e560 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559fecc9f350 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559fed14e5d8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14e3d0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x559fed14e5f0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559fed14e418 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559fed14e608 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559fed14e450 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x559fed14e620 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559fed14e548 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559fed14e530 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559fed14e4e8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x559fed14e900 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x559fed14e868 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559fed14e838 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x559fed14e7d8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559fed14e7a8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559fed14e758 <col:54, col:63> 'char [48]' lvalue ->c 0x559fed13d750
|     |     |   `-CXXMemberCallExpr 0x559fed14e738 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559fed14e708 <col:54> '<bound member function type>' ->xanno 0x559fed132a38
|     |     |       `-CXXThisExpr 0x559fed14e6f8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559fed14e7c0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559fed14e788 <col:67> 'int' lvalue ParmVar 0x559fed136960 'i' 'int'
|     `-CXXConstCastExpr 0x559fed14e8d0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x559fed14e8b8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x559fed14e880 <col:91> 'const void *' lvalue ParmVar 0x559fed1369e0 'x' 'const void *'
|-CXXMethodDecl 0x559fed136b88 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x559fed14e9a8 <col:34, line:640:5>
|   `-ReturnStmt 0x559fed14e998 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x559fed14e980 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x559fed14e950 <col:16> 'Packet *' lvalue ->_data_packet 0x559fed13e308
|         `-CXXThisExpr 0x559fed14e940 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559fed136cc8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x559fed136c38 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559fed147a68 <col:46> 'bool' true
|-CXXMethodDecl 0x559fed136e48 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x559fed136d80 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x559fed136ef0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x559fed1376a0 <line:660:22> "" ""
| |-EnumConstantDecl 0x559fed136ff0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed137710 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed136fd0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x559fed136fb0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559fed12c150 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559fed137080 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed137728 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed137060 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x559fed137040 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559fed12c1e0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559fed137110 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed137740 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1370f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559fed1370d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x559fed1371a0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed137758 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed137180 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x559fed137160 <col:19> 'int' 16
| |-EnumConstantDecl 0x559fed137230 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed137770 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed137210 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x559fed1371f0 <col:21> 'int' 16
| |-EnumConstantDecl 0x559fed1372c0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed137788 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1372a0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x559fed137280 <col:19> 'int' 32
| |-EnumConstantDecl 0x559fed137350 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed1377a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed137330 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x559fed137310 <col:19> 'int' EnumConstant 0x559fed1371a0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559fed1373e0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed1377b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed1373c0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x559fed1373a0 <col:19> 'int' EnumConstant 0x559fed1372c0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559fed1374b0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed1377d0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed137490 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x559fed137470 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559fed137430 <col:23> 'int' EnumConstant 0x559fed1373e0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559fed137450 <col:40> 'int' 2
| |-EnumConstantDecl 0x559fed137580 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559fed1377e8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559fed137560 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x559fed137540 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559fed137500 <col:23> 'int' EnumConstant 0x559fed1373e0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559fed137520 <col:40> 'int' 4
| `-EnumConstantDecl 0x559fed137650 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x559fed137800 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559fed137630 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x559fed137610 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x559fed1375d0 <col:23> 'int' EnumConstant 0x559fed1373e0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x559fed1375f0 <col:40> 'int' 8
|-CXXMethodDecl 0x559fed137840 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x559fed1378e0 <col:68> "" ""
|-CXXMethodDecl 0x559fed137978 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x559fed137a18 <col:45> "" ""
|-CXXMethodDecl 0x559fed137ab0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559fed137b50 <col:57> "" ""
|-CXXMethodDecl 0x559fed137be8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x559fed137c88 <col:45> "" ""
|-CXXMethodDecl 0x559fed137d20 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559fed137dc0 <col:57> "" ""
|-CXXMethodDecl 0x559fed137e50 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x559fed137ef0 <col:51> "" ""
|-CXXMethodDecl 0x559fed137f80 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559fed138020 <col:63> "" ""
|-CXXMethodDecl 0x559fed1380b0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x559fed138150 <col:53> "" ""
|-CXXMethodDecl 0x559fed1381e0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559fed138280 <col:65> "" ""
|-CXXMethodDecl 0x559fed138398 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559fed138308 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x559fed138440 <col:61> "" ""
|-CXXMethodDecl 0x559fed1385d8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559fed1384c8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x559fed138540 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559fed138688 <col:67> "" ""
|-CXXMethodDecl 0x559fed1387a0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x559fed138710 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559fed138848 <col:63> "" ""
|-CXXMethodDecl 0x559fed1389e0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559fed1388d0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559fed138948 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559fed138a90 <col:69> "" ""
|-CXXMethodDecl 0x559fed138ba8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559fed138b18 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559fed138c50 <col:63> "" ""
|-CXXMethodDecl 0x559fed13b328 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559fed13b218 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559fed13b290 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559fed13b3d8 <col:69> "" ""
|-CXXMethodDecl 0x559fed13b4f0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x559fed13b460 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x559fed13b598 <col:62> "" ""
|-CXXMethodDecl 0x559fed13b730 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x559fed13b620 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559fed13b698 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x559fed13b7e0 <col:68> "" ""
|-CXXMethodDecl 0x559fed13b8f8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x559fed13b868 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559fed13b9a0 <col:63> "" ""
|-CXXMethodDecl 0x559fed13bb38 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x559fed13ba28 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559fed13baa0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x559fed13bbe8 <col:69> "" ""
|-CXXMethodDecl 0x559fed13bc78 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559fed13bd18 <col:64> "" ""
|-CXXMethodDecl 0x559fed13bda8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x559fed13be48 <col:52> "" ""
|-CXXMethodDecl 0x559fed13bed8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559fed13bf78 <col:67> "" ""
|-CXXMethodDecl 0x559fed13c008 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x559fed13c0a8 <col:55> "" ""
|-CXXMethodDecl 0x559fed13c1c0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559fed13c130 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559fed13c268 <col:58> "" ""
|-CXXMethodDecl 0x559fed13c400 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559fed13c2f0 <col:33> col:36 'int'
| |-ParmVarDecl 0x559fed13c368 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559fed13c4b0 <col:62> "" ""
|-CXXMethodDecl 0x559fed13c5c8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x559fed13c538 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559fed13c670 <col:58> "" ""
|-CXXMethodDecl 0x559fed13c808 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x559fed13c6f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x559fed13c770 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x559fed13c8b8 <col:62> "" ""
|-CXXMethodDecl 0x559fed13c9d0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x559fed13c940 <col:34> col:37 'int'
| `-DeprecatedAttr 0x559fed13ca78 <col:60> "" ""
|-CXXMethodDecl 0x559fed13cc10 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559fed13cb00 <col:34> col:37 'int'
| |-ParmVarDecl 0x559fed13cb78 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559fed13ccc0 <col:64> "" ""
|-CXXMethodDecl 0x559fed13cdd8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x559fed13cd48 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559fed13ce80 <col:58> "" ""
|-CXXMethodDecl 0x559fed13d018 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x559fed13cf08 <col:33> col:36 'int'
| |-ParmVarDecl 0x559fed13cf80 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x559fed13d0c8 <col:62> "" ""
|-CXXMethodDecl 0x559fed13d1e0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559fed13d150 <col:33> col:36 'int'
| `-DeprecatedAttr 0x559fed13d288 <col:59> "" ""
|-CXXMethodDecl 0x559fed13d420 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559fed13d310 <col:33> col:36 'int'
| |-ParmVarDecl 0x559fed13d388 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559fed13d4d0 <col:63> "" ""
|-AccessSpecDecl 0x559fed13d540 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x559fed13d568 prev 0x559fed132770 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559fed13d660 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x559fed13d750 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x559fed13d878 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x559fed13d9f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x559fed13db78 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x559fed13dcf8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x559fed14eb28 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559fed14f398 <col:11>
| |-CXXDestructorDecl 0x559fed14ec00 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x559fed14ed38 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x559fed14ed38
| | `-ParmVarDecl 0x559fed14ee48 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x559fed14eee8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559fed14eee8
| | `-ParmVarDecl 0x559fed14eff8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x559fed151db8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559fed151ec8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x559fed152148 <col:11>
| |   `-ReturnStmt 0x559fed152138 <col:11>
| |     `-UnaryOperator 0x559fed152120 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559fed152110 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x559fed151f38 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559fed151f38
|   `-ParmVarDecl 0x559fed152048 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x559fed13dd60 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559fed13de78 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x559fed13df18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x559fed13df80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x559fed13dfe8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x559fed13e050 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x559fed13e0b0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x559fed13e170 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x559fed13e1d0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x559fed13e230 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x559fed14ea38 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x559fed13df18 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x559fed14f3a8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x559fed14f400 <col:12>
| |-CXXConstructorDecl 0x559fed14f068 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x559fed14f068
| | `-ParmVarDecl 0x559fed14f178 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x559fed14f218 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x559fed14f218
| | `-ParmVarDecl 0x559fed14f328 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x559fed1514a0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x559fed13e2a8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x559fed13e308 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x559fed13e370 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x559fed13e3d8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x559fed13e440 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x559fed13e4a8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x559fed13e508 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x559fed13e568 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x559fed13e5d0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x559fed13e658 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x559fed13e2a8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x559fed14e9d0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x559fed13e508 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x559fed14f410 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x559fed14f470 <col:21, line:755:5>
|-CXXConstructorDecl 0x559fed13e7f8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x559fed13e738 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x559fed13e8f0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x559fed13ead8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x559fed13e9e0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x559fed13eda8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x559fed13eb90 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559fed13ec08 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559fed13ec80 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed13efc8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x559fed13ee78 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x559fed13eef0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x559fed1475a8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x559fed13f088 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x559fed13f100 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x559fed13f178 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x559fed147700 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559fed147670 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559fed147848 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559fed1477b8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x559fed147940 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<20>
         0 |   char [20] x
           | [sizeof=20, dsize=20, align=1,
           |  nvsize=20, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559fed0e6f20 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 20
|-PackedAttr 0x559fed21c160 <line:167:18>
|-CXXRecordDecl 0x559fed21c220 prev 0x559fed0e6f20 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x559fed21c330 <line:166:5, col:13> col:10 x 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [20 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
