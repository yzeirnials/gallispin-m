
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterFlow
         0 |   class IPRewriterEntry [2] _e
        48 |   uint16_t _ip_csum_delta
        50 |   uint16_t _udp_csum_delta
        52 |   click_jiffies_t _expiry_j
   56:0-31 |   size_t _place
        60 |   uint8_t _ip_p
        61 |   uint8_t _tflags
        62 |   _Bool _guaranteed
        63 |   uint8_t _reply_anno
        64 |   class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddrRewriter::IPAddrFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17051450 prev 0x55be16fc6ed8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be17051548 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55be170515d8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55be17051610 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55be16e3d880 'uninitialized_type'
|   `-CXXRecord 0x55be16e3d7e8 'uninitialized_type'
|-CXXConstructorDecl 0x55be170516d0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be17059038 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be17058ff8 <col:10> 'int' 0
| `-CompoundStmt 0x55be17059080 <col:13, line:22:5>
|-CXXConstructorDecl 0x55be17051820 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55be17051790 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be170590d0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55be17059090 <col:10> 'unsigned int' lvalue ParmVar 0x55be17051790 'x' 'unsigned int'
| `-CompoundStmt 0x55be17059118 <col:13, line:27:5>
|-CXXConstructorDecl 0x55be17051978 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55be170518e8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be17059180 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55be17059168 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55be17059128 <col:10> 'int' lvalue ParmVar 0x55be170518e8 'x' 'int'
| `-CompoundStmt 0x55be170591c8 <col:13, line:31:5>
|-CXXConstructorDecl 0x55be17051ad0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55be17051a40 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be17059230 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55be17059218 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55be170591d8 <col:10> 'unsigned long' lvalue ParmVar 0x55be17051a40 'x' 'unsigned long'
| `-CompoundStmt 0x55be17059278 <col:13, line:35:5>
|-CXXConstructorDecl 0x55be17051c28 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55be17051b98 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be170592e0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55be170592c8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55be17059288 <col:10> 'long' lvalue ParmVar 0x55be17051b98 'x' 'long'
| `-CompoundStmt 0x55be17059328 <col:13, line:39:5>
|-CXXConstructorDecl 0x55be17051de8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55be17051cf8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be170593a8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55be17059358 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55be16f7fc80
| |     `-DeclRefExpr 0x55be17059338 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55be17051cf8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55be170593f0 <col:20, line:44:5>
|-CXXConstructorDecl 0x55be170570c0 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55be17051eb0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55be17059558 <col:51, line:56:5>
|   `-BinaryOperator 0x55be17059538 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55be17059410 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55be17058f90
|     | `-CXXThisExpr 0x55be17059400 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55be17059520 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55be17059508 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55be170594e8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55be170594b8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55be170594a0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55be17059440 <col:47> 'const unsigned char *' lvalue ParmVar 0x55be17051eb0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55be17057210 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55be17057180 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55be170573b8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55be170572f8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55be170595c8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55be170595a0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55be17059570 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55be170572f8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55be17057548 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55be17057480 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55be17057638 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55be1705a588 <col:46, line:83:5>
|   `-ReturnStmt 0x55be1705a578 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55be1705a560 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55be1705a530 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be1705a3e8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55be1705a2d0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55be1705a1b8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55be170595f0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55be17057728 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55be1705a638 <col:31, line:88:5>
|   `-ReturnStmt 0x55be1705a628 <line:87:2, col:10>
|     `-UnaryOperator 0x55be1705a610 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55be1705a5f8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55be1705a5e0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55be1705a5b0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55be17058f90
|             `-CXXThisExpr 0x55be1705a5a0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55be170577e8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55be1705a6b8 <col:34, line:93:5>
|   `-ReturnStmt 0x55be1705a6a8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55be1705a690 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55be1705a660 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55be17058f90
|         `-CXXThisExpr 0x55be1705a650 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55be170578b8 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55be1705a738 <col:38, line:101:5>
|   `-ReturnStmt 0x55be1705a728 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55be1705a710 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55be1705a6e0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55be17058f90
|         `-CXXThisExpr 0x55be1705a6d0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55be17057988 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55be1705aa08 <col:38, line:108:5>
|   `-ReturnStmt 0x55be1705a9f8 <line:107:2, col:58>
|     `-BinaryOperator 0x55be1705a9d8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55be1705a8f0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55be1705a8d0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55be1705a8b8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55be1705a760 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55be17058f90
|       |   |   `-CXXThisExpr 0x55be1705a750 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55be1705a890 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55be1705a878 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55be1705a7f8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55be16f8d168 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55be1705a7d8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55be1705a9b0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55be1705a998 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55be1705a978 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55be16f8d168 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55be1705a958 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55be17057a48 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55be1705ac78 <col:39, line:112:5>
|   `-ReturnStmt 0x55be1705ac68 <line:111:2, col:56>
|     `-BinaryOperator 0x55be1705ac48 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55be1705ab60 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55be1705ab40 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55be1705ab28 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55be1705aa30 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55be17058f90
|       |   |   `-CXXThisExpr 0x55be1705aa20 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55be1705ab00 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55be1705aae8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55be1705aac8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55be16f8d168 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55be1705aaa8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55be1705ac20 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55be1705ac08 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55be1705abe8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55be16f8d168 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55be1705abc8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55be17057b78 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55be17057c80 <line:115:5, col:38> col:12 used operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55be17057d90 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55be17057e80 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55be17057f40 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55be17058008 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55be17058208 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55be170580b8 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55be17058130 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55be17058388 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55be170582c8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55be170584d0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55be17058440 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55be17058678 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55be17058588 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55be170587c0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55be17058730 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55be17058908 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55be17058878 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55be170589d0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55be17058a90 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55be17058c08 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55be17058b40 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55be17058cd0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55be17058db8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55be17058e60 <col:51> "" ""
|-TypedefDecl 0x55be17058f00 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55be16fc6f70 'IPAddress'
|   `-CXXRecord 0x55be17051450 'IPAddress'
|-AccessSpecDecl 0x55be17058f58 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55be17058f90 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55be17059638 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be17059748 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be172f7ee8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55be172f7ea0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55be17058f90
| |     `-DeclRefExpr 0x55be172f7e80 <col:7> 'const IPAddress' lvalue ParmVar 0x55be17059748 '' 'const IPAddress &'
| `-CompoundStmt 0x55be172f7f30 <col:7>
|-CXXConstructorDecl 0x55be170597e8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be170598f8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55be17058f90 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be1705a4d8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55be1705a490 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55be17058f90
| |     `-CXXStaticCastExpr 0x55be1705a460 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55be1705a430 <col:7> 'IPAddress' lvalue ParmVar 0x55be170598f8 '' 'IPAddress &&'
| `-CompoundStmt 0x55be1705a520 <col:7>
|-CXXDestructorDecl 0x55be1705a1e8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be172f87d8 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be172f88e8 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55be172f8c40 <col:7>
|   |-BinaryOperator 0x55be172f8be8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55be172f8ba0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55be17058f90
|   | | `-CXXThisExpr 0x55be172f8b90 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55be172f8bd0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55be172f8b60 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55be17058f90
|   |     `-DeclRefExpr 0x55be172f8b40 <col:7> 'const IPAddress' lvalue ParmVar 0x55be172f88e8 '' 'const IPAddress &'
|   `-ReturnStmt 0x55be172f8c30 <col:7>
|     `-UnaryOperator 0x55be172f8c18 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be172f8c08 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55be172f8958 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55be172f8958
  `-ParmVarDecl 0x55be172f8a68 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172f5490 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be172f55a8 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55be172f5638 <col:18, col:24> col:18 public
|-TypedefDecl 0x55be172f5670 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55be16e3d880 'uninitialized_type'
|   `-CXXRecord 0x55be16e3d7e8 'uninitialized_type'
|-CXXConstructorDecl 0x55be172f5730 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55be172f7638 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f7c08 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55be172f7698 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f7c70 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55be172f76f8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55be172f7d00 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55be172f7cc0 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55be172f7758 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55be172f7d80 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55be172f7d40 <col:42> 'int' 0
| `-CompoundStmt 0x55be172f7de0 <col:45, line:19:5>
|-CXXConstructorDecl 0x55be172f5a98 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55be172f57e8 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55be172f5860 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55be172f58d8 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55be172f5950 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55be172f7638 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f7f40 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55be172f7e30 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55be172f7df0 <col:11> 'IPAddress' lvalue ParmVar 0x55be172f57e8 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55be172f7698 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f7ff0 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55be172f7fd8 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55be172f7f98 <col:26> 'IPAddress' lvalue ParmVar 0x55be172f58d8 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55be172f76f8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55be172f8088 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55be172f8048 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be172f5860 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55be172f7758 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55be172f8108 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55be172f80c8 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be172f5950 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55be172f8168 <col:63, line:28:5>
|-CXXConstructorDecl 0x55be172f5cb8 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55be172f5b70 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55be172f5be8 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be172f7bd0 <col:55> 'bool' false
|-CXXConstructorDecl 0x55be172f5ec8 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55be172f5d80 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55be172f5df8 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be172f7be0 <col:59> 'bool' false
|-CXXConstructorDecl 0x55be172f6020 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55be172f5f90 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55be172f7638 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f8178 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55be172f7698 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f81c8 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55be172f8280 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55be172f8258 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55be172f8228 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55be172f5f90 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55be172f61d8 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55be172f6150 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55be172f5520 'IPFlowID'
|   | `-CXXRecord 0x55be172f5490 'IPFlowID'
|   `-ParenType 0x55be172f60f0 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55be1721db90 'IPAddress () const' const cdecl
|       `-RecordType 0x55be16fc6f70 'IPAddress'
|         `-CXXRecord 0x55be17051450 'IPAddress'
|-CXXConversionDecl 0x55be172f6318 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55be172f8530 <col:44, line:59:5>
|   `-ReturnStmt 0x55be172f8520 <line:58:2, col:47>
|     `-ConditionalOperator 0x55be172f84f0 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55be172f8418 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55be172f83e8 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55be172f8368 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55be172f8348 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55be172f8318 <col:9> '<bound member function type>' .operator unsigned int 0x55be170578b8
|       | |       `-MemberExpr 0x55be172f82a8 <col:9> 'const IPAddress' lvalue ->_saddr 0x55be172f7638
|       | |         `-CXXThisExpr 0x55be172f8298 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55be172f8400 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55be172f83d0 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55be172f83b0 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55be172f8380 <col:19> '<bound member function type>' .operator unsigned int 0x55be170578b8
|       |         `-MemberExpr 0x55be172f82e8 <col:19> 'const IPAddress' lvalue ->_daddr 0x55be172f7698
|       |           `-CXXThisExpr 0x55be172f82d8 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55be172f84a0 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55be172f8470 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55be172f6440 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55be172f84d8 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55be172f84b8 <col:47> 'int' 0
|-CXXMethodDecl 0x55be172f6440 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55be172f85c8 <col:29, line:65:5>
|   `-ReturnStmt 0x55be172f85b8 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55be172f8588 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55be172f8558 <col:9> 'const IPAddress' lvalue ->_saddr 0x55be172f7638
|         `-CXXThisExpr 0x55be172f8548 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55be172f6558 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55be172f8648 <col:28, line:69:5>
|   `-ReturnStmt 0x55be172f8638 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55be172f8620 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55be172f85f0 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55be172f76f8
|         `-CXXThisExpr 0x55be172f85e0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55be172f6618 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55be172f86e0 <col:29, line:73:5>
|   `-ReturnStmt 0x55be172f86d0 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55be172f86a0 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55be172f8670 <col:9> 'const IPAddress' lvalue ->_daddr 0x55be172f7698
|         `-CXXThisExpr 0x55be172f8660 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55be172f66d8 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55be172f8760 <col:28, line:77:5>
|   `-ReturnStmt 0x55be172f8750 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55be172f8738 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55be172f8708 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55be172f7758
|         `-CXXThisExpr 0x55be172f86f8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55be172f6818 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55be172f6788 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55be172f8d08 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55be172f8cd0 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55be172f8cb8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55be172f8af0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55be172f87d8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55be172f8788 <col:2> 'IPAddress' lvalue ->_saddr 0x55be172f7638
|     | `-CXXThisExpr 0x55be172f8778 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55be172f8ad8 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55be172f87b8 <col:11> 'IPAddress' lvalue ParmVar 0x55be172f6788 'a' 'IPAddress'
|-CXXMethodDecl 0x55be172f69c8 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55be172f68d0 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55be172f8db8 <col:32, line:87:5>
|   `-BinaryOperator 0x55be172f8d98 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55be172f8d30 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55be172f76f8
|     | `-CXXThisExpr 0x55be172f8d20 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55be172f8d80 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55be172f8d60 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be172f68d0 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55be172f6b10 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55be172f6a80 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55be172f8eb8 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55be172f8e80 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55be172f8e68 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55be172f8e48 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55be172f87d8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55be172f8de0 <col:2> 'IPAddress' lvalue ->_daddr 0x55be172f7698
|     | `-CXXThisExpr 0x55be172f8dd0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55be172f8e30 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55be172f8e10 <col:11> 'IPAddress' lvalue ParmVar 0x55be172f6a80 'a' 'IPAddress'
|-CXXMethodDecl 0x55be172f6c58 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55be172f6bc8 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55be172f8f68 <col:32, line:96:5>
|   `-BinaryOperator 0x55be172f8f48 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55be172f8ee0 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55be172f7758
|     | `-CXXThisExpr 0x55be172f8ed0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55be172f8f30 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55be172f8f10 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be172f6bc8 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55be172f6f20 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55be172f6d10 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55be172f6d88 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55be172f6e00 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55be172f6e78 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55be172f9280 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55be172f9030 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55be172f9018 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55be172f8ff8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55be172f87d8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55be172f8f90 <col:2> 'IPAddress' lvalue ->_saddr 0x55be172f7638
|   | | `-CXXThisExpr 0x55be172f8f80 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55be172f8fe0 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55be172f8fc0 <col:11> 'IPAddress' lvalue ParmVar 0x55be172f6d10 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55be172f9118 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55be172f9100 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55be172f90e0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55be172f87d8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55be172f9078 <col:2> 'IPAddress' lvalue ->_daddr 0x55be172f7698
|   | | `-CXXThisExpr 0x55be172f9068 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55be172f90c8 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55be172f90a8 <col:11> 'IPAddress' lvalue ParmVar 0x55be172f6e00 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55be172f91c8 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55be172f9160 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55be172f76f8
|   | | `-CXXThisExpr 0x55be172f9150 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55be172f91b0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be172f9190 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be172f6d88 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55be172f9260 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55be172f91f8 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55be172f7758
|     | `-CXXThisExpr 0x55be172f91e8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55be172f9248 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55be172f9228 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be172f6e78 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55be172f7028 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55be172f9db8 <col:30, line:115:5>
|   `-ReturnStmt 0x55be172f9da8 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55be172f9d90 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55be172f9d60 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be172f9918 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55be172f9788 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55be172f96f8 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55be172f92d0 <col:18> 'const IPAddress' lvalue ->_daddr 0x55be172f7698
|             |   `-CXXThisExpr 0x55be172f92c0 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55be172f9728 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55be172f9310 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55be172f7758
|             |   `-CXXThisExpr 0x55be172f9300 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55be172f9740 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55be172f9350 <col:34> 'const IPAddress' lvalue ->_saddr 0x55be172f7638
|             |   `-CXXThisExpr 0x55be172f9340 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55be172f9770 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55be172f9390 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55be172f76f8
|                 `-CXXThisExpr 0x55be172f9380 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55be172f70e8 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55be172f7188 <col:48> "" ""
|-CXXMethodDecl 0x55be172f7218 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55be172f72d8 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55be172f73a8 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55be172f7450 <col:51> "" ""
|-CXXMethodDecl 0x55be172f74f0 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55be172f7590 <col:44> "" ""
|-AccessSpecDecl 0x55be172f7600 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55be172f7638 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55be172f7698 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55be172f76f8 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55be172f7758 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55be172f7890 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55be172f77c0 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55be172f7b78 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55be172f7ab8 parent 0x55be16ce4488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55be172f7948 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55be172f79e8 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55be172f93c0 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55be172f93c0
| `-ParmVarDecl 0x55be172f94d8 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55be172f9578 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be172f9688 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55be172f7638 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f9a08 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55be172f99c0 <col:7> 'IPAddress' xvalue ._saddr 0x55be172f7638
| |     `-CXXStaticCastExpr 0x55be172f9990 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55be172f9960 <col:7> 'IPFlowID' lvalue ParmVar 0x55be172f9688 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55be172f7698 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55be172f9b08 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55be172f9ac0 <col:7> 'IPAddress' xvalue ._daddr 0x55be172f7698
| |     `-CXXStaticCastExpr 0x55be172f9a90 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55be172f9a60 <col:7> 'IPFlowID' lvalue ParmVar 0x55be172f9688 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55be172f76f8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55be172f9c08 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55be172f9bc0 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55be172f76f8
| |     `-CXXStaticCastExpr 0x55be172f9b90 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55be172f9b60 <col:7> 'IPFlowID' lvalue ParmVar 0x55be172f9688 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55be172f7758 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55be172f9cf0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55be172f9ca8 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55be172f7758
| |     `-CXXStaticCastExpr 0x55be172f9c78 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55be172f9c48 <col:7> 'IPFlowID' lvalue ParmVar 0x55be172f9688 '' 'IPFlowID &&'
| `-CompoundStmt 0x55be172f9d50 <col:7>
|-CXXDestructorDecl 0x55be172f97d8 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be173021d0 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be173022d8 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55be17302e38 <col:7>
|   |-CXXMemberCallExpr 0x55be17302ac8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55be17302a80 <col:7> '<bound member function type>' .operator= 0x55be172f87d8
|   | | `-MemberExpr 0x55be17302990 <col:7> 'IPAddress' lvalue ->_saddr 0x55be172f7638
|   | |   `-CXXThisExpr 0x55be17302980 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55be17302a50 <col:7> 'const IPAddress' lvalue ._saddr 0x55be172f7638
|   |   `-DeclRefExpr 0x55be17302a30 <col:7> 'const IPFlowID' lvalue ParmVar 0x55be173022d8 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55be17302c48 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55be17302c00 <col:7> '<bound member function type>' .operator= 0x55be172f87d8
|   | | `-MemberExpr 0x55be17302b10 <col:7> 'IPAddress' lvalue ->_daddr 0x55be172f7698
|   | |   `-CXXThisExpr 0x55be17302b00 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55be17302bd0 <col:7> 'const IPAddress' lvalue ._daddr 0x55be172f7698
|   |   `-DeclRefExpr 0x55be17302bb0 <col:7> 'const IPFlowID' lvalue ParmVar 0x55be173022d8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55be17302d18 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55be17302cd0 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55be172f76f8
|   | | `-CXXThisExpr 0x55be17302cc0 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55be17302d00 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55be17302c90 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55be172f76f8
|   |     `-DeclRefExpr 0x55be17302c70 <col:7> 'const IPFlowID' lvalue ParmVar 0x55be173022d8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55be17302de0 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55be17302d98 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55be172f7758
|   | | `-CXXThisExpr 0x55be17302d88 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55be17302dc8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55be17302d58 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55be172f7758
|   |     `-DeclRefExpr 0x55be17302d38 <col:7> 'const IPFlowID' lvalue ParmVar 0x55be173022d8 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55be17302e28 <col:7>
|     `-UnaryOperator 0x55be17302e10 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be17302e00 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55be17302348 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55be17302348
  `-ParmVarDecl 0x55be17302458 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17300c90 prev 0x55be172fd390 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be17300d88 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55be17300e18 <col:25, col:31> col:25 public
|-TypedefDecl 0x55be17300e50 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55be172f5520 'IPFlowID'
|   `-CXXRecord 0x55be172f5490 'IPFlowID'
|-TypedefDecl 0x55be17300eb8 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55be172f79b0 'const IPFlowID &'
|   `-QualType 0x55be172f5521 'const IPFlowID' const
|     `-RecordType 0x55be172f5520 'IPFlowID'
|       `-CXXRecord 0x55be172f5490 'IPFlowID'
|-CXXConstructorDecl 0x55be17300f70 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55be173019d0 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55be17301cd8 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55be17301d30 <col:23, line:22:5>
|-CXXMethodDecl 0x55be17301238 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55be17301028 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be173010a0 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be17301118 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55be173030f8 <col:78, line:30:5>
|   |-ParenExpr 0x55be17302150 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55be17302120 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55be17301de0 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17301db0 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55be17301d80 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55be17301d40 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be173010a0 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55be17301d98 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55be17301d60 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55be17301e40 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17301e20 <col:51> 'int' 0
|   |   `-CallExpr 0x55be17302080 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55be17302068 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17302048 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be173020c0 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17301eb0 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55be173020d8 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17301ee0 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55be173020f0 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17301f18 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55be17302108 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17302030 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17302018 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17301fb8 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55be17302ee0 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55be17302ec8 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55be17302918 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55be173021d0 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55be17302180 <col:2> 'IPFlowID' lvalue ->_flowid 0x55be173019d0
|   | | `-CXXThisExpr 0x55be17302170 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55be173021b0 <col:12> 'const IPFlowID' lvalue ParmVar 0x55be17301028 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55be17302f90 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55be17302f28 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55be17301a70
|   | | `-CXXThisExpr 0x55be17302f18 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55be17302f78 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be17302f58 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be173010a0 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55be17303040 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55be17302fc0 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55be17301ad0
|   | | `-CXXThisExpr 0x55be17302fb0 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55be17303028 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55be17303010 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55be17302ff0 <col:15> 'bool' lvalue ParmVar 0x55be17301118 'direction' 'bool'
|   `-BinaryOperator 0x55be173030d8 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55be17303070 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55be17301b30
|     | `-CXXThisExpr 0x55be17303060 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55be173030c0 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55be173030a0 <col:14> 'int' 0
|-CXXMethodDecl 0x55be17301368 <line:32:5, line:34:5> line:32:21 used flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55be17303180 <col:36, line:34:5>
|   `-ReturnStmt 0x55be17303170 <line:33:2, col:9>
|     `-MemberExpr 0x55be17303140 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55be173019d0
|       `-CXXThisExpr 0x55be17303130 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55be17301428 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55be173014e8 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55be17303218 <col:28, line:39:5>
|   `-ReturnStmt 0x55be17303208 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55be173031f0 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55be173031d8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55be173031a8 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55be17301ad0
|           `-CXXThisExpr 0x55be17303198 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55be173015b0 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55be173032b0 <col:24, line:43:5>
|   `-ReturnStmt 0x55be173032a0 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55be17303288 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55be17303270 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55be17303240 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55be17301a70
|           `-CXXThisExpr 0x55be17303230 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55be173016c8 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55be173033b8 <col:28, line:47:5>
|   `-ReturnStmt 0x55be173033a8 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55be17303378 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55be17303348 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55be173032c8 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55be17303330 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55be17303318 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55be173032e8 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55be17301ad0
|               `-CXXThisExpr 0x55be173032d8 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55be173017e8 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55be173034c0 <col:40, line:50:5>
|   `-ReturnStmt 0x55be173034b0 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55be17303480 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55be17303450 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55be173033d0 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55be17303438 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55be17303420 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55be173033f0 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55be17301ad0
|               `-CXXThisExpr 0x55be173033e0 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55be173018f8 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55be17303528 <col:41, line:54:5>
|   `-ReturnStmt 0x55be17303518 <line:53:2, col:9>
|     `-MemberExpr 0x55be173034e8 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55be173019d0
|       `-CXXThisExpr 0x55be173034d8 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55be17301998 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55be173019d0 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55be17301a70 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55be17301a50 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55be17301a20 <col:24> 'int' 24
|-FieldDecl 0x55be17301ad0 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55be17301b30 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
|-FriendDecl 0x55be17301c80 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-CXXConstructorDecl 0x55be17357f28 <line:16:7> col:7 implicit constexpr IPRewriterEntry 'void (const IPRewriterEntry &)' inline default trivial noexcept-unevaluated 0x55be17357f28
| `-ParmVarDecl 0x55be17358038 <col:7> col:7 'const IPRewriterEntry &'
|-CXXConstructorDecl 0x55be173580d8 <col:7> col:7 implicit constexpr IPRewriterEntry 'void (IPRewriterEntry &&)' inline default trivial noexcept-unevaluated 0x55be173580d8
| `-ParmVarDecl 0x55be173581e8 <col:7> col:7 'IPRewriterEntry &&'
`-CXXDestructorDecl 0x55be173583d8 <col:7> col:7 implicit ~IPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17261a78 prev 0x55be172591e8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be17261b70 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55be17261c00 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55be17261c78 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55be17261d38 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55be17261e00 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55be17261f78 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55be17261eb0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55be17262020 <col:24>
| `-OptimizeNoneAttr 0x55be17262078 <col:34>
|-CXXMethodDecl 0x55be172620c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55be17262378 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55be17262170 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55be172621e8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55be17262268 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55be17262440 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55be17262478 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55be172624e0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55be17262568 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55be17262888 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55be17262620 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55be17262698 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55be17262710 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55be17262790 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55be172629a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55be171d1028 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55be171d1028
| `-ParmVarDecl 0x55be171d1138 <col:11> col:11 'const Element::Port &'
`-CXXConstructorDecl 0x55be171d11d8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55be171d11d8
  `-ParmVarDecl 0x55be171d12e8 <col:11> col:11 'Element::Port &&'

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17254a30 prev 0x55be172547b0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be17254b28 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55be17254bb8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55be17254c18 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55be17254d08 <line:32:5, col:22> col:13 ~Element 'void ()' virtual noexcept-unevaluated 0x55be17254d08
|-VarDecl 0x55be17254e08 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55be17254fd8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55be17254e88 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55be17254f00 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55be17255168 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55be172550a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55be17255210 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55be17255348 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55be17255280 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55be172554e8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55be17255428 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55be17255688 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55be172555c8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55be17255730 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55be17255830 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55be17255910 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17255810 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55be172557f0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55be172558c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55be17255928 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be172558a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55be17255880 <col:44> 'int' 2
|-CXXMethodDecl 0x55be17255a70 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55be17255958 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55be172559d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55be17255bc8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55be17255b38 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55be17255e08 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55be17255c88 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55be17255d00 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55be17255eb8 <col:20>
| `-OptimizeNoneAttr 0x55be17255f10 <col:30>
|-CXXMethodDecl 0x55be17256018 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55be17255f50 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55be172560c0 <col:20>
| `-OptimizeNoneAttr 0x55be17256118 <col:30>
|-CXXMethodDecl 0x55be17256168 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55be17256230 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55be17256348 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55be17256410 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55be17256498 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55be17256520 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55be172565a8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55be17256638 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55be172566f8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55be17256780 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55be17256808 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55be17256890 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55be17256918 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55be172569a0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55be17256a30 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55be17256af0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55be17256b80 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55be17256cd0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55be17256c38 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55be17256e60 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55be17256d90 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55be17257100 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55be17256f18 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55be17256f98 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55be17257018 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55be172571b8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55be172572c0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be17257550 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172572a0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55be17257280 <col:33> 'int' 0
| |-EnumConstantDecl 0x55be17257350 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be17257568 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17257330 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55be17257310 <col:32> 'int' 20
| |-EnumConstantDecl 0x55be172573e0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be17257580 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172573c0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55be172573a0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55be17257470 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be17257598 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17257450 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55be17257430 <col:35> 'int' 100
| `-EnumConstantDecl 0x55be17257500 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55be172575b0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be172574e0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55be172574c0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55be172575f0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55be17257a30 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55be172578a0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55be17257918 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17257b00 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55be17257c80 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55be17257bb0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17257e88 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55be17257d38 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55be17257db0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17257f88 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55be17258028 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55be172580f0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55be17258180 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55be172583b0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17258160 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55be17258140 <col:36> 'int' EnumConstant 0x55be172580f0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55be172581d0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55be17258220 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55be17258270 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55be172582c0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55be17258310 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55be17258360 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55be17258498 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55be172583d8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55be17258560 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55be17258620 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55be172586e0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55be172587a0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55be172588b8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55be17258980 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55be17258b00 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55be17258a30 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55be17258c28 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55be17258e28 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55be17258cd8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55be17258d58 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55be17265788 <col:54, line:127:5>
|   |-ParenExpr 0x55be17265638 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55be17265608 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55be172652f8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55be172652d0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55be172652b8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55be172652a0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55be17265270 <col:31> 'Router *' lvalue ->_router 0x55be17263150
|   |   |         `-CXXThisExpr 0x55be17265260 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55be17265358 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17265338 <col:48> 'int' 0
|   |   `-CallExpr 0x55be17265568 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55be17265550 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17265530 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be172655a8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172653c8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55be172655c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172653e8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55be172655d8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17265420 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55be172655f0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17265518 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17265500 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be172654b8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55be172656d0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55be17265668 <col:9> 'Router *' lvalue ->_router 0x55be17263150
|   | | `-CXXThisExpr 0x55be17265658 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55be172656b8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be17265698 <col:19> 'Router *' lvalue ParmVar 0x55be17258cd8 'r' 'Router *'
|   `-BinaryOperator 0x55be17265768 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55be17265700 <col:9> 'int' lvalue ->_eindex 0x55be172631b8
|     | `-CXXThisExpr 0x55be172656f0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55be17265750 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55be17265730 <col:19> 'int' lvalue ParmVar 0x55be17258d58 'eindex' 'int'
|-CXXMethodDecl 0x55be17258fb0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55be17258ee8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55be17259080 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55be17259148 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55be172591e8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55be17259438 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55be172592b0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55be17259330 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55be172594e8 <col:20>
| `-OptimizeNoneAttr 0x55be17259540 <col:30>
|-CXXMethodDecl 0x55be17259648 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55be17259580 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55be172596f0 <col:20>
| `-OptimizeNoneAttr 0x55be17259748 <col:30>
|-CXXMethodDecl 0x55be17259818 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55be17259788 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55be172598c0 <col:20>
| `-OptimizeNoneAttr 0x55be17259918 <col:30>
|-CXXMethodDecl 0x55be17259aa8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55be17259950 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55be172599d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55be17259c38 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55be17259b70 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55be17259d88 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55be17259cf8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55be17259ed8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55be17259e48 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55be1725a028 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55be17259f98 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55be1725a2e8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55be1725a0e0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55be1725a160 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55be1725a208 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55be1725a420 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55be1725a4e0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55be1725a7b0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55be1725a660 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55be1725a6d8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55be1725a8d8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55be1725aab0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55be1725a990 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55be1725aa10 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55be1725ac98 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55be1725ab78 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55be1725abf8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55be1725b008 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55be1725ad58 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55be1725add0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55be1725ae50 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55be17264d70 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55be17264d50 <col:106> 'int' 0
| `-ParmVarDecl 0x55be1725aec8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55be17264da8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55be17264d88 <col:126> 'int' 0
|-CXXMethodDecl 0x55be1725b388 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55be1725b0d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55be1725b150 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55be1725b1d0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55be1725b248 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55be17264de0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55be17264dc0 <col:114> 'int' 0
|-CXXMethodDecl 0x55be1725b718 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55be1725b460 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55be1725b4d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55be1725b558 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55be17264df8 <col:96> 'int' 0
| `-ParmVarDecl 0x55be1725b5d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55be17264e38 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55be17264e18 <col:116> 'int' 0
|-CXXMethodDecl 0x55be1725ba98 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55be1725b7e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55be1725b860 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55be1725b8e0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55be17264e70 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55be17264e50 <col:109> 'int' 0
| `-ParmVarDecl 0x55be1725b958 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55be17264ea8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55be17264e88 <col:129> 'int' 0
|-CXXMethodDecl 0x55be1725be18 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55be1725bb68 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55be1725bbe0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55be1725bc60 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55be1725bcd8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55be17264ee0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55be17264ec0 <col:117> 'int' 0
|-CXXMethodDecl 0x55be1725c1a8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55be1725bef0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725bf68 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55be1725bfe8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55be17264ef8 <col:99> 'int' 0
| `-ParmVarDecl 0x55be1725c060 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55be17264f38 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55be17264f18 <col:119> 'int' 0
|-CXXMethodDecl 0x55be1725c5c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55be1725c278 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55be1725c2f8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55be1725c370 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55be1725c3f0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55be17264f70 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55be17264f50 <col:108> 'int' 0
| `-ParmVarDecl 0x55be1725c470 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55be17264fa8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55be17264f88 <col:141> 'int' 0
|-CXXMethodDecl 0x55be1725c9e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55be1725c6a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55be1725c720 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55be1725c798 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55be1725c818 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55be1725c898 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55be17264fc0 <col:121> 'int' 0
|-CXXMethodDecl 0x55be1725ce18 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55be1725cac8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55be1725cb48 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55be1725cbc0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55be1725cc40 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55be17264fe0 <col:98> 'int' 0
| `-ParmVarDecl 0x55be1725ccc0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55be17265000 <col:123> 'int' 0
|-CXXMethodDecl 0x55be1725d0e0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55be1725cef0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55be1725cf70 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55be1725cff0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55be17265020 <col:80> 'int' 0
|-EnumDecl 0x55be1725d198 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55be1725d2a0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55be1725d530 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1725d280 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55be1725d260 <col:42> 'int' 1
| |-EnumConstantDecl 0x55be1725d330 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55be1725d548 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1725d310 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55be1725d2f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55be1725d3c0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55be1725d560 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1725d3a0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55be1725d380 <col:44> 'int' 4
| |-EnumConstantDecl 0x55be1725d450 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55be1725d578 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1725d430 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55be1725d410 <col:36> 'int' 7
| `-EnumConstantDecl 0x55be1725d4e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55be1725d590 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1725d4c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55be1725d4a0 <col:34> 'int' 6
|-CXXMethodDecl 0x55be1725d848 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55be1725d5b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55be1725d658 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55be1725d6d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55be1725d750 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55be172650d8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55be172650c0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55be172650a8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55be17265088 <col:98, col:105> 'String' (CXXTemporary 0x55be17265088)
|           `-CXXTemporaryObjectExpr 0x55be17265050 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55be1725dae8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55be1725d918 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55be1725d990 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55be1725da08 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55be17265188 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55be17265170 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55be17265158 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55be17265138 <col:94, col:101> 'String' (CXXTemporary 0x55be17265138)
| |         `-CXXTemporaryObjectExpr 0x55be17265100 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55be17265970 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55be172658e8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55be172658b8 <col:9> '<bound member function type>' ->add_task_handlers 0x55be1725d848
|     | `-CXXThisExpr 0x55be172658a8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55be17265928 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55be17265828 <col:27> 'Task *' lvalue ParmVar 0x55be1725d918 'task' 'Task *'
|     |-ImplicitCastExpr 0x55be17265940 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55be17265848 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55be1725d990 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55be17265958 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55be17265868 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55be1725d4e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55be17265888 <col:62> 'const String' lvalue ParmVar 0x55be1725da08 'prefix' 'const String &'
|-CXXMethodDecl 0x55be1725dcf8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55be1725dbb0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55be1725dc28 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55be17265238 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55be17265220 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55be17265208 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55be172651e8 <col:70, col:77> 'String' (CXXTemporary 0x55be172651e8)
| |         `-CXXTemporaryObjectExpr 0x55be172651b0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55be17265b48 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55be17265ac0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55be17265a90 <col:9> '<bound member function type>' ->add_task_handlers 0x55be1725d848
|     | `-CXXThisExpr 0x55be17265a80 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55be17265b00 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55be17265a00 <col:27> 'Task *' lvalue ParmVar 0x55be1725dbb0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55be17265b18 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55be17265a20 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55be17265b30 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55be17265a40 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55be1725d4e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55be17265a60 <col:57> 'const String' lvalue ParmVar 0x55be1725dc28 'prefix' 'const String &'
|-CXXMethodDecl 0x55be1725dfd8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55be1725ddc0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725de40 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725deb8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55be1725e288 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55be1725e0a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725e128 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725e1a8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55be1725e5c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55be1725e358 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725e430 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725e4a8 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55be1725e878 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55be1725e698 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725e718 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725e798 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55be1725eb28 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55be1725e948 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725e9c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725ea48 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55be1725edd8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55be1725ebf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725ec78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725ecf0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55be1725f088 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55be1725eea8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725ef28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725efa8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55be1725f338 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55be1725f158 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725f1d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725f258 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55be1725f618 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55be1725f408 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725f488 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725f530 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55be1725f8f8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55be1725f6e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725f768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725f810 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55be1725fb60 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55be1725f9c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55be1725fa48 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55be1725fac0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55be1725fe08 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55be1725fc30 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55be1725fcb0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55be1725fd28 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55be172600b8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55be1725fed8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be1725ff58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be1725ffd8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55be17260368 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55be17260188 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be17260208 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be17260280 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55be17260618 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55be17260438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be172604b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be17260530 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55be172608e8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55be172606e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be17260768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55be17260808 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55be17260c18 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55be172609b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55be17260a38 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55be17260ab0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55be17260b28 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be17265250 <col:93> 'bool' false
|-CXXMethodDecl 0x55be17260e00 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55be17260ce8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55be17260d68 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55be17260fd8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55be17260ec0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55be17260f40 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55be172612b8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be17261098 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55be17261110 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55be17261190 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55be17261208 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55be172615a8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be17261388 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55be17261400 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55be17261480 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55be172614f8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55be172617e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55be17261680 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55be17261700 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55be172619c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55be172618a8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55be17261928 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55be17261a78 prev 0x55be172591e8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55be17261b70 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55be17261c00 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55be17261c78 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55be17261d38 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55be17261e00 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55be17261f78 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55be17261eb0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55be17262020 <col:24>
| | `-OptimizeNoneAttr 0x55be17262078 <col:34>
| |-CXXMethodDecl 0x55be172620c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55be17262378 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55be17262170 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55be172621e8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55be17262268 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55be17262440 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55be17262478 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55be172624e0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55be17262568 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55be17262888 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55be17262620 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55be17262698 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55be17262710 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55be17262790 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55be172629a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55be171d1028 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55be171d1028
| | `-ParmVarDecl 0x55be171d1138 <col:11> col:11 'const Element::Port &'
| `-CXXConstructorDecl 0x55be171d11d8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55be171d11d8
|   `-ParmVarDecl 0x55be171d12e8 <col:11> col:11 'Element::Port &&'
|-CXXMethodDecl 0x55be17262a18 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55be17262ab8 <col:38> "" ""
|-CXXMethodDecl 0x55be17262b48 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55be17262be8 <col:44> "" ""
|-AccessSpecDecl 0x55be17262c58 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55be17262c80 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55be17262d80 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55be17262dd0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17262d60 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55be17262d40 <col:27> 'int' 4
|-FieldDecl 0x55be17262e88 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55be17263038 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55be172630f0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55be17263150 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55be172631b8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55be17263308 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55be17263248 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55be172634b8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55be172633c8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55be17263698 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55be17263578 <col:20> col:23 'int'
| `-ParmVarDecl 0x55be172635f8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55be17263940 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55be17263760 <col:23> col:26 'int'
| |-ParmVarDecl 0x55be172637e0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55be17263858 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55be172639f8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55be17263ac0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55be17263b10 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55be17263b60 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55be17263d40 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55be17263bf0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55be17263c68 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17263fe8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55be17263e08 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55be17263e88 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55be17263f00 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55be17264208 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55be172640b8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55be17264138 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55be17264540 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55be172642c8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55be17264348 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55be172643c0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55be17264440 <col:57> col:60 'int'
|-CXXMethodDecl 0x55be17264728 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55be17264610 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55be17264690 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55be17264878 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55be172647e8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55be17264bf8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55be17264938 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55be172649b8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55be17264a30 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55be17264ab0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55be17264d10 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be172ff308 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55be17332128 prev 0x55be172ff308 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55be173321b8 <col:31, col:37> col:31 public
|-TypedefDecl 0x55be173322b0 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55be17332260 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55be17332240 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55be17300e50 'key_type'
|     `-RecordType 0x55be172f5520 'IPFlowID'
|       `-CXXRecord 0x55be172f5490 'IPFlowID'
|-TypedefDecl 0x55be17332380 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55be17332330 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55be17301890 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55be17300eb8 'key_const_reference'
|     `-LValueReferenceType 0x55be172f79b0 'const IPFlowID &'
|       `-QualType 0x55be172f5521 'const IPFlowID' const
|         `-RecordType 0x55be172f5520 'IPFlowID'
|           `-CXXRecord 0x55be172f5490 'IPFlowID'
|-CXXMethodDecl 0x55be17332570 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55be17332478 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55be17332778 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55be17332688 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55be173329d8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55be17332888 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55be17332900 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55be17336a58 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55be17336a58
| `-ParmVarDecl 0x55be17336b68 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55be17336c08 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55be17336c08
| `-ParmVarDecl 0x55be17336d18 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55be17336f28 <col:7> col:7 implicit ~HashContainer_adapter 'void ()' inline default trivial noexcept-unevaluated 0x55be17336f28
|-CXXMethodDecl 0x55be17337068 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55be17337068
| `-ParmVarDecl 0x55be17337178 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55be173371e8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55be173371e8
  `-ParmVarDecl 0x55be173372f8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1728ace8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be1728ae08 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55be1728aea8 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55be1728af08 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55be1728dff0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be1728e428 <col:8>
|-CXXConstructorDecl 0x55be1728e0f8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55be1728e0f8
| `-ParmVarDecl 0x55be1728e208 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55be1728e2a8 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be1728e3b8 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55be1728aea8 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be172902d0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55be172902a0 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55be1728aea8
| |     `-CXXStaticCastExpr 0x55be17290270 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55be17290240 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55be1728e3b8 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55be1728af08 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55be172903a0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55be17290370 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55be1728af08
| |     `-CXXStaticCastExpr 0x55be17290340 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55be17290310 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55be1728e3b8 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55be172903f0 <col:8>
|-CXXDestructorDecl 0x55be17290768 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be17337398 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55be17337398
| `-ParmVarDecl 0x55be173374a8 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55be17337518 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55be17337518
  `-ParmVarDecl 0x55be17337628 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be17336070 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55be17336308 prev 0x55be17336070 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55be17336470 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55be173364c0 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55be17336510 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55be17336560 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55be173365b0 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55be17336708 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55be17336858 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55be173369a8 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55be17336da0 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55be17336da0
| `-ParmVarDecl 0x55be17336eb8 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55be17338c30 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55be17338c30
  `-ParmVarDecl 0x55be17338d38 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be172ff480 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55be17331fa8 prev 0x55be172ff480 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55be17332038 <col:23, col:29> col:23 public
|-TypedefDecl 0x55be17332b00 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55be17332ab0 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55be17332830 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55be173322b0 'key_type'
|     `-ElaboratedType 0x55be17332260 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55be17332240 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55be17300e50 'key_type'
|         `-RecordType 0x55be172f5520 'IPFlowID'
|           `-CXXRecord 0x55be172f5490 'IPFlowID'
|-TypedefDecl 0x55be17332b98 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55be17332b60 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55be17298850 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55be172987f8 'T'
|   `-RecordType 0x55be172fd420 'IPRewriterEntry'
|     `-CXXRecord 0x55be17300c90 'IPRewriterEntry'
|-TypedefDecl 0x55be17332bf0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55be16d8d8c0 'size_t' sugar
|   |-Typedef 0x55be16d54be0 'size_t'
|   `-BuiltinType 0x55be16ce4640 'unsigned long'
|-TypedefDecl 0x55be17332c48 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55be16e3db70 'uint32_t' sugar
|   |-Typedef 0x55be16d4d4c8 'uint32_t'
|   `-TypedefType 0x55be16d265a0 '__uint32_t' sugar
|     |-Typedef 0x55be16d26198 '__uint32_t'
|     `-BuiltinType 0x55be16ce4620 'unsigned int'
|-EnumDecl 0x55be17332ca0 <line:98:5> col:5
| |-EnumConstantDecl 0x55be17332dd0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55be17332db0 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55be17332d88 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55be17332d70 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55be17298ea0 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55be17298e80 <col:42> 'int' 1
| `-EnumConstantDecl 0x55be17332e40 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55be17332e90 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17332e20 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55be17298f58 <col:25> 'int' 63
|-CXXConstructorDecl 0x55be17332ee0 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55be17333048 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55be17332f98 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55be17333130 <line:114:5, col:20> col:5 ~HashContainer 'void ()' noexcept-unevaluated 0x55be17333130
|-CXXMethodDecl 0x55be17333220 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55be173332d0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55be17333380 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55be17333518 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55be17333450 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55be17333738 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55be17333648 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be173337f0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55be17333a80 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55be173339e0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55be173339c0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55be173338c0 'HashContainer_const_iterator'
|-TypedefDecl 0x55be17333cb0 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55be17333c10 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55be17333bf0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55be17333af8 'HashContainer_iterator'
|-CXXMethodDecl 0x55be17333da8 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55be17333ef8 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55be17333fc8 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55be17334098 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55be17334238 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55be17334148 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55be173343e8 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55be173342f0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55be173345a8 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55be173344b0 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be17334768 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55be17334670 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be17334928 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55be17334830 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be17334ae8 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55be173349f0 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be17334c40 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55be17334bb0 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be17334e28 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55be17334d38 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55be17334ee0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17334f38 <col:30> Inherited
|-CXXMethodDecl 0x55be17335158 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55be17334fc8 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55be17335040 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55be17335428 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55be17335228 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55be173352a0 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55be17335308 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55be173355f8 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55be17335500 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55be173356b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17335708 <col:30> Inherited
|-CXXMethodDecl 0x55be17335838 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55be17335740 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55be173359f8 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55be17335900 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55be17335ab0 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55be17335d78 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55be17335c88 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55be17335ec0 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55be17335e30 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55be17335f78 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55be17336028 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55be17338dc0 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55be17339018 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55be17338f08 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55be173393b8 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55be17339288 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55be17339578 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55be173396c8 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be1733ad00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55be1733aed8 prev 0x55be1733ad00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55be1733af68 <col:46, col:52> col:46 public
|-TypedefDecl 0x55be1733af90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be1733cb60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55be1733cb10 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55be1733b440 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55be1733b340 'type'
|     `-TemplateSpecializationType 0x55be1733b2d0 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55be1733b1b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55be1733b190 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55be1733b170 <col:24> 'unsigned long' 56
|       `-RecordType 0x55be1733b2b0 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55be1733b1d0 'char_array'
|-TypedefDecl 0x55be1733cc18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55be1733cbe0 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55be1733cbc0 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55be1733cb60 'type'
|     `-ElaboratedType 0x55be1733cb10 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55be1733b440 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55be1733b340 'type'
|         `-TemplateSpecializationType 0x55be1733b2d0 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55be1733b1b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55be1733b190 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55be1733b170 <col:24> 'unsigned long' 56
|           `-RecordType 0x55be1733b2b0 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55be1733b1d0 'char_array'
|-CXXMethodDecl 0x55be1733cd98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55be1733cca8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55be1733ce88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55be1733cf68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55be1733cf68
|-CXXMethodDecl 0x55be1733d238 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55be1733d140 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55be1733d478 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55be1733d2f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be1733d368 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733d648 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55be1733d538 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be1733d5b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733d7a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55be1733d878 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55be1733dac8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55be1733d938 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55be1733d9b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733dd28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55be1733db98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55be1733dc10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733dee8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55be1733ddf8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733e0a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55be1733dfb0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733e160 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be1733e210 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be1733e448 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55be1733e2c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be1733e338 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55be1733e6e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55be1733e5f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55be1733e7b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55be1733e800 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55be1733e850 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be17339768 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55be17339978 prev 0x55be17339768 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55be1733ac70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55be1733ac20 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55be1733ac00 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55be1733aab0 'type'
|     `-SubstTemplateTypeParmType 0x55be1733a8d0 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55be16fc58f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16fc5898 'T'
|       `-RecordType 0x55be1733a420 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55be1733a340 'sized_array_memory'
|-FieldDecl 0x55be1733e8a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55be1733e8f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55be1733e928 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55be16ffca98 'T'
|   `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|     `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733e9e8 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55be1733e9b0 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|       `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733eaa8 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55be1733ea70 'const IPRewriterInput &'
|   `-QualType 0x55be17339a11 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|         `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733eb38 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55be1733eb00 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|       `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733ebf8 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55be1733ebc0 'const IPRewriterInput *'
|   `-QualType 0x55be17339a11 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|         `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733f850 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55be1733f800 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55be1733f7e0 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55be1733f718 'type'
|     `-LValueReferenceType 0x55be1733f6e0 'const IPRewriterInput &'
|       `-QualType 0x55be1733f481 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55be1733f480 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55be16fce400 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55be16fce3a8 'T'
|           `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|             `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733f8b8 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55be1733ea70 'const IPRewriterInput &'
|   `-QualType 0x55be17339a11 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|         `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733f910 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be1733f978 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55be1733eb00 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|       `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-TypedefDecl 0x55be1733f9e0 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55be1733ebc0 'const IPRewriterInput *'
|   `-QualType 0x55be17339a11 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55be17339a10 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be172fd4d0 'IPRewriterInput'
|         `-CXXRecord 0x55be1731b960 'IPRewriterInput'
|-EnumDecl 0x55be1733fa38 <line:134:5> col:5
| `-EnumConstantDecl 0x55be1733fb30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55be1733fb10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55be16ffdcb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55be16ffdc90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55be16ffdc70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55be1733fbb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55be1733fe48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55be1733fc70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be1733fd10 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55be17340108 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55be1733fff0 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55be173403c8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55be173402b0 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55be17340710 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55be173405f0 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55be17340a20 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55be17340900 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55be17342640 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55be17340b58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be17342500 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55be17342798 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55be17342878 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173428d0 <col:30> Inherited
|-CXXMethodDecl 0x55be17342918 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55be173429c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17342a20 <col:30> Inherited
|-CXXMethodDecl 0x55be17342ae8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55be17342b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17342bf0 <col:30> Inherited
|-CXXMethodDecl 0x55be17342c38 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55be17342ce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17342d40 <col:30> Inherited
|-CXXMethodDecl 0x55be17342d88 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55be17342e38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17342e90 <col:30> Inherited
|-CXXMethodDecl 0x55be17342ed8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55be17342f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17342fe0 <col:30> Inherited
|-CXXMethodDecl 0x55be17343008 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be173430b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be17343168 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55be17343328 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55be17343218 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be17343290 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55be17343478 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55be173433e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be17343628 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55be17343530 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be173436e0 <col:20>
| `-OptimizeNoneAttr 0x55be17343738 <col:30>
|-CXXMethodDecl 0x55be17343858 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55be17343760 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be17343910 <col:20>
| `-OptimizeNoneAttr 0x55be17343968 <col:30>
|-CXXMethodDecl 0x55be17343a20 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55be17343990 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be17343b68 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be17343ad8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be17343c98 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55be17343dc8 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55be17343e98 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55be17343f68 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55be173440a8 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55be17344018 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173441f0 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be17344160 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be17344338 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55be173442a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be173443f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55be173444f0 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55be17344460 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be173445a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55be17344668 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55be17344768 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55be17344918 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55be17344828 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55be173450d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55be173449d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55be17345038 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55be17344f38 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55be173451b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be17345308 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55be17345278 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55be173453c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55be17345608 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55be17345480 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55be173454f8 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55be173457c8 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55be173456d8 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55be17345a18 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55be17345890 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55be17345908 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55be17345ad8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be17345d38 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55be17345c40 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55be17345e08 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55be17345e08

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be1731ee20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55be1731eff8 prev 0x55be1731ee20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55be1731f088 <col:46, col:52> col:46 public
|-TypedefDecl 0x55be1731f0b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be17320c80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55be17320c30 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55be1731f560 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55be1731f460 'type'
|     `-TemplateSpecializationType 0x55be1731f3f0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55be1731f2d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55be1731f2b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55be1731f290 <col:24> 'unsigned long' 8
|       `-RecordType 0x55be1731f3d0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55be1731f2f0 'char_array'
|-TypedefDecl 0x55be17320d38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55be17320d00 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55be17320ce0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55be17320c80 'type'
|     `-ElaboratedType 0x55be17320c30 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55be1731f560 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55be1731f460 'type'
|         `-TemplateSpecializationType 0x55be1731f3f0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55be1731f2d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55be1731f2b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55be1731f290 <col:24> 'unsigned long' 8
|           `-RecordType 0x55be1731f3d0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55be1731f2f0 'char_array'
|-CXXMethodDecl 0x55be17320eb8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55be17320dc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55be17320fa8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55be17321088 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55be17321358 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55be17321260 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55be17321598 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55be17321410 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be17321488 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be17321768 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55be17321658 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be173216d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be173218c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55be17321998 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55be17321be8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55be17321a58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55be17321ad0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be17321e48 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55be17321cb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55be17321d30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be17322008 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55be17321f18 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be173221c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55be173220d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be17322280 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be17324d70 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be17324fa8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55be17324e20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be17324e98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55be17325248 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55be17325150 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55be17325310 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55be17325360 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55be173253b0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be1731d810 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55be1731da10 prev 0x55be1731d810 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55be1731ed90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55be1731ed40 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55be1731ed20 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55be1731ebd0 'type'
|     `-SubstTemplateTypeParmType 0x55be1731e9f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55be16fc58f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16fc5898 'T'
|       `-RecordType 0x55be1731e540 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55be1731e458 'sized_array_memory'
|-FieldDecl 0x55be17325400 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55be17325450 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55be17325488 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55be16ffca98 'T'
|   `-PointerType 0x55be17301650 'IPRewriterFlow *'
|     `-RecordType 0x55be172fd370 'IPRewriterFlow'
|       `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be17325548 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55be17325510 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-PointerType 0x55be17301650 'IPRewriterFlow *'
|       `-RecordType 0x55be172fd370 'IPRewriterFlow'
|         `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be17325608 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55be173255d0 'IPRewriterFlow *const &'
|   `-QualType 0x55be1731daa1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-PointerType 0x55be17301650 'IPRewriterFlow *'
|         `-RecordType 0x55be172fd370 'IPRewriterFlow'
|           `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be17325698 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55be17325660 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-PointerType 0x55be17301650 'IPRewriterFlow *'
|       `-RecordType 0x55be172fd370 'IPRewriterFlow'
|         `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be17325758 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55be17325720 'IPRewriterFlow *const *'
|   `-QualType 0x55be1731daa1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-PointerType 0x55be17301650 'IPRewriterFlow *'
|         `-RecordType 0x55be172fd370 'IPRewriterFlow'
|           `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be17326540 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55be173264f0 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55be173264d0 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55be17326460 'type'
|     `-SubstTemplateTypeParmType 0x55be17326220 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55be16fceb30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16fceae0 'T'
|       `-PointerType 0x55be17301650 'IPRewriterFlow *'
|         `-RecordType 0x55be172fd370 'IPRewriterFlow'
|           `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be173265a8 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55be173255d0 'IPRewriterFlow *const &'
|   `-QualType 0x55be1731daa1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-PointerType 0x55be17301650 'IPRewriterFlow *'
|         `-RecordType 0x55be172fd370 'IPRewriterFlow'
|           `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be17326600 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be17326668 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55be17325660 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-PointerType 0x55be17301650 'IPRewriterFlow *'
|       `-RecordType 0x55be172fd370 'IPRewriterFlow'
|         `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-TypedefDecl 0x55be173266d0 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55be17325720 'IPRewriterFlow *const *'
|   `-QualType 0x55be1731daa1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55be1731daa0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-PointerType 0x55be17301650 'IPRewriterFlow *'
|         `-RecordType 0x55be172fd370 'IPRewriterFlow'
|           `-CXXRecord 0x55be17303540 'IPRewriterFlow'
|-EnumDecl 0x55be17326728 <line:134:5> col:5
| `-EnumConstantDecl 0x55be17326820 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55be17326800 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55be16ffdcb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55be16ffdc90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55be16ffdc70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55be173268a8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55be17326b38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55be17326960 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be17326a00 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55be17326df8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55be17326ce0 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55be173270b8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55be17326fa0 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55be17327400 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55be173272e0 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55be17327710 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55be173275f0 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55be17327a00 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55be17327848 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be173278c0 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55be17327b58 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55be17327c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17327c90 <col:30> Inherited
|-CXXMethodDecl 0x55be17327cd8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55be17327d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17327de0 <col:30> Inherited
|-CXXMethodDecl 0x55be17327ea8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55be17327f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17327fb0 <col:30> Inherited
|-CXXMethodDecl 0x55be17327ff8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55be173280a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17328100 <col:30> Inherited
|-CXXMethodDecl 0x55be17328148 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55be173281f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be17328250 <col:30> Inherited
|-CXXMethodDecl 0x55be17328298 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55be17328348 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173283a0 <col:30> Inherited
|-CXXMethodDecl 0x55be173283c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be17328478 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be17328528 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55be173286e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55be173285d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be17328650 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55be17328838 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55be173287a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173289e8 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55be173288f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be17328aa0 <col:20>
| `-OptimizeNoneAttr 0x55be17328af8 <col:30>
|-CXXMethodDecl 0x55be17328c18 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55be17328b20 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be17328cd0 <col:20>
| `-OptimizeNoneAttr 0x55be17328d28 <col:30>
|-CXXMethodDecl 0x55be17328de0 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55be17328d50 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be17328f28 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be17328e98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be17329058 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55be17329188 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55be17329258 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55be17329328 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55be17329468 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55be173293d8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173295b0 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be17329520 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173296f8 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55be17329668 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be173297b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55be173298b0 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55be17329820 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be17329968 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55be17329a28 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55be17329b28 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55be17329cd8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55be17329be8 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55be1732a4c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55be17329d90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55be1732a428 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55be1732a328 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55be1732a5a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be1732a6f8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55be1732a668 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55be1732a7b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55be1732a9f8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55be1732a870 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55be1732a8e8 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55be1732abb8 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55be1732aac8 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55be1732ae08 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55be1732ac80 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55be1732acf8 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55be1732aec8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be1732b128 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55be1732b030 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55be1732b1f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55be1732c108 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1731d2c8 prev 0x55be17300b50 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be1731d3c0 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55be1731d450 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55be1731d4b0 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55be1732ba98 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55be1732c0e0 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55be1732baf8 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55be1732bff8 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55be1732bb58 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be1732c0a0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be1732c060 <col:38> 'int' 1
| `-CompoundStmt 0x55be1732c158 <col:41, line:46:5>
|-CXXDestructorDecl 0x55be1731d5a0 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55be1732c598 <col:23, line:49:5>
|   `-ParenExpr 0x55be1732c578 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55be1732c548 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55be1732c230 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55be1732c200 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55be1732c1a8 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55be1732c178 <col:23> '<bound member function type>' ->size 0x55be1732b3d8
|       |   |   `-ImplicitCastExpr 0x55be1732c1c8 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55be1732c168 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55be1732c1e0 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55be1732c290 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55be1732c270 <col:44> 'int' 0
|       `-CallExpr 0x55be1732c4a8 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55be1732c490 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55be1732c470 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55be1732c4e8 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55be1732c300 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55be1732c500 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55be1732c3a8 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55be1732c518 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55be1732c3e0 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55be1732c530 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55be1732c458 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55be1732c440 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55be1732c400 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55be1731d6a0 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55be1732c608 <col:16, line:53:5>
|   `-UnaryOperator 0x55be1732c5f0 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55be1732c5c0 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55be1732bb58
|       `-CXXThisExpr 0x55be1732c5b0 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55be1731d760 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55be1732cad0 <col:18, line:58:5>
|   |-ParenExpr 0x55be1732c9a0 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55be1732c970 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55be1732c6e0 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be1732c6b0 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55be1732c680 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55be1732c630 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55be1732bb58
|   |   |   |   `-CXXThisExpr 0x55be1732c620 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55be1732c698 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55be1732c660 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55be1732c740 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be1732c720 <col:47> 'int' 0
|   |   `-CallExpr 0x55be1732c8d0 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55be1732c8b8 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be1732c898 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be1732c910 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1732c7b0 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55be1732c928 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1732c7d8 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55be1732c940 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be1732c810 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55be1732c958 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be1732c880 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be1732c868 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be1732c830 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55be1732cab8 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55be1732ca68 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55be1732ca38 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55be1732ca00 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55be1732c9d0 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55be1732bb58
|     | |     `-CXXThisExpr 0x55be1732c9c0 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55be1732ca50 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55be1732ca18 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55be1732ca98 <line:57:6, col:13> 'void' Function 0x55be16e3b9c8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55be1732ca88 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55be1732b3d8 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55be1732f6d0 <col:54, line:62:5>
|   `-ReturnStmt 0x55be1732f6c0 <line:61:2, col:43>
|     `-BinaryOperator 0x55be1732f6a0 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55be1732cc50 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55be1732cc20 <col:9, col:19> '<bound member function type>' .size 0x55be173283c8
|       |   `-ArraySubscriptExpr 0x55be1732cc00 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55be1732cbe8 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55be1732cb00 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55be1732ba98
|       |     |   `-CXXThisExpr 0x55be1732caf0 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55be1732cb30 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55be1732cd38 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55be1732cd08 <col:28, col:38> '<bound member function type>' .size 0x55be173283c8
|           `-ArraySubscriptExpr 0x55be1732cce8 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55be1732ccd0 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be1732cc80 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55be1732ba98
|             |   `-CXXThisExpr 0x55be1732cc70 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55be1732ccb0 <col:35> 'int' 1
|-CXXMethodDecl 0x55be1732b4c8 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55be1732f750 <col:30, line:65:5>
|   `-ReturnStmt 0x55be1732f740 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55be1732f728 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55be1732f6f8 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55be1732baf8
|         `-CXXThisExpr 0x55be1732f6e8 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55be1732b568 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55be1732b590 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55be1732b690 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55be1732b770 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1732b670 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55be1732b650 <col:18> 'int' 0
| `-EnumConstantDecl 0x55be1732b720 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55be1732b788 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1732b700 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55be1732b6e0 <col:35> 'int' 1
|-FieldDecl 0x55be1732ba98 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55be1732baf8 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55be1732bb58 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55be1732bbc8 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55be1732bc60 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55be1732bcc8 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55be1732bcc8
| `-ParmVarDecl 0x55be1732bdd8 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55be1732be78 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55be1732be78
  `-ParmVarDecl 0x55be1732bf88 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be171ea5c0 prev 0x55be171e1a50 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be171ea6b8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55be171ea758 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55be171f0bf8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be171f0fd8 <col:11>
|-CXXConstructorDecl 0x55be171f0cd0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be171f0db8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55be171f1720 <col:11>
|-CXXConstructorDecl 0x55be171f0e58 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be171f0f68 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55be171f2f78 <col:11>
|-CXXDestructorDecl 0x55be171f2288 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be16ef2758 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be16ef2868 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55be16ef3130 <col:11>
|   `-ReturnStmt 0x55be16ef3120 <col:11>
|     `-UnaryOperator 0x55be16ef3108 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be16ef30f8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55be16ef28d8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55be16ef29e8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55be1727cf60 <col:11>
    `-ReturnStmt 0x55be1727cf50 <col:11>
      `-UnaryOperator 0x55be1727cf38 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55be1727cf28 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be171df638 prev 0x55be171df350 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be171df730 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55be171df7c0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55be171df7f8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55be16e3dc50 'int32_t' sugar
|   |-Typedef 0x55be16d4d328 'int32_t'
|   `-TypedefType 0x55be16d26510 '__int32_t' sugar
|     |-Typedef 0x55be16d26128 '__int32_t'
|     `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be171df860 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55be16e3de10 'int64_t' sugar
|   |-Typedef 0x55be16d4d390 'int64_t'
|   `-TypedefType 0x55be16d26630 '__int64_t' sugar
|     |-Typedef 0x55be16d26208 '__int64_t'
|     `-BuiltinType 0x55be16ce45a0 'long'
|-EnumDecl 0x55be171df8b8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55be171dfa30 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55be171dfa10 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55be171df9e8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55be171df9d0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55be171df9a0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55be171dfb28 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55be171dfb08 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55be171dfae0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55be171dfac8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55be171dfaa0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55be171dfa80 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55be171dfb78 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55be171dfc80 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e17a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dfc60 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55be171dfc40 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55be171dfd10 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e17b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dfcf0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55be171dfcd0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55be171dfda0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e17d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dfd80 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55be171dfd60 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55be171dfe30 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e17e8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dfe10 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55be171dfdf0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55be171dfec0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e1800 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dfea0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55be171dfe80 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55be171dff50 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e1818 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dff30 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55be171dff10 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55be171dffe0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e1830 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171dffc0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55be171dffa0 <col:26> 'int' EnumConstant 0x55be171dfc80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55be171e00b0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55be171e1848 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171e0090 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55be171e0070 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55be171e0030 <col:27> 'int' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55be171e0050 <col:44> 'int' EnumConstant 0x55be171dff50 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55be171e1750 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55be171e1860 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be171e0160 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55be171e0140 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55be171e0100 <col:27> 'int' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55be171e0120 <col:44> 'int' EnumConstant 0x55be171dfe30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55be171e1878 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55be171e1980 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55be171e19d0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be171e1960 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55be171e1940 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55be171e19f8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55be16e3d880 'uninitialized_type'
|   `-CXXRecord 0x55be16e3d7e8 'uninitialized_type'
|-CXXRecordDecl 0x55be171e1a50 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55be171e1b60 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f0fe8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be171f1108 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55be171f10c0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55be171f1050 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171f1040 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55be171f1080 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55be171f10f0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55be171f10a0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55be171e1da8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55be171e1c20 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55be171e1c98 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55be171f0a90 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be171f0a70 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f1120 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be171f1270 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55be171f11f8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55be171f1188 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171f1178 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55be171f1240 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55be171f1228 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55be171f11b8 <col:16> 'long' lvalue ParmVar 0x55be171e1c20 'sec' 'long'
|     `-ImplicitCastExpr 0x55be171f1258 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55be171f11d8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e1c98 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55be171e2008 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55be171e1e78 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55be171e1ef0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55be171f0ac8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be171f0aa8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f1288 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be171f13c0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55be171f1360 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55be171f12f0 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171f12e0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55be171f1390 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55be171f1320 <col:16> 'int' lvalue ParmVar 0x55be171e1e78 'sec' 'int'
|     `-ImplicitCastExpr 0x55be171f13a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55be171f1340 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e1ef0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55be171e2268 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55be171e20d8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55be171e2150 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55be171f0b00 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be171f0ae0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f13d8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be171f1528 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55be171f14b0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55be171f1440 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171f1430 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55be171f14f8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55be171f14e0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55be171f1470 <col:16> 'unsigned long' lvalue ParmVar 0x55be171e20d8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55be171f1510 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55be171f1490 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e2150 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55be171e24c8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55be171e2338 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55be171e23b0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55be171f0b38 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be171f0b18 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f1540 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be171f1690 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55be171f1618 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55be171f15a8 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171f1598 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55be171f1660 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55be171f1648 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55be171f15d8 <col:16> 'unsigned int' lvalue ParmVar 0x55be171e2338 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55be171f1678 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55be171f15f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e23b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55be171e2628 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55be171e2598 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55be171e27c8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55be171e2700 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55be171e29f8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55be171e2900 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55be171e2ba8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55be171e2ae8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f1730 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55be171f16a8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55be171e2ae8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55be171f1790 <col:19, line:214:5>
|-CXXConstructorDecl 0x55be171e2d78 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55be171e2cb8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f17a0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be171f1850 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55be171f1828 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55be171f17f8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55be171e2cb8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55be171e2f68 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55be171e2ee0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55be171df3e0 'Timestamp'
|   | `-CXXRecord 0x55be171df638 'Timestamp'
|   `-ParenType 0x55be171e2e80 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55be171e2e50 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55be171df980 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55be171df7f8 'seconds_type'
|         `-TypedefType 0x55be16e3dc50 'int32_t' sugar
|           |-Typedef 0x55be16d4d328 'int32_t'
|           `-TypedefType 0x55be16d26510 '__int32_t' sugar
|             |-Typedef 0x55be16d26128 '__int32_t'
|             `-BuiltinType 0x55be16ce4580 'int'
|-CXXConversionDecl 0x55be171e30a8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55be171e3178 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55be171f1958 <col:37, line:231:5>
|   `-ReturnStmt 0x55be171f1948 <line:227:9, col:23>
|     `-BinaryOperator 0x55be171f1928 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55be171f18f8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55be171f18a8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55be171ea758
|       |   `-MemberExpr 0x55be171f1878 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55be171eb708
|       |     `-CXXThisExpr 0x55be171f1868 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55be171f1910 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55be171f18d8 <col:23> 'int' 0
|-CXXMethodDecl 0x55be171e3238 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55be171e32f8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55be171e33b8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55be171e3478 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55be171e3538 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55be171e36a8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55be171e35e8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55be171e37f0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55be171e3760 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e38b8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55be171e3958 <col:54> "" ""
|-CXXMethodDecl 0x55be171e39e8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55be171e3a88 <col:54> "" ""
|-CXXMethodDecl 0x55be171e3b18 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55be171e3bb8 <col:54> "" ""
|-CXXMethodDecl 0x55be171e3cb8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55be171e3d88 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55be171e3eb8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55be171e3fb0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55be171e40e8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55be171f1b70 <col:39, line:271:5>
|   `-ReturnStmt 0x55be171f1b60 <line:267:9, col:61>
|     `-CallExpr 0x55be171f1b00 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55be171f1ae8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be171f1970 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55be171eba38 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55be171f1b30 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55be171f19d0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55be171ea758
|       |   `-MemberExpr 0x55be171f19a0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55be171eb708
|       |     `-CXXThisExpr 0x55be171f1990 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55be171f1b48 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55be171f1a70 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55be171f1a40 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55be171f1a00 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55be171f1a58 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55be171f1a20 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dff50 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171e41a8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55be171f1d30 <col:39, line:279:5>
|   `-ReturnStmt 0x55be171f1d20 <line:275:9, col:61>
|     `-CallExpr 0x55be171f1cc0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55be171f1ca8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be171f1b88 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55be171eba38 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55be171f1cf0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55be171f1be8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55be171ea758
|       |   `-MemberExpr 0x55be171f1bb8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55be171eb708
|       |     `-CXXThisExpr 0x55be171f1ba8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55be171f1d08 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55be171f1c88 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55be171f1c58 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55be171f1c18 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55be171f1c70 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55be171f1c38 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfe30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171e4268 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55be171f1ec8 <col:39, line:287:5>
|   `-ReturnStmt 0x55be171f1eb8 <line:283:9, col:53>
|     `-BinaryOperator 0x55be171f1e98 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55be171f1e68 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55be171f1d88 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55be171ea758
|       |   `-MemberExpr 0x55be171f1d58 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55be171eb708
|       |     `-CXXThisExpr 0x55be171f1d48 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55be171f1e80 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55be171f1e48 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55be171f1e28 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55be171f1df8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171f1db8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfc80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171f1e10 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171f1dd8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171e4358 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55be171f3160 <col:40, line:293:5>
|   |-DeclStmt 0x55be171f2010 <line:291:9, col:48>
|   | `-VarDecl 0x55be171f1ef0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55be171f1ff0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55be171f1f98 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55be171f1f68 <col:22> '<bound member function type>' ->subsec 0x55be171e32f8
|   |     |   `-CXXThisExpr 0x55be171f1f58 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55be171f1fd8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55be171f1fb8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171e00b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55be171f3150 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55be171f3138 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55be171f3108 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171f30f0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55be171f30d0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55be171f30a0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55be171f2e38 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55be171f2e20 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55be171f2028 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55be171f1ef0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55be171f3040 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55be171f3028 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55be171f2ff8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55be171f2e50 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55be171f2dc0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55be171f2da8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55be171f2d58 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55be171df588 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55be171f2cf8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55be171f2058 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55be171f2048 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55be171f2d40 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55be171f2d28 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55be171f2518 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55be171f2080 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55be171f2110 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55be171f20e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55be171f20a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171e00b0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55be171f20f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55be171f20c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55be171f1ef0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55be171f3070 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55be171f2e08 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55be171f2df8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55be171e4418 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55be171f36b8 <col:40, line:302:5>
|   |-DeclStmt 0x55be171f32b0 <line:297:9, col:48>
|   | `-VarDecl 0x55be171f3190 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55be171f3290 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55be171f3238 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55be171f3208 <col:22> '<bound member function type>' ->subsec 0x55be171e32f8
|   |     |   `-CXXThisExpr 0x55be171f31f8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55be171f3278 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55be171f3258 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171e1750 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55be171f36a8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55be171f3690 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55be171f3660 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171f3648 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55be171f3628 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55be171f35f8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55be171f3520 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55be171f3508 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55be171f32c8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55be171f3190 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55be171f3598 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55be171f3580 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55be171f3550 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55be171f3538 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55be171f34a8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55be171f3490 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55be171f3470 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55be171df588 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55be171f3410 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55be171f32f8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55be171f32e8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55be171f3458 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55be171f3440 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55be171f33d0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55be171f3320 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55be171f33b0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55be171f3380 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55be171f3340 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171e1750 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55be171f3398 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55be171f3360 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55be171f3190 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55be171f35c8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55be171f34f0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55be171f34e0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55be171e44d8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55be171f3740 <col:40, line:306:5>
|   `-ReturnStmt 0x55be171f3730 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55be171f3700 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55be171f36e8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be171f36d8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55be171e4678 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55be171e4588 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55be171e4848 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55be171e4750 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55be171e4938 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55be171e4aa8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55be171e49e8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55be171f3888 <col:56, line:320:5>
|   `-ReturnStmt 0x55be171f3878 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55be171f3860 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55be171f3830 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171f3818 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55be171f37d8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55be171f37a8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55be171f3768 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e49e8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55be171f37c0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55be171f3788 <col:31> 'int' 0
|-CXXMethodDecl 0x55be171e4ce8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55be171e4b60 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e4bd8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171f3a58 <col:72, line:326:5>
|   `-ReturnStmt 0x55be171f3a48 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55be171f3a30 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55be171f3a00 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171f39e8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55be171f39a8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55be171f3990 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55be171f38b0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e4b60 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55be171f3950 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55be171f3938 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55be171f38d0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55be171e9eb0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55be171f3978 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55be171f38f0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e4bd8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e4e98 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55be171e4da8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55be171fd5e0 <col:56, line:337:5>
|   |-DeclStmt 0x55be171f3d58 <line:329:9, col:51>
|   | `-VarDecl 0x55be171f3a80 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55be171f3d40 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55be171f3d10 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55be171f3cf8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55be171f3ce0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55be171f3cb0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55be171f3c98 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55be171f3c80 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55be171f3b70 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55be171fd3d0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55be171f3dc0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55be171ea758
|   | | `-MemberExpr 0x55be171f3d90 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55be171eb708
|   | |   `-DeclRefExpr 0x55be171f3d70 <col:9> 'Timestamp' lvalue Var 0x55be171f3a80 't' 'Timestamp'
|   | `-BinaryOperator 0x55be171fd3b0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55be171fd380 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be171f3df0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55be171e4da8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55be171fd398 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55be171f3ea0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55be171f3e80 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55be171f3e50 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55be171f3e10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55be171f3e68 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55be171f3e30 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dff50 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55be171fd5c8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55be171fd598 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55be171fd580 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55be171fd560 <col:16> 'Timestamp' lvalue Var 0x55be171f3a80 't' 'Timestamp'
|-CXXMethodDecl 0x55be171e5060 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55be171e4f50 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e4fc8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fd798 <col:72, line:343:5>
|   `-ReturnStmt 0x55be171fd788 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55be171fd770 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55be171fd740 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171fd728 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55be171fd6e8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55be171fd6d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55be171fd618 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e4f50 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55be171fd690 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55be171fd678 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55be171fd638 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55be171e9ff8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55be171fd6b8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55be171fd658 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e4fc8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e51b0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55be171e5120 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55be171fdbe0 <col:56, line:354:5>
|   |-DeclStmt 0x55be171fd988 <line:346:9, col:51>
|   | `-VarDecl 0x55be171fd7c0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55be171fd970 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55be171fd940 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55be171fd928 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55be171fd910 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55be171fd8e0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55be171fd8c8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55be171fd8b0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55be171fd880 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55be171fdb40 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55be171fd9f0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55be171ea758
|   | | `-MemberExpr 0x55be171fd9c0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55be171eb708
|   | |   `-DeclRefExpr 0x55be171fd9a0 <col:9> 'Timestamp' lvalue Var 0x55be171fd7c0 't' 'Timestamp'
|   | `-BinaryOperator 0x55be171fdb20 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55be171fdaf0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be171fda20 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55be171e5120 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55be171fdb08 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55be171fdad0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55be171fdab0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55be171fda80 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55be171fda40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55be171fda98 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55be171fda60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfe30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55be171fdbc8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55be171fdb98 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55be171fdb80 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55be171fdb60 <col:16> 'Timestamp' lvalue Var 0x55be171fd7c0 't' 'Timestamp'
|-CXXMethodDecl 0x55be171e5378 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55be171e5268 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e52e0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fdd98 <col:72, line:360:5>
|   `-ReturnStmt 0x55be171fdd88 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55be171fdd70 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55be171fdd40 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171fdd28 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55be171fdce8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55be171fdcd0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55be171fdc18 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e5268 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55be171fdc90 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55be171fdc78 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55be171fdc38 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55be171ea140 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55be171fdcb8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55be171fdc58 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e52e0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e54c8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55be171e5438 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55be171fe208 <col:56, line:371:5>
|   |-DeclStmt 0x55be171fdf88 <line:363:9, col:51>
|   | `-VarDecl 0x55be171fddc0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55be171fdf70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55be171fdf40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55be171fdf28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55be171fdf10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55be171fdee0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55be171fdec8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55be171fdeb0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55be171fde80 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55be171fe168 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55be171fdff0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55be171ea758
|   | | `-MemberExpr 0x55be171fdfc0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55be171eb708
|   | |   `-DeclRefExpr 0x55be171fdfa0 <col:9> 'Timestamp' lvalue Var 0x55be171fddc0 't' 'Timestamp'
|   | `-CallExpr 0x55be171fe108 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55be171fe0f0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55be171fe020 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55be171eba38 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55be171fe138 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55be171fe040 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55be171e5438 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55be171fe150 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55be171fe0d0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55be171fe0a0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55be171fe060 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfc80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55be171fe0b8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55be171fe080 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55be171fe1f0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55be171fe1c0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55be171fe1a8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55be171fe188 <col:16> 'Timestamp' lvalue Var 0x55be171fddc0 't' 'Timestamp'
|-CXXMethodDecl 0x55be171e55b8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55be171fe348 <col:39, line:377:5>
|   `-ReturnStmt 0x55be171fe338 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55be171fe320 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55be171fe2f0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be171fe2d8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55be171fe298 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55be171fe240 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55be171fe280 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55be171fe260 <col:29> 'int' 1
|-CXXMethodDecl 0x55be171e5678 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55be171fe428 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55be171fe3e0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55be171fe370 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171fe360 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55be171fe3a0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55be171fe410 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55be171fe3c0 <col:19> 'int' 0
|-CXXMethodDecl 0x55be171e87e8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55be171e86a0 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e8718 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55be171f0b70 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be171f0b50 <col:60> 'int' 0
| `-CompoundStmt 0x55be171fe620 <col:63, line:395:5>
|   `-BinaryOperator 0x55be171fe600 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55be171fe480 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55be171ea758
|     | `-MemberExpr 0x55be171fe450 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55be171eb708
|     |   `-CXXThisExpr 0x55be171fe440 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55be171fe5e0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55be171fe570 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55be171fe510 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55be171fe4f8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55be171fe4e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55be171fe4b0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e86a0 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55be171fe558 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55be171fe538 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55be171fe5c8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55be171fe5b0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55be171fe590 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e8718 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e89b8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55be171e88a8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e8920 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fe778 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55be171fe730 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55be171fe648 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171fe638 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55be171fe760 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55be171fe678 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e88a8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55be171fe6f0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55be171fe6d8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be171fe698 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55be171e9ff8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55be171fe718 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55be171fe6b8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e8920 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e8b88 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55be171e8a78 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e8af0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fe8d0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55be171fe888 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55be171fe7a0 <col:9> '<bound member function type>' ->assign 0x55be171e87e8
|     | `-CXXThisExpr 0x55be171fe790 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55be171fe8b8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55be171fe7d0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55be171e8a78 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55be171fe848 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55be171fe830 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be171fe7f0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55be171ea140 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55be171fe870 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55be171fe810 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e8af0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171e8d58 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55be171e8c48 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e8cc0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55be171f0ba8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be171f0b88 <col:57> 'int' 0
| `-DeprecatedAttr 0x55be171e8e08 <col:75> "" ""
|-CXXMethodDecl 0x55be171e8f98 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55be171e8e88 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e8f00 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be171e9048 <col:74> "" ""
|-CXXMethodDecl 0x55be171e91d8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55be171e90c8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55be171e9140 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be171e9288 <col:74> "" ""
|-CXXMethodDecl 0x55be171e9318 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55be171e93b8 <col:42> "" ""
|-CXXMethodDecl 0x55be171e9560 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55be171e9440 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55be171e94c0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55be171e9630 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55be171e96f0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55be171e9790 <col:20>
| `-OptimizeNoneAttr 0x55be171e97e8 <col:30>
|-CXXMethodDecl 0x55be171e9830 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55be171e98f0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55be171e99b0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55be171e9a70 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55be171e9b30 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55be171e9bf0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55be171e9cb0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55be171e9d70 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55be171e9eb0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55be171e9e20 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fea18 <col:58, line:512:5>
|   `-ReturnStmt 0x55be171fea08 <line:511:9, col:53>
|     `-BinaryOperator 0x55be171fe9e8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55be171fe9b8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171fe8e8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e9e20 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be171fe9d0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55be171fe998 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55be171fe978 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55be171fe948 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171fe908 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171fe960 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171fe928 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dff50 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171e9ff8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55be171e9f68 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171feb60 <col:58, line:516:5>
|   `-ReturnStmt 0x55be171feb50 <line:515:9, col:53>
|     `-BinaryOperator 0x55be171feb30 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55be171feb00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171fea30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171e9f68 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be171feb18 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55be171feae0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55be171feac0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55be171fea90 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171fea50 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171feaa8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171fea70 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfe30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171ea140 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55be171ea0b0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171feca8 <col:58, line:520:5>
|   `-ReturnStmt 0x55be171fec98 <line:519:9, col:53>
|     `-BinaryOperator 0x55be171fec78 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55be171fec48 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171feb78 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171ea0b0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be171fec60 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55be171fec28 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55be171fec08 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55be171febd8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171feb98 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfc80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171febf0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171febb8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171ea288 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55be171ea1f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fedf0 <col:60, line:524:5>
|   `-ReturnStmt 0x55be171fede0 <line:523:9, col:55>
|     `-BinaryOperator 0x55be171fedc0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55be171fed90 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171fecc0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171ea1f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be171feda8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55be171fed70 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55be171fed50 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55be171fed20 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171fece0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171fed38 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171fed00 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dff50 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171ea3d0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55be171ea340 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171fef38 <col:60, line:528:5>
|   `-ReturnStmt 0x55be171fef28 <line:527:9, col:55>
|     `-BinaryOperator 0x55be171fef08 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55be171feed8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171fee08 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171ea340 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be171feef0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55be171feeb8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55be171fee98 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55be171fee68 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171fee28 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171fee80 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171fee48 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfe30 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55be171ea518 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55be171ea488 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171ff080 <col:60, line:532:5>
|   `-ReturnStmt 0x55be171ff070 <line:531:9, col:55>
|     `-BinaryOperator 0x55be171ff050 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55be171ff020 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171fef50 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171ea488 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be171ff038 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55be171ff000 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55be171fefe0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55be171fefb0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55be171fef70 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dfc80 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55be171fefc8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55be171fef90 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55be171dffe0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55be171ea5c0 prev 0x55be171e1a50 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55be171ea6b8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55be171ea758 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55be171f0bf8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55be171f0fd8 <col:11>
| |-CXXConstructorDecl 0x55be171f0cd0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be171f0db8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55be171f1720 <col:11>
| |-CXXConstructorDecl 0x55be171f0e58 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be171f0f68 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55be171f2f78 <col:11>
| |-CXXDestructorDecl 0x55be171f2288 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55be16ef2758 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be16ef2868 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55be16ef3130 <col:11>
| |   `-ReturnStmt 0x55be16ef3120 <col:11>
| |     `-UnaryOperator 0x55be16ef3108 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55be16ef30f8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55be16ef28d8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55be16ef29e8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55be1727cf60 <col:11>
|     `-ReturnStmt 0x55be1727cf50 <col:11>
|       `-UnaryOperator 0x55be1727cf38 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be1727cf28 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55be171ea7c0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55be171ea8c0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55be171eaac0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171ea8a0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55be171ea880 <col:21> 'int' 0
| |-EnumConstantDecl 0x55be171ea950 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55be171eaad8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171ea930 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55be171ea910 <col:23> 'int' 1
| |-EnumConstantDecl 0x55be171ea9e0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55be171eaaf0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be171ea9c0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55be171ea9a0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55be171eaa70 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55be171eab08 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be171eaa50 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55be171eaa30 <col:27> 'int' 3
|-CXXMethodDecl 0x55be171eab48 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55be171eac10 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55be171eae18 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55be171eacc0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55be171ead40 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55be171f0bc0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55be171eb028 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55be171eaed8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55be171eaf50 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55be171eb0f8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55be171eb1b8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55be171eb328 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55be171eb268 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55be171eb3f0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55be171eb4b0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55be171eb570 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55be171eb630 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55be171eb6d0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55be171eb708 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55be171eb778 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55be171ff098 <col:27, line:684:5>
|-CXXMethodDecl 0x55be171eb838 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55be171ff0a8 <col:27, line:696:5>
|-CXXMethodDecl 0x55be171eba38 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55be171eb8e8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55be171eb960 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171ff230 <col:66, line:700:5>
|   `-ReturnStmt 0x55be171ff220 <line:699:9, col:31>
|     `-CallExpr 0x55be171ff1c0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55be171ff1a8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be171ff158 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55be1706c978 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55be171ff1f0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55be171ff118 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55be171eb8e8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55be171ff208 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55be171ff138 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171eb960 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be171ebda8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55be171ebaf8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55be171ebb70 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55be171ebbe8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55be171ebc60 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be171ff580 <col:64, line:707:5>
|   |-DeclStmt 0x55be171ff2c0 <line:704:9, col:24>
|   | `-VarDecl 0x55be171ff258 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55be171ff4d0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55be171ff2d8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55be171ebb70 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55be171ff4b8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55be171ff450 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55be171ff438 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be171ff3b8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55be17071fc8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55be171ff488 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55be171ff358 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55be171ebbe8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55be171ff4a0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55be171ff378 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be171ebc60 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55be171ff398 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55be171ff258 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55be171ff560 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55be171ff4f0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55be171ebaf8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55be171ff548 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55be171ff530 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55be171ff510 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55be171ff258 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55be171ec048 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55be171ebe78 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55be171ebef0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55be171ebf68 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55be171ec2e8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55be171ec110 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55be171ec188 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55be171ec200 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55be171ec478 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55be171ec3b0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55be171efec0 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55be171ec530 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55be171ec5a8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55be171f0188 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55be171f00c8 parent 0x55be16ce4488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55be171eff80 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55be171efff8 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55be171f03a8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55be171f02e8 parent 0x55be16ce4488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55be171f01d8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55be171f0250 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55be171f0570 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55be171f04b8 parent 0x55be16ce4488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55be171f03f8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55be171f07f8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55be171f0738 parent 0x55be16ce4488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55be171f05e8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55be171f0660 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55be171f0a18 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55be171f0958 parent 0x55be16ce4488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55be171f0848 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55be171f08c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55be171f2130 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be171f2218 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f2c88 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55be171f2c40 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55be171eb708
| |     `-DeclRefExpr 0x55be171f2c20 <col:7> 'const Timestamp' lvalue ParmVar 0x55be171f2218 '' 'const Timestamp &'
| `-CompoundStmt 0x55be171f2ce8 <col:7>
|-CXXConstructorDecl 0x55be171f2398 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be171f24a8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55be171eb708 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55be171f2f88 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55be171f2f30 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55be171eb708
| |     `-CXXStaticCastExpr 0x55be171f2f00 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55be171f2ed0 <col:7> 'Timestamp' lvalue ParmVar 0x55be171f24a8 '' 'Timestamp &&'
| `-CompoundStmt 0x55be171f2fe8 <col:7>
|-CXXDestructorDecl 0x55be171f2558 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be16ef25b0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be16ef26b8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55be16ef31a8 <col:7>
|   |-CXXMemberCallExpr 0x55be16ef3148 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55be16ef3088 <col:7> '<bound member function type>' .operator= 0x55be16ef2758
|   | | `-MemberExpr 0x55be16ef2f98 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55be171eb708
|   | |   `-CXXThisExpr 0x55be16ef2f88 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55be16ef3058 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55be171eb708
|   |   `-DeclRefExpr 0x55be16ef3038 <col:7> 'const Timestamp' lvalue ParmVar 0x55be16ef26b8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55be16ef3198 <col:7>
|     `-UnaryOperator 0x55be16ef3180 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be16ef3170 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55be16ef2a58 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55be16ef2b68 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55be1727cfd8 <col:7>
    |-CXXMemberCallExpr 0x55be1727cf78 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55be1727cee0 <col:7> '<bound member function type>' .operator= 0x55be16ef28d8
    | | `-MemberExpr 0x55be1727cdb0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55be171eb708
    | |   `-CXXThisExpr 0x55be1727cda0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55be1727ceb0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55be171eb708
    |   `-CXXStaticCastExpr 0x55be1727ce80 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55be1727ce50 <col:7> 'Timestamp' lvalue ParmVar 0x55be16ef2b68 '' 'Timestamp &&'
    `-ReturnStmt 0x55be1727cfc8 <col:7>
      `-UnaryOperator 0x55be1727cfb0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55be1727cfa0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17279fb8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55be1727a0e8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55be1727abd8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be171d4568 prev 0x55be17254650 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be171d4660 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55be171d46f0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55be171d4750 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55be171d47f8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55be171d4918 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55be171d4ab8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55be171d49f8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55be171d4d08 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55be171d4b78 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55be171d4bf8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55be171d4e98 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55be171d4dd0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55be171d5018 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55be171d4f58 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55be171d51c8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55be171d5108 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55be171d52c0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55be1727adb0 <col:21, line:58:5>
|   `-IfStmt 0x55be1727ad98 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55be1727ad00 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55be1727acd0 <col:6> '<bound member function type>' ->scheduled 0x55be171d5b18
|     |   `-ImplicitCastExpr 0x55be1727ad20 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55be1727acc0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55be1727ad78 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55be1727ad48 <col:6> '<bound member function type>' ->unschedule 0x55be17279460
|         `-CXXThisExpr 0x55be1727ad38 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55be171d53c0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55be1727af50 <col:26, line:65:5>
|   |-BinaryOperator 0x55be1727ae70 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55be1727ae08 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55be1727a0e8
|   | | `-MemberExpr 0x55be1727add8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55be1727a1a8
|   | |   `-CXXThisExpr 0x55be1727adc8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55be1727ae58 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be1727ae38 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55be1727a608 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55be1727af30 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55be1727aea0 <col:2> 'void *' lvalue ->_thunk 0x55be1727a228
|     | `-CXXThisExpr 0x55be1727ae90 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55be1727af08 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55be1727aed0 <col:20> 'int' 1
|-CXXMethodDecl 0x55be171d5500 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55be171d5470 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55be1727b0b0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55be1727afa0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55be1727af70 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55be171d5470 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55be1727b090 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55be1727b060 <col:2> '<bound member function type>' ->assign 0x55be171d53c0
|       `-CXXThisExpr 0x55be1727b050 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55be171d56d0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55be171d55b8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55be171d5638 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55be1727b230 <col:58, line:79:5>
|   |-BinaryOperator 0x55be1727b178 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55be1727b110 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55be1727a0e8
|   | | `-MemberExpr 0x55be1727b0e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55be1727a1a8
|   | |   `-CXXThisExpr 0x55be1727b0d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55be1727b160 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be1727b140 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55be171d55b8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55be1727b210 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55be1727b1a8 <col:2> 'void *' lvalue ->_thunk 0x55be1727a228
|     | `-CXXThisExpr 0x55be1727b198 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55be1727b1f8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55be1727b1d8 <col:11> 'void *' lvalue ParmVar 0x55be171d5638 'user_data' 'void *'
|-CXXMethodDecl 0x55be171d5820 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55be171d5790 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55be1727b3c8 <col:35, line:87:5>
|   |-BinaryOperator 0x55be1727b2f8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55be1727b290 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55be1727a0e8
|   | | `-MemberExpr 0x55be1727b260 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55be1727a1a8
|   | |   `-CXXThisExpr 0x55be1727b250 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55be1727b2e0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be1727b2c0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55be1727a7e0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55be1727b3a8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55be1727b328 <col:2> 'void *' lvalue ->_thunk 0x55be1727a228
|     | `-CXXThisExpr 0x55be1727b318 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55be1727b390 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55be1727b378 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55be1727b358 <col:11> 'Element *' lvalue ParmVar 0x55be171d5790 'element' 'Element *'
|-CXXMethodDecl 0x55be171d5968 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55be171d58d8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55be1727b560 <col:29, line:94:5>
|   |-BinaryOperator 0x55be1727b490 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55be1727b428 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55be1727a0e8
|   | | `-MemberExpr 0x55be1727b3f8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55be1727a1a8
|   | |   `-CXXThisExpr 0x55be1727b3e8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55be1727b478 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55be1727b458 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55be1727a9b8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55be1727b540 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55be1727b4c0 <col:2> 'void *' lvalue ->_thunk 0x55be1727a228
|     | `-CXXThisExpr 0x55be1727b4b0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55be1727b528 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55be1727b510 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55be1727b4f0 <col:11> 'Task *' lvalue ParmVar 0x55be171d58d8 'task' 'Task *'
|-CXXMethodDecl 0x55be171d5a58 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55be1727b640 <col:37, line:100:5>
|   `-ReturnStmt 0x55be1727b630 <line:99:2, col:19>
|     `-BinaryOperator 0x55be1727b610 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55be1727b5e0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55be1727b590 <col:9> 'Element *const' lvalue ->_owner 0x55be1727a288
|       |   `-CXXThisExpr 0x55be1727b580 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55be1727b5f8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55be1727b5c0 <col:19> 'int' 0
|-CXXMethodDecl 0x55be171d5b18 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55be1727b700 <col:35, line:105:5>
|   `-ReturnStmt 0x55be1727b6f0 <line:104:2, col:23>
|     `-BinaryOperator 0x55be1727b6d0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55be1727b6b8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55be1727b668 <col:9> 'const int' lvalue ->_schedpos1 0x55be17279f08
|       |   `-CXXThisExpr 0x55be1727b658 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55be1727b698 <col:23> 'int' 0
|-CXXMethodDecl 0x55be171d5bd8 <line:116:5, line:118:5> line:116:29 expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55be1727b768 <col:51, line:118:5>
|   `-ReturnStmt 0x55be1727b758 <line:117:2, col:9>
|     `-MemberExpr 0x55be1727b728 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55be17279f68
|       `-CXXThisExpr 0x55be1727b718 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55be171d5c98 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55be1727bcc0 <col:37, line:136:5>
|   `-IfStmt 0x55be1727bc98 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55be1727b828 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55be1727b810 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55be1727b7f0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55be1727b7c0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55be171e30a8
|     |       `-MemberExpr 0x55be1727b790 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55be17279f68
|     |         `-CXXThisExpr 0x55be1727b780 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55be1727bc08 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55be1727bbf0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55be1727bbc0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55be1727bba8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55be1727bb70 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55be1727bb58 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55be1727bb38 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55be1720e7b0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55be1727bad8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55be1727bac0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55be1727b9e8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55be1727b9d0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55be1727b9b0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55be1720e470 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55be1727b950 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55be1727b850 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55be17279f68
|     |         |     |   `-CXXThisExpr 0x55be1727b840 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55be1727b998 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55be1727b980 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55be1727b930 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55be1727b918 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55be1727b8b8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55be17053840 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55be1727bb20 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55be1727bb08 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55be1727baa0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55be1727ba88 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55be1727ba58 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55be17054510 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55be1727bc88 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55be1727bc58 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55be1727bc28 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55be17279f68
|           `-CXXThisExpr 0x55be1727bc18 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55be171d5d58 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55be1727bda8 <col:35, line:141:5>
|   `-ReturnStmt 0x55be1727bd98 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55be1727bd60 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55be1727bd30 <col:9, col:17> '<bound member function type>' ->router 0x55be17265df0
|         `-ImplicitCastExpr 0x55be1727bd80 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55be1727bd18 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55be1727bce8 <col:9> 'Element *const' lvalue ->_owner 0x55be1727a288
|               `-CXXThisExpr 0x55be1727bcd8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55be171d5e18 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55be1727be28 <col:37, line:146:5>
|   `-ReturnStmt 0x55be1727be18 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55be1727be00 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55be1727bdd0 <col:9> 'Element *const' lvalue ->_owner 0x55be1727a288
|         `-CXXThisExpr 0x55be1727bdc0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55be171d5ed8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55be1727bea8 <col:41, line:151:5>
|   `-ReturnStmt 0x55be1727be98 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55be1727be80 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55be1727be50 <col:9> 'RouterThread *const' lvalue ->_thread 0x55be1727a2e8
|         `-CXXThisExpr 0x55be1727be40 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55be171d5fa0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55be17278480 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55be171d6050 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55be171d60c8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be1727abc8 <col:50> 'bool' false
|-CXXMethodDecl 0x55be17278608 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55be17278540 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55be17278750 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55be172786c0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55be17278898 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55be17278808 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55be172789e0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55be17278950 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55be17278b28 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55be17278a98 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55be17278bf0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55be1727c010 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55be1727bff8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55be1727bfa0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55be1727bed0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55be17278750
|       | `-CXXThisExpr 0x55be1727bec0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727bfe0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55be1727bfc8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55be1727bf80 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55be1727bf68 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55be1727bf38 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55be17054510 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55be17278d30 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55be17278ca0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55be17278e78 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17278de8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be1727c198 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55be1727c180 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55be1727c128 <col:2, col:40> 'void'
|       |-MemberExpr 0x55be1727c038 <col:2> '<bound member function type>' ->schedule_after 0x55be17278d30
|       | `-CXXThisExpr 0x55be1727c028 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727c168 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55be1727c150 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55be1727c0e8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55be1727c0b8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55be1727c078 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be17278de8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55be1727c0d0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55be1727c098 <col:38> 'int' 0
|-CXXMethodDecl 0x55be17278fc0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17278f30 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be1727c408 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55be1727c3f0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55be1727c398 <col:2, col:49> 'void'
|       |-MemberExpr 0x55be1727c1c0 <col:2> '<bound member function type>' ->schedule_after 0x55be17278d30
|       | `-CXXThisExpr 0x55be1727c1b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727c3d8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55be1727c3c0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55be1727c340 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55be1727c328 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55be1727c298 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55be171e4e98 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55be1727c380 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55be1727c368 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55be1727c278 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be17278f30 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17279108 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55be17279078 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55be1727c5e8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55be1727c5d0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55be1727c578 <col:2, col:38> 'void'
|       |-MemberExpr 0x55be1727c430 <col:2> '<bound member function type>' ->schedule_at_steady 0x55be17278750
|       | `-CXXThisExpr 0x55be1727c420 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727c5b8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55be1727c5a0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55be1727c540 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55be1727c528 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55be1727c508 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55be1720e470 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55be1727c4d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55be1727c4c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55be1727c470 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55be17279f68
|             |     `-CXXThisExpr 0x55be1727c460 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55be1727c4a0 <col:33> 'const Timestamp' lvalue ParmVar 0x55be17279078 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55be17279250 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be172791c0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be1727c8c0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55be1727c8a8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55be1727c850 <col:2, col:79> 'void'
|       |-MemberExpr 0x55be1727c610 <col:2> '<bound member function type>' ->schedule_at_steady 0x55be17278750
|       | `-CXXThisExpr 0x55be1727c600 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727c890 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55be1727c878 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55be1727c810 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55be1727c748 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55be1727c730 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55be1727c6c0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55be1727c690 <col:31, col:41> '<bound member function type>' .sec 0x55be17056008
|             | |     `-ImplicitCastExpr 0x55be1727c6e0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55be1727c660 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55be17279f68
|             | |         `-CXXThisExpr 0x55be1727c650 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55be1727c718 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55be1727c6f8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be172791c0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55be1727c7d8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55be1727c7a8 <col:60, col:70> '<bound member function type>' .subsec 0x55be17056700
|                 `-ImplicitCastExpr 0x55be1727c7f8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55be1727c778 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55be17279f68
|                     `-CXXThisExpr 0x55be1727c768 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55be17279398 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17279308 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55be1727cbf8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55be1727cbe0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55be1727cb88 <col:2, col:65> 'void'
|       |-MemberExpr 0x55be1727c8e8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55be17278750
|       | `-CXXThisExpr 0x55be1727c8d8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727cbc8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55be1727cbb0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55be1727cb50 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55be1727cb38 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55be1727cb18 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55be1720e470 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55be1727cab8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55be1727caa0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55be1727c928 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55be17279f68
|             |     `-CXXThisExpr 0x55be1727c918 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55be1727cb00 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55be1727cae8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55be1727ca48 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55be1727ca30 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55be1727ca00 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55be171e4e98 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55be1727ca88 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55be1727ca70 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55be1727c9e0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55be17279308 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17279460 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55be17279520 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55be1727d0c0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55be1727cc50 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55be1727cc20 <col:2> '<bound member function type>' ->unschedule 0x55be17279460
|   |   `-CXXThisExpr 0x55be1727cc10 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55be1727d0a8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55be1727d070 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55be1727d058 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be1727cd08 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55be16ef2a58 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55be1727cc80 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55be17279f68
|       | `-CXXThisExpr 0x55be1727cc70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55be1727ccf0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55be1727ccc0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55be172795e0 <line:304:5, line:310:5> line:304:29 adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55be1727d418 <col:42, line:310:5>
|   |-IfStmt 0x55be1727d260 <line:306:2, line:307:23>
|   | |-CallExpr 0x55be1727d190 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55be1727d178 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55be1727d118 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55be171fff80 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55be1727d250 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55be1727d238 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55be1727d208 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55be1727d1f0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55be1727d1c0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55be1727d408 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55be1727d3f0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55be1727d3c0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be1727d3a8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55be1727d368 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55be1727d350 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55be1727d320 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55be171e51b0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55be1727d390 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55be1727d300 <col:30> 'int' 500
|-CXXMethodDecl 0x55be17279720 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17279690 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be172797c8 <col:69> "" ""
|-CXXMethodDecl 0x55be172798d8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17279848 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be17279980 <col:70> "" ""
|-CXXMethodDecl 0x55be17279a90 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17279a00 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be17279b38 <col:71> "" ""
|-CXXMethodDecl 0x55be17279c48 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55be17279bb8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be17279cf0 <col:72> "" ""
|-EnumDecl 0x55be17279d60 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55be17279e60 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55be17279eb0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17279e40 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55be17279e20 <col:25> 'int' 1
|-AccessSpecDecl 0x55be17279ec8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55be17279f08 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55be17279f68 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55be17279fb8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55be1727a0e8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55be1727abd8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55be1727a1a8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55be1727a228 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55be1727a288 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55be1727a2e8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55be1727a438 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55be1727a348 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55be1727a608 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55be1727a4f0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55be1727a570 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55be1727a7e0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55be1727a6c8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55be1727a748 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55be1727a9b8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55be1727a8a0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55be1727a920 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55be1727ab88 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1732f768 prev 0x55be17300a08 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55be1732f8a0 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55be1732f930 <col:41, col:47> col:41 public
|-TypedefDecl 0x55be1732fa90 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55be1732f9f0 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55be172ff580 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55be172ff480 'HashContainer'
|-EnumDecl 0x55be1732fae8 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55be1732fc08 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55be1732fbe8 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55be1732fbd0 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be1732fbb0 <col:13> 'int' 1
| `-EnumConstantDecl 0x55be1732fcb0 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55be1732fc90 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55be1732fc78 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55be1732fc58 <col:29> 'int' 2
|-CXXConstructorDecl 0x55be1732fd38 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55be1732fe28 <line:89:5, col:21> col:5 ~IPRewriterBase 'void ()' noexcept-unevaluated 0x55be1732fe28
| `-Overrides: [ 0x55be17254d08 Element::~Element 'void ()' ]
|-EnumDecl 0x55be1732ff10 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55be17330010 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be173302c0 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1732fff0 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55be1732ffd0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55be17257350 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55be173300a0 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be173302d8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17330080 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55be17330060 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55be17257470 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55be17330188 <line:94:2, col:54> col:2 CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55be173302f0 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17330168 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55be17330148 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55be17330130 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55be173300f0 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55be173300a0 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55be17330110 <col:54> 'int' 1
| `-EnumConstantDecl 0x55be17330270 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55be17330308 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17330250 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55be17330230 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55be17330218 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55be173301d8 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55be173300a0 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55be173301f8 <col:52> 'int' 1
|-CXXMethodDecl 0x55be17330370 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55be17256230 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55be17348c30 <col:36, col:54>
|   `-ReturnStmt 0x55be17348c20 <col:38, col:45>
|     `-ImplicitCastExpr 0x55be17348c08 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55be17348be8 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55be17330438 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55be17256638 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55be17348c90 <col:36, col:51>
|   `-ReturnStmt 0x55be17348c80 <col:38, col:45>
|     `-ImplicitCastExpr 0x55be17348c68 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55be17348c48 <col:45> 'const char []' lvalue Var 0x55be17256780 'PUSH' 'const char []'
|-CXXMethodDecl 0x55be17330500 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55be172575f0 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55be17348cf0 <col:33, col:68>
|   `-ReturnStmt 0x55be17348ce0 <col:35, col:42>
|     `-ImplicitCastExpr 0x55be17348cc8 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55be17348ca8 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55be173300a0 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55be173307d0 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55be17257a30 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55be17330680 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55be173306f8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17330928 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55be17257c80 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55be17330890 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17330a70 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55be173309e0 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55be17330bb8 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55be17258498 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55be17330b28 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55be17330ca8 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55be17348d88 <col:45, line:109:5>
|   `-ReturnStmt 0x55be17348d78 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55be17348d60 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55be17348d48 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55be17348d18 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55be17345f50
|           `-CXXThisExpr 0x55be17348d08 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55be17330e28 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55be17330d60 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55be17348f60 <col:52, line:112:5>
|   `-ReturnStmt 0x55be17348f50 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55be17348f38 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55be17348f08 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55be1731bf30
|         `-CXXOperatorCallExpr 0x55be17348ed0 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55be17348eb8 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55be17348e40 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55be17343858 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55be17348db0 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55be17345ef0
|           | `-CXXThisExpr 0x55be17348da0 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55be17348e28 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55be17348de0 <col:22> 'int' lvalue ParmVar 0x55be17330d60 'input' 'int'
|-CXXMethodDecl 0x55be17331160 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55be17330fe8 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55be173492d0 <col:64, line:115:5>
|   `-ReturnStmt 0x55be173492c0 <line:114:2, col:84>
|     `-ConditionalOperator 0x55be17349290 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55be17349260 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55be17349188 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55be17349170 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55be17348f78 <col:9> '<builtin fn type>' Function 0x55be17015b88 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55be173491b8 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55be17349138 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55be17349120 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55be17349100 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55be173490e0 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55be173490b0 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55be17348f98 <col:29> 'int' lvalue ParmVar 0x55be17330fe8 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55be173490c8 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55be17348ff0 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55be1731c570 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55be173491d0 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55be17349150 <col:71> 'int' 1
|       |-UnaryOperator 0x55be17349228 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55be173491f8 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55be17339708
|       |   `-CXXThisExpr 0x55be173491e8 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55be17349278 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55be17349240 <col:84> 'int' 0
|-EnumDecl 0x55be17331208 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55be17331328 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55be17331308 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55be173312f0 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be173312d0 <col:21> 'int' 1
| `-EnumConstantDecl 0x55be173313d0 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55be173313b0 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55be17331398 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55be17331378 <col:43> 'int' 2
|-CXXMethodDecl 0x55be17331618 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55be17331438 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55be173314b0 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55be17331530 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55be17331948 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55be173316e8 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55be17331760 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be173317d8 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55be17331858 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55be17331aa8 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55be17331a18 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55be17331c58 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55be17331b60 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55be17349520 <col:76, line:128:5>
|   `-ReturnStmt 0x55be17349510 <line:127:2, col:52>
|     `-BinaryOperator 0x55be173494f0 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55be17349420 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55be17349350 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55be17349320 <col:9, col:15> '<bound member function type>' ->expiry 0x55be17303f40
|       | |   `-ImplicitCastExpr 0x55be17349308 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55be173492e8 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55be17331b60 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55be17349408 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55be173493e8 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55be173493d0 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55be17349380 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55be17346038
|       |     |   `-CXXThisExpr 0x55be17349370 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55be173493b0 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55be173494d8 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55be173494b8 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55be173494a0 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55be17349450 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55be17346038
|           |   `-CXXThisExpr 0x55be17349440 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55be17349480 <col:51> 'int' 1
|-CXXMethodDecl 0x55be17331e38 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55be172617e0 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55be17331d18 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55be17331d98 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55be17331ee8 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55be17339708 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55be17345ef0 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55be17345f50 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55be17346038 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55be17346098 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55be173460f8 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55be17346148 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55be17346250 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55be17346400 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17346230 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55be17346210 <col:20> 'int' 300
| |-EnumConstantDecl 0x55be173462e0 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55be17346418 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be173462c0 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55be173462a0 <col:22> 'int' 5
| `-EnumConstantDecl 0x55be173463b0 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55be17346430 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17346390 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55be17346370 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55be17346330 <col:24> 'int' 60
|         `-IntegerLiteral 0x55be17346350 <col:29> 'int' 15
|-CXXMethodDecl 0x55be17346598 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55be173464a8 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55be17349728 <col:66, line:151:5>
|   `-ReturnStmt 0x55be17349718 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55be17349700 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55be173496d0 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55be173496b8 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55be173496a0 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55be17349590 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55be17349578 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55be17349538 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be173464a8 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55be17349558 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55be17349608 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55be173495f0 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55be173495b0 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be173464a8 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55be173495d0 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55be17349680 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55be17349668 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55be17349628 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be173464a8 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55be17349648 <col:46> 'int' 0
|-CXXMethodDecl 0x55be17346958 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55be17346650 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55be173466d0 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55be17346778 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55be17346818 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55be17348b98 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55be17348b78 <col:36> 'int' 0
|-CXXMethodDecl 0x55be17346c38 <line:155:5, line:156:39> line:155:17 used unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55be17346a28 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55be17346aa0 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55be17346b18 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55be17348bd0 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55be17348bb0 <col:38> 'int' 0
|-CXXMethodDecl 0x55be17346e18 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55be17346d00 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55be17346d80 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55be17347140 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55be17346ed8 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55be17346f50 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55be17346fd0 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55be17347048 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55be17347200 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55be17347318 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55be173472f8 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55be173472e0 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be173472c0 <col:17> 'int' 1
| |-EnumConstantDecl 0x55be173473c0 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55be173473a0 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55be17347388 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be17347368 <col:42> 'int' 2
| |-EnumConstantDecl 0x55be17347468 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55be17347448 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55be17347430 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be17347410 <col:59> 'int' 3
| |-EnumConstantDecl 0x55be17347510 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55be173474f0 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55be173474d8 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be173474b8 <col:12> 'int' 4
| |-EnumConstantDecl 0x55be173475b8 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55be17347598 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55be17347580 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be17347560 <col:29> 'int' 5
| `-EnumConstantDecl 0x55be17347660 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55be17347640 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55be17347628 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55be17347608 <col:43> 'int' 6
|-CXXMethodDecl 0x55be173477d8 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55be173476c0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55be17347740 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55be17347ab8 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be17347898 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55be17347910 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55be17347990 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55be17347a08 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17347da8 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be17347b88 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55be17347c00 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55be17347c80 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55be17347cf8 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55be17348248 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55be173480b8 parent 0x55be1731b960 prev 0x55be1731c900 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55be17347e98 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55be17347f10 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55be17347f88 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55be17348008 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55be1731ca78 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55be1731ca58 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55be1731c570 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55be173481f8 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55be17348220 <col:30> Inherited
|-AccessSpecDecl 0x55be17348288 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55be17348388 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55be173482c0 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55be173485c8 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55be17348440 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55be173484b8 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55be17348718 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55be17348688 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55be173487e0 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55be17348848 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55be17348848
| `-ParmVarDecl 0x55be17348958 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55be173489f8 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55be173489f8
  `-ParmVarDecl 0x55be17348b08 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172fd4f0 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be172fd608 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55be172fd698 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55be172fdc08 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55be172fd6d0 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55be172fd750 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55be172fd7c8 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55be172fd848 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55be172fd8c0 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55be172fd938 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55be172fd9b0 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55be172fda28 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be172fe0e8 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be172fde00 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55be172fdeb0 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55be172fdf28 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55be172fdfa0 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be172fea68 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be172fe290 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55be172fe338 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55be172fe3b0 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55be172fe920 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be172fed98 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55be172feb38 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55be172febb0 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55be172fec28 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55be172feca0 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be172fee78 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x55be173001d0 <col:16, line:27:5>
|   `-UnaryOperator 0x55be173001b8 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55be17300188 <col:2> 'int' lvalue ->_refcount 0x55be172ffdb8
|       `-CXXThisExpr 0x55be17300178 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55be172fef38 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55be173003c8 <col:18, line:31:5>
|   `-IfStmt 0x55be173003b0 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55be17300278 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55be17300260 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55be17300228 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55be173001f8 <col:8> 'int' lvalue ->_refcount 0x55be172ffdb8
|     | |     `-CXXThisExpr 0x55be173001e8 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55be17300240 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55be17300390 <line:30:6, col:13> 'void' Function 0x55be16e3b9c8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55be17300298 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55be172ff038 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55be173006b0 <col:27, line:35:5>
|   `-ReturnStmt 0x55be173006a0 <line:34:2, col:39>
|     `-BinaryOperator 0x55be17300680 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55be173005f0 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55be17300510 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55be173004c8 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55be173004b0 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55be17300490 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55be17300460 <col:9> '<bound member function type>' .operator unsigned int 0x55be170578b8
|       | | |       `-MemberExpr 0x55be173003f0 <col:9> 'const IPAddress' lvalue ->_saddr 0x55be172ffa40
|       | | |         `-CXXThisExpr 0x55be173003e0 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55be173004f8 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55be173004e0 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55be17300430 <col:19> 'const int' lvalue ->_sport 0x55be172ffaa8
|       | |       `-CXXThisExpr 0x55be17300420 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55be173005d8 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55be173005c0 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55be173005a0 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55be17300570 <col:29> '<bound member function type>' .operator unsigned int 0x55be170578b8
|       |         `-MemberExpr 0x55be17300540 <col:29> 'const IPAddress' lvalue ->_daddr 0x55be172ffb08
|       |           `-CXXThisExpr 0x55be17300530 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55be17300668 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55be17300650 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55be17300620 <col:39> 'const int' lvalue ->_dport 0x55be172ffb70
|             `-CXXThisExpr 0x55be17300610 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55be172ff108 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55be17300748 <col:29, line:38:5>
|   `-ReturnStmt 0x55be17300738 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55be17300708 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55be173006d8 <col:9> 'const IPAddress' lvalue ->_daddr 0x55be172ffb08
|         `-CXXThisExpr 0x55be173006c8 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55be172ff7d0 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55be172ff1b8 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be172ff258 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55be172ff6a0 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55be172ff8a8 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55be172ff968 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55be173009f0 <col:41, line:47:5>
|   `-ReturnStmt 0x55be173009e0 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55be173009c8 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55be17300998 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55be17300980 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55be17300930 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55be17300870 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55be17300780 <col:25> 'const IPAddress' lvalue ->_saddr 0x55be172ffa40
|             |   `-CXXThisExpr 0x55be17300770 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55be173008b8 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55be173008a0 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55be173007c0 <col:33> 'const int' lvalue ->_sport 0x55be172ffaa8
|             |     `-CXXThisExpr 0x55be173007b0 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55be173008d0 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55be17300800 <col:41> 'const IPAddress' lvalue ->_daddr 0x55be172ffb08
|             |   `-CXXThisExpr 0x55be173007f0 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55be17300918 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55be17300900 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55be17300840 <col:49> 'const int' lvalue ->_dport 0x55be172ffb70
|                   `-CXXThisExpr 0x55be17300830 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55be172ffa08 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55be172ffa40 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55be172ffaa8 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55be172ffb08 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55be172ffb70 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55be172ffbd0 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55be172ffc30 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55be172ffc90 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55be172ffcf0 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55be172ffd50 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55be172ffdb8 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55be172fff08 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55be172ffe48 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55be173000b8 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55be172fffc8 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55be173002a8 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55be173002a8

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17349740 prev 0x55be1731b820 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be17349838 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55be173498c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55be17349928 <line:187:5, col:18> col:5 IPMapper 'void ()'
| `-CompoundStmt 0x55be1734a348 <col:16, col:18>
|-CXXDestructorDecl 0x55be17349a18 <line:188:5, col:27> col:13 ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55be1734a358 <col:25, col:27>
|-CXXMethodDecl 0x55be17349ce8 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55be17349b10 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55be17349b88 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55be17349c00 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be1734a0a0 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55be17349db0 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55be17349e28 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be17349ea0 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55be17349f18 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55be17349f98 <col:22, col:26> col:26 mapid 'int'
`-CXXMethodDecl 0x55be1734a1c8 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55be1734a1c8
  `-ParmVarDecl 0x55be1734a2d8 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1731c0a8 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55be1731c1d8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55be1731c268 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55be1731cd28 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be1731d158 <col:5>
|-CXXConstructorDecl 0x55be1731ce28 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55be1731ce28
| `-ParmVarDecl 0x55be1731cf38 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x55be1731cfd8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55be1731cfd8
  `-ParmVarDecl 0x55be1731d0e8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.3 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1731b960 prev 0x55be17300c00 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be1731ba58 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55be1731bae8 <col:25, col:31> col:25 public
|-EnumDecl 0x55be1731bb10 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55be1731bbd0 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55be1731bc20 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55be1731bc70 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55be1731bcc0 <col:30> col:30 i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55be1731bd10 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55be1731bd98 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55be1731be00 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55be1731be68 <line:17:5, col:9> col:9 kind 'int'
|-FieldDecl 0x55be1731bed0 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x55be1731bf30 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55be1731bf98 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55be1731bff8 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55be1731c058 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55be1731c0a8 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55be1731c1d8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55be1731c268 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55be1731cd28 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55be1731d158 <col:5>
| |-CXXConstructorDecl 0x55be1731ce28 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55be1731ce28
| | `-ParmVarDecl 0x55be1731cf38 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x55be1731cfd8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55be1731cfd8
|   `-ParmVarDecl 0x55be1731d0e8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x55be1731c328 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55be1731c3c8 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55be1731be68 'kind' 'int'
| | `-ImplicitCastExpr 0x55be1731cad0 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55be1731ca90 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55be1731bbd0 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55be1731bed0 'foutput' 'int'
| | `-UnaryOperator 0x55be1731cb30 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55be1731cb10 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55be1731bf98 'routput' 'int'
| | `-UnaryOperator 0x55be1731cbb0 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55be1731cb90 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55be1731bff8 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be1731cc50 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be1731cc10 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55be1731c058 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be1731ccd0 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55be1731cc90 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55be1731c328 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55be1731d168 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55be1731d2b0 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55be1731d290 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55be1731d228 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55be1731c1d8
|     | `-MemberExpr 0x55be1731d1f8 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55be1731c328
|     |   `-CXXThisExpr 0x55be1731d1e8 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55be1731d278 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55be1731d258 <col:14> 'int' 0
|-EnumDecl 0x55be1731c470 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55be1731c570 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55be1731c650 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1731c550 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55be1731c530 <col:18> 'int' 0
| `-EnumConstantDecl 0x55be1731c600 <col:21, col:44> col:21 mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55be1731c668 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1731c5e0 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55be1731c5c0 <col:44> 'int' 1
`-CXXMethodDecl 0x55be1731c900 <line:37:5, line:39:46> line:37:44 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x55be1731c690 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x55be1731c708 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x55be1731c780 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x55be1731c800 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x55be1731ca78 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x55be1731ca58 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55be1731c570 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x55be1731c9c0 <line:37:20>
  `-OptimizeNoneAttr 0x55be1731ca18 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17303540 prev 0x55be17300ac0 <../elements/ip/iprwmapping.hh:68:1, line:174:1> line:68:7 referenced class IPRewriterFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be17303638 <col:1, col:7> col:7 implicit referenced class IPRewriterFlow
|-AccessSpecDecl 0x55be173036c8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55be17303ae8 <line:70:5, line:72:61> line:70:5 used IPRewriterFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55be17303700 <col:20, col:37> col:37 owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55be17303778 <col:44, col:60> col:60 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be173037f0 <line:71:6, col:22> col:22 rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be17303868 <line:72:6, col:14> col:14 ip_p 'uint8_t':'unsigned char'
| |-ParmVarDecl 0x55be173038e0 <col:20, col:25> col:25 guaranteed 'bool'
| `-ParmVarDecl 0x55be17303958 <col:37, col:53> col:53 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55be17303cc8 <line:74:5, line:76:5> line:74:22 used entry 'IPRewriterEntry &(bool)'
| |-ParmVarDecl 0x55be17303bd0 <col:28, col:33> col:33 used direction 'bool'
| `-CompoundStmt 0x55be173094a0 <col:44, line:76:5>
|   `-ReturnStmt 0x55be17309490 <line:75:2, col:21>
|     `-ArraySubscriptExpr 0x55be17309470 <col:9, col:21> 'IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55be17309440 <col:9> 'IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55be173093f0 <col:9> 'IPRewriterEntry [2]' lvalue ->_e 0x55be17306298
|       |   `-CXXThisExpr 0x55be173093e0 <col:9> 'IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55be17309458 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55be17309420 <col:12> 'bool' lvalue ParmVar 0x55be17303bd0 'direction' 'bool'
|-CXXMethodDecl 0x55be17303e78 <line:77:5, line:79:5> line:77:28 entry 'const IPRewriterEntry &(bool) const'
| |-ParmVarDecl 0x55be17303d80 <col:34, col:39> col:39 used direction 'bool'
| `-CompoundStmt 0x55be173095b8 <col:56, line:79:5>
|   `-ReturnStmt 0x55be173095a8 <line:78:2, col:21>
|     `-ArraySubscriptExpr 0x55be17309588 <col:9, col:21> 'const IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55be17309558 <col:9> 'const IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55be173094c8 <col:9> 'IPRewriterEntry const[2]' lvalue ->_e 0x55be17306298
|       |   `-CXXThisExpr 0x55be173094b8 <col:9> 'const IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55be17309570 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55be173094f8 <col:12> 'bool' lvalue ParmVar 0x55be17303d80 'direction' 'bool'
|-CXXMethodDecl 0x55be17303f40 <line:83:5, line:85:5> line:83:21 used expiry 'click_jiffies_t () const'
| `-CompoundStmt 0x55be17309638 <col:36, line:85:5>
|   `-ReturnStmt 0x55be17309628 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x55be17309610 <col:9> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55be173095e0 <col:9> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55be173063b8
|         `-CXXThisExpr 0x55be173095d0 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55be173040e8 <line:89:5, line:91:5> line:89:10 expired 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x55be17303ff0 <col:18, col:34> col:34 used now_j 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55be17309858 <col:47, line:91:5>
|   `-ReturnStmt 0x55be17309848 <line:90:2, col:67>
|     `-UnaryOperator 0x55be17309830 <col:9, col:67> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x55be17309810 <col:10, col:67> 'bool'
|         `-BinaryOperator 0x55be173097f0 <col:11, col:66> 'bool' '<'
|           |-CStyleCastExpr 0x55be173097a8 <col:11, col:62> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55be17309790 <col:40, col:62> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55be17309770 <col:40, col:62> 'unsigned int'
|           |     `-BinaryOperator 0x55be17309720 <col:41, col:61> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x55be173096f0 <col:41, col:47> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x55be17309670 <col:41, col:47> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x55be17309650 <col:42> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55be17303ff0 'now_j' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x55be17309708 <col:51, col:61> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x55be173096d0 <col:51, col:61> 'const click_jiffies_t':'const unsigned int' lvalue
|           |           `-MemberExpr 0x55be173096a0 <col:52> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55be173063b8
|           |             `-CXXThisExpr 0x55be17309690 <col:52> 'const IPRewriterFlow *' implicit this
|           `-IntegerLiteral 0x55be173097d0 <col:66> 'int' 0
|-CXXMethodDecl 0x55be173041b0 <line:94:5, line:96:5> line:94:10 guaranteed 'bool () const'
| `-CompoundStmt 0x55be173098d8 <col:29, line:96:5>
|   `-ReturnStmt 0x55be173098c8 <line:95:2, col:9>
|     `-ImplicitCastExpr 0x55be173098b0 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55be17309880 <col:9> 'const bool' lvalue ->_guaranteed 0x55be17306578
|         `-CXXThisExpr 0x55be17309870 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55be17304498 <line:102:5, line:103:34> line:102:10 used change_expiry 'void (IPRewriterHeap *, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55be17304288 <col:24, col:40> col:40 h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55be17304300 <col:43, col:48> col:48 guaranteed 'bool'
| `-ParmVarDecl 0x55be17304378 <line:103:10, col:26> col:26 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55be17304838 <line:114:5, line:118:5> line:114:10 change_expiry_by_timeout 'void (IPRewriterHeap *, click_jiffies_t, const uint32_t *)'
| |-ParmVarDecl 0x55be17304560 <col:35, col:51> col:51 used h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55be173045d8 <col:54, col:70> col:70 used now_j 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55be17304710 <line:115:7, col:32> col:22 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55be17309d78 <col:35, line:118:5>
|   |-DeclStmt 0x55be17309b48 <line:116:2, col:60>
|   | `-VarDecl 0x55be17309900 <col:2, col:59> col:11 used timeout 'uint32_t':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x55be17309b30 <col:21, col:59> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-ConditionalOperator 0x55be17309b00 <col:21, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |       |-ImplicitCastExpr 0x55be17309ae8 <col:21, col:31> 'bool' <IntegralToBoolean>
|   |       | `-ImplicitCastExpr 0x55be17309ad0 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x55be173099c0 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|   |       |     |-ImplicitCastExpr 0x55be173099a8 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x55be17309968 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be17304710 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       |     `-IntegerLiteral 0x55be17309988 <col:30> 'int' 1
|   |       |-ArraySubscriptExpr 0x55be17309a38 <col:35, col:45> 'const uint32_t':'const unsigned int' lvalue
|   |       | |-ImplicitCastExpr 0x55be17309a20 <col:35> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x55be173099e0 <col:35> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be17304710 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       | `-IntegerLiteral 0x55be17309a00 <col:44> 'int' 1
|   |       `-ArraySubscriptExpr 0x55be17309ab0 <col:49, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x55be17309a98 <col:49> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x55be17309a58 <col:49> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be17304710 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |         `-IntegerLiteral 0x55be17309a78 <col:58> 'int' 0
|   `-CXXMemberCallExpr 0x55be17309d28 <line:117:2, col:49> 'void'
|     |-MemberExpr 0x55be17309b70 <col:2> '<bound member function type>' ->change_expiry 0x55be17304498
|     | `-CXXThisExpr 0x55be17309b60 <col:2> 'IPRewriterFlow *' implicit this
|     |-ImplicitCastExpr 0x55be17309d60 <col:16> 'IPRewriterHeap *' <LValueToRValue>
|     | `-DeclRefExpr 0x55be17309ba0 <col:16> 'IPRewriterHeap *' lvalue ParmVar 0x55be17304560 'h' 'IPRewriterHeap *'
|     |-UnaryOperator 0x55be17309c80 <col:19, col:31> 'bool' prefix '!' cannot overflow
|     | `-UnaryOperator 0x55be17309c68 <col:20, col:31> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x55be17309c50 <col:21, col:31> 'bool' <IntegralToBoolean>
|     |     `-ImplicitCastExpr 0x55be17309c38 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|     |       `-ArraySubscriptExpr 0x55be17309c18 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|     |         |-ImplicitCastExpr 0x55be17309c00 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x55be17309bc0 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55be17304710 'timeouts' 'const uint32_t *':'const uint32_t *'
|     |         `-IntegerLiteral 0x55be17309be0 <col:30> 'int' 1
|     `-BinaryOperator 0x55be17309d08 <col:34, col:42> 'unsigned int' '+'
|       |-ImplicitCastExpr 0x55be17309cd8 <col:34> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55be17309c98 <col:34> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55be173045d8 'now_j' 'click_jiffies_t':'unsigned int'
|       `-ImplicitCastExpr 0x55be17309cf0 <col:42> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55be17309cb8 <col:42> 'uint32_t':'unsigned int' lvalue Var 0x55be17309900 'timeout' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17304968 <line:120:5, line:122:5> line:120:13 ip_p 'uint8_t () const'
| `-CompoundStmt 0x55be17309e00 <col:26, line:122:5>
|   `-ReturnStmt 0x55be17309df0 <line:121:2, col:9>
|     `-ImplicitCastExpr 0x55be17309dd8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55be17309da8 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_ip_p 0x55be173064b8
|         `-CXXThisExpr 0x55be17309d98 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55be17304a58 <line:124:5, line:126:5> line:124:22 used owner 'IPRewriterInput *() const'
| `-CompoundStmt 0x55be17309e80 <col:36, line:126:5>
|   `-ReturnStmt 0x55be17309e70 <line:125:2, col:9>
|     `-ImplicitCastExpr 0x55be17309e58 <col:9> 'IPRewriterInput *' <LValueToRValue>
|       `-MemberExpr 0x55be17309e28 <col:9> 'IPRewriterInput *const' lvalue ->_owner 0x55be17306638
|         `-CXXThisExpr 0x55be17309e18 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55be17304b18 <line:128:5, line:130:5> line:128:13 reply_anno 'uint8_t () const'
| `-CompoundStmt 0x55be17309f00 <col:32, line:130:5>
|   `-ReturnStmt 0x55be17309ef0 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x55be17309ed8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55be17309ea8 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_reply_anno 0x55be173065d8
|         `-CXXThisExpr 0x55be17309e98 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55be17304c88 <line:131:5, line:133:5> line:131:10 set_reply_anno 'void (uint8_t)'
| |-ParmVarDecl 0x55be17304bc8 <col:25, col:33> col:33 used reply_anno 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55be17309fb0 <col:45, line:133:5>
|   `-BinaryOperator 0x55be17309f90 <line:132:2, col:16> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55be17309f28 <col:2> 'uint8_t':'unsigned char' lvalue ->_reply_anno 0x55be173065d8
|     | `-CXXThisExpr 0x55be17309f18 <col:2> 'IPRewriterFlow *' implicit this
|     `-ImplicitCastExpr 0x55be17309f78 <col:16> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55be17309f58 <col:16> 'uint8_t':'unsigned char' lvalue ParmVar 0x55be17304bc8 'reply_anno' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55be17304f58 <line:135:5, line:136:27> line:135:24 used update_csum 'void (uint16_t *, bool, uint16_t)' static inline
| |-ParmVarDecl 0x55be17304d40 <col:36, col:46> col:46 csum 'uint16_t *'
| |-ParmVarDecl 0x55be17304db8 <col:52, col:57> col:57 direction 'bool'
| `-ParmVarDecl 0x55be17304e30 <line:136:8, col:17> col:17 csum_delta 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55be173051f8 <line:138:5, col:65> col:10 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55be17305020 <col:16, col:32> col:32 p 'WritablePacket *'
| |-ParmVarDecl 0x55be17305098 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55be17305118 <col:51, col:60> col:60 annos 'unsigned int'
|-CXXMethodDecl 0x55be173054d8 <line:140:5, col:72> col:10 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55be173052c0 <col:18, col:31> col:31 sa 'StringAccum &'
| |-ParmVarDecl 0x55be17305338 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55be173053b0 <col:51, col:67> col:67 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55be17305730 <line:141:5, col:78> col:10 unparse_ports 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55be173055a0 <col:24, col:37> col:37 sa 'StringAccum &'
| |-ParmVarDecl 0x55be17305618 <col:41, col:46> col:46 direction 'bool'
| `-ParmVarDecl 0x55be17305690 <col:57, col:73> col:73 now 'click_jiffies_t':'unsigned int'
|-CXXRecordDecl 0x55be173057e8 <line:143:5, line:147:5> line:143:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55be17305908 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55be17305b28 <line:144:2, line:146:2> line:144:14 operator() 'bool (IPRewriterFlow *, IPRewriterFlow *)' inline
|   |-ParmVarDecl 0x55be173059a8 <col:25, col:41> col:41 used a 'IPRewriterFlow *'
|   |-ParmVarDecl 0x55be17305a20 <col:44, col:60> col:60 used b 'IPRewriterFlow *'
|   `-CompoundStmt 0x55be1730a268 <col:63, line:146:2>
|     `-ReturnStmt 0x55be1730a258 <line:145:6, col:78>
|       `-ParenExpr 0x55be1730a238 <col:13, col:78> 'bool'
|         `-BinaryOperator 0x55be1730a218 <col:14, col:77> 'bool' '<'
|           |-CStyleCastExpr 0x55be1730a1d0 <col:14, col:73> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55be1730a1b8 <col:43, col:73> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55be1730a198 <col:43, col:73> 'unsigned int'
|           |     `-BinaryOperator 0x55be1730a148 <col:44, col:72> 'unsigned int' '-'
|           |       |-ParenExpr 0x55be1730a068 <col:44, col:56> 'click_jiffies_t':'unsigned int'
|           |       | `-CXXMemberCallExpr 0x55be1730a030 <col:45, col:55> 'click_jiffies_t':'unsigned int'
|           |       |   `-MemberExpr 0x55be1730a000 <col:45, col:48> '<bound member function type>' ->expiry 0x55be17303f40
|           |       |     `-ImplicitCastExpr 0x55be1730a050 <col:45> 'const IPRewriterFlow *' <NoOp>
|           |       |       `-ImplicitCastExpr 0x55be17309fe8 <col:45> 'IPRewriterFlow *' <LValueToRValue>
|           |       |         `-DeclRefExpr 0x55be17309fc8 <col:45> 'IPRewriterFlow *' lvalue ParmVar 0x55be173059a8 'a' 'IPRewriterFlow *'
|           |       `-ParenExpr 0x55be1730a128 <col:60, col:72> 'click_jiffies_t':'unsigned int'
|           |         `-CXXMemberCallExpr 0x55be1730a0f0 <col:61, col:71> 'click_jiffies_t':'unsigned int'
|           |           `-MemberExpr 0x55be1730a0c0 <col:61, col:64> '<bound member function type>' ->expiry 0x55be17303f40
|           |             `-ImplicitCastExpr 0x55be1730a110 <col:61> 'const IPRewriterFlow *' <NoOp>
|           |               `-ImplicitCastExpr 0x55be1730a0a8 <col:61> 'IPRewriterFlow *' <LValueToRValue>
|           |                 `-DeclRefExpr 0x55be1730a088 <col:61> 'IPRewriterFlow *' lvalue ParmVar 0x55be17305a20 'b' 'IPRewriterFlow *'
|           `-IntegerLiteral 0x55be1730a1f8 <col:77> 'int' 0
|-CXXRecordDecl 0x55be17305bf0 <line:148:5, line:152:5> line:148:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55be17305d08 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55be17305f68 <line:149:2, line:151:2> line:149:14 operator() 'void (IPRewriterFlow **, IPRewriterFlow **)' inline
|   |-ParmVarDecl 0x55be17305de0 <col:25, col:42> col:42 used begin 'IPRewriterFlow **'
|   |-ParmVarDecl 0x55be17305e60 <col:49, col:66> col:66 used it 'IPRewriterFlow **'
|   `-CompoundStmt 0x55be1730a400 <col:70, line:151:2>
|     `-BinaryOperator 0x55be1730a3e0 <line:150:6, col:27> 'size_t':'unsigned long' lvalue bitfield '='
|       |-MemberExpr 0x55be1730a308 <col:6, col:13> 'size_t':'unsigned long' lvalue bitfield ->_place 0x55be17306458
|       | `-ImplicitCastExpr 0x55be1730a2f0 <col:6, col:10> 'IPRewriterFlow *' <LValueToRValue>
|       |   `-ParenExpr 0x55be1730a2d0 <col:6, col:10> 'IPRewriterFlow *' lvalue
|       |     `-UnaryOperator 0x55be1730a2b8 <col:7, col:8> 'IPRewriterFlow *' lvalue prefix '*' cannot overflow
|       |       `-ImplicitCastExpr 0x55be1730a2a0 <col:8> 'IPRewriterFlow **' <LValueToRValue>
|       |         `-DeclRefExpr 0x55be1730a280 <col:8> 'IPRewriterFlow **' lvalue ParmVar 0x55be17305e60 'it' 'IPRewriterFlow **'
|       `-ImplicitCastExpr 0x55be1730a3c8 <col:22, col:27> 'size_t':'unsigned long' <IntegralCast>
|         `-BinaryOperator 0x55be1730a3a8 <col:22, col:27> 'long' '-'
|           |-ImplicitCastExpr 0x55be1730a378 <col:22> 'IPRewriterFlow **' <LValueToRValue>
|           | `-DeclRefExpr 0x55be1730a338 <col:22> 'IPRewriterFlow **' lvalue ParmVar 0x55be17305e60 'it' 'IPRewriterFlow **'
|           `-ImplicitCastExpr 0x55be1730a390 <col:27> 'IPRewriterFlow **' <LValueToRValue>
|             `-DeclRefExpr 0x55be1730a358 <col:27> 'IPRewriterFlow **' lvalue ParmVar 0x55be17305de0 'begin' 'IPRewriterFlow **'
|-AccessSpecDecl 0x55be17306030 <line:154:3, col:12> col:3 protected
|-FieldDecl 0x55be17306298 <line:156:5, col:25> col:21 referenced _e 'IPRewriterEntry [2]'
|-FieldDecl 0x55be173062f8 <line:157:5, col:14> col:14 referenced _ip_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55be17306358 <line:158:5, col:14> col:14 referenced _udp_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55be173063b8 <line:159:5, col:21> col:21 referenced _expiry_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55be17306458 <line:160:5, col:21> col:12 referenced _place 'size_t':'unsigned long'
| `-ConstantExpr 0x55be17306438 <col:21> 'int' Int: 32
|   `-IntegerLiteral 0x55be17306408 <col:21> 'int' 32
|-FieldDecl 0x55be173064b8 <line:161:5, col:13> col:13 referenced _ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55be17306518 <line:162:5, col:13> col:13 _tflags 'uint8_t':'unsigned char'
|-FieldDecl 0x55be17306578 <line:163:5, col:10> col:10 referenced _guaranteed 'bool'
|-FieldDecl 0x55be173065d8 <line:164:5, col:13> col:13 referenced _reply_anno 'uint8_t':'unsigned char'
|-FieldDecl 0x55be17306638 <line:165:5, col:22> col:22 referenced _owner 'IPRewriterInput *'
|-FriendDecl 0x55be173066e0 <line:167:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55be17306770 <line:168:5, col:18> col:12 'class IPRewriterEntry':'IPRewriterEntry'
|-AccessSpecDecl 0x55be173067b0 <line:170:3, col:10> col:3 private
|-CXXMethodDecl 0x55be17309320 <line:172:5, col:38> col:10 destroy 'void (IPRewriterHeap *)'
| `-ParmVarDecl 0x55be173067e8 <col:18, col:34> col:34 heap 'IPRewriterHeap *'
|-CXXConstructorDecl 0x55be17358258 <line:68:7> col:7 implicit constexpr IPRewriterFlow 'void (const IPRewriterFlow &)' inline default trivial noexcept-unevaluated 0x55be17358258
| `-ParmVarDecl 0x55be17358368 <col:7> col:7 'const IPRewriterFlow &'
|-CXXConstructorDecl 0x55be173584e8 <col:7> col:7 implicit constexpr IPRewriterFlow 'void (IPRewriterFlow &&)' inline default trivial noexcept-unevaluated 0x55be173584e8
| `-ParmVarDecl 0x55be173585f8 <col:7> col:7 'IPRewriterFlow &&'
`-CXXDestructorDecl 0x55be17358c40 <col:7> col:7 implicit ~IPRewriterFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  NonVirtualBaseLLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:32 IsSigned:0 StorageSize:32 StorageOffset:56>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17354f90 <../elements/ip/ipaddrrewriter.hh:118:5, line:131:5> line:118:11 referenced class IPAddrFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55be173550e8 <col:5, col:11> col:11 implicit referenced class IPAddrFlow
|-AccessSpecDecl 0x55be17355178 <col:48, col:54> col:48 public
|-CXXConstructorDecl 0x55be17355528 <line:120:2, line:125:2> line:120:2 IPAddrFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55be173551b0 <col:13, col:30> col:30 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55be17355228 <col:37, col:53> col:53 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be173552a0 <line:121:6, col:22> col:22 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be17355318 <line:122:6, col:11> col:11 used guaranteed 'bool'
| |-ParmVarDecl 0x55be17355390 <col:23, col:39> col:39 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55be173586c8 <line:123:8, line:124:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55be17358668 <line:123:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55be17357de8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55be173551b0 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55be17357e08 <col:30> 'const IPFlowID' lvalue ParmVar 0x55be17355228 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55be17357e28 <col:38> 'const IPFlowID' lvalue ParmVar 0x55be173552a0 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55be17358680 <line:124:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-IntegerLiteral 0x55be17357e48 <col:9> 'int' 0
| |   |-ImplicitCastExpr 0x55be17358698 <col:12> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55be17357e68 <col:12> 'bool' lvalue ParmVar 0x55be17355318 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55be173586b0 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55be17357e88 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55be17355390 'expiry_j' 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55be17358750 <col:34, line:125:2>
|-CXXMethodDecl 0x55be173557a0 <line:127:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55be17355608 <col:13, col:29> col:29 p 'WritablePacket *'
| |-ParmVarDecl 0x55be17355680 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55be17355700 <col:48, col:57> col:57 annos 'unsigned int'
|-CXXMethodDecl 0x55be17355a20 <line:129:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55be17355868 <col:15, col:28> col:28 sa 'StringAccum &'
| |-ParmVarDecl 0x55be173558e0 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55be17355958 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
`-CXXDestructorDecl 0x55be17358b60 <line:118:11> col:11 implicit referenced ~IPAddrFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.IPAddrRewriter::IPAddrFlow" = type { %class.IPRewriterFlow }
  NonVirtualBaseLLVMType:%"class.IPAddrRewriter::IPAddrFlow" = type { %class.IPRewriterFlow }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be16fa6c60 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be16fa6d78 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55be16fa6e08 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55be16fa6ed8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55be16fa6fc0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55be16fa71d8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55be16fa7080 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa7388 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55be16fa7290 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55be16fa74d0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55be16fa7440 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55be16fa7ff0 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55be16fa7f60 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa8138 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55be16fa80a8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa8200 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55be16fa8348 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55be16fa82b8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55be16fa8410 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55be16fa8558 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55be16fa84c8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55be16fa86d8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55be16fa8610 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa8820 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55be16fa8790 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa88e8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55be16fa8aa8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55be16fa8998 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55be16fa8a10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa8cf8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55be16fa8b68 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be16fa8be0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be16fa8da8 <col:86> "" ""
|-CXXMethodDecl 0x55be16fa9018 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55be16fa8e88 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55be16fa8f00 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa91c8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55be16fa90d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55be16fa9378 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55be16fa9280 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55be16fa9648 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55be16fa9430 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55be16fa94a8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55be16fa9520 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16fa9928 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55be16fa9710 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55be16fa9788 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be16fa9800 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be16fa99e0 <col:115> "" ""
|-AccessSpecDecl 0x55be16fa9a50 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55be16fa9a88 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be16faa190 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55be16faa190
| `-ParmVarDecl 0x55be16faa298 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55be16faa338 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55be16faa338
| `-ParmVarDecl 0x55be16faa448 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55be17048d38 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be1723e630 <col:7>
|-CXXConstructorDecl 0x55be17048e10 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55be17048e10
| `-ParmVarDecl 0x55be17048f28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55be17048f98 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55be17048f98
| `-ParmVarDecl 0x55be170490a8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55be17240fa0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172296b8 prev 0x55be1721bbe0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be172297b0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55be172298a0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55be172299c8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55be17229b48 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55be17229cc8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55be17229e48 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55be1723e798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be1723f008 <col:11>
|-CXXDestructorDecl 0x55be1723e870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55be1723e9a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55be1723e9a8
| `-ParmVarDecl 0x55be1723eab8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55be1723eb58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55be1723eb58
| `-ParmVarDecl 0x55be1723ec68 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55be17241998 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be17241aa8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55be17241d28 <col:11>
|   `-ReturnStmt 0x55be17241d18 <col:11>
|     `-UnaryOperator 0x55be17241d00 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be17241cf0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55be17241b18 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55be17241b18
  `-ParmVarDecl 0x55be17241c28 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17229eb0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be17229fc8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55be1722a068 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55be1722a0d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55be1722a138 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55be1722a1a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55be1722a200 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55be1722a2c0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55be1722a320 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55be1722a380 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55be1723e6a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55be1722a068 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55be1723f018 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55be1723f070 <col:12>
|-CXXConstructorDecl 0x55be1723ecd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55be1723ecd8
| `-ParmVarDecl 0x55be1723ede8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55be1723ee88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55be1723ee88
| `-ParmVarDecl 0x55be1723ef98 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55be17241080 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172152b0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be17215438 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55be172154c8 <col:16, col:22> col:16 public
|-EnumDecl 0x55be172154f0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55be172155f0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55be172156d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172155d0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55be172155b0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55be17215680 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55be172156e8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17215660 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55be17215640 <col:22> 'int' 64
|-CXXMethodDecl 0x55be17215a28 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55be17215710 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be17215790 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55be17215808 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be17215880 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55be17215ae8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55be17215ce8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55be17215b60 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55be17215bd8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55be17215d98 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55be17215ef8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55be17215e08 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55be17215fa0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55be172162d0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55be17216260 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55be17216200 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55be172161c0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55be16ce44e0 'void'
|       |-PointerType 0x55be16f915f0 'unsigned char *'
|       | `-BuiltinType 0x55be16ce45e0 'unsigned char'
|       |-TypedefType 0x55be16d8d8c0 'size_t' sugar
|       | |-Typedef 0x55be16d54be0 'size_t'
|       | `-BuiltinType 0x55be16ce4640 'unsigned long'
|       `-PointerType 0x55be16ce4ce0 'void *'
|         `-BuiltinType 0x55be16ce44e0 'void'
|-CXXMethodDecl 0x55be17216748 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55be17216340 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55be172163b8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be17216450 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55be172164d0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55be17234c00 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55be17234be8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55be17234bb0 <col:58> 'int' 0
| |-ParmVarDecl 0x55be17216550 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55be17234c28 <col:76> 'int' 0
| |-ParmVarDecl 0x55be172165d0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55be17234c48 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55be17216818 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55be17216898 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55be17216958 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55be172169f8 <col:20>
| `-OptimizeNoneAttr 0x55be17216a50 <col:30>
|-CXXMethodDecl 0x55be17216ac8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55be17216b68 <col:20>
| `-OptimizeNoneAttr 0x55be17216bc0 <col:30>
|-CXXMethodDecl 0x55be17216c38 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55be17216cd8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55be17216d88 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55be17216e28 <col:20>
| |-OptimizeNoneAttr 0x55be17216e80 <col:30>
| `-WarnUnusedResultAttr 0x55be17216ea8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55be17216f00 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55be17216fa0 <col:20>
| `-OptimizeNoneAttr 0x55be17216ff8 <col:30>
|-CXXMethodDecl 0x55be17217048 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55be172170e8 <col:20>
| `-OptimizeNoneAttr 0x55be17217140 <col:30>
|-CXXMethodDecl 0x55be17217188 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55be17217228 <col:20>
| `-OptimizeNoneAttr 0x55be17217280 <col:30>
|-CXXMethodDecl 0x55be172172c8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55be17217388 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55be17217450 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55be17217518 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55be172175d8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55be172176f8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55be17234d10 <col:54, line:99:5>
|   `-ReturnStmt 0x55be17234d00 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55be17234ce8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55be17234cb8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55be17233aa8
|         `-CXXThisExpr 0x55be17234ca8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55be17217898 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55be172177a8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55be17234dc0 <col:67, line:103:5>
|   `-BinaryOperator 0x55be17234da0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55be17234d38 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55be17233aa8
|     | `-CXXThisExpr 0x55be17234d28 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55be17234d88 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55be17234d68 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55be172177a8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55be17217990 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55be17234e40 <col:33, line:107:5>
|   `-ReturnStmt 0x55be17234e30 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55be17234e18 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55be17234de8 <col:16> 'void *' lvalue ->_destructor_argument 0x55be17233b10
|         `-CXXThisExpr 0x55be17234dd8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55be17217a50 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55be17235470 <col:25, line:113:5>
|   |-ParenExpr 0x55be172351b8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55be17235188 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55be17234ef8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55be17234ed0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55be17234e98 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55be17234e68 <col:24> '<bound member function type>' ->shared 0x55be17216ac8
|   |   |       `-ImplicitCastExpr 0x55be17234eb8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55be17234e58 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55be17234f58 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17234f38 <col:42> 'int' 0
|   |   `-CallExpr 0x55be172350e8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55be172350d0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be172350b0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17235128 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17234fc8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55be17235140 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17234ff0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17235158 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17235028 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55be17235170 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17235098 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17235080 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17235048 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55be172353b8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55be172351e8 <col:2> 'unsigned char *' lvalue ->_head 0x55be1722a4c0
|   | | `-CXXThisExpr 0x55be172351d8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55be172353a0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55be17235380 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55be17235228 <col:10> 'unsigned char *' lvalue ->_data 0x55be1722a528
|   |     | `-CXXThisExpr 0x55be17235218 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55be17235368 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55be17235348 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55be17235268 <col:18> 'unsigned char *' lvalue ->_tail 0x55be17233980
|   |         | `-CXXThisExpr 0x55be17235258 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55be17235330 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55be17235310 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55be172352a8 <col:26> 'unsigned char *' lvalue ->_end 0x55be172339e8
|   |             | `-CXXThisExpr 0x55be17235298 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55be172352f8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55be172352d8 <col:33> 'int' 0
|   `-BinaryOperator 0x55be17235450 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55be172353e8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55be17233aa8
|     | `-CXXThisExpr 0x55be172353d8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55be17235438 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55be17235418 <col:16> 'int' 0
|-CXXMethodDecl 0x55be17217b90 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55be17217b00 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be17217c38 <col:20>
| |-OptimizeNoneAttr 0x55be17217c90 <col:30>
| `-WarnUnusedResultAttr 0x55be17217cb8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55be17217d88 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55be17217cf8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be17217e30 <col:20>
| |-OptimizeNoneAttr 0x55be17217e88 <col:30>
| `-WarnUnusedResultAttr 0x55be17217eb0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55be17217fe8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55be17217ef0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55be17218090 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55be17218190 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55be17218100 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be17218238 <col:20>
| `-OptimizeNoneAttr 0x55be17218290 <col:30>
|-CXXMethodDecl 0x55be17218358 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55be172182c8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55be17218400 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55be17218500 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55be17218470 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55be172185a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55be172186a8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55be17218618 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be17218750 <col:20>
| `-OptimizeNoneAttr 0x55be172187a8 <col:30>
|-CXXMethodDecl 0x55be17218938 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55be172187e8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55be17218860 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55be17234c68 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55be172189e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55be17218be8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55be17218a60 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55be17218ad8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17218df8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55be17218ca8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55be17218d20 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17219008 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55be17218eb8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55be17218f38 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55be17234c78 <col:39> 'int' 0
|-CXXMethodDecl 0x55be172190d8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55be172191a0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55be17219268 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55be17219328 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55be17219408 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55be17219550 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55be172194c0 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55be17219720 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55be17219610 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55be17219688 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be172197f0 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55be172198b0 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x55be17219950 <col:20>
| `-OptimizeNoneAttr 0x55be172199a8 <col:30>
|-CXXMethodDecl 0x55be172199f8 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55be17219a98 <col:20>
| `-OptimizeNoneAttr 0x55be17219af0 <col:30>
|-CXXMethodDecl 0x55be17219b40 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55be17219c00 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55be17219cc8 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55be17219d68 <col:20>
| `-OptimizeNoneAttr 0x55be17219dc0 <col:30>
|-CXXMethodDecl 0x55be17219f10 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55be17219e00 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55be17219e78 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be1721a060 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55be17219fd0 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be1721a128 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55be1721a1e8 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55be1721a288 <col:20>
| `-OptimizeNoneAttr 0x55be1721a2e0 <col:30>
|-CXXMethodDecl 0x55be1721a330 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55be1721a3d0 <col:20>
| `-OptimizeNoneAttr 0x55be1721a428 <col:30>
|-CXXMethodDecl 0x55be1721a478 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55be1721a540 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x55be1721a5e0 <col:20>
| `-OptimizeNoneAttr 0x55be1721a638 <col:30>
|-CXXMethodDecl 0x55be1721a680 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55be1721a798 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55be1721a908 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55be1721a848 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55be1721a9f8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55be1721aa98 <col:20>
| `-OptimizeNoneAttr 0x55be1721aaf0 <col:30>
|-CXXMethodDecl 0x55be1721ab40 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55be1721ac00 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55be1721ae38 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55be1721acb0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55be1721ad28 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be1721aee8 <col:20>
| `-OptimizeNoneAttr 0x55be1721af40 <col:30>
|-CXXMethodDecl 0x55be1721afe8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55be1721b088 <col:20>
| `-OptimizeNoneAttr 0x55be1721b0e0 <col:30>
|-CXXMethodDecl 0x55be1721b130 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55be1721b1d0 <col:20>
| `-OptimizeNoneAttr 0x55be1721b228 <col:30>
|-CXXMethodDecl 0x55be1721b270 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55be1721b310 <col:20>
| `-OptimizeNoneAttr 0x55be1721b368 <col:30>
|-CXXMethodDecl 0x55be1721b468 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55be1721b3a0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55be1721b510 <col:20>
| `-OptimizeNoneAttr 0x55be1721b568 <col:30>
|-CXXMethodDecl 0x55be1721b728 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55be1721b5a0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55be1721b618 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be1721b7d8 <col:20>
| `-OptimizeNoneAttr 0x55be1721b830 <col:30>
|-CXXMethodDecl 0x55be1721b8d8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55be1721b9f8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55be1721bb18 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55be1721bbb8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55be1721bbe0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55be1721bd08 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55be1721bda8 <col:20>
| `-OptimizeNoneAttr 0x55be1721be00 <col:30>
|-CXXMethodDecl 0x55be1721bea8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55be1721bf48 <col:20>
| `-OptimizeNoneAttr 0x55be1721bfa0 <col:30>
|-AccessSpecDecl 0x55be1721bfc8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55be1721bff0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55be1721c0f0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55be1721c140 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1721c0d0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55be1721c0b0 <col:14> 'int' 48
|-CXXMethodDecl 0x55be1721c1a8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55be1721c248 <col:20>
| `-OptimizeNoneAttr 0x55be1721c2a0 <col:30>
|-CXXMethodDecl 0x55be1721c318 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55be1721c3b8 <col:20>
| `-OptimizeNoneAttr 0x55be1721c410 <col:30>
|-CXXMethodDecl 0x55be1721c4d8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55be1721c448 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55be1721c678 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55be1721c818 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55be1721c728 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55be1721c8c0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55be1721c9c0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55be1721cd70 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721c9a0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55be1721c980 <col:9> 'int' 0
| |-EnumConstantDecl 0x55be1721ca50 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55be1721cd88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721ca30 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55be1721ca10 <col:14> 'int' 1
| |-EnumConstantDecl 0x55be1721cae0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55be1721cda0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721cac0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55be1721caa0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55be1721cb70 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55be1721cdb8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721cb50 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55be1721cb30 <col:14> 'int' 3
| |-EnumConstantDecl 0x55be1721cc00 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55be1721cdd0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721cbe0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55be1721cbc0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55be1721cc90 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55be1721cde8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721cc70 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55be1721cc50 <col:13> 'int' 5
| `-EnumConstantDecl 0x55be1721cd20 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55be1721ce00 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1721cd00 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55be1721cce0 <col:14> 'int' 6
|-CXXMethodDecl 0x55be1721ce68 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55be1721cf08 <col:20>
| `-OptimizeNoneAttr 0x55be1721cf60 <col:30>
|-CXXMethodDecl 0x55be1721d058 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55be1721cf98 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55be1721d100 <col:20>
| `-OptimizeNoneAttr 0x55be1721d158 <col:30>
|-CXXMethodDecl 0x55be1721d1c8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55be1721d2f0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55be1721d4b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55be1721d3f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55be1721d580 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55be1721d648 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55be1721d788 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55be1721d6f8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55be1721d830 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55be1721d930 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55be1721db30 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721d910 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55be1721d8f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55be1721d9c0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55be1721db48 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721d9a0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55be1721d980 <col:45> 'int' 4
| |-EnumConstantDecl 0x55be1721da50 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55be1721db60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be1721da30 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55be1721da10 <col:24> 'int' 0
| `-EnumConstantDecl 0x55be1721dae0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55be1721db78 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1721dac0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55be1721daa0 <col:47> 'int' 16
|-CXXMethodDecl 0x55be1721dbd8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55be1721dd48 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55be1721dc88 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55be1721ddf0 <col:20>
| `-OptimizeNoneAttr 0x55be1721de48 <col:30>
|-CXXMethodDecl 0x55be1721de98 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55be17235590 <col:18, col:36>
|   `-ReturnStmt 0x55be17235580 <col:20, col:33>
|     `-ImplicitCastExpr 0x55be17235568 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55be17235548 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55be17235518 <col:27> '<bound member function type>' ->xanno 0x55be1721bea8
|           `-CXXThisExpr 0x55be17235508 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55be1721df90 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55be172356a0 <col:30, col:48>
|   `-ReturnStmt 0x55be17235690 <col:32, col:45>
|     `-ImplicitCastExpr 0x55be17235678 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55be17235658 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55be17235628 <col:39> '<bound member function type>' ->xanno 0x55be1721bd08
|           `-CXXThisExpr 0x55be17235618 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55be1721e078 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55be17235838 <col:24, col:50>
|   `-ReturnStmt 0x55be17235828 <col:26, col:47>
|     `-UnaryOperator 0x55be17235810 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55be172357f0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55be172357d8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55be17235788 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55be172299c8
|         |   `-CXXMemberCallExpr 0x55be17235768 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55be17235738 <col:34> '<bound member function type>' ->xanno 0x55be1721bea8
|         |       `-CXXThisExpr 0x55be17235728 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55be172357b8 <col:46> 'int' 0
|-CXXMethodDecl 0x55be1721e168 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55be17235a08 <col:36, col:62>
|   `-ReturnStmt 0x55be172359f8 <col:38, col:59>
|     `-UnaryOperator 0x55be172359e0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55be172359c0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55be172359a8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55be17235920 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55be172299c8
|         |   `-CXXMemberCallExpr 0x55be17235900 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55be172358d0 <col:46> '<bound member function type>' ->xanno 0x55be1721bd08
|         |       `-CXXThisExpr 0x55be172358c0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55be17235950 <col:58> 'int' 0
|-CXXMethodDecl 0x55be1721e288 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55be17235ba0 <col:26, col:53>
|   `-ReturnStmt 0x55be17235b90 <col:28, col:50>
|     `-UnaryOperator 0x55be17235b78 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55be17235b58 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55be17235b40 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55be17235af0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55be17229cc8
|         |   `-CXXMemberCallExpr 0x55be17235ad0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55be17235aa0 <col:36> '<bound member function type>' ->xanno 0x55be1721bea8
|         |       `-CXXThisExpr 0x55be17235a90 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55be17235b20 <col:49> 'int' 0
|-CXXMethodDecl 0x55be1721e3a8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55be17235d78 <col:38, col:65>
|   `-ReturnStmt 0x55be17235d68 <col:40, col:62>
|     `-UnaryOperator 0x55be17235d50 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55be17235d30 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55be17235d18 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55be17235c88 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55be17229cc8
|         |   `-CXXMemberCallExpr 0x55be17235c68 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55be17235c38 <col:48> '<bound member function type>' ->xanno 0x55be1721bd08
|         |       `-CXXThisExpr 0x55be17235c28 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55be17235cb8 <col:61> 'int' 0
|-CXXMethodDecl 0x55be1721e558 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55be1721e460 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55be17236448 <col:34, line:463:5>
|   |-ParenExpr 0x55be17236290 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55be17236260 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55be17235ec8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17235e98 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be17235de8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17235dd0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17235d90 <col:23> 'int' lvalue ParmVar 0x55be1721e460 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17235db0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17235e78 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17235e48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be17235e08 <col:33> 'int' lvalue ParmVar 0x55be1721e460 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55be17235e60 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55be17235e28 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55be17235f28 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17235f08 <col:56> 'int' 0
|   |   `-CallExpr 0x55be172361c0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55be172361a8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17236188 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17236200 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17236018 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55be17236218 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17236048 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17236230 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17236080 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55be17236248 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17236170 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17236158 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17236118 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55be17236438 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55be17236420 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55be17236400 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55be172363d0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55be17236380 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55be172299c8
|         |   `-CXXMemberCallExpr 0x55be17236360 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55be17236330 <col:9> '<bound member function type>' ->xanno 0x55be1721bd08
|         |       `-CXXThisExpr 0x55be17236320 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55be172363e8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55be172363b0 <col:21> 'int' lvalue ParmVar 0x55be1721e460 'i' 'int'
|-CXXMethodDecl 0x55be1721e7a8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55be1721e618 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55be1721e690 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55be17236ad8 <col:40, line:472:5>
|   |-ParenExpr 0x55be172368f0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55be172368c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55be172365a0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17236570 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be172364c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be172364a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17236468 <col:23> 'int' lvalue ParmVar 0x55be1721e618 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17236488 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17236550 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17236520 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be172364e0 <col:33> 'int' lvalue ParmVar 0x55be1721e618 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55be17236538 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55be17236500 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55be17236600 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be172365e0 <col:56> 'int' 0
|   |   `-CallExpr 0x55be17236820 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55be17236808 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be172367e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17236860 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17236670 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55be17236878 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172366a0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17236890 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be172366d8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55be172368a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be172367d0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be172367b8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17236778 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55be17236ab8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55be17236a60 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55be17236a30 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55be172369e0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55be172299c8
|     | |   `-CXXMemberCallExpr 0x55be172369c0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55be17236990 <col:2> '<bound member function type>' ->xanno 0x55be1721bea8
|     | |       `-CXXThisExpr 0x55be17236980 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55be17236a48 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55be17236a10 <col:14> 'int' lvalue ParmVar 0x55be1721e618 'i' 'int'
|     `-ImplicitCastExpr 0x55be17236aa0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55be17236a80 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55be1721e690 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55be1721e968 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55be1721e870 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55be17237258 <col:36, line:485:5>
|   |-ParenExpr 0x55be17236fc0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be17236f90 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be17236c70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17236c40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be17236b50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17236b38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17236af8 <col:23> 'int' lvalue ParmVar 0x55be1721e870 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17236b18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17236c20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17236c08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be17236b70 <col:33> 'int' lvalue ParmVar 0x55be1721e870 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17236be8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17236bd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be17236b90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17236bb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55be17236cd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17236cb0 <col:60> 'int' 0
|   |   `-CallExpr 0x55be17236ef0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be17236ed8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17236eb8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17236f30 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17236d40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55be17236f48 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17236d78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17236f60 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17236db0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55be17236f78 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17236ea0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17236e88 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17236e48 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55be17237248 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55be17237230 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55be17237218 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55be172371e8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55be17237188 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55be17237158 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be172370d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55be172298a0
|             |   `-CXXMemberCallExpr 0x55be172370b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55be17237080 <col:61> '<bound member function type>' ->xanno 0x55be1721bd08
|             |       `-CXXThisExpr 0x55be17237070 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55be17237170 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55be17237100 <col:74> 'int' lvalue ParmVar 0x55be1721e870 'i' 'int'
|-CXXMethodDecl 0x55be1721ebb8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55be1721ea28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55be1721eaa0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55be172379c8 <col:42, line:500:5>
|   |-ParenExpr 0x55be17237740 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be17237710 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be172373f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be172373c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be172372d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be172372b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17237278 <col:23> 'int' lvalue ParmVar 0x55be1721ea28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17237298 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be172373a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17237388 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be172372f0 <col:33> 'int' lvalue ParmVar 0x55be1721ea28 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17237368 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17237350 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be17237310 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17237330 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55be17237450 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17237430 <col:60> 'int' 0
|   |   `-CallExpr 0x55be17237670 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be17237658 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17237638 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be172376b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172374c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55be172376c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172374f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be172376e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17237530 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55be172376f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17237620 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17237608 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be172375c8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55be172379a8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55be17237938 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55be17237908 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55be172378b0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55be17237880 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55be17237830 <col:48, col:57> 'char [48]' lvalue ->c 0x55be172298a0
|     |     |   `-CXXMemberCallExpr 0x55be17237810 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55be172377e0 <col:48> '<bound member function type>' ->xanno 0x55be1721bea8
|     |     |       `-CXXThisExpr 0x55be172377d0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55be17237898 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55be17237860 <col:61> 'int' lvalue ParmVar 0x55be1721ea28 'i' 'int'
|     `-ImplicitCastExpr 0x55be17237990 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55be17237950 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55be1721eaa0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55be1721ed78 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55be1721ec80 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55be17238128 <col:35, line:513:5>
|   |-ParenExpr 0x55be17237e38 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be17237e08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be17237b60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17237b30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be17237a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17237a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be172379e8 <col:23> 'int' lvalue ParmVar 0x55be1721ec80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17237a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17237b10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17237af8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be17237a60 <col:33> 'int' lvalue ParmVar 0x55be1721ec80 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17237ad8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17237ac0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be17237a80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17237aa0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55be17237bc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17237ba0 <col:60> 'int' 0
|   |   `-CallExpr 0x55be17237d68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be17237d50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17237d30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17237da8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17237c30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55be17237dc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17237c68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17237dd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17237ca0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55be17237df0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17237d18 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17237d00 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17237cc0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55be17238118 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55be17238100 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55be172380e8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55be172380b8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55be17238030 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55be17238000 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be17237fb0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55be172298a0
|             |   `-CXXMemberCallExpr 0x55be17237f90 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55be17237f60 <col:60> '<bound member function type>' ->xanno 0x55be1721bd08
|             |       `-CXXThisExpr 0x55be17237f50 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55be17238018 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55be17237fe0 <col:73> 'int' lvalue ParmVar 0x55be1721ec80 'i' 'int'
|-CXXMethodDecl 0x55be1721efc8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55be1721ee38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55be1721eeb0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55be17238838 <col:41, line:528:5>
|   |-ParenExpr 0x55be172385d0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be172385a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be172382c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17238290 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be172381a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17238188 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17238148 <col:23> 'int' lvalue ParmVar 0x55be1721ee38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17238168 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17238270 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17238258 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be172381c0 <col:33> 'int' lvalue ParmVar 0x55be1721ee38 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17238238 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17238220 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be172381e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17238200 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55be17238320 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17238300 <col:60> 'int' 0
|   |   `-CallExpr 0x55be17238500 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be172384e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be172384c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17238540 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17238390 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55be17238558 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172383c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17238570 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17238400 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55be17238588 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be172384b0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17238498 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17238458 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55be17238818 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55be172387c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55be17238798 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55be17238740 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55be17238710 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55be172386c0 <col:47, col:56> 'char [48]' lvalue ->c 0x55be172298a0
|     |     |   `-CXXMemberCallExpr 0x55be172386a0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55be17238670 <col:47> '<bound member function type>' ->xanno 0x55be1721bea8
|     |     |       `-CXXThisExpr 0x55be17238660 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55be17238728 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55be172386f0 <col:60> 'int' lvalue ParmVar 0x55be1721ee38 'i' 'int'
|     `-ImplicitCastExpr 0x55be17238800 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55be172387e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55be1721eeb0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55be1721f188 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55be1721f090 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55be17238f08 <col:36, line:541:5>
|   |-ParenExpr 0x55be17238ca8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be17238c78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be172389d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be172389a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be172388b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17238898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17238858 <col:23> 'int' lvalue ParmVar 0x55be1721f090 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17238878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17238980 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17238968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be172388d0 <col:33> 'int' lvalue ParmVar 0x55be1721f090 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17238948 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17238930 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be172388f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17238910 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55be17238a30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17238a10 <col:60> 'int' 0
|   |   `-CallExpr 0x55be17238bd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be17238bc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17238ba0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be17238c18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17238aa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55be17238c30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17238ad8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17238c48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17238b10 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55be17238c60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17238b88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17238b70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17238b30 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55be17238ef8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55be17238ee0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55be17238ec8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55be17238e98 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55be17238e40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55be17238e10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be17238dc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55be172298a0
|             |   `-CXXMemberCallExpr 0x55be17238da0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55be17238d70 <col:61> '<bound member function type>' ->xanno 0x55be1721bd08
|             |       `-CXXThisExpr 0x55be17238d60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55be17238e28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55be17238df0 <col:74> 'int' lvalue ParmVar 0x55be1721f090 'i' 'int'
|-CXXMethodDecl 0x55be1721f358 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55be1721f248 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55be1721f2c0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55be1721f408 <col:20>
| `-OptimizeNoneAttr 0x55be1721f460 <col:30>
|-CXXMethodDecl 0x55be1721f598 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55be1721f4a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55be172395d8 <col:35, line:562:5>
|   |-ParenExpr 0x55be17239378 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be17239348 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be172390a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17239070 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be17238f80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17238f68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17238f28 <col:23> 'int' lvalue ParmVar 0x55be1721f4a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17238f48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17239050 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17239038 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be17238fa0 <col:33> 'int' lvalue ParmVar 0x55be1721f4a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17239018 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17239000 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be17238fc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17238fe0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55be17239100 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be172390e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55be172392a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be17239290 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17239270 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be172392e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17239170 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55be17239300 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172391a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be17239318 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be172391e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55be17239330 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17239258 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17239240 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17239200 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55be172395c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55be172395b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55be17239598 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55be17239568 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55be17239510 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55be172394e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be17239490 <col:60, col:69> 'char const[48]' lvalue ->c 0x55be172298a0
|             |   `-CXXMemberCallExpr 0x55be17239470 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55be17239440 <col:60> '<bound member function type>' ->xanno 0x55be1721bd08
|             |       `-CXXThisExpr 0x55be17239430 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55be172394f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55be172394c0 <col:73> 'int' lvalue ParmVar 0x55be1721f4a0 'i' 'int'
|-CXXMethodDecl 0x55be1721f7a8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55be1721f658 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55be1721f6d0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55be17239cb8 <col:41, line:577:5>
|   |-ParenExpr 0x55be17239a48 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be17239a18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be17239770 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17239740 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be17239650 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17239638 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be172395f8 <col:23> 'int' lvalue ParmVar 0x55be1721f658 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17239618 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17239720 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17239708 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be17239670 <col:33> 'int' lvalue ParmVar 0x55be1721f658 'i' 'int'
|   |   |     `-BinaryOperator 0x55be172396e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be172396d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be17239690 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be172396b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55be172397d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be172397b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55be17239978 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be17239960 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be17239940 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be172399b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17239840 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55be172399d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17239878 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be172399e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be172398b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55be17239a00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be17239928 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17239910 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be172398d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55be17239c98 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55be17239c48 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55be17239c18 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55be17239bb8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55be17239b88 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55be17239b38 <col:47, col:56> 'char [48]' lvalue ->c 0x55be172298a0
|     |     |   `-CXXMemberCallExpr 0x55be17239b18 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55be17239ae8 <col:47> '<bound member function type>' ->xanno 0x55be1721bea8
|     |     |       `-CXXThisExpr 0x55be17239ad8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55be17239ba0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55be17239b68 <col:60> 'int' lvalue ParmVar 0x55be1721f658 'i' 'int'
|     `-ImplicitCastExpr 0x55be17239c80 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55be17239c60 <col:65> 'int32_t':'int' lvalue ParmVar 0x55be1721f6d0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55be1721f968 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55be1721f870 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55be1723a3e8 <col:36, line:591:5>
|   |-ParenExpr 0x55be1723a128 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be1723a0f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be17239e50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be17239e20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be17239d30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be17239d18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be17239cd8 <col:23> 'int' lvalue ParmVar 0x55be1721f870 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be17239cf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be17239e00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be17239de8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be17239d50 <col:33> 'int' lvalue ParmVar 0x55be1721f870 'i' 'int'
|   |   |     `-BinaryOperator 0x55be17239dc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be17239db0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be17239d70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be17239d90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55be17239eb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be17239e90 <col:60> 'int' 0
|   |   `-CallExpr 0x55be1723a058 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be1723a040 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be1723a020 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be1723a098 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17239f20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55be1723a0b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be17239f58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be1723a0c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be17239f90 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55be1723a0e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be1723a008 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be17239ff0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be17239fb0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55be1723a3d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55be1723a3c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55be1723a3a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55be1723a378 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55be1723a2f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55be1723a2c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be1723a270 <col:61, col:70> 'char const[48]' lvalue ->c 0x55be172298a0
|             |   `-CXXMemberCallExpr 0x55be1723a250 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55be1723a220 <col:61> '<bound member function type>' ->xanno 0x55be1721bd08
|             |       `-CXXThisExpr 0x55be1723a210 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55be1723a2d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55be1723a2a0 <col:74> 'int' lvalue ParmVar 0x55be1721f870 'i' 'int'
|-CXXMethodDecl 0x55be1721fbb8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55be1721fa28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55be1721faa0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55be1723aac8 <col:42, line:606:5>
|   |-ParenExpr 0x55be1723a858 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55be1723a828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55be1723a580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be1723a550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be1723a460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be1723a448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be1723a408 <col:23> 'int' lvalue ParmVar 0x55be1721fa28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be1723a428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be1723a530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55be1723a518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be1723a480 <col:33> 'int' lvalue ParmVar 0x55be1721fa28 'i' 'int'
|   |   |     `-BinaryOperator 0x55be1723a4f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be1723a4e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be1723a4a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55be1723a4c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55be1723a5e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be1723a5c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55be1723a788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55be1723a770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be1723a750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be1723a7c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1723a650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55be1723a7e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1723a688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be1723a7f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be1723a6c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55be1723a810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be1723a738 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be1723a720 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be1723a6e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55be1723aaa8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55be1723aa58 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55be1723aa28 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55be1723a9c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55be1723a998 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55be1723a948 <col:48, col:57> 'char [48]' lvalue ->c 0x55be172298a0
|     |     |   `-CXXMemberCallExpr 0x55be1723a928 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55be1723a8f8 <col:48> '<bound member function type>' ->xanno 0x55be1721bea8
|     |     |       `-CXXThisExpr 0x55be1723a8e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55be1723a9b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55be1723a978 <col:61> 'int' lvalue ParmVar 0x55be1721fa28 'i' 'int'
|     `-ImplicitCastExpr 0x55be1723aa90 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55be1723aa70 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55be1721faa0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55be1721fd50 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55be1721fc80 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55be1723b338 <col:33, line:620:5>
|   |-ParenExpr 0x55be1723b0b0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55be1723b080 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55be1723acd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be1723aca0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be1723ab40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be1723ab28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be1723aae8 <col:23> 'int' lvalue ParmVar 0x55be1721fc80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be1723ab08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be1723ac80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55be1723ac68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be1723ab60 <col:33> 'int' lvalue ParmVar 0x55be1721fc80 'i' 'int'
|   |   |     `-BinaryOperator 0x55be1723ac48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be1723ac30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be1723ab80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55be1723ac08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55be1723abf0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55be1723abb8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55be1723ad30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be1723ad10 <col:79> 'int' 0
|   |   `-CallExpr 0x55be1723afe0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55be1723afc8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be1723afa8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be1723b020 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1723ae18 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55be1723b038 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1723ae60 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be1723b050 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be1723ae98 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55be1723b068 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be1723af90 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be1723af78 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be1723af38 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55be1723b328 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55be1723b310 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55be1723b2f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55be1723b2c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55be1723b240 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55be1723b210 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55be1723b1c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55be172298a0
|             |   `-CXXMemberCallExpr 0x55be1723b1a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55be1723b170 <col:67> '<bound member function type>' ->xanno 0x55be1721bd08
|             |       `-CXXThisExpr 0x55be1723b160 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55be1723b228 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55be1723b1f0 <col:80> 'int' lvalue ParmVar 0x55be1721fc80 'i' 'int'
|-CXXMethodDecl 0x55be1721ff68 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55be1721fe10 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55be1721fe90 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55be1723e590 <col:45, line:635:5>
|   |-ParenExpr 0x55be1723b8a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55be1723b878 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55be1723b540 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be1723b510 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be1723b3b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55be1723b398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55be1723b358 <col:23> 'int' lvalue ParmVar 0x55be1721fe10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55be1723b378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55be1723b4f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55be1723b4d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be1723b3d0 <col:33> 'int' lvalue ParmVar 0x55be1721fe10 'i' 'int'
|   |   |     `-BinaryOperator 0x55be1723b4b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55be1723b4a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55be1723b3f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55be1721c0f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55be1723b478 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55be1723b460 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55be1723b428 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55be1723b5a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be1723b580 <col:79> 'int' 0
|   |   `-CallExpr 0x55be1723b7d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55be1723b7c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be1723b7a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be1723b818 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1723b610 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55be1723b830 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be1723b658 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55be1723b848 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be1723b690 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55be1723b860 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be1723b788 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be1723b770 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be1723b728 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55be1723e570 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55be1723e4d8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55be1723e4a8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55be1723e450 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55be1723e420 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55be1723e3d0 <col:54, col:63> 'char [48]' lvalue ->c 0x55be172298a0
|     |     |   `-CXXMemberCallExpr 0x55be1723e3b0 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55be1723b948 <col:54> '<bound member function type>' ->xanno 0x55be1721bea8
|     |     |       `-CXXThisExpr 0x55be1723b938 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55be1723e438 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55be1723e400 <col:67> 'int' lvalue ParmVar 0x55be1721fe10 'i' 'int'
|     `-CXXConstCastExpr 0x55be1723e540 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55be1723e528 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55be1723e4f0 <col:91> 'const void *' lvalue ParmVar 0x55be1721fe90 'x' 'const void *'
|-CXXMethodDecl 0x55be17220038 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55be1723e618 <col:34, line:640:5>
|   `-ReturnStmt 0x55be1723e608 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55be1723e5f0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55be1723e5c0 <col:16> 'Packet *' lvalue ->_data_packet 0x55be1722a458
|         `-CXXThisExpr 0x55be1723e5b0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55be17220178 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55be172200e8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be17234c98 <col:46> 'bool' true
|-CXXMethodDecl 0x55be172202f8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55be17220230 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55be172203a0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55be17220b50 <line:660:22> "" ""
| |-EnumConstantDecl 0x55be172204a0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220bc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220480 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55be17220460 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55be172155f0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55be17220530 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220bd8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220510 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55be172204f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55be17215680 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55be172205c0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220bf0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172205a0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55be17220580 <col:21> 'int' 0
| |-EnumConstantDecl 0x55be17220650 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c08 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220630 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55be17220610 <col:19> 'int' 16
| |-EnumConstantDecl 0x55be172206e0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172206c0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55be172206a0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55be17220770 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c38 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220750 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55be17220730 <col:19> 'int' 32
| |-EnumConstantDecl 0x55be17220800 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c50 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172207e0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55be172207c0 <col:19> 'int' EnumConstant 0x55be17220650 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55be17220890 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c68 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220870 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55be17220850 <col:19> 'int' EnumConstant 0x55be17220770 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55be17220960 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c80 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220940 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55be17220920 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55be172208e0 <col:23> 'int' EnumConstant 0x55be17220890 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55be17220900 <col:40> 'int' 2
| |-EnumConstantDecl 0x55be17220a30 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55be17220c98 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17220a10 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55be172209f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55be172209b0 <col:23> 'int' EnumConstant 0x55be17220890 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55be172209d0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55be17220b00 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55be17220cb0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17220ae0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55be17220ac0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55be17220a80 <col:23> 'int' EnumConstant 0x55be17220890 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55be17220aa0 <col:40> 'int' 8
|-CXXMethodDecl 0x55be17220cf0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55be17220d90 <col:68> "" ""
|-CXXMethodDecl 0x55be17220e28 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55be17220ec8 <col:45> "" ""
|-CXXMethodDecl 0x55be17220f60 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55be17221000 <col:57> "" ""
|-CXXMethodDecl 0x55be17221098 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55be17221138 <col:45> "" ""
|-CXXMethodDecl 0x55be172211d0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55be17221270 <col:57> "" ""
|-CXXMethodDecl 0x55be17221300 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55be172213a0 <col:51> "" ""
|-CXXMethodDecl 0x55be17226610 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55be172266b0 <col:63> "" ""
|-CXXMethodDecl 0x55be17226740 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55be172267e0 <col:53> "" ""
|-CXXMethodDecl 0x55be17226870 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55be17226910 <col:65> "" ""
|-CXXMethodDecl 0x55be17226a28 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55be17226998 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55be17226ad0 <col:61> "" ""
|-CXXMethodDecl 0x55be17226c68 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55be17226b58 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55be17226bd0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55be17226d18 <col:67> "" ""
|-CXXMethodDecl 0x55be17226e30 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55be17226da0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55be17226ed8 <col:63> "" ""
|-CXXMethodDecl 0x55be17227070 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55be17226f60 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55be17226fd8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55be17227120 <col:69> "" ""
|-CXXMethodDecl 0x55be17227238 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55be172271a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55be172272e0 <col:63> "" ""
|-CXXMethodDecl 0x55be17227478 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55be17227368 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55be172273e0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be17227528 <col:69> "" ""
|-CXXMethodDecl 0x55be17227640 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55be172275b0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55be172276e8 <col:62> "" ""
|-CXXMethodDecl 0x55be17227880 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55be17227770 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55be172277e8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55be17227930 <col:68> "" ""
|-CXXMethodDecl 0x55be17227a48 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55be172279b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55be17227af0 <col:63> "" ""
|-CXXMethodDecl 0x55be17227c88 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55be17227b78 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55be17227bf0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55be17227d38 <col:69> "" ""
|-CXXMethodDecl 0x55be17227dc8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55be17227e68 <col:64> "" ""
|-CXXMethodDecl 0x55be17227ef8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55be17227f98 <col:52> "" ""
|-CXXMethodDecl 0x55be17228028 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55be172280c8 <col:67> "" ""
|-CXXMethodDecl 0x55be17228158 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55be172281f8 <col:55> "" ""
|-CXXMethodDecl 0x55be17228310 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55be17228280 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55be172283b8 <col:58> "" ""
|-CXXMethodDecl 0x55be17228550 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55be17228440 <col:33> col:36 'int'
| |-ParmVarDecl 0x55be172284b8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55be17228600 <col:62> "" ""
|-CXXMethodDecl 0x55be17228718 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55be17228688 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55be172287c0 <col:58> "" ""
|-CXXMethodDecl 0x55be17228958 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55be17228848 <col:33> col:36 'int'
| |-ParmVarDecl 0x55be172288c0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55be17228a08 <col:62> "" ""
|-CXXMethodDecl 0x55be17228b20 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55be17228a90 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55be17228bc8 <col:60> "" ""
|-CXXMethodDecl 0x55be17228d60 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55be17228c50 <col:34> col:37 'int'
| |-ParmVarDecl 0x55be17228cc8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55be17228e10 <col:64> "" ""
|-CXXMethodDecl 0x55be17228f28 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55be17228e98 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55be17228fd0 <col:58> "" ""
|-CXXMethodDecl 0x55be17229168 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55be17229058 <col:33> col:36 'int'
| |-ParmVarDecl 0x55be172290d0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55be17229218 <col:62> "" ""
|-CXXMethodDecl 0x55be17229330 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55be172292a0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55be172293d8 <col:59> "" ""
|-CXXMethodDecl 0x55be17229570 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55be17229460 <col:33> col:36 'int'
| |-ParmVarDecl 0x55be172294d8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55be17229620 <col:63> "" ""
|-AccessSpecDecl 0x55be17229690 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55be172296b8 prev 0x55be1721bbe0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55be172297b0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55be172298a0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55be172299c8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55be17229b48 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55be17229cc8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55be17229e48 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55be1723e798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55be1723f008 <col:11>
| |-CXXDestructorDecl 0x55be1723e870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55be1723e9a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55be1723e9a8
| | `-ParmVarDecl 0x55be1723eab8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55be1723eb58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55be1723eb58
| | `-ParmVarDecl 0x55be1723ec68 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55be17241998 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be17241aa8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55be17241d28 <col:11>
| |   `-ReturnStmt 0x55be17241d18 <col:11>
| |     `-UnaryOperator 0x55be17241d00 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55be17241cf0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55be17241b18 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55be17241b18
|   `-ParmVarDecl 0x55be17241c28 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55be17229eb0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55be17229fc8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55be1722a068 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55be1722a0d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55be1722a138 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55be1722a1a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55be1722a200 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55be1722a2c0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55be1722a320 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55be1722a380 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55be1723e6a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55be1722a068 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55be1723f018 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55be1723f070 <col:12>
| |-CXXConstructorDecl 0x55be1723ecd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55be1723ecd8
| | `-ParmVarDecl 0x55be1723ede8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55be1723ee88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55be1723ee88
| | `-ParmVarDecl 0x55be1723ef98 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55be17241080 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55be1722a3f8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55be1722a458 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55be1722a4c0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55be1722a528 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55be17233980 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55be172339e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55be17233a48 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55be17233aa8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55be17233b10 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55be17233b98 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55be1722a3f8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55be1723e640 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55be17233a48 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55be1723f080 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55be1723f0e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55be17233d38 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55be17233c78 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55be17233e30 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55be17234018 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55be17233f20 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55be172342e8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55be172340d0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be17234148 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55be172341c0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17234508 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55be172343b8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55be17234430 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55be172347d8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55be172345c8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55be17234640 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55be172346b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55be17234930 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55be172348a0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17234a78 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55be172349e8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55be17234b70 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1723f0f0 prev 0x55be17215200 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55be1723f228 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55be1723f2b8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55be1723f360 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55be1723f400 <col:20>
| `-OptimizeNoneAttr 0x55be1723f458 <col:30>
|-CXXMethodDecl 0x55be1723f4a8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55be1723f548 <col:20>
| `-OptimizeNoneAttr 0x55be1723f5a0 <col:30>
|-CXXMethodDecl 0x55be1723f5f0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55be1723f6b8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55be1723f780 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55be1723f898 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55be1723f960 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55be1723fa00 <col:20>
| `-OptimizeNoneAttr 0x55be1723fa58 <col:30>
|-CXXMethodDecl 0x55be1723fac8 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55be1723fb68 <col:20>
| `-OptimizeNoneAttr 0x55be1723fbc0 <col:30>
|-CXXMethodDecl 0x55be1723fc68 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55be1723fd08 <col:20>
| `-OptimizeNoneAttr 0x55be1723fd60 <col:30>
|-CXXMethodDecl 0x55be1723fdb0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55be1723fec8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55be1723ffe8 <line:791:5, col:36> col:23 used tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55be17240108 <line:792:5, col:36> col:23 used udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55be172401d0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55be17240270 <col:62> "" ""
|-AccessSpecDecl 0x55be172402e0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55be17240340 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55be17240f38 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55be17241160 <col:29, col:31>
|-CXXMethodDecl 0x55be17240408 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55be17240548 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55be172404b8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55be17240640 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55be17241170 <col:23, col:25>
|-CXXMethodDecl 0x55be172407f8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55be17240730 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55be17240ac8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55be172408b0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55be17240928 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55be172409a0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55be17240c58 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55be17240b90 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55be17240d50 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55be17240db8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55be17240db8
  `-ParmVarDecl 0x55be17240ec8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be16f7fa98 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be16f7fbb8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55be16f7fc80 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55be17059980 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be1705c7d8 <col:8>
|-CXXConstructorDecl 0x55be17059a88 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55be17059a88
| `-ParmVarDecl 0x55be17059b98 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55be17059c38 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be17059d48 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55be16f7fc80 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55be1705c9f0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55be1705c9c0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55be16f7fc80
| |     `-CXXStaticCastExpr 0x55be1705c990 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55be1705c960 <col:8> 'in_addr' lvalue ParmVar 0x55be17059d48 '' 'in_addr &&'
| `-CompoundStmt 0x55be1705ca38 <col:8>
|-CXXDestructorDecl 0x55be1705cc70 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be17441138 <col:8> col:8 implicit constexpr operator= 'in_addr &(const in_addr &)' inline default trivial noexcept-unevaluated 0x55be17441138
| `-ParmVarDecl 0x55be17441248 <col:8> col:8 'const in_addr &'
`-CXXMethodDecl 0x55be174412b8 <col:8> col:8 implicit used constexpr operator= 'in_addr &(in_addr &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55be174413c8 <col:8> col:8 used 'in_addr &&'
  `-CompoundStmt 0x55be17441680 <col:8>
    |-BinaryOperator 0x55be17441628 <col:8> 'in_addr_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x55be174415e0 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x55be16f7fc80
    | | `-CXXThisExpr 0x55be174415d0 <col:8> 'in_addr *' this
    | `-ImplicitCastExpr 0x55be17441610 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55be174415a0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55be16f7fc80
    |     `-CXXStaticCastExpr 0x55be17441570 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
    |       `-DeclRefExpr 0x55be17441540 <col:8> 'in_addr' lvalue ParmVar 0x55be174413c8 '' 'in_addr &&'
    `-ReturnStmt 0x55be17441670 <col:8>
      `-UnaryOperator 0x55be17441658 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55be17441648 <col:8> 'in_addr *' this

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1704e528 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be1704e648 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55be1704e730 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55be1704e710 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55be1704e6d8 <col:22> 'int' 4
|-FieldDecl 0x55be1704e7d8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55be1704e7b8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55be1704e780 <col:21> 'int' 4
|-FieldDecl 0x55be1704e838 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55be1704e898 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55be1704e8f8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55be1704e958 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55be1704e9b8 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55be1704ea18 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55be1704ea78 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55be1704eae8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55be1704eb58 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1743fc40 prev 0x55be17214ff0 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be1743fd38 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55be1743fdd8 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55be1743fe38 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55be1743fec0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55be1743ff20 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55be1743ffc8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55be1743ffa8 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55be1743ff70 <col:26> 'int' 4
|-FieldDecl 0x55be17440070 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x55be17440050 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55be17440018 <col:23> 'int' 4
|-FieldDecl 0x55be174400d0 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55be17440130 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55be17440190 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55be174401f0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17440258 prev 0x55be172150a0 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be17440350 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x55be174403f0 <line:12:5, col:14> col:14 uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55be17440450 <line:13:5, col:14> col:14 uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55be174404b0 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x55be17440510 <line:15:5, col:14> col:14 referenced uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1741ae70 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be1741af88 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55be1741b030 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55be1741b098 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55be1741b100 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55be1741b1b0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55be1741b030 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55be1741c030 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55be1741bfe8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55be1741bfb0 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55be1741bf98 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55be1741bf40 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55be17045a70 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55be1741b098 'len' 'int'
| | `-IntegerLiteral 0x55be1741c0a8 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55be1741b100 'cap' 'int'
| | `-IntegerLiteral 0x55be1741c110 <col:20> 'int' 0
| `-CompoundStmt 0x55be1741c190 <col:23, line:119:2>
|-CXXConstructorDecl 0x55be1741b328 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55be1741b268 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55be1741c1a0 <col:37, line:121:2>
|-CXXConstructorDecl 0x55be1741e408 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be1741e518 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55be1741b030 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55be1741fe50 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55be1741fe20 <col:12> 'unsigned char *const' lvalue .s 0x55be1741b030
| |     `-DeclRefExpr 0x55be1741fe00 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55be1741e518 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55be1741b098 'len' 'int'
| | `-ImplicitCastExpr 0x55be1741fee0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55be1741feb0 <col:12> 'const int' lvalue .len 0x55be1741b098
| |     `-DeclRefExpr 0x55be1741fe90 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55be1741e518 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55be1741b100 'cap' 'int'
| | `-ImplicitCastExpr 0x55be1741ff70 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55be1741ff40 <col:12> 'const int' lvalue .cap 0x55be1741b100
| |     `-DeclRefExpr 0x55be1741ff20 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55be1741e518 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55be1741ffc8 <col:12>
|-CXXConstructorDecl 0x55be1741e5b8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55be1741e5b8
| `-ParmVarDecl 0x55be1741e6c8 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55be17420280 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17416618 prev 0x55be17359050 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be17416710 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55be174167a0 <col:21, col:27> col:21 public
|-TypedefDecl 0x55be174167e0 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55be16ce4fd0 'const char *'
|   `-QualType 0x55be16ce4521 'const char' const
|     `-BuiltinType 0x55be16ce4520 'char'
|-TypedefDecl 0x55be17416850 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55be16ce51a0 'char *'
|   `-BuiltinType 0x55be16ce4520 'char'
|-TypedefDecl 0x55be17416990 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55be17416900 'int (StringAccum::*)() const'
|   |-RecordType 0x55be16fa63a0 'StringAccum'
|   | `-CXXRecord 0x55be17416618 'StringAccum'
|   `-ParenType 0x55be1701d1c0 'int () const' sugar
|     `-FunctionProtoType 0x55be16fff8f0 'int () const' const cdecl
|       `-BuiltinType 0x55be16ce4580 'int'
|-CXXConstructorDecl 0x55be17416a50 <line:35:5, col:24> col:12 StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55be17416ba0 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55be17416b10 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55be17416cf0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55be17416c60 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55be17416e98 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55be17416dd8 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55be17417048 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55be17416f88 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55be17417140 <line:42:5, col:25> col:12 ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55be174172f8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55be17417230 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55be17417478 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55be174173b0 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55be17417570 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55be17417638 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55be17417700 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55be174177c8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55be17417890 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55be174179f8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55be17417ac8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55be17417b88 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55be17417c98 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55be17417da8 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55be17417e68 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55be17417f28 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55be17418070 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55be17417fe0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55be17418200 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55be17418130 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55be174182c8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55be174183c0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55be17418480 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55be17418548 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55be17418608 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55be174186c8 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55be17418788 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be174188d8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55be17418840 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55be17418a28 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55be17418998 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55be17418b80 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55be17418ae8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55be17418cd0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55be17418c40 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55be17418ef0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55be17418d90 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55be17418e10 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55be1741be68 <col:53> 'int' 0
|-CXXMethodDecl 0x55be17419048 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55be17418fb8 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55be1741be88 <col:34> 'int' 1
|-CXXMethodDecl 0x55be17419190 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55be17419100 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55be174192e0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55be17419250 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55be17419430 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55be174193a0 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55be17419580 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55be174194f0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55be17419758 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55be17419640 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55be174196c0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55be17419938 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55be17419820 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55be174198a0 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55be17419b18 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55be17419a00 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55be17419a80 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55be17419cf8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55be17419be0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55be17419c60 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55be17419ed8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55be17419dc0 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55be17419e40 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55be1741a238 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55be1741a020 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55be1741a0a0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55be1741bea8 <col:56> 'int' 10
| `-ParmVarDecl 0x55be1741a118 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be1741bec8 <col:77> 'bool' true
|-CXXMethodDecl 0x55be1741a598 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55be1741a380 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55be1741a400 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55be1741bed8 <col:57> 'int' 10
| `-ParmVarDecl 0x55be1741a478 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be1741bef8 <col:78> 'bool' true
|-CXXMethodDecl 0x55be1741a7c0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55be1741a668 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55be1741a6e8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55be1741a8b8 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x55be1741aa28 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55be1741a968 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55be1741ab78 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55be1741aae8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55be1741ac20 <col:51> "" ""
|-AccessSpecDecl 0x55be1741ac90 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55be1741acb8 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55be1741ae08 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55be1741ae58 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1741ade8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55be1741adb8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55be17026f28 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55be1741ae70 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55be1741af88 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55be1741b030 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55be1741b098 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55be1741b100 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55be1741b1b0 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55be1741b030 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55be1741c030 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55be1741bfe8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55be1741bfb0 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55be1741bf98 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55be1741bf40 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55be17045a70 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55be1741b098 'len' 'int'
| | | `-IntegerLiteral 0x55be1741c0a8 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55be1741b100 'cap' 'int'
| | | `-IntegerLiteral 0x55be1741c110 <col:20> 'int' 0
| | `-CompoundStmt 0x55be1741c190 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55be1741b328 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55be1741b268 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55be1741c1a0 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55be1741e408 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be1741e518 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55be1741b030 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55be1741fe50 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55be1741fe20 <col:12> 'unsigned char *const' lvalue .s 0x55be1741b030
| | |     `-DeclRefExpr 0x55be1741fe00 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55be1741e518 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55be1741b098 'len' 'int'
| | | `-ImplicitCastExpr 0x55be1741fee0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55be1741feb0 <col:12> 'const int' lvalue .len 0x55be1741b098
| | |     `-DeclRefExpr 0x55be1741fe90 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55be1741e518 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55be1741b100 'cap' 'int'
| | | `-ImplicitCastExpr 0x55be1741ff70 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55be1741ff40 <col:12> 'const int' lvalue .cap 0x55be1741b100
| | |     `-DeclRefExpr 0x55be1741ff20 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55be1741e518 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55be1741ffc8 <col:12>
| |-CXXConstructorDecl 0x55be1741e5b8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55be1741e5b8
| | `-ParmVarDecl 0x55be1741e6c8 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55be17420280 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55be1741b400 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55be1741b500 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55be1741b468 <col:16> col:19 'int'
|-CXXMethodDecl 0x55be1741b6e0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55be1741b5c0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55be1741b640 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55be1741b8c0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55be1741b7a8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55be1741b828 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55be1741ba18 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55be1741b988 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55be1741bb68 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55be1741bad8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55be1741be28 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55be1741bd68 parent 0x55be16ce4488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55be1741bc20 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55be1741bc98 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddrRewriter
         0 |   class IPRewriterBase (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |       class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |         class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |         class IPRewriterEntry ** buckets
       120 |         uint32_t nbuckets
       124 |         uint32_t first_bucket
       128 |         size_t size
       136 |         struct libdivide_u32_t bucket_divider
       136 |           uint32_t magic
       140 |           uint8_t more
       144 |     class Vector<class IPRewriterInput> _input_specs
       144 |       class vector_memory<class sized_array_memory<56> > vm_
       144 |         vector_memory<class sized_array_memory<56> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class IPRewriterHeap * _heap
       168 |     uint32_t [2] _timeouts
       176 |     uint32_t _gc_interval_sec
       184 |     class Timer _gc_timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |   class SizedHashAllocator<72> _allocator
       232 |     class HashAllocator (base)
       232 |       struct HashAllocator::link * _free
       240 |       struct HashAllocator::buffer * _buffer
       248 |       size_t _size
       256 |   unsigned int _annos
           | [sizeof=264, dsize=260, align=8,
           |  nvsize=260, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172c1068 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be172c1188 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x55be172c1258 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172c12c0 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be172c13d8 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x55be172c14a8 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x55be172c1508 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x55be172c1568 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be172c0680 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be172c0798 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x55be172c0828 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55be172c0968 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x55be172c0860 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55be172c0a60 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x55be172c0be0 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x55be172c0b50 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x55be172c37f0 <col:48, line:17:5>
|   |-ParenExpr 0x55be172c3738 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x55be172c3708 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x55be172c1fa0 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55be172c1f70 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55be172c1ea0 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x55be172c1e00 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x55be172c1de8 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x55be172c1dd0 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x55be172c1da0 <col:24> 'HashAllocator::link *' lvalue ->_free 0x55be172c1898
|   |   |   | |       `-CXXThisExpr 0x55be172c1d90 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x55be172c1e88 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x55be172c1e70 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x55be172c1e58 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x55be172c1e28 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x55be172c18f8
|   |   |   |         `-CXXThisExpr 0x55be172c1e18 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x55be172c1f50 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x55be172c1f20 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55be172c1ec0 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x55be172c0b50 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x55be172c1f38 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x55be172c1ef0 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x55be172c1958
|   |   |         `-CXXThisExpr 0x55be172c1ee0 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55be172c3430 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55be172c3410 <col:72> 'int' 0
|   |   `-CallExpr 0x55be172c3668 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x55be172c3650 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55be172c3630 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55be172c36a8 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172c34a0 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x55be172c36c0 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55be172c34e0 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x55be172c36d8 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55be172c3520 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x55be172c36f0 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55be172c3618 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55be172c3600 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55be172c35b8 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x55be172c37d0 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x55be172c3768 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x55be172c1958
|     | `-CXXThisExpr 0x55be172c3758 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x55be172c37b8 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55be172c3798 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x55be172c0b50 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x55be172c0cb0 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x55be172c0df8 <line:20:5, col:35> col:17 used deallocate 'void (void *)' inline
| `-ParmVarDecl 0x55be172c0d68 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x55be172c0f98 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x55be172c0ed8 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x55be172c1040 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x55be172c1068 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55be172c1188 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x55be172c1258 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x55be172c12c0 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55be172c13d8 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x55be172c14a8 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x55be172c1508 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x55be172c1568 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x55be172c15d0 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x55be172c16d0 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55be172c1840 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172c16b0 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x55be172c1690 <col:20> 'int' 1024
| |-EnumConstantDecl 0x55be172c1760 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55be172c1858 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be172c1740 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x55be172c1720 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x55be172c17f0 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x55be172c1870 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be172c17d0 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x55be172c17b0 <col:18> 'int' 8
|-FieldDecl 0x55be172c1898 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x55be172c18f8 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x55be172c1958 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55be172c19d0 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x55be172c1b68 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x55be172c1aa8 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x55be172c1ce8 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x55be172c1c28 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be17356e18 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x55be17357058 prev 0x55be17356e18 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55be173570e8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55be17357148 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55be17357228 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x55be17357228
| `-ParmVarDecl 0x55be17357338 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x55be173573d8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55be173573d8
| `-ParmVarDecl 0x55be173574e8 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x55be17357588 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55be17357588
| `-ParmVarDecl 0x55be17357698 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x55be17357720 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x55be17478968 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17354d80 <../elements/ip/ipaddrrewriter.hh:116:1, line:158:1> line:116:7 class IPAddrRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRewriterBase'
|-CXXRecordDecl 0x55be17354ed8 <col:1, col:7> col:7 implicit referenced class IPAddrRewriter
|-AccessSpecDecl 0x55be17354f68 <col:48, col:54> col:48 public
|-CXXRecordDecl 0x55be17354f90 <line:118:5, line:131:5> line:118:11 referenced class IPAddrFlow definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-public 'IPRewriterFlow'
| |-CXXRecordDecl 0x55be173550e8 <col:5, col:11> col:11 implicit referenced class IPAddrFlow
| |-AccessSpecDecl 0x55be17355178 <col:48, col:54> col:48 public
| |-CXXConstructorDecl 0x55be17355528 <line:120:2, line:125:2> line:120:2 IPAddrFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| | |-ParmVarDecl 0x55be173551b0 <col:13, col:30> col:30 used owner 'IPRewriterInput *'
| | |-ParmVarDecl 0x55be17355228 <col:37, col:53> col:53 used flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55be173552a0 <line:121:6, col:22> col:22 used rewritten_flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55be17355318 <line:122:6, col:11> col:11 used guaranteed 'bool'
| | |-ParmVarDecl 0x55be17355390 <col:23, col:39> col:39 used expiry_j 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer 'IPRewriterFlow'
| | | `-CXXConstructExpr 0x55be173586c8 <line:123:8, line:124:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| | |   |-ImplicitCastExpr 0x55be17358668 <line:123:23> 'IPRewriterInput *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55be17357de8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55be173551b0 'owner' 'IPRewriterInput *'
| | |   |-DeclRefExpr 0x55be17357e08 <col:30> 'const IPFlowID' lvalue ParmVar 0x55be17355228 'flowid' 'const IPFlowID &'
| | |   |-DeclRefExpr 0x55be17357e28 <col:38> 'const IPFlowID' lvalue ParmVar 0x55be173552a0 'rewritten_flowid' 'const IPFlowID &'
| | |   |-ImplicitCastExpr 0x55be17358680 <line:124:9> 'uint8_t':'unsigned char' <IntegralCast>
| | |   | `-IntegerLiteral 0x55be17357e48 <col:9> 'int' 0
| | |   |-ImplicitCastExpr 0x55be17358698 <col:12> 'bool' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55be17357e68 <col:12> 'bool' lvalue ParmVar 0x55be17355318 'guaranteed' 'bool'
| | |   `-ImplicitCastExpr 0x55be173586b0 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x55be17357e88 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55be17355390 'expiry_j' 'click_jiffies_t':'unsigned int'
| | `-CompoundStmt 0x55be17358750 <col:34, line:125:2>
| |-CXXMethodDecl 0x55be173557a0 <line:127:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| | |-ParmVarDecl 0x55be17355608 <col:13, col:29> col:29 p 'WritablePacket *'
| | |-ParmVarDecl 0x55be17355680 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55be17355700 <col:48, col:57> col:57 annos 'unsigned int'
| |-CXXMethodDecl 0x55be17355a20 <line:129:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| | |-ParmVarDecl 0x55be17355868 <col:15, col:28> col:28 sa 'StringAccum &'
| | |-ParmVarDecl 0x55be173558e0 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55be17355958 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
| `-CXXDestructorDecl 0x55be17358b60 <line:118:11> col:11 implicit referenced ~IPAddrFlow 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55be17355b50 <line:133:5, col:20> col:5 IPAddrRewriter 'void ()'
|-CXXDestructorDecl 0x55be17355c40 <line:134:5, col:21> col:5 ~IPAddrRewriter 'void ()' noexcept-unevaluated 0x55be17355c40
| `-Overrides: [ 0x55be1732fe28 IPRewriterBase::~IPRewriterBase 'void () noexcept' ]
|-CXXMethodDecl 0x55be17355d70 <line:136:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55be17256168 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55be173587b0 <col:36, col:63>
|   `-ReturnStmt 0x55be173587a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55be17358788 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55be17358760 <col:45> 'const char [15]' lvalue "IPAddrRewriter"
|-CXXMethodDecl 0x55be17355ec0 <line:137:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55be17256e60 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55be17355e28 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55be173561a0 <line:139:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55be173307d0 IPRewriterBase::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55be17356050 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55be173560c8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17356400 <line:142:5, col:82> col:29 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' inline
| |-Overrides: [ 0x55be17331618 IPRewriterBase::get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55be17356268 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55be173562e0 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55be17356360 <col:73, col:77> col:77 input 'int'
|-CXXMethodDecl 0x55be173566e8 <line:143:5, line:144:53> line:143:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55be17331948 IPRewriterBase::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55be173564d0 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55be17356548 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55be173565c0 <line:144:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55be17356640 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55be17356848 <line:145:5, col:43> col:10 destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55be17331aa8 IPRewriterBase::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55be173567b8 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55be17356a80 <line:147:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55be17254fd8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55be17356908 <col:15> col:18 'int'
| `-ParmVarDecl 0x55be17356980 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55be17356b50 <line:149:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55be17257b00 Element::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55be17356bf0 <line:151:3, col:12> col:3 protected
|-FieldDecl 0x55be17357800 <line:153:5, col:44> col:44 referenced _allocator 'SizedHashAllocator<sizeof(IPAddrRewriter::IPAddrFlow)>':'SizedHashAllocator<72>'
|-FieldDecl 0x55be17357868 <line:154:5, col:14> col:14 _annos 'unsigned int'
|-CXXMethodDecl 0x55be173579e0 <line:156:5, col:58> col:19 dump_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55be173578c8 <col:41, col:49> col:50 'Element *'
| `-ParmVarDecl 0x55be17357948 <col:52, col:57> col:58 'void *'
|-CXXConstructorDecl 0x55be17357ab8 <line:116:7> col:7 implicit IPAddrRewriter 'void (const IPAddrRewriter &)' inline default_delete noexcept-unevaluated 0x55be17357ab8
| `-ParmVarDecl 0x55be17357bc8 <col:7> col:7 'const IPAddrRewriter &'
`-CXXMethodDecl 0x55be17357c68 <col:7> col:7 implicit operator= 'IPAddrRewriter &(const IPAddrRewriter &)' inline default_delete noexcept-unevaluated 0x55be17357c68
  `-ParmVarDecl 0x55be17357d78 <col:7> col:7 'const IPAddrRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddrRewriter = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.IPAddrRewriter.base = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17026960 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55be17026a78 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55be17026b18 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55be17026b78 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55be17026bd8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55be17026c88 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17026f90 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be170270a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55be17027150 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55be170271b8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55be17027248 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55be1702b8e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55be1702bd18 <col:12>
|-CXXConstructorDecl 0x55be1702b9e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be1702baf8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55be17027150 'data' 'const char *'
| | `-ImplicitCastExpr 0x55be1702f160 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55be1702f130 <col:12> 'const char *const' lvalue .data 0x55be17027150
| |     `-DeclRefExpr 0x55be1702f110 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1702baf8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55be170271b8 'length' 'int'
| | `-ImplicitCastExpr 0x55be1702f1f0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55be1702f1c0 <col:12> 'const int' lvalue .length 0x55be170271b8
| |     `-DeclRefExpr 0x55be1702f1a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1702baf8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55be17027248 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55be1702f280 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55be1702f250 <col:12> 'String::memo_t *const' lvalue .memo 0x55be17027248
| |     `-DeclRefExpr 0x55be1702f230 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1702baf8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55be1702f2d8 <col:12>
|-CXXConstructorDecl 0x55be1702bb98 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55be1702bb98
| `-ParmVarDecl 0x55be1702bca8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55be17032000 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55be1703b688 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55be1703b798 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55be1703bcb0 <col:12>
|   |-BinaryOperator 0x55be1703bac8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55be1703ba80 <col:12> 'const char *' lvalue ->data 0x55be17027150
|   | | `-CXXThisExpr 0x55be1703ba70 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55be1703bab0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55be1703ba40 <col:12> 'const char *const' lvalue .data 0x55be17027150
|   |     `-DeclRefExpr 0x55be1703ba20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1703b798 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55be1703bb90 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55be1703bb48 <col:12> 'int' lvalue ->length 0x55be170271b8
|   | | `-CXXThisExpr 0x55be1703bb38 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55be1703bb78 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55be1703bb08 <col:12> 'const int' lvalue .length 0x55be170271b8
|   |     `-DeclRefExpr 0x55be1703bae8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1703b798 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55be1703bc58 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55be1703bc10 <col:12> 'String::memo_t *' lvalue ->memo 0x55be17027248
|   | | `-CXXThisExpr 0x55be1703bc00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55be1703bc40 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55be1703bbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x55be17027248
|   |     `-DeclRefExpr 0x55be1703bbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1703b798 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55be1703bca0 <col:12>
|     `-UnaryOperator 0x55be1703bc88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be1703bc78 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55be1703b808 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55be1703b808
  `-ParmVarDecl 0x55be1703b918 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1701ced0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be1701cfe8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55be1701d078 <col:16, col:22> col:16 public
|-TypedefDecl 0x55be1701d0b8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55be16ce4fd0 'const char *'
|   `-QualType 0x55be16ce4521 'const char' const
|     `-BuiltinType 0x55be16ce4520 'char'
|-TypedefDecl 0x55be1701d140 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55be1701d110 'String::const_iterator' sugar
|   |-Typedef 0x55be1701d0b8 'const_iterator'
|   `-PointerType 0x55be16ce4fd0 'const char *'
|     `-QualType 0x55be16ce4521 'const char' const
|       `-BuiltinType 0x55be16ce4520 'char'
|-TypedefDecl 0x55be1701d2b0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55be1701d220 'int (String::*)() const'
|   |-RecordType 0x55be1701cf60 'String'
|   | `-CXXRecord 0x55be1701ced0 'String'
|   `-ParenType 0x55be1701d1c0 'int () const' sugar
|     `-FunctionProtoType 0x55be16fff8f0 'int () const' const cdecl
|       `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be1701d318 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55be16e3de10 'int64_t' sugar
|   |-Typedef 0x55be16d4d390 'int64_t'
|   `-TypedefType 0x55be16d26630 '__int64_t' sugar
|     |-Typedef 0x55be16d26208 '__int64_t'
|     `-BuiltinType 0x55be16ce45a0 'long'
|-TypedefDecl 0x55be1701d380 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55be16e3dd30 'uint64_t' sugar
|   |-Typedef 0x55be16d4d530 'uint64_t'
|   `-TypedefType 0x55be16d266c0 '__uint64_t' sugar
|     |-Typedef 0x55be16d26278 '__uint64_t'
|     `-BuiltinType 0x55be16ce4640 'unsigned long'
|-TypedefDecl 0x55be1701d410 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55be1701d3e0 'String::intmax_t' sugar
|   |-Typedef 0x55be1701d318 'intmax_t'
|   `-TypedefType 0x55be16e3de10 'int64_t' sugar
|     |-Typedef 0x55be16d4d390 'int64_t'
|     `-TypedefType 0x55be16d26630 '__int64_t' sugar
|       |-Typedef 0x55be16d26208 '__int64_t'
|       `-BuiltinType 0x55be16ce45a0 'long'
|-TypedefDecl 0x55be1701d4a0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55be1701d470 'String::uintmax_t' sugar
|   |-Typedef 0x55be1701d380 'uintmax_t'
|   `-TypedefType 0x55be16e3dd30 'uint64_t' sugar
|     |-Typedef 0x55be16d4d530 'uint64_t'
|     `-TypedefType 0x55be16d266c0 '__uint64_t' sugar
|       |-Typedef 0x55be16d26278 '__uint64_t'
|       `-BuiltinType 0x55be16ce4640 'unsigned long'
|-CXXConstructorDecl 0x55be1701d560 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55be1701d708 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55be1701d648 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55be1701d8b8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55be1701d7f8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55be1701da10 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55be1701d980 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55be1701dc28 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55be1701dad8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55be1701db58 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55be1701de48 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55be1701dcf8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55be1701dd78 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55be1701e068 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55be1701df18 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55be1701df98 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55be1701e288 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55be1701e138 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55be1701e1b8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55be1701e418 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55be1701e350 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55be1701e598 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55be1701e4d8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55be1701e728 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55be1701e660 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55be1701e880 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55be1701e7f0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55be1701ea08 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55be1701e948 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55be1701eb60 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55be1701ead0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55be1701ece8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55be1701ec28 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55be1701ee78 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55be1701edb0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55be1701f008 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55be1701ef40 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55be1701f198 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55be1701f0d0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55be1701f290 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55be1701f3b8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55be1701f538 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55be1701f470 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55be1701f688 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55be1701f5f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55be1701f730 <col:63> "" ""
|-CXXMethodDecl 0x55be1701f878 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55be1701f7b8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55be1701fa88 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55be1701f938 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55be1701f9b8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55be1701fca8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55be1701fb50 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55be1701fbd0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55be1701ff88 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55be1701fd68 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55be1701fde8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55be1702b3b0 <col:55> 'int' 10
| `-ParmVarDecl 0x55be1701fe60 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be1702b3d0 <col:76> 'bool' true
|-CXXMethodDecl 0x55be17020268 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55be17020050 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55be170200d0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55be1702b3e0 <col:56> 'int' 10
| `-ParmVarDecl 0x55be17020148 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be1702b400 <col:77> 'bool' true
|-CXXMethodDecl 0x55be17020370 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55be17020438 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55be17020500 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55be170205a0 <col:20>
| `-OptimizeNoneAttr 0x55be170205f8 <col:30>
|-CXXConversionDecl 0x55be170206e8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55be170207b8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55be17020878 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55be17020968 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55be17020a28 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55be17020ba8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55be17020ae0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55be17020cf8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55be17020c68 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55be17020de8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55be17020ea8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55be170210f8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55be17020f60 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55be17020fe0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55be17021358 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55be170211c0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55be17021240 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55be17021428 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55be17021638 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55be170214e0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55be17021560 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55be17021858 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55be17021700 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55be17021780 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55be170219e8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55be17021920 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55be17021ad8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55be17021c48 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55be17021b88 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55be17021e58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55be17021d08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55be17021d88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55be17022070 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55be17021f18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55be17021f90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55be17022200 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55be17022130 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55be17022420 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55be170222c0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55be17022340 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55be17022570 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55be170224e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55be17022748 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55be17022630 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55be170226b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55be17022898 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55be17022808 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55be17023ae0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55be17022950 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55be17023a00 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55be1702b410 <col:39> 'int' 0
|-CXXMethodDecl 0x55be17023d00 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55be17023ba0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55be17023c20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55be1702b430 <col:48> 'int' 0
|-CXXMethodDecl 0x55be17023ee0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55be17023dc0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55be17023e40 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55be1702b450 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55be17023fb0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55be17024070 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55be17024130 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55be170241f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55be170242b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55be17024458 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55be17024360 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55be170245d8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55be17024510 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55be17024758 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55be17024698 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55be170248d8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55be17024810 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55be17024a20 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55be17024990 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55be17024b70 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55be17024ae0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55be17024d48 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55be17024c30 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55be17024cb0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55be17024f28 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55be17024e10 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55be17024e90 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55be17025078 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55be17024fe8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55be17025288 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55be17025138 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55be170251b8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55be170253e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55be17025350 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55be17025540 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55be170254a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55be170255e8 <col:57> "" ""
|-CXXMethodDecl 0x55be170256f8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55be17025668 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55be17025848 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55be170257b8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55be170259c8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55be17025900 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55be17025a90 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55be17025b50 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55be17025c10 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55be17025cb0 <col:49> "" ""
|-CXXMethodDecl 0x55be17025d40 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55be17025e00 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55be17025ef0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55be17025fb8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55be17026078 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55be17026138 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55be17026230 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55be170262f8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55be170263c0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55be17026598 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55be17026478 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55be170264f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55be170267c0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55be17026660 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55be170266e0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55be170268d0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55be17026938 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55be17026960 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55be17026a78 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55be17026b18 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55be17026b78 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55be17026bd8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55be17026c88 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55be17026cf0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55be17026f28 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55be17026f78 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17026f08 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55be17026e18 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55be17026dc0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55be17026e00 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55be17026de0 <col:32> 'int' 8
|-CXXRecordDecl 0x55be17026f90 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55be170270a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55be17027150 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55be170271b8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55be17027248 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55be1702b8e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55be1702bd18 <col:12>
| |-CXXConstructorDecl 0x55be1702b9e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be1702baf8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55be17027150 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55be1702f160 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55be1702f130 <col:12> 'const char *const' lvalue .data 0x55be17027150
| | |     `-DeclRefExpr 0x55be1702f110 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1702baf8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55be170271b8 'length' 'int'
| | | `-ImplicitCastExpr 0x55be1702f1f0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55be1702f1c0 <col:12> 'const int' lvalue .length 0x55be170271b8
| | |     `-DeclRefExpr 0x55be1702f1a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1702baf8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55be17027248 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55be1702f280 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55be1702f250 <col:12> 'String::memo_t *const' lvalue .memo 0x55be17027248
| | |     `-DeclRefExpr 0x55be1702f230 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1702baf8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55be1702f2d8 <col:12>
| |-CXXConstructorDecl 0x55be1702bb98 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55be1702bb98
| | `-ParmVarDecl 0x55be1702bca8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55be17032000 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55be1703b688 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55be1703b798 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55be1703bcb0 <col:12>
| |   |-BinaryOperator 0x55be1703bac8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55be1703ba80 <col:12> 'const char *' lvalue ->data 0x55be17027150
| |   | | `-CXXThisExpr 0x55be1703ba70 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55be1703bab0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55be1703ba40 <col:12> 'const char *const' lvalue .data 0x55be17027150
| |   |     `-DeclRefExpr 0x55be1703ba20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1703b798 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55be1703bb90 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55be1703bb48 <col:12> 'int' lvalue ->length 0x55be170271b8
| |   | | `-CXXThisExpr 0x55be1703bb38 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55be1703bb78 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55be1703bb08 <col:12> 'const int' lvalue .length 0x55be170271b8
| |   |     `-DeclRefExpr 0x55be1703bae8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1703b798 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55be1703bc58 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55be1703bc10 <col:12> 'String::memo_t *' lvalue ->memo 0x55be17027248
| |   | | `-CXXThisExpr 0x55be1703bc00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55be1703bc40 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55be1703bbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x55be17027248
| |   |     `-DeclRefExpr 0x55be1703bbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55be1703b798 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55be1703bca0 <col:12>
| |     `-UnaryOperator 0x55be1703bc88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55be1703bc78 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55be1703b808 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55be1703b808
|   `-ParmVarDecl 0x55be1703b918 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55be170272c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55be17027508 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55be17027328 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55be170273a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55be17027420 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55be1702b8a0 <col:79, line:261:5>
|   |-BinaryOperator 0x55be1702b518 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55be1702b4b0 <col:2, col:5> 'const char *' lvalue .data 0x55be17027150
|   | | `-MemberExpr 0x55be1702b480 <col:2> 'String::rep_t' lvalue ->_r 0x55be170272c0
|   | |   `-CXXThisExpr 0x55be1702b470 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55be1702b500 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be1702b4e0 <col:12> 'const char *' lvalue ParmVar 0x55be17027328 'data' 'const char *'
|   |-BinaryOperator 0x55be1702b5e0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55be1702b578 <col:2, col:5> 'int' lvalue .length 0x55be170271b8
|   | | `-MemberExpr 0x55be1702b548 <col:2> 'String::rep_t' lvalue ->_r 0x55be170272c0
|   | |   `-CXXThisExpr 0x55be1702b538 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55be1702b5c8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55be1702b5a8 <col:14> 'int' lvalue ParmVar 0x55be170273a8 'length' 'int'
|   `-IfStmt 0x55be1702b888 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55be1702b700 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55be1702b6e8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55be1702b6c8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55be1702b6a8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55be1702b640 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55be17027248
|     |       | `-MemberExpr 0x55be1702b610 <col:7> 'String::rep_t' lvalue ->_r 0x55be170272c0
|     |       |   `-CXXThisExpr 0x55be1702b600 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55be1702b690 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55be1702b670 <col:17> 'String::memo_t *' lvalue ParmVar 0x55be17027420 'memo' 'String::memo_t *'
|     `-CallExpr 0x55be1702b860 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55be1702b848 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55be1702b750 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55be16fab1f8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55be1702b7b8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55be17026b18
|         `-ImplicitCastExpr 0x55be1702b7a0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55be1702b780 <col:27> 'String::memo_t *' lvalue ParmVar 0x55be17027420 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55be170277b8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55be170275d8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55be17027658 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55be170276d0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55be170272c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55be1702bd28 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55be1702beb8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55be1702be20 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55be1702bd90 <col:2> '<bound member function type>' ->assign_memo 0x55be17027508
|     | `-ImplicitCastExpr 0x55be1702be58 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55be1702bd80 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55be1702be70 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55be1702bdc0 <col:14> 'const char *' lvalue ParmVar 0x55be170275d8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55be1702be88 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55be1702bde0 <col:20> 'int' lvalue ParmVar 0x55be17027658 'length' 'int'
|     `-ImplicitCastExpr 0x55be1702bea0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55be1702be00 <col:28> 'String::memo_t *' lvalue ParmVar 0x55be170276d0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55be17027948 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55be17027888 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55be1702c110 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55be1702c090 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55be1702bee0 <col:2> '<bound member function type>' ->assign_memo 0x55be17027508
|     | `-CXXThisExpr 0x55be1702bed0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55be1702c0c8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55be1702bf60 <col:14, col:19> 'const char *' lvalue .data 0x55be17027150
|     |   `-MemberExpr 0x55be1702bf30 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55be170272c0
|     |     `-DeclRefExpr 0x55be1702bf10 <col:14> 'const String' lvalue ParmVar 0x55be17027888 'x' 'const String &'
|     |-ImplicitCastExpr 0x55be1702c0e0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55be1702bfe0 <col:25, col:30> 'int' lvalue .length 0x55be170271b8
|     |   `-MemberExpr 0x55be1702bfb0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55be170272c0
|     |     `-DeclRefExpr 0x55be1702bf90 <col:25> 'const String' lvalue ParmVar 0x55be17027888 'x' 'const String &'
|     `-ImplicitCastExpr 0x55be1702c0f8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55be1702c060 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55be17027248
|         `-MemberExpr 0x55be1702c030 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55be170272c0
|           `-DeclRefExpr 0x55be1702c010 <col:38> 'const String' lvalue ParmVar 0x55be17027888 'x' 'const String &'
|-CXXMethodDecl 0x55be17029b10 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55be1702cad0 <col:31, line:278:5>
|   `-IfStmt 0x55be1702cab8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55be1702c1b0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55be1702c198 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55be1702c168 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55be17027248
|     |     `-MemberExpr 0x55be1702c138 <col:6> 'String::rep_t' lvalue ->_r 0x55be170272c0
|     |       `-CXXThisExpr 0x55be1702c128 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55be1702ca90 <col:15, line:277:2>
|       |-ParenExpr 0x55be1702c660 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55be1702c630 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55be1702c2c0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55be1702c2a8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55be1702c290 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55be1702c250 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55be17026b18
|       |   |       `-ImplicitCastExpr 0x55be1702c238 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55be1702c208 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55be17027248
|       |   |           `-MemberExpr 0x55be1702c1d8 <col:27> 'String::rep_t' lvalue ->_r 0x55be170272c0
|       |   |             `-CXXThisExpr 0x55be1702c1c8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55be1702c320 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55be1702c300 <col:54> 'int' 0
|       |   `-CallExpr 0x55be1702c590 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55be1702c578 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55be1702c4f8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55be16d84620 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55be1702c5d0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55be1702c408 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55be1702c5e8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55be1702c438 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55be1702c600 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55be1702c470 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55be1702c618 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55be1702c4e0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55be1702c4c8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55be1702c490 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55be1702c9b0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55be1702c870 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55be1702c858 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55be1702c7d0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55be16fad9e0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55be1702c7a0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55be17026b18
|       | |   `-ImplicitCastExpr 0x55be1702c788 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55be1702c758 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55be17027248
|       | |       `-MemberExpr 0x55be1702c728 <col:40> 'String::rep_t' lvalue ->_r 0x55be170272c0
|       | |         `-CXXThisExpr 0x55be1702c718 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55be1702c970 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55be1702c958 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55be1702c898 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55be1702a7e8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55be1702c998 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55be1702c8f8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55be17027248
|       |       `-MemberExpr 0x55be1702c8c8 <col:15> 'String::rep_t' lvalue ->_r 0x55be170272c0
|       |         `-CXXThisExpr 0x55be1702c8b8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55be1702ca70 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55be1702ca08 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55be17027248
|         | `-MemberExpr 0x55be1702c9d8 <col:6> 'String::rep_t' lvalue ->_r 0x55be170272c0
|         |   `-CXXThisExpr 0x55be1702c9c8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55be1702ca58 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55be1702ca38 <col:16> 'int' 0
|-CXXMethodDecl 0x55be17029da8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55be17029bc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55be17029c48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55be17029cc0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55be17029e80 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55be1702a0d0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55be17029f38 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55be17029fb8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55be1702a030 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55be1702a2b8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55be1702a1a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55be1702a220 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55be1702a3b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55be1702cba8 <col:41, line:286:5>
|   `-ReturnStmt 0x55be1702cb98 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55be1702cb68 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55be1702cb30 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55be1702cb18 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55be1702caf8 <col:46> 'int' 1
|-CXXMethodDecl 0x55be1702a658 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55be1702a470 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55be1702a4f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55be1702a570 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55be1702a7e8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55be1702a720 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55be1702a8b8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55be1702aa88 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55be1702a970 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55be1702a9f0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55be1702ab48 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55be1702ac10 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55be1702ad18 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55be1702ad90 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55be1702ae08 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55be1702ae70 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55be1702af70 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55be1702afc0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be1702af50 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55be1702af30 <col:22> 'int' 14
|-CXXMethodDecl 0x55be1702b1d8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55be1702aff0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55be1702b070 <col:38> col:41 'int'
| `-ParmVarDecl 0x55be1702b0f0 <col:43> col:46 'int'
|-FriendDecl 0x55be1702b2e0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55be1702b370 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be17382bd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55be17382da8 prev 0x55be17382bd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55be17382e38 <col:46, col:52> col:46 public
|-TypedefDecl 0x55be17382e60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173847c0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55be17384770 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55be17384750 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55be17383078 'type'
|     `-SubstTemplateTypeParmType 0x55be17383040 'String' sugar
|       |-TemplateTypeParmType 0x55be16fed6d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16fed680 'T'
|       `-RecordType 0x55be1701cf60 'String'
|         `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17384878 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55be17384840 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55be17384820 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55be173847c0 'type'
|     `-ElaboratedType 0x55be17384770 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55be17384750 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55be17383078 'type'
|         `-SubstTemplateTypeParmType 0x55be17383040 'String' sugar
|           |-TemplateTypeParmType 0x55be16fed6d0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55be16fed680 'T'
|           `-RecordType 0x55be1701cf60 'String'
|             `-CXXRecord 0x55be1701ced0 'String'
|-CXXMethodDecl 0x55be173849f8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55be17384908 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55be17384ae8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55be17384bc8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55be17384bc8
|-CXXMethodDecl 0x55be17384e98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55be17384da0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55be173850d8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55be17384f50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be17384fc8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be173852a8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55be17385198 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be17385210 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be17385408 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55be173854d8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55be17385728 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55be17385598 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55be17385610 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be17388218 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55be173857f8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55be17388100 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be173883d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55be173882e8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be17388598 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55be173884a0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be17388650 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be17388700 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be17388938 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55be173887b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be17388828 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55be17388bd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55be17388ae0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55be17388ca0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55be17388cf0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55be17388d40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be172576a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55be17381878 prev 0x55be172576a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55be17382b40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55be17382af0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55be17382ad0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55be17382980 'type'
|     `-SubstTemplateTypeParmType 0x55be17382810 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55be16fc62f0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55be16fc6298 'F'
|       `-RecordType 0x55be17382470 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55be17382390 'typed_array_memory'
|-FieldDecl 0x55be17388d90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55be17388de0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55be17388e18 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|   |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55be16ffca98 'T'
|   `-RecordType 0x55be1701cf60 'String'
|     `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17388ea8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55be17388e70 'String &'
|   `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-RecordType 0x55be1701cf60 'String'
|       `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17388f38 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55be17388f00 'const String &'
|   `-QualType 0x55be17381911 'const String' const
|     `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be1701cf60 'String'
|         `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17388fc8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55be17388f90 'String *'
|   `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-RecordType 0x55be1701cf60 'String'
|       `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17389058 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55be17389020 'const String *'
|   `-QualType 0x55be17381911 'const String' const
|     `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be1701cf60 'String'
|         `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17389cb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55be17389c60 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55be17389c40 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55be17389b78 'type'
|     `-LValueReferenceType 0x55be17389b40 'const String &'
|       `-QualType 0x55be173898e1 'const String' const
|         `-SubstTemplateTypeParmType 0x55be173898e0 'String' sugar
|           |-TemplateTypeParmType 0x55be16fce400 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55be16fce3a8 'T'
|           `-RecordType 0x55be1701cf60 'String'
|             `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17389d18 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55be17388f00 'const String &'
|   `-QualType 0x55be17381911 'const String' const
|     `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be1701cf60 'String'
|         `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17389d70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be17389dd8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55be17388f90 'String *'
|   `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-RecordType 0x55be1701cf60 'String'
|       `-CXXRecord 0x55be1701ced0 'String'
|-TypedefDecl 0x55be17389e40 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55be17389020 'const String *'
|   `-QualType 0x55be17381911 'const String' const
|     `-SubstTemplateTypeParmType 0x55be17381910 'String' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-RecordType 0x55be1701cf60 'String'
|         `-CXXRecord 0x55be1701ced0 'String'
|-EnumDecl 0x55be17389e98 <line:134:5> col:5
| `-EnumConstantDecl 0x55be17389f90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55be17389f70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55be16ffdcb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55be16ffdc90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55be16ffdc70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55be1738a018 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55be1738a2a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55be1738a0d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be1738a170 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55be1738a538 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55be1738a420 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55be1738a7f8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55be1738a6e0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55be1738ab10 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55be1738a9f0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55be1738ae20 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55be1738ad00 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55be1738b110 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55be1738af58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be1738afd0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55be1738b238 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55be1738b2e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be1738b340 <col:30> Inherited
|-CXXMethodDecl 0x55be1738b388 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55be1738b438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be1738b490 <col:30> Inherited
|-CXXMethodDecl 0x55be1738b558 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55be1738b608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be1738b660 <col:30> Inherited
|-CXXMethodDecl 0x55be1738b6a8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55be1738b758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be1738b7b0 <col:30> Inherited
|-CXXMethodDecl 0x55be1738b7f8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55be1738b8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be1738b900 <col:30> Inherited
|-CXXMethodDecl 0x55be1738b948 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55be1738b9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be1738ba50 <col:30> Inherited
|-CXXMethodDecl 0x55be1738ba78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be1738bb28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be1738bbd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55be1738bd98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55be1738bc88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be1738bd00 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55be1738bee8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55be1738be58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be1738c098 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55be1738bfa0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be1738c150 <col:20>
| `-OptimizeNoneAttr 0x55be1738c1a8 <col:30>
|-CXXMethodDecl 0x55be1738c2c8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55be1738c1d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be1738c380 <col:20>
| `-OptimizeNoneAttr 0x55be1738c3d8 <col:30>
|-CXXMethodDecl 0x55be1738c490 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55be1738c400 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be1738c5d8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be1738c548 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be1738c708 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55be1738c808 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55be1738c8d8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55be1738c9a8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55be1738cae8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55be1738ca58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be1738cc30 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be1738cba0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be1738cd78 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55be1738cce8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be1738ce30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55be1738cf30 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55be1738cea0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be1738cfe8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55be1738d0a8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55be1738d1a8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55be1738d328 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55be1738d268 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55be1738dab8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55be1738d3e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55be1738da18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55be1738d918 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55be1738db98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be1738dce8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55be1738dc58 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55be1738dda0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55be1738dfe8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55be1738de60 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55be1738ded8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55be1738e178 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55be1738e0b8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55be1738e388 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55be1738e240 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55be1738e2b8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55be1738e448 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55be1738e6a8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55be1738e5b0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55be1738e778 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55be1738e778

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be1742f328 prev 0x55be173a3f88 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be1742f420 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55be1742f4b0 <col:22, col:28> col:22 public
|-EnumDecl 0x55be1742f4d8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55be1742f5f8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f5d8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55be1742f5c0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be1742f5a0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55be1742f6a0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f680 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55be1742f668 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55be1742f648 <col:14> 'int' 1
| |-EnumConstantDecl 0x55be1742f730 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f710 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55be1742f6f0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55be1742f7c0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f7a0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55be1742f780 <col:13> 'int' 1
| |-EnumConstantDecl 0x55be1742f850 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f830 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55be1742f810 <col:16> 'int' 2
| |-EnumConstantDecl 0x55be1742f8e0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f8c0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55be1742f8a0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55be1742f970 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f950 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55be1742f930 <col:15> 'int' 4
| |-EnumConstantDecl 0x55be1742fa00 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742f9e0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55be1742f9c0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55be1742fa90 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55be1742fa70 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55be1742fa50 <col:12> 'int' 6
| `-EnumConstantDecl 0x55be1742fb20 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55be1742fb00 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55be1742fae0 <col:13> 'int' 7
|-VarDecl 0x55be1742fb90 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55be1742fc18 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55be1742fca0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55be1742fd28 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55be1742fdb0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55be1742fe38 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55be1742fec0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55be1742ff48 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55be1742ffd0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55be17430058 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55be174300e0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55be174301e0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55be17435508 '_nerrors' 'int'
| | `-IntegerLiteral 0x55be17435c98 <line:128:13> 'int' 0
| `-CompoundStmt 0x55be17435d08 <col:16, line:129:5>
|-CXXDestructorDecl 0x55be174302d0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55be17435d18 <col:29, line:132:5>
|-CXXMethodDecl 0x55be17430488 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55be174303c0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17430550 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55be17430638 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55be17435d70 <col:44, line:161:5>
|   `-ReturnStmt 0x55be17435d60 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55be17435d48 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55be17435d28 <col:9> 'ErrorHandler *' lvalue Var 0x55be17435568 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55be17430778 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55be174306e8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55be17430840 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55be17435dd0 <col:43, line:173:5>
|   `-ReturnStmt 0x55be17435dc0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55be17435da8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55be17435d88 <col:9> 'ErrorHandler *' lvalue Var 0x55be174355e0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55be174308f8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55be17430978 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55be17430a88 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55be174309f8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55be17430bd8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55be17430b48 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55be17430d30 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55be17430c98 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55be17430e88 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55be17430df0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55be17430fe0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55be17430f48 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55be174311f0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55be17431098 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55be17431118 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55be174313c8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55be174312b0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55be17431330 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55be174315e8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55be17431488 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55be17431508 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55be174317c8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55be174316a8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55be17431728 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55be174319a8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55be17431888 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55be17431908 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55be17431b30 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55be17431a68 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55be17431d00 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55be17431be8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55be17431c60 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55be17436028 <col:57, line:234:5>
|   `-ReturnStmt 0x55be17436018 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55be17436000 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55be17435fa8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55be17435f78 <col:9> '<bound member function type>' ->xmessage 0x55be17431b30
|         | `-CXXThisExpr 0x55be17435f68 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55be17435fe8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55be17435fd0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55be17435f48 <col:18, col:40> 'String' (CXXTemporary 0x55be17435f48)
|               `-CallExpr 0x55be17435f10 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55be17435ef8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55be17435e70 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55be17433cf8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55be17435e90 <col:31> 'const String' lvalue ParmVar 0x55be17431c60 'str' 'const String &'
|                 `-DeclRefExpr 0x55be17435eb0 <col:36> 'const String' lvalue ParmVar 0x55be17431be8 'anno' 'const String &'
|-CXXMethodDecl 0x55be17431fe0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55be17431dc0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55be17431e40 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55be17431eb8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55be174362b8 <col:68, line:243:5>
|   `-ReturnStmt 0x55be174362a8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55be17436290 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55be17436230 <col:9, col:41> 'int'
|         |-MemberExpr 0x55be17436200 <col:9> '<bound member function type>' ->xmessage 0x55be17431d00
|         | `-CXXThisExpr 0x55be174361f0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55be174360c8 <col:18> 'const String' lvalue ParmVar 0x55be17431dc0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55be17436278 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55be17436260 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55be174361d0 <col:24, col:40> 'String' (CXXTemporary 0x55be174361d0)
|               `-CXXMemberCallExpr 0x55be17436168 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55be174360f8 <col:24> '<bound member function type>' ->vformat 0x55be174331c0
|                 | `-CXXThisExpr 0x55be174360e8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55be17436198 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55be17436128 <col:32> 'const char *' lvalue ParmVar 0x55be17431e40 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55be174361b0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55be17436148 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55be17431eb8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55be17432280 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55be174320a8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55be17432120 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55be17432198 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55be174365f8 <col:23, line:254:5>
|   `-ReturnStmt 0x55be174365e8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55be174365d0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55be17436570 <col:9, col:71> 'int'
|         |-MemberExpr 0x55be17436540 <col:9> '<bound member function type>' ->xmessage 0x55be17431d00
|         | `-CXXThisExpr 0x55be17436530 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55be174365b8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55be174365a0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55be174364f0 <col:18, col:65> 'String' (CXXTemporary 0x55be174364f0)
|         |     `-CallExpr 0x55be17436488 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55be17436470 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55be17436358 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55be17433cf8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55be17436378 <col:31> 'const String' lvalue ParmVar 0x55be17432120 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55be174364d0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55be174364b8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55be17436450 <col:37, col:64> 'String' (CXXTemporary 0x55be17436450)
|         |             `-CallExpr 0x55be17436420 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55be17436408 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55be17436398 <col:37> 'String (const String &)' lvalue CXXMethod 0x55be17434380 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55be174363b8 <col:56> 'const String' lvalue ParmVar 0x55be174320a8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55be17436510 <col:68> 'const String' lvalue ParmVar 0x55be17432198 'str' 'const String &'
|-CXXMethodDecl 0x55be17432600 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55be17432348 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55be174323c0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55be17432440 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55be174324b8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55be174368b0 <col:34, line:267:5>
|   `-ReturnStmt 0x55be174368a0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55be17436888 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55be17436820 <col:9, col:51> 'int'
|         |-MemberExpr 0x55be174367f0 <col:9> '<bound member function type>' ->xmessage 0x55be17432280
|         | `-CXXThisExpr 0x55be174367e0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55be17436698 <col:18> 'const String' lvalue ParmVar 0x55be17432348 'landmark' 'const String &'
|         |-DeclRefExpr 0x55be174366b8 <col:28> 'const String' lvalue ParmVar 0x55be174323c0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55be17436870 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55be17436858 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55be174367c0 <col:34, col:50> 'String' (CXXTemporary 0x55be174367c0)
|               `-CXXMemberCallExpr 0x55be17436758 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55be174366e8 <col:34> '<bound member function type>' ->vformat 0x55be174331c0
|                 | `-CXXThisExpr 0x55be174366d8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55be17436788 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55be17436718 <col:42> 'const char *' lvalue ParmVar 0x55be17432440 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55be174367a0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55be17436738 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55be174324b8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55be17432710 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55be17436930 <col:25, line:288:5>
|   `-ReturnStmt 0x55be17436920 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55be17436908 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55be174368d8 <col:9> 'const int' lvalue ->_nerrors 0x55be17435508
|         `-CXXThisExpr 0x55be174368c8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55be17432920 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55be174327c8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55be17432848 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55be17432c08 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55be174329e8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55be17432a68 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55be17432ae0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55be17432da0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55be17432cd8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55be17432fe8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55be17432e60 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55be17432ed8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55be17436b90 <col:58, line:357:5>
|   `-ReturnStmt 0x55be17436b80 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55be17436b68 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55be17436b38 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55be17436b20 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55be17436b00 <col:9, col:29> 'String' (CXXTemporary 0x55be17436b00)
|             `-CallExpr 0x55be17436a90 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55be17436a78 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55be174369f8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55be17432c08 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55be17436998 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55be17436ac8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55be174369b8 <col:21> 'const char *' lvalue ParmVar 0x55be17432e60 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55be17436ae0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55be174369d8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55be17432ed8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55be174331c0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55be174330b0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55be17433128 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55be17433318 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55be17433288 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55be17433460 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55be174333d0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55be17433700 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55be17433518 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55be17433598 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55be17433610 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55be17433860 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55be174337d0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55be17436ca8 <col:37, line:441:5>
|   `-IfStmt 0x55be17436c90 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55be17436c18 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55be17436be8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55be17436ba8 <col:6> 'int' lvalue ParmVar 0x55be174337d0 'level' 'int'
|     | `-ImplicitCastExpr 0x55be17436c00 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55be17436bc8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55be1742f8e0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55be17436c78 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55be17436c48 <col:8> 'int' lvalue ->_nerrors 0x55be17435508
|         `-CXXThisExpr 0x55be17436c38 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55be17433928 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55be17436d40 <col:26, line:448:5>
|   `-BinaryOperator 0x55be17436d20 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55be17436cd0 <col:2> 'int' lvalue ->_nerrors 0x55be17435508
|     | `-CXXThisExpr 0x55be17436cc0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55be17436d00 <col:13> 'int' 0
|-CXXMethodDecl 0x55be17433af0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55be174339e0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55be17433a58 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55be17433cf8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55be17433bb0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55be17433c28 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55be17433fa8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55be17433db8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55be17433e38 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55be17433eb8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55be17434060 <col:59> 0 0
|-CXXMethodDecl 0x55be174341f8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55be174340d8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55be17434158 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55be174373b0 <col:70, line:534:5>
|   |-DeclStmt 0x55be17436eb0 <line:528:2, col:20>
|   | |-VarDecl 0x55be17436d68 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55be17436dd0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55be17436e08 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55be17436e70 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55be17436f80 <line:529:2, col:23>
|   | `-VarDecl 0x55be17436ee0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55be17436f68 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55be17436f48 <col:18> 'const char *' lvalue ParmVar 0x55be174340d8 'begin' 'const char *'
|   |-DoStmt 0x55be17437348 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55be17437278 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55be17437260 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55be17437240 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55be17436f98 <col:6> 'const char *' lvalue Var 0x55be17436ee0 'x' 'const char *'
|   | |     `-CallExpr 0x55be17437190 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55be17437178 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55be17437130 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55be174359e0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55be174371f8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55be174371e0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55be17437050 <col:20, col:27> 'String' (CXXTemporary 0x55be17437050)
|   | |       |     `-CXXTemporaryObjectExpr 0x55be17437018 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55be17437210 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55be17437070 <col:30> 'const char *' lvalue Var 0x55be17436ee0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55be17437228 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55be17437090 <col:33> 'const char *' lvalue ParmVar 0x55be17434158 'end' 'const char *'
|   | |       |-UnaryOperator 0x55be174370d0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55be174370b0 <col:39> 'String' lvalue Var 0x55be17436d68 'name' 'String'
|   | |       |-UnaryOperator 0x55be17437108 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55be174370e8 <col:46> 'String' lvalue Var 0x55be17436e08 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55be17437120 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55be17437330 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55be17437318 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55be174372f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55be174372c8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|   |         `-ImplicitCastExpr 0x55be174372b0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55be17437290 <col:11> 'String' lvalue Var 0x55be17436d68 'name' 'String'
|   `-ReturnStmt 0x55be174373a0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55be17437388 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55be17437368 <col:9> 'const char *' lvalue Var 0x55be17436ee0 'x' 'const char *'
|-CXXMethodDecl 0x55be17434380 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55be174342b8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55be174379b8 <col:55, line:550:5>
|   `-IfStmt 0x55be17437990 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55be174375f0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55be174375d8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55be174375c0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55be174375a0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55be17437570 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|     | |       `-DeclRefExpr 0x55be17437410 <col:6> 'const String' lvalue ParmVar 0x55be174342b8 'x' 'const String &'
|     | `-BinaryOperator 0x55be17437550 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55be17437520 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55be174374d0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55be174374b8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55be17437470 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55be17037df0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55be17437430 <col:11> 'const String' lvalue ParmVar 0x55be174342b8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55be17437450 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55be17437538 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55be17437508 <col:19> 'char' 123
|     |-ReturnStmt 0x55be17437660 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55be17437630 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55be17437610 <col:13> 'const String' lvalue ParmVar 0x55be174342b8 'x' 'const String &'
|     `-IfStmt 0x55be17437968 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55be174376f8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55be174376e0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55be174376c0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55be17437690 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |       `-DeclRefExpr 0x55be17437670 <col:11> 'const String' lvalue ParmVar 0x55be174342b8 'x' 'const String &'
|       |-ReturnStmt 0x55be17437880 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55be17437868 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55be17437838 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55be17437820 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55be17437800 <col:13, col:29> 'String' (CXXTemporary 0x55be17437800)
|       |         `-CallExpr 0x55be174377b0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55be17437798 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55be17437710 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55be17433af0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55be174377e0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55be17437730 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55be17437750 <col:28> 'const String' lvalue ParmVar 0x55be174342b8 'x' 'const String &'
|       `-ReturnStmt 0x55be17437958 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55be17437940 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55be17437910 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55be174378f8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55be174378d8 <col:13, col:20> 'String' (CXXTemporary 0x55be174378d8)
|                 `-CXXTemporaryObjectExpr 0x55be174378a0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55be17434548 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55be17434438 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55be174344b0 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55be17435c88 <col:71> 'bool' false
|-CXXRecordDecl 0x55be174345f8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55be174348f8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55be17434890 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55be17434830 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55be174347f0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55be1701cf60 'String'
|       | `-CXXRecord 0x55be1701ced0 'String'
|       |-BuiltinType 0x55be16ce4580 'int'
|       `-DecayedType 0x55be173a4fd0 '__va_list_tag *' sugar
|         |-TypedefType 0x55be173a4fa0 'va_list' sugar
|         | |-Typedef 0x55be16f06d40 'va_list'
|         | `-TypedefType 0x55be16f06cf0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55be16e3e908 '__gnuc_va_list'
|         |   `-TypedefType 0x55be16e3e870 '__builtin_va_list' sugar
|         |     |-Typedef 0x55be16d25d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55be16d25ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55be16ce52d0 '__va_list_tag'
|         |         `-CXXRecord 0x55be16ce5238 '__va_list_tag'
|         `-PointerType 0x55be16f0ce40 '__va_list_tag *'
|           `-RecordType 0x55be16ce52d0 '__va_list_tag'
|             `-CXXRecord 0x55be16ce5238 '__va_list_tag'
|-EnumDecl 0x55be17434950 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55be17434a50 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17434fb0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434a30 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55be17434a10 <col:16> 'int' 1
| |-EnumConstantDecl 0x55be17434ae0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17434fc8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434ac0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55be17434aa0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55be17434b70 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17434fe0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434b50 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55be17434b30 <col:22> 'int' 4
| |-EnumConstantDecl 0x55be17434c00 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17434ff8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434be0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55be17434bc0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55be17434c90 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17435010 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434c70 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55be17434c50 <col:22> 'int' 16
| |-EnumConstantDecl 0x55be17434d20 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17435028 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434d00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55be17434ce0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55be17434db0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17435040 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434d90 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55be17434d70 <col:17> 'int' 64
| |-EnumConstantDecl 0x55be17434e40 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17435058 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434e20 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55be17434e00 <col:14> 'int' 128
| |-EnumConstantDecl 0x55be17434ed0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55be17435070 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55be17434eb0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55be17434e90 <col:16> 'int' 256
| `-EnumConstantDecl 0x55be17434f60 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55be17435088 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be17434f40 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55be17434f20 <col:12> 'int' 1024
|-CXXMethodDecl 0x55be17435298 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55be174350b0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55be17435150 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55be17435420 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55be17435358 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55be174354c8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55be17435508 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55be17435568 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55be174355e0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55be174359e0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55be17435658 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55be174356d8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55be17435758 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55be174357d0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55be17435848 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55be174358c0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55be17435b08 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55be17435b08
| `-ParmVarDecl 0x55be17435c18 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55be17437d18 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55be17437d18
  `-ParmVarDecl 0x55be17437e28 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be173a4018 prev 0x55be172139e8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be173a4110 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55be173a41a0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55be173a42d8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55be173a41d8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55be173a5700 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55be173a56e0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55be173a5278 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55be173a5790 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55be173a5750 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55be173a41d8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55be173a52e0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55be173a5810 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55be173a57d0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55be173a5340 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55be173a5850 <col:54> 'bool' false
| `-CompoundStmt 0x55be173a5958 <col:61, line:38:5>
|   `-BinaryOperator 0x55be173a5938 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55be173a58d0 <col:9> 'const Element *' lvalue ->_context 0x55be173a5218
|     | `-CXXThisExpr 0x55be173a58c0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55be173a5920 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55be173a5900 <col:20> 'int' 0
|-CXXConstructorDecl 0x55be173a44e8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55be173a4398 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55be173a4410 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55be173a5738 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55be173a5718 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55be173a5218 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55be173a59b0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55be173a5970 <col:20> 'const Element *' lvalue ParmVar 0x55be173a4398 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55be173a5278 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55be173a5a30 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55be173a59f0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55be173a4410 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55be173a52e0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55be173a5ab0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55be173a5a70 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55be173a5340 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55be173a5af0 <col:73> 'bool' false
| `-CompoundStmt 0x55be173a5b68 <col:80, line:46:5>
|-CXXMethodDecl 0x55be173a4618 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55be173a5be0 <col:36, line:51:5>
|   `-ReturnStmt 0x55be173a5bd0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55be173a5bb8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55be173a5b88 <col:16> 'const Element *const' lvalue ->_context 0x55be173a5218
|         `-CXXThisExpr 0x55be173a5b78 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55be173a4708 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55be173a5c60 <col:32, line:57:5>
|   `-ReturnStmt 0x55be173a5c50 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55be173a5c38 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55be173a5c08 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55be173a5278
|         `-CXXThisExpr 0x55be173a5bf8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55be173a47c8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55be173a4950 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55be173a4880 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55be173a4aa0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55be173a4a10 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55be173a4bf0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55be173a4b60 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55be173a4df8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55be173a4ca8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55be173a4d20 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55be173a5128 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55be173a4eb8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55be173a4f38 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55be173a5000 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55be173a51e0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55be173a5218 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55be173a5278 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55be173a52e0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55be173a5340 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55be173a5390 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55be173a5390
| `-ParmVarDecl 0x55be173a54a8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55be173a5548 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55be173a5548
| `-ParmVarDecl 0x55be173a5658 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55be1747a038 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be173cbc40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55be173cbe18 prev 0x55be173cbc40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55be173cbea8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55be173cbed0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173cdaa0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55be173cda50 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55be173cc380 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55be173cc280 'type'
|     `-TemplateSpecializationType 0x55be173cc210 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55be173cc0f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55be173cc0d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55be173cc0b0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55be173cc1f0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55be173cc110 'char_array'
|-TypedefDecl 0x55be173cdb58 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55be173cdb20 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55be173cdb00 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55be173cdaa0 'type'
|     `-ElaboratedType 0x55be173cda50 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55be173cc380 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55be173cc280 'type'
|         `-TemplateSpecializationType 0x55be173cc210 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55be173cc0f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55be173cc0d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55be173cc0b0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55be173cc1f0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55be173cc110 'char_array'
|-CXXMethodDecl 0x55be173cdcd8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55be173cdbe8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55be173cddc8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55be173cdea8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55be173ce178 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55be173ce080 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55be173ce3b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55be173ce230 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be173ce2a8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173ce588 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55be173ce478 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be173ce4f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173ce6e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55be173ce7b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55be173cea08 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55be173ce878 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55be173ce8f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173cec68 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55be173cead8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55be173ceb50 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173cee28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55be173ced38 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173cefe8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55be173ceef0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173cf0a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be173cf150 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55be173cf388 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55be173cf200 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55be173cf278 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55be173cf628 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55be173cf530 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55be173cf6f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55be173cf740 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55be173cf790 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be173ca858 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55be173caa68 prev 0x55be173ca858 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55be173cbbb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55be173cbb60 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55be173cbb40 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55be173cb9f0 'type'
|     `-SubstTemplateTypeParmType 0x55be173cb810 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55be16fc58f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16fc5898 'T'
|       `-RecordType 0x55be173cb360 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55be173cb278 'sized_array_memory'
|-FieldDecl 0x55be173cf7e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55be173cf830 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55be173d60a0 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|   |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55be16ffca98 'T'
|   `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d6138 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55be173d6100 'int &'
|   `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d61c8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55be173d6190 'const int &'
|   `-QualType 0x55be173cab01 'const int' const
|     `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d6258 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55be173d6220 'int *'
|   `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d62e8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55be173d62b0 'const int *'
|   `-QualType 0x55be173cab01 'const int' const
|     `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d6ed0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55be173d6e80 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55be173d6e60 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55be173d6df0 'type'
|     `-SubstTemplateTypeParmType 0x55be173d6bb0 'int' sugar
|       |-TemplateTypeParmType 0x55be16fceb30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16fceae0 'T'
|       `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d6f38 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55be173d6190 'const int &'
|   `-QualType 0x55be173cab01 'const int' const
|     `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d6f90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d6ff8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55be173d6220 'int *'
|   `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|     |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55be16ffca98 'T'
|     `-BuiltinType 0x55be16ce4580 'int'
|-TypedefDecl 0x55be173d7060 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55be173d62b0 'const int *'
|   `-QualType 0x55be173cab01 'const int' const
|     `-SubstTemplateTypeParmType 0x55be173cab00 'int' sugar
|       |-TemplateTypeParmType 0x55be16ffcaf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55be16ffca98 'T'
|       `-BuiltinType 0x55be16ce4580 'int'
|-EnumDecl 0x55be173d70b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55be173d71b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55be173d7190 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55be16ffdcb8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55be16ffdc90 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55be16ffdc70 <col:40> 'int' 1
|-CXXConstructorDecl 0x55be173d7238 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55be173d7488 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55be173d72f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be173d7390 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55be173d7748 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55be173d7630 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55be173d7a08 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55be173d78f0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55be173d7d50 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55be173d7c30 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55be173d8060 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55be173d7f40 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55be173d8350 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55be173d8198 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be173d8210 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55be173d8478 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55be173d8558 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173d85b0 <col:30> Inherited
|-CXXMethodDecl 0x55be173d85f8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55be173d86a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173d8700 <col:30> Inherited
|-CXXMethodDecl 0x55be173d87c8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55be173d8878 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173d88d0 <col:30> Inherited
|-CXXMethodDecl 0x55be173d8918 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55be173d89c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173d8a20 <col:30> Inherited
|-CXXMethodDecl 0x55be173d8a68 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55be173d8b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173d8b70 <col:30> Inherited
|-CXXMethodDecl 0x55be173d8bb8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55be173d8c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55be173d8cc0 <col:30> Inherited
|-CXXMethodDecl 0x55be173d8ce8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be173d8d98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55be173d8e48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55be173d9008 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55be173d8ef8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55be173d8f70 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55be173d9158 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55be173d90c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173d9308 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55be173d9210 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be173d93c0 <col:20>
| `-OptimizeNoneAttr 0x55be173d9418 <col:30>
|-CXXMethodDecl 0x55be173d9538 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55be173d9440 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55be173d95f0 <col:20>
| `-OptimizeNoneAttr 0x55be173d9648 <col:30>
|-CXXMethodDecl 0x55be173d9700 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55be173d9670 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173d9848 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be173d97b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173d9978 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55be173d9aa8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55be173d9b78 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55be173d9c48 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x55be173d9d88 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55be173d9cf8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173d9ed0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55be173d9e40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55be173da018 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55be173d9f88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be173da0d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55be173da1d0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55be173da140 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55be173da288 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55be173da348 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55be173da448 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55be173da5c8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55be173da508 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55be173dad88 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55be173da680 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55be173dace8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55be173dabe8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55be173dae68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55be173dafb8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55be173daf28 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55be173db070 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55be173db2b8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55be173db130 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55be173db1a8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55be173db478 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55be173db388 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55be173db6c8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55be173db540 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55be173db5b8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55be173db788 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55be173db9e8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55be173db8f0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55be173dbab8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be173c89c8 prev 0x55be173aab88 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55be173c8ac0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55be173c8bb0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55be173ed450 <col:16, line:828:9>
|-CXXDestructorDecl 0x55be173c8ca0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55be173ed460 <col:25, line:830:9>
|-CXXMethodDecl 0x55be173c8da0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55be173c8e50 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55be173c8ef8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55be173c8ef8
| `-ParmVarDecl 0x55be173c9008 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55be173c97c8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55be173c97c8
  `-ParmVarDecl 0x55be173c98d8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be173aa998 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55be173aaaf8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55be173aab88 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55be173aac40 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55be173aad70 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55be173aac78 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55be173dd078 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55be173dd058 <col:31> 'int' 0
|-CXXConstructorDecl 0x55be173ab088 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55be173aaf00 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55be173aaf78 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55be173dd0b0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55be173dd090 <col:59> 'int' 0
|-CXXConstructorDecl 0x55be173ab260 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55be173ab150 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55be173ab1c8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55be173dd0e8 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55be173dd0c8 <col:55> 'int' 0
|-CXXConstructorDecl 0x55be173ab618 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55be173ab400 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55be173ab478 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55be173ab4f0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55be173dd120 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55be173dd100 <col:31> 'int' 0
|-CXXConstructorDecl 0x55be173ab7d8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55be173ab718 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55be173ab8d0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55be173abab8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55be173ab9c0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55be173abba8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55be173dd4d0 <col:24, line:291:5>
|   `-ReturnStmt 0x55be173dd4c0 <line:290:9, col:79>
|     `-BinaryOperator 0x55be173dd4a0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55be173dd378 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55be173dd2d0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55be173dd2b0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55be173dd1a8 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55be173dd190 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55be173dd178 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55be173dd148 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55be173ca7f0
|       | |   |       `-CXXThisExpr 0x55be173dd138 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55be173dd298 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55be173dd280 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55be173dd248 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55be173dd218 <col:28, col:35> '<bound member function type>' ->size 0x55be1738ba78
|       | |           `-ImplicitCastExpr 0x55be173dd268 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55be173dd200 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55be173dd1d0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55be173ca7f0
|       | |                 `-CXXThisExpr 0x55be173dd1c0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55be173dd360 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55be173dd348 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55be173dd330 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55be173dd300 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55be173dbc00
|       |         `-CXXThisExpr 0x55be173dd2f0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55be173dd480 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55be173dd468 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55be173dd450 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55be173dd410 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55be173dd3f8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55be173dd3a8 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55be173dbcb0
|         |     |   `-CXXThisExpr 0x55be173dd398 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55be173dd3d8 <col:73> 'int' 0
|         `-IntegerLiteral 0x55be173dd430 <col:79> 'int' 0
|-CXXMethodDecl 0x55be173abc68 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55be173dd6a8 <col:32, line:296:5>
|   `-ReturnStmt 0x55be173dd698 <line:295:9, col:49>
|     `-BinaryOperator 0x55be173dd678 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55be173dd558 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55be173dd540 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55be173dd528 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55be173dd4f8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55be173dbc00
|       |       `-CXXThisExpr 0x55be173dd4e8 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55be173dd658 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55be173dd640 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55be173dd628 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55be173dd5e8 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55be173dd5d0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55be173dd580 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55be173dbcb0
|         |     |   `-CXXThisExpr 0x55be173dd570 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55be173dd5b0 <col:43> 'int' 0
|         `-IntegerLiteral 0x55be173dd608 <col:49> 'int' 0
|-CXXMethodDecl 0x55be173abd58 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55be173dd8b8 <col:19, line:306:5>
|   |-IfStmt 0x55be173dd7d8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55be173dd718 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55be173dd700 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55be173dd6d0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55be173ca7f0
|   | |     `-CXXThisExpr 0x55be173dd6c0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55be173dd7b8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55be173dd788 <col:13, col:20> '<bound member function type>' ->clear 0x55be1738e448
|   |     `-ImplicitCastExpr 0x55be173dd770 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55be173dd740 <col:13> 'Vector<String> *' lvalue ->_conf 0x55be173ca7f0
|   |         `-CXXThisExpr 0x55be173dd730 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55be173dd860 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55be173dd830 <col:9, col:16> '<bound member function type>' .clear 0x55be173db788
|   |   `-MemberExpr 0x55be173dd800 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55be173dbba0
|   |     `-CXXThisExpr 0x55be173dd7f0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55be173dd8a8 <line:305:9, col:17>
|     `-UnaryOperator 0x55be173dd890 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be173dd880 <col:17> 'Args *' this
|-CXXMethodDecl 0x55be173abfd8 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55be173abee0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55be173ac158 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55be173ac090 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55be173ac4d8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55be173ac200 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55be173ac438 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55be173ac2a8 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55be173ac320 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55be173ddc00 <col:67, line:327:5>
|     |-WhileStmt 0x55be173ddbb0 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55be173dd9c8 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55be173dd920 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55be173166e0 0x55be172fc248 0x55be172f3c68 0x55be172c0408 0x55be17288b08 0x55be1720bf18 0x55be1705c058 0x55be1705bd30 0x55be17049890 0x55be17049540 0x55be17048c30 0x55be16fb2490 0x55be16fa1eb0
|     | | |-DeclRefExpr 0x55be173dd8e0 <col:16> 'Iter' lvalue ParmVar 0x55be173ac2a8 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55be173dd900 <col:25> 'Iter' lvalue ParmVar 0x55be173ac320 'end' 'Iter'
|     | `-CompoundStmt 0x55be173ddb90 <col:30, line:325:9>
|     |   |-CallExpr 0x55be173ddb30 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55be173dda10 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55be173ddb00 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55be173dda90 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|     |   |   `-DeclRefExpr 0x55be173dda70 <col:24> 'Iter' lvalue ParmVar 0x55be173ac2a8 'begin' 'Iter'
|     |   `-UnaryOperator 0x55be173ddb78 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55be173ddb58 <col:15> 'Iter' lvalue ParmVar 0x55be173ac2a8 'begin' 'Iter'
|     `-ReturnStmt 0x55be173ddbf0 <line:326:9, col:17>
|       `-UnaryOperator 0x55be173ddbd8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173ddbc8 <col:17> 'Args *' this
|-CXXMethodDecl 0x55be173ac5e0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55be173ac550 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55be173ac728 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55be173ac698 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55be173ac7f0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55be173ddce0 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55be173ddc80 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55be173ddc30 <col:9> '<bound member function type>' ->reset_from 0x55be173dc028
|   | | `-CXXThisExpr 0x55be173ddc20 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55be173ddc60 <col:20> 'int' 0
|   `-ReturnStmt 0x55be173ddcd0 <line:352:9, col:17>
|     `-UnaryOperator 0x55be173ddcb8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be173ddca8 <col:17> 'Args *' this
|-VarDecl 0x55be173ac8a8 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55be173ac910 <col:38> 'int' 1
|-VarDecl 0x55be173ac9a0 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55be173aca08 <col:39> 'int' 2
|-VarDecl 0x55be173aca98 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55be173acb00 <col:39> 'int' 4
|-VarDecl 0x55be173acb90 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55be173acbf8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55be173acf78 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55be173acc70 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173aced8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55be173acd20 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173acdc8 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x55be173dde38 <col:43, line:371:5>
|     `-ReturnStmt 0x55be173dde28 <line:370:9, col:34>
|       `-CallExpr 0x55be173dddf0 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173ddd10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173ddd90 <col:21> 'const char *' lvalue ParmVar 0x55be173acd20 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173dddb0 <col:30> 'int' 0
|         `-DeclRefExpr 0x55be173dddd0 <col:33> 'T' lvalue ParmVar 0x55be173acdc8 'x' 'T &'
|-FunctionTemplateDecl 0x55be173ad2a8 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55be173acfe0 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173ad208 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55be173ad090 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ad138 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55be173ddf88 <col:45, line:375:5>
|     `-ReturnStmt 0x55be173ddf78 <line:374:9, col:42>
|       `-CallExpr 0x55be173ddf40 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173dde60 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173ddee0 <col:21> 'const char *' lvalue ParmVar 0x55be173ad090 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173ddf00 <col:30> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55be173ddf20 <col:41> 'T' lvalue ParmVar 0x55be173ad138 'x' 'T &'
|-FunctionTemplateDecl 0x55be173ad5d8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55be173ad310 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173ad538 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55be173ad3c0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ad468 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55be173df598 <col:45, line:379:5>
|     `-ReturnStmt 0x55be173df588 <line:378:9, col:43>
|       `-CallExpr 0x55be173df550 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173ddfb0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173de030 <col:21> 'const char *' lvalue ParmVar 0x55be173ad3c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173de050 <col:30> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int'
|         `-DeclRefExpr 0x55be173de070 <col:42> 'T' lvalue ParmVar 0x55be173ad468 'x' 'T &'
|-FunctionTemplateDecl 0x55be173ad908 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55be173ad640 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173ad868 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55be173ad6f0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ad798 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55be173df798 <col:46, line:383:5>
|     `-ReturnStmt 0x55be173df788 <line:382:9, col:55>
|       `-CallExpr 0x55be173df750 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173df5c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173df640 <col:21> 'const char *' lvalue ParmVar 0x55be173ad6f0 'keyword' 'const char *'
|         |-BinaryOperator 0x55be173df710 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55be173df6c0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55be173df6a0 <col:30> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55be173df6f8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55be173df6d8 <col:42> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55be173df730 <col:54> 'T' lvalue ParmVar 0x55be173ad798 'x' 'T &'
|-FunctionTemplateDecl 0x55be173add08 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55be173ad970 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173adc68 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55be173ada20 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173adaa0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55be173adb48 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55be173df8d8 <col:54, line:388:5>
|     |-CallExpr 0x55be173df860 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173df7b0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55be173df7f0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55be173df800 <col:30> 'const char *' lvalue ParmVar 0x55be173ada20 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55be173df820 <col:39> 'int' lvalue ParmVar 0x55be173adaa0 'flags' 'int'
|     | `-DeclRefExpr 0x55be173df840 <col:46> 'T' lvalue ParmVar 0x55be173adb48 'x' 'T &'
|     `-ReturnStmt 0x55be173df8c8 <line:387:9, col:17>
|       `-UnaryOperator 0x55be173df8b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173df8a0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173ae1b8 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55be173add78 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55be173addf8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55be173ae118 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55be173adeb8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173adf58 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55be173adff8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55be173dfa48 <col:74, line:403:5>
|     `-ReturnStmt 0x55be173dfa38 <line:402:9, col:56>
|       `-CallExpr 0x55be173df9f8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173df908 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173df978 <col:28> 'const char *' lvalue ParmVar 0x55be173adeb8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173df998 <col:37> 'int' 0
|         |-DeclRefExpr 0x55be173df9b8 <col:40> 'T' lvalue ParmVar 0x55be173adf58 'x' 'T &'
|         `-DeclRefExpr 0x55be173df9d8 <col:43> 'const V' lvalue ParmVar 0x55be173adff8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55be173ae628 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55be173ae228 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55be173ae2a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55be173ae588 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55be173ae368 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ae408 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55be173ae4a8 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55be173dfbb0 <col:76, line:407:5>
|     `-ReturnStmt 0x55be173dfba0 <line:406:9, col:65>
|       `-CallExpr 0x55be173dfb60 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173dfa70 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173dfae0 <col:28> 'const char *' lvalue ParmVar 0x55be173ae368 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173dfb00 <col:37> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int'
|         |-DeclRefExpr 0x55be173dfb20 <col:49> 'T' lvalue ParmVar 0x55be173ae408 'x' 'T &'
|         `-DeclRefExpr 0x55be173dfb40 <col:52> 'const V' lvalue ParmVar 0x55be173ae4a8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55be173aeb78 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55be173ae698 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55be173ae718 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55be173aead8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55be173ae7d8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ae858 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55be173ae8f8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55be173ae998 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55be173dfd18 <col:85, line:412:5>
|     |-CallExpr 0x55be173dfc98 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173dfbc8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55be173dfc08 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55be173dfc18 <col:37> 'const char *' lvalue ParmVar 0x55be173ae7d8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55be173dfc38 <col:46> 'int' lvalue ParmVar 0x55be173ae858 'flags' 'int'
|     | |-DeclRefExpr 0x55be173dfc58 <col:53> 'T' lvalue ParmVar 0x55be173ae8f8 'x' 'T &'
|     | `-DeclRefExpr 0x55be173dfc78 <col:56> 'const V' lvalue ParmVar 0x55be173ae998 'default_value' 'const V &'
|     `-ReturnStmt 0x55be173dfd08 <line:411:9, col:17>
|       `-UnaryOperator 0x55be173dfcf0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173dfce0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173af008 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55be173aebf0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173aec68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173aef68 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173aed28 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173aeda0 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55be173aee48 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x55be173dfe98 <col:53, line:425:5>
|     `-ReturnStmt 0x55be173dfe88 <line:424:9, col:42>
|       `-CallExpr 0x55be173dfe48 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173dfd48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173dfdc8 <col:21> 'const char *' lvalue ParmVar 0x55be173aed28 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173dfde8 <col:30> 'int' 0
|         |-DeclRefExpr 0x55be173dfe08 <col:33> 'P' lvalue ParmVar 0x55be173aeda0 'parser' 'P'
|         `-DeclRefExpr 0x55be173dfe28 <col:41> 'T' lvalue ParmVar 0x55be173aee48 'x' 'T &'
|-FunctionTemplateDecl 0x55be173af458 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55be173af078 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173af0f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173af3b8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173af1b8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173af230 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55be173af2d8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55be173e0010 <col:55, line:429:5>
|     `-ReturnStmt 0x55be173e0000 <line:428:9, col:50>
|       `-CallExpr 0x55be173dffc0 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173dfec0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173dff40 <col:21> 'const char *' lvalue ParmVar 0x55be173af1b8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173dff60 <col:30> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55be173dff80 <col:41> 'P' lvalue ParmVar 0x55be173af230 'parser' 'P'
|         `-DeclRefExpr 0x55be173dffa0 <col:49> 'T' lvalue ParmVar 0x55be173af2d8 'x' 'T &'
|-FunctionTemplateDecl 0x55be173af8a8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55be173af4c8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173af548 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173af808 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173af608 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173af680 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55be173af728 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55be173e0188 <col:55, line:433:5>
|     `-ReturnStmt 0x55be173e0178 <line:432:9, col:51>
|       `-CallExpr 0x55be173e0138 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e0038 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e00b8 <col:21> 'const char *' lvalue ParmVar 0x55be173af608 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e00d8 <col:30> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int'
|         |-DeclRefExpr 0x55be173e00f8 <col:42> 'P' lvalue ParmVar 0x55be173af680 'parser' 'P'
|         `-DeclRefExpr 0x55be173e0118 <col:50> 'T' lvalue ParmVar 0x55be173af728 'x' 'T &'
|-FunctionTemplateDecl 0x55be173afcf8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55be173af918 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173af998 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173afc58 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173afa58 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173afad0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55be173afb78 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55be173e03b0 <col:56, line:437:5>
|     `-ReturnStmt 0x55be173e03a0 <line:436:9, col:63>
|       `-CallExpr 0x55be173e0360 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e01b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e0230 <col:21> 'const char *' lvalue ParmVar 0x55be173afa58 'keyword' 'const char *'
|         |-BinaryOperator 0x55be173e0300 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55be173e02b0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55be173e0290 <col:30> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55be173e02e8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55be173e02c8 <col:42> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55be173e0320 <col:54> 'P' lvalue ParmVar 0x55be173afad0 'parser' 'P'
|         `-DeclRefExpr 0x55be173e0340 <col:62> 'T' lvalue ParmVar 0x55be173afb78 'x' 'T &'
|-FunctionTemplateDecl 0x55be173b0228 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55be173afd68 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173afde8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55be173b0188 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
| | |-ParmVarDecl 0x55be173afea8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55be173aff28 <col:37, col:41> col:41 referenced flags 'int'
| | |-ParmVarDecl 0x55be173affa0 <col:48, col:50> col:50 referenced parser 'P'
| | |-ParmVarDecl 0x55be173b0048 <col:58, col:61> col:61 referenced x 'T &'
| | `-CompoundStmt 0x55be173e0518 <col:64, line:442:5>
| |   |-CallExpr 0x55be173e0498 <line:440:9, col:55> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x55be173e03c8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
| |   | |-CXXThisExpr 0x55be173e0408 <col:24> 'Args *' this
| |   | |-DeclRefExpr 0x55be173e0418 <col:30> 'const char *' lvalue ParmVar 0x55be173afea8 'keyword' 'const char *'
| |   | |-DeclRefExpr 0x55be173e0438 <col:39> 'int' lvalue ParmVar 0x55be173aff28 'flags' 'int'
| |   | |-DeclRefExpr 0x55be173e0458 <col:46> 'P' lvalue ParmVar 0x55be173affa0 'parser' 'P'
| |   | `-DeclRefExpr 0x55be173e0478 <col:54> 'T' lvalue ParmVar 0x55be173b0048 'x' 'T &'
| |   `-ReturnStmt 0x55be173e0508 <line:441:9, col:17>
| |     `-UnaryOperator 0x55be173e04f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55be173e04e0 <col:17> 'Args *' this
| `-CXXMethodDecl 0x55be1747ab88 <line:439:5, line:442:5> line:439:11 used read 'Args &(const char *, int, AnnoArg, int &)'
|   |-TemplateArgument type 'AnnoArg'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55be1747a870 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55be1747a8d8 <col:37, col:41> col:41 flags 'int'
|   |-ParmVarDecl 0x55be1747a978 <col:48, col:50> col:50 parser 'AnnoArg':'AnnoArg'
|   `-ParmVarDecl 0x55be1747aa48 <col:58, col:61> col:61 x 'int &'
|-FunctionTemplateDecl 0x55be173b0828 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55be173b02a0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b0318 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55be173b0398 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55be173b0788 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55be173b0460 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b04d8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b0578 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55be173b0648 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55be173e06b0 <col:84, line:458:5>
|     `-ReturnStmt 0x55be173e06a0 <line:457:9, col:64>
|       `-CallExpr 0x55be173e0658 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e0548 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e05b8 <col:28> 'const char *' lvalue ParmVar 0x55be173b0460 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173e05d8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55be173e05f8 <col:40> 'P' lvalue ParmVar 0x55be173b04d8 'parser' 'P'
|         |-DeclRefExpr 0x55be173e0618 <col:48> 'T' lvalue ParmVar 0x55be173b0578 'x' 'T &'
|         `-DeclRefExpr 0x55be173e0638 <col:51> 'const V' lvalue ParmVar 0x55be173b0648 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55be173b0da8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55be173b08a0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b0918 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55be173b0998 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55be173b0d08 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55be173b0a60 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b0ad8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b0b78 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55be173b0c18 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55be173e0840 <col:86, line:462:5>
|     `-ReturnStmt 0x55be173e0830 <line:461:9, col:73>
|       `-CallExpr 0x55be173e07e8 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e06d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e0748 <col:28> 'const char *' lvalue ParmVar 0x55be173b0a60 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e0768 <col:37> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int'
|         |-DeclRefExpr 0x55be173e0788 <col:49> 'P' lvalue ParmVar 0x55be173b0ad8 'parser' 'P'
|         |-DeclRefExpr 0x55be173e07a8 <col:57> 'T' lvalue ParmVar 0x55be173b0b78 'x' 'T &'
|         `-DeclRefExpr 0x55be173e07c8 <col:60> 'const V' lvalue ParmVar 0x55be173b0c18 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55be173b1408 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55be173b0e20 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b0e98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55be173b0f18 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55be173b1368 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55be173b0fe0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b1060 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55be173b10d8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b1178 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55be173b1218 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55be173e09d0 <col:95, line:467:5>
|     |-CallExpr 0x55be173e0948 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173e0858 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55be173e0898 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55be173e08a8 <col:37> 'const char *' lvalue ParmVar 0x55be173b0fe0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55be173e08c8 <col:46> 'int' lvalue ParmVar 0x55be173b1060 'flags' 'int'
|     | |-DeclRefExpr 0x55be173e08e8 <col:53> 'P' lvalue ParmVar 0x55be173b10d8 'parser' 'P'
|     | |-DeclRefExpr 0x55be173e0908 <col:61> 'T' lvalue ParmVar 0x55be173b1178 'x' 'T &'
|     | `-DeclRefExpr 0x55be173e0928 <col:64> 'const V' lvalue ParmVar 0x55be173b1218 'default_value' 'const V &'
|     `-ReturnStmt 0x55be173e09c0 <line:466:9, col:17>
|       `-UnaryOperator 0x55be173e09a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e0998 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173b19e8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55be173b1488 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b1508 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55be173b1588 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| |-CXXMethodDecl 0x55be173b1948 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
| | |-ParmVarDecl 0x55be173b1650 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55be173b16c8 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55be173b1768 <col:47, col:51> col:51 referenced x1 'T1 &'
| | |-ParmVarDecl 0x55be173b1808 <col:55, col:59> col:59 referenced x2 'T2 &'
| | `-CompoundStmt 0x55be173e0b78 <col:63, line:481:5>
| |   `-ReturnStmt 0x55be173e0b68 <line:480:9, col:47>
| |     `-CallExpr 0x55be173e0b20 <col:16, col:47> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55be173e0a00 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55be173e0a80 <col:21> 'const char *' lvalue ParmVar 0x55be173b1650 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55be173e0aa0 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55be173e0ac0 <col:33> 'P' lvalue ParmVar 0x55be173b16c8 'parser' 'P'
| |       |-DeclRefExpr 0x55be173e0ae0 <col:41> 'T1' lvalue ParmVar 0x55be173b1768 'x1' 'T1 &'
| |       `-DeclRefExpr 0x55be173e0b00 <col:45> 'T2' lvalue ParmVar 0x55be173b1808 'x2' 'T2 &'
| `-CXXMethodDecl 0x55be1747b178 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, bool, AnnoArg &, int &)'
|   |-TemplateArgument type 'bool'
|   |-TemplateArgument type 'AnnoArg'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55be1747adc8 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55be1747ae68 <col:37, col:39> col:39 parser 'bool':'bool'
|   |-ParmVarDecl 0x55be1747af68 <col:47, col:51> col:51 x1 'AnnoArg &'
|   `-ParmVarDecl 0x55be1747b038 <col:55, col:59> col:59 x2 'int &'
|-FunctionTemplateDecl 0x55be173b1f68 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55be173b1a60 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b1ad8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55be173b1b58 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55be173b1ec8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55be173b1c20 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b1c98 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b1d38 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55be173b1dd8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55be173e0d18 <col:65, line:485:5>
|     `-ReturnStmt 0x55be173e0d08 <line:484:9, col:55>
|       `-CallExpr 0x55be173e0cc0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e0ba0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e0c20 <col:21> 'const char *' lvalue ParmVar 0x55be173b1c20 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e0c40 <col:30> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55be173e0c60 <col:41> 'P' lvalue ParmVar 0x55be173b1c98 'parser' 'P'
|         |-DeclRefExpr 0x55be173e0c80 <col:49> 'T1' lvalue ParmVar 0x55be173b1d38 'x1' 'T1 &'
|         `-DeclRefExpr 0x55be173e0ca0 <col:53> 'T2' lvalue ParmVar 0x55be173b1dd8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55be173b24e8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55be173b1fe0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b2058 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55be173b20d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55be173b2448 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55be173b21a0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b2218 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b22b8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55be173b2358 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55be173e0eb8 <col:65, line:489:5>
|     `-ReturnStmt 0x55be173e0ea8 <line:488:9, col:56>
|       `-CallExpr 0x55be173e0e60 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e0d40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e0dc0 <col:21> 'const char *' lvalue ParmVar 0x55be173b21a0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e0de0 <col:30> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int'
|         |-DeclRefExpr 0x55be173e0e00 <col:42> 'P' lvalue ParmVar 0x55be173b2218 'parser' 'P'
|         |-DeclRefExpr 0x55be173e0e20 <col:50> 'T1' lvalue ParmVar 0x55be173b22b8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55be173e0e40 <col:54> 'T2' lvalue ParmVar 0x55be173b2358 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55be173b2a68 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55be173b2560 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b25d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55be173b2658 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55be173b29c8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55be173b2720 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b2798 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b2838 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55be173b28d8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55be173e1108 <col:66, line:493:5>
|     `-ReturnStmt 0x55be173e10f8 <line:492:9, col:68>
|       `-CallExpr 0x55be173e10b0 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e0ee0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e0f60 <col:21> 'const char *' lvalue ParmVar 0x55be173b2720 'keyword' 'const char *'
|         |-BinaryOperator 0x55be173e1030 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55be173e0fe0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55be173e0fc0 <col:30> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55be173e1018 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55be173e0ff8 <col:42> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55be173e1050 <col:54> 'P' lvalue ParmVar 0x55be173b2798 'parser' 'P'
|         |-DeclRefExpr 0x55be173e1070 <col:62> 'T1' lvalue ParmVar 0x55be173b2838 'x1' 'T1 &'
|         `-DeclRefExpr 0x55be173e1090 <col:66> 'T2' lvalue ParmVar 0x55be173b28d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55be173b7318 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55be173b2ae0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b2b58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55be173b2bd8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55be173b7278 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55be173b2ca0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b6f70 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55be173b6fe8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b7088 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55be173b7128 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55be173e1298 <col:74, line:498:5>
|     |-CallExpr 0x55be173e1210 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173e1120 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55be173e1160 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55be173e1170 <col:30> 'const char *' lvalue ParmVar 0x55be173b2ca0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55be173e1190 <col:39> 'int' lvalue ParmVar 0x55be173b6f70 'flags' 'int'
|     | |-DeclRefExpr 0x55be173e11b0 <col:46> 'P' lvalue ParmVar 0x55be173b6fe8 'parser' 'P'
|     | |-DeclRefExpr 0x55be173e11d0 <col:54> 'T1' lvalue ParmVar 0x55be173b7088 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55be173e11f0 <col:58> 'T2' lvalue ParmVar 0x55be173b7128 'x2' 'T2 &'
|     `-ReturnStmt 0x55be173e1288 <line:497:9, col:17>
|       `-UnaryOperator 0x55be173e1270 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e1260 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173b7678 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55be173b7398 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b75d8 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55be173b7450 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b74c8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55be173e13e0 <col:52, line:509:5>
|     `-ReturnStmt 0x55be173e13d0 <line:508:9, col:44>
|       `-CallExpr 0x55be173e1398 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e12c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1338 <col:26> 'const char *' lvalue ParmVar 0x55be173b7450 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173e1358 <col:35> 'int' 0
|         `-DeclRefExpr 0x55be173e1378 <col:38> 'P' lvalue ParmVar 0x55be173b74c8 'parser' 'P'
|-FunctionTemplateDecl 0x55be173b7978 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55be173b76e0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b78d8 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55be173b7790 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b7808 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55be173e1520 <col:54, line:513:5>
|     `-ReturnStmt 0x55be173e1510 <line:512:9, col:52>
|       `-CallExpr 0x55be173e14d8 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1408 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1478 <col:26> 'const char *' lvalue ParmVar 0x55be173b7790 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e1498 <col:35> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55be173e14b8 <col:46> 'P' lvalue ParmVar 0x55be173b7808 'parser' 'P'
|-FunctionTemplateDecl 0x55be173b7c78 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55be173b79e0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b7bd8 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55be173b7a90 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b7b08 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55be173e1660 <col:54, line:517:5>
|     `-ReturnStmt 0x55be173e1650 <line:516:9, col:53>
|       `-CallExpr 0x55be173e1618 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1548 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e15b8 <col:26> 'const char *' lvalue ParmVar 0x55be173b7a90 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e15d8 <col:35> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int'
|         `-DeclRefExpr 0x55be173e15f8 <col:47> 'P' lvalue ParmVar 0x55be173b7b08 'parser' 'P'
|-FunctionTemplateDecl 0x55be173b7f78 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55be173b7ce0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b7ed8 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55be173b7d90 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b7e08 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55be173e1850 <col:55, line:521:5>
|     `-ReturnStmt 0x55be173e1840 <line:520:9, col:65>
|       `-CallExpr 0x55be173e1808 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1688 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e16f8 <col:26> 'const char *' lvalue ParmVar 0x55be173b7d90 'keyword' 'const char *'
|         |-BinaryOperator 0x55be173e17c8 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55be173e1778 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55be173e1758 <col:35> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55be173e17b0 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55be173e1790 <col:47> 'const int' lvalue Var 0x55be173ac9a0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55be173e17e8 <col:59> 'P' lvalue ParmVar 0x55be173b7e08 'parser' 'P'
|-FunctionTemplateDecl 0x55be173b8348 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55be173b7fe0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b82a8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55be173b8090 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b8110 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55be173b8188 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55be173e1990 <col:63, line:526:5>
|     |-CallExpr 0x55be173e1918 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173e1868 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55be173e18a8 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55be173e18b8 <col:35> 'const char *' lvalue ParmVar 0x55be173b8090 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55be173e18d8 <col:44> 'int' lvalue ParmVar 0x55be173b8110 'flags' 'int'
|     | `-DeclRefExpr 0x55be173e18f8 <col:51> 'P' lvalue ParmVar 0x55be173b8188 'parser' 'P'
|     `-ReturnStmt 0x55be173e1980 <line:525:9, col:17>
|       `-UnaryOperator 0x55be173e1968 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e1958 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173b8798 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55be173b83b8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b8438 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173b86f8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173b84f8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b8570 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b8618 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55be173e1ae8 <col:58, line:541:5>
|     `-ReturnStmt 0x55be173e1ad8 <line:540:9, col:39>
|       `-CallExpr 0x55be173e1aa0 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e19c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1a40 <col:21> 'const char *' lvalue ParmVar 0x55be173b84f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e1a60 <col:30> 'P' lvalue ParmVar 0x55be173b8570 'parser' 'P'
|         `-DeclRefExpr 0x55be173e1a80 <col:38> 'T' lvalue ParmVar 0x55be173b8618 'x' 'T &'
|-FunctionTemplateDecl 0x55be173b8be8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55be173b8808 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b8888 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173b8b48 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173b8948 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b89c0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b8a68 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55be173e1c20 <col:60, line:545:5>
|     `-ReturnStmt 0x55be173e1c10 <line:544:9, col:41>
|       `-CallExpr 0x55be173e1bd8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1b10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1b78 <col:23> 'const char *' lvalue ParmVar 0x55be173b8948 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e1b98 <col:32> 'P' lvalue ParmVar 0x55be173b89c0 'parser' 'P'
|         `-DeclRefExpr 0x55be173e1bb8 <col:40> 'T' lvalue ParmVar 0x55be173b8a68 'x' 'T &'
|-FunctionTemplateDecl 0x55be173b9038 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55be173b8c58 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b8cd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173b8f98 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173b8d98 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b8e10 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b8eb8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55be173e1d58 <col:60, line:549:5>
|     `-ReturnStmt 0x55be173e1d48 <line:548:9, col:41>
|       `-CallExpr 0x55be173e1d10 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1c48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1cb0 <col:23> 'const char *' lvalue ParmVar 0x55be173b8d98 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e1cd0 <col:32> 'P' lvalue ParmVar 0x55be173b8e10 'parser' 'P'
|         `-DeclRefExpr 0x55be173e1cf0 <col:40> 'T' lvalue ParmVar 0x55be173b8eb8 'x' 'T &'
|-FunctionTemplateDecl 0x55be173b9488 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55be173b90a8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b9128 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173b93e8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173b91e8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b9260 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b9308 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55be173e1e90 <col:61, line:553:5>
|     `-ReturnStmt 0x55be173e1e80 <line:552:9, col:42>
|       `-CallExpr 0x55be173e1e48 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1d80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1de8 <col:24> 'const char *' lvalue ParmVar 0x55be173b91e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e1e08 <col:33> 'P' lvalue ParmVar 0x55be173b9260 'parser' 'P'
|         `-DeclRefExpr 0x55be173e1e28 <col:41> 'T' lvalue ParmVar 0x55be173b9308 'x' 'T &'
|-FunctionTemplateDecl 0x55be173b9968 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55be173b94f8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173b9578 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173b98c8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55be173b9638 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b96b8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55be173b9730 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55be173b97d8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55be173e2008 <col:69, line:557:5>
|     `-ReturnStmt 0x55be173e1ff8 <line:556:9, col:46>
|       `-CallExpr 0x55be173e1fb8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e1eb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e1f38 <col:21> 'const char *' lvalue ParmVar 0x55be173b9638 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e1f58 <col:30> 'int' lvalue ParmVar 0x55be173b96b8 'flags' 'int'
|         |-DeclRefExpr 0x55be173e1f78 <col:37> 'P' lvalue ParmVar 0x55be173b9730 'parser' 'P'
|         `-DeclRefExpr 0x55be173e1f98 <col:45> 'T' lvalue ParmVar 0x55be173b97d8 'x' 'T &'
|-FunctionTemplateDecl 0x55be173b9c78 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55be173b99e0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b9bd8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55be173b9a90 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b9b08 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55be173e2148 <col:56, line:571:5>
|     `-ReturnStmt 0x55be173e2138 <line:570:9, col:48>
|       `-CallExpr 0x55be173e2100 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e2030 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e20a0 <col:30> 'const char *' lvalue ParmVar 0x55be173b9a90 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173e20c0 <col:39> 'int' 0
|         `-DeclRefExpr 0x55be173e20e0 <col:42> 'P' lvalue ParmVar 0x55be173b9b08 'parser' 'P'
|-FunctionTemplateDecl 0x55be173ba008 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55be173b9ce0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173b9f68 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55be173b9d90 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173b9e10 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55be173b9e88 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55be173e2318 <col:67, line:576:5>
|     |-CallExpr 0x55be173e22a0 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173e2160 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55be173e21a0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55be173e21b0 <col:39> 'const char *' lvalue ParmVar 0x55be173b9d90 'keyword' 'const char *'
|     | |-BinaryOperator 0x55be173e2260 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55be173e2210 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55be173e21d0 <col:48> 'int' lvalue ParmVar 0x55be173b9e10 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55be173e2248 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55be173e2228 <col:56> 'const int' lvalue Var 0x55be173acb90 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55be173e2280 <col:68> 'P' lvalue ParmVar 0x55be173b9e88 'parser' 'P'
|     `-ReturnStmt 0x55be173e2308 <line:575:9, col:17>
|       `-UnaryOperator 0x55be173e22f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e22e0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173ba458 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55be173ba078 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173ba0f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173ba3b8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55be173ba1b8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ba230 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55be173ba2d8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55be173e2488 <col:62, line:592:5>
|     `-ReturnStmt 0x55be173e2478 <line:591:9, col:51>
|       `-CallExpr 0x55be173e2438 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e2348 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e23b8 <col:30> 'const char *' lvalue ParmVar 0x55be173ba1b8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173e23d8 <col:39> 'int' 0
|         |-DeclRefExpr 0x55be173e23f8 <col:42> 'P' lvalue ParmVar 0x55be173ba230 'parser' 'P'
|         `-DeclRefExpr 0x55be173e2418 <col:50> 'T' lvalue ParmVar 0x55be173ba2d8 'x' 'T &'
|-FunctionTemplateDecl 0x55be173ba938 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55be173ba4c8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173ba548 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173ba898 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55be173ba608 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173ba688 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55be173ba700 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55be173ba7a8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55be173e2680 <col:73, line:597:5>
|     |-CallExpr 0x55be173e2600 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173e24a0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55be173e24e0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55be173e24f0 <col:39> 'const char *' lvalue ParmVar 0x55be173ba608 'keyword' 'const char *'
|     | |-BinaryOperator 0x55be173e25a0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55be173e2550 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55be173e2510 <col:48> 'int' lvalue ParmVar 0x55be173ba688 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55be173e2588 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55be173e2568 <col:56> 'const int' lvalue Var 0x55be173acb90 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55be173e25c0 <col:68> 'P' lvalue ParmVar 0x55be173ba700 'parser' 'P'
|     | `-DeclRefExpr 0x55be173e25e0 <col:76> 'T' lvalue ParmVar 0x55be173ba7a8 'x' 'T &'
|     `-ReturnStmt 0x55be173e2670 <line:596:9, col:17>
|       `-UnaryOperator 0x55be173e2658 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e2648 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173baee8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55be173ba9b0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173baa28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173bae48 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55be173baae8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bab60 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55be173bad20 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55be173e27f0 <col:65, line:614:5>
|     `-ReturnStmt 0x55be173e27e0 <line:613:9, col:46>
|       `-CallExpr 0x55be173e27a0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e26b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e2720 <col:25> 'const char *' lvalue ParmVar 0x55be173baae8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173e2740 <col:34> 'int' 0
|         |-DeclRefExpr 0x55be173e2760 <col:37> 'P' lvalue ParmVar 0x55be173bab60 'parser' 'P'
|         `-DeclRefExpr 0x55be173e2780 <col:45> 'Vector<T>' lvalue ParmVar 0x55be173bad20 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55be173bb318 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55be173baf58 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173bb278 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55be173bb010 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bb160 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55be173e2a10 <col:55, line:618:5>
|     `-ReturnStmt 0x55be173e2a00 <line:617:9, col:55>
|       `-CallExpr 0x55be173e29c0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e2818 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e2888 <col:25> 'const char *' lvalue ParmVar 0x55be173bb010 'keyword' 'const char *'
|         |-IntegerLiteral 0x55be173e28a8 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55be173e2980 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55be173e29a0 <col:54> 'Vector<T>' lvalue ParmVar 0x55be173bb160 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55be173bb8e8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55be173bb380 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173bb3f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173bb848 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55be173bb4b8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bb538 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55be173bb5b0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55be173bb700 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55be173e2c08 <col:76, line:623:5>
|     |-CallExpr 0x55be173e2b88 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55be173e2a28 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55be173e2a68 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55be173e2a78 <col:34> 'const char *' lvalue ParmVar 0x55be173bb4b8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55be173e2b28 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55be173e2ad8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55be173e2a98 <col:43> 'int' lvalue ParmVar 0x55be173bb538 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55be173e2b10 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55be173e2af0 <col:51> 'const int' lvalue Var 0x55be173acb90 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55be173e2b48 <col:63> 'P' lvalue ParmVar 0x55be173bb5b0 'parser' 'P'
|     | `-DeclRefExpr 0x55be173e2b68 <col:71> 'Vector<T>' lvalue ParmVar 0x55be173bb700 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55be173e2bf8 <line:622:9, col:17>
|       `-UnaryOperator 0x55be173e2be0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e2bd0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173bbe28 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55be173bb960 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173bb9d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173bbd88 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55be173bba98 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bbb18 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55be173bbc60 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55be173e2e70 <col:66, line:627:5>
|     `-ReturnStmt 0x55be173e2e60 <line:626:9, col:59>
|       `-CallExpr 0x55be173e2e20 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55be173e2c38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55be173e2ca8 <col:25> 'const char *' lvalue ParmVar 0x55be173bba98 'keyword' 'const char *'
|         |-DeclRefExpr 0x55be173e2cc8 <col:34> 'int' lvalue ParmVar 0x55be173bbb18 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55be173e2de0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55be173e2e00 <col:58> 'Vector<T>' lvalue ParmVar 0x55be173bbc60 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55be173bbeb8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55be173e2ef0 <col:25, line:633:5>
|   `-ReturnStmt 0x55be173e2ee0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55be173e2ec8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55be173e2e98 <col:16> 'const bool' lvalue ->_status 0x55be173ca658
|         `-CXXThisExpr 0x55be173e2e88 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55be173bc038 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55be173bbf70 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55be173e2fd8 <col:27, line:639:5>
|   |-BinaryOperator 0x55be173e2f80 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55be173e2f08 <col:9> 'bool' lvalue ParmVar 0x55be173bbf70 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55be173e2f68 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55be173e2f38 <col:13> 'bool' lvalue ->_status 0x55be173ca658
|   |     `-CXXThisExpr 0x55be173e2f28 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55be173e2fc8 <line:638:9, col:17>
|     `-UnaryOperator 0x55be173e2fb0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be173e2fa0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55be173bc1b8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55be173bc0f8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55be173e30c8 <col:39, line:644:5>
|   |-BinaryOperator 0x55be173e3070 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55be173e2ff8 <col:9> 'bool' lvalue ParmVar 0x55be173bc0f8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55be173e3058 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55be173e3028 <col:13> 'const bool' lvalue ->_status 0x55be173ca658
|   |     `-CXXThisExpr 0x55be173e3018 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55be173e30b8 <line:643:9, col:17>
|     `-UnaryOperator 0x55be173e30a0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be173e3090 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55be173bc280 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55be173e3170 <col:30, line:651:5>
|   `-ReturnStmt 0x55be173e3160 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55be173e3148 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55be173e3118 <col:16> 'bool' lvalue ->_read_status 0x55be173a5340
|         `-ImplicitCastExpr 0x55be173e30f8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55be173e30e8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55be173bc3c8 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55be173bc338 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55be173e3278 <col:32, line:658:5>
|   |-BinaryOperator 0x55be173e3220 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55be173e3188 <col:9> 'bool' lvalue ParmVar 0x55be173bc338 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55be173e3208 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55be173e31d8 <col:13> 'bool' lvalue ->_read_status 0x55be173a5340
|   |     `-ImplicitCastExpr 0x55be173e31b8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55be173e31a8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55be173e3268 <line:657:9, col:17>
|     `-UnaryOperator 0x55be173e3250 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be173e3240 <col:17> 'Args *' this
|-CXXMethodDecl 0x55be173bc518 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55be173bc488 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55be173e3388 <col:44, line:663:5>
|   |-BinaryOperator 0x55be173e3330 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55be173e3298 <col:9> 'bool' lvalue ParmVar 0x55be173bc488 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55be173e3318 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55be173e32e8 <col:13> 'bool' lvalue ->_read_status 0x55be173a5340
|   |     `-ImplicitCastExpr 0x55be173e32c8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55be173e32b8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55be173e3378 <line:662:9, col:17>
|     `-UnaryOperator 0x55be173e3360 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55be173e3350 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55be173bc5e0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55be173bc6a8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55be173bc770 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x55be173bc838 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x55be173bcb48 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55be173bc8d8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173bcaa8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55be173bc9b8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55be173e3748 <col:19, line:706:5>
|     `-IfStmt 0x55be173e3720 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55be173e3488 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55be173e3650 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55be173e3620 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55be173e35e0 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55be173e34e0 <col:42> '<bound member function type>' ->simple_slot 0x55be173dcce0
|       |     | `-CXXThisExpr 0x55be173e34d0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55be173e3580 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55be173e3530 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55be17317480 0x55be1705dd68
|       |     | `-DeclRefExpr 0x55be173e3510 <col:55> 'T' lvalue ParmVar 0x55be173bc9b8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55be173e35c0 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55be173e3710 <line:705:13, col:34>
|         `-CallExpr 0x55be173e36e8 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55be173e3670 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55be173e36c8 <col:33> 'T' lvalue ParmVar 0x55be173bc9b8 'x' 'T &'
|-FunctionTemplateDecl 0x55be173bce18 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55be173bcba8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173bcd78 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55be173bcc88 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55be173e3b20 <col:31, line:717:5>
|     |-DeclStmt 0x55be173e3888 <line:713:9, col:23>
|     | `-VarDecl 0x55be173e3770 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55be173e3860 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55be173e37e8 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55be173e3840 <col:21> 'T' lvalue ParmVar 0x55be173bcc88 'x' 'T &'
|     |-IfStmt 0x55be173e3ad0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55be173e3978 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55be173e3ab0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55be173e3a50 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55be173e39e0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|     |   | `-DeclRefExpr 0x55be173e39c0 <col:14> 'T *' lvalue Var 0x55be173e3770 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55be173e3a90 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55be173e3b08 <line:716:9, col:16>
|       `-DeclRefExpr 0x55be173e3ae8 <col:16> 'T *' lvalue Var 0x55be173e3770 's' 'T *'
|-FunctionTemplateDecl 0x55be173bd228 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55be173bce78 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55be173bcef8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55be173bd188 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55be173bcfd8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55be173bd078 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55be173e3e30 <col:37, line:726:5>
|     |-IfStmt 0x55be173e3dc0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55be173e3de0 <line:723:13, col:26>
|     | | `-VarDecl 0x55be173e3b88 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55be173e3c78 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55be173e3c00 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55be173e3c58 <col:25> 'T' lvalue ParmVar 0x55be173bcfd8 'x' 'T &'
|     | |-DeclRefExpr 0x55be173e3ca0 <col:16> 'T *' lvalue Var 0x55be173e3b88 's' 'T *'
|     | `-BinaryOperator 0x55be173e3da0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55be173e3d50 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55be173e3ce0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|     |   | `-DeclRefExpr 0x55be173e3cc0 <col:14> 'T *' lvalue Var 0x55be173e3b88 's' 'T *'
|     |   `-DeclRefExpr 0x55be173e3d80 <col:18> 'const V' lvalue ParmVar 0x55be173bd078 'value' 'const V &'
|     `-ReturnStmt 0x55be173e3e20 <line:725:9, col:17>
|       `-UnaryOperator 0x55be173e3e08 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55be173e3df8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55be173bd628 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55be173bd290 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55be173bd588 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55be173bd340 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bd3c0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55be173bd468 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55be173e4c50 <col:65, line:737:5>
|     |-DeclStmt 0x55be173e3ec8 <line:732:9, col:26>
|     | `-VarDecl 0x55be173e3e60 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55be173e4c18 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55be173e4c38 <line:733:13, col:58>
|       | `-VarDecl 0x55be173e3ef0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55be173e40d0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55be173e40a0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55be173e4088 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55be173e4068 <col:26, col:58> 'String' (CXXTemporary 0x55be173e4068)
|       |           `-CXXMemberCallExpr 0x55be173e3ff8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55be173e3f68 <col:26> '<bound member function type>' ->find 0x55be173dc2f8
|       |             | `-CXXThisExpr 0x55be173e3f58 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55be173e4030 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173e3f98 <col:31> 'const char *' lvalue ParmVar 0x55be173bd340 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55be173e4048 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173e3fb8 <col:40> 'int' lvalue ParmVar 0x55be173bd3c0 'flags' 'int'
|       |             `-DeclRefExpr 0x55be173e3fd8 <col:47> 'Args::Slot *' lvalue Var 0x55be173e3e60 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55be173e4188 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55be173e4170 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55be173e4150 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55be173e4120 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |       `-ImplicitCastExpr 0x55be173e4108 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55be173e40e8 <col:20> 'String' lvalue Var 0x55be173e3ef0 'str' 'String'
|       `-CompoundStmt 0x55be173e4bf8 <col:61, line:736:9>
|         |-DeclStmt 0x55be173e4640 <line:734:13, col:76>
|         | `-VarDecl 0x55be173e41d8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55be173e4610 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55be173e4580 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55be173e45c8 <col:60> 'T' lvalue ParmVar 0x55be173bd468 'variable' 'T &'
|         |     `-UnaryOperator 0x55be173e45f8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55be173e45e8 <col:71> 'Args *' this
|         `-CallExpr 0x55be173e4bc8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55be173e4668 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|           | `-CXXThisExpr 0x55be173e4658 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55be173e4b88 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55be173e4698 <col:23> 'T *' lvalue Var 0x55be173e41d8 's' 'T *'
|           | `-CallExpr 0x55be173e4b48 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55be173e4920 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55be173e4a20 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55be173e4a40 <col:86> 'String' lvalue Var 0x55be173e3ef0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55be173e4af0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55be173e4a80 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|           |   | `-DeclRefExpr 0x55be173e4a60 <col:92> 'T *' lvalue Var 0x55be173e41d8 's' 'T *'
|           |   `-UnaryOperator 0x55be173e4b30 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55be173e4b20 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55be173e4ba8 <col:103> 'Args::Slot *' lvalue Var 0x55be173e3e60 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55be173bdb78 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55be173bd698 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55be173bd718 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55be173bdad8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55be173bd7d8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bd858 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55be173bd8f8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55be173bd998 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55be173e5af0 <col:88, line:745:5>
|     |-DeclStmt 0x55be173e4ce8 <line:741:9, col:26>
|     | `-VarDecl 0x55be173e4c80 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55be173e4f08 <line:742:9, col:55>
|     | `-VarDecl 0x55be173e4d10 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55be173e4ef0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55be173e4ec0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55be173e4ea8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55be173e4e88 <col:22, col:54> 'String' (CXXTemporary 0x55be173e4e88)
|     |           `-CXXMemberCallExpr 0x55be173e4e18 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55be173e4d88 <col:22> '<bound member function type>' ->find 0x55be173dc2f8
|     |             | `-CXXThisExpr 0x55be173e4d78 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55be173e4e50 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55be173e4db8 <col:27> 'const char *' lvalue ParmVar 0x55be173bd7d8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55be173e4e68 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55be173e4dd8 <col:36> 'int' lvalue ParmVar 0x55be173bd858 'flags' 'int'
|     |             `-DeclRefExpr 0x55be173e4df8 <col:43> 'Args::Slot *' lvalue Var 0x55be173e4c80 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55be173e52e0 <line:743:9, col:72>
|     | `-VarDecl 0x55be173e4f58 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55be173e52b0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55be173e5220 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55be173e5268 <col:56> 'T' lvalue ParmVar 0x55be173bd8f8 'variable' 'T &'
|     |     `-UnaryOperator 0x55be173e5298 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55be173e5288 <col:67> 'Args *' this
|     `-CallExpr 0x55be173e5ac0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55be173e5308 <col:9> '<bound member function type>' ->postparse 0x55be173dc508
|       | `-CXXThisExpr 0x55be173e52f8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55be173e5a80 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55be173e5338 <col:19> 'T *' lvalue Var 0x55be173e4f58 's' 'T *'
|       | `-ParenExpr 0x55be173e5a60 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55be173e5a30 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55be173e5a18 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55be173e5a00 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55be173e59e0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55be173e59b0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |     |       `-ImplicitCastExpr 0x55be173e5998 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55be173e5358 <col:25> 'String' lvalue Var 0x55be173e4d10 'str' 'String'
|       |     |-CallExpr 0x55be173e5808 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55be173e55e0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55be173e56e0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55be173e5700 <col:89> 'String' lvalue Var 0x55be173e4d10 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55be173e57b0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55be173e5740 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|       |     | | `-DeclRefExpr 0x55be173e5720 <col:95> 'T *' lvalue Var 0x55be173e4f58 's' 'T *'
|       |     | `-UnaryOperator 0x55be173e57f0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55be173e57e0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55be173e5978 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55be173e5958 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55be173e5928 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55be173e58d8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55be173e5868 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|       |         | | `-DeclRefExpr 0x55be173e5848 <col:109> 'T *' lvalue Var 0x55be173e4f58 's' 'T *'
|       |         | `-DeclRefExpr 0x55be173e5908 <col:113> 'const V' lvalue ParmVar 0x55be173bd998 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55be173e5948 <col:120> 'bool' true
|       `-DeclRefExpr 0x55be173e5aa0 <col:128> 'Args::Slot *' lvalue Var 0x55be173e4c80 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55be173be0a8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55be173bdbf0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173bdc68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173be008 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55be173bdd28 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173bdda8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55be173bde20 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55be173bdec8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55be173e66e8 <col:75, line:754:5>
|     |-DeclStmt 0x55be173e5b98 <line:749:9, col:26>
|     | `-VarDecl 0x55be173e5b30 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55be173e66b0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55be173e66d0 <line:750:13, col:58>
|       | `-VarDecl 0x55be173e5bc0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55be173e5da0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55be173e5d70 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55be173e5d58 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55be173e5d38 <col:26, col:58> 'String' (CXXTemporary 0x55be173e5d38)
|       |           `-CXXMemberCallExpr 0x55be173e5cc8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55be173e5c38 <col:26> '<bound member function type>' ->find 0x55be173dc2f8
|       |             | `-CXXThisExpr 0x55be173e5c28 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55be173e5d00 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173e5c68 <col:31> 'const char *' lvalue ParmVar 0x55be173bdd28 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55be173e5d18 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173e5c88 <col:40> 'int' lvalue ParmVar 0x55be173bdda8 'flags' 'int'
|       |             `-DeclRefExpr 0x55be173e5ca8 <col:47> 'Args::Slot *' lvalue Var 0x55be173e5b30 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55be173e5e58 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55be173e5e40 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55be173e5e20 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55be173e5df0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |       `-ImplicitCastExpr 0x55be173e5dd8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55be173e5db8 <col:20> 'String' lvalue Var 0x55be173e5bc0 'str' 'String'
|       `-CompoundStmt 0x55be173e6690 <col:61, line:753:9>
|         |-DeclStmt 0x55be173e6230 <line:751:13, col:63>
|         | `-VarDecl 0x55be173e5ea8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55be173e6200 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55be173e6170 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55be173e61b8 <col:47> 'T' lvalue ParmVar 0x55be173bdec8 'variable' 'T &'
|         |     `-UnaryOperator 0x55be173e61e8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55be173e61d8 <col:58> 'Args *' this
|         `-CallExpr 0x55be173e6660 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55be173e6258 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|           | `-CXXThisExpr 0x55be173e6248 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55be173e6620 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55be173e6288 <col:23> 'T *' lvalue Var 0x55be173e5ea8 's' 'T *'
|           | `-CallExpr 0x55be173e65e0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55be173e6470 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55be173e64b8 <col:56> 'P' lvalue ParmVar 0x55be173bde20 'parser' 'P'
|           |   |-DeclRefExpr 0x55be173e64d8 <col:64> 'String' lvalue Var 0x55be173e5bc0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55be173e6588 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55be173e6518 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|           |   | `-DeclRefExpr 0x55be173e64f8 <col:70> 'T *' lvalue Var 0x55be173e5ea8 's' 'T *'
|           |   `-UnaryOperator 0x55be173e65c8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55be173e65b8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55be173e6640 <col:81> 'Args::Slot *' lvalue Var 0x55be173e5b30 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55be173be708 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55be173be120 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55be173be198 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55be173be218 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55be173be668 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55be173be2e0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173be360 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55be173be3d8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55be173be478 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55be173be518 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55be173e7478 <col:98, line:762:5>
|     |-DeclStmt 0x55be173e6780 <line:758:9, col:26>
|     | `-VarDecl 0x55be173e6718 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55be173e69a0 <line:759:9, col:55>
|     | `-VarDecl 0x55be173e67a8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55be173e6988 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55be173e6958 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55be173e6940 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55be173e6920 <col:22, col:54> 'String' (CXXTemporary 0x55be173e6920)
|     |           `-CXXMemberCallExpr 0x55be173e68b0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55be173e6820 <col:22> '<bound member function type>' ->find 0x55be173dc2f8
|     |             | `-CXXThisExpr 0x55be173e6810 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55be173e68e8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55be173e6850 <col:27> 'const char *' lvalue ParmVar 0x55be173be2e0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55be173e6900 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55be173e6870 <col:36> 'int' lvalue ParmVar 0x55be173be360 'flags' 'int'
|     |             `-DeclRefExpr 0x55be173e6890 <col:43> 'Args::Slot *' lvalue Var 0x55be173e6718 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55be173e6dc0 <line:760:9, col:59>
|     | `-VarDecl 0x55be173e69f8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55be173e6d90 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55be173e6d00 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55be173e6d48 <col:43> 'T' lvalue ParmVar 0x55be173be478 'variable' 'T &'
|     |     `-UnaryOperator 0x55be173e6d78 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55be173e6d68 <col:54> 'Args *' this
|     `-CallExpr 0x55be173e7448 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55be173e6de8 <col:9> '<bound member function type>' ->postparse 0x55be173dc508
|       | `-CXXThisExpr 0x55be173e6dd8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55be173e7408 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55be173e6e18 <col:19> 'T *' lvalue Var 0x55be173e69f8 's' 'T *'
|       | `-ParenExpr 0x55be173e73e8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55be173e73b8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55be173e73a0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55be173e7388 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55be173e7368 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55be173e7338 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |     |       `-ImplicitCastExpr 0x55be173e7320 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55be173e6e38 <col:25> 'String' lvalue Var 0x55be173e67a8 'str' 'String'
|       |     |-CallExpr 0x55be173e7190 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55be173e7020 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55be173e7068 <col:59> 'P' lvalue ParmVar 0x55be173be3d8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55be173e7088 <col:67> 'String' lvalue Var 0x55be173e67a8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55be173e7138 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55be173e70c8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|       |     | | `-DeclRefExpr 0x55be173e70a8 <col:73> 'T *' lvalue Var 0x55be173e69f8 's' 'T *'
|       |     | `-UnaryOperator 0x55be173e7178 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55be173e7168 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55be173e7300 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55be173e72e0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55be173e72b0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55be173e7260 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55be173e71f0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|       |         | | `-DeclRefExpr 0x55be173e71d0 <col:87> 'T *' lvalue Var 0x55be173e69f8 's' 'T *'
|       |         | `-DeclRefExpr 0x55be173e7290 <col:91> 'const V' lvalue ParmVar 0x55be173be518 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55be173e72d0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55be173e7428 <col:106> 'Args::Slot *' lvalue Var 0x55be173e6718 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55be173bed78 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55be173be788 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173be808 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55be173be888 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55be173becd8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55be173be950 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173be9d0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55be173bea48 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55be173beae8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55be173beb88 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55be173ea7f8 <col:60, line:773:5>
|     |-DeclStmt 0x55be173e7520 <line:767:9, col:26>
|     | `-VarDecl 0x55be173e74b8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55be173ea7c0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55be173ea7e0 <line:768:13, col:58>
|       | `-VarDecl 0x55be173e98f0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55be173e9ad0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55be173e9aa0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55be173e9a88 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55be173e9a68 <col:26, col:58> 'String' (CXXTemporary 0x55be173e9a68)
|       |           `-CXXMemberCallExpr 0x55be173e99f8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55be173e9968 <col:26> '<bound member function type>' ->find 0x55be173dc2f8
|       |             | `-CXXThisExpr 0x55be173e9958 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55be173e9a30 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173e9998 <col:31> 'const char *' lvalue ParmVar 0x55be173be950 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55be173e9a48 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173e99b8 <col:40> 'int' lvalue ParmVar 0x55be173be9d0 'flags' 'int'
|       |             `-DeclRefExpr 0x55be173e99d8 <col:47> 'Args::Slot *' lvalue Var 0x55be173e74b8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55be173e9b88 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55be173e9b70 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55be173e9b50 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55be173e9b20 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |       `-ImplicitCastExpr 0x55be173e9b08 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55be173e9ae8 <col:20> 'String' lvalue Var 0x55be173e98f0 'str' 'String'
|       `-CompoundStmt 0x55be173ea798 <col:61, line:772:9>
|         |-DeclStmt 0x55be173e9ec0 <line:769:13, col:66>
|         | `-VarDecl 0x55be173e9bd8 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55be173e9e90 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55be173e9e00 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55be173e9e48 <col:49> 'T1' lvalue ParmVar 0x55be173beae8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55be173e9e78 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55be173e9e68 <col:61> 'Args *' this
|         |-DeclStmt 0x55be173ea230 <line:770:13, col:66>
|         | `-VarDecl 0x55be173e9f48 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55be173ea200 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55be173ea170 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55be173ea1b8 <col:49> 'T2' lvalue ParmVar 0x55be173beb88 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55be173ea1e8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55be173ea1d8 <col:61> 'Args *' this
|         `-CallExpr 0x55be173ea768 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55be173ea258 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|           | `-CXXThisExpr 0x55be173ea248 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55be173ea728 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55be173ea2c8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55be173ea288 <col:23> 'T1 *' lvalue Var 0x55be173e9bd8 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55be173ea2a8 <col:29> 'T2 *' lvalue Var 0x55be173e9f48 's2' 'T2 *'
|           | `-CallExpr 0x55be173ea6e0 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55be173ea4b0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55be173ea4f8 <col:63> 'P' lvalue ParmVar 0x55be173bea48 'parser' 'P'
|           |   |-DeclRefExpr 0x55be173ea518 <col:71> 'String' lvalue Var 0x55be173e98f0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55be173ea5c8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55be173ea558 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|           |   | `-DeclRefExpr 0x55be173ea538 <col:77> 'T1 *' lvalue Var 0x55be173e9bd8 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55be173ea688 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55be173ea618 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|           |   | `-DeclRefExpr 0x55be173ea5f8 <col:82> 'T2 *' lvalue Var 0x55be173e9f48 's2' 'T2 *'
|           |   `-UnaryOperator 0x55be173ea6c8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55be173ea6b8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55be173ea748 <col:94> 'Args::Slot *' lvalue Var 0x55be173e74b8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55be173c7ac8 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55be173bedf8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173c7a28 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55be173beeb0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173c7890 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55be173c7908 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55be173ead10 <col:67, line:780:5>
|     |-DeclStmt 0x55be173ea890 <line:777:9, col:26>
|     | `-VarDecl 0x55be173ea828 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55be173eacd8 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55be173eacf8 <line:778:13, col:58>
|       | `-VarDecl 0x55be173ea8b8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55be173eaa98 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55be173eaa68 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55be173eaa50 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55be173eaa30 <col:26, col:58> 'String' (CXXTemporary 0x55be173eaa30)
|       |           `-CXXMemberCallExpr 0x55be173ea9c0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55be173ea930 <col:26> '<bound member function type>' ->find 0x55be173dc2f8
|       |             | `-CXXThisExpr 0x55be173ea920 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55be173ea9f8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173ea960 <col:31> 'const char *' lvalue ParmVar 0x55be173beeb0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55be173eaa10 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55be173ea980 <col:40> 'int' lvalue ParmVar 0x55be173c7890 'flags' 'int'
|       |             `-DeclRefExpr 0x55be173ea9a0 <col:47> 'Args::Slot *' lvalue Var 0x55be173ea828 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55be173eab50 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55be173eab38 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55be173eab18 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55be173eaae8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|       |       `-ImplicitCastExpr 0x55be173eaad0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55be173eaab0 <col:20> 'String' lvalue Var 0x55be173ea8b8 'str' 'String'
|       `-CallExpr 0x55be173eaca8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55be173eab78 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|         | `-CXXThisExpr 0x55be173eab68 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55be173eac58 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55be173eabc8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55be173eaba8 <col:23> 'P' lvalue ParmVar 0x55be173c7908 'parser' 'P'
|         | |-DeclRefExpr 0x55be173eac10 <col:36> 'String' lvalue Var 0x55be173ea8b8 'str' 'String'
|         | `-UnaryOperator 0x55be173eac40 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55be173eac30 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55be173eac88 <col:49> 'Args::Slot *' lvalue Var 0x55be173ea828 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55be173c7e68 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55be173c7b38 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55be173c7dc8 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55be173c7bf0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173c7c70 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55be173c7ce8 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55be173eb680 <col:71, line:792:5>
|     |-DeclStmt 0x55be173eada8 <line:784:9, col:26>
|     | `-VarDecl 0x55be173ead40 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55be173eae78 <line:785:9, col:29>
|     | `-VarDecl 0x55be173eadd8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55be173eae60 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55be173eae40 <col:28> 'int' 1
|     |-WhileStmt 0x55be173eb530 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55be173eb550 <line:786:16, col:61>
|     | | `-VarDecl 0x55be173eaea0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55be173eb080 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55be173eb050 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55be173eb038 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55be173eb018 <col:29, col:61> 'String' (CXXTemporary 0x55be173eb018)
|     | |           `-CXXMemberCallExpr 0x55be173eafa8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55be173eaf18 <col:29> '<bound member function type>' ->find 0x55be173dc2f8
|     | |             | `-CXXThisExpr 0x55be173eaf08 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55be173eafe0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55be173eaf48 <col:34> 'const char *' lvalue ParmVar 0x55be173c7bf0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55be173eaff8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55be173eaf68 <col:43> 'int' lvalue ParmVar 0x55be173c7c70 'flags' 'int'
|     | |             `-DeclRefExpr 0x55be173eaf88 <col:50> 'Args::Slot *' lvalue Var 0x55be173ead40 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55be173eb138 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55be173eb120 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55be173eb100 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55be173eb0d0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|     | |       `-ImplicitCastExpr 0x55be173eb0b8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55be173eb098 <col:23> 'String' lvalue Var 0x55be173eaea0 'str' 'String'
|     | `-CompoundStmt 0x55be173eb508 <col:64, line:790:9>
|     |   |-CallExpr 0x55be173eb290 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55be173eb160 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|     |   | | `-CXXThisExpr 0x55be173eb150 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55be173eb240 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55be173eb1b0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55be173eb190 <col:23> 'P' lvalue ParmVar 0x55be173c7ce8 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55be173eb1f8 <col:36> 'String' lvalue Var 0x55be173eaea0 'str' 'String'
|     |   | | `-UnaryOperator 0x55be173eb228 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55be173eb218 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55be173eb270 <col:49> 'Args::Slot *' lvalue Var 0x55be173ead40 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55be173eb428 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55be173eb2c0 <col:13> 'int' lvalue Var 0x55be173eadd8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55be173eb410 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55be173eb3f0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55be173eb358 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55be173eb338 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55be173eb320 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55be173eb2e0 <col:28> 'int' lvalue Var 0x55be173eadd8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55be173eb300 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55be173eb3d8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55be173eb3a8 <col:49> 'bool' lvalue ->_read_status 0x55be173a5340
|     |   |         `-ImplicitCastExpr 0x55be173eb388 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55be173eb378 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55be173eb4d8 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55be173eb448 <col:13> 'int' lvalue ParmVar 0x55be173c7c70 'flags' 'int'
|     |     `-UnaryOperator 0x55be173eb4c0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55be173eb4a8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55be173eb488 <col:23> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55be173eb660 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55be173eb598 <col:9> 'bool' lvalue ->_read_status 0x55be173a5340
|       | `-ImplicitCastExpr 0x55be173eb578 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55be173eb568 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55be173eb640 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55be173eb620 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55be173eb608 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55be173eb5c8 <col:25> 'int' lvalue Var 0x55be173eadd8 'read_status' 'int'
|           `-IntegerLiteral 0x55be173eb5e8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55be173c8348 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55be173c7ed8 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173c7f58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173c82a8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55be173c8018 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173c8098 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55be173c8110 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55be173c81b8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55be173ec610 <col:84, line:805:5>
|     |-DeclStmt 0x55be173eb728 <line:796:9, col:26>
|     | `-VarDecl 0x55be173eb6c0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55be173eb7f8 <line:797:9, col:29>
|     | `-VarDecl 0x55be173eb758 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55be173eb7e0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55be173eb7c0 <col:28> 'int' 1
|     |-DeclStmt 0x55be173ebb30 <line:798:9, col:71>
|     | `-VarDecl 0x55be173eb848 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55be173ebb00 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55be173eba70 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55be173ebab8 <col:55> 'T' lvalue ParmVar 0x55be173c81b8 'variable' 'T &'
|     |     `-UnaryOperator 0x55be173ebae8 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55be173ebad8 <col:66> 'Args *' this
|     |-WhileStmt 0x55be173ec4c0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55be173ec4e0 <line:799:16, col:61>
|     | | `-VarDecl 0x55be173ebb58 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55be173ebd38 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55be173ebd08 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55be173ebcf0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55be173ebcd0 <col:29, col:61> 'String' (CXXTemporary 0x55be173ebcd0)
|     | |           `-CXXMemberCallExpr 0x55be173ebc60 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55be173ebbd0 <col:29> '<bound member function type>' ->find 0x55be173dc2f8
|     | |             | `-CXXThisExpr 0x55be173ebbc0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55be173ebc98 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55be173ebc00 <col:34> 'const char *' lvalue ParmVar 0x55be173c8018 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55be173ebcb0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55be173ebc20 <col:43> 'int' lvalue ParmVar 0x55be173c8098 'flags' 'int'
|     | |             `-DeclRefExpr 0x55be173ebc40 <col:50> 'Args::Slot *' lvalue Var 0x55be173eb6c0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55be173ebdf0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55be173ebdd8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55be173ebdb8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55be173ebd88 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|     | |       `-ImplicitCastExpr 0x55be173ebd70 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55be173ebd50 <col:23> 'String' lvalue Var 0x55be173ebb58 'str' 'String'
|     | `-CompoundStmt 0x55be173ec498 <col:64, line:803:9>
|     |   |-CallExpr 0x55be173ec220 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55be173ebe18 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|     |   | | `-CXXThisExpr 0x55be173ebe08 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55be173ec1e0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55be173ebe48 <col:23> 'T *' lvalue Var 0x55be173eb848 's' 'T *'
|     |   | | `-CallExpr 0x55be173ec1a0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55be173ec030 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55be173ec078 <col:56> 'P' lvalue ParmVar 0x55be173c8110 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55be173ec098 <col:64> 'String' lvalue Var 0x55be173ebb58 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55be173ec148 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55be173ec0d8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|     |   | |   | `-DeclRefExpr 0x55be173ec0b8 <col:70> 'T *' lvalue Var 0x55be173eb848 's' 'T *'
|     |   | |   `-UnaryOperator 0x55be173ec188 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55be173ec178 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55be173ec200 <col:81> 'Args::Slot *' lvalue Var 0x55be173eb6c0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55be173ec3b8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55be173ec250 <col:13> 'int' lvalue Var 0x55be173eb758 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55be173ec3a0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55be173ec380 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55be173ec2e8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55be173ec2c8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55be173ec2b0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55be173ec270 <col:28> 'int' lvalue Var 0x55be173eb758 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55be173ec290 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55be173ec368 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55be173ec338 <col:49> 'bool' lvalue ->_read_status 0x55be173a5340
|     |   |         `-ImplicitCastExpr 0x55be173ec318 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55be173ec308 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55be173ec468 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55be173ec3d8 <col:13> 'int' lvalue ParmVar 0x55be173c8098 'flags' 'int'
|     |     `-UnaryOperator 0x55be173ec450 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55be173ec438 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55be173ec418 <col:23> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55be173ec5f0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55be173ec528 <col:9> 'bool' lvalue ->_read_status 0x55be173a5340
|       | `-ImplicitCastExpr 0x55be173ec508 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55be173ec4f8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55be173ec5d0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55be173ec5b0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55be173ec598 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55be173ec558 <col:25> 'int' lvalue Var 0x55be173eb758 'read_status' 'int'
|           `-IntegerLiteral 0x55be173ec578 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55be173c8928 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55be173c83c0 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55be173c8438 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55be173c8888 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55be173c84f8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55be173c8578 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55be173c85f0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55be173c8740 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55be173ed418 <col:87, line:821:5>
|     |-DeclStmt 0x55be173ec6c0 <line:809:9, col:26>
|     | `-VarDecl 0x55be173ec658 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55be173ec790 <line:810:9, col:29>
|     | `-VarDecl 0x55be173ec6f0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55be173ec778 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55be173ec758 <col:28> 'int' 1
|     |-DeclStmt 0x55be173ec9d8 <line:811:9, col:38>
|     | `-VarDecl 0x55be173ec8c0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55be173ec9b0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55be173ec938 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55be173ec990 <col:29> 'Vector<T>' lvalue ParmVar 0x55be173c8740 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55be173ed2c8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55be173ed2e8 <line:812:16, col:61>
|     | | `-VarDecl 0x55be173eca00 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55be173ecbe0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55be173ecbb0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55be173ecb98 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55be173ecb78 <col:29, col:61> 'String' (CXXTemporary 0x55be173ecb78)
|     | |           `-CXXMemberCallExpr 0x55be173ecb08 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55be173eca78 <col:29> '<bound member function type>' ->find 0x55be173dc2f8
|     | |             | `-CXXThisExpr 0x55be173eca68 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55be173ecb40 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55be173ecaa8 <col:34> 'const char *' lvalue ParmVar 0x55be173c84f8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55be173ecb58 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55be173ecac8 <col:43> 'int' lvalue ParmVar 0x55be173c8578 'flags' 'int'
|     | |             `-DeclRefExpr 0x55be173ecae8 <col:50> 'Args::Slot *' lvalue Var 0x55be173ec658 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55be173ecc98 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55be173ecc80 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55be173ecc60 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55be173ecc30 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55be170206e8
|     | |       `-ImplicitCastExpr 0x55be173ecc18 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55be173ecbf8 <col:23> 'String' lvalue Var 0x55be173eca00 'str' 'String'
|     | `-CompoundStmt 0x55be173ed290 <col:64, line:819:9>
|     |   |-DeclStmt 0x55be173ecd58 <line:813:13, col:23>
|     |   | `-VarDecl 0x55be173eccc0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55be173ecd38 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55be173eced8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55be173ecd80 <col:13> '<bound member function type>' ->postparse 0x55be173dc508
|     |   | | `-CXXThisExpr 0x55be173ecd70 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55be173ece80 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55be173ecdd0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55be173ecdb0 <col:23> 'P' lvalue ParmVar 0x55be173c85f0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55be173ece18 <col:36> 'String' lvalue Var 0x55be173eca00 'str' 'String'
|     |   | | |-DeclRefExpr 0x55be173ece38 <col:41> 'T' lvalue Var 0x55be173eccc0 'sx' 'T'
|     |   | | `-UnaryOperator 0x55be173ece68 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55be173ece58 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55be173eceb8 <col:53> 'Args::Slot *' lvalue Var 0x55be173ec658 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55be173ed030 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55be173ecf68 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55be173ecf38 <col:17> 'bool' lvalue ->_read_status 0x55be173a5340
|     |   | |   `-ImplicitCastExpr 0x55be173ecf18 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55be173ecf08 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55be173ed008 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55be173ecfa0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55be173ecf80 <col:17> 'Vector<T> *' lvalue Var 0x55be173ec8c0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55be173ecfe8 <col:30> 'T' lvalue Var 0x55be173eccc0 'sx' 'T'
|     |   |-BinaryOperator 0x55be173ed1b0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55be173ed048 <col:13> 'int' lvalue Var 0x55be173ec6f0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55be173ed198 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55be173ed178 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55be173ed0e0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55be173ed0c0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55be173ed0a8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55be173ed068 <col:28> 'int' lvalue Var 0x55be173ec6f0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55be173ed088 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55be173ed160 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55be173ed130 <col:49> 'bool' lvalue ->_read_status 0x55be173a5340
|     |   |         `-ImplicitCastExpr 0x55be173ed110 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55be173ed100 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55be173ed260 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55be173ed1d0 <col:13> 'int' lvalue ParmVar 0x55be173c8578 'flags' 'int'
|     |     `-UnaryOperator 0x55be173ed248 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55be173ed230 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55be173ed210 <col:23> 'const int' lvalue Var 0x55be173ac8a8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55be173ed3f8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55be173ed330 <col:9> 'bool' lvalue ->_read_status 0x55be173a5340
|       | `-ImplicitCastExpr 0x55be173ed310 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55be173ed300 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55be173ed3d8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55be173ed3b8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55be173ed3a0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55be173ed360 <col:25> 'int' lvalue Var 0x55be173ec6f0 'read_status' 'int'
|           `-IntegerLiteral 0x55be173ed380 <col:40> 'int' 1
|-AccessSpecDecl 0x55be173c89a0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55be173c89c8 prev 0x55be173aab88 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55be173c8ac0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55be173c8bb0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55be173ed450 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55be173c8ca0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55be173ed460 <col:25, line:830:9>
| |-CXXMethodDecl 0x55be173c8da0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55be173c8e50 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55be173c8ef8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55be173c8ef8
| | `-ParmVarDecl 0x55be173c9008 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55be173c97c8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55be173c97c8
|   `-ParmVarDecl 0x55be173c98d8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55be173c9078 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55be173c91d8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55be173c93d0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55be173c9280 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55be173c92f8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55be173ed640 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55be173c9688 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55be173ed4b0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55be173ed470 <col:20> 'void *' lvalue ParmVar 0x55be173c9280 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55be173c96f0 '_slot' 'char *'
| | | `-CXXNewExpr 0x55be173ed538 <col:32, col:45> 'char *' array Function 0x55be16e3b818 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55be173ed520 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55be173ed4f0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55be173c92f8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55be173c9750 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55be173ed600 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55be173ed5c0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55be173c92f8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55be173ed6c0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55be173c94d0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55be173c8ca0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55be173ed748 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55be173ed728 <line:840:13, col:22> 'void' array Function 0x55be16e3bb78 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55be173ed710 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55be173ed6e0 <col:22> 'char *' lvalue ->_slot 0x55be173c96f0
| |         `-CXXThisExpr 0x55be173ed6d0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55be173c95d0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55be173c8da0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55be173ed938 <col:22, line:844:9>
| |   `-CallExpr 0x55be173ed8a0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55be173ed888 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55be173ed868 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55be16f489c8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55be173ed8d8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55be173ed7b8 <col:20> 'void *' lvalue ->_ptr 0x55be173c9688
| |     |   `-CXXThisExpr 0x55be173ed7a8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55be173ed908 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55be173ed8f0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55be173ed7f8 <col:26> 'char *' lvalue ->_slot 0x55be173c96f0
| |     |     `-CXXThisExpr 0x55be173ed7e8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55be173ed920 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55be173ed838 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55be173c9750
| |         `-CXXThisExpr 0x55be173ed828 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55be173c9688 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55be173c96f0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55be173c9750 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55be173c9948 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55be173c9948
| | `-ParmVarDecl 0x55be173c9a58 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55be173c9af8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55be173c9af8
|   `-ParmVarDecl 0x55be173c9c08 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55be173c9da8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55be173c9c78 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55be173c9d18 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55be173ca040 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55be173ca238 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55be173ca108 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55be173ca3b8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55be173ed970 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55be173ed950 <col:20> 'T *' lvalue ParmVar 0x55be173ca108 'ptr' 'T *'
|   | `-CompoundStmt 0x55be173ed9c0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55be173ca308 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55be173c8da0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55be173edb80 <col:22, line:857:9>
|   |   `-CallExpr 0x55be173edb50 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55be173ed9d0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55be173184a8 0x55be172f4b58 0x55be170140b8 0x55be16fc24b8
|   |     |-CXXOperatorCallExpr 0x55be173edae0 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55be173eda70 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55be17211018 0x55be17210c38 0x55be17210868 0x55be17210488 0x55be172100a8 0x55be1720fcd8
|   |     | `-MemberExpr 0x55be173eda40 <col:29> 'T *' lvalue ->_ptr 0x55be173ca3b8
|   |     |   `-CXXThisExpr 0x55be173eda30 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55be173edb20 <col:35> 'T' lvalue ->_slot 0x55be173ca418
|   |       `-CXXThisExpr 0x55be173edb10 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55be173ca3b8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55be173ca418 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55be173ca480 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55be173ca580 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55be173ca5d0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55be173ca560 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55be173ca540 <col:31> 'int' 48
|-FieldDecl 0x55be173ca5f8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55be173ca658 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55be173ca6b8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55be173ca7f0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55be173dbba0 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55be173dbc00 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55be173dbcb0 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55be173dbed8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55be173dbde0 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55be173dc028 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55be173dbf98 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55be173dc2f8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55be173dc0e8 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55be173dc168 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55be173dc210 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55be173dc508 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55be173dc3c0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55be173dc438 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55be173dc5d8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55be173dc728 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55be173dc690 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55be173dcab8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55be173dc7e8 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55be173dc868 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55be173dc910 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55be173dc9c8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55be173dcce0 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55be173dcb90 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55be173dcc08 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55be173dcff8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55be173dcd90 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55be173dcf58 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55be173dce68 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.4*, %class.Vector.6, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.4*, %class.Vector.6, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnnoArg
         0 |   int size
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be17410750 <../dummy_inc/click/args.hh:1294:1, line:1301:1> line:1294:7 referenced class AnnoArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be17410868 <col:1, col:7> col:7 implicit referenced class AnnoArg
|-AccessSpecDecl 0x55be174108f8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55be17410a08 <line:1295:5, line:1297:5> line:1295:5 used AnnoArg 'void (int)'
| |-ParmVarDecl 0x55be17410938 <col:13, col:17> col:17 used s 'int'
| |-CXXCtorInitializer Field 0x55be17410d58 'size' 'int'
| | `-ImplicitCastExpr 0x55be17410e20 <line:1296:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55be17410de0 <col:16> 'int' lvalue ParmVar 0x55be17410938 's' 'int'
| `-CompoundStmt 0x55be17410e68 <col:19, line:1297:5>
|-CXXMethodDecl 0x55be17410c60 <line:1298:5, col:83> col:10 parse 'bool (const String &, int &, const ArgContext &)'
| |-ParmVarDecl 0x55be17410ac8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55be17410b48 <col:35, col:40> col:40 result 'int &'
| `-ParmVarDecl 0x55be17410bc0 <col:48, col:73> col:66 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55be17410dc0 <col:73> 'const ArgContext' lvalue Var 0x55be173edba8 'blank_args' 'const ArgContext'
|-AccessSpecDecl 0x55be17410d18 <line:1299:3, col:10> col:3 private
|-FieldDecl 0x55be17410d58 <line:1300:5, col:9> col:9 referenced size 'int'
|-CXXConstructorDecl 0x55be1747a2f8 <line:1294:7> col:7 implicit constexpr AnnoArg 'void (const AnnoArg &)' inline default trivial noexcept-unevaluated 0x55be1747a2f8
| `-ParmVarDecl 0x55be1747a408 <col:7> col:7 'const AnnoArg &'
|-CXXConstructorDecl 0x55be1747a4a8 <col:7> col:7 implicit used constexpr AnnoArg 'void (AnnoArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be1747a5b8 <col:7> col:7 used 'AnnoArg &&'
| |-CXXCtorInitializer Field 0x55be17410d58 'size' 'int'
| | `-ImplicitCastExpr 0x55be1747b488 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55be1747b440 <col:7> 'int' xvalue .size 0x55be17410d58
| |     `-CXXStaticCastExpr 0x55be1747b410 <col:7> 'AnnoArg' xvalue static_cast<class AnnoArg &&> <NoOp>
| |       `-DeclRefExpr 0x55be1747b3e0 <col:7> 'AnnoArg' lvalue ParmVar 0x55be1747a5b8 '' 'AnnoArg &&'
| `-CompoundStmt 0x55be1747b4d0 <col:7>
`-CXXDestructorDecl 0x55be1747a658 <col:7> col:7 implicit referenced ~AnnoArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnnoArg = type { i32 }
  NonVirtualBaseLLVMType:%class.AnnoArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55be16e3d7e8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55be16e3d908 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55be17059dd0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55be17059eb0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55be17059eb0
| `-ParmVarDecl 0x55be17059f98 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55be1705a038 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55be1705a038
| `-ParmVarDecl 0x55be1705a148 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55be171f3ba0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be173338c0 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55be1734f308 prev 0x55be173338c0 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x55be1734f398 <col:38, col:44> col:38 public
|-TypedefDecl 0x55be1734f560 <line:304:5, col:53> col:53 size_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x55be1734f510 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|   `-TypedefType 0x55be17333430 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|     |-Typedef 0x55be17332bf0 'size_type'
|     `-TypedefType 0x55be16d8d8c0 'size_t' sugar
|       |-Typedef 0x55be16d54be0 'size_t'
|       `-BuiltinType 0x55be16ce4640 'unsigned long'
|-TypedefDecl 0x55be1734f700 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55be1734f6b0 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x55be173335d0 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|     |-Typedef 0x55be17332c48 'bucket_count_type'
|     `-TypedefType 0x55be16e3db70 'uint32_t' sugar
|       |-Typedef 0x55be16d4d4c8 'uint32_t'
|       `-TypedefType 0x55be16d265a0 '__uint32_t' sugar
|         |-Typedef 0x55be16d26198 '__uint32_t'
|         `-BuiltinType 0x55be16ce4620 'unsigned int'
|-CXXConstructorDecl 0x55be1734f790 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x55be1734f8f8 <line:312:5, line:314:5> line:312:8 used get 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55be1734f9c8 <line:317:5, line:319:5> line:317:8 used operator-> 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55be1734fb28 <line:323:5, line:325:5> line:323:8 operator* 'IPRewriterEntry &() const'
|-CXXMethodDecl 0x55be1734fbd8 <line:328:5, line:330:5> line:328:17 used live 'bool () const' inline
|-TypedefDecl 0x55be1734fd68 <line:332:5, col:73> col:48 unspecified_bool_type 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
| `-MemberPointerType 0x55be1734fd00 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
|   |-RecordType 0x55be173339c0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|   | `-ClassTemplateSpecialization 0x55be173338c0 'HashContainer_const_iterator'
|   `-ParenType 0x55be1734fc90 'IPRewriterEntry *() const' sugar
|     `-FunctionProtoType 0x55be1734f8b0 'IPRewriterEntry *() const' const cdecl
|       `-PointerType 0x55be1734f850 'IPRewriterEntry *'
|         `-SubstTemplateTypeParmType 0x55be1734f3c0 'IPRewriterEntry' sugar
|           |-TemplateTypeParmType 0x55be172a3a10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55be172a39b8 'T'
|           `-RecordType 0x55be172fd420 'IPRewriterEntry'
|             `-CXXRecord 0x55be17300c90 'IPRewriterEntry'
|-CXXConversionDecl 0x55be1734fe80 <line:334:5, line:336:5> line:334:12 operator IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55be173500d8 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-CXXMethodDecl 0x55be173501f8 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x55be173502a8 <line:349:5, line:361:5> line:349:10 operator++ 'void ()'
|-CXXMethodDecl 0x55be173503e8 <line:364:5, line:366:5> line:364:10 used operator++ 'void (int)'
| `-ParmVarDecl 0x55be17350358 <col:21> col:24 'int'
|-AccessSpecDecl 0x55be173504a0 <line:368:3, col:10> col:3 private
|-FieldDecl 0x55be173504d8 <line:370:5, col:8> col:8 referenced _element 'IPRewriterEntry *'
|-FieldDecl 0x55be17350570 <line:371:5, col:9> col:9 referenced _pprev 'IPRewriterEntry **'
|-FieldDecl 0x55be173505d0 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x55be17350718 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55be17350978 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55be17350868 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55be17350e08 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55be17350b38 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55be17350bb0 <col:72, col:90> col:90 b 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55be17350c30 <col:93, col:97> col:97 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55be17350ca8 <col:104, col:107> col:107 element 'IPRewriterEntry *'
|-FriendDecl 0x55be17350fe8 <line:392:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55be17351138 <line:393:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55be17352230 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55be17352368 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55be17352368
| `-ParmVarDecl 0x55be17352478 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55be17352518 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be17352628 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55be173504d8 '_element' 'IPRewriterEntry *'
| | `-ImplicitCastExpr 0x55be17352bc8 <col:7> 'IPRewriterEntry *' <LValueToRValue>
| |   `-MemberExpr 0x55be17352b80 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55be173504d8
| |     `-CXXStaticCastExpr 0x55be17352b50 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55be17352b20 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17352628 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55be17350570 '_pprev' 'IPRewriterEntry **'
| | `-ImplicitCastExpr 0x55be17352cb0 <col:7> 'IPRewriterEntry **' <LValueToRValue>
| |   `-MemberExpr 0x55be17352c68 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55be17350570
| |     `-CXXStaticCastExpr 0x55be17352c38 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55be17352c08 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17352628 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55be173505d0 '_bucket' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x55be17352d98 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55be17352d50 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55be173505d0
| |     `-CXXStaticCastExpr 0x55be17352d20 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55be17352cf0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17352628 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55be17350718 '_hc' 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| | `-ImplicitCastExpr 0x55be17352e80 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
| |   `-MemberExpr 0x55be17352e38 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55be17350718
| |     `-CXXStaticCastExpr 0x55be17352e08 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55be17352dd8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17352628 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55be17352ee0 <col:7>
|-CXXMethodDecl 0x55be17353928 <col:7> col:7 implicit operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55be17353928
| `-ParmVarDecl 0x55be17353a38 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55be17353aa8 <col:7> col:7 implicit used operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55be17353bb8 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55be173548b0 <col:7>
    |-BinaryOperator 0x55be17354540 <col:7> 'IPRewriterEntry *' lvalue '='
    | |-MemberExpr 0x55be173544f8 <col:7> 'IPRewriterEntry *' lvalue ->_element 0x55be173504d8
    | | `-CXXThisExpr 0x55be173544e8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55be17354528 <col:7> 'IPRewriterEntry *' <LValueToRValue>
    |   `-MemberExpr 0x55be173544b8 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55be173504d8
    |     `-CXXStaticCastExpr 0x55be17354488 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55be17354458 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17353bb8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55be17354648 <col:7> 'IPRewriterEntry **' lvalue '='
    | |-MemberExpr 0x55be17354600 <col:7> 'IPRewriterEntry **' lvalue ->_pprev 0x55be17350570
    | | `-CXXThisExpr 0x55be173545f0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55be17354630 <col:7> 'IPRewriterEntry **' <LValueToRValue>
    |   `-MemberExpr 0x55be173545c0 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55be17350570
    |     `-CXXStaticCastExpr 0x55be17354590 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55be17354560 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17353bb8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55be17354750 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue '='
    | |-MemberExpr 0x55be17354708 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue ->_bucket 0x55be173505d0
    | | `-CXXThisExpr 0x55be173546f8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55be17354738 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55be173546c8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55be173505d0
    |     `-CXXStaticCastExpr 0x55be17354698 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55be17354668 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17353bb8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55be17354858 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue '='
    | |-MemberExpr 0x55be17354810 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue ->_hc 0x55be17350718
    | | `-CXXThisExpr 0x55be17354800 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55be17354840 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
    |   `-MemberExpr 0x55be173547d0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55be17350718
    |     `-CXXStaticCastExpr 0x55be173547a0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55be17354770 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17353bb8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55be173548a0 <col:7>
      `-UnaryOperator 0x55be17354888 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55be17354878 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be17333af8 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55be173511c0 prev 0x55be17333af8 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55be17351250 <col:76, col:82> col:76 public
|-TypedefDecl 0x55be17351340 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55be173512a0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55be173339c0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55be173338c0 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55be173513d0 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55be17351488 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55be173516a8 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-AccessSpecDecl 0x55be17351758 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55be17351988 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55be17351878 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55be17351f18 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, typename inherited::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55be17351b48 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55be17351c60 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55be17351d40 <col:101, col:105> col:105 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55be17351db8 <col:112, col:115> col:115 element 'IPRewriterEntry *'
|-FriendDecl 0x55be173520f8 <line:433:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55be17352150 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55be17352698 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55be17352698
| `-ParmVarDecl 0x55be173527a8 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55be17352848 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55be17352958 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| | `-CXXConstructExpr 0x55be17352ef0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept'
| |   `-ImplicitCastExpr 0x55be17352b00 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
| |     `-CXXStaticCastExpr 0x55be17352ad0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55be17352aa0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17352958 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55be17352fb8 <col:7>
|-CXXMethodDecl 0x55be17353778 <col:7> col:7 implicit operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55be17353778
| `-ParmVarDecl 0x55be17353888 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55be17353c28 <col:7> col:7 implicit used operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55be17353d38 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55be17354948 <col:7>
    |-CXXMemberCallExpr 0x55be173548e8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue
    | |-MemberExpr 0x55be173543e0 <col:7> '<bound member function type>' .operator= 0x55be17353aa8
    | | `-ImplicitCastExpr 0x55be17354310 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    | |   `-UnaryOperator 0x55be173542f8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
    | |     `-CXXThisExpr 0x55be173542e8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55be173543c0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    |   `-DeclRefExpr 0x55be173543a0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55be17353d38 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55be17354938 <col:7>
      `-UnaryOperator 0x55be17354920 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55be17354910 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be1731f2f0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55be1749ba30 <line:167:18>
|-CXXRecordDecl 0x55be1749baf0 prev 0x55be1731f2f0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55be1749bc00 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.2 = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.2 = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct char_array<56>
         0 |   char [56] x
           | [sizeof=56, dsize=56, align=1,
           |  nvsize=56, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55be1733b1d0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 56
|-PackedAttr 0x55be174dbc48 <line:167:18>
|-CXXRecordDecl 0x55be174dbd08 prev 0x55be1733b1d0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55be174dbe18 <line:166:5, col:13> col:10 x 'char [56]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [56 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [56 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
