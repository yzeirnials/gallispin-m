
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5d0ead8 prev 0x55c9d5d06278 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9d5d0ebd0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55c9d5d0ec60 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55c9d5d0ecd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55c9d5d0ed98 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55c9d5d0ee60 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55c9d5d0efd8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55c9d5d0ef10 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55c9d5d0f080 <col:24>
| `-OptimizeNoneAttr 0x55c9d5d0f0d8 <col:34>
|-CXXMethodDecl 0x55c9d5d0f120 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55c9d5d0f3d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55c9d5d0f1d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c9d5d0f248 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55c9d5d0f2c8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55c9d5d0f490 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55c9d5d0f4c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55c9d5d0f530 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55c9d5d0f5b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55c9d5d0f8d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55c9d5d0f670 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c9d5d0f6e8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55c9d5d0f760 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55c9d5d0f7e0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55c9d5d0f9f0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55c9d5d17368 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c9d5d17368
| `-ParmVarDecl 0x55c9d5d17478 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55c9d5d17518 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c9d5d17518
| `-ParmVarDecl 0x55c9d5d17628 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55c9d5d1b1e8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5d01af0 prev 0x55c9d5d01870 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9d5d01be8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55c9d5d01c78 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55c9d5d01cd8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55c9d5d01dc8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55c9d5d01ec8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55c9d5d02098 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55c9d5d01f48 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55c9d5d01fc0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55c9d5d02228 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55c9d5d02160 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55c9d5d022d0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5d02408 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55c9d5d02340 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55c9d5d025a8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55c9d5d024e8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55c9d5d02748 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55c9d5d02688 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55c9d5d027f0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55c9d5d028f0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55c9d5d029d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d028d0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9d5d028b0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55c9d5d02980 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55c9d5d029e8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5d02960 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55c9d5d02940 <col:44> 'int' 2
|-CXXMethodDecl 0x55c9d5d02b30 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55c9d5d02a18 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55c9d5d02a98 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55c9d5d02c88 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55c9d5d02bf8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55c9d5d02ec8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55c9d5d02d48 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55c9d5d02dc0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55c9d5d02f78 <col:20>
| `-OptimizeNoneAttr 0x55c9d5d02fd0 <col:30>
|-CXXMethodDecl 0x55c9d5d030d8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55c9d5d03010 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55c9d5d03180 <col:20>
| `-OptimizeNoneAttr 0x55c9d5d031d8 <col:30>
|-CXXMethodDecl 0x55c9d5d03228 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55c9d5d032f0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55c9d5d03408 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55c9d5d03490 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55c9d5d03518 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55c9d5d035a0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55c9d5d03628 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55c9d5d036b8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55c9d5d03778 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55c9d5d03800 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55c9d5d03888 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55c9d5d03910 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55c9d5d03998 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55c9d5d03a20 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55c9d5d03ab0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55c9d5d03b70 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55c9d5d03c00 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55c9d5d03d50 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55c9d5d03cb8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55c9d5d03ee0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55c9d5d03e10 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55c9d5d04190 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55c9d5d03f98 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55c9d5d04018 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55c9d5d04098 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55c9d5d04248 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55c9d5d04350 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9d5d045e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d04330 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9d5d04310 <col:33> 'int' 0
| |-EnumConstantDecl 0x55c9d5d043e0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9d5d045f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d043c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55c9d5d043a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55c9d5d04470 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9d5d04610 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d04450 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55c9d5d04430 <col:38> 'int' 90
| |-EnumConstantDecl 0x55c9d5d04500 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c9d5d04628 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d044e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55c9d5d044c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55c9d5d04590 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55c9d5d04640 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5d04570 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55c9d5d04550 <col:32> 'int' 2000
|-CXXMethodDecl 0x55c9d5d04680 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55c9d5d04ac0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c9d5d04930 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55c9d5d049a8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d04b90 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55c9d5d04d10 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55c9d5d04c40 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d04f18 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c9d5d04dc8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55c9d5d04e40 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d05018 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55c9d5d050b8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55c9d5d05180 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9d5d05210 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55c9d5d05440 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d051f0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55c9d5d051d0 <col:36> 'int' EnumConstant 0x55c9d5d05180 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9d5d05260 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9d5d052b0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9d5d05300 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9d5d05350 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c9d5d053a0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55c9d5d053f0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55c9d5d05528 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55c9d5d05468 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55c9d5d055f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55c9d5d056b0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55c9d5d05770 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55c9d5d05830 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55c9d5d05948 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55c9d5d05a10 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55c9d5d05b90 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55c9d5d05ac0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55c9d5d05cb8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c9d5d05eb8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55c9d5d05d68 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55c9d5d05de8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55c9d5d13808 <col:54, line:127:5>
|   |-ParenExpr 0x55c9d5d136b8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55c9d5d13688 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5d13378 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c9d5d13350 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55c9d5d13338 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55c9d5d13320 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55c9d5d132f0 <col:31> 'Router *' lvalue ->_router 0x55c9d5d111d0
|   |   |         `-CXXThisExpr 0x55c9d5d132e0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c9d5d133d8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5d133b8 <col:48> 'int' 0
|   |   `-CallExpr 0x55c9d5d135e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5d135d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5d135b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5d13628 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5d13448 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55c9d5d13640 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5d13468 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55c9d5d13658 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5d134a0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55c9d5d13670 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5d13598 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5d13580 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5d13538 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55c9d5d13750 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55c9d5d136e8 <col:9> 'Router *' lvalue ->_router 0x55c9d5d111d0
|   | | `-CXXThisExpr 0x55c9d5d136d8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55c9d5d13738 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9d5d13718 <col:19> 'Router *' lvalue ParmVar 0x55c9d5d05d68 'r' 'Router *'
|   `-BinaryOperator 0x55c9d5d137e8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55c9d5d13780 <col:9> 'int' lvalue ->_eindex 0x55c9d5d11238
|     | `-CXXThisExpr 0x55c9d5d13770 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55c9d5d137d0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5d137b0 <col:19> 'int' lvalue ParmVar 0x55c9d5d05de8 'eindex' 'int'
|-CXXMethodDecl 0x55c9d5d06040 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55c9d5d05f78 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55c9d5d06110 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55c9d5d061d8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55c9d5d06278 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55c9d5d064c8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55c9d5d06340 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55c9d5d063c0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55c9d5d06578 <col:20>
| `-OptimizeNoneAttr 0x55c9d5d065d0 <col:30>
|-CXXMethodDecl 0x55c9d5d066d8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c9d5d06610 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55c9d5d06780 <col:20>
| `-OptimizeNoneAttr 0x55c9d5d067d8 <col:30>
|-CXXMethodDecl 0x55c9d5d068a8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c9d5d06818 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55c9d5d06950 <col:20>
| `-OptimizeNoneAttr 0x55c9d5d069a8 <col:30>
|-CXXMethodDecl 0x55c9d5d06b38 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55c9d5d069e0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55c9d5d06a60 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55c9d5d06cc8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c9d5d06c00 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c9d5d06e18 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c9d5d06d88 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c9d5d06f68 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c9d5d06ed8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c9d5d070b8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c9d5d07028 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c9d5d07378 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55c9d5d07170 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55c9d5d071f0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55c9d5d07298 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55c9d5d07450 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55c9d5d07510 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55c9d5d077e0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c9d5d07690 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55c9d5d07708 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d07908 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55c9d5d07ae0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55c9d5d079c0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55c9d5d07a40 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55c9d5d07cc8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55c9d5d07ba8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55c9d5d07c28 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55c9d5d08038 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c9d5d07d88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c9d5d07e00 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c9d5d07e80 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c9d5d12df0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c9d5d12dd0 <col:106> 'int' 0
| `-ParmVarDecl 0x55c9d5d07ef8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9d5d12e28 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9d5d12e08 <col:126> 'int' 0
|-CXXMethodDecl 0x55c9d5d083d8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9d5d08108 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c9d5d081a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c9d5d08220 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55c9d5d08298 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9d5d12e60 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9d5d12e40 <col:114> 'int' 0
|-CXXMethodDecl 0x55c9d5d08768 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9d5d084b0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55c9d5d08528 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c9d5d085a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55c9d5d12e78 <col:96> 'int' 0
| `-ParmVarDecl 0x55c9d5d08620 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9d5d12eb8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9d5d12e98 <col:116> 'int' 0
|-CXXMethodDecl 0x55c9d5d08ae8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c9d5d08838 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c9d5d088b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d08930 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c9d5d12ef0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c9d5d12ed0 <col:109> 'int' 0
| `-ParmVarDecl 0x55c9d5d089a8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9d5d12f28 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9d5d12f08 <col:129> 'int' 0
|-CXXMethodDecl 0x55c9d5d08e68 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9d5d08bb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c9d5d08c30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d08cb0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55c9d5d08d28 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9d5d12f60 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9d5d12f40 <col:117> 'int' 0
|-CXXMethodDecl 0x55c9d5d091f8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c9d5d08f40 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d08fb8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d09038 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55c9d5d12f78 <col:99> 'int' 0
| `-ParmVarDecl 0x55c9d5d090b0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c9d5d12fb8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c9d5d12f98 <col:119> 'int' 0
|-CXXMethodDecl 0x55c9d5d09618 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55c9d5d092c8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c9d5d09348 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c9d5d093c0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d09440 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c9d5d12ff0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c9d5d12fd0 <col:108> 'int' 0
| `-ParmVarDecl 0x55c9d5d094c0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55c9d5d13028 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55c9d5d13008 <col:141> 'int' 0
|-CXXMethodDecl 0x55c9d5d09a38 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c9d5d096f0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c9d5d09770 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c9d5d097e8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d09868 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55c9d5d098e8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c9d5d13040 <col:121> 'int' 0
|-CXXMethodDecl 0x55c9d5d09e68 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c9d5d09b18 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55c9d5d09b98 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55c9d5d09c10 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d09c90 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55c9d5d13060 <col:98> 'int' 0
| `-ParmVarDecl 0x55c9d5d09d10 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c9d5d13080 <col:123> 'int' 0
|-CXXMethodDecl 0x55c9d5d0a130 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55c9d5d09f40 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c9d5d09fc0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55c9d5d0a040 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55c9d5d130a0 <col:80> 'int' 0
|-EnumDecl 0x55c9d5d0a1e8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55c9d5d0a2f0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9d5d0a580 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d0a2d0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9d5d0a2b0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55c9d5d0a380 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9d5d0a598 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d0a360 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9d5d0a340 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c9d5d0a410 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9d5d0a5b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d0a3f0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9d5d0a3d0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55c9d5d0a4a0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c9d5d0a5c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5d0a480 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55c9d5d0a460 <col:36> 'int' 7
| `-EnumConstantDecl 0x55c9d5d0a530 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55c9d5d0a5e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5d0a510 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55c9d5d0a4f0 <col:34> 'int' 6
|-CXXMethodDecl 0x55c9d5d0a898 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55c9d5d0a608 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55c9d5d0a6a8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c9d5d0a728 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55c9d5d0a7a0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55c9d5d13158 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c9d5d13140 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c9d5d13128 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c9d5d13108 <col:98, col:105> 'String' (CXXTemporary 0x55c9d5d13108)
|           `-CXXTemporaryObjectExpr 0x55c9d5d130d0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55c9d5d0ab38 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55c9d5d0a968 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c9d5d0a9e0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c9d5d0aa58 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c9d5d13208 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c9d5d131f0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c9d5d131d8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c9d5d131b8 <col:94, col:101> 'String' (CXXTemporary 0x55c9d5d131b8)
| |         `-CXXTemporaryObjectExpr 0x55c9d5d13180 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55c9d5d139f0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55c9d5d13968 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55c9d5d13938 <col:9> '<bound member function type>' ->add_task_handlers 0x55c9d5d0a898
|     | `-CXXThisExpr 0x55c9d5d13928 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c9d5d139a8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9d5d138a8 <col:27> 'Task *' lvalue ParmVar 0x55c9d5d0a968 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c9d5d139c0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9d5d138c8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55c9d5d0a9e0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55c9d5d139d8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c9d5d138e8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c9d5d0a530 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c9d5d13908 <col:62> 'const String' lvalue ParmVar 0x55c9d5d0aa58 'prefix' 'const String &'
|-CXXMethodDecl 0x55c9d5d0ad48 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55c9d5d0ac00 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c9d5d0ac78 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c9d5d132b8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c9d5d132a0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c9d5d13288 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c9d5d13268 <col:70, col:77> 'String' (CXXTemporary 0x55c9d5d13268)
| |         `-CXXTemporaryObjectExpr 0x55c9d5d13230 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55c9d5d13bc8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55c9d5d13b40 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55c9d5d13b10 <col:9> '<bound member function type>' ->add_task_handlers 0x55c9d5d0a898
|     | `-CXXThisExpr 0x55c9d5d13b00 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c9d5d13b80 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9d5d13a80 <col:27> 'Task *' lvalue ParmVar 0x55c9d5d0ac00 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c9d5d13b98 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55c9d5d13aa0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55c9d5d13bb0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c9d5d13ac0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c9d5d0a530 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c9d5d13ae0 <col:57> 'const String' lvalue ParmVar 0x55c9d5d0ac78 'prefix' 'const String &'
|-CXXMethodDecl 0x55c9d5d0b028 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55c9d5d0ae10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0ae90 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0af08 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55c9d5d0b2d8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55c9d5d0b0f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0b178 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0b1f8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55c9d5d0b5c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c9d5d0b3a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0b428 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0b4a0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55c9d5d0b878 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55c9d5d0b698 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0b718 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0b798 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55c9d5d0bb28 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55c9d5d0b948 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0b9c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0ba48 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55c9d5d0bdd8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55c9d5d0bbf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0bc78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0bcf0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55c9d5d0c088 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55c9d5d0bea8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0bf28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0bfa8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55c9d5d0c398 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55c9d5d0c1b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0c230 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0c2b0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55c9d5d0c678 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55c9d5d0c468 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0c4e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0c590 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55c9d5d0c958 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55c9d5d0c748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0c7c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0c870 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55c9d5d0cbc0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c9d5d0ca28 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0caa8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c9d5d0cb20 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55c9d5d0ce68 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55c9d5d0cc90 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0cd10 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c9d5d0cd88 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55c9d5d0d118 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55c9d5d0cf38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0cfb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0d038 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55c9d5d0d3c8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55c9d5d0d1e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0d268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0d2e0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55c9d5d0d678 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55c9d5d0d498 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0d518 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0d590 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55c9d5d0d948 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55c9d5d0d748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0d7c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c9d5d0d868 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55c9d5d0dc78 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55c9d5d0da18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c9d5d0da98 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55c9d5d0db10 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55c9d5d0db88 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9d5d132d0 <col:93> 'bool' false
|-CXXMethodDecl 0x55c9d5d0de60 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c9d5d0dd48 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55c9d5d0ddc8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55c9d5d0e038 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c9d5d0df20 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55c9d5d0dfa0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55c9d5d0e318 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c9d5d0e0f8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55c9d5d0e170 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55c9d5d0e1f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55c9d5d0e268 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d0e608 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c9d5d0e3e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55c9d5d0e460 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55c9d5d0e4e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55c9d5d0e558 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d0e840 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55c9d5d0e6e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55c9d5d0e760 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55c9d5d0ea28 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55c9d5d0e908 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55c9d5d0e988 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55c9d5d0ead8 prev 0x55c9d5d06278 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9d5d0ebd0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55c9d5d0ec60 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55c9d5d0ecd8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55c9d5d0ed98 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55c9d5d0ee60 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55c9d5d0efd8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55c9d5d0ef10 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55c9d5d0f080 <col:24>
| | `-OptimizeNoneAttr 0x55c9d5d0f0d8 <col:34>
| |-CXXMethodDecl 0x55c9d5d0f120 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55c9d5d0f3d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55c9d5d0f1d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c9d5d0f248 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55c9d5d0f2c8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55c9d5d0f490 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55c9d5d0f4c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55c9d5d0f530 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55c9d5d0f5b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55c9d5d0f8d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55c9d5d0f670 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c9d5d0f6e8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55c9d5d0f760 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55c9d5d0f7e0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55c9d5d0f9f0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55c9d5d17368 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c9d5d17368
| | `-ParmVarDecl 0x55c9d5d17478 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55c9d5d17518 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c9d5d17518
| | `-ParmVarDecl 0x55c9d5d17628 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55c9d5d1b1e8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c9d5d0fa68 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55c9d5d0fb08 <col:38> "" ""
|-CXXMethodDecl 0x55c9d5d0fb98 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55c9d5d0fc38 <col:44> "" ""
|-AccessSpecDecl 0x55c9d5d0fca8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55c9d5d0fcd0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55c9d5d0fdd0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55c9d5d0fe20 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5d0fdb0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55c9d5d0fd90 <col:27> 'int' 4
|-FieldDecl 0x55c9d5d0fed8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55c9d5d10088 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55c9d5d10140 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55c9d5d111d0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55c9d5d11238 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55c9d5d11388 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55c9d5d112c8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55c9d5d11538 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55c9d5d11448 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55c9d5d11718 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55c9d5d115f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55c9d5d11678 <col:25> col:28 'int'
|-CXXMethodDecl 0x55c9d5d119c0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55c9d5d117e0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55c9d5d11860 <col:28> col:31 'int'
| `-ParmVarDecl 0x55c9d5d118d8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55c9d5d11a78 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55c9d5d11b40 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55c9d5d11b90 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55c9d5d11be0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55c9d5d11dc0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55c9d5d11c70 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55c9d5d11ce8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d12068 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55c9d5d11e88 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55c9d5d11f08 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55c9d5d11f80 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55c9d5d12288 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55c9d5d12138 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55c9d5d121b8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55c9d5d125c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55c9d5d12348 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55c9d5d123c8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55c9d5d12440 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55c9d5d124c0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55c9d5d127a8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c9d5d12690 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55c9d5d12710 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55c9d5d128f8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55c9d5d12868 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55c9d5d12c78 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55c9d5d129b8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55c9d5d12a38 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55c9d5d12ab0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55c9d5d12b30 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55c9d5d12d90 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StripIPHeader
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5d1a4d8 <../elements/ip/stripipheader.hh:25:1, line:35:1> line:25:7 class StripIPHeader definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55c9d5d1a638 <col:1, col:7> col:7 implicit referenced class StripIPHeader
|-AccessSpecDecl 0x55c9d5d1a6c8 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55c9d5d1a750 <line:27:5, col:19> col:5 StripIPHeader 'void ()'
|-CXXDestructorDecl 0x55c9d5d1a840 <line:28:5, col:20> col:5 ~StripIPHeader 'void ()' noexcept-unevaluated 0x55c9d5d1a840
| `-Overrides: [ 0x55c9d5d01dc8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55c9d5d1a970 <line:30:5, col:62> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55c9d5d03228 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55c9d5d1afc8 <col:36, col:62>
|   `-ReturnStmt 0x55c9d5d1afb8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c9d5d1afa0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c9d5d1af78 <col:45> 'const char [14]' lvalue "StripIPHeader"
|-CXXMethodDecl 0x55c9d5d1aa38 <line:31:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55c9d5d032f0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55c9d5d1b028 <col:36, col:56>
|   `-ReturnStmt 0x55c9d5d1b018 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c9d5d1b000 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55c9d5d1afe0 <col:45> 'const char []' lvalue Var 0x55c9d5d035a0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55c9d5d1ab78 <line:33:5, col:35> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55c9d5d02408 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55c9d5d1aae8 <col:27, col:34> col:35 'Packet *'
|-CXXConstructorDecl 0x55c9d5d1ac48 <line:25:7> col:7 implicit StripIPHeader 'void (const StripIPHeader &)' inline default_delete noexcept-unevaluated 0x55c9d5d1ac48
| `-ParmVarDecl 0x55c9d5d1ad58 <col:7> col:7 'const StripIPHeader &'
`-CXXMethodDecl 0x55c9d5d1adf8 <col:7> col:7 implicit operator= 'StripIPHeader &(const StripIPHeader &)' inline default_delete noexcept-unevaluated 0x55c9d5d1adf8
  `-ParmVarDecl 0x55c9d5d1af08 <col:7> col:7 'const StripIPHeader &'

Layout: <CGRecordLayout
  LLVMType:%class.StripIPHeader = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.StripIPHeader.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5ac05a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9d5ac06b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55c9d5ac0748 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55c9d5ac0818 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55c9d5ac0900 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5ac0b18 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c9d5ac09c0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac0cc8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c9d5ac0bd0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c9d5ac0e10 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c9d5ac0d80 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c9d5ac0f58 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c9d5ac0ec8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac10a0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c9d5ac1010 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac1168 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55c9d5ac12b0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55c9d5ac1220 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c9d5ac1378 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55c9d5ac14c0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55c9d5ac1430 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c9d5ac1638 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c9d5ac1578 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac1780 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c9d5ac16f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac1848 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55c9d5ac1a08 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5ac18f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9d5ac1970 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac1c58 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5ac1ac8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9d5ac1b40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9d5ac1d08 <col:86> "" ""
|-CXXMethodDecl 0x55c9d5ac1f78 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55c9d5ac1de8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55c9d5ac1e60 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac2128 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c9d5ac2038 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c9d5ac22d8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c9d5ac21e0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c9d5ac25a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c9d5ac2390 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c9d5ac2408 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9d5ac2480 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac2888 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c9d5ac2670 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c9d5ac26e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9d5ac2760 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9d5ac2940 <col:115> "" ""
|-AccessSpecDecl 0x55c9d5ac29b0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55c9d5ac29e8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ac2ef0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c9d5ac2ef0
| `-ParmVarDecl 0x55c9d5ac2ff8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55c9d5ac3098 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c9d5ac3098
| `-ParmVarDecl 0x55c9d5ac31a8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55c9d5af87d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9d5ceb5e0 <col:7>
|-CXXConstructorDecl 0x55c9d5af88b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c9d5af88b0
| `-ParmVarDecl 0x55c9d5af89c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55c9d5af8a38 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c9d5af8a38
| `-ParmVarDecl 0x55c9d5af8b48 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55c9d5cedfe0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5cda188 prev 0x55c9d5ccf390 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9d5cda280 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55c9d5cda370 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55c9d5cda498 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55c9d5cda618 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55c9d5cda798 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55c9d5cda918 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55c9d5ceb748 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9d5cebfb8 <col:11>
|-CXXDestructorDecl 0x55c9d5ceb820 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c9d5ceb958 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c9d5ceb958
| `-ParmVarDecl 0x55c9d5ceba68 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55c9d5cebb08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9d5cebb08
| `-ParmVarDecl 0x55c9d5cebc18 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55c9d5cee9d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9d5ceeae8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55c9d5ceed68 <col:11>
|   `-ReturnStmt 0x55c9d5ceed58 <col:11>
|     `-UnaryOperator 0x55c9d5ceed40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c9d5ceed30 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55c9d5ceeb58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9d5ceeb58
  `-ParmVarDecl 0x55c9d5ceec68 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5cda980 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9d5cdaa98 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55c9d5cdab38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55c9d5cdaba0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55c9d5cdac08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55c9d5cdac70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55c9d5cdacd0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55c9d5cdad90 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55c9d5cdadf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55c9d5cdae50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55c9d5ceb658 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55c9d5cdab38 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55c9d5cebfc8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55c9d5cec020 <col:12>
|-CXXConstructorDecl 0x55c9d5cebc88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c9d5cebc88
| `-ParmVarDecl 0x55c9d5cebd98 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55c9d5cebe38 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c9d5cebe38
| `-ParmVarDecl 0x55c9d5cebf48 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55c9d5cee0c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5cc8aa0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9d5cc8bb8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55c9d5cc8c48 <col:16, col:22> col:16 public
|-EnumDecl 0x55c9d5cc8c70 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55c9d5cc8d70 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55c9d5cc8e50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cc8d50 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55c9d5cc8d30 <col:21> 'int' 28
| `-EnumConstantDecl 0x55c9d5cc8e00 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55c9d5cc8e68 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5cc8de0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55c9d5cc8dc0 <col:22> 'int' 64
|-CXXMethodDecl 0x55c9d5cc91a8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55c9d5cc8e90 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9d5cc8f10 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55c9d5cc8f88 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9d5cc9000 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9d5cc9268 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5cc9468 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55c9d5cc92e0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55c9d5cc9358 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9d5cc9518 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5cc9678 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55c9d5cc9588 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9d5cc9720 <col:72> warn_unused_result ""
|-TypedefDecl 0x55c9d5cc9a80 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55c9d5cc9a10 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55c9d5cc99b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55c9d5cc9970 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55c9d57a24e0 'void'
|       |-PointerType 0x55c9d5a48e40 'unsigned char *'
|       | `-BuiltinType 0x55c9d57a25e0 'unsigned char'
|       |-TypedefType 0x55c9d5845210 'size_t' sugar
|       | |-Typedef 0x55c9d5812be0 'size_t'
|       | `-BuiltinType 0x55c9d57a2640 'unsigned long'
|       `-PointerType 0x55c9d57a2ce0 'void *'
|         `-BuiltinType 0x55c9d57a24e0 'void'
|-CXXMethodDecl 0x55c9d5cc9ef8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55c9d5cc9af0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55c9d5cc9b68 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9d5cc9c00 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55c9d5cc9c80 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55c9d5ce45f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55c9d5ce45d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55c9d5ce45a0 <col:58> 'int' 0
| |-ParmVarDecl 0x55c9d5cc9d00 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55c9d5ce4618 <col:76> 'int' 0
| |-ParmVarDecl 0x55c9d5cc9d80 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55c9d5ce4638 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55c9d5cc9fc8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5cca048 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c9d5cca108 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55c9d5cca1a8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cca200 <col:30>
|-CXXMethodDecl 0x55c9d5cca278 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55c9d5cca318 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cca370 <col:30>
|-CXXMethodDecl 0x55c9d5cca3e8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55c9d5cca488 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5cca538 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55c9d5cca5d8 <col:20>
| |-OptimizeNoneAttr 0x55c9d5cca630 <col:30>
| `-WarnUnusedResultAttr 0x55c9d5cca658 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5cca6b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9d5cca750 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cca7a8 <col:30>
|-CXXMethodDecl 0x55c9d5cca7f8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9d5cca898 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cca8f0 <col:30>
|-CXXMethodDecl 0x55c9d5cca938 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55c9d5cca9d8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccaa30 <col:30>
|-CXXMethodDecl 0x55c9d5ccaa78 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5ccab38 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5ccac00 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c9d5ccacc8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c9d5ccad88 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5ccaea8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55c9d5ce4700 <col:54, line:99:5>
|   `-ReturnStmt 0x55c9d5ce46f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55c9d5ce46d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55c9d5ce46a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c9d5cdb188
|         `-CXXThisExpr 0x55c9d5ce4698 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c9d5ccb048 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55c9d5ccaf58 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55c9d5ce47b0 <col:67, line:103:5>
|   `-BinaryOperator 0x55c9d5ce4790 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c9d5ce4728 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c9d5cdb188
|     | `-CXXThisExpr 0x55c9d5ce4718 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c9d5ce4778 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5ce4758 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55c9d5ccaf58 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55c9d5ccb140 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55c9d5ce4830 <col:33, line:107:5>
|   `-ReturnStmt 0x55c9d5ce4820 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55c9d5ce4808 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c9d5ce47d8 <col:16> 'void *' lvalue ->_destructor_argument 0x55c9d5cdb1f0
|         `-CXXThisExpr 0x55c9d5ce47c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c9d5ccb200 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55c9d5ce4e60 <col:25, line:113:5>
|   |-ParenExpr 0x55c9d5ce4ba8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55c9d5ce4b78 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce48e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c9d5ce48c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55c9d5ce4888 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55c9d5ce4858 <col:24> '<bound member function type>' ->shared 0x55c9d5cca278
|   |   |       `-ImplicitCastExpr 0x55c9d5ce48a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55c9d5ce4848 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce4948 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce4928 <col:42> 'int' 0
|   |   `-CallExpr 0x55c9d5ce4ad8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce4ac0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce4aa0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce4b18 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce49b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55c9d5ce4b30 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce49e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce4b48 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce4a18 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55c9d5ce4b60 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce4a88 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce4a70 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce4a38 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55c9d5ce4da8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55c9d5ce4bd8 <col:2> 'unsigned char *' lvalue ->_head 0x55c9d5cdaf90
|   | | `-CXXThisExpr 0x55c9d5ce4bc8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55c9d5ce4d90 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55c9d5ce4d70 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55c9d5ce4c18 <col:10> 'unsigned char *' lvalue ->_data 0x55c9d5cdaff8
|   |     | `-CXXThisExpr 0x55c9d5ce4c08 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55c9d5ce4d58 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55c9d5ce4d38 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55c9d5ce4c58 <col:18> 'unsigned char *' lvalue ->_tail 0x55c9d5cdb060
|   |         | `-CXXThisExpr 0x55c9d5ce4c48 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55c9d5ce4d20 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55c9d5ce4d00 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55c9d5ce4c98 <col:26> 'unsigned char *' lvalue ->_end 0x55c9d5cdb0c8
|   |             | `-CXXThisExpr 0x55c9d5ce4c88 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55c9d5ce4ce8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55c9d5ce4cc8 <col:33> 'int' 0
|   `-BinaryOperator 0x55c9d5ce4e40 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c9d5ce4dd8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c9d5cdb188
|     | `-CXXThisExpr 0x55c9d5ce4dc8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c9d5ce4e28 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55c9d5ce4e08 <col:16> 'int' 0
|-CXXMethodDecl 0x55c9d5ccb340 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c9d5ccb2b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5ccb3e8 <col:20>
| |-OptimizeNoneAttr 0x55c9d5ccb440 <col:30>
| `-WarnUnusedResultAttr 0x55c9d5ccb468 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5ccb538 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c9d5ccb4a8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5ccb5e0 <col:20>
| |-OptimizeNoneAttr 0x55c9d5ccb638 <col:30>
| `-WarnUnusedResultAttr 0x55c9d5ccb660 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5ccb798 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c9d5ccb6a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9d5ccb840 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5ccb940 <line:187:5, col:62> col:45 used pull 'void (uint32_t)'
| |-ParmVarDecl 0x55c9d5ccb8b0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5ccb9e8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccba40 <col:30>
|-CXXMethodDecl 0x55c9d5ccbb08 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c9d5ccba78 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9d5ccbbb0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5ccbcb0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c9d5ccbc20 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c9d5ccbd58 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5ccbe58 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55c9d5ccbdc8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5ccbf00 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccbf58 <col:30>
|-CXXMethodDecl 0x55c9d5ccc0e8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55c9d5ccbf98 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55c9d5ccc010 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55c9d5ce4658 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55c9d5ccc198 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55c9d5ccc398 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5ccc210 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5ccc288 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ccc5a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5ccc458 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9d5ccc4d0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ccc7b8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55c9d5ccc668 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55c9d5ccc6e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55c9d5ce4668 <col:39> 'int' 0
|-CXXMethodDecl 0x55c9d5ccc888 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55c9d5ccc950 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c9d5ccca18 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9d5cccad8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5cccba0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55c9d5cccce8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55c9d5cccc58 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55c9d5ccceb8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5cccda8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5ccce20 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5cccf88 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55c9d5ccd048 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55c9d5ccd0e8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccd140 <col:30>
|-CXXMethodDecl 0x55c9d5ccd190 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9d5ccd230 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccd288 <col:30>
|-CXXMethodDecl 0x55c9d5ccd2d8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9d5ccd398 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5ccd460 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55c9d5ccd500 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccd558 <col:30>
|-CXXMethodDecl 0x55c9d5ccd6a8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5ccd598 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5ccd610 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ccd7f8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55c9d5ccd768 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ccd8d0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55c9d5ccd990 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55c9d5ccda30 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccda88 <col:30>
|-CXXMethodDecl 0x55c9d5ccdad8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c9d5ccdb78 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccdbd0 <col:30>
|-CXXMethodDecl 0x55c9d5ccdc20 <line:299:5, col:42> col:16 used transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9d5ccdce8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55c9d5ccdd88 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccdde0 <col:30>
|-CXXMethodDecl 0x55c9d5ccde28 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55c9d5ccdf48 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55c9d5cce0b8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55c9d5ccdff8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55c9d5cce1a8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55c9d5cce248 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cce2a0 <col:30>
|-CXXMethodDecl 0x55c9d5cce2f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c9d5cce3b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5cce5e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55c9d5cce460 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55c9d5cce4d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5cce698 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cce6f0 <col:30>
|-CXXMethodDecl 0x55c9d5cce798 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55c9d5cce838 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cce890 <col:30>
|-CXXMethodDecl 0x55c9d5cce8e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55c9d5cce980 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cce9d8 <col:30>
|-CXXMethodDecl 0x55c9d5ccea20 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55c9d5cceac0 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cceb18 <col:30>
|-CXXMethodDecl 0x55c9d5ccec18 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55c9d5cceb50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55c9d5ccecc0 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cced18 <col:30>
|-CXXMethodDecl 0x55c9d5cceed8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55c9d5cced50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55c9d5ccedc8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5ccef88 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccefe0 <col:30>
|-CXXMethodDecl 0x55c9d5ccf088 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55c9d5ccf1a8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55c9d5ccf2c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55c9d5ccf368 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9d5ccf390 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55c9d5ccf4b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55c9d5ccf558 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccf5b0 <col:30>
|-CXXMethodDecl 0x55c9d5ccf658 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55c9d5ccf6f8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccf750 <col:30>
|-AccessSpecDecl 0x55c9d5ccf778 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55c9d5ccf7a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55c9d5ccf8a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55c9d5ccf8f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5ccf880 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55c9d5ccf860 <col:14> 'int' 48
|-CXXMethodDecl 0x55c9d5ccf958 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55c9d5ccf9f8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccfa50 <col:30>
|-CXXMethodDecl 0x55c9d5ccfac8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55c9d5ccfb68 <col:20>
| `-OptimizeNoneAttr 0x55c9d5ccfbc0 <col:30>
|-CXXMethodDecl 0x55c9d5ccfc88 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c9d5ccfbf8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55c9d5ccfe28 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55c9d5ccffc8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55c9d5ccfed8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55c9d5cd0070 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55c9d5cd0170 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9d5cd0520 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd0150 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9d5cd0130 <col:9> 'int' 0
| |-EnumConstantDecl 0x55c9d5cd0200 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9d5cd0538 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd01e0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55c9d5cd01c0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c9d5cd0290 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9d5cd0550 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd0270 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55c9d5cd0250 <col:14> 'int' 2
| |-EnumConstantDecl 0x55c9d5cd0320 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9d5cd0568 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd0300 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55c9d5cd02e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55c9d5cd03b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9d5cd0580 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd0390 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9d5cd0370 <col:13> 'int' 4
| |-EnumConstantDecl 0x55c9d5cd0440 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c9d5cd0598 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd0420 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55c9d5cd0400 <col:13> 'int' 5
| `-EnumConstantDecl 0x55c9d5cd04d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55c9d5cd05b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5cd04b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55c9d5cd0490 <col:14> 'int' 6
|-CXXMethodDecl 0x55c9d5cd0618 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55c9d5cd06b8 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cd0710 <col:30>
|-CXXMethodDecl 0x55c9d5cd0808 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55c9d5cd0748 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55c9d5cd08b0 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cd0908 <col:30>
|-CXXMethodDecl 0x55c9d5cd0978 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55c9d5cd0aa0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55c9d5cd0c18 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55c9d5cd0b50 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55c9d5cd0ce0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55c9d5cd0da8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55c9d5cd0ee8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55c9d5cd0e58 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55c9d5cd0f90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55c9d5cd1090 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c9d5cd1290 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd1070 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9d5cd1050 <col:23> 'int' 0
| |-EnumConstantDecl 0x55c9d5cd1120 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c9d5cd12a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd1100 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55c9d5cd10e0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55c9d5cd11b0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c9d5cd12c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd1190 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9d5cd1170 <col:24> 'int' 0
| `-EnumConstantDecl 0x55c9d5cd1240 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55c9d5cd12d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5cd1220 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55c9d5cd1200 <col:47> 'int' 16
|-CXXMethodDecl 0x55c9d5cd1338 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55c9d5cd14a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55c9d5cd13e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55c9d5cd1550 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cd15a8 <col:30>
|-CXXMethodDecl 0x55c9d5cd15f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55c9d5ce4f80 <col:18, col:36>
|   `-ReturnStmt 0x55c9d5ce4f70 <col:20, col:33>
|     `-ImplicitCastExpr 0x55c9d5ce4f58 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c9d5ce4f38 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55c9d5ce4f08 <col:27> '<bound member function type>' ->xanno 0x55c9d5ccf658
|           `-CXXThisExpr 0x55c9d5ce4ef8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55c9d5cd16f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55c9d5ce5090 <col:30, col:48>
|   `-ReturnStmt 0x55c9d5ce5080 <col:32, col:45>
|     `-ImplicitCastExpr 0x55c9d5ce5068 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c9d5ce5048 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55c9d5ce5018 <col:39> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|           `-CXXThisExpr 0x55c9d5ce5008 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c9d5cd17d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55c9d5ce5228 <col:24, col:50>
|   `-ReturnStmt 0x55c9d5ce5218 <col:26, col:47>
|     `-UnaryOperator 0x55c9d5ce5200 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9d5ce51e0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c9d5ce51c8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9d5ce5178 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55c9d5cda498
|         |   `-CXXMemberCallExpr 0x55c9d5ce5158 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c9d5ce5128 <col:34> '<bound member function type>' ->xanno 0x55c9d5ccf658
|         |       `-CXXThisExpr 0x55c9d5ce5118 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c9d5ce51a8 <col:46> 'int' 0
|-CXXMethodDecl 0x55c9d5cd18e0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55c9d5ce53f8 <col:36, col:62>
|   `-ReturnStmt 0x55c9d5ce53e8 <col:38, col:59>
|     `-UnaryOperator 0x55c9d5ce53d0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9d5ce53b0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c9d5ce5398 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9d5ce5310 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55c9d5cda498
|         |   `-CXXMemberCallExpr 0x55c9d5ce52f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c9d5ce52c0 <col:46> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|         |       `-CXXThisExpr 0x55c9d5ce52b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c9d5ce5340 <col:58> 'int' 0
|-CXXMethodDecl 0x55c9d5cd19f8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55c9d5ce5590 <col:26, col:53>
|   `-ReturnStmt 0x55c9d5ce5580 <col:28, col:50>
|     `-UnaryOperator 0x55c9d5ce5568 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9d5ce5548 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c9d5ce5530 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9d5ce54e0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55c9d5cda798
|         |   `-CXXMemberCallExpr 0x55c9d5ce54c0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c9d5ce5490 <col:36> '<bound member function type>' ->xanno 0x55c9d5ccf658
|         |       `-CXXThisExpr 0x55c9d5ce5480 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c9d5ce5510 <col:49> 'int' 0
|-CXXMethodDecl 0x55c9d5cd1b18 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55c9d5ce5768 <col:38, col:65>
|   `-ReturnStmt 0x55c9d5ce5758 <col:40, col:62>
|     `-UnaryOperator 0x55c9d5ce5740 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c9d5ce5720 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c9d5ce5708 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9d5ce5678 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55c9d5cda798
|         |   `-CXXMemberCallExpr 0x55c9d5ce5658 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c9d5ce5628 <col:48> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|         |       `-CXXThisExpr 0x55c9d5ce5618 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c9d5ce56a8 <col:61> 'int' 0
|-CXXMethodDecl 0x55c9d5cd1cc8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55c9d5cd1bd0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55c9d5ce5e38 <col:34, line:463:5>
|   |-ParenExpr 0x55c9d5ce5c80 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c9d5ce5c50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce58b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce5888 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce57d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce57c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce5780 <col:23> 'int' lvalue ParmVar 0x55c9d5cd1bd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce57a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce5868 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce5838 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce57f8 <col:33> 'int' lvalue ParmVar 0x55c9d5cd1bd0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c9d5ce5850 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c9d5ce5818 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce5918 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce58f8 <col:56> 'int' 0
|   |   `-CallExpr 0x55c9d5ce5bb0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce5b98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce5b78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce5bf0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce5a08 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c9d5ce5c08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce5a38 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce5c20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce5a70 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55c9d5ce5c38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce5b60 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce5b48 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce5b08 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55c9d5ce5e28 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55c9d5ce5e10 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55c9d5ce5df0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c9d5ce5dc0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c9d5ce5d70 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55c9d5cda498
|         |   `-CXXMemberCallExpr 0x55c9d5ce5d50 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c9d5ce5d20 <col:9> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|         |       `-CXXThisExpr 0x55c9d5ce5d10 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55c9d5ce5dd8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55c9d5ce5da0 <col:21> 'int' lvalue ParmVar 0x55c9d5cd1bd0 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd1f18 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55c9d5cd1d88 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55c9d5cd1e00 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55c9d5ce64c8 <col:40, line:472:5>
|   |-ParenExpr 0x55c9d5ce62e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c9d5ce62b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce5f90 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce5f60 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce5eb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce5e98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce5e58 <col:23> 'int' lvalue ParmVar 0x55c9d5cd1d88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce5e78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce5f40 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce5f10 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce5ed0 <col:33> 'int' lvalue ParmVar 0x55c9d5cd1d88 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c9d5ce5f28 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c9d5ce5ef0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce5ff0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce5fd0 <col:56> 'int' 0
|   |   `-CallExpr 0x55c9d5ce6210 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce61f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce61d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce6250 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce6060 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c9d5ce6268 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce6090 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce6280 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce60c8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55c9d5ce6298 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce61c0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce61a8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce6168 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55c9d5ce64a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55c9d5ce6450 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55c9d5ce6420 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55c9d5ce63d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55c9d5cda498
|     | |   `-CXXMemberCallExpr 0x55c9d5ce63b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55c9d5ce6380 <col:2> '<bound member function type>' ->xanno 0x55c9d5ccf658
|     | |       `-CXXThisExpr 0x55c9d5ce6370 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55c9d5ce6438 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c9d5ce6400 <col:14> 'int' lvalue ParmVar 0x55c9d5cd1d88 'i' 'int'
|     `-ImplicitCastExpr 0x55c9d5ce6490 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5ce6470 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55c9d5cd1e00 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55c9d5cd20d8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55c9d5cd1fe0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c9d5ce6c48 <col:36, line:485:5>
|   |-ParenExpr 0x55c9d5ce69b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce6980 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce6660 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce6630 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce6540 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce6528 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce64e8 <col:23> 'int' lvalue ParmVar 0x55c9d5cd1fe0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce6508 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce6610 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce65f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce6560 <col:33> 'int' lvalue ParmVar 0x55c9d5cd1fe0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce65d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce65c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce6580 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce65a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce66c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce66a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce68e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce68c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce68a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce6920 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce6730 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9d5ce6938 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce6768 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce6950 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce67a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55c9d5ce6968 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce6890 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce6878 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce6838 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55c9d5ce6c38 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55c9d5ce6c20 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55c9d5ce6c08 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9d5ce6bd8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55c9d5ce6b78 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9d5ce6b48 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9d5ce6ac0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c9d5cda370
|             |   `-CXXMemberCallExpr 0x55c9d5ce6aa0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9d5ce6a70 <col:61> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|             |       `-CXXThisExpr 0x55c9d5ce6a60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9d5ce6b60 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9d5ce6af0 <col:74> 'int' lvalue ParmVar 0x55c9d5cd1fe0 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd2328 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55c9d5cd2198 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9d5cd2210 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c9d5ce7398 <col:42, line:500:5>
|   |-ParenExpr 0x55c9d5ce7130 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce7100 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce6de0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce6db0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce6cc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce6ca8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce6c68 <col:23> 'int' lvalue ParmVar 0x55c9d5cd2198 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce6c88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce6d90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce6d78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce6ce0 <col:33> 'int' lvalue ParmVar 0x55c9d5cd2198 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce6d58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce6d40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce6d00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce6d20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce6e40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce6e20 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce7060 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce7048 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce7028 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce70a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce6eb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9d5ce70b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce6ee8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce70d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce6f20 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55c9d5ce70e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce7010 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce6ff8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce6fb8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55c9d5ce7378 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55c9d5ce7328 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9d5ce72f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9d5ce72a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9d5ce7270 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9d5ce7220 <col:48, col:57> 'char [48]' lvalue ->c 0x55c9d5cda370
|     |     |   `-CXXMemberCallExpr 0x55c9d5ce7200 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9d5ce71d0 <col:48> '<bound member function type>' ->xanno 0x55c9d5ccf658
|     |     |       `-CXXThisExpr 0x55c9d5ce71c0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9d5ce7288 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9d5ce7250 <col:61> 'int' lvalue ParmVar 0x55c9d5cd2198 'i' 'int'
|     `-ImplicitCastExpr 0x55c9d5ce7360 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5ce7340 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c9d5cd2210 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c9d5cd24e8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55c9d5cd23f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c9d5ce7af8 <col:35, line:513:5>
|   |-ParenExpr 0x55c9d5ce7808 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce77d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce7530 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce7500 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce7410 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce73f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce73b8 <col:23> 'int' lvalue ParmVar 0x55c9d5cd23f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce73d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce74e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce74c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce7430 <col:33> 'int' lvalue ParmVar 0x55c9d5cd23f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce74a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce7490 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce7450 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce7470 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce7590 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce7570 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce7738 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce7720 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce7700 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce7778 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce7600 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9d5ce7790 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce7638 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce77a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce7670 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55c9d5ce77c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce76e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce76d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce7690 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55c9d5ce7ae8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55c9d5ce7ad0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55c9d5ce7ab8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9d5ce7a88 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55c9d5ce7a00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9d5ce79d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9d5ce7980 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c9d5cda370
|             |   `-CXXMemberCallExpr 0x55c9d5ce7960 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9d5ce7930 <col:60> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|             |       `-CXXThisExpr 0x55c9d5ce7920 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9d5ce79e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9d5ce79b0 <col:73> 'int' lvalue ParmVar 0x55c9d5cd23f0 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd2738 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55c9d5cd25a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9d5cd2620 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55c9d5ce8218 <col:41, line:528:5>
|   |-ParenExpr 0x55c9d5ce7fa0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce7f70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce7c90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce7c60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce7b70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce7b58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce7b18 <col:23> 'int' lvalue ParmVar 0x55c9d5cd25a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce7b38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce7c40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce7c28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce7b90 <col:33> 'int' lvalue ParmVar 0x55c9d5cd25a8 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce7c08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce7bf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce7bb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce7bd0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce7cf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce7cd0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce7ed0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce7eb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce7e98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce7f10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce7d60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c9d5ce7f28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce7d98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce7f40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce7dd0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55c9d5ce7f58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce7e80 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce7e68 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce7e28 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55c9d5ce81f8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55c9d5ce81a8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9d5ce8178 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9d5ce8120 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9d5ce80e0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9d5ce8090 <col:47, col:56> 'char [48]' lvalue ->c 0x55c9d5cda370
|     |     |   `-CXXMemberCallExpr 0x55c9d5ce8070 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9d5ce8040 <col:47> '<bound member function type>' ->xanno 0x55c9d5ccf658
|     |     |       `-CXXThisExpr 0x55c9d5ce8030 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9d5ce80f8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9d5ce80c0 <col:60> 'int' lvalue ParmVar 0x55c9d5cd25a8 'i' 'int'
|     `-ImplicitCastExpr 0x55c9d5ce81e0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5ce81c0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55c9d5cd2620 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55c9d5cd28f8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55c9d5cd2800 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c9d5ce88e8 <col:36, line:541:5>
|   |-ParenExpr 0x55c9d5ce8688 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce8658 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce83b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce8380 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce8290 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce8278 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce8238 <col:23> 'int' lvalue ParmVar 0x55c9d5cd2800 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce8258 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce8360 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce8348 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce82b0 <col:33> 'int' lvalue ParmVar 0x55c9d5cd2800 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce8328 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce8310 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce82d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce82f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce8410 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce83f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce85b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce85a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce8580 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce85f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce8480 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c9d5ce8610 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce84b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce8628 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce84f0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55c9d5ce8640 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce8568 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce8550 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce8510 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55c9d5ce88d8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55c9d5ce88c0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55c9d5ce88a8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9d5ce8878 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55c9d5ce8820 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9d5ce87f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9d5ce87a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c9d5cda370
|             |   `-CXXMemberCallExpr 0x55c9d5ce8780 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9d5ce8750 <col:61> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|             |       `-CXXThisExpr 0x55c9d5ce8740 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9d5ce8808 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9d5ce87d0 <col:74> 'int' lvalue ParmVar 0x55c9d5cd2800 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd2ac8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55c9d5cd29b8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55c9d5cd2a30 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c9d5cd2b78 <col:20>
| `-OptimizeNoneAttr 0x55c9d5cd2bd0 <col:30>
|-CXXMethodDecl 0x55c9d5cd2d08 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55c9d5cd2c10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c9d5ce8fb8 <col:35, line:562:5>
|   |-ParenExpr 0x55c9d5ce8d58 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce8d28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce8a80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce8a50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce8960 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce8948 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce8908 <col:23> 'int' lvalue ParmVar 0x55c9d5cd2c10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce8928 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce8a30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce8a18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce8980 <col:33> 'int' lvalue ParmVar 0x55c9d5cd2c10 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce89f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce89e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce89a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce89c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce8ae0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce8ac0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce8c88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce8c70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce8c50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce8cc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce8b50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c9d5ce8ce0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce8b88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce8cf8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce8bc0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55c9d5ce8d10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce8c38 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce8c20 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce8be0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55c9d5ce8fa8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55c9d5ce8f90 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55c9d5ce8f78 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9d5ce8f48 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55c9d5ce8ef0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9d5ce8ec0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9d5ce8e70 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c9d5cda370
|             |   `-CXXMemberCallExpr 0x55c9d5ce8e50 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9d5ce8e20 <col:60> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|             |       `-CXXThisExpr 0x55c9d5ce8e10 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9d5ce8ed8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9d5ce8ea0 <col:73> 'int' lvalue ParmVar 0x55c9d5cd2c10 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd2f18 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55c9d5cd2dc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9d5cd2e40 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55c9d5ce9698 <col:41, line:577:5>
|   |-ParenExpr 0x55c9d5ce9428 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce93f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce9150 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce9120 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce9030 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce9018 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce8fd8 <col:23> 'int' lvalue ParmVar 0x55c9d5cd2dc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce8ff8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce9100 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce90e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce9050 <col:33> 'int' lvalue ParmVar 0x55c9d5cd2dc8 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce90c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce90b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce9070 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce9090 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce91b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce9190 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce9358 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce9340 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce9320 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce9398 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce9220 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c9d5ce93b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce9258 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce93c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce9290 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55c9d5ce93e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce9308 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce92f0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce92b0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55c9d5ce9678 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55c9d5ce9628 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9d5ce95f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9d5ce9598 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9d5ce9568 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9d5ce9518 <col:47, col:56> 'char [48]' lvalue ->c 0x55c9d5cda370
|     |     |   `-CXXMemberCallExpr 0x55c9d5ce94f8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9d5ce94c8 <col:47> '<bound member function type>' ->xanno 0x55c9d5ccf658
|     |     |       `-CXXThisExpr 0x55c9d5ce94b8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9d5ce9580 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9d5ce9548 <col:60> 'int' lvalue ParmVar 0x55c9d5cd2dc8 'i' 'int'
|     `-ImplicitCastExpr 0x55c9d5ce9660 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5ce9640 <col:65> 'int32_t':'int' lvalue ParmVar 0x55c9d5cd2e40 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55c9d5cd30d8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55c9d5cd2fe0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c9d5ce9dc8 <col:36, line:591:5>
|   |-ParenExpr 0x55c9d5ce9b08 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5ce9ad8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce9830 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce9800 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce9710 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce96f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce96b8 <col:23> 'int' lvalue ParmVar 0x55c9d5cd2fe0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce96d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce97e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce97c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce9730 <col:33> 'int' lvalue ParmVar 0x55c9d5cd2fe0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce97a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce9790 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce9750 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce9770 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce9890 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce9870 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5ce9a38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ce9a20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ce9a00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ce9a78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce9900 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c9d5ce9a90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ce9938 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ce9aa8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ce9970 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55c9d5ce9ac0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ce99e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ce99d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ce9990 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55c9d5ce9db8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55c9d5ce9da0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55c9d5ce9d88 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9d5ce9d58 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55c9d5ce9cd0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9d5ce9ca0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9d5ce9c50 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c9d5cda370
|             |   `-CXXMemberCallExpr 0x55c9d5ce9c30 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9d5ce9c00 <col:61> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|             |       `-CXXThisExpr 0x55c9d5ce9bf0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9d5ce9cb8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9d5ce9c80 <col:74> 'int' lvalue ParmVar 0x55c9d5cd2fe0 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd3328 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55c9d5cd3198 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9d5cd3210 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55c9d5cea4a8 <col:42, line:606:5>
|   |-ParenExpr 0x55c9d5cea238 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c9d5cea208 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ce9f60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ce9f30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5ce9e40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5ce9e28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5ce9de8 <col:23> 'int' lvalue ParmVar 0x55c9d5cd3198 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5ce9e08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ce9f10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c9d5ce9ef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ce9e60 <col:33> 'int' lvalue ParmVar 0x55c9d5cd3198 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ce9ed8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ce9ec0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ce9e80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c9d5ce9ea0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c9d5ce9fc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ce9fa0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c9d5cea168 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5cea150 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5cea130 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5cea1a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5cea030 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c9d5cea1c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5cea068 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5cea1d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5cea0a0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55c9d5cea1f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5cea118 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5cea100 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5cea0c0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55c9d5cea488 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55c9d5cea438 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9d5cea408 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9d5cea3a8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9d5cea378 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9d5cea328 <col:48, col:57> 'char [48]' lvalue ->c 0x55c9d5cda370
|     |     |   `-CXXMemberCallExpr 0x55c9d5cea308 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9d5cea2d8 <col:48> '<bound member function type>' ->xanno 0x55c9d5ccf658
|     |     |       `-CXXThisExpr 0x55c9d5cea2c8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9d5cea390 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9d5cea358 <col:61> 'int' lvalue ParmVar 0x55c9d5cd3198 'i' 'int'
|     `-ImplicitCastExpr 0x55c9d5cea470 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5cea450 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55c9d5cd3210 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55c9d5cd34c0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55c9d5cd33f0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55c9d5cead18 <col:33, line:620:5>
|   |-ParenExpr 0x55c9d5ceaa90 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c9d5ceaa60 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5cea6b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5cea680 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5cea520 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5cea508 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5cea4c8 <col:23> 'int' lvalue ParmVar 0x55c9d5cd33f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5cea4e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5cea660 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c9d5cea648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5cea540 <col:33> 'int' lvalue ParmVar 0x55c9d5cd33f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5cea628 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5cea610 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5cea560 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c9d5cea5e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c9d5cea5d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c9d5cea598 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c9d5cea710 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5cea6f0 <col:79> 'int' 0
|   |   `-CallExpr 0x55c9d5cea9c0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5cea9a8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5cea988 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ceaa00 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5cea7f8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c9d5ceaa18 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5cea840 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ceaa30 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5cea878 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55c9d5ceaa48 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5cea970 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5cea958 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5cea918 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55c9d5cead08 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55c9d5ceacf0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55c9d5ceacd8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c9d5ceaca8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55c9d5ceac20 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c9d5ceabf0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c9d5ceaba0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55c9d5cda370
|             |   `-CXXMemberCallExpr 0x55c9d5ceab80 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c9d5ceab50 <col:67> '<bound member function type>' ->xanno 0x55c9d5ccf4b8
|             |       `-CXXThisExpr 0x55c9d5ceab40 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c9d5ceac08 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c9d5ceabd0 <col:80> 'int' lvalue ParmVar 0x55c9d5cd33f0 'i' 'int'
|-CXXMethodDecl 0x55c9d5cd36d8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55c9d5cd3580 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c9d5cd3600 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55c9d5ceb540 <col:45, line:635:5>
|   |-ParenExpr 0x55c9d5ceb288 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c9d5ceb258 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c9d5ceaf20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c9d5ceaef0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c9d5cead90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c9d5cead78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c9d5cead38 <col:23> 'int' lvalue ParmVar 0x55c9d5cd3580 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c9d5cead58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c9d5ceaed0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c9d5ceaeb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c9d5ceadb0 <col:33> 'int' lvalue ParmVar 0x55c9d5cd3580 'i' 'int'
|   |   |     `-BinaryOperator 0x55c9d5ceae98 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c9d5ceae80 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c9d5ceadd0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c9d5ccf8a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c9d5ceae58 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c9d5ceae40 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c9d5ceae08 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c9d5ceaf80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c9d5ceaf60 <col:79> 'int' 0
|   |   `-CallExpr 0x55c9d5ceb1b8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c9d5ceb1a0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c9d5ceb180 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c9d5ceb1f8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ceaff0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c9d5ceb210 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c9d5ceb038 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c9d5ceb228 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c9d5ceb070 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55c9d5ceb240 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c9d5ceb168 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c9d5ceb150 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c9d5ceb108 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55c9d5ceb520 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55c9d5ceb488 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c9d5ceb458 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55c9d5ceb3f8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c9d5ceb3c8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c9d5ceb378 <col:54, col:63> 'char [48]' lvalue ->c 0x55c9d5cda370
|     |     |   `-CXXMemberCallExpr 0x55c9d5ceb358 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c9d5ceb328 <col:54> '<bound member function type>' ->xanno 0x55c9d5ccf658
|     |     |       `-CXXThisExpr 0x55c9d5ceb318 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c9d5ceb3e0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c9d5ceb3a8 <col:67> 'int' lvalue ParmVar 0x55c9d5cd3580 'i' 'int'
|     `-CXXConstCastExpr 0x55c9d5ceb4f0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55c9d5ceb4d8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55c9d5ceb4a0 <col:91> 'const void *' lvalue ParmVar 0x55c9d5cd3600 'x' 'const void *'
|-CXXMethodDecl 0x55c9d5cd37a8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55c9d5ceb5c8 <col:34, line:640:5>
|   `-ReturnStmt 0x55c9d5ceb5b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55c9d5ceb5a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55c9d5ceb570 <col:16> 'Packet *' lvalue ->_data_packet 0x55c9d5cdaf28
|         `-CXXThisExpr 0x55c9d5ceb560 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c9d5cd38e8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55c9d5cd3858 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9d5ce4688 <col:46> 'bool' true
|-CXXMethodDecl 0x55c9d5cd3a68 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55c9d5cd39a0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55c9d5cd3b10 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55c9d5cd42c0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55c9d5cd3c10 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd4330 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3bf0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55c9d5cd3bd0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c9d5cc8d70 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c9d5cd3ca0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd4348 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3c80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55c9d5cd3c60 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c9d5cc8e00 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c9d5cd3d30 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd4360 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3d10 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c9d5cd3cf0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c9d5cd3dc0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd4378 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3da0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55c9d5cd3d80 <col:19> 'int' 16
| |-EnumConstantDecl 0x55c9d5cd3e50 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd4390 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3e30 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55c9d5cd3e10 <col:21> 'int' 16
| |-EnumConstantDecl 0x55c9d5cd3ee0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd43a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3ec0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c9d5cd3ea0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c9d5cd3f70 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd43c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3f50 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55c9d5cd3f30 <col:19> 'int' EnumConstant 0x55c9d5cd3dc0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c9d5cd4000 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd43d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd3fe0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55c9d5cd3fc0 <col:19> 'int' EnumConstant 0x55c9d5cd3ee0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c9d5cd40d0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd43f0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd40b0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55c9d5cd4090 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c9d5cd4050 <col:23> 'int' EnumConstant 0x55c9d5cd4000 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c9d5cd4070 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c9d5cd41a0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c9d5cd4408 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c9d5cd4180 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55c9d5cd4160 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c9d5cd4120 <col:23> 'int' EnumConstant 0x55c9d5cd4000 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c9d5cd4140 <col:40> 'int' 4
| `-EnumConstantDecl 0x55c9d5cd4270 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55c9d5cd4420 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5cd4250 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55c9d5cd4230 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55c9d5cd41f0 <col:23> 'int' EnumConstant 0x55c9d5cd4000 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55c9d5cd4210 <col:40> 'int' 8
|-CXXMethodDecl 0x55c9d5cd4460 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55c9d5cd4500 <col:68> "" ""
|-CXXMethodDecl 0x55c9d5cd4598 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55c9d5cd4638 <col:45> "" ""
|-CXXMethodDecl 0x55c9d5cd46d0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c9d5cd4770 <col:57> "" ""
|-CXXMethodDecl 0x55c9d5cd4808 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55c9d5cd48a8 <col:45> "" ""
|-CXXMethodDecl 0x55c9d5cd4940 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c9d5cd49e0 <col:57> "" ""
|-CXXMethodDecl 0x55c9d5cd4a70 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c9d5cd4b10 <col:51> "" ""
|-CXXMethodDecl 0x55c9d5cd4ba0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c9d5cd4c40 <col:63> "" ""
|-CXXMethodDecl 0x55c9d5cd4cd0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c9d5cd4d70 <col:53> "" ""
|-CXXMethodDecl 0x55c9d5cd4e00 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c9d5cd4ea0 <col:65> "" ""
|-CXXMethodDecl 0x55c9d5cd4fb8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd4f28 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55c9d5cd5060 <col:61> "" ""
|-CXXMethodDecl 0x55c9d5cd51f8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c9d5cd50e8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55c9d5cd5160 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c9d5cd52a8 <col:67> "" ""
|-CXXMethodDecl 0x55c9d5cd53c0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd5330 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c9d5cd5468 <col:63> "" ""
|-CXXMethodDecl 0x55c9d5cd5600 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c9d5cd54f0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9d5cd5568 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c9d5cd56b0 <col:69> "" ""
|-CXXMethodDecl 0x55c9d5cd57c8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd5738 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c9d5cd5870 <col:63> "" ""
|-CXXMethodDecl 0x55c9d5cd7f48 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5cd7e38 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9d5cd7eb0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9d5cd7ff8 <col:69> "" ""
|-CXXMethodDecl 0x55c9d5cd8110 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd8080 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55c9d5cd81b8 <col:62> "" ""
|-CXXMethodDecl 0x55c9d5cd8350 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c9d5cd8240 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9d5cd82b8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55c9d5cd8400 <col:68> "" ""
|-CXXMethodDecl 0x55c9d5cd8518 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd8488 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c9d5cd85c0 <col:63> "" ""
|-CXXMethodDecl 0x55c9d5cd8758 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55c9d5cd8648 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c9d5cd86c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55c9d5cd8808 <col:69> "" ""
|-CXXMethodDecl 0x55c9d5cd8898 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c9d5cd8938 <col:64> "" ""
|-CXXMethodDecl 0x55c9d5cd89c8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c9d5cd8a68 <col:52> "" ""
|-CXXMethodDecl 0x55c9d5cd8af8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c9d5cd8b98 <col:67> "" ""
|-CXXMethodDecl 0x55c9d5cd8c28 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c9d5cd8cc8 <col:55> "" ""
|-CXXMethodDecl 0x55c9d5cd8de0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd8d50 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c9d5cd8e88 <col:58> "" ""
|-CXXMethodDecl 0x55c9d5cd9020 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c9d5cd8f10 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9d5cd8f88 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c9d5cd90d0 <col:62> "" ""
|-CXXMethodDecl 0x55c9d5cd91e8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd9158 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c9d5cd9290 <col:58> "" ""
|-CXXMethodDecl 0x55c9d5cd9428 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55c9d5cd9318 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9d5cd9390 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55c9d5cd94d8 <col:62> "" ""
|-CXXMethodDecl 0x55c9d5cd95f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd9560 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55c9d5cd9698 <col:60> "" ""
|-CXXMethodDecl 0x55c9d5cd9830 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c9d5cd9720 <col:34> col:37 'int'
| |-ParmVarDecl 0x55c9d5cd9798 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c9d5cd98e0 <col:64> "" ""
|-CXXMethodDecl 0x55c9d5cd99f8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd9968 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c9d5cd9aa0 <col:58> "" ""
|-CXXMethodDecl 0x55c9d5cd9c38 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c9d5cd9b28 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9d5cd9ba0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55c9d5cd9ce8 <col:62> "" ""
|-CXXMethodDecl 0x55c9d5cd9e00 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c9d5cd9d70 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55c9d5cd9ea8 <col:59> "" ""
|-CXXMethodDecl 0x55c9d5cda040 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c9d5cd9f30 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c9d5cd9fa8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c9d5cda0f0 <col:63> "" ""
|-AccessSpecDecl 0x55c9d5cda160 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9d5cda188 prev 0x55c9d5ccf390 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9d5cda280 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55c9d5cda370 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55c9d5cda498 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55c9d5cda618 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55c9d5cda798 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55c9d5cda918 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55c9d5ceb748 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9d5cebfb8 <col:11>
| |-CXXDestructorDecl 0x55c9d5ceb820 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55c9d5ceb958 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c9d5ceb958
| | `-ParmVarDecl 0x55c9d5ceba68 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55c9d5cebb08 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9d5cebb08
| | `-ParmVarDecl 0x55c9d5cebc18 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55c9d5cee9d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9d5ceeae8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55c9d5ceed68 <col:11>
| |   `-ReturnStmt 0x55c9d5ceed58 <col:11>
| |     `-UnaryOperator 0x55c9d5ceed40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c9d5ceed30 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55c9d5ceeb58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c9d5ceeb58
|   `-ParmVarDecl 0x55c9d5ceec68 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55c9d5cda980 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9d5cdaa98 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55c9d5cdab38 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55c9d5cdaba0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55c9d5cdac08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55c9d5cdac70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55c9d5cdacd0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55c9d5cdad90 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55c9d5cdadf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55c9d5cdae50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55c9d5ceb658 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55c9d5cdab38 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55c9d5cebfc8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55c9d5cec020 <col:12>
| |-CXXConstructorDecl 0x55c9d5cebc88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c9d5cebc88
| | `-ParmVarDecl 0x55c9d5cebd98 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55c9d5cebe38 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c9d5cebe38
| | `-ParmVarDecl 0x55c9d5cebf48 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55c9d5cee0c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55c9d5cdaec8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55c9d5cdaf28 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55c9d5cdaf90 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55c9d5cdaff8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55c9d5cdb060 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55c9d5cdb0c8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55c9d5cdb128 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55c9d5cdb188 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55c9d5cdb1f0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55c9d5cdb278 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55c9d5cdaec8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55c9d5ceb5f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55c9d5cdb128 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55c9d5cec030 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55c9d5cec090 <col:21, line:755:5>
|-CXXConstructorDecl 0x55c9d5cdb418 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55c9d5cdb358 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55c9d5cdb510 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55c9d5cdb6f8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55c9d5cdb600 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55c9d5cdb9c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55c9d5cdb7b0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c9d5cdb828 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c9d5cdb8a0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5cdbbe8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55c9d5cdba98 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5cdbb10 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55c9d5ce41c8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55c9d5cdbca8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55c9d5cdbd20 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55c9d5cdbd98 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55c9d5ce4320 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c9d5ce4290 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c9d5ce4468 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c9d5ce43d8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55c9d5ce4560 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5ad4980 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c9d5ad4a98 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55c9d5ad4b38 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55c9d5ad4b98 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55c9d5ad4bf8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55c9d5ad4ca8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5ad4fb0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c9d5ad50c8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55c9d5ad5170 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55c9d5ad51d8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55c9d5ad5268 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55c9d5adb300 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c9d5adb738 <col:12>
|-CXXConstructorDecl 0x55c9d5adb408 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9d5adb518 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c9d5ad5170 'data' 'const char *'
| | `-ImplicitCastExpr 0x55c9d5addcc0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55c9d5addc90 <col:12> 'const char *const' lvalue .data 0x55c9d5ad5170
| |     `-DeclRefExpr 0x55c9d5addc70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5adb518 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c9d5ad51d8 'length' 'int'
| | `-ImplicitCastExpr 0x55c9d5addd50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c9d5addd20 <col:12> 'const int' lvalue .length 0x55c9d5ad51d8
| |     `-DeclRefExpr 0x55c9d5addd00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5adb518 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c9d5ad5268 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55c9d5addde0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55c9d5adddb0 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9d5ad5268
| |     `-DeclRefExpr 0x55c9d5addd90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5adb518 '' 'const String::rep_t &'
| `-CompoundStmt 0x55c9d5adde38 <col:12>
|-CXXConstructorDecl 0x55c9d5adb5b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9d5adb5b8
| `-ParmVarDecl 0x55c9d5adb6c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55c9d5ae0c20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c9d5aec638 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c9d5aec748 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55c9d5aecc60 <col:12>
|   |-BinaryOperator 0x55c9d5aeca78 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c9d5aeca30 <col:12> 'const char *' lvalue ->data 0x55c9d5ad5170
|   | | `-CXXThisExpr 0x55c9d5aeca20 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c9d5aeca60 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55c9d5aec9f0 <col:12> 'const char *const' lvalue .data 0x55c9d5ad5170
|   |     `-DeclRefExpr 0x55c9d5aec9d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5aec748 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c9d5aecb40 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55c9d5aecaf8 <col:12> 'int' lvalue ->length 0x55c9d5ad51d8
|   | | `-CXXThisExpr 0x55c9d5aecae8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c9d5aecb28 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55c9d5aecab8 <col:12> 'const int' lvalue .length 0x55c9d5ad51d8
|   |     `-DeclRefExpr 0x55c9d5aeca98 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5aec748 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c9d5aecc08 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55c9d5aecbc0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c9d5ad5268
|   | | `-CXXThisExpr 0x55c9d5aecbb0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c9d5aecbf0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55c9d5aecb80 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9d5ad5268
|   |     `-DeclRefExpr 0x55c9d5aecb60 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5aec748 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55c9d5aecc50 <col:12>
|     `-UnaryOperator 0x55c9d5aecc38 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c9d5aecc28 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55c9d5aec7b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9d5aec7b8
  `-ParmVarDecl 0x55c9d5aec8c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c9d5acbef0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c9d5acc008 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55c9d5acc098 <col:16, col:22> col:16 public
|-TypedefDecl 0x55c9d5acc0d8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55c9d57a2fd0 'const char *'
|   `-QualType 0x55c9d57a2521 'const char' const
|     `-BuiltinType 0x55c9d57a2520 'char'
|-TypedefDecl 0x55c9d5acc160 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55c9d5acc130 'String::const_iterator' sugar
|   |-Typedef 0x55c9d5acc0d8 'const_iterator'
|   `-PointerType 0x55c9d57a2fd0 'const char *'
|     `-QualType 0x55c9d57a2521 'const char' const
|       `-BuiltinType 0x55c9d57a2520 'char'
|-TypedefDecl 0x55c9d5acc2d0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55c9d5acc240 'int (String::*)() const'
|   |-RecordType 0x55c9d5acbf80 'String'
|   | `-CXXRecord 0x55c9d5acbef0 'String'
|   `-ParenType 0x55c9d5acc1e0 'int () const' sugar
|     `-FunctionProtoType 0x55c9d5aa0d80 'int () const' const cdecl
|       `-BuiltinType 0x55c9d57a2580 'int'
|-TypedefDecl 0x55c9d5acc338 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55c9d58f5760 'int64_t' sugar
|   |-Typedef 0x55c9d580b390 'int64_t'
|   `-TypedefType 0x55c9d57e4630 '__int64_t' sugar
|     |-Typedef 0x55c9d57e4208 '__int64_t'
|     `-BuiltinType 0x55c9d57a25a0 'long'
|-TypedefDecl 0x55c9d5acc3a0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55c9d58f5680 'uint64_t' sugar
|   |-Typedef 0x55c9d580b530 'uint64_t'
|   `-TypedefType 0x55c9d57e46c0 '__uint64_t' sugar
|     |-Typedef 0x55c9d57e4278 '__uint64_t'
|     `-BuiltinType 0x55c9d57a2640 'unsigned long'
|-TypedefDecl 0x55c9d5acc430 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55c9d5acc400 'String::intmax_t' sugar
|   |-Typedef 0x55c9d5acc338 'intmax_t'
|   `-TypedefType 0x55c9d58f5760 'int64_t' sugar
|     |-Typedef 0x55c9d580b390 'int64_t'
|     `-TypedefType 0x55c9d57e4630 '__int64_t' sugar
|       |-Typedef 0x55c9d57e4208 '__int64_t'
|       `-BuiltinType 0x55c9d57a25a0 'long'
|-TypedefDecl 0x55c9d5acc4c0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55c9d5acc490 'String::uintmax_t' sugar
|   |-Typedef 0x55c9d5acc3a0 'uintmax_t'
|   `-TypedefType 0x55c9d58f5680 'uint64_t' sugar
|     |-Typedef 0x55c9d580b530 'uint64_t'
|     `-TypedefType 0x55c9d57e46c0 '__uint64_t' sugar
|       |-Typedef 0x55c9d57e4278 '__uint64_t'
|       `-BuiltinType 0x55c9d57a2640 'unsigned long'
|-CXXConstructorDecl 0x55c9d5acc580 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55c9d5acc728 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55c9d5acc668 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55c9d5acc8d8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55c9d5acc818 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55c9d5acca30 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55c9d5acc9a0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55c9d5accc48 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c9d5accaf8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55c9d5accb78 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55c9d5acce68 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55c9d5accd18 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5accd98 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55c9d5acd088 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c9d5accf38 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55c9d5accfb8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55c9d5acd2a8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55c9d5acd158 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5acd1d8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55c9d5acd438 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55c9d5acd370 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55c9d5acd5b8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55c9d5acd4f8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55c9d5acd748 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55c9d5acd680 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55c9d5acd8a0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55c9d5acd810 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55c9d5acd9f8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55c9d5acd968 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55c9d5acdb50 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55c9d5acdac0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55c9d5acdcd8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55c9d5acdc18 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55c9d5acde68 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55c9d5acdda0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55c9d5acdff8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55c9d5acdf30 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55c9d5ace188 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55c9d5ace0c0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55c9d5ace280 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55c9d5ace3a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55c9d5ace528 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55c9d5ace460 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55c9d5ace678 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55c9d5ace5e8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55c9d5ace730 <col:63> "" ""
|-CXXMethodDecl 0x55c9d5ace878 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55c9d5ace7b8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55c9d5acea88 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55c9d5ace938 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55c9d5ace9b8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55c9d5aceca8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55c9d5aceb50 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55c9d5acebd0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55c9d5acef88 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55c9d5aced68 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55c9d5acede8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55c9d5adadd0 <col:55> 'int' 10
| `-ParmVarDecl 0x55c9d5acee60 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9d5adadf0 <col:76> 'bool' true
|-CXXMethodDecl 0x55c9d5acf268 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55c9d5acf050 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55c9d5acf0d0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55c9d5adae00 <col:56> 'int' 10
| `-ParmVarDecl 0x55c9d5acf148 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c9d5adae20 <col:77> 'bool' true
|-CXXMethodDecl 0x55c9d5acf370 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55c9d5acf438 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55c9d5acf500 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55c9d5acf5a0 <col:20>
| `-OptimizeNoneAttr 0x55c9d5acf5f8 <col:30>
|-CXXConversionDecl 0x55c9d5acf6e8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c9d5acf7b8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55c9d5acf878 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55c9d5acf968 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c9d5acfa28 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c9d5acfba8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55c9d5acfae0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55c9d5acfcf8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55c9d5acfc68 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55c9d5acfde8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55c9d5acfea8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55c9d5ad00f8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55c9d5acff60 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55c9d5acffe0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55c9d5ad0358 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55c9d5ad01c0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5ad0240 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55c9d5ad0428 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55c9d5ad0638 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55c9d5ad04e0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55c9d5ad0560 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55c9d5ad0858 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55c9d5ad0700 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55c9d5ad0780 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55c9d5ad09e8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55c9d5ad0920 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55c9d5ad0ad8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55c9d5ad0c48 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c9d5ad0b88 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c9d5ad0e58 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55c9d5ad0d08 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c9d5ad0d88 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c9d5ad1070 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55c9d5ad0f18 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55c9d5ad0f90 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55c9d5ad1200 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55c9d5ad1130 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c9d5ad1420 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55c9d5ad12c0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55c9d5ad1340 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c9d5ad1570 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c9d5ad14e0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55c9d5ad1748 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c9d5ad1630 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c9d5ad16b0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55c9d5ad1898 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55c9d5ad1808 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55c9d5ad1ab0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55c9d5ad1950 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55c9d5ad19d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55c9d5adae30 <col:39> 'int' 0
|-CXXMethodDecl 0x55c9d5ad1cd0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55c9d5ad1b70 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55c9d5ad1bf0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55c9d5adae50 <col:48> 'int' 0
|-CXXMethodDecl 0x55c9d5ad1eb0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55c9d5ad1d90 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55c9d5ad1e10 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55c9d5adae70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55c9d5ad1f80 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55c9d5ad2040 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55c9d5ad2100 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55c9d5ad21c0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55c9d5ad2280 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55c9d5ad2428 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c9d5ad2330 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55c9d5ad25a8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55c9d5ad24e0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55c9d5ad2780 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c9d5ad2668 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55c9d5ad28f8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55c9d5ad2838 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55c9d5ad2a40 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55c9d5ad29b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c9d5ad2b90 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55c9d5ad2b00 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55c9d5ad2d68 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c9d5ad2c50 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c9d5ad2cd0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c9d5ad2f48 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c9d5ad2e30 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55c9d5ad2eb0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55c9d5ad3098 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55c9d5ad3008 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55c9d5ad32a8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55c9d5ad3158 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55c9d5ad31d8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55c9d5ad3408 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55c9d5ad3370 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c9d5ad3560 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55c9d5ad34c8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55c9d5ad3608 <col:57> "" ""
|-CXXMethodDecl 0x55c9d5ad3718 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c9d5ad3688 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55c9d5ad3868 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c9d5ad37d8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55c9d5ad39e8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55c9d5ad3920 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55c9d5ad3ab0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55c9d5ad3b70 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55c9d5ad3c30 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55c9d5ad3cd0 <col:49> "" ""
|-CXXMethodDecl 0x55c9d5ad3d60 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55c9d5ad3e20 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55c9d5ad3f10 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55c9d5ad3fd8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55c9d5ad4098 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55c9d5ad4158 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55c9d5ad4250 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55c9d5ad4318 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55c9d5ad43e0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55c9d5ad45b8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55c9d5ad4498 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55c9d5ad4518 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55c9d5ad47e0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55c9d5ad4680 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55c9d5ad4700 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55c9d5ad48f0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55c9d5ad4958 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55c9d5ad4980 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c9d5ad4a98 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55c9d5ad4b38 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55c9d5ad4b98 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55c9d5ad4bf8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55c9d5ad4ca8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55c9d5ad4d10 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55c9d5ad4f48 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55c9d5ad4f98 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5ad4f28 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55c9d5ad4e38 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55c9d5ad4de0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55c9d5ad4e20 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55c9d5ad4e00 <col:32> 'int' 8
|-CXXRecordDecl 0x55c9d5ad4fb0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c9d5ad50c8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55c9d5ad5170 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55c9d5ad51d8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55c9d5ad5268 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55c9d5adb300 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c9d5adb738 <col:12>
| |-CXXConstructorDecl 0x55c9d5adb408 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9d5adb518 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c9d5ad5170 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55c9d5addcc0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55c9d5addc90 <col:12> 'const char *const' lvalue .data 0x55c9d5ad5170
| | |     `-DeclRefExpr 0x55c9d5addc70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5adb518 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c9d5ad51d8 'length' 'int'
| | | `-ImplicitCastExpr 0x55c9d5addd50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55c9d5addd20 <col:12> 'const int' lvalue .length 0x55c9d5ad51d8
| | |     `-DeclRefExpr 0x55c9d5addd00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5adb518 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c9d5ad5268 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55c9d5addde0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55c9d5adddb0 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9d5ad5268
| | |     `-DeclRefExpr 0x55c9d5addd90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5adb518 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55c9d5adde38 <col:12>
| |-CXXConstructorDecl 0x55c9d5adb5b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9d5adb5b8
| | `-ParmVarDecl 0x55c9d5adb6c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55c9d5ae0c20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c9d5aec638 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c9d5aec748 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55c9d5aecc60 <col:12>
| |   |-BinaryOperator 0x55c9d5aeca78 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55c9d5aeca30 <col:12> 'const char *' lvalue ->data 0x55c9d5ad5170
| |   | | `-CXXThisExpr 0x55c9d5aeca20 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c9d5aeca60 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c9d5aec9f0 <col:12> 'const char *const' lvalue .data 0x55c9d5ad5170
| |   |     `-DeclRefExpr 0x55c9d5aec9d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5aec748 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c9d5aecb40 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55c9d5aecaf8 <col:12> 'int' lvalue ->length 0x55c9d5ad51d8
| |   | | `-CXXThisExpr 0x55c9d5aecae8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c9d5aecb28 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55c9d5aecab8 <col:12> 'const int' lvalue .length 0x55c9d5ad51d8
| |   |     `-DeclRefExpr 0x55c9d5aeca98 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5aec748 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c9d5aecc08 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55c9d5aecbc0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c9d5ad5268
| |   | | `-CXXThisExpr 0x55c9d5aecbb0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c9d5aecbf0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c9d5aecb80 <col:12> 'String::memo_t *const' lvalue .memo 0x55c9d5ad5268
| |   |     `-DeclRefExpr 0x55c9d5aecb60 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c9d5aec748 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55c9d5aecc50 <col:12>
| |     `-UnaryOperator 0x55c9d5aecc38 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c9d5aecc28 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55c9d5aec7b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c9d5aec7b8
|   `-ParmVarDecl 0x55c9d5aec8c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55c9d5ad52e0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55c9d5ad5528 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55c9d5ad5348 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55c9d5ad53c8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55c9d5ad5440 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55c9d5adb2c0 <col:79, line:261:5>
|   |-BinaryOperator 0x55c9d5adaf38 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c9d5adaed0 <col:2, col:5> 'const char *' lvalue .data 0x55c9d5ad5170
|   | | `-MemberExpr 0x55c9d5adaea0 <col:2> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|   | |   `-CXXThisExpr 0x55c9d5adae90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c9d5adaf20 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9d5adaf00 <col:12> 'const char *' lvalue ParmVar 0x55c9d5ad5348 'data' 'const char *'
|   |-BinaryOperator 0x55c9d5adb000 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55c9d5adaf98 <col:2, col:5> 'int' lvalue .length 0x55c9d5ad51d8
|   | | `-MemberExpr 0x55c9d5adaf68 <col:2> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|   | |   `-CXXThisExpr 0x55c9d5adaf58 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c9d5adafe8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c9d5adafc8 <col:14> 'int' lvalue ParmVar 0x55c9d5ad53c8 'length' 'int'
|   `-IfStmt 0x55c9d5adb2a8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55c9d5adb120 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c9d5adb108 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55c9d5adb0e8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55c9d5adb0c8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55c9d5adb060 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|     |       | `-MemberExpr 0x55c9d5adb030 <col:7> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|     |       |   `-CXXThisExpr 0x55c9d5adb020 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55c9d5adb0b0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c9d5adb090 <col:17> 'String::memo_t *' lvalue ParmVar 0x55c9d5ad5440 'memo' 'String::memo_t *'
|     `-CallExpr 0x55c9d5adb280 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55c9d5adb268 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c9d5adb170 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55c9d5ac3f58 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55c9d5adb1d8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c9d5ad4b38
|         `-ImplicitCastExpr 0x55c9d5adb1c0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55c9d5adb1a0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55c9d5ad5440 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55c9d5ad57d8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55c9d5ad55f8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55c9d5ad5678 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55c9d5ad56f0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55c9d5ad52e0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55c9d5adb748 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c9d5adb8d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55c9d5adb840 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55c9d5adb7b0 <col:2> '<bound member function type>' ->assign_memo 0x55c9d5ad5528
|     | `-ImplicitCastExpr 0x55c9d5adb878 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55c9d5adb7a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55c9d5adb890 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9d5adb7e0 <col:14> 'const char *' lvalue ParmVar 0x55c9d5ad55f8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55c9d5adb8a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c9d5adb800 <col:20> 'int' lvalue ParmVar 0x55c9d5ad5678 'length' 'int'
|     `-ImplicitCastExpr 0x55c9d5adb8c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55c9d5adb820 <col:28> 'String::memo_t *' lvalue ParmVar 0x55c9d5ad56f0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55c9d5ad5968 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55c9d5ad58a8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55c9d5adbb30 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55c9d5adbab0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55c9d5adb900 <col:2> '<bound member function type>' ->assign_memo 0x55c9d5ad5528
|     | `-CXXThisExpr 0x55c9d5adb8f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55c9d5adbae8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55c9d5adb980 <col:14, col:19> 'const char *' lvalue .data 0x55c9d5ad5170
|     |   `-MemberExpr 0x55c9d5adb950 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55c9d5ad52e0
|     |     `-DeclRefExpr 0x55c9d5adb930 <col:14> 'const String' lvalue ParmVar 0x55c9d5ad58a8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55c9d5adbb00 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55c9d5adba00 <col:25, col:30> 'int' lvalue .length 0x55c9d5ad51d8
|     |   `-MemberExpr 0x55c9d5adb9d0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55c9d5ad52e0
|     |     `-DeclRefExpr 0x55c9d5adb9b0 <col:25> 'const String' lvalue ParmVar 0x55c9d5ad58a8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55c9d5adbb18 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55c9d5adba80 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|         `-MemberExpr 0x55c9d5adba50 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55c9d5ad52e0
|           `-DeclRefExpr 0x55c9d5adba30 <col:38> 'const String' lvalue ParmVar 0x55c9d5ad58a8 'x' 'const String &'
|-CXXMethodDecl 0x55c9d5ad5a30 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55c9d5adc4f0 <col:31, line:278:5>
|   `-IfStmt 0x55c9d5adc4d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55c9d5adbbd0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c9d5adbbb8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55c9d5adbb88 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|     |     `-MemberExpr 0x55c9d5adbb58 <col:6> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|     |       `-CXXThisExpr 0x55c9d5adbb48 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55c9d5adc4b0 <col:15, line:277:2>
|       |-ParenExpr 0x55c9d5adc080 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55c9d5adc050 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55c9d5adbce0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55c9d5adbcc8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55c9d5adbcb0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55c9d5adbc70 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c9d5ad4b38
|       |   |       `-ImplicitCastExpr 0x55c9d5adbc58 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55c9d5adbc28 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|       |   |           `-MemberExpr 0x55c9d5adbbf8 <col:27> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|       |   |             `-CXXThisExpr 0x55c9d5adbbe8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55c9d5adbd40 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55c9d5adbd20 <col:54> 'int' 0
|       |   `-CallExpr 0x55c9d5adbfb0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55c9d5adbf98 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55c9d5adbf18 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c9d583bf70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55c9d5adbff0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c9d5adbe28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55c9d5adc008 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c9d5adbe58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55c9d5adc020 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55c9d5adbe90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55c9d5adc038 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55c9d5adbf00 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55c9d5adbee8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55c9d5adbeb0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55c9d5adc3d0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55c9d5adc290 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55c9d5adc278 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55c9d5adc1f0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55c9d5ac53a0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55c9d5adc1c0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c9d5ad4b38
|       | |   `-ImplicitCastExpr 0x55c9d5adc1a8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55c9d5adc178 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|       | |       `-MemberExpr 0x55c9d5adc148 <col:40> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|       | |         `-CXXThisExpr 0x55c9d5adc138 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55c9d5adc390 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55c9d5adc378 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55c9d5adc2b8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55c9d5ada210 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55c9d5adc3b8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55c9d5adc318 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|       |       `-MemberExpr 0x55c9d5adc2e8 <col:15> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|       |         `-CXXThisExpr 0x55c9d5adc2d8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55c9d5adc490 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55c9d5adc428 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c9d5ad5268
|         | `-MemberExpr 0x55c9d5adc3f8 <col:6> 'String::rep_t' lvalue ->_r 0x55c9d5ad52e0
|         |   `-CXXThisExpr 0x55c9d5adc3e8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55c9d5adc478 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55c9d5adc458 <col:16> 'int' 0
|-CXXMethodDecl 0x55c9d5ad5cc8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55c9d5ad5ae8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c9d5ad5b68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c9d5ad5be0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55c9d5ad5da0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55c9d5ad5ff0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55c9d5ad5e58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c9d5ad5ed8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c9d5ad5f50 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c9d5ad61d8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55c9d5ad60c0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55c9d5ad6140 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55c9d5ad62d8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55c9d5adc5c8 <col:41, line:286:5>
|   `-ReturnStmt 0x55c9d5adc5b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55c9d5adc588 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55c9d5adc550 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55c9d5adc538 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55c9d5adc518 <col:46> 'int' 1
|-CXXMethodDecl 0x55c9d5ad6578 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55c9d5ad6390 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55c9d5ad6410 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55c9d5ad6490 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55c9d5ada210 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55c9d5ad6640 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c9d5ada2e0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55c9d5ada4b0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c9d5ada398 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c9d5ada418 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55c9d5ada570 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55c9d5ada638 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55c9d5ada738 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55c9d5ada7b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55c9d5ada828 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55c9d5ada890 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55c9d5ada990 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55c9d5ada9e0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c9d5ada970 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55c9d5ada950 <col:22> 'int' 14
|-CXXMethodDecl 0x55c9d5adabf8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55c9d5adaa10 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55c9d5adaa90 <col:38> col:41 'int'
| `-ParmVarDecl 0x55c9d5adab10 <col:43> col:46 'int'
|-FriendDecl 0x55c9d5adad00 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55c9d5adad90 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
