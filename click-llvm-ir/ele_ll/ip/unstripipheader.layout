
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b15943788 prev 0x556b1593af28 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556b15943880 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x556b15943910 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x556b15943988 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x556b15943a48 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x556b15943b10 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x556b15943c88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x556b15943bc0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x556b15943d30 <col:24>
| `-OptimizeNoneAttr 0x556b15943d88 <col:34>
|-CXXMethodDecl 0x556b15943dd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x556b15944088 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x556b15943e80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x556b15943ef8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x556b15943f78 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x556b15944140 <line:229:7, col:14> col:7 private
|-FieldDecl 0x556b15944178 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x556b159441e0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x556b15944268 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x556b15944588 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x556b15944320 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x556b15944398 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x556b15944410 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x556b15944490 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x556b159446a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x556b1594c018 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x556b1594c018
| `-ParmVarDecl 0x556b1594c128 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x556b1594c1c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x556b1594c1c8
| `-ParmVarDecl 0x556b1594c2d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x556b1594fe98 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b159367a0 prev 0x556b15936520 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556b15936898 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x556b15936928 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x556b15936988 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x556b15936a78 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x556b15936b78 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x556b15936d48 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x556b15936bf8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x556b15936c70 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x556b15936ed8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x556b15936e10 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x556b15936f80 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x556b159370b8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x556b15936ff0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x556b15937258 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x556b15937198 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x556b159373f8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x556b15937338 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x556b159374a0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x556b159375a0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x556b15937680 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15937580 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x556b15937560 <col:26> 'int' 1
| `-EnumConstantDecl 0x556b15937630 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x556b15937698 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15937610 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x556b159375f0 <col:44> 'int' 2
|-CXXMethodDecl 0x556b159377e0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x556b159376c8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x556b15937748 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x556b15937938 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x556b159378a8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x556b15937b78 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x556b159379f8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x556b15937a70 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x556b15937c28 <col:20>
| `-OptimizeNoneAttr 0x556b15937c80 <col:30>
|-CXXMethodDecl 0x556b15937d88 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x556b15937cc0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x556b15937e30 <col:20>
| `-OptimizeNoneAttr 0x556b15937e88 <col:30>
|-CXXMethodDecl 0x556b15937ed8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x556b15937fa0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x556b159380b8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x556b15938140 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x556b159381c8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x556b15938250 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x556b159382d8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x556b15938368 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x556b15938428 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x556b159384b0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x556b15938538 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x556b159385c0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x556b15938648 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x556b159386d0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x556b15938760 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x556b15938820 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x556b159388b0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x556b15938a00 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x556b15938968 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x556b15938b90 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x556b15938ac0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x556b15938e40 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x556b15938c48 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x556b15938cc8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x556b15938d48 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x556b15938ef8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x556b15939000 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556b15939290 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15938fe0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x556b15938fc0 <col:33> 'int' 0
| |-EnumConstantDecl 0x556b15939090 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556b159392a8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15939070 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x556b15939050 <col:32> 'int' 20
| |-EnumConstantDecl 0x556b15939120 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556b159392c0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15939100 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x556b159390e0 <col:38> 'int' 90
| |-EnumConstantDecl 0x556b159391b0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x556b159392d8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15939190 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x556b15939170 <col:35> 'int' 100
| `-EnumConstantDecl 0x556b15939240 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x556b159392f0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15939220 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x556b15939200 <col:32> 'int' 2000
|-CXXMethodDecl 0x556b15939330 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x556b15939770 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556b159395e0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x556b15939658 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556b15939840 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x556b159399c0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x556b159398f0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556b15939bc8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556b15939a78 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x556b15939af0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556b15939cc8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x556b15939d68 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x556b15939e30 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x556b15939ec0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x556b1593a0f0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15939ea0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x556b15939e80 <col:36> 'int' EnumConstant 0x556b15939e30 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x556b15939f10 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556b15939f60 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556b15939fb0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556b1593a000 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x556b1593a050 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x556b1593a0a0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x556b1593a1d8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x556b1593a118 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x556b1593a2a0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x556b1593a360 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x556b1593a420 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x556b1593a4e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x556b1593a5f8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x556b1593a6c0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x556b1593a840 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x556b1593a770 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x556b1593a968 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x556b1593ab68 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x556b1593aa18 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x556b1593aa98 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x556b159484b8 <col:54, line:127:5>
|   |-ParenExpr 0x556b15948368 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x556b15948338 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x556b15948028 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x556b15948000 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x556b15947fe8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x556b15947fd0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x556b15947fa0 <col:31> 'Router *' lvalue ->_router 0x556b15945e80
|   |   |         `-CXXThisExpr 0x556b15947f90 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x556b15948088 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b15948068 <col:48> 'int' 0
|   |   `-CallExpr 0x556b15948298 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x556b15948280 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b15948260 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b159482d8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b159480f8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x556b159482f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b15948118 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x556b15948308 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b15948150 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x556b15948320 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b15948248 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b15948230 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b159481e8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x556b15948400 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x556b15948398 <col:9> 'Router *' lvalue ->_router 0x556b15945e80
|   | | `-CXXThisExpr 0x556b15948388 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x556b159483e8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556b159483c8 <col:19> 'Router *' lvalue ParmVar 0x556b1593aa18 'r' 'Router *'
|   `-BinaryOperator 0x556b15948498 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x556b15948430 <col:9> 'int' lvalue ->_eindex 0x556b15945ee8
|     | `-CXXThisExpr 0x556b15948420 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x556b15948480 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x556b15948460 <col:19> 'int' lvalue ParmVar 0x556b1593aa98 'eindex' 'int'
|-CXXMethodDecl 0x556b1593acf0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x556b1593ac28 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x556b1593adc0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x556b1593ae88 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x556b1593af28 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x556b1593b178 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x556b1593aff0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x556b1593b070 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x556b1593b228 <col:20>
| `-OptimizeNoneAttr 0x556b1593b280 <col:30>
|-CXXMethodDecl 0x556b1593b388 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x556b1593b2c0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x556b1593b430 <col:20>
| `-OptimizeNoneAttr 0x556b1593b488 <col:30>
|-CXXMethodDecl 0x556b1593b558 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x556b1593b4c8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x556b1593b600 <col:20>
| `-OptimizeNoneAttr 0x556b1593b658 <col:30>
|-CXXMethodDecl 0x556b1593b7e8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x556b1593b690 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x556b1593b710 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x556b1593b978 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x556b1593b8b0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x556b1593bac8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x556b1593ba38 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x556b1593bc18 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x556b1593bb88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x556b1593bd68 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x556b1593bcd8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x556b1593c028 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x556b1593be20 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x556b1593bea0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x556b1593bf48 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x556b1593c100 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x556b1593c1c0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x556b1593c490 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x556b1593c340 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x556b1593c3b8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x556b1593c5b8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x556b1593c790 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x556b1593c670 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x556b1593c6f0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x556b1593c978 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x556b1593c858 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x556b1593c8d8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x556b1593cce8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x556b1593ca38 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556b1593cab0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556b1593cb30 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x556b15947aa0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x556b15947a80 <col:106> 'int' 0
| `-ParmVarDecl 0x556b1593cba8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556b15947ad8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556b15947ab8 <col:126> 'int' 0
|-CXXMethodDecl 0x556b1593d088 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556b1593cdb8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556b1593ce50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556b1593ced0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x556b1593cf48 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556b15947b10 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556b15947af0 <col:114> 'int' 0
|-CXXMethodDecl 0x556b1593d418 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556b1593d160 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x556b1593d1d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x556b1593d258 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x556b15947b28 <col:96> 'int' 0
| `-ParmVarDecl 0x556b1593d2d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556b15947b68 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556b15947b48 <col:116> 'int' 0
|-CXXMethodDecl 0x556b1593d798 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x556b1593d4e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x556b1593d560 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556b1593d5e0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x556b15947ba0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x556b15947b80 <col:109> 'int' 0
| `-ParmVarDecl 0x556b1593d658 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556b15947bd8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556b15947bb8 <col:129> 'int' 0
|-CXXMethodDecl 0x556b1593db18 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556b1593d868 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x556b1593d8e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556b1593d960 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x556b1593d9d8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556b15947c10 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556b15947bf0 <col:117> 'int' 0
|-CXXMethodDecl 0x556b1593dea8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x556b1593dbf0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b1593dc68 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x556b1593dce8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x556b15947c28 <col:99> 'int' 0
| `-ParmVarDecl 0x556b1593dd60 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x556b15947c68 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x556b15947c48 <col:119> 'int' 0
|-CXXMethodDecl 0x556b1593e2c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x556b1593df78 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x556b1593dff8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x556b1593e070 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556b1593e0f0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x556b15947ca0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x556b15947c80 <col:108> 'int' 0
| `-ParmVarDecl 0x556b1593e170 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x556b15947cd8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x556b15947cb8 <col:141> 'int' 0
|-CXXMethodDecl 0x556b1593e6e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x556b1593e3a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x556b1593e420 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x556b1593e498 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556b1593e518 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x556b1593e598 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x556b15947cf0 <col:121> 'int' 0
|-CXXMethodDecl 0x556b1593eb18 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x556b1593e7c8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x556b1593e848 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x556b1593e8c0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x556b1593e940 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x556b15947d10 <col:98> 'int' 0
| `-ParmVarDecl 0x556b1593e9c0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x556b15947d30 <col:123> 'int' 0
|-CXXMethodDecl 0x556b1593ede0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x556b1593ebf0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x556b1593ec70 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x556b1593ecf0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x556b15947d50 <col:80> 'int' 0
|-EnumDecl 0x556b1593ee98 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x556b1593efa0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556b1593f230 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b1593ef80 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x556b1593ef60 <col:42> 'int' 1
| |-EnumConstantDecl 0x556b1593f030 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556b1593f248 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b1593f010 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x556b1593eff0 <col:40> 'int' 2
| |-EnumConstantDecl 0x556b1593f0c0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556b1593f260 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b1593f0a0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x556b1593f080 <col:44> 'int' 4
| |-EnumConstantDecl 0x556b1593f150 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x556b1593f278 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b1593f130 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x556b1593f110 <col:36> 'int' 7
| `-EnumConstantDecl 0x556b1593f1e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x556b1593f290 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b1593f1c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x556b1593f1a0 <col:34> 'int' 6
|-CXXMethodDecl 0x556b1593f548 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x556b1593f2b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x556b1593f358 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x556b1593f3d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x556b1593f450 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x556b15947e08 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x556b15947df0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x556b15947dd8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x556b15947db8 <col:98, col:105> 'String' (CXXTemporary 0x556b15947db8)
|           `-CXXTemporaryObjectExpr 0x556b15947d80 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x556b1593f7e8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x556b1593f618 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x556b1593f690 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x556b1593f708 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x556b15947eb8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x556b15947ea0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x556b15947e88 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x556b15947e68 <col:94, col:101> 'String' (CXXTemporary 0x556b15947e68)
| |         `-CXXTemporaryObjectExpr 0x556b15947e30 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x556b159486a0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x556b15948618 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x556b159485e8 <col:9> '<bound member function type>' ->add_task_handlers 0x556b1593f548
|     | `-CXXThisExpr 0x556b159485d8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x556b15948658 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x556b15948558 <col:27> 'Task *' lvalue ParmVar 0x556b1593f618 'task' 'Task *'
|     |-ImplicitCastExpr 0x556b15948670 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x556b15948578 <col:33> 'NotifierSignal *' lvalue ParmVar 0x556b1593f690 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x556b15948688 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x556b15948598 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x556b1593f1e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x556b159485b8 <col:62> 'const String' lvalue ParmVar 0x556b1593f708 'prefix' 'const String &'
|-CXXMethodDecl 0x556b1593f9f8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x556b1593f8b0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x556b1593f928 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x556b15947f68 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x556b15947f50 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x556b15947f38 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x556b15947f18 <col:70, col:77> 'String' (CXXTemporary 0x556b15947f18)
| |         `-CXXTemporaryObjectExpr 0x556b15947ee0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x556b15948878 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x556b159487f0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x556b159487c0 <col:9> '<bound member function type>' ->add_task_handlers 0x556b1593f548
|     | `-CXXThisExpr 0x556b159487b0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x556b15948830 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x556b15948730 <col:27> 'Task *' lvalue ParmVar 0x556b1593f8b0 'task' 'Task *'
|     |-ImplicitCastExpr 0x556b15948848 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x556b15948750 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x556b15948860 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x556b15948770 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x556b1593f1e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x556b15948790 <col:57> 'const String' lvalue ParmVar 0x556b1593f928 'prefix' 'const String &'
|-CXXMethodDecl 0x556b1593fcd8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x556b1593fac0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b1593fb40 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b1593fbb8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x556b1593ff88 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x556b1593fda8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b1593fe28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b1593fea8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x556b15940278 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x556b15940058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b159400d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15940150 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x556b15940528 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x556b15940348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b159403c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15940448 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x556b159407d8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x556b159405f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15940678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b159406f8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x556b15940a88 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x556b159408a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15940928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b159409a0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x556b15940d38 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x556b15940b58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15940bd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15940c58 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x556b15941048 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x556b15940e60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15940ee0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15940f60 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x556b15941328 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x556b15941118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15941198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15941240 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x556b15941608 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x556b159413f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15941478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15941520 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x556b15941870 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x556b159416d8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x556b15941758 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x556b159417d0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x556b15941b18 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x556b15941940 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x556b159419c0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x556b15941a38 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x556b15941dc8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x556b15941be8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15941c68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15941ce8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x556b15942078 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x556b15941e98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15941f18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15941f90 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x556b15942328 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x556b15942148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b159421c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15942240 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x556b159425f8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x556b159423f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15942478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x556b15942518 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x556b15942928 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x556b159426c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x556b15942748 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x556b159427c0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x556b15942838 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556b15947f80 <col:93> 'bool' false
|-CXXMethodDecl 0x556b15942b10 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556b159429f8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x556b15942a78 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x556b15942ce8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556b15942bd0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x556b15942c50 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x556b15942fc8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556b15942da8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x556b15942e20 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x556b15942ea0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x556b15942f18 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x556b159432b8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x556b15943098 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x556b15943110 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x556b15943190 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x556b15943208 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x556b159434f0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x556b15943390 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x556b15943410 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x556b159436d8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x556b159435b8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x556b15943638 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x556b15943788 prev 0x556b1593af28 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556b15943880 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x556b15943910 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x556b15943988 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x556b15943a48 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x556b15943b10 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x556b15943c88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x556b15943bc0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x556b15943d30 <col:24>
| | `-OptimizeNoneAttr 0x556b15943d88 <col:34>
| |-CXXMethodDecl 0x556b15943dd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x556b15944088 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x556b15943e80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x556b15943ef8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x556b15943f78 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x556b15944140 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x556b15944178 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x556b159441e0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x556b15944268 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x556b15944588 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x556b15944320 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x556b15944398 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x556b15944410 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x556b15944490 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x556b159446a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x556b1594c018 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x556b1594c018
| | `-ParmVarDecl 0x556b1594c128 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x556b1594c1c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x556b1594c1c8
| | `-ParmVarDecl 0x556b1594c2d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x556b1594fe98 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556b15944718 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x556b159447b8 <col:38> "" ""
|-CXXMethodDecl 0x556b15944848 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x556b159448e8 <col:44> "" ""
|-AccessSpecDecl 0x556b15944958 <line:260:3, col:10> col:3 private
|-EnumDecl 0x556b15944980 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x556b15944a80 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x556b15944ad0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15944a60 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x556b15944a40 <col:27> 'int' 4
|-FieldDecl 0x556b15944b88 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x556b15944d38 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x556b15944df0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x556b15945e80 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x556b15945ee8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x556b15946038 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x556b15945f78 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x556b159461e8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x556b159460f8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x556b159463c8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x556b159462a8 <col:20> col:23 'int'
| `-ParmVarDecl 0x556b15946328 <col:25> col:28 'int'
|-CXXMethodDecl 0x556b15946670 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x556b15946490 <col:23> col:26 'int'
| |-ParmVarDecl 0x556b15946510 <col:28> col:31 'int'
| `-ParmVarDecl 0x556b15946588 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x556b15946728 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x556b159467f0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x556b15946840 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x556b15946890 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x556b15946a70 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x556b15946920 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x556b15946998 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x556b15946d18 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x556b15946b38 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x556b15946bb8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x556b15946c30 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x556b15946f38 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x556b15946de8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x556b15946e68 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x556b15947270 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x556b15946ff8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x556b15947078 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x556b159470f0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x556b15947170 <col:57> col:60 'int'
|-CXXMethodDecl 0x556b15947458 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x556b15947340 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x556b159473c0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x556b159475a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x556b15947518 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x556b15947928 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x556b15947668 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x556b159476e8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x556b15947760 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x556b159477e0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x556b15947a40 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class UnstripIPHeader
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b1594f188 <../elements/ip/unstripipheader.hh:19:1, line:29:1> line:19:7 class UnstripIPHeader definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x556b1594f2e8 <col:1, col:7> col:7 implicit referenced class UnstripIPHeader
|-AccessSpecDecl 0x556b1594f378 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x556b1594f400 <line:21:3, col:19> col:3 UnstripIPHeader 'void ()'
|-CXXDestructorDecl 0x556b1594f4f0 <line:22:3, col:20> col:3 ~UnstripIPHeader 'void ()' noexcept-unevaluated 0x556b1594f4f0
| `-Overrides: [ 0x556b15936a78 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x556b1594f620 <line:24:3, col:62> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x556b15937ed8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x556b1594fc78 <col:34, col:62>
|   `-ReturnStmt 0x556b1594fc68 <col:36, col:43>
|     `-ImplicitCastExpr 0x556b1594fc50 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x556b1594fc28 <col:43> 'const char [16]' lvalue "UnstripIPHeader"
|-CXXMethodDecl 0x556b1594f6e8 <line:25:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x556b15937fa0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x556b1594fcd8 <col:34, col:54>
|   `-ReturnStmt 0x556b1594fcc8 <col:36, col:43>
|     `-ImplicitCastExpr 0x556b1594fcb0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x556b1594fc90 <col:43> 'const char []' lvalue Var 0x556b15938250 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x556b1594f828 <line:27:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x556b159370b8 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x556b1594f798 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x556b1594f8f8 <line:19:7> col:7 implicit UnstripIPHeader 'void (const UnstripIPHeader &)' inline default_delete noexcept-unevaluated 0x556b1594f8f8
| `-ParmVarDecl 0x556b1594fa08 <col:7> col:7 'const UnstripIPHeader &'
`-CXXMethodDecl 0x556b1594faa8 <col:7> col:7 implicit operator= 'UnstripIPHeader &(const UnstripIPHeader &)' inline default_delete noexcept-unevaluated 0x556b1594faa8
  `-ParmVarDecl 0x556b1594fbb8 <col:7> col:7 'const UnstripIPHeader &'

Layout: <CGRecordLayout
  LLVMType:%class.UnstripIPHeader = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.UnstripIPHeader.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b156f5250 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556b156f5368 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x556b156f53f8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x556b156f54c8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x556b156f55b0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x556b156f57c8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556b156f5670 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f5978 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556b156f5880 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556b156f5ac0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x556b156f5a30 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x556b156f5c08 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556b156f5b78 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f5d50 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x556b156f5cc0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f5e18 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x556b156f5f60 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x556b156f5ed0 <col:28> col:31 'int'
|-CXXMethodDecl 0x556b156f6028 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x556b156f6170 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x556b156f60e0 <col:28> col:31 'int'
|-CXXMethodDecl 0x556b156f62e8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556b156f6228 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f6430 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x556b156f63a0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f64f8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x556b156f66b8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556b156f65a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556b156f6620 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f6908 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556b156f6778 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b156f67f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556b156f69b8 <col:86> "" ""
|-CXXMethodDecl 0x556b156f6c28 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x556b156f6a98 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x556b156f6b10 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f6dd8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556b156f6ce8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556b156f6f88 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x556b156f6e90 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x556b156f7258 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556b156f7040 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556b156f70b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556b156f7130 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f7538 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x556b156f7320 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x556b156f7398 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b156f7410 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556b156f75f0 <col:115> "" ""
|-AccessSpecDecl 0x556b156f7660 <line:84:3, col:10> col:3 private
|-FieldDecl 0x556b156f7698 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b156f8bb0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556b156f8bb0
| `-ParmVarDecl 0x556b156f8cb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x556b156f8d58 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556b156f8d58
| `-ParmVarDecl 0x556b156f8e68 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x556b1572e498 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556b15920290 <col:7>
|-CXXConstructorDecl 0x556b1572e570 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x556b1572e570
| `-ParmVarDecl 0x556b1572e688 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x556b1572e6f8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x556b1572e6f8
| `-ParmVarDecl 0x556b1572e808 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x556b15922c90 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b1590ee38 prev 0x556b15904040 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556b1590ef30 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x556b1590f020 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x556b1590f148 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x556b1590f2c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x556b1590f448 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x556b1590f5c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x556b159203f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556b15920c68 <col:11>
|-CXXDestructorDecl 0x556b159204d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x556b15920608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x556b15920608
| `-ParmVarDecl 0x556b15920718 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x556b159207b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556b159207b8
| `-ParmVarDecl 0x556b159208c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x556b15923688 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x556b15923798 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x556b15923a18 <col:11>
|   `-ReturnStmt 0x556b15923a08 <col:11>
|     `-UnaryOperator 0x556b159239f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556b159239e0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x556b15923808 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556b15923808
  `-ParmVarDecl 0x556b15923918 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b1590f630 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556b1590f748 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x556b1590f7e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x556b1590f850 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x556b1590f8b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x556b1590f920 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x556b1590f980 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x556b1590fa40 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x556b1590faa0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x556b1590fb00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x556b15920308 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x556b1590f7e8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x556b15920c78 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x556b15920cd0 <col:12>
|-CXXConstructorDecl 0x556b15920938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x556b15920938
| `-ParmVarDecl 0x556b15920a48 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x556b15920ae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x556b15920ae8
| `-ParmVarDecl 0x556b15920bf8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x556b15922d70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b158fd750 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556b158fd868 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x556b158fd8f8 <col:16, col:22> col:16 public
|-EnumDecl 0x556b158fd920 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x556b158fda20 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x556b158fdb00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b158fda00 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x556b158fd9e0 <col:21> 'int' 28
| `-EnumConstantDecl 0x556b158fdab0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x556b158fdb18 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b158fda90 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x556b158fda70 <col:22> 'int' 64
|-CXXMethodDecl 0x556b158fde58 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x556b158fdb40 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b158fdbc0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x556b158fdc38 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b158fdcb0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556b158fdf18 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x556b158fe118 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x556b158fdf90 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x556b158fe008 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556b158fe1c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x556b158fe328 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x556b158fe238 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556b158fe3d0 <col:72> warn_unused_result ""
|-TypedefDecl 0x556b158fe730 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x556b158fe6c0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x556b158fe660 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x556b158fe620 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x556b153d72d0 'void'
|       |-PointerType 0x556b1567daf0 'unsigned char *'
|       | `-BuiltinType 0x556b153d73d0 'unsigned char'
|       |-TypedefType 0x556b1547a060 'size_t' sugar
|       | |-Typedef 0x556b15447b20 'size_t'
|       | `-BuiltinType 0x556b153d7430 'unsigned long'
|       `-PointerType 0x556b153d7ad0 'void *'
|         `-BuiltinType 0x556b153d72d0 'void'
|-CXXMethodDecl 0x556b158feba8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x556b158fe7a0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x556b158fe818 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b158fe8b0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x556b158fe930 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x556b159192a0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x556b15919288 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x556b15919250 <col:58> 'int' 0
| |-ParmVarDecl 0x556b158fe9b0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x556b159192c8 <col:76> 'int' 0
| |-ParmVarDecl 0x556b158fea30 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x556b159192e8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x556b158fec78 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x556b158fecf8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x556b158fedb8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x556b158fee58 <col:20>
| `-OptimizeNoneAttr 0x556b158feeb0 <col:30>
|-CXXMethodDecl 0x556b158fef28 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x556b158fefc8 <col:20>
| `-OptimizeNoneAttr 0x556b158ff020 <col:30>
|-CXXMethodDecl 0x556b158ff098 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x556b158ff138 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x556b158ff1e8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x556b158ff288 <col:20>
| |-OptimizeNoneAttr 0x556b158ff2e0 <col:30>
| `-WarnUnusedResultAttr 0x556b158ff308 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x556b158ff360 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x556b158ff400 <col:20>
| `-OptimizeNoneAttr 0x556b158ff458 <col:30>
|-CXXMethodDecl 0x556b158ff4a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x556b158ff548 <col:20>
| `-OptimizeNoneAttr 0x556b158ff5a0 <col:30>
|-CXXMethodDecl 0x556b158ff5e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x556b158ff688 <col:20>
| `-OptimizeNoneAttr 0x556b158ff6e0 <col:30>
|-CXXMethodDecl 0x556b158ff728 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x556b158ff7e8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x556b158ff8b0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556b158ff978 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556b158ffa38 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556b158ffb58 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x556b159193b0 <col:54, line:99:5>
|   `-ReturnStmt 0x556b159193a0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x556b15919388 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x556b15919358 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x556b1590fe38
|         `-CXXThisExpr 0x556b15919348 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x556b158ffcf8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x556b158ffc08 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x556b15919460 <col:67, line:103:5>
|   `-BinaryOperator 0x556b15919440 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x556b159193d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x556b1590fe38
|     | `-CXXThisExpr 0x556b159193c8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x556b15919428 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x556b15919408 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x556b158ffc08 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x556b158ffdf0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x556b159194e0 <col:33, line:107:5>
|   `-ReturnStmt 0x556b159194d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x556b159194b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x556b15919488 <col:16> 'void *' lvalue ->_destructor_argument 0x556b1590fea0
|         `-CXXThisExpr 0x556b15919478 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x556b158ffeb0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x556b15919b10 <col:25, line:113:5>
|   |-ParenExpr 0x556b15919858 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x556b15919828 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x556b15919598 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x556b15919570 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x556b15919538 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x556b15919508 <col:24> '<bound member function type>' ->shared 0x556b158fef28
|   |   |       `-ImplicitCastExpr 0x556b15919558 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x556b159194f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x556b159195f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b159195d8 <col:42> 'int' 0
|   |   `-CallExpr 0x556b15919788 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x556b15919770 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b15919750 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b159197c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b15919668 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x556b159197e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b15919690 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b159197f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b159196c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x556b15919810 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b15919738 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b15919720 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b159196e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x556b15919a58 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x556b15919888 <col:2> 'unsigned char *' lvalue ->_head 0x556b1590fc40
|   | | `-CXXThisExpr 0x556b15919878 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x556b15919a40 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x556b15919a20 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x556b159198c8 <col:10> 'unsigned char *' lvalue ->_data 0x556b1590fca8
|   |     | `-CXXThisExpr 0x556b159198b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x556b15919a08 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x556b159199e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x556b15919908 <col:18> 'unsigned char *' lvalue ->_tail 0x556b1590fd10
|   |         | `-CXXThisExpr 0x556b159198f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x556b159199d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x556b159199b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x556b15919948 <col:26> 'unsigned char *' lvalue ->_end 0x556b1590fd78
|   |             | `-CXXThisExpr 0x556b15919938 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x556b15919998 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x556b15919978 <col:33> 'int' 0
|   `-BinaryOperator 0x556b15919af0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x556b15919a88 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x556b1590fe38
|     | `-CXXThisExpr 0x556b15919a78 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x556b15919ad8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x556b15919ab8 <col:16> 'int' 0
|-CXXMethodDecl 0x556b158ffff0 <line:141:5, col:109> col:56 used push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556b158fff60 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15900098 <col:20>
| |-OptimizeNoneAttr 0x556b159000f0 <col:30>
| `-WarnUnusedResultAttr 0x556b15900118 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x556b159001e8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556b15900158 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15900290 <col:20>
| |-OptimizeNoneAttr 0x556b159002e8 <col:30>
| `-WarnUnusedResultAttr 0x556b15900310 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x556b15900448 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x556b15900350 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556b159004f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x556b159005f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x556b15900560 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15900698 <col:20>
| `-OptimizeNoneAttr 0x556b159006f0 <col:30>
|-CXXMethodDecl 0x556b159007b8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x556b15900728 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556b15900860 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x556b15900960 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x556b159008d0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x556b15900a08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x556b15900b08 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x556b15900a78 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15900bb0 <col:20>
| `-OptimizeNoneAttr 0x556b15900c08 <col:30>
|-CXXMethodDecl 0x556b15900d98 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x556b15900c48 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x556b15900cc0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x556b15919308 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x556b15900e48 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x556b15901048 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556b15900ec0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x556b15900f38 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15901258 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x556b15901108 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556b15901180 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15901468 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x556b15901318 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x556b15901398 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x556b15919318 <col:39> 'int' 0
|-CXXMethodDecl 0x556b15901538 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x556b15901600 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x556b159016c8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x556b15901788 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556b15901850 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x556b15901998 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x556b15901908 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x556b15901b68 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556b15901a58 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x556b15901ad0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15901c38 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x556b15901cf8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x556b15901d98 <col:20>
| `-OptimizeNoneAttr 0x556b15901df0 <col:30>
|-CXXMethodDecl 0x556b15901e40 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x556b15901ee0 <col:20>
| `-OptimizeNoneAttr 0x556b15901f38 <col:30>
|-CXXMethodDecl 0x556b15901f88 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x556b15902048 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556b15902110 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x556b159021b0 <col:20>
| `-OptimizeNoneAttr 0x556b15902208 <col:30>
|-CXXMethodDecl 0x556b15902358 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x556b15902248 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x556b159022c0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b159024a8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x556b15902418 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15902580 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x556b15902640 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x556b159026e0 <col:20>
| `-OptimizeNoneAttr 0x556b15902738 <col:30>
|-CXXMethodDecl 0x556b15902788 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x556b15902828 <col:20>
| `-OptimizeNoneAttr 0x556b15902880 <col:30>
|-CXXMethodDecl 0x556b159028d0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x556b15902998 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x556b15902a38 <col:20>
| `-OptimizeNoneAttr 0x556b15902a90 <col:30>
|-CXXMethodDecl 0x556b15902ad8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x556b15902bf8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x556b15902d68 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x556b15902ca8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x556b15902e58 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x556b15902ef8 <col:20>
| `-OptimizeNoneAttr 0x556b15902f50 <col:30>
|-CXXMethodDecl 0x556b15902fa0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x556b15903060 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x556b15903298 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x556b15903110 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x556b15903188 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15903348 <col:20>
| `-OptimizeNoneAttr 0x556b159033a0 <col:30>
|-CXXMethodDecl 0x556b15903448 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x556b159034e8 <col:20>
| `-OptimizeNoneAttr 0x556b15903540 <col:30>
|-CXXMethodDecl 0x556b15903590 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x556b15903630 <col:20>
| `-OptimizeNoneAttr 0x556b15903688 <col:30>
|-CXXMethodDecl 0x556b159036d0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x556b15903770 <col:20>
| `-OptimizeNoneAttr 0x556b159037c8 <col:30>
|-CXXMethodDecl 0x556b159038c8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x556b15903800 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x556b15903970 <col:20>
| `-OptimizeNoneAttr 0x556b159039c8 <col:30>
|-CXXMethodDecl 0x556b15903b88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x556b15903a00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x556b15903a78 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15903c38 <col:20>
| `-OptimizeNoneAttr 0x556b15903c90 <col:30>
|-CXXMethodDecl 0x556b15903d38 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x556b15903e58 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x556b15903f78 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x556b15904018 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x556b15904040 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x556b15904168 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x556b15904208 <col:20>
| `-OptimizeNoneAttr 0x556b15904260 <col:30>
|-CXXMethodDecl 0x556b15904308 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x556b159043a8 <col:20>
| `-OptimizeNoneAttr 0x556b15904400 <col:30>
|-AccessSpecDecl 0x556b15904428 <line:344:3, col:9> col:3 public
|-EnumDecl 0x556b15904450 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x556b15904550 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x556b159045a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15904530 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x556b15904510 <col:14> 'int' 48
|-CXXMethodDecl 0x556b15904608 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x556b159046a8 <col:20>
| `-OptimizeNoneAttr 0x556b15904700 <col:30>
|-CXXMethodDecl 0x556b15904778 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x556b15904818 <col:20>
| `-OptimizeNoneAttr 0x556b15904870 <col:30>
|-CXXMethodDecl 0x556b15904938 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x556b159048a8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x556b15904ad8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x556b15904c78 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x556b15904b88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x556b15904d20 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x556b15904e20 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556b159051d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15904e00 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x556b15904de0 <col:9> 'int' 0
| |-EnumConstantDecl 0x556b15904eb0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556b159051e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15904e90 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x556b15904e70 <col:14> 'int' 1
| |-EnumConstantDecl 0x556b15904f40 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556b15905200 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15904f20 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x556b15904f00 <col:14> 'int' 2
| |-EnumConstantDecl 0x556b15904fd0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556b15905218 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15904fb0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x556b15904f90 <col:14> 'int' 3
| |-EnumConstantDecl 0x556b15905060 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556b15905230 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15905040 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x556b15905020 <col:13> 'int' 4
| |-EnumConstantDecl 0x556b159050f0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x556b15905248 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b159050d0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x556b159050b0 <col:13> 'int' 5
| `-EnumConstantDecl 0x556b15905180 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x556b15905260 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15905160 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x556b15905140 <col:14> 'int' 6
|-CXXMethodDecl 0x556b159052c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x556b15905368 <col:20>
| `-OptimizeNoneAttr 0x556b159053c0 <col:30>
|-CXXMethodDecl 0x556b159054b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x556b159053f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x556b15905560 <col:20>
| `-OptimizeNoneAttr 0x556b159055b8 <col:30>
|-CXXMethodDecl 0x556b15905628 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x556b15905750 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x556b159058c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x556b15905800 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x556b15905990 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x556b15905a58 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x556b15905b98 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x556b15905b08 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x556b15905c40 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x556b15905d40 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x556b15905f40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15905d20 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x556b15905d00 <col:23> 'int' 0
| |-EnumConstantDecl 0x556b15905dd0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x556b15905f58 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15905db0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x556b15905d90 <col:45> 'int' 4
| |-EnumConstantDecl 0x556b15905e60 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x556b15905f70 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15905e40 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x556b15905e20 <col:24> 'int' 0
| `-EnumConstantDecl 0x556b15905ef0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x556b15905f88 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15905ed0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x556b15905eb0 <col:47> 'int' 16
|-CXXMethodDecl 0x556b15905fe8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x556b15906158 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x556b15906098 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x556b15906200 <col:20>
| `-OptimizeNoneAttr 0x556b15906258 <col:30>
|-CXXMethodDecl 0x556b159062a8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x556b15919c30 <col:18, col:36>
|   `-ReturnStmt 0x556b15919c20 <col:20, col:33>
|     `-ImplicitCastExpr 0x556b15919c08 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x556b15919be8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x556b15919bb8 <col:27> '<bound member function type>' ->xanno 0x556b15904308
|           `-CXXThisExpr 0x556b15919ba8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x556b159063a0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x556b15919d40 <col:30, col:48>
|   `-ReturnStmt 0x556b15919d30 <col:32, col:45>
|     `-ImplicitCastExpr 0x556b15919d18 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x556b15919cf8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x556b15919cc8 <col:39> '<bound member function type>' ->xanno 0x556b15904168
|           `-CXXThisExpr 0x556b15919cb8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x556b15906488 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x556b15919ed8 <col:24, col:50>
|   `-ReturnStmt 0x556b15919ec8 <col:26, col:47>
|     `-UnaryOperator 0x556b15919eb0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556b15919e90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x556b15919e78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556b15919e28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x556b1590f148
|         |   `-CXXMemberCallExpr 0x556b15919e08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x556b15919dd8 <col:34> '<bound member function type>' ->xanno 0x556b15904308
|         |       `-CXXThisExpr 0x556b15919dc8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x556b15919e58 <col:46> 'int' 0
|-CXXMethodDecl 0x556b15906590 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x556b1591a0a8 <col:36, col:62>
|   `-ReturnStmt 0x556b1591a098 <col:38, col:59>
|     `-UnaryOperator 0x556b1591a080 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556b1591a060 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x556b1591a048 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556b15919fc0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x556b1590f148
|         |   `-CXXMemberCallExpr 0x556b15919fa0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556b15919f70 <col:46> '<bound member function type>' ->xanno 0x556b15904168
|         |       `-CXXThisExpr 0x556b15919f60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x556b15919ff0 <col:58> 'int' 0
|-CXXMethodDecl 0x556b159066a8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x556b1591a240 <col:26, col:53>
|   `-ReturnStmt 0x556b1591a230 <col:28, col:50>
|     `-UnaryOperator 0x556b1591a218 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556b1591a1f8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x556b1591a1e0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556b1591a190 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x556b1590f448
|         |   `-CXXMemberCallExpr 0x556b1591a170 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x556b1591a140 <col:36> '<bound member function type>' ->xanno 0x556b15904308
|         |       `-CXXThisExpr 0x556b1591a130 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x556b1591a1c0 <col:49> 'int' 0
|-CXXMethodDecl 0x556b159067c8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x556b1591a418 <col:38, col:65>
|   `-ReturnStmt 0x556b1591a408 <col:40, col:62>
|     `-UnaryOperator 0x556b1591a3f0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x556b1591a3d0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x556b1591a3b8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556b1591a328 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x556b1590f448
|         |   `-CXXMemberCallExpr 0x556b1591a308 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556b1591a2d8 <col:48> '<bound member function type>' ->xanno 0x556b15904168
|         |       `-CXXThisExpr 0x556b1591a2c8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x556b1591a358 <col:61> 'int' 0
|-CXXMethodDecl 0x556b15906978 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x556b15906880 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x556b1591aae8 <col:34, line:463:5>
|   |-ParenExpr 0x556b1591a930 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x556b1591a900 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591a568 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591a538 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591a488 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591a470 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591a430 <col:23> 'int' lvalue ParmVar 0x556b15906880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591a450 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591a518 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591a4e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591a4a8 <col:33> 'int' lvalue ParmVar 0x556b15906880 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x556b1591a500 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x556b1591a4c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x556b1591a5c8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591a5a8 <col:56> 'int' 0
|   |   `-CallExpr 0x556b1591a860 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x556b1591a848 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591a828 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591a8a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591a6b8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x556b1591a8b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591a6e8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591a8d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591a720 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x556b1591a8e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591a810 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591a7f8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591a7b8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x556b1591aad8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x556b1591aac0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x556b1591aaa0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x556b1591aa70 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x556b1591aa20 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x556b1590f148
|         |   `-CXXMemberCallExpr 0x556b1591aa00 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x556b1591a9d0 <col:9> '<bound member function type>' ->xanno 0x556b15904168
|         |       `-CXXThisExpr 0x556b1591a9c0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x556b1591aa88 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x556b1591aa50 <col:21> 'int' lvalue ParmVar 0x556b15906880 'i' 'int'
|-CXXMethodDecl 0x556b15906bc8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x556b15906a38 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x556b15906ab0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x556b1591b178 <col:40, line:472:5>
|   |-ParenExpr 0x556b1591af90 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x556b1591af60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591ac40 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591ac10 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591ab60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591ab48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591ab08 <col:23> 'int' lvalue ParmVar 0x556b15906a38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591ab28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591abf0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591abc0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591ab80 <col:33> 'int' lvalue ParmVar 0x556b15906a38 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x556b1591abd8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x556b1591aba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x556b1591aca0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591ac80 <col:56> 'int' 0
|   |   `-CallExpr 0x556b1591aec0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x556b1591aea8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591ae88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591af00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ad10 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x556b1591af18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ad40 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591af30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591ad78 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x556b1591af48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591ae70 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591ae58 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591ae18 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x556b1591b158 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x556b1591b100 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x556b1591b0d0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x556b1591b080 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x556b1590f148
|     | |   `-CXXMemberCallExpr 0x556b1591b060 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x556b1591b030 <col:2> '<bound member function type>' ->xanno 0x556b15904308
|     | |       `-CXXThisExpr 0x556b1591b020 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x556b1591b0e8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x556b1591b0b0 <col:14> 'int' lvalue ParmVar 0x556b15906a38 'i' 'int'
|     `-ImplicitCastExpr 0x556b1591b140 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x556b1591b120 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x556b15906ab0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x556b15906d88 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x556b15906c90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556b1591b8f8 <col:36, line:485:5>
|   |-ParenExpr 0x556b1591b660 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591b630 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591b310 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591b2e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591b1f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591b1d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591b198 <col:23> 'int' lvalue ParmVar 0x556b15906c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591b1b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591b2c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591b2a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591b210 <col:33> 'int' lvalue ParmVar 0x556b15906c90 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591b288 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591b270 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591b230 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591b250 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556b1591b370 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591b350 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591b590 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591b578 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591b558 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591b5d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591b3e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556b1591b5e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591b418 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591b600 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591b450 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x556b1591b618 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591b540 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591b528 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591b4e8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x556b1591b8e8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x556b1591b8d0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x556b1591b8b8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556b1591b888 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x556b1591b828 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556b1591b7f8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556b1591b770 <col:61, col:70> 'char const[48]' lvalue ->c 0x556b1590f020
|             |   `-CXXMemberCallExpr 0x556b1591b750 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556b1591b720 <col:61> '<bound member function type>' ->xanno 0x556b15904168
|             |       `-CXXThisExpr 0x556b1591b710 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556b1591b810 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556b1591b7a0 <col:74> 'int' lvalue ParmVar 0x556b15906c90 'i' 'int'
|-CXXMethodDecl 0x556b15906fd8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x556b15906e48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556b15906ec0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x556b1591c048 <col:42, line:500:5>
|   |-ParenExpr 0x556b1591bde0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591bdb0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591ba90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591ba60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591b970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591b958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591b918 <col:23> 'int' lvalue ParmVar 0x556b15906e48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591b938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591ba40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591ba28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591b990 <col:33> 'int' lvalue ParmVar 0x556b15906e48 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591ba08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591b9f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591b9b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591b9d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556b1591baf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591bad0 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591bd10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591bcf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591bcd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591bd50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591bb60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556b1591bd68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591bb98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591bd80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591bbd0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x556b1591bd98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591bcc0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591bca8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591bc68 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x556b1591c028 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x556b1591bfd8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556b1591bfa8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x556b1591bf50 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556b1591bf20 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556b1591bed0 <col:48, col:57> 'char [48]' lvalue ->c 0x556b1590f020
|     |     |   `-CXXMemberCallExpr 0x556b1591beb0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556b1591be80 <col:48> '<bound member function type>' ->xanno 0x556b15904308
|     |     |       `-CXXThisExpr 0x556b1591be70 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556b1591bf38 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556b1591bf00 <col:61> 'int' lvalue ParmVar 0x556b15906e48 'i' 'int'
|     `-ImplicitCastExpr 0x556b1591c010 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x556b1591bff0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x556b15906ec0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x556b15907198 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x556b159070a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x556b1591c7a8 <col:35, line:513:5>
|   |-ParenExpr 0x556b1591c4b8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591c488 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591c1e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591c1b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591c0c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591c0a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591c068 <col:23> 'int' lvalue ParmVar 0x556b159070a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591c088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591c190 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591c178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591c0e0 <col:33> 'int' lvalue ParmVar 0x556b159070a0 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591c158 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591c140 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591c100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591c120 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556b1591c240 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591c220 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591c3e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591c3d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591c3b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591c428 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591c2b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556b1591c440 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591c2e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591c458 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591c320 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x556b1591c470 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591c398 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591c380 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591c340 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x556b1591c798 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x556b1591c780 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x556b1591c768 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556b1591c738 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x556b1591c6b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x556b1591c680 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556b1591c630 <col:60, col:69> 'char const[48]' lvalue ->c 0x556b1590f020
|             |   `-CXXMemberCallExpr 0x556b1591c610 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556b1591c5e0 <col:60> '<bound member function type>' ->xanno 0x556b15904168
|             |       `-CXXThisExpr 0x556b1591c5d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556b1591c698 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556b1591c660 <col:73> 'int' lvalue ParmVar 0x556b159070a0 'i' 'int'
|-CXXMethodDecl 0x556b159073e8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x556b15907258 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556b159072d0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x556b1591cec8 <col:41, line:528:5>
|   |-ParenExpr 0x556b1591cc50 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591cc20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591c940 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591c910 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591c820 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591c808 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591c7c8 <col:23> 'int' lvalue ParmVar 0x556b15907258 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591c7e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591c8f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591c8d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591c840 <col:33> 'int' lvalue ParmVar 0x556b15907258 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591c8b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591c8a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591c860 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591c880 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x556b1591c9a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591c980 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591cb80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591cb68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591cb48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591cbc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ca10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x556b1591cbd8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ca48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591cbf0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591ca80 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x556b1591cc08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591cb30 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591cb18 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591cad8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x556b1591cea8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x556b1591ce58 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556b1591ce28 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x556b1591cdd0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556b1591cd90 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556b1591cd40 <col:47, col:56> 'char [48]' lvalue ->c 0x556b1590f020
|     |     |   `-CXXMemberCallExpr 0x556b1591cd20 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556b1591ccf0 <col:47> '<bound member function type>' ->xanno 0x556b15904308
|     |     |       `-CXXThisExpr 0x556b1591cce0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556b1591cda8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556b1591cd70 <col:60> 'int' lvalue ParmVar 0x556b15907258 'i' 'int'
|     `-ImplicitCastExpr 0x556b1591ce90 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x556b1591ce70 <col:65> 'int16_t':'short' lvalue ParmVar 0x556b159072d0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x556b159075a8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x556b159074b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556b1591d598 <col:36, line:541:5>
|   |-ParenExpr 0x556b1591d338 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591d308 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591d060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591d030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591cf40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591cf28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591cee8 <col:23> 'int' lvalue ParmVar 0x556b159074b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591cf08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591d010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591cff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591cf60 <col:33> 'int' lvalue ParmVar 0x556b159074b0 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591cfd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591cfc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591cf80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591cfa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556b1591d0c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591d0a0 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591d268 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591d250 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591d230 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591d2a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591d130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556b1591d2c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591d168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591d2d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591d1a0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x556b1591d2f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591d218 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591d200 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591d1c0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x556b1591d588 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x556b1591d570 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x556b1591d558 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556b1591d528 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x556b1591d4d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556b1591d4a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556b1591d450 <col:61, col:70> 'char const[48]' lvalue ->c 0x556b1590f020
|             |   `-CXXMemberCallExpr 0x556b1591d430 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556b1591d400 <col:61> '<bound member function type>' ->xanno 0x556b15904168
|             |       `-CXXThisExpr 0x556b1591d3f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556b1591d4b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556b1591d480 <col:74> 'int' lvalue ParmVar 0x556b159074b0 'i' 'int'
|-CXXMethodDecl 0x556b15907778 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x556b15907668 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x556b159076e0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x556b15907828 <col:20>
| `-OptimizeNoneAttr 0x556b15907880 <col:30>
|-CXXMethodDecl 0x556b159079b8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x556b159078c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x556b1591dc68 <col:35, line:562:5>
|   |-ParenExpr 0x556b1591da08 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591d9d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591d730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591d700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591d610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591d5f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591d5b8 <col:23> 'int' lvalue ParmVar 0x556b159078c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591d5d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591d6e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591d6c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591d630 <col:33> 'int' lvalue ParmVar 0x556b159078c0 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591d6a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591d690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591d650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591d670 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556b1591d790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591d770 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591d938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591d920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591d900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591d978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591d800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556b1591d990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591d838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591d9a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591d870 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x556b1591d9c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591d8e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591d8d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591d890 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x556b1591dc58 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x556b1591dc40 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x556b1591dc28 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556b1591dbf8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x556b1591dba0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x556b1591db70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556b1591db20 <col:60, col:69> 'char const[48]' lvalue ->c 0x556b1590f020
|             |   `-CXXMemberCallExpr 0x556b1591db00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556b1591dad0 <col:60> '<bound member function type>' ->xanno 0x556b15904168
|             |       `-CXXThisExpr 0x556b1591dac0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556b1591db88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556b1591db50 <col:73> 'int' lvalue ParmVar 0x556b159078c0 'i' 'int'
|-CXXMethodDecl 0x556b15907bc8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x556b15907a78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556b15907af0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x556b1591e348 <col:41, line:577:5>
|   |-ParenExpr 0x556b1591e0d8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591e0a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591de00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591ddd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591dce0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591dcc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591dc88 <col:23> 'int' lvalue ParmVar 0x556b15907a78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591dca8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591ddb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591dd98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591dd00 <col:33> 'int' lvalue ParmVar 0x556b15907a78 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591dd78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591dd60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591dd20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591dd40 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x556b1591de60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591de40 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591e008 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591dff0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591dfd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591e048 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ded0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x556b1591e060 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591df08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591e078 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591df40 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x556b1591e090 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591dfb8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591dfa0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591df60 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x556b1591e328 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x556b1591e2d8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556b1591e2a8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x556b1591e248 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556b1591e218 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556b1591e1c8 <col:47, col:56> 'char [48]' lvalue ->c 0x556b1590f020
|     |     |   `-CXXMemberCallExpr 0x556b1591e1a8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556b1591e178 <col:47> '<bound member function type>' ->xanno 0x556b15904308
|     |     |       `-CXXThisExpr 0x556b1591e168 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556b1591e230 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556b1591e1f8 <col:60> 'int' lvalue ParmVar 0x556b15907a78 'i' 'int'
|     `-ImplicitCastExpr 0x556b1591e310 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x556b1591e2f0 <col:65> 'int32_t':'int' lvalue ParmVar 0x556b15907af0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x556b15907d88 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x556b15907c90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x556b1591ea78 <col:36, line:591:5>
|   |-ParenExpr 0x556b1591e7b8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591e788 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591e4e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591e4b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591e3c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591e3a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591e368 <col:23> 'int' lvalue ParmVar 0x556b15907c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591e388 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591e490 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591e478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591e3e0 <col:33> 'int' lvalue ParmVar 0x556b15907c90 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591e458 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591e440 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591e400 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591e420 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x556b1591e540 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591e520 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591e6e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591e6d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591e6b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591e728 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591e5b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x556b1591e740 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591e5e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591e758 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591e620 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x556b1591e770 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591e698 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591e680 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591e640 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x556b1591ea68 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x556b1591ea50 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x556b1591ea38 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556b1591ea08 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x556b1591e980 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x556b1591e950 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556b1591e900 <col:61, col:70> 'char const[48]' lvalue ->c 0x556b1590f020
|             |   `-CXXMemberCallExpr 0x556b1591e8e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556b1591e8b0 <col:61> '<bound member function type>' ->xanno 0x556b15904168
|             |       `-CXXThisExpr 0x556b1591e8a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556b1591e968 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556b1591e930 <col:74> 'int' lvalue ParmVar 0x556b15907c90 'i' 'int'
|-CXXMethodDecl 0x556b15907fd8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x556b15907e48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556b15907ec0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x556b1591f158 <col:42, line:606:5>
|   |-ParenExpr 0x556b1591eee8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x556b1591eeb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591ec10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591ebe0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591eaf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591ead8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591ea98 <col:23> 'int' lvalue ParmVar 0x556b15907e48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591eab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591ebc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x556b1591eba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591eb10 <col:33> 'int' lvalue ParmVar 0x556b15907e48 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591eb88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591eb70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591eb30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x556b1591eb50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x556b1591ec70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591ec50 <col:60> 'int' 0
|   |   `-CallExpr 0x556b1591ee18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x556b1591ee00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591ede0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591ee58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ece0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x556b1591ee70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591ed18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591ee88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591ed50 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x556b1591eea0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591edc8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591edb0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591ed70 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x556b1591f138 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x556b1591f0e8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556b1591f0b8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x556b1591f058 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556b1591f028 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556b1591efd8 <col:48, col:57> 'char [48]' lvalue ->c 0x556b1590f020
|     |     |   `-CXXMemberCallExpr 0x556b1591efb8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556b1591ef88 <col:48> '<bound member function type>' ->xanno 0x556b15904308
|     |     |       `-CXXThisExpr 0x556b1591ef78 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556b1591f040 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556b1591f008 <col:61> 'int' lvalue ParmVar 0x556b15907e48 'i' 'int'
|     `-ImplicitCastExpr 0x556b1591f120 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x556b1591f100 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x556b15907ec0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x556b15908170 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x556b159080a0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x556b1591f9c8 <col:33, line:620:5>
|   |-ParenExpr 0x556b1591f740 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x556b1591f710 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591f360 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591f330 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591f1d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591f1b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591f178 <col:23> 'int' lvalue ParmVar 0x556b159080a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591f198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591f310 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x556b1591f2f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591f1f0 <col:33> 'int' lvalue ParmVar 0x556b159080a0 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591f2d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591f2c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591f210 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x556b1591f298 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x556b1591f280 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x556b1591f248 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x556b1591f3c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591f3a0 <col:79> 'int' 0
|   |   `-CallExpr 0x556b1591f670 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x556b1591f658 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591f638 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591f6b0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591f4a8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x556b1591f6c8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591f4f0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591f6e0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591f528 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x556b1591f6f8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591f620 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591f608 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591f5c8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x556b1591f9b8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x556b1591f9a0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x556b1591f988 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x556b1591f958 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x556b1591f8d0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x556b1591f8a0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x556b1591f850 <col:67, col:76> 'char const[48]' lvalue ->c 0x556b1590f020
|             |   `-CXXMemberCallExpr 0x556b1591f830 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x556b1591f800 <col:67> '<bound member function type>' ->xanno 0x556b15904168
|             |       `-CXXThisExpr 0x556b1591f7f0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x556b1591f8b8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x556b1591f880 <col:80> 'int' lvalue ParmVar 0x556b159080a0 'i' 'int'
|-CXXMethodDecl 0x556b15908388 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x556b15908230 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x556b159082b0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x556b159201f0 <col:45, line:635:5>
|   |-ParenExpr 0x556b1591ff38 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x556b1591ff08 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x556b1591fbd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x556b1591fba0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x556b1591fa40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x556b1591fa28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x556b1591f9e8 <col:23> 'int' lvalue ParmVar 0x556b15908230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x556b1591fa08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x556b1591fb80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x556b1591fb68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x556b1591fa60 <col:33> 'int' lvalue ParmVar 0x556b15908230 'i' 'int'
|   |   |     `-BinaryOperator 0x556b1591fb48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x556b1591fb30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x556b1591fa80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x556b15904550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x556b1591fb08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x556b1591faf0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x556b1591fab8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x556b1591fc30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x556b1591fc10 <col:79> 'int' 0
|   |   `-CallExpr 0x556b1591fe68 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x556b1591fe50 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x556b1591fe30 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x556b1591fea8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591fca0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x556b1591fec0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x556b1591fce8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x556b1591fed8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x556b1591fd20 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x556b1591fef0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x556b1591fe18 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x556b1591fe00 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x556b1591fdb8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x556b159201d0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x556b15920138 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x556b15920108 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x556b159200a8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x556b15920078 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x556b15920028 <col:54, col:63> 'char [48]' lvalue ->c 0x556b1590f020
|     |     |   `-CXXMemberCallExpr 0x556b15920008 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x556b1591ffd8 <col:54> '<bound member function type>' ->xanno 0x556b15904308
|     |     |       `-CXXThisExpr 0x556b1591ffc8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x556b15920090 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x556b15920058 <col:67> 'int' lvalue ParmVar 0x556b15908230 'i' 'int'
|     `-CXXConstCastExpr 0x556b159201a0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x556b15920188 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x556b15920150 <col:91> 'const void *' lvalue ParmVar 0x556b159082b0 'x' 'const void *'
|-CXXMethodDecl 0x556b15908458 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x556b15920278 <col:34, line:640:5>
|   `-ReturnStmt 0x556b15920268 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x556b15920250 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x556b15920220 <col:16> 'Packet *' lvalue ->_data_packet 0x556b1590fbd8
|         `-CXXThisExpr 0x556b15920210 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x556b15908598 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x556b15908508 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556b15919338 <col:46> 'bool' true
|-CXXMethodDecl 0x556b15908718 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x556b15908650 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x556b159087c0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x556b15908f70 <line:660:22> "" ""
| |-EnumConstantDecl 0x556b159088c0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15908fe0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b159088a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x556b15908880 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x556b158fda20 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x556b15908950 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15908ff8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908930 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x556b15908910 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x556b158fdab0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x556b159089e0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15909010 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b159089c0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x556b159089a0 <col:21> 'int' 0
| |-EnumConstantDecl 0x556b15908a70 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15909028 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908a50 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x556b15908a30 <col:19> 'int' 16
| |-EnumConstantDecl 0x556b15908b00 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15909040 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908ae0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x556b15908ac0 <col:21> 'int' 16
| |-EnumConstantDecl 0x556b15908b90 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15909058 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908b70 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x556b15908b50 <col:19> 'int' 32
| |-EnumConstantDecl 0x556b15908c20 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15909070 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908c00 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x556b15908be0 <col:19> 'int' EnumConstant 0x556b15908a70 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x556b15908cb0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b15909088 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908c90 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x556b15908c70 <col:19> 'int' EnumConstant 0x556b15908b90 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x556b15908d80 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b159090a0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908d60 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x556b15908d40 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x556b15908d00 <col:23> 'int' EnumConstant 0x556b15908cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x556b15908d20 <col:40> 'int' 2
| |-EnumConstantDecl 0x556b15908e50 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x556b159090b8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x556b15908e30 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x556b15908e10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x556b15908dd0 <col:23> 'int' EnumConstant 0x556b15908cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x556b15908df0 <col:40> 'int' 4
| `-EnumConstantDecl 0x556b15908f20 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x556b159090d0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15908f00 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x556b15908ee0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x556b15908ea0 <col:23> 'int' EnumConstant 0x556b15908cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x556b15908ec0 <col:40> 'int' 8
|-CXXMethodDecl 0x556b15909110 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x556b159091b0 <col:68> "" ""
|-CXXMethodDecl 0x556b15909248 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x556b159092e8 <col:45> "" ""
|-CXXMethodDecl 0x556b15909380 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x556b15909420 <col:57> "" ""
|-CXXMethodDecl 0x556b159094b8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x556b15909558 <col:45> "" ""
|-CXXMethodDecl 0x556b159095f0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x556b15909690 <col:57> "" ""
|-CXXMethodDecl 0x556b15909720 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x556b159097c0 <col:51> "" ""
|-CXXMethodDecl 0x556b15909850 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x556b159098f0 <col:63> "" ""
|-CXXMethodDecl 0x556b15909980 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x556b15909a20 <col:53> "" ""
|-CXXMethodDecl 0x556b15909ab0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x556b15909b50 <col:65> "" ""
|-CXXMethodDecl 0x556b15909c68 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x556b15909bd8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x556b15909d10 <col:61> "" ""
|-CXXMethodDecl 0x556b15909ea8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x556b15909d98 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x556b15909e10 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x556b15909f58 <col:67> "" ""
|-CXXMethodDecl 0x556b1590a070 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x556b15909fe0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x556b1590a118 <col:63> "" ""
|-CXXMethodDecl 0x556b1590a2b0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x556b1590a1a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556b1590a218 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x556b1590a360 <col:69> "" ""
|-CXXMethodDecl 0x556b1590a478 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x556b1590a3e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x556b1590a520 <col:63> "" ""
|-CXXMethodDecl 0x556b1590cbf8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556b1590cae8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556b1590cb60 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556b1590cca8 <col:69> "" ""
|-CXXMethodDecl 0x556b1590cdc0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x556b1590cd30 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x556b1590ce68 <col:62> "" ""
|-CXXMethodDecl 0x556b1590d000 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x556b1590cef0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556b1590cf68 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x556b1590d0b0 <col:68> "" ""
|-CXXMethodDecl 0x556b1590d1c8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x556b1590d138 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x556b1590d270 <col:63> "" ""
|-CXXMethodDecl 0x556b1590d408 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x556b1590d2f8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x556b1590d370 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x556b1590d4b8 <col:69> "" ""
|-CXXMethodDecl 0x556b1590d548 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x556b1590d5e8 <col:64> "" ""
|-CXXMethodDecl 0x556b1590d678 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x556b1590d718 <col:52> "" ""
|-CXXMethodDecl 0x556b1590d7a8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x556b1590d848 <col:67> "" ""
|-CXXMethodDecl 0x556b1590d8d8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x556b1590d978 <col:55> "" ""
|-CXXMethodDecl 0x556b1590da90 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x556b1590da00 <col:32> col:35 'int'
| `-DeprecatedAttr 0x556b1590db38 <col:58> "" ""
|-CXXMethodDecl 0x556b1590dcd0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x556b1590dbc0 <col:33> col:36 'int'
| |-ParmVarDecl 0x556b1590dc38 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x556b1590dd80 <col:62> "" ""
|-CXXMethodDecl 0x556b1590de98 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x556b1590de08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x556b1590df40 <col:58> "" ""
|-CXXMethodDecl 0x556b1590e0d8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x556b1590dfc8 <col:33> col:36 'int'
| |-ParmVarDecl 0x556b1590e040 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x556b1590e188 <col:62> "" ""
|-CXXMethodDecl 0x556b1590e2a0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x556b1590e210 <col:34> col:37 'int'
| `-DeprecatedAttr 0x556b1590e348 <col:60> "" ""
|-CXXMethodDecl 0x556b1590e4e0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x556b1590e3d0 <col:34> col:37 'int'
| |-ParmVarDecl 0x556b1590e448 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x556b1590e590 <col:64> "" ""
|-CXXMethodDecl 0x556b1590e6a8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x556b1590e618 <col:32> col:35 'int'
| `-DeprecatedAttr 0x556b1590e750 <col:58> "" ""
|-CXXMethodDecl 0x556b1590e8e8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x556b1590e7d8 <col:33> col:36 'int'
| |-ParmVarDecl 0x556b1590e850 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x556b1590e998 <col:62> "" ""
|-CXXMethodDecl 0x556b1590eab0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x556b1590ea20 <col:33> col:36 'int'
| `-DeprecatedAttr 0x556b1590eb58 <col:59> "" ""
|-CXXMethodDecl 0x556b1590ecf0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x556b1590ebe0 <col:33> col:36 'int'
| |-ParmVarDecl 0x556b1590ec58 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x556b1590eda0 <col:63> "" ""
|-AccessSpecDecl 0x556b1590ee10 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x556b1590ee38 prev 0x556b15904040 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556b1590ef30 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x556b1590f020 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x556b1590f148 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x556b1590f2c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x556b1590f448 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x556b1590f5c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x556b159203f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556b15920c68 <col:11>
| |-CXXDestructorDecl 0x556b159204d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x556b15920608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x556b15920608
| | `-ParmVarDecl 0x556b15920718 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x556b159207b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556b159207b8
| | `-ParmVarDecl 0x556b159208c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x556b15923688 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556b15923798 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x556b15923a18 <col:11>
| |   `-ReturnStmt 0x556b15923a08 <col:11>
| |     `-UnaryOperator 0x556b159239f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556b159239e0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x556b15923808 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x556b15923808
|   `-ParmVarDecl 0x556b15923918 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x556b1590f630 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556b1590f748 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x556b1590f7e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x556b1590f850 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x556b1590f8b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x556b1590f920 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x556b1590f980 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x556b1590fa40 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x556b1590faa0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x556b1590fb00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x556b15920308 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x556b1590f7e8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x556b15920c78 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x556b15920cd0 <col:12>
| |-CXXConstructorDecl 0x556b15920938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x556b15920938
| | `-ParmVarDecl 0x556b15920a48 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x556b15920ae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x556b15920ae8
| | `-ParmVarDecl 0x556b15920bf8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x556b15922d70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x556b1590fb78 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x556b1590fbd8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x556b1590fc40 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x556b1590fca8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x556b1590fd10 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x556b1590fd78 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x556b1590fdd8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x556b1590fe38 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x556b1590fea0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x556b1590ff28 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x556b1590fb78 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x556b159202a0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x556b1590fdd8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x556b15920ce0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x556b15920d40 <col:21, line:755:5>
|-CXXConstructorDecl 0x556b159100c8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x556b15910008 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x556b159101c0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x556b159103a8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x556b159102b0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x556b15910678 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x556b15910460 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b159104d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556b15910550 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15910898 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x556b15910748 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x556b159107c0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x556b15918e78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x556b15910958 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x556b159109d0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x556b15910a48 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x556b15918fd0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x556b15918f40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15919118 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x556b15919088 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x556b15919210 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b15920de0 prev 0x556b158fd6a0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x556b15920f18 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x556b15920fa8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x556b15921050 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x556b159210f0 <col:20>
| `-OptimizeNoneAttr 0x556b15921148 <col:30>
|-CXXMethodDecl 0x556b15921198 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x556b15921238 <col:20>
| `-OptimizeNoneAttr 0x556b15921290 <col:30>
|-CXXMethodDecl 0x556b159212e0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x556b159213a8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x556b15921470 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x556b15921588 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x556b15921650 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x556b159216f0 <col:20>
| `-OptimizeNoneAttr 0x556b15921748 <col:30>
|-CXXMethodDecl 0x556b159217b8 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x556b15921858 <col:20>
| `-OptimizeNoneAttr 0x556b159218b0 <col:30>
|-CXXMethodDecl 0x556b15921958 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x556b159219f8 <col:20>
| `-OptimizeNoneAttr 0x556b15921a50 <col:30>
|-CXXMethodDecl 0x556b15921aa0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x556b15921bb8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x556b15921cd8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x556b15921df8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x556b15921ec0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x556b15921f60 <col:62> "" ""
|-AccessSpecDecl 0x556b15921fd0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x556b15922030 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x556b15922c28 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x556b15922e50 <col:29, col:31>
|-CXXMethodDecl 0x556b159220f8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x556b15922238 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x556b159221a8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x556b15922330 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x556b15922e60 <col:23, col:25>
|-CXXMethodDecl 0x556b159224e8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x556b15922420 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x556b159227b8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x556b159225a0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x556b15922618 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x556b15922690 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x556b15922948 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x556b15922880 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x556b15922a40 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x556b15922aa8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x556b15922aa8
  `-ParmVarDecl 0x556b15922bb8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b1570a640 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x556b1570a758 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x556b1570a7f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x556b1570a858 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x556b1570a8b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x556b1570a968 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b1570ac70 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x556b1570ad88 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x556b1570ae30 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x556b1570ae98 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x556b1570af28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x556b15710fc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x556b157113f8 <col:12>
|-CXXConstructorDecl 0x556b157110c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556b157111d8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556b1570ae30 'data' 'const char *'
| | `-ImplicitCastExpr 0x556b15713980 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x556b15713950 <col:12> 'const char *const' lvalue .data 0x556b1570ae30
| |     `-DeclRefExpr 0x556b15713930 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b157111d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556b1570ae98 'length' 'int'
| | `-ImplicitCastExpr 0x556b15713a10 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x556b157139e0 <col:12> 'const int' lvalue .length 0x556b1570ae98
| |     `-DeclRefExpr 0x556b157139c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b157111d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x556b1570af28 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x556b15713aa0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x556b15713a70 <col:12> 'String::memo_t *const' lvalue .memo 0x556b1570af28
| |     `-DeclRefExpr 0x556b15713a50 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b157111d8 '' 'const String::rep_t &'
| `-CompoundStmt 0x556b15713af8 <col:12>
|-CXXConstructorDecl 0x556b15711278 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556b15711278
| `-ParmVarDecl 0x556b15711388 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x556b157168e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x556b157222f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x556b15722408 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x556b15722920 <col:12>
|   |-BinaryOperator 0x556b15722738 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556b157226f0 <col:12> 'const char *' lvalue ->data 0x556b1570ae30
|   | | `-CXXThisExpr 0x556b157226e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556b15722720 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x556b157226b0 <col:12> 'const char *const' lvalue .data 0x556b1570ae30
|   |     `-DeclRefExpr 0x556b15722690 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b15722408 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556b15722800 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x556b157227b8 <col:12> 'int' lvalue ->length 0x556b1570ae98
|   | | `-CXXThisExpr 0x556b157227a8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556b157227e8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x556b15722778 <col:12> 'const int' lvalue .length 0x556b1570ae98
|   |     `-DeclRefExpr 0x556b15722758 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b15722408 '' 'const String::rep_t &'
|   |-BinaryOperator 0x556b157228c8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x556b15722880 <col:12> 'String::memo_t *' lvalue ->memo 0x556b1570af28
|   | | `-CXXThisExpr 0x556b15722870 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x556b157228b0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x556b15722840 <col:12> 'String::memo_t *const' lvalue .memo 0x556b1570af28
|   |     `-DeclRefExpr 0x556b15722820 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b15722408 '' 'const String::rep_t &'
|   `-ReturnStmt 0x556b15722910 <col:12>
|     `-UnaryOperator 0x556b157228f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x556b157228e8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x556b15722478 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556b15722478
  `-ParmVarDecl 0x556b15722588 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x556b15701bb0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x556b15701cc8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x556b15701d58 <col:16, col:22> col:16 public
|-TypedefDecl 0x556b15701d98 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x556b153d7dc0 'const char *'
|   `-QualType 0x556b153d7311 'const char' const
|     `-BuiltinType 0x556b153d7310 'char'
|-TypedefDecl 0x556b15701e20 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x556b15701df0 'String::const_iterator' sugar
|   |-Typedef 0x556b15701d98 'const_iterator'
|   `-PointerType 0x556b153d7dc0 'const char *'
|     `-QualType 0x556b153d7311 'const char' const
|       `-BuiltinType 0x556b153d7310 'char'
|-TypedefDecl 0x556b15701f90 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x556b15701f00 'int (String::*)() const'
|   |-RecordType 0x556b15701c40 'String'
|   | `-CXXRecord 0x556b15701bb0 'String'
|   `-ParenType 0x556b15701ea0 'int () const' sugar
|     `-FunctionProtoType 0x556b156d5a30 'int () const' const cdecl
|       `-BuiltinType 0x556b153d7370 'int'
|-TypedefDecl 0x556b15701ff8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x556b1552a610 'int64_t' sugar
|   |-Typedef 0x556b154402d0 'int64_t'
|   `-TypedefType 0x556b154194d0 '__int64_t' sugar
|     |-Typedef 0x556b154190a8 '__int64_t'
|     `-BuiltinType 0x556b153d7390 'long'
|-TypedefDecl 0x556b15702060 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x556b1552a530 'uint64_t' sugar
|   |-Typedef 0x556b15440470 'uint64_t'
|   `-TypedefType 0x556b15419560 '__uint64_t' sugar
|     |-Typedef 0x556b15419118 '__uint64_t'
|     `-BuiltinType 0x556b153d7430 'unsigned long'
|-TypedefDecl 0x556b157020f0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x556b157020c0 'String::intmax_t' sugar
|   |-Typedef 0x556b15701ff8 'intmax_t'
|   `-TypedefType 0x556b1552a610 'int64_t' sugar
|     |-Typedef 0x556b154402d0 'int64_t'
|     `-TypedefType 0x556b154194d0 '__int64_t' sugar
|       |-Typedef 0x556b154190a8 '__int64_t'
|       `-BuiltinType 0x556b153d7390 'long'
|-TypedefDecl 0x556b15702180 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x556b15702150 'String::uintmax_t' sugar
|   |-Typedef 0x556b15702060 'uintmax_t'
|   `-TypedefType 0x556b1552a530 'uint64_t' sugar
|     |-Typedef 0x556b15440470 'uint64_t'
|     `-TypedefType 0x556b15419560 '__uint64_t' sugar
|       |-Typedef 0x556b15419118 '__uint64_t'
|       `-BuiltinType 0x556b153d7430 'unsigned long'
|-CXXConstructorDecl 0x556b15702240 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x556b157023e8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x556b15702328 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x556b15702598 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x556b157024d8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x556b157026f0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x556b15702660 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x556b15702908 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x556b157027b8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x556b15702838 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x556b15702b28 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x556b157029d8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x556b15702a58 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x556b15702d48 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556b15702bf8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x556b15702c78 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x556b15702f68 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x556b15702e18 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x556b15702e98 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x556b157030f8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x556b15703030 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x556b15703278 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x556b157031b8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x556b15703408 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x556b15703340 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x556b15703560 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x556b157034d0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x556b157036b8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x556b15703628 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x556b15703810 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x556b15703780 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x556b15703998 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x556b157038d8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x556b15703b28 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x556b15703a60 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x556b15703cb8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x556b15703bf0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x556b15703e48 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x556b15703d80 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x556b15703f40 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x556b15704068 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x556b157041e8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x556b15704120 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x556b15704338 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x556b157042a8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x556b157043f0 <col:63> "" ""
|-CXXMethodDecl 0x556b15704538 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x556b15704478 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x556b15704748 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x556b157045f8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x556b15704678 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x556b15704968 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x556b15704810 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x556b15704890 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x556b15704c48 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x556b15704a28 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x556b15704aa8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x556b15710a90 <col:55> 'int' 10
| `-ParmVarDecl 0x556b15704b20 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556b15710ab0 <col:76> 'bool' true
|-CXXMethodDecl 0x556b15704f28 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x556b15704d10 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x556b15704d90 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x556b15710ac0 <col:56> 'int' 10
| `-ParmVarDecl 0x556b15704e08 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x556b15710ae0 <col:77> 'bool' true
|-CXXMethodDecl 0x556b15705030 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x556b157050f8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x556b157051c0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x556b15705260 <col:20>
| `-OptimizeNoneAttr 0x556b157052b8 <col:30>
|-CXXConversionDecl 0x556b157053a8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x556b15705478 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x556b15705538 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x556b15705628 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556b157056e8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x556b15705868 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x556b157057a0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x556b157059b8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x556b15705928 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x556b15705aa8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x556b15705b68 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x556b15705db8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x556b15705c20 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x556b15705ca0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x556b15706018 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x556b15705e80 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x556b15705f00 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x556b157060e8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x556b157062f8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x556b157061a0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x556b15706220 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x556b15706518 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x556b157063c0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x556b15706440 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x556b157066a8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x556b157065e0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x556b15706798 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x556b15706908 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x556b15706848 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556b15706b18 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x556b157069c8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556b15706a48 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556b15706d30 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x556b15706bd8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x556b15706c50 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x556b15706ec0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x556b15706df0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556b157070e0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x556b15706f80 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x556b15707000 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556b15707230 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x556b157071a0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x556b15707408 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x556b157072f0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556b15707370 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x556b15707558 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x556b157074c8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x556b15707770 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x556b15707610 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x556b15707690 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x556b15710af0 <col:39> 'int' 0
|-CXXMethodDecl 0x556b15707990 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x556b15707830 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x556b157078b0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x556b15710b10 <col:48> 'int' 0
|-CXXMethodDecl 0x556b15707b70 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x556b15707a50 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x556b15707ad0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x556b15710b30 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x556b15707c40 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x556b15707d00 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x556b15707dc0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x556b15707e80 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x556b15707f40 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x556b157080e8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x556b15707ff0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x556b15708268 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x556b157081a0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x556b15708440 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x556b15708328 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x556b157085b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x556b157084f8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x556b15708700 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x556b15708670 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x556b15708850 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x556b157087c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x556b15708a28 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x556b15708910 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x556b15708990 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x556b15708c08 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x556b15708af0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x556b15708b70 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x556b15708d58 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x556b15708cc8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x556b15708f68 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x556b15708e18 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x556b15708e98 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x556b157090c8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x556b15709030 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x556b15709220 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x556b15709188 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x556b157092c8 <col:57> "" ""
|-CXXMethodDecl 0x556b157093d8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x556b15709348 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x556b15709528 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x556b15709498 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x556b157096a8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x556b157095e0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x556b15709770 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x556b15709830 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x556b157098f0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x556b15709990 <col:49> "" ""
|-CXXMethodDecl 0x556b15709a20 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x556b15709ae0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x556b15709bd0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x556b15709c98 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x556b15709d58 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x556b15709e18 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x556b15709f10 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x556b15709fd8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x556b1570a0a0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x556b1570a278 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x556b1570a158 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x556b1570a1d8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x556b1570a4a0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x556b1570a340 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x556b1570a3c0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x556b1570a5b0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x556b1570a618 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x556b1570a640 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x556b1570a758 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x556b1570a7f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x556b1570a858 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x556b1570a8b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x556b1570a968 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x556b1570a9d0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x556b1570ac08 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x556b1570ac58 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b1570abe8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x556b1570aaf8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x556b1570aaa0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x556b1570aae0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x556b1570aac0 <col:32> 'int' 8
|-CXXRecordDecl 0x556b1570ac70 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x556b1570ad88 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x556b1570ae30 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x556b1570ae98 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x556b1570af28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x556b15710fc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x556b157113f8 <col:12>
| |-CXXConstructorDecl 0x556b157110c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556b157111d8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556b1570ae30 'data' 'const char *'
| | | `-ImplicitCastExpr 0x556b15713980 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x556b15713950 <col:12> 'const char *const' lvalue .data 0x556b1570ae30
| | |     `-DeclRefExpr 0x556b15713930 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b157111d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556b1570ae98 'length' 'int'
| | | `-ImplicitCastExpr 0x556b15713a10 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x556b157139e0 <col:12> 'const int' lvalue .length 0x556b1570ae98
| | |     `-DeclRefExpr 0x556b157139c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b157111d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x556b1570af28 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x556b15713aa0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x556b15713a70 <col:12> 'String::memo_t *const' lvalue .memo 0x556b1570af28
| | |     `-DeclRefExpr 0x556b15713a50 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b157111d8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x556b15713af8 <col:12>
| |-CXXConstructorDecl 0x556b15711278 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556b15711278
| | `-ParmVarDecl 0x556b15711388 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x556b157168e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x556b157222f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x556b15722408 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x556b15722920 <col:12>
| |   |-BinaryOperator 0x556b15722738 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x556b157226f0 <col:12> 'const char *' lvalue ->data 0x556b1570ae30
| |   | | `-CXXThisExpr 0x556b157226e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556b15722720 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x556b157226b0 <col:12> 'const char *const' lvalue .data 0x556b1570ae30
| |   |     `-DeclRefExpr 0x556b15722690 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b15722408 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556b15722800 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x556b157227b8 <col:12> 'int' lvalue ->length 0x556b1570ae98
| |   | | `-CXXThisExpr 0x556b157227a8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556b157227e8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x556b15722778 <col:12> 'const int' lvalue .length 0x556b1570ae98
| |   |     `-DeclRefExpr 0x556b15722758 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b15722408 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x556b157228c8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x556b15722880 <col:12> 'String::memo_t *' lvalue ->memo 0x556b1570af28
| |   | | `-CXXThisExpr 0x556b15722870 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x556b157228b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x556b15722840 <col:12> 'String::memo_t *const' lvalue .memo 0x556b1570af28
| |   |     `-DeclRefExpr 0x556b15722820 <col:12> 'const String::rep_t' lvalue ParmVar 0x556b15722408 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x556b15722910 <col:12>
| |     `-UnaryOperator 0x556b157228f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x556b157228e8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x556b15722478 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x556b15722478
|   `-ParmVarDecl 0x556b15722588 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x556b1570afa0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x556b1570b1e8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x556b1570b008 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x556b1570b088 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x556b1570b100 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x556b15710f80 <col:79, line:261:5>
|   |-BinaryOperator 0x556b15710bf8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x556b15710b90 <col:2, col:5> 'const char *' lvalue .data 0x556b1570ae30
|   | | `-MemberExpr 0x556b15710b60 <col:2> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|   | |   `-CXXThisExpr 0x556b15710b50 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556b15710be0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x556b15710bc0 <col:12> 'const char *' lvalue ParmVar 0x556b1570b008 'data' 'const char *'
|   |-BinaryOperator 0x556b15710cc0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x556b15710c58 <col:2, col:5> 'int' lvalue .length 0x556b1570ae98
|   | | `-MemberExpr 0x556b15710c28 <col:2> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|   | |   `-CXXThisExpr 0x556b15710c18 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x556b15710ca8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x556b15710c88 <col:14> 'int' lvalue ParmVar 0x556b1570b088 'length' 'int'
|   `-IfStmt 0x556b15710f68 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x556b15710de0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556b15710dc8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x556b15710da8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x556b15710d88 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x556b15710d20 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x556b1570af28
|     |       | `-MemberExpr 0x556b15710cf0 <col:7> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|     |       |   `-CXXThisExpr 0x556b15710ce0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x556b15710d70 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x556b15710d50 <col:17> 'String::memo_t *' lvalue ParmVar 0x556b1570b100 'memo' 'String::memo_t *'
|     `-CallExpr 0x556b15710f40 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x556b15710f28 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x556b15710e30 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x556b156f9c18 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x556b15710e98 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556b1570a7f8
|         `-ImplicitCastExpr 0x556b15710e80 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x556b15710e60 <col:27> 'String::memo_t *' lvalue ParmVar 0x556b1570b100 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x556b1570b498 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x556b1570b2b8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x556b1570b338 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x556b1570b3b0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x556b1570afa0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x556b15711408 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x556b15711598 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x556b15711500 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x556b15711470 <col:2> '<bound member function type>' ->assign_memo 0x556b1570b1e8
|     | `-ImplicitCastExpr 0x556b15711538 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x556b15711460 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x556b15711550 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x556b157114a0 <col:14> 'const char *' lvalue ParmVar 0x556b1570b2b8 'data' 'const char *'
|     |-ImplicitCastExpr 0x556b15711568 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x556b157114c0 <col:20> 'int' lvalue ParmVar 0x556b1570b338 'length' 'int'
|     `-ImplicitCastExpr 0x556b15711580 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x556b157114e0 <col:28> 'String::memo_t *' lvalue ParmVar 0x556b1570b3b0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x556b1570b628 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x556b1570b568 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x556b157117f0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x556b15711770 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x556b157115c0 <col:2> '<bound member function type>' ->assign_memo 0x556b1570b1e8
|     | `-CXXThisExpr 0x556b157115b0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x556b157117a8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x556b15711640 <col:14, col:19> 'const char *' lvalue .data 0x556b1570ae30
|     |   `-MemberExpr 0x556b15711610 <col:14, col:16> 'String::rep_t' lvalue ._r 0x556b1570afa0
|     |     `-DeclRefExpr 0x556b157115f0 <col:14> 'const String' lvalue ParmVar 0x556b1570b568 'x' 'const String &'
|     |-ImplicitCastExpr 0x556b157117c0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x556b157116c0 <col:25, col:30> 'int' lvalue .length 0x556b1570ae98
|     |   `-MemberExpr 0x556b15711690 <col:25, col:27> 'String::rep_t' lvalue ._r 0x556b1570afa0
|     |     `-DeclRefExpr 0x556b15711670 <col:25> 'const String' lvalue ParmVar 0x556b1570b568 'x' 'const String &'
|     `-ImplicitCastExpr 0x556b157117d8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x556b15711740 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x556b1570af28
|         `-MemberExpr 0x556b15711710 <col:38, col:40> 'String::rep_t' lvalue ._r 0x556b1570afa0
|           `-DeclRefExpr 0x556b157116f0 <col:38> 'const String' lvalue ParmVar 0x556b1570b568 'x' 'const String &'
|-CXXMethodDecl 0x556b1570b6f0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x556b157121b0 <col:31, line:278:5>
|   `-IfStmt 0x556b15712198 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x556b15711890 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x556b15711878 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x556b15711848 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556b1570af28
|     |     `-MemberExpr 0x556b15711818 <col:6> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|     |       `-CXXThisExpr 0x556b15711808 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x556b15712170 <col:15, line:277:2>
|       |-ParenExpr 0x556b15711d40 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x556b15711d10 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x556b157119a0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x556b15711988 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x556b15711970 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x556b15711930 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556b1570a7f8
|       |   |       `-ImplicitCastExpr 0x556b15711918 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x556b157118e8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x556b1570af28
|       |   |           `-MemberExpr 0x556b157118b8 <col:27> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|       |   |             `-CXXThisExpr 0x556b157118a8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x556b15711a00 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x556b157119e0 <col:54> 'int' 0
|       |   `-CallExpr 0x556b15711c70 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x556b15711c58 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x556b15711bd8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x556b15470e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x556b15711cb0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556b15711ae8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x556b15711cc8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x556b15711b18 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x556b15711ce0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x556b15711b50 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x556b15711cf8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x556b15711bc0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x556b15711ba8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x556b15711b70 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x556b15712090 <line:274:6, line:275:22>
|       | |-CallExpr 0x556b15711f50 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x556b15711f38 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x556b15711eb0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x556b156fb060 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x556b15711e80 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x556b1570a7f8
|       | |   `-ImplicitCastExpr 0x556b15711e68 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x556b15711e38 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x556b1570af28
|       | |       `-MemberExpr 0x556b15711e08 <col:40> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|       | |         `-CXXThisExpr 0x556b15711df8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x556b15712050 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x556b15712038 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x556b15711f78 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x556b1570fed0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x556b15712078 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x556b15711fd8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x556b1570af28
|       |       `-MemberExpr 0x556b15711fa8 <col:15> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|       |         `-CXXThisExpr 0x556b15711f98 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x556b15712150 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x556b157120e8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x556b1570af28
|         | `-MemberExpr 0x556b157120b8 <col:6> 'String::rep_t' lvalue ->_r 0x556b1570afa0
|         |   `-CXXThisExpr 0x556b157120a8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x556b15712138 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x556b15712118 <col:16> 'int' 0
|-CXXMethodDecl 0x556b1570b988 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x556b1570b7a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556b1570b828 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556b1570b8a0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x556b1570ba60 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x556b1570bcb0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x556b1570bb18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x556b1570bb98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x556b1570bc10 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x556b1570be98 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x556b1570bd80 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x556b1570be00 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x556b1570bf98 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x556b15712288 <col:41, line:286:5>
|   `-ReturnStmt 0x556b15712278 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x556b15712248 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x556b15712210 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x556b157121f8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x556b157121d8 <col:46> 'int' 1
|-CXXMethodDecl 0x556b1570c238 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x556b1570c050 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x556b1570c0d0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x556b1570c150 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x556b1570fed0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x556b1570c300 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x556b1570ffa0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x556b15710170 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x556b15710058 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x556b157100d8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x556b15710230 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x556b157102f8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x556b157103f8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x556b15710470 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x556b157104e8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x556b15710550 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x556b15710650 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x556b157106a0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x556b15710630 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x556b15710610 <col:22> 'int' 14
|-CXXMethodDecl 0x556b157108b8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x556b157106d0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x556b15710750 <col:38> col:41 'int'
| `-ParmVarDecl 0x556b157107d0 <col:43> col:46 'int'
|-FriendDecl 0x556b157109c0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x556b15710a50 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
