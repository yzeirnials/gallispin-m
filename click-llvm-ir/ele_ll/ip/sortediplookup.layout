
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct IPRoute
         0 |   class IPAddress addr
         0 |     uint32_t _addr
         4 |   class IPAddress mask
         4 |     uint32_t _addr
         8 |   class IPAddress gw
         8 |     uint32_t _addr
        12 |   int32_t port
        16 |   int32_t extra
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5cd2c38 prev 0x5607a5cca3d8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5607a5cd2d30 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5607a5cd2dc0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5607a5cd2e38 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5607a5cd2ef8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5607a5cd2fc0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5607a5cd3138 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5607a5cd3070 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5607a5cd31e0 <col:24>
| `-OptimizeNoneAttr 0x5607a5cd3238 <col:34>
|-CXXMethodDecl 0x5607a5cd3280 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5607a5cd3538 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5607a5cd3330 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5607a5cd33a8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5607a5cd3428 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5607a5cd35f0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5607a5cd3628 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5607a5cd3690 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5607a5cd3718 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5607a5cd3a38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5607a5cd37d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5607a5cd3848 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5607a5cd38c0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5607a5cd3940 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5607a5cd3b50 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5607a5cdb4c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5607a5cdb4c8
| `-ParmVarDecl 0x5607a5cdb5d8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5607a5cdb678 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5607a5cdb678
| `-ParmVarDecl 0x5607a5cdb788 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5607a5d376d0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5cc5c50 prev 0x5607a5cc59d0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5607a5cc5d48 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5607a5cc5dd8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5607a5cc5e38 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x5607a5cc5f28 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x5607a5cc6028 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5607a5cc61f8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5607a5cc60a8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5607a5cc6120 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5607a5cc6388 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5607a5cc62c0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5607a5cc6430 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5607a5cc6568 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5607a5cc64a0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5607a5cc6708 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5607a5cc6648 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5607a5cc68a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5607a5cc67e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5607a5cc6950 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5607a5cc6a50 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5607a5cc6b30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cc6a30 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5607a5cc6a10 <col:26> 'int' 1
| `-EnumConstantDecl 0x5607a5cc6ae0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5607a5cc6b48 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5cc6ac0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5607a5cc6aa0 <col:44> 'int' 2
|-CXXMethodDecl 0x5607a5cc6c90 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5607a5cc6b78 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5607a5cc6bf8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5607a5cc6de8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5607a5cc6d58 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5607a5cc7028 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5607a5cc6ea8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5607a5cc6f20 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5607a5cc70d8 <col:20>
| `-OptimizeNoneAttr 0x5607a5cc7130 <col:30>
|-CXXMethodDecl 0x5607a5cc7238 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5607a5cc7170 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5607a5cc72e0 <col:20>
| `-OptimizeNoneAttr 0x5607a5cc7338 <col:30>
|-CXXMethodDecl 0x5607a5cc7388 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5607a5cc7450 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5607a5cc7568 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5607a5cc75f0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5607a5cc7678 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5607a5cc7700 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5607a5cc7788 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5607a5cc7818 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5607a5cc78d8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5607a5cc7960 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x5607a5cc79e8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5607a5cc7a70 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5607a5cc7af8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5607a5cc7b80 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5607a5cc7c10 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5607a5cc7cd0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5607a5cc7d60 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5607a5cc7eb0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5607a5cc7e18 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5607a5cc8040 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5607a5cc7f70 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5607a5cc82f0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5607a5cc80f8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5607a5cc8178 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5607a5cc81f8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5607a5cc83a8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5607a5cc84b0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5607a5cc8740 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cc8490 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5607a5cc8470 <col:33> 'int' 0
| |-EnumConstantDecl 0x5607a5cc8540 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5607a5cc8758 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cc8520 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5607a5cc8500 <col:32> 'int' 20
| |-EnumConstantDecl 0x5607a5cc85d0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5607a5cc8770 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cc85b0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5607a5cc8590 <col:38> 'int' 90
| |-EnumConstantDecl 0x5607a5cc8660 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5607a5cc8788 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cc8640 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5607a5cc8620 <col:35> 'int' 100
| `-EnumConstantDecl 0x5607a5cc86f0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5607a5cc87a0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5cc86d0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5607a5cc86b0 <col:32> 'int' 2000
|-CXXMethodDecl 0x5607a5cc87e0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5607a5cc8c20 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5607a5cc8a90 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5607a5cc8b08 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cc8cf0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5607a5cc8e70 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5607a5cc8da0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cc9078 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5607a5cc8f28 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5607a5cc8fa0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cc9178 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5607a5cc9218 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5607a5cc92e0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5607a5cc9370 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5607a5cc95a0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cc9350 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5607a5cc9330 <col:36> 'int' EnumConstant 0x5607a5cc92e0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5607a5cc93c0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5607a5cc9410 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5607a5cc9460 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5607a5cc94b0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5607a5cc9500 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5607a5cc9550 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5607a5cc9688 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5607a5cc95c8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5607a5cc9750 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5607a5cc9810 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5607a5cc98d0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5607a5cc9990 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5607a5cc9aa8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5607a5cc9b70 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5607a5cc9cf0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5607a5cc9c20 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5607a5cc9e18 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5607a5cca018 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5607a5cc9ec8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5607a5cc9f48 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5607a5cd7968 <col:54, line:127:5>
|   |-ParenExpr 0x5607a5cd7818 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5607a5cd77e8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cd74d8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5607a5cd74b0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5607a5cd7498 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5607a5cd7480 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5607a5cd7450 <col:31> 'Router *' lvalue ->_router 0x5607a5cd5330
|   |   |         `-CXXThisExpr 0x5607a5cd7440 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5607a5cd7538 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cd7518 <col:48> 'int' 0
|   |   `-CallExpr 0x5607a5cd7748 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cd7730 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cd7710 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cd7788 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cd75a8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5607a5cd77a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cd75c8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5607a5cd77b8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cd7600 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5607a5cd77d0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cd76f8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cd76e0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cd7698 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5607a5cd78b0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5607a5cd7848 <col:9> 'Router *' lvalue ->_router 0x5607a5cd5330
|   | | `-CXXThisExpr 0x5607a5cd7838 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5607a5cd7898 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5607a5cd7878 <col:19> 'Router *' lvalue ParmVar 0x5607a5cc9ec8 'r' 'Router *'
|   `-BinaryOperator 0x5607a5cd7948 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5607a5cd78e0 <col:9> 'int' lvalue ->_eindex 0x5607a5cd5398
|     | `-CXXThisExpr 0x5607a5cd78d0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5607a5cd7930 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5cd7910 <col:19> 'int' lvalue ParmVar 0x5607a5cc9f48 'eindex' 'int'
|-CXXMethodDecl 0x5607a5cca1a0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5607a5cca0d8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5607a5cca270 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5607a5cca338 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5607a5cca3d8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5607a5cca628 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5607a5cca4a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5607a5cca520 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5607a5cca6d8 <col:20>
| `-OptimizeNoneAttr 0x5607a5cca730 <col:30>
|-CXXMethodDecl 0x5607a5cca838 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5607a5cca770 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5607a5cca8e0 <col:20>
| `-OptimizeNoneAttr 0x5607a5cca938 <col:30>
|-CXXMethodDecl 0x5607a5ccaa08 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5607a5cca978 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5607a5ccaab0 <col:20>
| `-OptimizeNoneAttr 0x5607a5ccab08 <col:30>
|-CXXMethodDecl 0x5607a5ccac98 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5607a5ccab40 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5607a5ccabc0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5607a5ccae28 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5607a5ccad60 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5607a5ccaf78 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5607a5ccaee8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5607a5ccb0c8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5607a5ccb038 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5607a5ccb218 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5607a5ccb188 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5607a5ccb4d8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5607a5ccb2d0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5607a5ccb350 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5607a5ccb3f8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5607a5ccb5b0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5607a5ccb670 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5607a5ccb940 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5607a5ccb7f0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5607a5ccb868 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ccba68 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5607a5ccbc40 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5607a5ccbb20 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5607a5ccbba0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5607a5ccbe28 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5607a5ccbd08 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5607a5ccbd88 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5607a5ccc198 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5607a5ccbee8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5607a5ccbf60 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5607a5ccbfe0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5607a5cd6f50 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5607a5cd6f30 <col:106> 'int' 0
| `-ParmVarDecl 0x5607a5ccc058 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5607a5cd6f88 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5607a5cd6f68 <col:126> 'int' 0
|-CXXMethodDecl 0x5607a5ccc538 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5607a5ccc268 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5607a5ccc300 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5607a5ccc380 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5607a5ccc3f8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5607a5cd6fc0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5607a5cd6fa0 <col:114> 'int' 0
|-CXXMethodDecl 0x5607a5ccc8c8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5607a5ccc610 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5607a5ccc688 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5607a5ccc708 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5607a5cd6fd8 <col:96> 'int' 0
| `-ParmVarDecl 0x5607a5ccc780 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5607a5cd7018 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5607a5cd6ff8 <col:116> 'int' 0
|-CXXMethodDecl 0x5607a5cccc48 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5607a5ccc998 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5607a5ccca10 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ccca90 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5607a5cd7050 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5607a5cd7030 <col:109> 'int' 0
| `-ParmVarDecl 0x5607a5cccb08 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5607a5cd7088 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5607a5cd7068 <col:129> 'int' 0
|-CXXMethodDecl 0x5607a5cccfc8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5607a5cccd18 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5607a5cccd90 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ccce10 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5607a5ccce88 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5607a5cd70c0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5607a5cd70a0 <col:117> 'int' 0
|-CXXMethodDecl 0x5607a5ccd358 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5607a5ccd0a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5ccd118 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ccd198 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5607a5cd70d8 <col:99> 'int' 0
| `-ParmVarDecl 0x5607a5ccd210 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5607a5cd7118 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5607a5cd70f8 <col:119> 'int' 0
|-CXXMethodDecl 0x5607a5ccd778 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5607a5ccd428 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5607a5ccd4a8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5607a5ccd520 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ccd5a0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5607a5cd7150 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5607a5cd7130 <col:108> 'int' 0
| `-ParmVarDecl 0x5607a5ccd620 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5607a5cd7188 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5607a5cd7168 <col:141> 'int' 0
|-CXXMethodDecl 0x5607a5ccdb98 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5607a5ccd850 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5607a5ccd8d0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5607a5ccd948 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ccd9c8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5607a5ccda48 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5607a5cd71a0 <col:121> 'int' 0
|-CXXMethodDecl 0x5607a5ccdfc8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5607a5ccdc78 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5607a5ccdcf8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5607a5ccdd70 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ccddf0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5607a5cd71c0 <col:98> 'int' 0
| `-ParmVarDecl 0x5607a5ccde70 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5607a5cd71e0 <col:123> 'int' 0
|-CXXMethodDecl 0x5607a5cce290 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5607a5cce0a0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5607a5cce120 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5607a5cce1a0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5607a5cd7200 <col:80> 'int' 0
|-EnumDecl 0x5607a5cce348 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5607a5cce450 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5607a5cce6e0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cce430 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5607a5cce410 <col:42> 'int' 1
| |-EnumConstantDecl 0x5607a5cce4e0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5607a5cce6f8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cce4c0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5607a5cce4a0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5607a5cce570 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5607a5cce710 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cce550 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5607a5cce530 <col:44> 'int' 4
| |-EnumConstantDecl 0x5607a5cce600 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5607a5cce728 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5cce5e0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5607a5cce5c0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5607a5cce690 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5607a5cce740 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5cce670 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5607a5cce650 <col:34> 'int' 6
|-CXXMethodDecl 0x5607a5cce9f8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5607a5cce768 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5607a5cce808 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5607a5cce888 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5607a5cce900 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5607a5cd72b8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5607a5cd72a0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5607a5cd7288 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5607a5cd7268 <col:98, col:105> 'String' (CXXTemporary 0x5607a5cd7268)
|           `-CXXTemporaryObjectExpr 0x5607a5cd7230 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5607a5ccec98 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5607a5cceac8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5607a5cceb40 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5607a5ccebb8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5607a5cd7368 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5607a5cd7350 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5607a5cd7338 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5607a5cd7318 <col:94, col:101> 'String' (CXXTemporary 0x5607a5cd7318)
| |         `-CXXTemporaryObjectExpr 0x5607a5cd72e0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5607a5cd7b50 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5607a5cd7ac8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5607a5cd7a98 <col:9> '<bound member function type>' ->add_task_handlers 0x5607a5cce9f8
|     | `-CXXThisExpr 0x5607a5cd7a88 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5607a5cd7b08 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5607a5cd7a08 <col:27> 'Task *' lvalue ParmVar 0x5607a5cceac8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5607a5cd7b20 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5607a5cd7a28 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5607a5cceb40 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5607a5cd7b38 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5607a5cd7a48 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5607a5cce690 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5607a5cd7a68 <col:62> 'const String' lvalue ParmVar 0x5607a5ccebb8 'prefix' 'const String &'
|-CXXMethodDecl 0x5607a5cceea8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5607a5cced60 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5607a5ccedd8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5607a5cd7418 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5607a5cd7400 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5607a5cd73e8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5607a5cd73c8 <col:70, col:77> 'String' (CXXTemporary 0x5607a5cd73c8)
| |         `-CXXTemporaryObjectExpr 0x5607a5cd7390 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5607a5cd7d28 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5607a5cd7ca0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5607a5cd7c70 <col:9> '<bound member function type>' ->add_task_handlers 0x5607a5cce9f8
|     | `-CXXThisExpr 0x5607a5cd7c60 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5607a5cd7ce0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5607a5cd7be0 <col:27> 'Task *' lvalue ParmVar 0x5607a5cced60 'task' 'Task *'
|     |-ImplicitCastExpr 0x5607a5cd7cf8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5607a5cd7c00 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5607a5cd7d10 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5607a5cd7c20 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5607a5cce690 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5607a5cd7c40 <col:57> 'const String' lvalue ParmVar 0x5607a5ccedd8 'prefix' 'const String &'
|-CXXMethodDecl 0x5607a5ccf188 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5607a5ccef70 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cceff0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5ccf068 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5607a5ccf438 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5607a5ccf258 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5ccf2d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5ccf358 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5607a5ccf728 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5607a5ccf508 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5ccf588 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5ccf600 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5607a5ccf9d8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5607a5ccf7f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5ccf878 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5ccf8f8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5607a5ccfc88 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5607a5ccfaa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5ccfb28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5ccfba8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5607a5ccff38 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5607a5ccfd58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5ccfdd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5ccfe50 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5607a5cd01e8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5607a5cd0008 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd0088 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd0108 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5607a5cd04f8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5607a5cd0310 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd0390 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd0410 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5607a5cd07d8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5607a5cd05c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd0648 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd06f0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5607a5cd0ab8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5607a5cd08a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd0928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd09d0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5607a5cd0d20 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5607a5cd0b88 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5607a5cd0c08 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5607a5cd0c80 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5607a5cd0fc8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5607a5cd0df0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5607a5cd0e70 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5607a5cd0ee8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5607a5cd1278 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5607a5cd1098 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd1118 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd1198 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5607a5cd1528 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5607a5cd1348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd13c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd1440 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5607a5cd17d8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5607a5cd15f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd1678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd16f0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5607a5cd1aa8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5607a5cd18a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd1928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5607a5cd19c8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5607a5cd1dd8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5607a5cd1b78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5607a5cd1bf8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5607a5cd1c70 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5607a5cd1ce8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5607a5cd7430 <col:93> 'bool' false
|-CXXMethodDecl 0x5607a5cd1fc0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5607a5cd1ea8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5607a5cd1f28 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5607a5cd2198 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5607a5cd2080 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5607a5cd2100 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5607a5cd2478 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5cd2258 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5607a5cd22d0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5607a5cd2350 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5607a5cd23c8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cd2768 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5cd2548 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5607a5cd25c0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5607a5cd2640 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5607a5cd26b8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cd29a0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5607a5cd2840 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5607a5cd28c0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5607a5cd2b88 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5607a5cd2a68 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5607a5cd2ae8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5607a5cd2c38 prev 0x5607a5cca3d8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5607a5cd2d30 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5607a5cd2dc0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5607a5cd2e38 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5607a5cd2ef8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5607a5cd2fc0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5607a5cd3138 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5607a5cd3070 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5607a5cd31e0 <col:24>
| | `-OptimizeNoneAttr 0x5607a5cd3238 <col:34>
| |-CXXMethodDecl 0x5607a5cd3280 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5607a5cd3538 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5607a5cd3330 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5607a5cd33a8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5607a5cd3428 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5607a5cd35f0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5607a5cd3628 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5607a5cd3690 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5607a5cd3718 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5607a5cd3a38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5607a5cd37d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5607a5cd3848 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5607a5cd38c0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5607a5cd3940 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5607a5cd3b50 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5607a5cdb4c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5607a5cdb4c8
| | `-ParmVarDecl 0x5607a5cdb5d8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5607a5cdb678 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5607a5cdb678
| | `-ParmVarDecl 0x5607a5cdb788 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5607a5d376d0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5607a5cd3bc8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5607a5cd3c68 <col:38> "" ""
|-CXXMethodDecl 0x5607a5cd3cf8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5607a5cd3d98 <col:44> "" ""
|-AccessSpecDecl 0x5607a5cd3e08 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5607a5cd3e30 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5607a5cd3f30 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5607a5cd3f80 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5cd3f10 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5607a5cd3ef0 <col:27> 'int' 4
|-FieldDecl 0x5607a5cd4038 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5607a5cd41e8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5607a5cd42a0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5607a5cd5330 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5607a5cd5398 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5607a5cd54e8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5607a5cd5428 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5607a5cd5698 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5607a5cd55a8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5607a5cd5878 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5607a5cd5758 <col:20> col:23 'int'
| `-ParmVarDecl 0x5607a5cd57d8 <col:25> col:28 'int'
|-CXXMethodDecl 0x5607a5cd5b20 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5cd5940 <col:23> col:26 'int'
| |-ParmVarDecl 0x5607a5cd59c0 <col:28> col:31 'int'
| `-ParmVarDecl 0x5607a5cd5a38 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5607a5cd5bd8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5607a5cd5ca0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5607a5cd5cf0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5607a5cd5d40 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5607a5cd5f20 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5cd5dd0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5607a5cd5e48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cd61c8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5607a5cd5fe8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5607a5cd6068 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5607a5cd60e0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5cd63e8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5607a5cd6298 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5607a5cd6318 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5607a5cd6720 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5607a5cd64a8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5607a5cd6528 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5607a5cd65a0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5607a5cd6620 <col:57> col:60 'int'
|-CXXMethodDecl 0x5607a5cd6908 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5607a5cd67f0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5607a5cd6870 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5607a5cd6a58 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5607a5cd69c8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5607a5cd6dd8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5607a5cd6b18 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5607a5cd6b98 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5607a5cd6c10 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5607a5cd6c90 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5607a5cd6ef0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5ce0c08 <../elements/ip/iproutetable.hh:188:1, line:212:1> line:188:7 referenced class IPRouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5607a5ce0d68 <col:1, col:7> col:7 implicit class IPRouteTable
|-AccessSpecDecl 0x5607a5ce0df8 <col:39, col:45> col:39 public
|-CXXMethodDecl 0x5607a5ce0ef8 <line:190:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x5607a5cc8040 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x5607a5ce0e38 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x5607a5ce11d0 <line:191:5, col:49> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5607a5cc8c20 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5607a5ce1080 <col:19, col:33> col:34 'Vector<String> &'
| `-ParmVarDecl 0x5607a5ce10f8 <col:36, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce12a0 <line:192:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x5607a5cc8cf0 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x5607a5ce15b0 <line:194:5, col:112> col:17 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5607a5ce1350 <col:27, col:42> col:42 route 'const IPRoute &'
| |-ParmVarDecl 0x5607a5ce13c8 <col:49, col:54> col:54 allow_replace 'bool'
| |-ParmVarDecl 0x5607a5ce1440 <col:69, col:78> col:78 replaced_route 'IPRoute *'
| `-ParmVarDecl 0x5607a5ce14b8 <col:94, col:108> col:108 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce1860 <line:195:5, col:94> col:17 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5607a5ce1680 <col:30, col:45> col:45 route 'const IPRoute &'
| |-ParmVarDecl 0x5607a5ce16f8 <col:52, col:61> col:61 removed_route 'IPRoute *'
| `-ParmVarDecl 0x5607a5ce1770 <col:76, col:90> col:90 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce1ab0 <line:196:5, col:69> col:17 lookup_route 'int (IPAddress, IPAddress &) const' virtual pure
| |-ParmVarDecl 0x5607a5ce1928 <col:30, col:40> col:40 addr 'IPAddress'
| `-ParmVarDecl 0x5607a5ce19a0 <col:46, col:57> col:57 gw 'IPAddress &'
|-CXXMethodDecl 0x5607a5ce1ba8 <line:197:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x5607a5ce1d70 <line:199:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5607a5cc61f8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5607a5ce1c60 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5607a5ce1cd8 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5607a5ce2050 <line:201:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5ce1e30 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x5607a5ce1ea8 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x5607a5ce1f28 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x5607a5ce1fa0 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce2340 <line:202:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5ce2120 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x5607a5ce2198 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x5607a5ce2218 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x5607a5ce2290 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce2630 <line:203:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5ce2410 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x5607a5ce2488 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x5607a5ce2508 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x5607a5ce2580 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce29a0 <line:204:5, col:94> col:16 lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x5607a5ce2708 <col:31, col:35> col:35 operation 'int'
| |-ParmVarDecl 0x5607a5ce2780 <col:46, col:52> col:53 'String &'
| |-ParmVarDecl 0x5607a5ce27f8 <col:55, col:62> col:63 'Element *'
| |-ParmVarDecl 0x5607a5ce2870 <col:65, col:78> col:79 'const Handler *'
| `-ParmVarDecl 0x5607a5ce28e8 <col:81, col:93> col:94 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5ce2b90 <line:205:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5607a5ce2a78 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x5607a5ce2af8 <col:43, col:47> col:48 'void *'
|-AccessSpecDecl 0x5607a5ce2c40 <line:207:3, col:10> col:3 private
|-EnumDecl 0x5607a5ce2c68 <line:209:5, col:41> col:5
| |-EnumConstantDecl 0x5607a5ce2d30 <col:12> col:12 CMD_ADD 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| |-EnumConstantDecl 0x5607a5ce2d80 <col:21> col:21 CMD_SET 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
| `-EnumConstantDecl 0x5607a5ce2dd0 <col:30> col:30 CMD_REMOVE 'IPRouteTable::(anonymous enum at ../elements/ip/iproutetable.hh:209:5)'
|-CXXMethodDecl 0x5607a5ce32f0 <line:210:5, col:92> col:9 run_command 'int (int, const String &, Vector<IPRoute> *, ErrorHandler *)'
| |-ParmVarDecl 0x5607a5ce2e38 <col:21, col:25> col:25 command 'int'
| |-ParmVarDecl 0x5607a5ce2eb0 <col:34, col:47> col:48 'const String &'
| |-ParmVarDecl 0x5607a5ce3130 <col:50, col:67> col:67 old_routes 'Vector<IPRoute> *'
| `-ParmVarDecl 0x5607a5ce31a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXConstructorDecl 0x5607a5ce33f0 <line:188:7> col:7 implicit IPRouteTable 'void (const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x5607a5ce33f0
| `-ParmVarDecl 0x5607a5ce3508 <col:7> col:7 'const IPRouteTable &'
|-CXXConstructorDecl 0x5607a5ce35a8 <col:7> col:7 implicit IPRouteTable 'void (IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x5607a5ce35a8
| `-ParmVarDecl 0x5607a5ce36b8 <col:7> col:7 'IPRouteTable &&'
|-CXXMethodDecl 0x5607a5ce3758 <col:7> col:7 implicit operator= 'IPRouteTable &(const IPRouteTable &)' inline default_delete noexcept-unevaluated 0x5607a5ce3758
| `-ParmVarDecl 0x5607a5ce3868 <col:7> col:7 'const IPRouteTable &'
|-CXXMethodDecl 0x5607a5ce38d8 <col:7> col:7 implicit operator= 'IPRouteTable &(IPRouteTable &&)' inline default_delete noexcept-unevaluated 0x5607a5ce38d8
| `-ParmVarDecl 0x5607a5ce39e8 <col:7> col:7 'IPRouteTable &&'
`-CXXDestructorDecl 0x5607a5ce3a70 <col:7> col:7 implicit ~IPRouteTable 'void () noexcept' inline default
  `-Overrides: [ 0x5607a5cc5f28 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.IPRouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<20> >
         0 |   vector_memory<class sized_array_memory<20> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct IPRoute>
         0 |   class vector_memory<class sized_array_memory<20> > vm_
         0 |     vector_memory<class sized_array_memory<20> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class LinearIPLookup
         0 |   class IPRouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   class Vector<struct IPRoute> _t
       112 |     class vector_memory<class sized_array_memory<20> > vm_
       112 |       vector_memory<class sized_array_memory<20> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   int _zero_route
       132 |   class IPAddress _last_addr
       132 |     uint32_t _addr
       136 |   int _last_entry
       140 |   class IPAddress _last_addr2
       140 |     uint32_t _addr
       144 |   int _last_entry2
           | [sizeof=152, dsize=148, align=8,
           |  nvsize=148, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5607a5c477d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<20>'
|-CXXRecordDecl 0x5607a5c479a8 prev 0x5607a5c477d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5607a5c47a38 <col:46, col:52> col:46 public
|-TypedefDecl 0x5607a5c47a60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5c49630 <line:13:5, col:31> col:31 type 'typename sized_array_memory<20>::type':'char_array<20>'
| `-ElaboratedType 0x5607a5c495e0 'typename sized_array_memory<20>::type' sugar
|   `-TypedefType 0x5607a5c47f10 'sized_array_memory<20>::type' sugar
|     |-Typedef 0x5607a5c47e10 'type'
|     `-TemplateSpecializationType 0x5607a5c47da0 'char_array<20UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5607a5c47c80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|       |   `-SubstNonTypeTemplateParmExpr 0x5607a5c47c60 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5607a5c47c40 <col:24> 'unsigned long' 20
|       `-RecordType 0x5607a5c47d80 'char_array<20>'
|         `-ClassTemplateSpecialization 0x5607a5c47ca0 'char_array'
|-TypedefDecl 0x5607a5c496e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<20> >::type *'
| `-PointerType 0x5607a5c496b0 'vector_memory<sized_array_memory<20> >::type *'
|   `-TypedefType 0x5607a5c49690 'vector_memory<sized_array_memory<20> >::type' sugar
|     |-Typedef 0x5607a5c49630 'type'
|     `-ElaboratedType 0x5607a5c495e0 'typename sized_array_memory<20>::type' sugar
|       `-TypedefType 0x5607a5c47f10 'sized_array_memory<20>::type' sugar
|         |-Typedef 0x5607a5c47e10 'type'
|         `-TemplateSpecializationType 0x5607a5c47da0 'char_array<20UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5607a5c47c80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 20
|           |   `-SubstNonTypeTemplateParmExpr 0x5607a5c47c60 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5607a5c47c40 <col:24> 'unsigned long' 20
|           `-RecordType 0x5607a5c47d80 'char_array<20>'
|             `-ClassTemplateSpecialization 0x5607a5c47ca0 'char_array'
|-CXXMethodDecl 0x5607a5c49868 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<20> >::type *) const' inline
| `-ParmVarDecl 0x5607a5c49778 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXConstructorDecl 0x5607a5c49958 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5607a5c49a38 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5607a5c49d08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x5607a5c49c10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<20> > &'
|-CXXMethodDecl 0x5607a5c49f48 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5607a5c49dc0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5607a5c49e38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4a118 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5607a5c4a008 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5607a5c4a080 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4a278 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x5607a5c4a348 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<20> >::iterator ()'
|-CXXMethodDecl 0x5607a5c4a598 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5607a5c4a408 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x5607a5c4a480 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4a7f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<20> >::iterator (vector_memory<sized_array_memory<20> >::iterator, vector_memory<sized_array_memory<20> >::iterator)'
| |-ParmVarDecl 0x5607a5c4a668 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
| `-ParmVarDecl 0x5607a5c4a6e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<20> >::iterator':'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4a9b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x5607a5c4a8c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4ab78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<20> >::type *)' inline
| `-ParmVarDecl 0x5607a5c4aa80 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4ac30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5607a5c4ace0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5607a5c4af18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<20> >::type *)'
| |-ParmVarDecl 0x5607a5c4ad90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5607a5c4ae08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<20> >::type *'
|-CXXMethodDecl 0x5607a5c4b1b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<20> > &)'
| `-ParmVarDecl 0x5607a5c4b0c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<20> > &'
|-FieldDecl 0x5607a5c4b280 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<20> >::type *'
|-FieldDecl 0x5607a5c4b2d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5607a5c4b320 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5607a5ce2f28 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRoute'
|-CXXRecordDecl 0x5607a5c462e8 prev 0x5607a5ce2f28 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5607a5c47740 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRoute>::type':'sized_array_memory<20>'
| `-ElaboratedType 0x5607a5c476f0 'typename array_memory<IPRoute>::type' sugar
|   `-TypedefType 0x5607a5c476d0 'conditional<true, sized_array_memory<20>, typed_array_memory<IPRoute> >::type' sugar
|     |-Typedef 0x5607a5c47580 'type'
|     `-SubstTemplateTypeParmType 0x5607a5c473a0 'sized_array_memory<20>' sugar
|       |-TemplateTypeParmType 0x5607a5a29f30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a29ed8 'T'
|       `-RecordType 0x5607a5c46ef0 'sized_array_memory<20>'
|         `-ClassTemplateSpecialization 0x5607a5c46e10 'sized_array_memory'
|-FieldDecl 0x5607a5c4b370 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRoute>::array_memory_type>':'vector_memory<sized_array_memory<20> >' mutable
|-AccessSpecDecl 0x5607a5c4b3c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5607a5c4b3f8 <line:118:5, col:15> col:15 value_type 'IPRoute':'IPRoute'
| `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|   |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|   `-RecordType 0x5607a5cde6d0 'IPRoute'
|     `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4b4b8 <line:119:5, col:16> col:16 reference 'IPRoute &'
| `-LValueReferenceType 0x5607a5c4b480 'IPRoute &'
|   `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|     |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|     `-RecordType 0x5607a5cde6d0 'IPRoute'
|       `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4b548 <line:120:5, col:22> col:22 const_reference 'const IPRoute &'
| `-LValueReferenceType 0x5607a5c4b510 'const IPRoute &'
|   `-QualType 0x5607a5c46381 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-RecordType 0x5607a5cde6d0 'IPRoute'
|         `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4b5d8 <line:121:5, col:16> col:16 pointer 'IPRoute *'
| `-PointerType 0x5607a5c4b5a0 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|     |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|     `-RecordType 0x5607a5cde6d0 'IPRoute'
|       `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4b668 <line:122:5, col:22> col:22 const_pointer 'const IPRoute *'
| `-PointerType 0x5607a5c4b630 'const IPRoute *'
|   `-QualType 0x5607a5c46381 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-RecordType 0x5607a5cde6d0 'IPRoute'
|         `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4c4d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRoute>::type':'const IPRoute &'
| `-ElaboratedType 0x5607a5c4c480 'typename fast_argument<IPRoute>::type' sugar
|   `-TypedefType 0x5607a5c4c460 'fast_argument<IPRoute, true>::type' sugar
|     |-Typedef 0x5607a5c4c398 'type'
|     `-LValueReferenceType 0x5607a5c4c360 'const IPRoute &'
|       `-QualType 0x5607a5c4c101 'const IPRoute' const
|         `-SubstTemplateTypeParmType 0x5607a5c4c100 'IPRoute' sugar
|           |-TemplateTypeParmType 0x5607a5a34600 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5607a5a345a8 'T'
|           `-RecordType 0x5607a5cde6d0 'IPRoute'
|             `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4c538 <line:126:5, col:22> col:22 const_access_type 'const IPRoute &'
| `-LValueReferenceType 0x5607a5c4b510 'const IPRoute &'
|   `-QualType 0x5607a5c46381 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-RecordType 0x5607a5cde6d0 'IPRoute'
|         `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4c590 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5c4c5f8 <line:130:5, col:16> col:16 iterator 'IPRoute *'
| `-PointerType 0x5607a5c4b5a0 'IPRoute *'
|   `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|     |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|     `-RecordType 0x5607a5cde6d0 'IPRoute'
|       `-CXXRecord 0x5607a5cde638 'IPRoute'
|-TypedefDecl 0x5607a5c4c660 <line:131:5, col:22> col:22 const_iterator 'const IPRoute *'
| `-PointerType 0x5607a5c4b630 'const IPRoute *'
|   `-QualType 0x5607a5c46381 'const IPRoute' const
|     `-SubstTemplateTypeParmType 0x5607a5c46380 'IPRoute' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-RecordType 0x5607a5cde6d0 'IPRoute'
|         `-CXXRecord 0x5607a5cde638 'IPRoute'
|-EnumDecl 0x5607a5c4c6b8 <line:134:5> col:5
| `-EnumConstantDecl 0x5607a5c4c7b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRoute>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5607a5c4c790 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5607a5a632a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5607a5a63280 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5607a5a63260 <col:40> 'int' 1
|-CXXConstructorDecl 0x5607a5c4c838 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5607a5c4cac8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5c4c8f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5607a5c4c990 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXConstructorDecl 0x5607a5cfd450 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x5607a5c4cc70 <col:19, col:36> col:36 x 'const Vector<IPRoute> &'
|-CXXConstructorDecl 0x5607a5cfd708 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x5607a5cfd5f0 <col:19, col:31> col:31 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x5607a5cfda50 <line:144:5, col:51> col:23 operator= 'Vector<IPRoute> &(const Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x5607a5cfd930 <col:33, col:50> col:50 x 'const Vector<IPRoute> &'
|-CXXMethodDecl 0x5607a5cfdd60 <line:146:5, col:46> col:23 operator= 'Vector<IPRoute> &(Vector<IPRoute> &&)' inline
| `-ParmVarDecl 0x5607a5cfdc40 <col:33, col:45> col:45 x 'Vector<IPRoute> &&'
|-CXXMethodDecl 0x5607a5cfe050 <line:148:5, col:70> col:23 assign 'Vector<IPRoute> &(Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5cfde98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5607a5cfdf10 <col:43, col:69> col:63 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5607a5cfe1a8 <line:150:5, col:55> col:49 begin 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x5607a5cfe258 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5cfe2b0 <col:30> Inherited
|-CXXMethodDecl 0x5607a5cfe2f8 <line:151:5, col:53> col:49 end 'Vector<IPRoute>::iterator ()'
| |-NoInlineAttr 0x5607a5cfe3a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5cfe400 <col:30> Inherited
|-CXXMethodDecl 0x5607a5cfe4c8 <line:152:5, col:63> col:55 begin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5607a5cfe578 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5cfe5d0 <col:30> Inherited
|-CXXMethodDecl 0x5607a5cfe618 <line:153:5, col:61> col:55 end 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5607a5cfe6c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5cfe720 <col:30> Inherited
|-CXXMethodDecl 0x5607a5cfe768 <line:154:5, col:64> col:55 cbegin 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5607a5cfe818 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5cfe870 <col:30> Inherited
|-CXXMethodDecl 0x5607a5cfe8b8 <line:155:5, col:62> col:55 cend 'Vector<IPRoute>::const_iterator () const'
| |-NoInlineAttr 0x5607a5cfe968 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5cfe9c0 <col:30> Inherited
|-CXXMethodDecl 0x5607a5cfe9e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5607a5cfea98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5607a5cfeb48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5607a5cfed08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5cfebf8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5607a5cfec70 <col:37, col:63> col:57 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5607a5cfee58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5607a5cfedc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5cff008 <line:163:5, col:65> col:43 operator[] 'IPRoute &(Vector::size_type)'
| |-ParmVarDecl 0x5607a5cfef10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5607a5cff0c0 <col:20>
| `-OptimizeNoneAttr 0x5607a5cff118 <col:30>
|-CXXMethodDecl 0x5607a5cff238 <line:164:5, col:73> col:49 operator[] 'const IPRoute &(Vector::size_type) const'
| |-ParmVarDecl 0x5607a5cff140 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5607a5cff2f0 <col:20>
| `-OptimizeNoneAttr 0x5607a5cff348 <col:30>
|-CXXMethodDecl 0x5607a5cff400 <line:165:5, col:29> col:15 at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x5607a5cff370 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5cff548 <line:166:5, col:37> col:21 at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5607a5cff4b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5cff678 <line:167:5, col:21> col:15 front 'IPRoute &()' inline
|-CXXMethodDecl 0x5607a5cff7a8 <line:168:5, col:29> col:21 front 'const IPRoute &() const' inline
|-CXXMethodDecl 0x5607a5cff878 <line:169:5, col:20> col:15 back 'IPRoute &()' inline
|-CXXMethodDecl 0x5607a5cff948 <line:170:5, col:28> col:21 back 'const IPRoute &() const' inline
|-CXXMethodDecl 0x5607a5cffa88 <line:172:5, col:39> col:15 unchecked_at 'IPRoute &(Vector::size_type)' inline
| `-ParmVarDecl 0x5607a5cff9f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5cffbd0 <line:173:5, col:47> col:21 unchecked_at 'const IPRoute &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5607a5cffb40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5cffd18 <line:174:5, col:59> col:15 at_u 'IPRoute &(Vector::size_type)' inline
| |-ParmVarDecl 0x5607a5cffc88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5607a5cffdd0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5607a5cffed0 <line:175:5, col:71> col:21 at_u 'const IPRoute &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5607a5cffe40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5607a5cfff88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5607a5d00048 <line:177:5, col:20> col:15 data 'IPRoute *()' inline
|-CXXMethodDecl 0x5607a5d00148 <line:178:5, col:28> col:21 data 'const IPRoute *() const' inline
|-CXXMethodDecl 0x5607a5d002f8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x5607a5d00208 <col:27, col:47> col:47 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-FunctionTemplateDecl 0x5607a5d00ae8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5607a5d003b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRoute>':'fast_argument<IPRoute, true>'
| `-CXXMethodDecl 0x5607a5d00a48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRoute &&)' inline
|   `-ParmVarDecl 0x5607a5d00948 <col:58, col:62> col:62 v 'IPRoute &&'
|-CXXMethodDecl 0x5607a5d00bc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5607a5d00d18 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRoute>::value_argument_type)' inline
| `-ParmVarDecl 0x5607a5d00c88 <col:28, col:48> col:48 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5607a5d00dd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5607a5d01018 <line:189:5, col:62> col:21 insert 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5d00e90 <col:28, col:37> col:37 it 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x5607a5d00f08 <col:41, col:61> col:61 v 'Vector<IPRoute>::value_argument_type':'const IPRoute &'
|-CXXMethodDecl 0x5607a5d011d8 <line:190:5, col:38> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator)' inline
| `-ParmVarDecl 0x5607a5d010e8 <col:27, col:36> col:36 it 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x5607a5d01428 <line:191:5, col:49> col:21 erase 'Vector<IPRoute>::iterator (Vector<IPRoute>::iterator, Vector<IPRoute>::iterator)' inline
| |-ParmVarDecl 0x5607a5d012a0 <col:27, col:36> col:36 a 'Vector<IPRoute>::iterator':'IPRoute *'
| `-ParmVarDecl 0x5607a5d01318 <col:39, col:48> col:48 b 'Vector<IPRoute>::iterator':'IPRoute *'
|-CXXMethodDecl 0x5607a5d014e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5607a5d01748 <line:195:5, col:34> col:17 swap 'void (Vector<IPRoute> &)' inline
| `-ParmVarDecl 0x5607a5d01650 <col:22, col:33> col:33 x 'Vector<IPRoute> &'
`-CXXDestructorDecl 0x5607a5d01818 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5ac6c20 prev 0x5607a5a2bc58 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5607a5ac6d18 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x5607a5ac6da8 <col:19, col:25> col:19 public
|-TypedefDecl 0x5607a5ac6de0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5607a58b9530 'uninitialized_type'
|   `-CXXRecord 0x5607a58b9498 'uninitialized_type'
|-CXXConstructorDecl 0x5607a5ac6ea0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5aca698 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5607a5aca658 <col:10> 'int' 0
| `-CompoundStmt 0x5607a5aca6e0 <col:13, line:22:5>
|-CXXConstructorDecl 0x5607a5ac6ff0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x5607a5ac6f60 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5aca730 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x5607a5aca6f0 <col:10> 'unsigned int' lvalue ParmVar 0x5607a5ac6f60 'x' 'unsigned int'
| `-CompoundStmt 0x5607a5aca778 <col:13, line:27:5>
|-CXXConstructorDecl 0x5607a5ac7148 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x5607a5ac70b8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5aca7e0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5607a5aca7c8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x5607a5aca788 <col:10> 'int' lvalue ParmVar 0x5607a5ac70b8 'x' 'int'
| `-CompoundStmt 0x5607a5aca828 <col:13, line:31:5>
|-CXXConstructorDecl 0x5607a5ac72a0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5607a5ac7210 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5aca890 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5607a5aca878 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x5607a5aca838 <col:10> 'unsigned long' lvalue ParmVar 0x5607a5ac7210 'x' 'unsigned long'
| `-CompoundStmt 0x5607a5aca8d8 <col:13, line:35:5>
|-CXXConstructorDecl 0x5607a5ac73f8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x5607a5ac7368 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5aca940 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5607a5aca928 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x5607a5aca8e8 <col:10> 'long' lvalue ParmVar 0x5607a5ac7368 'x' 'long'
| `-CompoundStmt 0x5607a5aca988 <col:13, line:39:5>
|-CXXConstructorDecl 0x5607a5ac75b8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x5607a5ac74c8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5acaa08 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5607a5aca9b8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5607a59fae10
| |     `-DeclRefExpr 0x5607a5aca998 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x5607a5ac74c8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x5607a5acaa50 <col:20, line:44:5>
|-CXXConstructorDecl 0x5607a5ac7748 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x5607a5ac7680 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x5607a5acabb8 <col:51, line:56:5>
|   `-BinaryOperator 0x5607a5acab98 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x5607a5acaa70 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5607a5aca5f0
|     | `-CXXThisExpr 0x5607a5acaa60 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x5607a5acab80 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5607a5acab68 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x5607a5acab48 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x5607a5acab18 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x5607a5acab00 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x5607a5acaaa0 <col:47> 'const unsigned char *' lvalue ParmVar 0x5607a5ac7680 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x5607a5ac7898 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x5607a5ac7808 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x5607a5ac7a48 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5607a5ac7988 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5607a5acac28 <col:56, line:68:5>
|   `-CStyleCastExpr 0x5607a5acac00 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5607a5acabd0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5607a5ac7988 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5607a5ac7bd8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x5607a5ac7b10 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x5607a5ac7cc8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x5607a5acbbe8 <col:46, line:83:5>
|   `-ReturnStmt 0x5607a5acbbd8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x5607a5acbbc0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x5607a5acbb90 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5607a5acba48 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5607a5acb930 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5607a5acb818 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x5607a5acac50 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x5607a5ac7db8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x5607a5acbc98 <col:31, line:88:5>
|   `-ReturnStmt 0x5607a5acbc88 <line:87:2, col:10>
|     `-UnaryOperator 0x5607a5acbc70 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x5607a5acbc58 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x5607a5acbc40 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5607a5acbc10 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5607a5aca5f0
|             `-CXXThisExpr 0x5607a5acbc00 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5607a5ac7e78 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5607a5acbd18 <col:34, line:93:5>
|   `-ReturnStmt 0x5607a5acbd08 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5607a5acbcf0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5607a5acbcc0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5607a5aca5f0
|         `-CXXThisExpr 0x5607a5acbcb0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x5607a5ac7f48 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x5607a5acbd98 <col:38, line:101:5>
|   `-ReturnStmt 0x5607a5acbd88 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x5607a5acbd70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5607a5acbd40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5607a5aca5f0
|         `-CXXThisExpr 0x5607a5acbd30 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5607a5ac8018 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5607a5acc068 <col:38, line:108:5>
|   `-ReturnStmt 0x5607a5acc058 <line:107:2, col:58>
|     `-BinaryOperator 0x5607a5acc038 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x5607a5acbf50 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x5607a5acbf30 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5607a5acbf18 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5607a5acbdc0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5607a5aca5f0
|       |   |   `-CXXThisExpr 0x5607a5acbdb0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5607a5acbef0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5607a5acbed8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5607a5acbe58 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5607a5a08f48 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5607a5acbe38 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5607a5acc010 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5607a5acbff8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5607a5acbfd8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x5607a5a08f48 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5607a5acbfb8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5607a5ac80d8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5607a5acc2d8 <col:39, line:112:5>
|   `-ReturnStmt 0x5607a5acc2c8 <line:111:2, col:56>
|     `-BinaryOperator 0x5607a5acc2a8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5607a5acc1c0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x5607a5acc1a0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5607a5acc188 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5607a5acc090 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5607a5aca5f0
|       |   |   `-CXXThisExpr 0x5607a5acc080 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5607a5acc160 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5607a5acc148 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5607a5acc128 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5607a5a08f48 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5607a5acc108 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x5607a5acc280 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5607a5acc268 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5607a5acc248 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x5607a5a08f48 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5607a5acc228 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5607a5ac8208 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5607a5ac8310 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5607a5ac8420 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5607a5ac94e8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5607a5ac95a8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5ac9670 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5607a5ac9868 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x5607a5ac9720 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x5607a5ac9798 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x5607a5ac99e8 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5607a5ac9928 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x5607a5ac9b30 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5607a5ac9aa0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5607a5ac9cd8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5607a5ac9be8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5607a5ac9e20 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5607a5ac9d90 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5607a5ac9f68 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5607a5ac9ed8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5607a5aca030 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5607a5aca0f0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x5607a5aca268 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x5607a5aca1a0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x5607a5aca330 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5607a5aca418 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5607a5aca4c0 <col:51> "" ""
|-TypedefDecl 0x5607a5aca560 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x5607a5a2bcf0 'IPAddress'
|   `-CXXRecord 0x5607a5ac6c20 'IPAddress'
|-AccessSpecDecl 0x5607a5aca5b8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5607a5aca5f0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5607a5acac98 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x5607a5acada8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5cdfd78 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5607a5cdfd30 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x5607a5aca5f0
| |     `-DeclRefExpr 0x5607a5cdfd10 <col:7> 'const IPAddress' lvalue ParmVar 0x5607a5acada8 '' 'const IPAddress &'
| `-CompoundStmt 0x5607a5cdfdc0 <col:7>
|-CXXConstructorDecl 0x5607a5acae48 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5607a5acaf58 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5607a5aca5f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5607a5acbb38 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5607a5acbaf0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5607a5aca5f0
| |     `-CXXStaticCastExpr 0x5607a5acbac0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x5607a5acba90 <col:7> 'IPAddress' lvalue ParmVar 0x5607a5acaf58 '' 'IPAddress &&'
| `-CompoundStmt 0x5607a5acbb80 <col:7>
|-CXXDestructorDecl 0x5607a5acb848 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5607a5ce01c0 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x5607a5ce01c0
| `-ParmVarDecl 0x5607a5ce02c8 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x5607a5ce0338 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5607a5ce0448 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x5607a5ce06b0 <col:7>
    |-BinaryOperator 0x5607a5ce0658 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x5607a5ce0610 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x5607a5aca5f0
    | | `-CXXThisExpr 0x5607a5ce0600 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x5607a5ce0640 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x5607a5ce05d0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5607a5aca5f0
    |     `-CXXStaticCastExpr 0x5607a5ce05a0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x5607a5ce0570 <col:7> 'IPAddress' lvalue ParmVar 0x5607a5ce0448 '' 'IPAddress &&'
    `-ReturnStmt 0x5607a5ce06a0 <col:7>
      `-UnaryOperator 0x5607a5ce0688 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5607a5ce0678 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5c44f18 <../elements/ip/lineariplookup.hh:82:1, line:117:1> line:82:7 referenced class LinearIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'IPRouteTable'
|-CXXRecordDecl 0x5607a5c45078 <col:1, col:7> col:7 implicit referenced class LinearIPLookup
|-AccessSpecDecl 0x5607a5c45108 <col:46, col:52> col:46 public
|-CXXConstructorDecl 0x5607a5c45190 <line:84:5, col:20> col:5 used LinearIPLookup 'void ()'
|-CXXDestructorDecl 0x5607a5c45280 <line:85:5, col:21> col:5 used ~LinearIPLookup 'void () noexcept'
| `-Overrides: [ 0x5607a5ce3a70 IPRouteTable::~IPRouteTable 'void () noexcept' ]
|-CXXMethodDecl 0x5607a5c453b0 <line:87:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5607a5cc7388 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5607a5d02078 <col:36, col:63>
|   `-ReturnStmt 0x5607a5d02068 <col:38, col:45>
|     `-ImplicitCastExpr 0x5607a5d02050 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5607a5d02028 <col:45> 'const char [15]' lvalue "LinearIPLookup"
|-CXXMethodDecl 0x5607a5c45478 <line:88:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x5607a5cc7450 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5607a5d020d8 <col:36, col:52>
|   `-ReturnStmt 0x5607a5d020c8 <col:38, col:45>
|     `-ImplicitCastExpr 0x5607a5d020b0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5607a5d02090 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x5607a5c45540 <line:89:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x5607a5cc7818 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x5607a5d02138 <col:36, col:51>
|   `-ReturnStmt 0x5607a5d02128 <col:38, col:45>
|     `-ImplicitCastExpr 0x5607a5d02110 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5607a5d020f0 <col:45> 'const char []' lvalue Var 0x5607a5cc7960 'PUSH' 'const char []'
|-CXXMethodDecl 0x5607a5c45688 <line:91:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x5607a5cc8e70 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5607a5c455f0 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5c45858 <line:93:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5607a5ce1d70 IPRouteTable::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5607a5c45748 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5607a5c457c0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5607a5c45b30 <line:95:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5607a5ce15b0 IPRouteTable::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5607a5c45918 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x5607a5c45990 <col:35> col:39 'bool'
| |-ParmVarDecl 0x5607a5c45a08 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x5607a5c45a80 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5c45d98 <line:96:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5607a5ce1860 IPRouteTable::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5607a5c45c00 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x5607a5c45c78 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x5607a5c45cf0 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5c45f78 <line:97:5, col:45> col:9 lookup_route 'int (IPAddress, IPAddress &) const'
| |-Overrides: [ 0x5607a5ce1ab0 IPRouteTable::lookup_route 'int (IPAddress, IPAddress &) const' ]
| |-ParmVarDecl 0x5607a5c45e60 <col:22> col:31 'IPAddress'
| `-ParmVarDecl 0x5607a5c45ed8 <col:33, col:42> col:43 'IPAddress &'
|-CXXMethodDecl 0x5607a5c46048 <line:98:5, col:24> col:12 dump_routes 'String ()'
| `-Overrides: [ 0x5607a5ce1ba8 IPRouteTable::dump_routes 'String ()' ]
|-CXXMethodDecl 0x5607a5c46108 <line:100:5, col:18> col:10 check 'bool () const'
|-AccessSpecDecl 0x5607a5c461a8 <line:102:3, col:12> col:3 protected
|-FieldDecl 0x5607a5d01900 <line:104:5, col:21> col:21 _t 'Vector<IPRoute>':'Vector<IPRoute>'
|-FieldDecl 0x5607a5d01968 <line:105:5, col:9> col:9 _zero_route 'int'
|-FieldDecl 0x5607a5d019c8 <line:107:5, col:15> col:15 _last_addr 'IPAddress'
|-FieldDecl 0x5607a5d01a30 <line:108:5, col:9> col:9 _last_entry 'int'
|-FieldDecl 0x5607a5d01a90 <line:111:5, col:15> col:15 _last_addr2 'IPAddress'
|-FieldDecl 0x5607a5d01af8 <line:112:5, col:9> col:9 _last_entry2 'int'
|-CXXMethodDecl 0x5607a5d01c20 <line:115:5, col:33> col:9 lookup_entry 'int (IPAddress) const'
| `-ParmVarDecl 0x5607a5d01b58 <col:22> col:31 'IPAddress'
|-CXXConstructorDecl 0x5607a5d01cf8 <line:82:7> col:7 implicit LinearIPLookup 'void (const LinearIPLookup &)' inline default_delete noexcept-unevaluated 0x5607a5d01cf8
| `-ParmVarDecl 0x5607a5d01e08 <col:7> col:7 'const LinearIPLookup &'
`-CXXMethodDecl 0x5607a5d01ea8 <col:7> col:7 implicit operator= 'LinearIPLookup &(const LinearIPLookup &)' inline default_delete noexcept-unevaluated 0x5607a5d01ea8
  `-ParmVarDecl 0x5607a5d01fb8 <col:7> col:7 'const LinearIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.LinearIPLookup = type <{ %class.IPRouteTable.base, [4 x i8], %class.Vector, i32, %class.IPAddress, i32, %class.IPAddress, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.LinearIPLookup.base = type <{ %class.IPRouteTable.base, [4 x i8], %class.Vector, i32, %class.IPAddress, i32, %class.IPAddress, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SortedIPLookup
         0 |   class LinearIPLookup (primary base)
         0 |     class IPRouteTable (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       112 |     class Vector<struct IPRoute> _t
       112 |       class vector_memory<class sized_array_memory<20> > vm_
       112 |         vector_memory<class sized_array_memory<20> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |     int _zero_route
       132 |     class IPAddress _last_addr
       132 |       uint32_t _addr
       136 |     int _last_entry
       140 |     class IPAddress _last_addr2
       140 |       uint32_t _addr
       144 |     int _last_entry2
           | [sizeof=152, dsize=148, align=8,
           |  nvsize=148, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5d02150 <../elements/ip/sortediplookup.hh:26:1, line:46:1> line:26:7 class SortedIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'LinearIPLookup'
|-CXXRecordDecl 0x5607a5d022a8 <col:1, col:7> col:7 implicit referenced class SortedIPLookup
|-AccessSpecDecl 0x5607a5d02338 <col:48, col:54> col:48 public
|-CXXConstructorDecl 0x5607a5d023c0 <line:28:5, col:20> col:5 SortedIPLookup 'void ()'
|-CXXDestructorDecl 0x5607a5d024b0 <line:29:5, col:21> col:5 ~SortedIPLookup 'void ()' noexcept-unevaluated 0x5607a5d024b0
| `-Overrides: [ 0x5607a5c45280 LinearIPLookup::~LinearIPLookup 'void () noexcept' ]
|-CXXMethodDecl 0x5607a5d025e0 <line:31:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x5607a5c453b0 LinearIPLookup::class_name 'const char *() const' ]
| `-CompoundStmt 0x5607a5d03728 <col:36, col:63>
|   `-ReturnStmt 0x5607a5d03718 <col:38, col:45>
|     `-ImplicitCastExpr 0x5607a5d03700 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5607a5d036d8 <col:45> 'const char [15]' lvalue "SortedIPLookup"
|-CXXMethodDecl 0x5607a5d028b0 <line:32:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5607a5ce11d0 IPRouteTable::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5607a5d02760 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x5607a5d027d8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5d02a88 <line:34:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x5607a5c45858 LinearIPLookup::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5607a5d02978 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x5607a5d029f0 <col:25, col:33> col:33 p 'Packet *'
|-CXXMethodDecl 0x5607a5d02d60 <line:36:5, col:65> col:9 add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5607a5c45b30 LinearIPLookup::add_route 'int (const IPRoute &, bool, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5607a5d02b48 <col:19, col:32> col:33 'const IPRoute &'
| |-ParmVarDecl 0x5607a5d02bc0 <col:35> col:39 'bool'
| |-ParmVarDecl 0x5607a5d02c38 <col:41, col:48> col:49 'IPRoute *'
| `-ParmVarDecl 0x5607a5d02cb0 <col:51, col:64> col:65 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5d02fc8 <line:37:5, col:62> col:9 remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)'
| |-Overrides: [ 0x5607a5c45d98 LinearIPLookup::remove_route 'int (const IPRoute &, IPRoute *, ErrorHandler *)' ]
| |-ParmVarDecl 0x5607a5d02e30 <col:22, col:35> col:36 'const IPRoute &'
| |-ParmVarDecl 0x5607a5d02ea8 <col:38, col:45> col:46 'IPRoute *'
| `-ParmVarDecl 0x5607a5d02f20 <col:48, col:61> col:62 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5d030a0 <line:39:5, col:18> col:10 check 'bool () const'
|-AccessSpecDecl 0x5607a5d03140 <line:41:3, col:12> col:3 protected
|-CXXMethodDecl 0x5607a5d03210 <line:43:5, col:40> col:16 lookup_entry 'int (IPAddress) const' inline
| `-ParmVarDecl 0x5607a5d03178 <col:29> col:38 'IPAddress'
|-CXXMethodDecl 0x5607a5d032d8 <line:44:5, col:21> col:10 sort_table 'void ()'
|-CXXConstructorDecl 0x5607a5d033a8 <line:26:7> col:7 implicit SortedIPLookup 'void (const SortedIPLookup &)' inline default_delete noexcept-unevaluated 0x5607a5d033a8
| `-ParmVarDecl 0x5607a5d034b8 <col:7> col:7 'const SortedIPLookup &'
`-CXXMethodDecl 0x5607a5d03558 <col:7> col:7 implicit operator= 'SortedIPLookup &(const SortedIPLookup &)' inline default_delete noexcept-unevaluated 0x5607a5d03558
  `-ParmVarDecl 0x5607a5d03668 <col:7> col:7 'const SortedIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.SortedIPLookup = type { %class.LinearIPLookup.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.SortedIPLookup.base = type { %class.LinearIPLookup.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5d21ee8 prev 0x5607a5cc5a60 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5607a5d21fe0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5607a5d22070 <col:22, col:28> col:22 public
|-EnumDecl 0x5607a5d22098 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5607a5d221b8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d22198 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5607a5d22180 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5607a5d22160 <col:14> 'int' 999
| |-EnumConstantDecl 0x5607a5d22260 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d22240 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5607a5d22228 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5607a5d22208 <col:14> 'int' 1
| |-EnumConstantDecl 0x5607a5d222f0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d222d0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5607a5d222b0 <col:17> 'int' 0
| |-EnumConstantDecl 0x5607a5d22380 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d22360 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5607a5d22340 <col:13> 'int' 1
| |-EnumConstantDecl 0x5607a5d22410 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d223f0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5607a5d223d0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5607a5d224a0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d22480 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5607a5d22460 <col:13> 'int' 3
| |-EnumConstantDecl 0x5607a5d22530 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d22510 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5607a5d224f0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5607a5d225c0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d225a0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5607a5d22580 <col:14> 'int' 5
| |-EnumConstantDecl 0x5607a5d22650 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5607a5d22630 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5607a5d22610 <col:12> 'int' 6
| `-EnumConstantDecl 0x5607a5d226e0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5607a5d226c0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5607a5d226a0 <col:13> 'int' 7
|-VarDecl 0x5607a5d22750 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5607a5d227d8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5607a5d22860 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5607a5d228e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5607a5d22970 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5607a5d229f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5607a5d22af0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5607a5d22b78 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5607a5d22c00 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5607a5d22c88 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5607a5d22d10 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5607a5d22e10 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5607a5d281f8 '_nerrors' 'int'
| | `-IntegerLiteral 0x5607a5d28988 <line:128:13> 'int' 0
| `-CompoundStmt 0x5607a5d289f8 <col:16, line:129:5>
|-CXXDestructorDecl 0x5607a5d22f00 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5607a5d28a08 <col:29, line:132:5>
|-CXXMethodDecl 0x5607a5d230b8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5607a5d22ff0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5d23180 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5607a5d23268 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5607a5d28a60 <col:44, line:161:5>
|   `-ReturnStmt 0x5607a5d28a50 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5607a5d28a38 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5d28a18 <col:9> 'ErrorHandler *' lvalue Var 0x5607a5d28258 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5d233d8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5607a5d23318 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5607a5d234a0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5607a5d28ac0 <col:43, line:173:5>
|   `-ReturnStmt 0x5607a5d28ab0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5607a5d28a98 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5d28a78 <col:9> 'ErrorHandler *' lvalue Var 0x5607a5d282d0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5607a5d23558 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5607a5d235d8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5607a5d236e8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5607a5d23658 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d23838 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5607a5d237a8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d23990 <line:193:5, col:37> col:9 used warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5607a5d238f8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d23ae8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5607a5d23a50 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d23c40 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5607a5d23ba8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d23e50 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5607a5d23cf8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5607a5d23d78 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d24028 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5607a5d23f10 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5607a5d23f90 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d24248 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5607a5d240e8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5607a5d24168 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d24428 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5607a5d24308 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5607a5d24388 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d24608 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5607a5d244e8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5607a5d24568 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d24790 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5607a5d246c8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5607a5d24960 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5607a5d24848 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5607a5d248c0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5607a5d28d18 <col:57, line:234:5>
|   `-ReturnStmt 0x5607a5d28d08 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5607a5d28cf0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5607a5d28c98 <col:9, col:41> 'int'
|         |-MemberExpr 0x5607a5d28c68 <col:9> '<bound member function type>' ->xmessage 0x5607a5d24790
|         | `-CXXThisExpr 0x5607a5d28c58 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5607a5d28cd8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5607a5d28cc0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5607a5d28c38 <col:18, col:40> 'String' (CXXTemporary 0x5607a5d28c38)
|               `-CallExpr 0x5607a5d28c00 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5607a5d28be8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5607a5d28b60 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5607a5d269e8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5607a5d28b80 <col:31> 'const String' lvalue ParmVar 0x5607a5d248c0 'str' 'const String &'
|                 `-DeclRefExpr 0x5607a5d28ba0 <col:36> 'const String' lvalue ParmVar 0x5607a5d24848 'anno' 'const String &'
|-CXXMethodDecl 0x5607a5d24ca0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5607a5d24a20 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5607a5d24aa0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5607a5d24b70 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5607a5d28fa8 <col:68, line:243:5>
|   `-ReturnStmt 0x5607a5d28f98 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5607a5d28f80 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5607a5d28f20 <col:9, col:41> 'int'
|         |-MemberExpr 0x5607a5d28ef0 <col:9> '<bound member function type>' ->xmessage 0x5607a5d24960
|         | `-CXXThisExpr 0x5607a5d28ee0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5607a5d28db8 <col:18> 'const String' lvalue ParmVar 0x5607a5d24a20 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5607a5d28f68 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5607a5d28f50 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5607a5d28ec0 <col:24, col:40> 'String' (CXXTemporary 0x5607a5d28ec0)
|               `-CXXMemberCallExpr 0x5607a5d28e58 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5607a5d28de8 <col:24> '<bound member function type>' ->vformat 0x5607a5d25e80
|                 | `-CXXThisExpr 0x5607a5d28dd8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5607a5d28e88 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5607a5d28e18 <col:32> 'const char *' lvalue ParmVar 0x5607a5d24aa0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5607a5d28ea0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5607a5d28e38 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5607a5d24b70 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5607a5d24f40 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5607a5d24d68 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5607a5d24de0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5607a5d24e58 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5607a5d292e8 <col:23, line:254:5>
|   `-ReturnStmt 0x5607a5d292d8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5607a5d292c0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5607a5d29260 <col:9, col:71> 'int'
|         |-MemberExpr 0x5607a5d29230 <col:9> '<bound member function type>' ->xmessage 0x5607a5d24960
|         | `-CXXThisExpr 0x5607a5d29220 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5607a5d292a8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5607a5d29290 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5607a5d291e0 <col:18, col:65> 'String' (CXXTemporary 0x5607a5d291e0)
|         |     `-CallExpr 0x5607a5d29178 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5607a5d29160 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5607a5d29048 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5607a5d269e8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5607a5d29068 <col:31> 'const String' lvalue ParmVar 0x5607a5d24de0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5607a5d291c0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5607a5d291a8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5607a5d29140 <col:37, col:64> 'String' (CXXTemporary 0x5607a5d29140)
|         |             `-CallExpr 0x5607a5d29110 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5607a5d290f8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5607a5d29088 <col:37> 'String (const String &)' lvalue CXXMethod 0x5607a5d27038 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5607a5d290a8 <col:56> 'const String' lvalue ParmVar 0x5607a5d24d68 'landmark' 'const String &'
|         `-DeclRefExpr 0x5607a5d29200 <col:68> 'const String' lvalue ParmVar 0x5607a5d24e58 'str' 'const String &'
|-CXXMethodDecl 0x5607a5d252c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5607a5d25008 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5607a5d25080 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5607a5d25100 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5607a5d25178 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5607a5d295a0 <col:34, line:267:5>
|   `-ReturnStmt 0x5607a5d29590 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5607a5d29578 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5607a5d29510 <col:9, col:51> 'int'
|         |-MemberExpr 0x5607a5d294e0 <col:9> '<bound member function type>' ->xmessage 0x5607a5d24f40
|         | `-CXXThisExpr 0x5607a5d294d0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5607a5d29388 <col:18> 'const String' lvalue ParmVar 0x5607a5d25008 'landmark' 'const String &'
|         |-DeclRefExpr 0x5607a5d293a8 <col:28> 'const String' lvalue ParmVar 0x5607a5d25080 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5607a5d29560 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5607a5d29548 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5607a5d294b0 <col:34, col:50> 'String' (CXXTemporary 0x5607a5d294b0)
|               `-CXXMemberCallExpr 0x5607a5d29448 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5607a5d293d8 <col:34> '<bound member function type>' ->vformat 0x5607a5d25e80
|                 | `-CXXThisExpr 0x5607a5d293c8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5607a5d29478 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5607a5d29408 <col:42> 'const char *' lvalue ParmVar 0x5607a5d25100 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5607a5d29490 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5607a5d29428 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5607a5d25178 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5607a5d253d0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5607a5d29620 <col:25, line:288:5>
|   `-ReturnStmt 0x5607a5d29610 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5607a5d295f8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5607a5d295c8 <col:9> 'const int' lvalue ->_nerrors 0x5607a5d281f8
|         `-CXXThisExpr 0x5607a5d295b8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5607a5d255e0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5607a5d25488 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5607a5d25508 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d258c8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5607a5d256a8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5607a5d25728 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5607a5d257a0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5607a5d25a60 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5607a5d25998 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d25ca8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5607a5d25b20 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5607a5d25b98 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5607a5d29880 <col:58, line:357:5>
|   `-ReturnStmt 0x5607a5d29870 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5607a5d29858 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5607a5d29828 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5607a5d29810 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5607a5d297f0 <col:9, col:29> 'String' (CXXTemporary 0x5607a5d297f0)
|             `-CallExpr 0x5607a5d29780 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5607a5d29768 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5607a5d296e8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5607a5d258c8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5607a5d29688 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5607a5d297b8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5607a5d296a8 <col:21> 'const char *' lvalue ParmVar 0x5607a5d25b20 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5607a5d297d0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5607a5d296c8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5607a5d25b98 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5607a5d25e80 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5607a5d25d70 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5607a5d25de8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5607a5d25fd8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5607a5d25f48 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5607a5d26158 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5607a5d26090 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5607a5d263f0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5607a5d26210 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5607a5d26290 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5607a5d26308 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5607a5d26550 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5607a5d264c0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5607a5d29998 <col:37, line:441:5>
|   `-IfStmt 0x5607a5d29980 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5607a5d29908 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5607a5d298d8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5607a5d29898 <col:6> 'int' lvalue ParmVar 0x5607a5d264c0 'level' 'int'
|     | `-ImplicitCastExpr 0x5607a5d298f0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5607a5d298b8 <col:15> 'ErrorHandler::Level' EnumConstant 0x5607a5d224a0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5607a5d29968 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5607a5d29938 <col:8> 'int' lvalue ->_nerrors 0x5607a5d281f8
|         `-CXXThisExpr 0x5607a5d29928 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5607a5d26618 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5607a5d29a30 <col:26, line:448:5>
|   `-BinaryOperator 0x5607a5d29a10 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5607a5d299c0 <col:2> 'int' lvalue ->_nerrors 0x5607a5d281f8
|     | `-CXXThisExpr 0x5607a5d299b0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5607a5d299f0 <col:13> 'int' 0
|-CXXMethodDecl 0x5607a5d267e0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5607a5d266d0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5607a5d26748 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5607a5d269e8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5607a5d268a0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5607a5d26918 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5607a5d26c98 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5607a5d26aa8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5607a5d26b28 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5607a5d26ba8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5607a5d26d50 <col:59> 0 0
|-CXXMethodDecl 0x5607a5d26ee8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5607a5d26dc8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5607a5d26e48 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5607a5d2a0a0 <col:70, line:534:5>
|   |-DeclStmt 0x5607a5d29ba0 <line:528:2, col:20>
|   | |-VarDecl 0x5607a5d29a58 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5607a5d29ac0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5607a5d29af8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5607a5d29b60 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5607a5d29c70 <line:529:2, col:23>
|   | `-VarDecl 0x5607a5d29bd0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5607a5d29c58 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5607a5d29c38 <col:18> 'const char *' lvalue ParmVar 0x5607a5d26dc8 'begin' 'const char *'
|   |-DoStmt 0x5607a5d2a038 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5607a5d29f68 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5607a5d29f50 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5607a5d29f30 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5607a5d29c88 <col:6> 'const char *' lvalue Var 0x5607a5d29bd0 'x' 'const char *'
|   | |     `-CallExpr 0x5607a5d29e80 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5607a5d29e68 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5607a5d29e20 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5607a5d286d0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5607a5d29ee8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5607a5d29ed0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5607a5d29d40 <col:20, col:27> 'String' (CXXTemporary 0x5607a5d29d40)
|   | |       |     `-CXXTemporaryObjectExpr 0x5607a5d29d08 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5607a5d29f00 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5607a5d29d60 <col:30> 'const char *' lvalue Var 0x5607a5d29bd0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5607a5d29f18 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5607a5d29d80 <col:33> 'const char *' lvalue ParmVar 0x5607a5d26e48 'end' 'const char *'
|   | |       |-UnaryOperator 0x5607a5d29dc0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5607a5d29da0 <col:39> 'String' lvalue Var 0x5607a5d29a58 'name' 'String'
|   | |       |-UnaryOperator 0x5607a5d29df8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5607a5d29dd8 <col:46> 'String' lvalue Var 0x5607a5d29af8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5607a5d29e10 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5607a5d2a020 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5607a5d2a008 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5607a5d29fe8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5607a5d29fb8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5607a5a94858
|   |         `-ImplicitCastExpr 0x5607a5d29fa0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5607a5d29f80 <col:11> 'String' lvalue Var 0x5607a5d29a58 'name' 'String'
|   `-ReturnStmt 0x5607a5d2a090 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5607a5d2a078 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5d2a058 <col:9> 'const char *' lvalue Var 0x5607a5d29bd0 'x' 'const char *'
|-CXXMethodDecl 0x5607a5d27038 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5607a5d26fa8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5607a5d2a6a8 <col:55, line:550:5>
|   `-IfStmt 0x5607a5d2a680 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5607a5d2a2e0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5607a5d2a2c8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5607a5d2a2b0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5607a5d2a290 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5607a5d2a260 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5607a5a94858
|     | |       `-DeclRefExpr 0x5607a5d2a100 <col:6> 'const String' lvalue ParmVar 0x5607a5d26fa8 'x' 'const String &'
|     | `-BinaryOperator 0x5607a5d2a240 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5607a5d2a210 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5607a5d2a1c0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5607a5d2a1a8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5607a5d2a160 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5607a5aae090 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5607a5d2a120 <col:11> 'const String' lvalue ParmVar 0x5607a5d26fa8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5607a5d2a140 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5607a5d2a228 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5607a5d2a1f8 <col:19> 'char' 123
|     |-ReturnStmt 0x5607a5d2a350 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5607a5d2a320 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5607a5d2a300 <col:13> 'const String' lvalue ParmVar 0x5607a5d26fa8 'x' 'const String &'
|     `-IfStmt 0x5607a5d2a658 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5607a5d2a3e8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5607a5d2a3d0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5607a5d2a3b0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5607a5d2a380 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5607a5a94858
|       |       `-DeclRefExpr 0x5607a5d2a360 <col:11> 'const String' lvalue ParmVar 0x5607a5d26fa8 'x' 'const String &'
|       |-ReturnStmt 0x5607a5d2a570 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5607a5d2a558 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5607a5d2a528 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5607a5d2a510 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5607a5d2a4f0 <col:13, col:29> 'String' (CXXTemporary 0x5607a5d2a4f0)
|       |         `-CallExpr 0x5607a5d2a4a0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5607a5d2a488 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5607a5d2a400 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5607a5d267e0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5607a5d2a4d0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5607a5d2a420 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5607a5d2a440 <col:28> 'const String' lvalue ParmVar 0x5607a5d26fa8 'x' 'const String &'
|       `-ReturnStmt 0x5607a5d2a648 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5607a5d2a630 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5607a5d2a600 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5607a5d2a5e8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5607a5d2a5c8 <col:13, col:20> 'String' (CXXTemporary 0x5607a5d2a5c8)
|                 `-CXXTemporaryObjectExpr 0x5607a5d2a590 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5607a5d27238 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5607a5d270f0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5607a5d27168 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5607a5d28978 <col:71> 'bool' false
|-CXXRecordDecl 0x5607a5d272e8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5607a5d275e8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5607a5d27580 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5607a5d27520 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5607a5d274e0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5607a5a910f0 'String'
|       | `-CXXRecord 0x5607a5a91060 'String'
|       |-BuiltinType 0x5607a5765580 'int'
|       `-DecayedType 0x5607a5d24b40 '__va_list_tag *' sugar
|         |-TypedefType 0x5607a5d24b10 'va_list' sugar
|         | |-Typedef 0x5607a59821a0 'va_list'
|         | `-TypedefType 0x5607a5982150 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5607a58b9d78 '__gnuc_va_list'
|         |   `-TypedefType 0x5607a58b9ce0 '__builtin_va_list' sugar
|         |     |-Typedef 0x5607a57a6d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5607a57a6ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5607a57662d0 '__va_list_tag'
|         |         `-CXXRecord 0x5607a5766238 '__va_list_tag'
|         `-PointerType 0x5607a5987a40 '__va_list_tag *'
|           `-RecordType 0x5607a57662d0 '__va_list_tag'
|             `-CXXRecord 0x5607a5766238 '__va_list_tag'
|-EnumDecl 0x5607a5d27640 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5607a5d27740 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27ca0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d27720 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5607a5d27700 <col:16> 'int' 1
| |-EnumConstantDecl 0x5607a5d277d0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27cb8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d277b0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5607a5d27790 <col:21> 'int' 2
| |-EnumConstantDecl 0x5607a5d27860 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27cd0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d27840 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5607a5d27820 <col:22> 'int' 4
| |-EnumConstantDecl 0x5607a5d278f0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27ce8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d278d0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5607a5d278b0 <col:17> 'int' 8
| |-EnumConstantDecl 0x5607a5d27980 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27d00 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d27960 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5607a5d27940 <col:22> 'int' 16
| |-EnumConstantDecl 0x5607a5d27a10 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27d18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d279f0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5607a5d279d0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5607a5d27aa0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27d30 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d27a80 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5607a5d27a60 <col:17> 'int' 64
| |-EnumConstantDecl 0x5607a5d27b30 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27d48 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d27b10 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5607a5d27af0 <col:14> 'int' 128
| |-EnumConstantDecl 0x5607a5d27bc0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5607a5d27d60 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5d27ba0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5607a5d27b80 <col:16> 'int' 256
| `-EnumConstantDecl 0x5607a5d27c50 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5607a5d27d78 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5d27c30 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5607a5d27c10 <col:12> 'int' 1024
|-CXXMethodDecl 0x5607a5d27f88 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5607a5d27da0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5607a5d27e40 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5607a5d28110 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5607a5d28048 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5607a5d281b8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5607a5d281f8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5607a5d28258 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5607a5d282d0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5607a5d286d0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5607a5d28348 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5607a5d283c8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5607a5d28448 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5607a5d284c0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5607a5d28538 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5607a5d285b0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5607a5d287f8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5607a5d287f8
| `-ParmVarDecl 0x5607a5d28908 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5607a5d2aa08 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5607a5d2aa08
  `-ParmVarDecl 0x5607a5d2ec28 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5cde638 <../elements/ip/iproutetable.hh:163:1, line:186:1> line:163:8 referenced struct IPRoute definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5607a5cde758 <col:1, col:8> col:8 implicit referenced struct IPRoute
|-FieldDecl 0x5607a5cde7f8 <line:164:5, col:15> col:15 referenced addr 'IPAddress'
|-FieldDecl 0x5607a5cde858 <line:165:5, col:15> col:15 referenced mask 'IPAddress'
|-FieldDecl 0x5607a5cde8b8 <line:166:5, col:15> col:15 referenced gw 'IPAddress'
|-FieldDecl 0x5607a5cde918 <line:167:5, col:13> col:13 referenced port 'int32_t':'int'
|-FieldDecl 0x5607a5cde978 <line:168:5, col:13> col:13 referenced extra 'int32_t':'int'
|-CXXConstructorDecl 0x5607a5cdea30 <line:170:5, col:28> col:5 IPRoute 'void ()'
| |-CXXCtorInitializer Field 0x5607a5cde7f8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x5607a5cdfb60 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5607a5cde858 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x5607a5cdfbb0 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5607a5cde8b8 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x5607a5cdfc00 <col:5> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x5607a5cde918 'port' 'int32_t':'int'
| | `-UnaryOperator 0x5607a5cdfb00 <col:22, col:23> 'int' prefix '-'
| |   `-IntegerLiteral 0x5607a5cdfae0 <col:23> 'int' 1
| `-CompoundStmt 0x5607a5cdfc70 <col:26, col:28>
|-CXXConstructorDecl 0x5607a5cded48 <line:171:5, line:172:42> line:171:5 IPRoute 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x5607a5cdeae8 <col:13, col:23> col:23 used a 'IPAddress'
| |-ParmVarDecl 0x5607a5cdeb60 <col:26, col:36> col:36 used m 'IPAddress'
| |-ParmVarDecl 0x5607a5cdebd8 <col:39, col:49> col:49 used g 'IPAddress'
| |-ParmVarDecl 0x5607a5cdec58 <col:52, col:56> col:56 used p 'int'
| |-CXXCtorInitializer Field 0x5607a5cde7f8 'addr' 'IPAddress'
| | `-CXXConstructExpr 0x5607a5cdfdd0 <line:172:7, col:13> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5607a5cdfcc0 <col:12> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5607a5cdfc80 <col:12> 'IPAddress' lvalue ParmVar 0x5607a5cdeae8 'a' 'IPAddress'
| |-CXXCtorInitializer Field 0x5607a5cde858 'mask' 'IPAddress'
| | `-CXXConstructExpr 0x5607a5cdfe80 <col:16, col:22> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5607a5cdfe68 <col:21> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5607a5cdfe28 <col:21> 'IPAddress' lvalue ParmVar 0x5607a5cdeb60 'm' 'IPAddress'
| |-CXXCtorInitializer Field 0x5607a5cde8b8 'gw' 'IPAddress'
| | `-CXXConstructExpr 0x5607a5cdff30 <col:25, col:29> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x5607a5cdff18 <col:28> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x5607a5cdfed8 <col:28> 'IPAddress' lvalue ParmVar 0x5607a5cdebd8 'g' 'IPAddress'
| |-CXXCtorInitializer Field 0x5607a5cde918 'port' 'int32_t':'int'
| | `-ImplicitCastExpr 0x5607a5cdffc8 <col:37> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x5607a5cdff88 <col:37> 'int' lvalue ParmVar 0x5607a5cdec58 'p' 'int'
| `-CompoundStmt 0x5607a5ce0028 <col:40, col:42>
|-CXXMethodDecl 0x5607a5cdee58 <line:174:5, col:69> col:17 real 'bool () const' inline
| `-CompoundStmt 0x5607a5ce0148 <col:30, col:69>
|   `-ReturnStmt 0x5607a5ce0138 <col:32, col:57>
|     `-BinaryOperator 0x5607a5ce0118 <col:39, col:57> 'bool' '>'
|       |-ImplicitCastExpr 0x5607a5ce0100 <col:39> 'int32_t':'int' <LValueToRValue>
|       | `-MemberExpr 0x5607a5ce0048 <col:39> 'const int32_t':'const int' lvalue ->port 0x5607a5cde918
|       |   `-CXXThisExpr 0x5607a5ce0038 <col:39> 'const IPRoute *' implicit this
|       `-CStyleCastExpr 0x5607a5ce00d8 <col:46, col:57> 'int32_t':'int' <NoOp>
|         `-ImplicitCastExpr 0x5607a5ce00c0 <col:56, col:57> 'int32_t':'int' <IntegralCast> part_of_explicit_cast
|           `-UnaryOperator 0x5607a5ce0098 <col:56, col:57> 'unsigned int' prefix '-'
|             `-IntegerLiteral 0x5607a5ce0078 <col:57> 'unsigned int' 2147483648
|-CXXMethodDecl 0x5607a5cdef18 <line:175:5, col:76> col:17 kill 'void ()' inline
| `-CompoundStmt 0x5607a5ce0970 <col:24, col:76>
|   |-ExprWithCleanups 0x5607a5ce0778 <col:26, col:33> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x5607a5ce0740 <col:26, col:33> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x5607a5ce0728 <col:31> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5607a5ce0518 <col:31> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x5607a5ce0338 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x5607a5ce0170 <col:26> 'IPAddress' lvalue ->addr 0x5607a5cde7f8
|   |   | `-CXXThisExpr 0x5607a5ce0160 <col:26> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5607a5ce0500 <col:33> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x5607a5ce04d0 <col:33> 'IPAddress' 'void (unsigned int)'
|   |       `-ImplicitCastExpr 0x5607a5ce04b8 <col:33> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x5607a5ce01a0 <col:33> 'int' 0
|   |-ExprWithCleanups 0x5607a5ce08a8 <col:36, col:43> 'IPAddress' lvalue
|   | `-CXXOperatorCallExpr 0x5607a5ce0870 <col:36, col:43> 'IPAddress' lvalue
|   |   |-ImplicitCastExpr 0x5607a5ce0858 <col:41> 'IPAddress &(*)(IPAddress &&) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5607a5ce0838 <col:41> 'IPAddress &(IPAddress &&) noexcept' lvalue CXXMethod 0x5607a5ce0338 'operator=' 'IPAddress &(IPAddress &&) noexcept'
|   |   |-MemberExpr 0x5607a5ce07a0 <col:36> 'IPAddress' lvalue ->mask 0x5607a5cde858
|   |   | `-CXXThisExpr 0x5607a5ce0790 <col:36> 'IPRoute *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5607a5ce0820 <col:43> 'IPAddress' xvalue
|   |     `-CXXConstructExpr 0x5607a5ce07f0 <col:43> 'IPAddress' 'void (unsigned int)'
|   |       `-IntegerLiteral 0x5607a5ce07d0 <col:43> 'unsigned int' 4294967295
|   `-BinaryOperator 0x5607a5ce0950 <col:56, col:64> 'int32_t':'int' lvalue '='
|     |-MemberExpr 0x5607a5ce08d0 <col:56> 'int32_t':'int' lvalue ->port 0x5607a5cde918
|     | `-CXXThisExpr 0x5607a5ce08c0 <col:56> 'IPRoute *' implicit this
|     `-ImplicitCastExpr 0x5607a5ce0938 <col:63, col:64> 'int32_t':'int' <IntegralCast>
|       `-UnaryOperator 0x5607a5ce0920 <col:63, col:64> 'unsigned int' prefix '-'
|         `-IntegerLiteral 0x5607a5ce0900 <col:64> 'unsigned int' 2147483648
|-CXXMethodDecl 0x5607a5cdf058 <line:176:5, col:39> col:17 contains 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5607a5cdefc8 <col:26, col:36> col:36 a 'IPAddress'
|-CXXMethodDecl 0x5607a5cdf1f8 <line:177:5, col:44> col:17 contains 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5607a5cdf138 <col:26, col:41> col:41 r 'const IPRoute &'
|-CXXMethodDecl 0x5607a5cdf340 <line:178:5, col:47> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5607a5cdf2b0 <col:34, col:44> col:44 m 'IPAddress'
|-CXXMethodDecl 0x5607a5cdf488 <line:179:5, col:52> col:17 mask_as_specific 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5607a5cdf3f8 <col:34, col:49> col:49 r 'const IPRoute &'
|-CXXMethodDecl 0x5607a5cdf5d0 <line:180:5, col:41> col:17 match 'bool (const IPRoute &) const' inline
| `-ParmVarDecl 0x5607a5cdf540 <col:23, col:38> col:38 r 'const IPRoute &'
|-CXXMethodDecl 0x5607a5cdf6a0 <line:181:5, col:64> col:9 prefix_len 'int () const'
| `-CompoundStmt 0x5607a5ce0a38 <col:28, col:64>
|   `-ReturnStmt 0x5607a5ce0a28 <col:30, col:61>
|     `-CXXMemberCallExpr 0x5607a5ce0a08 <col:37, col:61> 'int'
|       `-MemberExpr 0x5607a5ce09d8 <col:37, col:42> '<bound member function type>' .mask_to_prefix_len 0x5607a5ac9670
|         `-MemberExpr 0x5607a5ce09a8 <col:37> 'const IPAddress' lvalue ->mask 0x5607a5cde858
|           `-CXXThisExpr 0x5607a5ce0998 <col:37> 'const IPRoute *' implicit this
|-CXXMethodDecl 0x5607a5cdf898 <line:183:5, col:51> col:18 used unparse 'StringAccum &(StringAccum &, bool) const'
| |-ParmVarDecl 0x5607a5cdf750 <col:26, col:37> col:38 'StringAccum &'
| `-ParmVarDecl 0x5607a5cdf7c8 <col:40, col:45> col:45 tabs 'bool'
|-CXXMethodDecl 0x5607a5cdf968 <line:184:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x5607a5cdfa28 <line:185:5, col:72> col:12 used unparse_addr 'String () const'
| `-CompoundStmt 0x5607a5ce0bf0 <col:33, col:72>
|   `-ReturnStmt 0x5607a5ce0be0 <col:35, col:69>
|     `-ExprWithCleanups 0x5607a5ce0bc8 <col:42, col:69> 'String'
|       `-CXXConstructExpr 0x5607a5ce0b98 <col:42, col:69> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5607a5ce0b80 <col:42, col:69> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5607a5ce0b60 <col:42, col:69> 'String' (CXXTemporary 0x5607a5ce0b60)
|             `-CXXMemberCallExpr 0x5607a5ce0b00 <col:42, col:69> 'String'
|               |-MemberExpr 0x5607a5ce0a90 <col:42, col:47> '<bound member function type>' .unparse_with_mask 0x5607a5aca268
|               | `-MemberExpr 0x5607a5ce0a60 <col:42> 'const IPAddress' lvalue ->addr 0x5607a5cde7f8
|               |   `-CXXThisExpr 0x5607a5ce0a50 <col:42> 'const IPRoute *' implicit this
|               `-CXXConstructExpr 0x5607a5ce0b28 <col:65> 'IPAddress' 'void (const IPAddress &) noexcept'
|                 `-MemberExpr 0x5607a5ce0ad0 <col:65> 'const IPAddress' lvalue ->mask 0x5607a5cde858
|                   `-CXXThisExpr 0x5607a5ce0ac0 <col:65> 'const IPRoute *' implicit this
|-CXXConstructorDecl 0x5607a5d1fae0 <line:163:8> col:8 implicit constexpr IPRoute 'void (const IPRoute &)' inline default trivial noexcept-unevaluated 0x5607a5d1fae0
| `-ParmVarDecl 0x5607a5d1fbc8 <col:8> col:8 'const IPRoute &'
`-CXXConstructorDecl 0x5607a5d1fc38 <col:8> col:8 implicit constexpr IPRoute 'void (IPRoute &&)' inline default trivial noexcept-unevaluated 0x5607a5d1fc38
  `-ParmVarDecl 0x5607a5d1fd48 <col:8> col:8 'IPRoute &&'

Layout: <CGRecordLayout
  LLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  NonVirtualBaseLLVMType:%struct.IPRoute = type { %class.IPAddress, %class.IPAddress, %class.IPAddress, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5a99af0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5607a5a99c08 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5607a5a99ca8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5607a5a99d08 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5607a5a99d68 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5607a5a99e18 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5a9a120 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5607a5a9a238 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5607a5a9a2e0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5607a5a9a348 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5607a5a9a3d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5607a5aa0470 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5607a5aa08a8 <col:12>
|-CXXConstructorDecl 0x5607a5aa0578 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5607a5aa0688 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5607a5a9a2e0 'data' 'const char *'
| | `-ImplicitCastExpr 0x5607a5aa2e30 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5607a5aa2e00 <col:12> 'const char *const' lvalue .data 0x5607a5a9a2e0
| |     `-DeclRefExpr 0x5607a5aa2de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5aa0688 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5607a5a9a348 'length' 'int'
| | `-ImplicitCastExpr 0x5607a5aa2ec0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5607a5aa2e90 <col:12> 'const int' lvalue .length 0x5607a5a9a348
| |     `-DeclRefExpr 0x5607a5aa2e70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5aa0688 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5607a5a9a3d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5607a5aa2f50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5607a5aa2f20 <col:12> 'String::memo_t *const' lvalue .memo 0x5607a5a9a3d8
| |     `-DeclRefExpr 0x5607a5aa2f00 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5aa0688 '' 'const String::rep_t &'
| `-CompoundStmt 0x5607a5aa2fa8 <col:12>
|-CXXConstructorDecl 0x5607a5aa0728 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5607a5aa0728
| `-ParmVarDecl 0x5607a5aa0838 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5607a5aa5d90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5607a5ab17a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5607a5ab18b8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5607a5ab1dd0 <col:12>
|   |-BinaryOperator 0x5607a5ab1be8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5607a5ab1ba0 <col:12> 'const char *' lvalue ->data 0x5607a5a9a2e0
|   | | `-CXXThisExpr 0x5607a5ab1b90 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5607a5ab1bd0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5607a5ab1b60 <col:12> 'const char *const' lvalue .data 0x5607a5a9a2e0
|   |     `-DeclRefExpr 0x5607a5ab1b40 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5ab18b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5607a5ab1cb0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5607a5ab1c68 <col:12> 'int' lvalue ->length 0x5607a5a9a348
|   | | `-CXXThisExpr 0x5607a5ab1c58 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5607a5ab1c98 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5607a5ab1c28 <col:12> 'const int' lvalue .length 0x5607a5a9a348
|   |     `-DeclRefExpr 0x5607a5ab1c08 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5ab18b8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5607a5ab1d78 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5607a5ab1d30 <col:12> 'String::memo_t *' lvalue ->memo 0x5607a5a9a3d8
|   | | `-CXXThisExpr 0x5607a5ab1d20 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5607a5ab1d60 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5607a5ab1cf0 <col:12> 'String::memo_t *const' lvalue .memo 0x5607a5a9a3d8
|   |     `-DeclRefExpr 0x5607a5ab1cd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5ab18b8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5607a5ab1dc0 <col:12>
|     `-UnaryOperator 0x5607a5ab1da8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5607a5ab1d98 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5607a5ab1928 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5607a5ab1928
  `-ParmVarDecl 0x5607a5ab1a38 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5a91060 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5607a5a91178 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5607a5a91208 <col:16, col:22> col:16 public
|-TypedefDecl 0x5607a5a91248 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5607a5765fd0 'const char *'
|   `-QualType 0x5607a5765521 'const char' const
|     `-BuiltinType 0x5607a5765520 'char'
|-TypedefDecl 0x5607a5a912d0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5607a5a912a0 'String::const_iterator' sugar
|   |-Typedef 0x5607a5a91248 'const_iterator'
|   `-PointerType 0x5607a5765fd0 'const char *'
|     `-QualType 0x5607a5765521 'const char' const
|       `-BuiltinType 0x5607a5765520 'char'
|-TypedefDecl 0x5607a5a91440 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5607a5a913b0 'int (String::*)() const'
|   |-RecordType 0x5607a5a910f0 'String'
|   | `-CXXRecord 0x5607a5a91060 'String'
|   `-ParenType 0x5607a5a91350 'int () const' sugar
|     `-FunctionProtoType 0x5607a5a64ee0 'int () const' const cdecl
|       `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5a914a8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5607a58b9ac0 'int64_t' sugar
|   |-Typedef 0x5607a57ce390 'int64_t'
|   `-TypedefType 0x5607a57a7630 '__int64_t' sugar
|     |-Typedef 0x5607a57a7208 '__int64_t'
|     `-BuiltinType 0x5607a57655a0 'long'
|-TypedefDecl 0x5607a5a91510 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5607a58b99e0 'uint64_t' sugar
|   |-Typedef 0x5607a57ce530 'uint64_t'
|   `-TypedefType 0x5607a57a76c0 '__uint64_t' sugar
|     |-Typedef 0x5607a57a7278 '__uint64_t'
|     `-BuiltinType 0x5607a5765640 'unsigned long'
|-TypedefDecl 0x5607a5a915a0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5607a5a91570 'String::intmax_t' sugar
|   |-Typedef 0x5607a5a914a8 'intmax_t'
|   `-TypedefType 0x5607a58b9ac0 'int64_t' sugar
|     |-Typedef 0x5607a57ce390 'int64_t'
|     `-TypedefType 0x5607a57a7630 '__int64_t' sugar
|       |-Typedef 0x5607a57a7208 '__int64_t'
|       `-BuiltinType 0x5607a57655a0 'long'
|-TypedefDecl 0x5607a5a91630 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5607a5a91600 'String::uintmax_t' sugar
|   |-Typedef 0x5607a5a91510 'uintmax_t'
|   `-TypedefType 0x5607a58b99e0 'uint64_t' sugar
|     |-Typedef 0x5607a57ce530 'uint64_t'
|     `-TypedefType 0x5607a57a76c0 '__uint64_t' sugar
|       |-Typedef 0x5607a57a7278 '__uint64_t'
|       `-BuiltinType 0x5607a5765640 'unsigned long'
|-CXXConstructorDecl 0x5607a5a916f0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5607a5a91898 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5607a5a917d8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5607a5a91a48 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5607a5a91988 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5607a5a91ba0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5607a5a91b10 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5607a5a91db8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5607a5a91c68 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5607a5a91ce8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5607a5a91fd8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5607a5a91e88 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5607a5a91f08 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5607a5a921f8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5607a5a920a8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5607a5a92128 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5607a5a92418 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5607a5a922c8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5607a5a92348 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5607a5a925a8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5607a5a924e0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5607a5a92728 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5607a5a92668 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5607a5a928b8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5607a5a927f0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5607a5a92a10 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5607a5a92980 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5607a5a92b68 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5607a5a92ad8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5607a5a92cc0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5607a5a92c30 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5607a5a92e48 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5607a5a92d88 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5607a5a92fd8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5607a5a92f10 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5607a5a93168 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5607a5a930a0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5607a5a932f8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5607a5a93230 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5607a5a933f0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5607a5a93518 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5607a5a93698 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5607a5a935d0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5607a5a937e8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5607a5a93758 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5607a5a938a0 <col:63> "" ""
|-CXXMethodDecl 0x5607a5a939e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5607a5a93928 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5607a5a93bf8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5607a5a93aa8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5607a5a93b28 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5607a5a93e18 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5607a5a93cc0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5607a5a93d40 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5607a5a940f8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5607a5a93ed8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5607a5a93f58 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5607a5a9ff40 <col:55> 'int' 10
| `-ParmVarDecl 0x5607a5a93fd0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5607a5a9ff60 <col:76> 'bool' true
|-CXXMethodDecl 0x5607a5a943d8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5607a5a941c0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5607a5a94240 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5607a5a9ff70 <col:56> 'int' 10
| `-ParmVarDecl 0x5607a5a942b8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5607a5a9ff90 <col:77> 'bool' true
|-CXXMethodDecl 0x5607a5a944e0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5607a5a945a8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5607a5a94670 <line:81:5, col:60> col:52 used c_str 'const char *() const'
| |-NoInlineAttr 0x5607a5a94710 <col:20>
| `-OptimizeNoneAttr 0x5607a5a94768 <col:30>
|-CXXConversionDecl 0x5607a5a94858 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5607a5a94928 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5607a5a949e8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5607a5a94ad8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5607a5a94b98 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5607a5a94d18 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5607a5a94c50 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5607a5a94e68 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5607a5a94dd8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5607a5a94f58 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5607a5a95018 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5607a5a95268 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5607a5a950d0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5607a5a95150 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5607a5a954c8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5607a5a95330 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5607a5a953b0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5607a5a95598 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5a957a8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5607a5a95650 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5607a5a956d0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5607a5a959c8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5607a5a95870 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5607a5a958f0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5607a5a95b58 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5607a5a95a90 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5607a5a95c48 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5607a5a95db8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5607a5a95cf8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5607a5a95fc8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5607a5a95e78 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5607a5a95ef8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5607a5a961e0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5607a5a96088 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5607a5a96100 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5607a5a96370 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5607a5a962a0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5607a5a96590 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5607a5a96430 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5607a5a964b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5607a5a966e0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5607a5a96650 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5607a5a968b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5607a5a967a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5607a5a96820 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5607a5a96a08 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5607a5a96978 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5607a5a96c20 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5607a5a96ac0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5607a5a96b40 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5607a5a9ffa0 <col:39> 'int' 0
|-CXXMethodDecl 0x5607a5a96e40 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5607a5a96ce0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5607a5a96d60 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5607a5a9ffc0 <col:48> 'int' 0
|-CXXMethodDecl 0x5607a5a97020 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5607a5a96f00 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5607a5a96f80 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5607a5a9ffe0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5607a5a970f0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5607a5a971b0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5607a5a97270 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5607a5a97330 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5607a5a973f0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5607a5a97598 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5607a5a974a0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5607a5a97718 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5607a5a97650 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5607a5a978f0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5607a5a977d8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5607a5a97a68 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5607a5a979a8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5607a5a97bb0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5607a5a97b20 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5607a5a97d00 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5607a5a97c70 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5607a5a97ed8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5607a5a97dc0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5607a5a97e40 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5607a5a980b8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5607a5a97fa0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5607a5a98020 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5607a5a98208 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5607a5a98178 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5607a5a98418 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5607a5a982c8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5607a5a98348 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5607a5a98578 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5607a5a984e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5607a5a986d0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5607a5a98638 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5607a5a98778 <col:57> "" ""
|-CXXMethodDecl 0x5607a5a98888 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5607a5a987f8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5607a5a989d8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5607a5a98948 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5607a5a98b58 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5607a5a98a90 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5607a5a98c20 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5607a5a98ce0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5607a5a98da0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5607a5a98e40 <col:49> "" ""
|-CXXMethodDecl 0x5607a5a98ed0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5607a5a98f90 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5607a5a99080 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5607a5a99148 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5607a5a99208 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5607a5a992c8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5607a5a993c0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5607a5a99488 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5607a5a99550 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5607a5a99728 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5607a5a99608 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5607a5a99688 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5607a5a99950 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5607a5a997f0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5607a5a99870 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5607a5a99a60 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5607a5a99ac8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5607a5a99af0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5607a5a99c08 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5607a5a99ca8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5607a5a99d08 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5607a5a99d68 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5607a5a99e18 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5607a5a99e80 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5607a5a9a0b8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5607a5a9a108 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5a9a098 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5607a5a99fa8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5607a5a99f50 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5607a5a99f90 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5607a5a99f70 <col:32> 'int' 8
|-CXXRecordDecl 0x5607a5a9a120 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5607a5a9a238 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5607a5a9a2e0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5607a5a9a348 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5607a5a9a3d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5607a5aa0470 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5607a5aa08a8 <col:12>
| |-CXXConstructorDecl 0x5607a5aa0578 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5607a5aa0688 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5607a5a9a2e0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5607a5aa2e30 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5607a5aa2e00 <col:12> 'const char *const' lvalue .data 0x5607a5a9a2e0
| | |     `-DeclRefExpr 0x5607a5aa2de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5aa0688 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5607a5a9a348 'length' 'int'
| | | `-ImplicitCastExpr 0x5607a5aa2ec0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5607a5aa2e90 <col:12> 'const int' lvalue .length 0x5607a5a9a348
| | |     `-DeclRefExpr 0x5607a5aa2e70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5aa0688 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5607a5a9a3d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5607a5aa2f50 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5607a5aa2f20 <col:12> 'String::memo_t *const' lvalue .memo 0x5607a5a9a3d8
| | |     `-DeclRefExpr 0x5607a5aa2f00 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5aa0688 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5607a5aa2fa8 <col:12>
| |-CXXConstructorDecl 0x5607a5aa0728 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5607a5aa0728
| | `-ParmVarDecl 0x5607a5aa0838 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5607a5aa5d90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5607a5ab17a8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5607a5ab18b8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5607a5ab1dd0 <col:12>
| |   |-BinaryOperator 0x5607a5ab1be8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5607a5ab1ba0 <col:12> 'const char *' lvalue ->data 0x5607a5a9a2e0
| |   | | `-CXXThisExpr 0x5607a5ab1b90 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5607a5ab1bd0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5607a5ab1b60 <col:12> 'const char *const' lvalue .data 0x5607a5a9a2e0
| |   |     `-DeclRefExpr 0x5607a5ab1b40 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5ab18b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5607a5ab1cb0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5607a5ab1c68 <col:12> 'int' lvalue ->length 0x5607a5a9a348
| |   | | `-CXXThisExpr 0x5607a5ab1c58 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5607a5ab1c98 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5607a5ab1c28 <col:12> 'const int' lvalue .length 0x5607a5a9a348
| |   |     `-DeclRefExpr 0x5607a5ab1c08 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5ab18b8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5607a5ab1d78 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5607a5ab1d30 <col:12> 'String::memo_t *' lvalue ->memo 0x5607a5a9a3d8
| |   | | `-CXXThisExpr 0x5607a5ab1d20 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5607a5ab1d60 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5607a5ab1cf0 <col:12> 'String::memo_t *const' lvalue .memo 0x5607a5a9a3d8
| |   |     `-DeclRefExpr 0x5607a5ab1cd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5607a5ab18b8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5607a5ab1dc0 <col:12>
| |     `-UnaryOperator 0x5607a5ab1da8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5607a5ab1d98 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5607a5ab1928 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5607a5ab1928
|   `-ParmVarDecl 0x5607a5ab1a38 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5607a5a9a450 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5607a5a9a698 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5607a5a9a4b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5607a5a9a538 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5607a5a9a5b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5607a5aa0430 <col:79, line:261:5>
|   |-BinaryOperator 0x5607a5aa00a8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5607a5aa0040 <col:2, col:5> 'const char *' lvalue .data 0x5607a5a9a2e0
|   | | `-MemberExpr 0x5607a5aa0010 <col:2> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|   | |   `-CXXThisExpr 0x5607a5aa0000 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5607a5aa0090 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5607a5aa0070 <col:12> 'const char *' lvalue ParmVar 0x5607a5a9a4b8 'data' 'const char *'
|   |-BinaryOperator 0x5607a5aa0170 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5607a5aa0108 <col:2, col:5> 'int' lvalue .length 0x5607a5a9a348
|   | | `-MemberExpr 0x5607a5aa00d8 <col:2> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|   | |   `-CXXThisExpr 0x5607a5aa00c8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5607a5aa0158 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5607a5aa0138 <col:14> 'int' lvalue ParmVar 0x5607a5a9a538 'length' 'int'
|   `-IfStmt 0x5607a5aa0418 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5607a5aa0290 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5607a5aa0278 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5607a5aa0258 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5607a5aa0238 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5607a5aa01d0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|     |       | `-MemberExpr 0x5607a5aa01a0 <col:7> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|     |       |   `-CXXThisExpr 0x5607a5aa0190 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5607a5aa0220 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5607a5aa0200 <col:17> 'String::memo_t *' lvalue ParmVar 0x5607a5a9a5b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5607a5aa03f0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5607a5aa03d8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5607a5aa02e0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5607a5a890c8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5607a5aa0348 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5607a5a99ca8
|         `-ImplicitCastExpr 0x5607a5aa0330 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5607a5aa0310 <col:27> 'String::memo_t *' lvalue ParmVar 0x5607a5a9a5b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5607a5a9a948 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5607a5a9a768 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5607a5a9a7e8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5607a5a9a860 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5607a5a9a450 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5607a5aa08b8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5607a5aa0a48 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5607a5aa09b0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5607a5aa0920 <col:2> '<bound member function type>' ->assign_memo 0x5607a5a9a698
|     | `-ImplicitCastExpr 0x5607a5aa09e8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5607a5aa0910 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5607a5aa0a00 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5607a5aa0950 <col:14> 'const char *' lvalue ParmVar 0x5607a5a9a768 'data' 'const char *'
|     |-ImplicitCastExpr 0x5607a5aa0a18 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5607a5aa0970 <col:20> 'int' lvalue ParmVar 0x5607a5a9a7e8 'length' 'int'
|     `-ImplicitCastExpr 0x5607a5aa0a30 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5aa0990 <col:28> 'String::memo_t *' lvalue ParmVar 0x5607a5a9a860 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5607a5a9aad8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5607a5a9aa18 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5607a5aa0ca0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5607a5aa0c20 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5607a5aa0a70 <col:2> '<bound member function type>' ->assign_memo 0x5607a5a9a698
|     | `-CXXThisExpr 0x5607a5aa0a60 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5607a5aa0c58 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5607a5aa0af0 <col:14, col:19> 'const char *' lvalue .data 0x5607a5a9a2e0
|     |   `-MemberExpr 0x5607a5aa0ac0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5607a5a9a450
|     |     `-DeclRefExpr 0x5607a5aa0aa0 <col:14> 'const String' lvalue ParmVar 0x5607a5a9aa18 'x' 'const String &'
|     |-ImplicitCastExpr 0x5607a5aa0c70 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5607a5aa0b70 <col:25, col:30> 'int' lvalue .length 0x5607a5a9a348
|     |   `-MemberExpr 0x5607a5aa0b40 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5607a5a9a450
|     |     `-DeclRefExpr 0x5607a5aa0b20 <col:25> 'const String' lvalue ParmVar 0x5607a5a9aa18 'x' 'const String &'
|     `-ImplicitCastExpr 0x5607a5aa0c88 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5607a5aa0bf0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|         `-MemberExpr 0x5607a5aa0bc0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5607a5a9a450
|           `-DeclRefExpr 0x5607a5aa0ba0 <col:38> 'const String' lvalue ParmVar 0x5607a5a9aa18 'x' 'const String &'
|-CXXMethodDecl 0x5607a5a9aba0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5607a5aa1660 <col:31, line:278:5>
|   `-IfStmt 0x5607a5aa1648 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5607a5aa0d40 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5607a5aa0d28 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5607a5aa0cf8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|     |     `-MemberExpr 0x5607a5aa0cc8 <col:6> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|     |       `-CXXThisExpr 0x5607a5aa0cb8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5607a5aa1620 <col:15, line:277:2>
|       |-ParenExpr 0x5607a5aa11f0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5607a5aa11c0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5607a5aa0e50 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5607a5aa0e38 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5607a5aa0e20 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5607a5aa0de0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5607a5a99ca8
|       |   |       `-ImplicitCastExpr 0x5607a5aa0dc8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5607a5aa0d98 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|       |   |           `-MemberExpr 0x5607a5aa0d68 <col:27> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|       |   |             `-CXXThisExpr 0x5607a5aa0d58 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5607a5aa0eb0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5607a5aa0e90 <col:54> 'int' 0
|       |   `-CallExpr 0x5607a5aa1120 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5607a5aa1108 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5607a5aa1088 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5607a5aa1160 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5607a5aa0f98 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5607a5aa1178 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5607a5aa0fc8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5607a5aa1190 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5607a5aa1000 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5607a5aa11a8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5607a5aa1070 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5607a5aa1058 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5607a5aa1020 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5607a5aa1540 <line:274:6, line:275:22>
|       | |-CallExpr 0x5607a5aa1400 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5607a5aa13e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5607a5aa1360 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5607a5a8a510 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5607a5aa1330 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5607a5a99ca8
|       | |   `-ImplicitCastExpr 0x5607a5aa1318 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5607a5aa12e8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|       | |       `-MemberExpr 0x5607a5aa12b8 <col:40> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|       | |         `-CXXThisExpr 0x5607a5aa12a8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5607a5aa1500 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5607a5aa14e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5607a5aa1428 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5607a5a9f380 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5607a5aa1528 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5607a5aa1488 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|       |       `-MemberExpr 0x5607a5aa1458 <col:15> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|       |         `-CXXThisExpr 0x5607a5aa1448 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5607a5aa1600 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5607a5aa1598 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5607a5a9a3d8
|         | `-MemberExpr 0x5607a5aa1568 <col:6> 'String::rep_t' lvalue ->_r 0x5607a5a9a450
|         |   `-CXXThisExpr 0x5607a5aa1558 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5607a5aa15e8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5607a5aa15c8 <col:16> 'int' 0
|-CXXMethodDecl 0x5607a5a9ae38 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5607a5a9ac58 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5607a5a9acd8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5607a5a9ad50 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5607a5a9af10 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5607a5a9b160 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5607a5a9afc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5607a5a9b048 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5607a5a9b0c0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5607a5a9b348 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5607a5a9b230 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5607a5a9b2b0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5607a5a9b448 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5607a5aa1738 <col:41, line:286:5>
|   `-ReturnStmt 0x5607a5aa1728 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5607a5aa16f8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5607a5aa16c0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5607a5aa16a8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5607a5aa1688 <col:46> 'int' 1
|-CXXMethodDecl 0x5607a5a9b6e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5607a5a9b500 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5607a5a9b580 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5607a5a9b600 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5607a5a9f380 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5607a5a9b7b0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5607a5a9f450 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5607a5a9f620 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5607a5a9f508 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5607a5a9f588 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5607a5a9f6e0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5607a5a9f7a8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5607a5a9f8a8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5607a5a9f920 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5607a5a9f998 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5607a5a9fa00 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5607a5a9fb00 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5607a5a9fb50 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5a9fae0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5607a5a9fac0 <col:22> 'int' 14
|-CXXMethodDecl 0x5607a5a9fd68 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5607a5a9fb80 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5607a5a9fc00 <col:38> col:41 'int'
| `-ParmVarDecl 0x5607a5a9fc80 <col:43> col:46 'int'
|-FriendDecl 0x5607a5a9fe70 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5607a5a9ff00 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5607a5d3ae90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x5607a5d3b068 prev 0x5607a5d3ae90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5607a5d3b0f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x5607a5d3b120 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d3ccf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x5607a5d3cca0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x5607a5d3b5d0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x5607a5d3b4d0 'type'
|     `-TemplateSpecializationType 0x5607a5d3b460 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5607a5d3b340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x5607a5d3b320 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5607a5d3b300 <col:24> 'unsigned long' 4
|       `-RecordType 0x5607a5d3b440 'char_array<4>'
|         `-ClassTemplateSpecialization 0x5607a5d3b360 'char_array'
|-TypedefDecl 0x5607a5d3cda8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x5607a5d3cd70 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x5607a5d3cd50 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x5607a5d3ccf0 'type'
|     `-ElaboratedType 0x5607a5d3cca0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x5607a5d3b5d0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x5607a5d3b4d0 'type'
|         `-TemplateSpecializationType 0x5607a5d3b460 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5607a5d3b340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x5607a5d3b320 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5607a5d3b300 <col:24> 'unsigned long' 4
|           `-RecordType 0x5607a5d3b440 'char_array<4>'
|             `-ClassTemplateSpecialization 0x5607a5d3b360 'char_array'
|-CXXMethodDecl 0x5607a5d3cf28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x5607a5d3ce38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x5607a5d3d018 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5607a5d3d0f8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5607a5d3d3c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5607a5d3d2d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x5607a5d3d608 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5607a5d3d480 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5607a5d3d4f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3d7d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5607a5d3d6c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5607a5d3d740 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3d938 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5607a5d3da08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x5607a5d3dc58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5607a5d3dac8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5607a5d3db40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3deb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x5607a5d3dd28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x5607a5d3dda0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3e078 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5607a5d3df88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3e238 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x5607a5d3e140 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3e2f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5607a5d3e3a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5607a5d3e5d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x5607a5d3e450 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5607a5d3e4c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x5607a5d3e878 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x5607a5d3e780 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x5607a5d3e940 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x5607a5d3e990 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5607a5d3e9e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.2 = type { %struct.char_array.3*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.2 = type { %struct.char_array.3*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5607a5d39938 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x5607a5d39cc0 prev 0x5607a5d39938 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5607a5d3ae00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x5607a5d3adb0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x5607a5d3ad90 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x5607a5d3ac40 'type'
|     `-SubstTemplateTypeParmType 0x5607a5d3aa60 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5607a5a29f30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a29ed8 'T'
|       `-RecordType 0x5607a5d3a5b0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x5607a5d3a4c8 'sized_array_memory'
|-FieldDecl 0x5607a5d3ea30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x5607a5d3ea80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5607a5d3eab8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|   |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|   `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d3eb48 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x5607a5d3eb10 'int &'
|   `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|     |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|     `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d3ec08 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x5607a5d3ebd0 'const int &'
|   `-QualType 0x5607a5d39d51 'const int' const
|     `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d3ec98 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x5607a5d3ec60 'int *'
|   `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|     |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|     `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d3ed28 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x5607a5d3ecf0 'const int *'
|   `-QualType 0x5607a5d39d51 'const int' const
|     `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d56c40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x5607a5d56bf0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x5607a5d56bd0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x5607a5d56b60 'type'
|     `-SubstTemplateTypeParmType 0x5607a5d56920 'int' sugar
|       |-TemplateTypeParmType 0x5607a5a34d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a34ce0 'T'
|       `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d56ca8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x5607a5d3ebd0 'const int &'
|   `-QualType 0x5607a5d39d51 'const int' const
|     `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d56d00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d56d68 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x5607a5d3ec60 'int *'
|   `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|     |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|     `-BuiltinType 0x5607a5765580 'int'
|-TypedefDecl 0x5607a5d56dd0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x5607a5d3ecf0 'const int *'
|   `-QualType 0x5607a5d39d51 'const int' const
|     `-SubstTemplateTypeParmType 0x5607a5d39d50 'int' sugar
|       |-TemplateTypeParmType 0x5607a5a61c20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5607a5a61bc8 'T'
|       `-BuiltinType 0x5607a5765580 'int'
|-EnumDecl 0x5607a5d56e28 <line:134:5> col:5
| `-EnumConstantDecl 0x5607a5d56f20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5607a5d56f00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5607a5a632a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5607a5a63280 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5607a5a63260 <col:40> 'int' 1
|-CXXConstructorDecl 0x5607a5d56fa8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x5607a5d571f8 <line:138:5, col:62> col:21 used Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5d57060 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5607a5d57100 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x5607a5d574b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x5607a5d573a0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x5607a5d57778 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x5607a5d57660 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x5607a5d57ac0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x5607a5d579a0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x5607a5d57dd0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x5607a5d57cb0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x5607a5d580c0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5d57f08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5607a5d57f80 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5607a5d581e8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5607a5d582c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5d58320 <col:30> Inherited
|-CXXMethodDecl 0x5607a5d58368 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x5607a5d58418 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5d58470 <col:30> Inherited
|-CXXMethodDecl 0x5607a5d58538 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5607a5d585e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5d58640 <col:30> Inherited
|-CXXMethodDecl 0x5607a5d58688 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5607a5d58738 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5d58790 <col:30> Inherited
|-CXXMethodDecl 0x5607a5d587d8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5607a5d58888 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5d588e0 <col:30> Inherited
|-CXXMethodDecl 0x5607a5d58928 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x5607a5d589d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5607a5d58a30 <col:30> Inherited
|-CXXMethodDecl 0x5607a5d58a58 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5607a5d58b08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5607a5d58bb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5607a5d58d78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5d58c68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5607a5d58ce0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5607a5d58ec8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5607a5d58e38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5d59078 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x5607a5d58f80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5607a5d59130 <col:20>
| `-OptimizeNoneAttr 0x5607a5d59188 <col:30>
|-CXXMethodDecl 0x5607a5d592a8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x5607a5d591b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5607a5d59360 <col:20>
| `-OptimizeNoneAttr 0x5607a5d593b8 <col:30>
|-CXXMethodDecl 0x5607a5d59470 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5607a5d593e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5d595b8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5607a5d59528 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5d596e8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x5607a5d59818 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x5607a5d598e8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x5607a5d599b8 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x5607a5d59af8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x5607a5d59a68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5d59c40 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5607a5d59bb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5607a5d59d88 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x5607a5d59cf8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5607a5d59e40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5607a5d59f40 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5607a5d59eb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5607a5d59ff8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5607a5d5a0b8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x5607a5d5a1b8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x5607a5d5a338 <line:180:5, col:48> col:17 used push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5607a5d5a278 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x5607a5d5aaf8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5607a5d5a3f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x5607a5d5aa58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x5607a5d5a958 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x5607a5d5abd8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5607a5d5ad28 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x5607a5d5ac98 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5607a5d5ade0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5607a5d5b028 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x5607a5d5aea0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5607a5d5af18 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x5607a5d5b1e8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x5607a5d5b0f8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5607a5d5b438 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x5607a5d5b2b0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x5607a5d5b328 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x5607a5d5b4f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5607a5d5b758 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x5607a5d5b660 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x5607a5d5b828 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x5607a5d5b948 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.1 = type { %class.vector_memory.2 }
  NonVirtualBaseLLVMType:%class.Vector.1 = type { %class.vector_memory.2 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5a85710 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5607a5a85828 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5607a5a858b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5607a5a85988 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5607a5a85a70 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5a85c88 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5607a5a85b30 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a85e38 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5607a5a85d40 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5607a5a85f80 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5607a5a85ef0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5607a5a860c8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5607a5a86038 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a86210 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5607a5a86180 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a862d8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5607a5a86420 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5607a5a86390 <col:28> col:31 'int'
|-CXXMethodDecl 0x5607a5a864e8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5607a5a86630 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5607a5a865a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5607a5a867a8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5607a5a866e8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a868f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5607a5a86860 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a869b8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5607a5a86b78 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5607a5a86a68 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5607a5a86ae0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a86dc8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5607a5a86c38 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5607a5a86cb0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5607a5a86e78 <col:86> "" ""
|-CXXMethodDecl 0x5607a5a870e8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5607a5a86f58 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5607a5a86fd0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a87298 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5607a5a871a8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5607a5a87448 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5607a5a87350 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5607a5a87718 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5607a5a87500 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5607a5a87578 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5607a5a875f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a879f8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5607a5a877e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5607a5a87858 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5607a5a878d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5607a5a87ab0 <col:115> "" ""
|-AccessSpecDecl 0x5607a5a87b20 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5607a5a87b58 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5a88060 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5607a5a88060
| `-ParmVarDecl 0x5607a5a88168 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5607a5a88208 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5607a5a88208
| `-ParmVarDecl 0x5607a5a88318 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5607a5abd948 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5607a5caf740 <col:7>
|-CXXConstructorDecl 0x5607a5abda20 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5607a5abda20
| `-ParmVarDecl 0x5607a5abdb38 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5607a5abdba8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5607a5abdba8
| `-ParmVarDecl 0x5607a5abdcb8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5607a5cb2140 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5c9e2e8 prev 0x5607a5c934f0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5607a5c9e3e0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5607a5c9e4d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5607a5c9e5f8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5607a5c9e778 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5607a5c9e8f8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5607a5c9ea78 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5607a5caf8a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5607a5cb0118 <col:11>
|-CXXDestructorDecl 0x5607a5caf980 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5607a5cafab8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5607a5cafab8
| `-ParmVarDecl 0x5607a5cafbc8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5607a5cafc68 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5607a5cafc68
| `-ParmVarDecl 0x5607a5cafd78 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5607a5cb2b38 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5607a5cb2c48 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5607a5cb2ec8 <col:11>
|   `-ReturnStmt 0x5607a5cb2eb8 <col:11>
|     `-UnaryOperator 0x5607a5cb2ea0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5607a5cb2e90 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5607a5cb2cb8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5607a5cb2cb8
  `-ParmVarDecl 0x5607a5cb2dc8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5c9eae0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5607a5c9ebf8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5607a5c9ec98 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5607a5c9ed00 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5607a5c9ed68 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5607a5c9edd0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5607a5c9ee30 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5607a5c9eef0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5607a5c9ef50 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5607a5c9efb0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5607a5caf7b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5607a5c9ec98 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5607a5cb0128 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5607a5cb0180 <col:12>
|-CXXConstructorDecl 0x5607a5cafde8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5607a5cafde8
| `-ParmVarDecl 0x5607a5cafef8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5607a5caff98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5607a5caff98
| `-ParmVarDecl 0x5607a5cb00a8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5607a5cb2220 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5607a5c8cc00 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5607a5c8cd18 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5607a5c8cda8 <col:16, col:22> col:16 public
|-EnumDecl 0x5607a5c8cdd0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5607a5c8ced0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5607a5c8cfb0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c8ceb0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5607a5c8ce90 <col:21> 'int' 28
| `-EnumConstantDecl 0x5607a5c8cf60 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5607a5c8cfc8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5c8cf40 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5607a5c8cf20 <col:22> 'int' 64
|-CXXMethodDecl 0x5607a5c8d308 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5607a5c8cff0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5607a5c8d070 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5607a5c8d0e8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5607a5c8d160 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5607a5c8d3c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8d5c8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5607a5c8d440 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5607a5c8d4b8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5607a5c8d678 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8d7d8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5607a5c8d6e8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5607a5c8d880 <col:72> warn_unused_result ""
|-TypedefDecl 0x5607a5c8dbe0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5607a5c8db70 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5607a5c8db10 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5607a5c8dad0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5607a57654e0 'void'
|       |-PointerType 0x5607a5a0cfa0 'unsigned char *'
|       | `-BuiltinType 0x5607a57655e0 'unsigned char'
|       |-TypedefType 0x5607a5809570 'size_t' sugar
|       | |-Typedef 0x5607a57d5be0 'size_t'
|       | `-BuiltinType 0x5607a5765640 'unsigned long'
|       `-PointerType 0x5607a5765ce0 'void *'
|         `-BuiltinType 0x5607a57654e0 'void'
|-CXXMethodDecl 0x5607a5c8e058 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5607a5c8dc50 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5607a5c8dcc8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5607a5c8dd60 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5607a5c8dde0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5607a5ca8750 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5607a5ca8738 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5607a5ca8700 <col:58> 'int' 0
| |-ParmVarDecl 0x5607a5c8de60 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5607a5ca8778 <col:76> 'int' 0
| |-ParmVarDecl 0x5607a5c8dee0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5607a5ca8798 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5607a5c8e128 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8e1a8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5607a5c8e268 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5607a5c8e308 <col:20>
| `-OptimizeNoneAttr 0x5607a5c8e360 <col:30>
|-CXXMethodDecl 0x5607a5c8e3d8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5607a5c8e478 <col:20>
| `-OptimizeNoneAttr 0x5607a5c8e4d0 <col:30>
|-CXXMethodDecl 0x5607a5c8e548 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5607a5c8e5e8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8e698 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5607a5c8e738 <col:20>
| |-OptimizeNoneAttr 0x5607a5c8e790 <col:30>
| `-WarnUnusedResultAttr 0x5607a5c8e7b8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8e810 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5607a5c8e8b0 <col:20>
| `-OptimizeNoneAttr 0x5607a5c8e908 <col:30>
|-CXXMethodDecl 0x5607a5c8e958 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5607a5c8e9f8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c8ea50 <col:30>
|-CXXMethodDecl 0x5607a5c8ea98 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5607a5c8eb38 <col:20>
| `-OptimizeNoneAttr 0x5607a5c8eb90 <col:30>
|-CXXMethodDecl 0x5607a5c8ebd8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5c8ec98 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5c8ed60 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5607a5c8ee28 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5607a5c8eee8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5c8f008 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5607a5ca8860 <col:54, line:99:5>
|   `-ReturnStmt 0x5607a5ca8850 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5607a5ca8838 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5607a5ca8808 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5607a5c9f2e8
|         `-CXXThisExpr 0x5607a5ca87f8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5607a5c8f1a8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5607a5c8f0b8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5607a5ca8910 <col:67, line:103:5>
|   `-BinaryOperator 0x5607a5ca88f0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5607a5ca8888 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5607a5c9f2e8
|     | `-CXXThisExpr 0x5607a5ca8878 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5607a5ca88d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5ca88b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5607a5c8f0b8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5607a5c8f2a0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5607a5ca8990 <col:33, line:107:5>
|   `-ReturnStmt 0x5607a5ca8980 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5607a5ca8968 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5607a5ca8938 <col:16> 'void *' lvalue ->_destructor_argument 0x5607a5c9f350
|         `-CXXThisExpr 0x5607a5ca8928 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5607a5c8f360 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5607a5ca8fc0 <col:25, line:113:5>
|   |-ParenExpr 0x5607a5ca8d08 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5607a5ca8cd8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5ca8a48 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5607a5ca8a20 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5607a5ca89e8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5607a5ca89b8 <col:24> '<bound member function type>' ->shared 0x5607a5c8e3d8
|   |   |       `-ImplicitCastExpr 0x5607a5ca8a08 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5607a5ca89a8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5607a5ca8aa8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5ca8a88 <col:42> 'int' 0
|   |   `-CallExpr 0x5607a5ca8c38 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5607a5ca8c20 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5ca8c00 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5ca8c78 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5ca8b18 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5607a5ca8c90 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5ca8b40 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5ca8ca8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5ca8b78 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5607a5ca8cc0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5ca8be8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5ca8bd0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5ca8b98 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5607a5ca8f08 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5607a5ca8d38 <col:2> 'unsigned char *' lvalue ->_head 0x5607a5c9f0f0
|   | | `-CXXThisExpr 0x5607a5ca8d28 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5607a5ca8ef0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5607a5ca8ed0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5607a5ca8d78 <col:10> 'unsigned char *' lvalue ->_data 0x5607a5c9f158
|   |     | `-CXXThisExpr 0x5607a5ca8d68 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5607a5ca8eb8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5607a5ca8e98 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5607a5ca8db8 <col:18> 'unsigned char *' lvalue ->_tail 0x5607a5c9f1c0
|   |         | `-CXXThisExpr 0x5607a5ca8da8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5607a5ca8e80 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5607a5ca8e60 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5607a5ca8df8 <col:26> 'unsigned char *' lvalue ->_end 0x5607a5c9f228
|   |             | `-CXXThisExpr 0x5607a5ca8de8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5607a5ca8e48 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5607a5ca8e28 <col:33> 'int' 0
|   `-BinaryOperator 0x5607a5ca8fa0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5607a5ca8f38 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5607a5c9f2e8
|     | `-CXXThisExpr 0x5607a5ca8f28 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5607a5ca8f88 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5607a5ca8f68 <col:16> 'int' 0
|-CXXMethodDecl 0x5607a5c8f4a0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5607a5c8f410 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c8f548 <col:20>
| |-OptimizeNoneAttr 0x5607a5c8f5a0 <col:30>
| `-WarnUnusedResultAttr 0x5607a5c8f5c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8f698 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5607a5c8f608 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c8f740 <col:20>
| |-OptimizeNoneAttr 0x5607a5c8f798 <col:30>
| `-WarnUnusedResultAttr 0x5607a5c8f7c0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8f8f8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5607a5c8f800 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5607a5c8f9a0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8faa0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5607a5c8fa10 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c8fb48 <col:20>
| `-OptimizeNoneAttr 0x5607a5c8fba0 <col:30>
|-CXXMethodDecl 0x5607a5c8fc68 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5607a5c8fbd8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5607a5c8fd10 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8fe10 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5607a5c8fd80 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5607a5c8feb8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c8ffb8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5607a5c8ff28 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c90060 <col:20>
| `-OptimizeNoneAttr 0x5607a5c900b8 <col:30>
|-CXXMethodDecl 0x5607a5c90248 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5607a5c900f8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5607a5c90170 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5607a5ca87b8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5607a5c902f8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5607a5c904f8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5607a5c90370 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5607a5c903e8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5c90708 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5607a5c905b8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5607a5c90630 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5c90918 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5607a5c907c8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5607a5c90848 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5607a5ca87c8 <col:39> 'int' 0
|-CXXMethodDecl 0x5607a5c909e8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5607a5c90ab0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5607a5c90b78 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5607a5c90c38 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5c90d00 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5607a5c90e48 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5607a5c90db8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5607a5c91018 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5607a5c90f08 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5607a5c90f80 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5c910e8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5607a5c911a8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5607a5c91248 <col:20>
| `-OptimizeNoneAttr 0x5607a5c912a0 <col:30>
|-CXXMethodDecl 0x5607a5c912f0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5607a5c91390 <col:20>
| `-OptimizeNoneAttr 0x5607a5c913e8 <col:30>
|-CXXMethodDecl 0x5607a5c91438 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5607a5c914f8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5c915c0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5607a5c91660 <col:20>
| `-OptimizeNoneAttr 0x5607a5c916b8 <col:30>
|-CXXMethodDecl 0x5607a5c91808 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5607a5c916f8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5607a5c91770 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5c91958 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5607a5c918c8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5c91a30 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5607a5c91af0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5607a5c91b90 <col:20>
| `-OptimizeNoneAttr 0x5607a5c91be8 <col:30>
|-CXXMethodDecl 0x5607a5c91c38 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5607a5c91cd8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c91d30 <col:30>
|-CXXMethodDecl 0x5607a5c91d80 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5607a5c91e48 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5607a5c91ee8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c91f40 <col:30>
|-CXXMethodDecl 0x5607a5c91f88 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5607a5c920a8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5607a5c92218 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5607a5c92158 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5607a5c92308 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5607a5c923a8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c92400 <col:30>
|-CXXMethodDecl 0x5607a5c92450 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5607a5c92510 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5607a5c92748 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5607a5c925c0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5607a5c92638 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c927f8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c92850 <col:30>
|-CXXMethodDecl 0x5607a5c928f8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5607a5c92998 <col:20>
| `-OptimizeNoneAttr 0x5607a5c929f0 <col:30>
|-CXXMethodDecl 0x5607a5c92a40 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5607a5c92ae0 <col:20>
| `-OptimizeNoneAttr 0x5607a5c92b38 <col:30>
|-CXXMethodDecl 0x5607a5c92b80 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5607a5c92c20 <col:20>
| `-OptimizeNoneAttr 0x5607a5c92c78 <col:30>
|-CXXMethodDecl 0x5607a5c92d78 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5607a5c92cb0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5607a5c92e20 <col:20>
| `-OptimizeNoneAttr 0x5607a5c92e78 <col:30>
|-CXXMethodDecl 0x5607a5c93038 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5607a5c92eb0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5607a5c92f28 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c930e8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c93140 <col:30>
|-CXXMethodDecl 0x5607a5c931e8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5607a5c93308 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5607a5c93428 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5607a5c934c8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5607a5c934f0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5607a5c93618 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5607a5c936b8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c93710 <col:30>
|-CXXMethodDecl 0x5607a5c937b8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5607a5c93858 <col:20>
| `-OptimizeNoneAttr 0x5607a5c938b0 <col:30>
|-AccessSpecDecl 0x5607a5c938d8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5607a5c93900 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5607a5c93a00 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5607a5c93a50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5c939e0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5607a5c939c0 <col:14> 'int' 48
|-CXXMethodDecl 0x5607a5c93ab8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5607a5c93b58 <col:20>
| `-OptimizeNoneAttr 0x5607a5c93bb0 <col:30>
|-CXXMethodDecl 0x5607a5c93c28 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5607a5c93cc8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c93d20 <col:30>
|-CXXMethodDecl 0x5607a5c93de8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5607a5c93d58 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5607a5c93f88 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5607a5c94128 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5607a5c94038 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5607a5c941d0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5607a5c942d0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5607a5c94680 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c942b0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5607a5c94290 <col:9> 'int' 0
| |-EnumConstantDecl 0x5607a5c94360 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5607a5c94698 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c94340 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5607a5c94320 <col:14> 'int' 1
| |-EnumConstantDecl 0x5607a5c943f0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5607a5c946b0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c943d0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5607a5c943b0 <col:14> 'int' 2
| |-EnumConstantDecl 0x5607a5c94480 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5607a5c946c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c94460 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5607a5c94440 <col:14> 'int' 3
| |-EnumConstantDecl 0x5607a5c94510 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5607a5c946e0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c944f0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5607a5c944d0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5607a5c945a0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5607a5c946f8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c94580 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5607a5c94560 <col:13> 'int' 5
| `-EnumConstantDecl 0x5607a5c94630 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5607a5c94710 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5c94610 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5607a5c945f0 <col:14> 'int' 6
|-CXXMethodDecl 0x5607a5c94778 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5607a5c94818 <col:20>
| `-OptimizeNoneAttr 0x5607a5c94870 <col:30>
|-CXXMethodDecl 0x5607a5c94968 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5607a5c948a8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5607a5c94a10 <col:20>
| `-OptimizeNoneAttr 0x5607a5c94a68 <col:30>
|-CXXMethodDecl 0x5607a5c94ad8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5607a5c94c00 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5607a5c94d78 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5607a5c94cb0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5607a5c94e40 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5607a5c94f08 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5607a5c95048 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5607a5c94fb8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5607a5c950f0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5607a5c951f0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5607a5c953f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c951d0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5607a5c951b0 <col:23> 'int' 0
| |-EnumConstantDecl 0x5607a5c95280 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5607a5c95408 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c95260 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5607a5c95240 <col:45> 'int' 4
| |-EnumConstantDecl 0x5607a5c95310 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5607a5c95420 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c952f0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5607a5c952d0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5607a5c953a0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5607a5c95438 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5c95380 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5607a5c95360 <col:47> 'int' 16
|-CXXMethodDecl 0x5607a5c95498 <line:431:5, col:36> col:22 used dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5607a5c95608 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5607a5c95548 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5607a5c956b0 <col:20>
| `-OptimizeNoneAttr 0x5607a5c95708 <col:30>
|-CXXMethodDecl 0x5607a5c95758 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5607a5ca90e0 <col:18, col:36>
|   `-ReturnStmt 0x5607a5ca90d0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5607a5ca90b8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5607a5ca9098 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5607a5ca9068 <col:27> '<bound member function type>' ->xanno 0x5607a5c937b8
|           `-CXXThisExpr 0x5607a5ca9058 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5607a5c95850 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5607a5ca91f0 <col:30, col:48>
|   `-ReturnStmt 0x5607a5ca91e0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5607a5ca91c8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5607a5ca91a8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5607a5ca9178 <col:39> '<bound member function type>' ->xanno 0x5607a5c93618
|           `-CXXThisExpr 0x5607a5ca9168 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5607a5c95938 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5607a5ca9388 <col:24, col:50>
|   `-ReturnStmt 0x5607a5ca9378 <col:26, col:47>
|     `-UnaryOperator 0x5607a5ca9360 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5607a5ca9340 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5607a5ca9328 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5607a5ca92d8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5607a5c9e5f8
|         |   `-CXXMemberCallExpr 0x5607a5ca92b8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5607a5ca9288 <col:34> '<bound member function type>' ->xanno 0x5607a5c937b8
|         |       `-CXXThisExpr 0x5607a5ca9278 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5607a5ca9308 <col:46> 'int' 0
|-CXXMethodDecl 0x5607a5c95a40 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5607a5ca9558 <col:36, col:62>
|   `-ReturnStmt 0x5607a5ca9548 <col:38, col:59>
|     `-UnaryOperator 0x5607a5ca9530 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5607a5ca9510 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5607a5ca94f8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5607a5ca9470 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5607a5c9e5f8
|         |   `-CXXMemberCallExpr 0x5607a5ca9450 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5607a5ca9420 <col:46> '<bound member function type>' ->xanno 0x5607a5c93618
|         |       `-CXXThisExpr 0x5607a5ca9410 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5607a5ca94a0 <col:58> 'int' 0
|-CXXMethodDecl 0x5607a5c95b58 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5607a5ca96f0 <col:26, col:53>
|   `-ReturnStmt 0x5607a5ca96e0 <col:28, col:50>
|     `-UnaryOperator 0x5607a5ca96c8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5607a5ca96a8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5607a5ca9690 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5607a5ca9640 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5607a5c9e8f8
|         |   `-CXXMemberCallExpr 0x5607a5ca9620 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5607a5ca95f0 <col:36> '<bound member function type>' ->xanno 0x5607a5c937b8
|         |       `-CXXThisExpr 0x5607a5ca95e0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5607a5ca9670 <col:49> 'int' 0
|-CXXMethodDecl 0x5607a5c95c78 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5607a5ca98c8 <col:38, col:65>
|   `-ReturnStmt 0x5607a5ca98b8 <col:40, col:62>
|     `-UnaryOperator 0x5607a5ca98a0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5607a5ca9880 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5607a5ca9868 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5607a5ca97d8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5607a5c9e8f8
|         |   `-CXXMemberCallExpr 0x5607a5ca97b8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5607a5ca9788 <col:48> '<bound member function type>' ->xanno 0x5607a5c93618
|         |       `-CXXThisExpr 0x5607a5ca9778 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5607a5ca9808 <col:61> 'int' 0
|-CXXMethodDecl 0x5607a5c95e28 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5607a5c95d30 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5607a5ca9f98 <col:34, line:463:5>
|   |-ParenExpr 0x5607a5ca9de0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5607a5ca9db0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5ca9a18 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5ca99e8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5ca9938 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5ca9920 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5ca98e0 <col:23> 'int' lvalue ParmVar 0x5607a5c95d30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5ca9900 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5ca99c8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5ca9998 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5ca9958 <col:33> 'int' lvalue ParmVar 0x5607a5c95d30 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5607a5ca99b0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5607a5ca9978 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5607a5ca9a78 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5ca9a58 <col:56> 'int' 0
|   |   `-CallExpr 0x5607a5ca9d10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5607a5ca9cf8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5ca9cd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5ca9d50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5ca9b68 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5607a5ca9d68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5ca9b98 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5ca9d80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5ca9bd0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5607a5ca9d98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5ca9cc0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5ca9ca8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5ca9c68 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5607a5ca9f88 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5607a5ca9f70 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5607a5ca9f50 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5607a5ca9f20 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5607a5ca9ed0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5607a5c9e5f8
|         |   `-CXXMemberCallExpr 0x5607a5ca9eb0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5607a5ca9e80 <col:9> '<bound member function type>' ->xanno 0x5607a5c93618
|         |       `-CXXThisExpr 0x5607a5ca9e70 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5607a5ca9f38 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5607a5ca9f00 <col:21> 'int' lvalue ParmVar 0x5607a5c95d30 'i' 'int'
|-CXXMethodDecl 0x5607a5c96078 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5607a5c95ee8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5607a5c95f60 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5607a5caa628 <col:40, line:472:5>
|   |-ParenExpr 0x5607a5caa440 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5607a5caa410 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5caa0f0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5caa0c0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5caa010 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5ca9ff8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5ca9fb8 <col:23> 'int' lvalue ParmVar 0x5607a5c95ee8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5ca9fd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5caa0a0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5caa070 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5caa030 <col:33> 'int' lvalue ParmVar 0x5607a5c95ee8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5607a5caa088 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5607a5caa050 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5607a5caa150 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5caa130 <col:56> 'int' 0
|   |   `-CallExpr 0x5607a5caa370 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5607a5caa358 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5caa338 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5caa3b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caa1c0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5607a5caa3c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caa1f0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5caa3e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5caa228 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5607a5caa3f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5caa320 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5caa308 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5caa2c8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5607a5caa608 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5607a5caa5b0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5607a5caa580 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5607a5caa530 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5607a5c9e5f8
|     | |   `-CXXMemberCallExpr 0x5607a5caa510 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5607a5caa4e0 <col:2> '<bound member function type>' ->xanno 0x5607a5c937b8
|     | |       `-CXXThisExpr 0x5607a5caa4d0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5607a5caa598 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5607a5caa560 <col:14> 'int' lvalue ParmVar 0x5607a5c95ee8 'i' 'int'
|     `-ImplicitCastExpr 0x5607a5caa5f0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5caa5d0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5607a5c95f60 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5607a5c96238 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5607a5c96140 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5607a5caada8 <col:36, line:485:5>
|   |-ParenExpr 0x5607a5caab10 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5caaae0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5caa7c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5caa790 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5caa6a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5caa688 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5caa648 <col:23> 'int' lvalue ParmVar 0x5607a5c96140 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5caa668 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5caa770 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5caa758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5caa6c0 <col:33> 'int' lvalue ParmVar 0x5607a5c96140 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5caa738 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5caa720 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5caa6e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5caa700 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5607a5caa820 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5caa800 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5caaa40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5caaa28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5caaa08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5caaa80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caa890 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5607a5caaa98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caa8c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5caaab0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5caa900 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5607a5caaac8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5caa9f0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5caa9d8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5caa998 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5607a5caad98 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5607a5caad80 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5607a5caad68 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5607a5caad38 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5607a5caacd8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5607a5caaca8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5607a5caac20 <col:61, col:70> 'char const[48]' lvalue ->c 0x5607a5c9e4d0
|             |   `-CXXMemberCallExpr 0x5607a5caac00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5607a5caabd0 <col:61> '<bound member function type>' ->xanno 0x5607a5c93618
|             |       `-CXXThisExpr 0x5607a5caabc0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5607a5caacc0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5607a5caac50 <col:74> 'int' lvalue ParmVar 0x5607a5c96140 'i' 'int'
|-CXXMethodDecl 0x5607a5c96488 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5607a5c962f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5607a5c96370 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5607a5cab4f8 <col:42, line:500:5>
|   |-ParenExpr 0x5607a5cab290 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cab260 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5caaf40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5caaf10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5caae20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5caae08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5caadc8 <col:23> 'int' lvalue ParmVar 0x5607a5c962f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5caade8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5caaef0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5caaed8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5caae40 <col:33> 'int' lvalue ParmVar 0x5607a5c962f8 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5caaeb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5caaea0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5caae60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5caae80 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5607a5caafa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5caaf80 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cab1c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cab1a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cab188 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cab200 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cab010 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5607a5cab218 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cab048 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cab230 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cab080 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5607a5cab248 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cab170 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cab158 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cab118 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5607a5cab4d8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5607a5cab488 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5607a5cab458 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5607a5cab400 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5607a5cab3d0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5607a5cab380 <col:48, col:57> 'char [48]' lvalue ->c 0x5607a5c9e4d0
|     |     |   `-CXXMemberCallExpr 0x5607a5cab360 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5607a5cab330 <col:48> '<bound member function type>' ->xanno 0x5607a5c937b8
|     |     |       `-CXXThisExpr 0x5607a5cab320 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5607a5cab3e8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5607a5cab3b0 <col:61> 'int' lvalue ParmVar 0x5607a5c962f8 'i' 'int'
|     `-ImplicitCastExpr 0x5607a5cab4c0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5cab4a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5607a5c96370 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5607a5c96648 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5607a5c96550 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5607a5cabc58 <col:35, line:513:5>
|   |-ParenExpr 0x5607a5cab968 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cab938 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cab690 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cab660 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cab570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cab558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cab518 <col:23> 'int' lvalue ParmVar 0x5607a5c96550 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cab538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cab640 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cab628 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cab590 <col:33> 'int' lvalue ParmVar 0x5607a5c96550 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cab608 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cab5f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cab5b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cab5d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5607a5cab6f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cab6d0 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cab898 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cab880 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cab860 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cab8d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cab760 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5607a5cab8f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cab798 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cab908 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cab7d0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5607a5cab920 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cab848 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cab830 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cab7f0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5607a5cabc48 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5607a5cabc30 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5607a5cabc18 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5607a5cabbe8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5607a5cabb60 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5607a5cabb30 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5607a5cabae0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5607a5c9e4d0
|             |   `-CXXMemberCallExpr 0x5607a5cabac0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5607a5caba90 <col:60> '<bound member function type>' ->xanno 0x5607a5c93618
|             |       `-CXXThisExpr 0x5607a5caba80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5607a5cabb48 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5607a5cabb10 <col:73> 'int' lvalue ParmVar 0x5607a5c96550 'i' 'int'
|-CXXMethodDecl 0x5607a5c96898 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5607a5c96708 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5607a5c96780 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5607a5cac378 <col:41, line:528:5>
|   |-ParenExpr 0x5607a5cac100 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cac0d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cabdf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cabdc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cabcd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cabcb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cabc78 <col:23> 'int' lvalue ParmVar 0x5607a5c96708 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cabc98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cabda0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cabd88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cabcf0 <col:33> 'int' lvalue ParmVar 0x5607a5c96708 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cabd68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cabd50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cabd10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cabd30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5607a5cabe50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cabe30 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cac030 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cac018 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cabff8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cac070 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cabec0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5607a5cac088 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cabef8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cac0a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cabf30 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5607a5cac0b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cabfe0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cabfc8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cabf88 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5607a5cac358 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5607a5cac308 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5607a5cac2d8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5607a5cac280 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5607a5cac240 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5607a5cac1f0 <col:47, col:56> 'char [48]' lvalue ->c 0x5607a5c9e4d0
|     |     |   `-CXXMemberCallExpr 0x5607a5cac1d0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5607a5cac1a0 <col:47> '<bound member function type>' ->xanno 0x5607a5c937b8
|     |     |       `-CXXThisExpr 0x5607a5cac190 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5607a5cac258 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5607a5cac220 <col:60> 'int' lvalue ParmVar 0x5607a5c96708 'i' 'int'
|     `-ImplicitCastExpr 0x5607a5cac340 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5cac320 <col:65> 'int16_t':'short' lvalue ParmVar 0x5607a5c96780 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5607a5c96a58 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5607a5c96960 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5607a5caca48 <col:36, line:541:5>
|   |-ParenExpr 0x5607a5cac7e8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cac7b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cac510 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cac4e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cac3f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cac3d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cac398 <col:23> 'int' lvalue ParmVar 0x5607a5c96960 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cac3b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cac4c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cac4a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cac410 <col:33> 'int' lvalue ParmVar 0x5607a5c96960 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cac488 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cac470 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cac430 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cac450 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5607a5cac570 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cac550 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cac718 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cac700 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cac6e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cac758 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cac5e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5607a5cac770 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cac618 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cac788 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cac650 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5607a5cac7a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cac6c8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cac6b0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cac670 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5607a5caca38 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5607a5caca20 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5607a5caca08 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5607a5cac9d8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5607a5cac980 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5607a5cac950 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5607a5cac900 <col:61, col:70> 'char const[48]' lvalue ->c 0x5607a5c9e4d0
|             |   `-CXXMemberCallExpr 0x5607a5cac8e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5607a5cac8b0 <col:61> '<bound member function type>' ->xanno 0x5607a5c93618
|             |       `-CXXThisExpr 0x5607a5cac8a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5607a5cac968 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5607a5cac930 <col:74> 'int' lvalue ParmVar 0x5607a5c96960 'i' 'int'
|-CXXMethodDecl 0x5607a5c96c28 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5607a5c96b18 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5607a5c96b90 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5607a5c96cd8 <col:20>
| `-OptimizeNoneAttr 0x5607a5c96d30 <col:30>
|-CXXMethodDecl 0x5607a5c96e68 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5607a5c96d70 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5607a5cad118 <col:35, line:562:5>
|   |-ParenExpr 0x5607a5caceb8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cace88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cacbe0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cacbb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cacac0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cacaa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5caca68 <col:23> 'int' lvalue ParmVar 0x5607a5c96d70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5caca88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cacb90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cacb78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cacae0 <col:33> 'int' lvalue ParmVar 0x5607a5c96d70 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cacb58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cacb40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cacb00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cacb20 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5607a5cacc40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cacc20 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cacde8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cacdd0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cacdb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cace28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caccb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5607a5cace40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cacce8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cace58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cacd20 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5607a5cace70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cacd98 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cacd80 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cacd40 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5607a5cad108 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5607a5cad0f0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5607a5cad0d8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5607a5cad0a8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5607a5cad050 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5607a5cad020 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5607a5cacfd0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5607a5c9e4d0
|             |   `-CXXMemberCallExpr 0x5607a5cacfb0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5607a5cacf80 <col:60> '<bound member function type>' ->xanno 0x5607a5c93618
|             |       `-CXXThisExpr 0x5607a5cacf70 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5607a5cad038 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5607a5cad000 <col:73> 'int' lvalue ParmVar 0x5607a5c96d70 'i' 'int'
|-CXXMethodDecl 0x5607a5c97078 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5607a5c96f28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5607a5c96fa0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5607a5cad7f8 <col:41, line:577:5>
|   |-ParenExpr 0x5607a5cad588 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cad558 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cad2b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cad280 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cad190 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cad178 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cad138 <col:23> 'int' lvalue ParmVar 0x5607a5c96f28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cad158 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cad260 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cad248 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cad1b0 <col:33> 'int' lvalue ParmVar 0x5607a5c96f28 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cad228 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cad210 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cad1d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cad1f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5607a5cad310 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cad2f0 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cad4b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cad4a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cad480 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cad4f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cad380 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5607a5cad510 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cad3b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cad528 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cad3f0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5607a5cad540 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cad468 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cad450 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cad410 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5607a5cad7d8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5607a5cad788 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5607a5cad758 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5607a5cad6f8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5607a5cad6c8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5607a5cad678 <col:47, col:56> 'char [48]' lvalue ->c 0x5607a5c9e4d0
|     |     |   `-CXXMemberCallExpr 0x5607a5cad658 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5607a5cad628 <col:47> '<bound member function type>' ->xanno 0x5607a5c937b8
|     |     |       `-CXXThisExpr 0x5607a5cad618 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5607a5cad6e0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5607a5cad6a8 <col:60> 'int' lvalue ParmVar 0x5607a5c96f28 'i' 'int'
|     `-ImplicitCastExpr 0x5607a5cad7c0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5cad7a0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5607a5c96fa0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5607a5c97238 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5607a5c97140 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5607a5cadf28 <col:36, line:591:5>
|   |-ParenExpr 0x5607a5cadc68 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cadc38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cad990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cad960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cad870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cad858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cad818 <col:23> 'int' lvalue ParmVar 0x5607a5c97140 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cad838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cad940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cad928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cad890 <col:33> 'int' lvalue ParmVar 0x5607a5c97140 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cad908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cad8f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cad8b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cad8d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5607a5cad9f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cad9d0 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cadb98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cadb80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cadb60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cadbd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cada60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5607a5cadbf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cada98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cadc08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cadad0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5607a5cadc20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cadb48 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cadb30 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cadaf0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5607a5cadf18 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5607a5cadf00 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5607a5cadee8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5607a5cadeb8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5607a5cade30 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5607a5cade00 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5607a5caddb0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5607a5c9e4d0
|             |   `-CXXMemberCallExpr 0x5607a5cadd90 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5607a5cadd60 <col:61> '<bound member function type>' ->xanno 0x5607a5c93618
|             |       `-CXXThisExpr 0x5607a5cadd50 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5607a5cade18 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5607a5cadde0 <col:74> 'int' lvalue ParmVar 0x5607a5c97140 'i' 'int'
|-CXXMethodDecl 0x5607a5c97488 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5607a5c972f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5607a5c97370 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5607a5cae608 <col:42, line:606:5>
|   |-ParenExpr 0x5607a5cae398 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5607a5cae368 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cae0c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cae090 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cadfa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cadf88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cadf48 <col:23> 'int' lvalue ParmVar 0x5607a5c972f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cadf68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cae070 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5607a5cae058 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cadfc0 <col:33> 'int' lvalue ParmVar 0x5607a5c972f8 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cae038 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cae020 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cadfe0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5607a5cae000 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5607a5cae120 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cae100 <col:60> 'int' 0
|   |   `-CallExpr 0x5607a5cae2c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5607a5cae2b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5cae290 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5cae308 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cae190 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5607a5cae320 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cae1c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5cae338 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cae200 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5607a5cae350 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5cae278 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5cae260 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5cae220 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5607a5cae5e8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5607a5cae598 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5607a5cae568 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5607a5cae508 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5607a5cae4d8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5607a5cae488 <col:48, col:57> 'char [48]' lvalue ->c 0x5607a5c9e4d0
|     |     |   `-CXXMemberCallExpr 0x5607a5cae468 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5607a5cae438 <col:48> '<bound member function type>' ->xanno 0x5607a5c937b8
|     |     |       `-CXXThisExpr 0x5607a5cae428 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5607a5cae4f0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5607a5cae4b8 <col:61> 'int' lvalue ParmVar 0x5607a5c972f8 'i' 'int'
|     `-ImplicitCastExpr 0x5607a5cae5d0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5607a5cae5b0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5607a5c97370 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5607a5c97620 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5607a5c97550 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5607a5caee78 <col:33, line:620:5>
|   |-ParenExpr 0x5607a5caebf0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5607a5caebc0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5cae810 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5cae7e0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5cae680 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5cae668 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5cae628 <col:23> 'int' lvalue ParmVar 0x5607a5c97550 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5cae648 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5cae7c0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5607a5cae7a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5cae6a0 <col:33> 'int' lvalue ParmVar 0x5607a5c97550 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5cae788 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5cae770 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5cae6c0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5607a5cae748 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5607a5cae730 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5607a5cae6f8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5607a5cae870 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5cae850 <col:79> 'int' 0
|   |   `-CallExpr 0x5607a5caeb20 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5607a5caeb08 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5caeae8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5caeb60 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cae958 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5607a5caeb78 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5cae9a0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5caeb90 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5cae9d8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5607a5caeba8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5caead0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5caeab8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5caea78 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5607a5caee68 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5607a5caee50 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5607a5caee38 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5607a5caee08 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5607a5caed80 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5607a5caed50 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5607a5caed00 <col:67, col:76> 'char const[48]' lvalue ->c 0x5607a5c9e4d0
|             |   `-CXXMemberCallExpr 0x5607a5caece0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5607a5caecb0 <col:67> '<bound member function type>' ->xanno 0x5607a5c93618
|             |       `-CXXThisExpr 0x5607a5caeca0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5607a5caed68 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5607a5caed30 <col:80> 'int' lvalue ParmVar 0x5607a5c97550 'i' 'int'
|-CXXMethodDecl 0x5607a5c97838 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5607a5c976e0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5607a5c97760 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5607a5caf6a0 <col:45, line:635:5>
|   |-ParenExpr 0x5607a5caf3e8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5607a5caf3b8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5607a5caf080 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5607a5caf050 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5607a5caeef0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5607a5caeed8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5607a5caee98 <col:23> 'int' lvalue ParmVar 0x5607a5c976e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5607a5caeeb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5607a5caf030 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5607a5caf018 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5607a5caef10 <col:33> 'int' lvalue ParmVar 0x5607a5c976e0 'i' 'int'
|   |   |     `-BinaryOperator 0x5607a5caeff8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5607a5caefe0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5607a5caef30 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5607a5c93a00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5607a5caefb8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5607a5caefa0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5607a5caef68 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5607a5caf0e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5607a5caf0c0 <col:79> 'int' 0
|   |   `-CallExpr 0x5607a5caf318 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5607a5caf300 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5607a5caf2e0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5607a58002d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5607a5caf358 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caf150 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5607a5caf370 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5607a5caf198 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5607a5caf388 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5607a5caf1d0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5607a5caf3a0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5607a5caf2c8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5607a5caf2b0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5607a5caf268 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5607a5caf680 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5607a5caf5e8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5607a5caf5b8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5607a5caf558 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5607a5caf528 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5607a5caf4d8 <col:54, col:63> 'char [48]' lvalue ->c 0x5607a5c9e4d0
|     |     |   `-CXXMemberCallExpr 0x5607a5caf4b8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5607a5caf488 <col:54> '<bound member function type>' ->xanno 0x5607a5c937b8
|     |     |       `-CXXThisExpr 0x5607a5caf478 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5607a5caf540 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5607a5caf508 <col:67> 'int' lvalue ParmVar 0x5607a5c976e0 'i' 'int'
|     `-CXXConstCastExpr 0x5607a5caf650 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5607a5caf638 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5607a5caf600 <col:91> 'const void *' lvalue ParmVar 0x5607a5c97760 'x' 'const void *'
|-CXXMethodDecl 0x5607a5c97908 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5607a5caf728 <col:34, line:640:5>
|   `-ReturnStmt 0x5607a5caf718 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5607a5caf700 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5607a5caf6d0 <col:16> 'Packet *' lvalue ->_data_packet 0x5607a5c9f088
|         `-CXXThisExpr 0x5607a5caf6c0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5607a5c97a48 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5607a5c979b8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5607a5ca87e8 <col:46> 'bool' true
|-CXXMethodDecl 0x5607a5c97bc8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5607a5c97b00 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5607a5c97c70 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5607a5c98420 <line:660:22> "" ""
| |-EnumConstantDecl 0x5607a5c97d70 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c98490 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c97d50 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5607a5c97d30 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5607a5c8ced0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5607a5c97e00 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c984a8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c97de0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5607a5c97dc0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5607a5c8cf60 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5607a5c97e90 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c984c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c97e70 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5607a5c97e50 <col:21> 'int' 0
| |-EnumConstantDecl 0x5607a5c97f20 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c984d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c97f00 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5607a5c97ee0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5607a5c97fb0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c984f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c97f90 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5607a5c97f70 <col:21> 'int' 16
| |-EnumConstantDecl 0x5607a5c98040 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c98508 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c98020 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5607a5c98000 <col:19> 'int' 32
| |-EnumConstantDecl 0x5607a5c980d0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c98520 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c980b0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5607a5c98090 <col:19> 'int' EnumConstant 0x5607a5c97f20 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5607a5c98160 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c98538 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c98140 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5607a5c98120 <col:19> 'int' EnumConstant 0x5607a5c98040 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5607a5c98230 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c98550 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c98210 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5607a5c981f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5607a5c981b0 <col:23> 'int' EnumConstant 0x5607a5c98160 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5607a5c981d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5607a5c98300 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5607a5c98568 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5607a5c982e0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5607a5c982c0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5607a5c98280 <col:23> 'int' EnumConstant 0x5607a5c98160 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5607a5c982a0 <col:40> 'int' 4
| `-EnumConstantDecl 0x5607a5c983d0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5607a5c98580 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5607a5c983b0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5607a5c98390 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5607a5c98350 <col:23> 'int' EnumConstant 0x5607a5c98160 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5607a5c98370 <col:40> 'int' 8
|-CXXMethodDecl 0x5607a5c985c0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5607a5c98660 <col:68> "" ""
|-CXXMethodDecl 0x5607a5c986f8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5607a5c98798 <col:45> "" ""
|-CXXMethodDecl 0x5607a5c98830 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5607a5c988d0 <col:57> "" ""
|-CXXMethodDecl 0x5607a5c98968 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5607a5c98a08 <col:45> "" ""
|-CXXMethodDecl 0x5607a5c98aa0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5607a5c98b40 <col:57> "" ""
|-CXXMethodDecl 0x5607a5c98bd0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5607a5c98c70 <col:51> "" ""
|-CXXMethodDecl 0x5607a5c98d00 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5607a5c98da0 <col:63> "" ""
|-CXXMethodDecl 0x5607a5c98e30 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5607a5c98ed0 <col:53> "" ""
|-CXXMethodDecl 0x5607a5c98f60 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5607a5c99000 <col:65> "" ""
|-CXXMethodDecl 0x5607a5c99118 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5607a5c99088 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5607a5c991c0 <col:61> "" ""
|-CXXMethodDecl 0x5607a5c99358 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5607a5c99248 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5607a5c992c0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5607a5c99408 <col:67> "" ""
|-CXXMethodDecl 0x5607a5c99520 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5607a5c99490 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5607a5c995c8 <col:63> "" ""
|-CXXMethodDecl 0x5607a5c99760 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5607a5c99650 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5607a5c996c8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5607a5c99810 <col:69> "" ""
|-CXXMethodDecl 0x5607a5c99928 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5607a5c99898 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5607a5c999d0 <col:63> "" ""
|-CXXMethodDecl 0x5607a5c9c0a8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5607a5c9bf98 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5607a5c9c010 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5607a5c9c158 <col:69> "" ""
|-CXXMethodDecl 0x5607a5c9c270 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9c1e0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5607a5c9c318 <col:62> "" ""
|-CXXMethodDecl 0x5607a5c9c4b0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5607a5c9c3a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5607a5c9c418 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5607a5c9c560 <col:68> "" ""
|-CXXMethodDecl 0x5607a5c9c678 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9c5e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5607a5c9c720 <col:63> "" ""
|-CXXMethodDecl 0x5607a5c9c8b8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5607a5c9c7a8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5607a5c9c820 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5607a5c9c968 <col:69> "" ""
|-CXXMethodDecl 0x5607a5c9c9f8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5607a5c9ca98 <col:64> "" ""
|-CXXMethodDecl 0x5607a5c9cb28 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5607a5c9cbc8 <col:52> "" ""
|-CXXMethodDecl 0x5607a5c9cc58 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5607a5c9ccf8 <col:67> "" ""
|-CXXMethodDecl 0x5607a5c9cd88 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5607a5c9ce28 <col:55> "" ""
|-CXXMethodDecl 0x5607a5c9cf40 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9ceb0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5607a5c9cfe8 <col:58> "" ""
|-CXXMethodDecl 0x5607a5c9d180 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5607a5c9d070 <col:33> col:36 'int'
| |-ParmVarDecl 0x5607a5c9d0e8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5607a5c9d230 <col:62> "" ""
|-CXXMethodDecl 0x5607a5c9d348 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9d2b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5607a5c9d3f0 <col:58> "" ""
|-CXXMethodDecl 0x5607a5c9d588 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5607a5c9d478 <col:33> col:36 'int'
| |-ParmVarDecl 0x5607a5c9d4f0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5607a5c9d638 <col:62> "" ""
|-CXXMethodDecl 0x5607a5c9d750 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9d6c0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5607a5c9d7f8 <col:60> "" ""
|-CXXMethodDecl 0x5607a5c9d990 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5607a5c9d880 <col:34> col:37 'int'
| |-ParmVarDecl 0x5607a5c9d8f8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5607a5c9da40 <col:64> "" ""
|-CXXMethodDecl 0x5607a5c9db58 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9dac8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5607a5c9dc00 <col:58> "" ""
|-CXXMethodDecl 0x5607a5c9dd98 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5607a5c9dc88 <col:33> col:36 'int'
| |-ParmVarDecl 0x5607a5c9dd00 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5607a5c9de48 <col:62> "" ""
|-CXXMethodDecl 0x5607a5c9df60 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5607a5c9ded0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5607a5c9e008 <col:59> "" ""
|-CXXMethodDecl 0x5607a5c9e1a0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5607a5c9e090 <col:33> col:36 'int'
| |-ParmVarDecl 0x5607a5c9e108 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5607a5c9e250 <col:63> "" ""
|-AccessSpecDecl 0x5607a5c9e2c0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5607a5c9e2e8 prev 0x5607a5c934f0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5607a5c9e3e0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5607a5c9e4d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5607a5c9e5f8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5607a5c9e778 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5607a5c9e8f8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5607a5c9ea78 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5607a5caf8a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5607a5cb0118 <col:11>
| |-CXXDestructorDecl 0x5607a5caf980 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5607a5cafab8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5607a5cafab8
| | `-ParmVarDecl 0x5607a5cafbc8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5607a5cafc68 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5607a5cafc68
| | `-ParmVarDecl 0x5607a5cafd78 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5607a5cb2b38 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5607a5cb2c48 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5607a5cb2ec8 <col:11>
| |   `-ReturnStmt 0x5607a5cb2eb8 <col:11>
| |     `-UnaryOperator 0x5607a5cb2ea0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5607a5cb2e90 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5607a5cb2cb8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5607a5cb2cb8
|   `-ParmVarDecl 0x5607a5cb2dc8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5607a5c9eae0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5607a5c9ebf8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5607a5c9ec98 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5607a5c9ed00 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5607a5c9ed68 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5607a5c9edd0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5607a5c9ee30 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5607a5c9eef0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5607a5c9ef50 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5607a5c9efb0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5607a5caf7b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5607a5c9ec98 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5607a5cb0128 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5607a5cb0180 <col:12>
| |-CXXConstructorDecl 0x5607a5cafde8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5607a5cafde8
| | `-ParmVarDecl 0x5607a5cafef8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5607a5caff98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5607a5caff98
| | `-ParmVarDecl 0x5607a5cb00a8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5607a5cb2220 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5607a5c9f028 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5607a5c9f088 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5607a5c9f0f0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5607a5c9f158 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5607a5c9f1c0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5607a5c9f228 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5607a5c9f288 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5607a5c9f2e8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5607a5c9f350 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5607a5c9f3d8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5607a5c9f028 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5607a5caf750 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5607a5c9f288 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5607a5cb0190 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5607a5cb01f0 <col:21, line:755:5>
|-CXXConstructorDecl 0x5607a5c9f578 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5607a5c9f4b8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5607a5c9f670 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5607a5c9f858 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5607a5c9f760 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5607a5c9fb28 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5607a5c9f910 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5607a5c9f988 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5607a5c9fa00 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5c9fd48 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5607a5c9fbf8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5607a5c9fc70 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5607a5ca8328 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5607a5c9fe08 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5607a5c9fe80 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5607a5c9fef8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5607a5ca8480 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5607a5ca83f0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5607a5ca85c8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5607a5ca8538 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5607a5ca86c0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5607a5d3b360 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x5607a5d66ae0 <line:167:18>
|-CXXRecordDecl 0x5607a5d66ba0 prev 0x5607a5d3b360 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5607a5d66cb0 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.3 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.3 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<20>
         0 |   char [20] x
           | [sizeof=20, dsize=20, align=1,
           |  nvsize=20, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5607a5c47ca0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 20
|-PackedAttr 0x5607a5d9f768 <line:167:18>
|-CXXRecordDecl 0x5607a5d9f828 prev 0x5607a5c47ca0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5607a5d9f938 <line:166:5, col:13> col:10 x 'char [20]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [20 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [20 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
