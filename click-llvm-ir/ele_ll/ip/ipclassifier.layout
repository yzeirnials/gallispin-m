
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:35:5)
         0 |   unsigned char [4] c
         0 |   uint32_t u
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:39:5)
         0 |   unsigned char [4] c
         0 |   uint32_t u
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Classification::Wordwise::Insn
         0 |   uint16_t offset
         2 |   uint8_t padding
         3 |   uint8_t short_output
         4 |   union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:35:5) mask
         4 |     unsigned char [4] c
         4 |     uint32_t u
         8 |   union Classification::Wordwise::Insn::(anonymous at ../elements/standard/classification.hh:39:5) value
         8 |     unsigned char [4] c
         8 |     uint32_t u
        12 |   int32_t [2] j
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168af9d3a8 prev 0x56168ae95548 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168af9d4a0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56168af9d530 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56168af9d5a8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56168af9d668 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56168af9d730 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56168af9d8a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56168af9d7e0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56168af9d950 <col:24>
| `-OptimizeNoneAttr 0x56168af9d9a8 <col:34>
|-CXXMethodDecl 0x56168af9d9f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56168af9dca8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56168af9daa0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56168af9db18 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56168af9db98 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56168af9dd60 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56168af9dd98 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56168af9de00 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56168af9de88 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56168af9e1a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56168af9df40 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56168af9dfb8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56168af9e030 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56168af9e0b0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56168af9e2c0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56168afa5c58 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56168afa5c58
| `-ParmVarDecl 0x56168afa5d68 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56168afa5e08 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56168afa5e08
| `-ParmVarDecl 0x56168afa5f18 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56168aec0fc8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168abfec98 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168abfedb8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56168abfee48 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56168abfef18 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56168abff000 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56168abffeb8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56168abffd60 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac00068 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56168abfff70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56168ac001b0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56168ac00120 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56168ac002f8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56168ac00268 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac00440 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56168ac003b0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac00508 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x56168ac00688 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x56168ac005c0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56168ac00750 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x56168ac00898 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56168ac00808 <col:28> col:31 'int'
|-CXXMethodDecl 0x56168ac00a18 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56168ac00950 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac00b60 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56168ac00ad0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac00c28 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56168ac00e68 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56168ac00cd8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56168ac00d50 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac010b8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56168ac00f28 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168ac00fa0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168ac01168 <col:86> "" ""
|-CXXMethodDecl 0x56168ac013d8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56168ac01248 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56168ac012c0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac01588 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56168ac01498 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56168ac01738 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56168ac01640 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56168ac01a08 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56168ac017f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56168ac01868 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56168ac018e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac01d70 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56168ac01ad0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56168ac01b48 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168ac01bc0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168ac01e28 <col:115> "" ""
|-AccessSpecDecl 0x56168ac01e98 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56168ac01ed0 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168ac02378 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56168ac02378
| `-ParmVarDecl 0x56168ac02488 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56168ac02528 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56168ac02528
| `-ParmVarDecl 0x56168ac02638 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56168ac49e88 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56168aefe2b0 <col:7>
|-CXXConstructorDecl 0x56168ac49f60 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56168ac49f60
| `-ParmVarDecl 0x56168ac4a078 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56168ac4a0e8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56168ac4a0e8
| `-ParmVarDecl 0x56168ac4a1f8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56168af00c20 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b046470 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x56168b046648 prev 0x56168b046470 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56168b0466d8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56168b046700 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0482d0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x56168b048280 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x56168b046bb0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x56168b046ab0 'type'
|     `-TemplateSpecializationType 0x56168b046a40 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56168b046920 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x56168b046900 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56168b0468e0 <col:24> 'unsigned long' 8
|       `-RecordType 0x56168b046a20 'char_array<8>'
|         `-ClassTemplateSpecialization 0x56168b046940 'char_array'
|-TypedefDecl 0x56168b048388 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x56168b048350 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x56168b048330 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x56168b0482d0 'type'
|     `-ElaboratedType 0x56168b048280 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x56168b046bb0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x56168b046ab0 'type'
|         `-TemplateSpecializationType 0x56168b046a40 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56168b046920 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x56168b046900 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56168b0468e0 <col:24> 'unsigned long' 8
|           `-RecordType 0x56168b046a20 'char_array<8>'
|             `-ClassTemplateSpecialization 0x56168b046940 'char_array'
|-CXXMethodDecl 0x56168b048508 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x56168b048418 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x56168b0485f8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56168b0486d8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56168b0486d8
|-CXXMethodDecl 0x56168b0489a8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56168b0488b0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x56168b048be8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56168b048a60 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b048ad8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b048db8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56168b048ca8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b048d20 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b048f18 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56168b048fe8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x56168b049238 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56168b0490a8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56168b049120 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b049498 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x56168b049308 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x56168b049380 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b049658 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56168b049568 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b049818 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x56168b049720 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b0498d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b049980 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b049bb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x56168b049a30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b049aa8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x56168b049e58 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x56168b049d60 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x56168b049f20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x56168b049f70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56168b049fc0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b0a2868 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x56168b0b1688 prev 0x56168b0a2868 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b0b26a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56168b0b2650 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x56168b0b2630 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x56168b0b24e0 'type'
|     `-SubstTemplateTypeParmType 0x56168b046040 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168b045b90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56168b045aa8 'sized_array_memory'
|-FieldDecl 0x56168b0b27a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56168b0b27f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b0b2828 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-PointerType 0x56168af74d20 'Element *'
|     `-RecordType 0x56168af74ac0 'Element'
|       `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b28e8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x56168b0b28b0 'Element *&'
|   `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168af74d20 'Element *'
|       `-RecordType 0x56168af74ac0 'Element'
|         `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b29a8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x56168b0b2970 'Element *const &'
|   `-QualType 0x56168b0b1721 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af74d20 'Element *'
|         `-RecordType 0x56168af74ac0 'Element'
|           `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b2a38 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x56168b0b2a00 'Element **'
|   `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168af74d20 'Element *'
|       `-RecordType 0x56168af74ac0 'Element'
|         `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b2af8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x56168b0b2ac0 'Element *const *'
|   `-QualType 0x56168b0b1721 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af74d20 'Element *'
|         `-RecordType 0x56168af74ac0 'Element'
|           `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b36d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x56168b0b3680 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x56168b0b3660 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x56168b0b35f0 'type'
|     `-SubstTemplateTypeParmType 0x56168b0b33b0 'Element *' sugar
|       |-TemplateTypeParmType 0x56168acf3870 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168acf3820 'T'
|       `-PointerType 0x56168af74d20 'Element *'
|         `-RecordType 0x56168af74ac0 'Element'
|           `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b3738 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x56168b0b2970 'Element *const &'
|   `-QualType 0x56168b0b1721 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af74d20 'Element *'
|         `-RecordType 0x56168af74ac0 'Element'
|           `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b3790 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0b37f8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x56168b0b2a00 'Element **'
|   `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168af74d20 'Element *'
|       `-RecordType 0x56168af74ac0 'Element'
|         `-CXXRecord 0x56168af7e750 'Element'
|-TypedefDecl 0x56168b0b3860 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x56168b0b2ac0 'Element *const *'
|   `-QualType 0x56168b0b1721 'Element *const' const
|     `-SubstTemplateTypeParmType 0x56168b0b1720 'Element *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af74d20 'Element *'
|         `-RecordType 0x56168af74ac0 'Element'
|           `-CXXRecord 0x56168af7e750 'Element'
|-EnumDecl 0x56168b0b38b8 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b0b39b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b0b3990 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b0b3a38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b0b3cc8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0b3af0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0b3b90 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x56168b0b3f58 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x56168b0b3e40 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x56168b0b4218 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x56168b0b4100 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x56168b0b4530 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x56168b0b4410 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x56168b0b4840 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x56168b0b4720 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x56168b0b4b30 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0b4978 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0b49f0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56168b0b4c88 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x56168b0b4d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0b4dc0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0b4e08 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x56168b0b4eb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0b4f10 <col:30> Inherited
|-CXXMethodDecl 0x56168b0b4fd8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0b5088 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0b50e0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0b5128 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0b51d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0b5230 <col:30> Inherited
|-CXXMethodDecl 0x56168b0b5278 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0b5328 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0b5380 <col:30> Inherited
|-CXXMethodDecl 0x56168b0b53c8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0b5478 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0b54d0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0b54f8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0b55a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0b5658 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b0b5818 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0b5708 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0b5780 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56168b0b5968 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0b58d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0b5b18 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x56168b0b5a20 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0b5bd0 <col:20>
| `-OptimizeNoneAttr 0x56168b0b5c28 <col:30>
|-CXXMethodDecl 0x56168b0b5d48 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b0b5c50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0b5e00 <col:20>
| `-OptimizeNoneAttr 0x56168b0b5e58 <col:30>
|-CXXMethodDecl 0x56168b0b5f10 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0b5e80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0b6058 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0b5fc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0b6188 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x56168b0b62b8 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x56168b0b6388 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x56168b0b6458 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x56168b0b6598 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0b6508 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0b66e0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0b6650 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0b6828 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b0b6798 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0b68e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b0b69e0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b0b6950 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0b6a98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b0b6b58 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x56168b0b6c58 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x56168b0b6dd8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0b6d18 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x56168b0b7598 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b0b6e90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x56168b0b74f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x56168b0b73f8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x56168b0b7678 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b0b77c8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0b7738 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56168b0b7880 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b0bcf10 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0b7940 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x56168b0b79b8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x56168b0bd0d8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x56168b0bcfe0 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x56168b0bd328 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x56168b0bd1a0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x56168b0bd218 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x56168b0bd3e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0bd648 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x56168b0bd550 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x56168b0bd718 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b0bd718

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168ac25fe0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56168ac28300 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56168ac283a0 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56168ac28400 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56168ac28460 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56168ac28510 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168ac28820 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168ac28938 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56168ac289e0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56168ac28a48 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56168ac28ad8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56168ac2ca20 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56168ac2ce58 <col:12>
|-CXXConstructorDecl 0x56168ac2cb28 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168ac2cc38 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56168ac289e0 'data' 'const char *'
| | `-ImplicitCastExpr 0x56168ac2fb10 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56168ac2fae0 <col:12> 'const char *const' lvalue .data 0x56168ac289e0
| |     `-DeclRefExpr 0x56168ac2fac0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac2cc38 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56168ac28a48 'length' 'int'
| | `-ImplicitCastExpr 0x56168ac2fba0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56168ac2fb70 <col:12> 'const int' lvalue .length 0x56168ac28a48
| |     `-DeclRefExpr 0x56168ac2fb50 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac2cc38 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56168ac28ad8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56168ac2fc30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56168ac2fc00 <col:12> 'String::memo_t *const' lvalue .memo 0x56168ac28ad8
| |     `-DeclRefExpr 0x56168ac2fbe0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac2cc38 '' 'const String::rep_t &'
| `-CompoundStmt 0x56168ac2fc88 <col:12>
|-CXXConstructorDecl 0x56168ac2ccd8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56168ac2ccd8
| `-ParmVarDecl 0x56168ac2cde8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56168ac35670 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56168ac40fd8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168ac410e8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56168ac41600 <col:12>
|   |-BinaryOperator 0x56168ac41418 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56168ac413d0 <col:12> 'const char *' lvalue ->data 0x56168ac289e0
|   | | `-CXXThisExpr 0x56168ac413c0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56168ac41400 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56168ac41390 <col:12> 'const char *const' lvalue .data 0x56168ac289e0
|   |     `-DeclRefExpr 0x56168ac41370 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac410e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56168ac414e0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56168ac41498 <col:12> 'int' lvalue ->length 0x56168ac28a48
|   | | `-CXXThisExpr 0x56168ac41488 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56168ac414c8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56168ac41458 <col:12> 'const int' lvalue .length 0x56168ac28a48
|   |     `-DeclRefExpr 0x56168ac41438 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac410e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56168ac415a8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56168ac41560 <col:12> 'String::memo_t *' lvalue ->memo 0x56168ac28ad8
|   | | `-CXXThisExpr 0x56168ac41550 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56168ac41590 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56168ac41520 <col:12> 'String::memo_t *const' lvalue .memo 0x56168ac28ad8
|   |     `-DeclRefExpr 0x56168ac41500 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac410e8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56168ac415f0 <col:12>
|     `-UnaryOperator 0x56168ac415d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56168ac415c8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56168ac41158 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56168ac41158
  `-ParmVarDecl 0x56168ac41268 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168ac1c520 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168ac1c638 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56168ac1c6c8 <col:16, col:22> col:16 public
|-TypedefDecl 0x56168ac1c708 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56168a9dffd0 'const char *'
|   `-QualType 0x56168a9df521 'const char' const
|     `-BuiltinType 0x56168a9df520 'char'
|-TypedefDecl 0x56168ac1c790 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56168ac1c760 'String::const_iterator' sugar
|   |-Typedef 0x56168ac1c708 'const_iterator'
|   `-PointerType 0x56168a9dffd0 'const char *'
|     `-QualType 0x56168a9df521 'const char' const
|       `-BuiltinType 0x56168a9df520 'char'
|-TypedefDecl 0x56168ac1c930 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56168ac1c8a0 'int (String::*)() const'
|   |-RecordType 0x56168ac1c5b0 'String'
|   | `-CXXRecord 0x56168ac1c520 'String'
|   `-ParenType 0x56168ac1c840 'int () const' sugar
|     `-FunctionProtoType 0x56168ac1c810 'int () const' const cdecl
|       `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168ac1c998 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56168ab378f0 'int64_t' sugar
|   |-Typedef 0x56168aa48390 'int64_t'
|   `-TypedefType 0x56168aa21630 '__int64_t' sugar
|     |-Typedef 0x56168aa21208 '__int64_t'
|     `-BuiltinType 0x56168a9df5a0 'long'
|-TypedefDecl 0x56168ac1ca00 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56168ab37810 'uint64_t' sugar
|   |-Typedef 0x56168aa48530 'uint64_t'
|   `-TypedefType 0x56168aa216c0 '__uint64_t' sugar
|     |-Typedef 0x56168aa21278 '__uint64_t'
|     `-BuiltinType 0x56168a9df640 'unsigned long'
|-TypedefDecl 0x56168ac1ca90 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56168ac1ca60 'String::intmax_t' sugar
|   |-Typedef 0x56168ac1c998 'intmax_t'
|   `-TypedefType 0x56168ab378f0 'int64_t' sugar
|     |-Typedef 0x56168aa48390 'int64_t'
|     `-TypedefType 0x56168aa21630 '__int64_t' sugar
|       |-Typedef 0x56168aa21208 '__int64_t'
|       `-BuiltinType 0x56168a9df5a0 'long'
|-TypedefDecl 0x56168ac1cb20 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56168ac1caf0 'String::uintmax_t' sugar
|   |-Typedef 0x56168ac1ca00 'uintmax_t'
|   `-TypedefType 0x56168ab37810 'uint64_t' sugar
|     |-Typedef 0x56168aa48530 'uint64_t'
|     `-TypedefType 0x56168aa216c0 '__uint64_t' sugar
|       |-Typedef 0x56168aa21278 '__uint64_t'
|       `-BuiltinType 0x56168a9df640 'unsigned long'
|-CXXConstructorDecl 0x56168ac1cbe0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56168ac1cd88 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56168ac1ccc8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56168ac1cf38 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56168ac1ce78 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56168ac1d090 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56168ac1d000 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56168ac1d310 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56168ac1d158 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56168ac1d1d8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56168ac1d568 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56168ac1d410 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56168ac1d490 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56168ac1d788 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56168ac1d638 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56168ac1d6b8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56168ac1d9a8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56168ac1d858 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56168ac1d8d8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56168ac1db38 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56168ac1da70 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56168ac1dcb8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56168ac1dbf8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56168ac1de48 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56168ac1dd80 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56168ac1dfa0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56168ac1df10 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56168ac1e128 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56168ac1e068 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56168ac1e2b8 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56168ac1e1f0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56168ac1e448 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56168ac1e380 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56168ac1e5d8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56168ac1e510 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56168ac1e768 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56168ac1e6a0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56168ac1e8f8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56168ac1e830 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56168ac1e9f0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56168ac1eb18 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56168ac1ec98 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56168ac1ebd0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56168ac1ede8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56168ac1ed58 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56168ac1ee90 <col:63> "" ""
|-CXXMethodDecl 0x56168ac1efd8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56168ac1ef18 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56168ac1f1e8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56168ac1f098 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56168ac1f118 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56168ac1fc98 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56168ac1fb40 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56168ac1fbc0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56168ac1ff78 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56168ac1fd58 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56168ac1fdd8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56168ac2c4f0 <col:55> 'int' 10
| `-ParmVarDecl 0x56168ac1fe50 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168ac2c510 <col:76> 'bool' true
|-CXXMethodDecl 0x56168ac20258 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56168ac20040 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56168ac200c0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56168ac2c520 <col:56> 'int' 10
| `-ParmVarDecl 0x56168ac20138 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168ac2c540 <col:77> 'bool' true
|-CXXMethodDecl 0x56168ac20360 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56168ac20428 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56168ac204f0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56168ac20590 <col:20>
| `-OptimizeNoneAttr 0x56168ac205e8 <col:30>
|-CXXConversionDecl 0x56168ac206d8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56168ac207a8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56168ac20868 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56168ac20958 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56168ac20a18 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56168ac20b98 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56168ac20ad0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56168ac20ce8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56168ac20c58 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56168ac20dd8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56168ac20e98 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56168ac210e8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56168ac20f50 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56168ac20fd0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56168ac21348 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56168ac211b0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56168ac21230 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56168ac21418 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56168ac21628 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56168ac214d0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56168ac21550 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56168ac21848 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56168ac216f0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56168ac21770 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56168ac219d8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56168ac21910 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56168ac21f60 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56168ac220d8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56168ac22010 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56168ac222e8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56168ac22198 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56168ac22218 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56168ac22500 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56168ac223a8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56168ac22420 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56168ac22690 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56168ac225c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56168ac228b0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56168ac22750 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56168ac227d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56168ac22a00 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56168ac22970 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56168ac22bd8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56168ac22ac0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56168ac22b40 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56168ac22d28 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56168ac22c98 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56168ac22f40 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56168ac22de0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56168ac22e60 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56168ac2c550 <col:39> 'int' 0
|-CXXMethodDecl 0x56168ac23160 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56168ac23000 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56168ac23080 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56168ac2c570 <col:48> 'int' 0
|-CXXMethodDecl 0x56168ac23340 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56168ac23220 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56168ac232a0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56168ac2c590 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56168ac23410 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56168ac234d0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56168ac23590 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56168ac23650 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56168ac23710 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56168ac238b8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56168ac237c0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56168ac23a38 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56168ac23970 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56168ac23bb8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56168ac23af8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56168ac23d38 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56168ac23c70 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56168ac23e80 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56168ac23df0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56168ac241f0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56168ac24160 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56168ac243c8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56168ac242b0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56168ac24330 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56168ac245a8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56168ac24490 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56168ac24510 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56168ac246f8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56168ac24668 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56168ac24908 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56168ac247b8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56168ac24838 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56168ac24a68 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56168ac249d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56168ac24bc0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56168ac24b28 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56168ac24c68 <col:57> "" ""
|-CXXMethodDecl 0x56168ac24d78 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56168ac24ce8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56168ac24ec8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56168ac24e38 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56168ac25048 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56168ac24f80 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56168ac25110 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56168ac251d0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56168ac25290 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56168ac25330 <col:49> "" ""
|-CXXMethodDecl 0x56168ac253c0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56168ac25480 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56168ac25570 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56168ac25638 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56168ac256f8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56168ac257b8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56168ac258b0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56168ac25978 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56168ac25a40 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56168ac25c18 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56168ac25af8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56168ac25b78 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56168ac25e40 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56168ac25ce0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56168ac25d60 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56168ac25f50 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56168ac25fb8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56168ac25fe0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168ac28300 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56168ac283a0 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56168ac28400 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56168ac28460 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56168ac28510 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56168ac28578 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56168ac287b8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56168ac28808 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168ac28798 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56168ac286a8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56168ac28650 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56168ac28690 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56168ac28670 <col:32> 'int' 8
|-CXXRecordDecl 0x56168ac28820 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168ac28938 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56168ac289e0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56168ac28a48 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56168ac28ad8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56168ac2ca20 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56168ac2ce58 <col:12>
| |-CXXConstructorDecl 0x56168ac2cb28 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56168ac2cc38 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56168ac289e0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56168ac2fb10 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56168ac2fae0 <col:12> 'const char *const' lvalue .data 0x56168ac289e0
| | |     `-DeclRefExpr 0x56168ac2fac0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac2cc38 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56168ac28a48 'length' 'int'
| | | `-ImplicitCastExpr 0x56168ac2fba0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56168ac2fb70 <col:12> 'const int' lvalue .length 0x56168ac28a48
| | |     `-DeclRefExpr 0x56168ac2fb50 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac2cc38 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56168ac28ad8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56168ac2fc30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56168ac2fc00 <col:12> 'String::memo_t *const' lvalue .memo 0x56168ac28ad8
| | |     `-DeclRefExpr 0x56168ac2fbe0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac2cc38 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56168ac2fc88 <col:12>
| |-CXXConstructorDecl 0x56168ac2ccd8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56168ac2ccd8
| | `-ParmVarDecl 0x56168ac2cde8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56168ac35670 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56168ac40fd8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56168ac410e8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56168ac41600 <col:12>
| |   |-BinaryOperator 0x56168ac41418 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56168ac413d0 <col:12> 'const char *' lvalue ->data 0x56168ac289e0
| |   | | `-CXXThisExpr 0x56168ac413c0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56168ac41400 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56168ac41390 <col:12> 'const char *const' lvalue .data 0x56168ac289e0
| |   |     `-DeclRefExpr 0x56168ac41370 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac410e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56168ac414e0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56168ac41498 <col:12> 'int' lvalue ->length 0x56168ac28a48
| |   | | `-CXXThisExpr 0x56168ac41488 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56168ac414c8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56168ac41458 <col:12> 'const int' lvalue .length 0x56168ac28a48
| |   |     `-DeclRefExpr 0x56168ac41438 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac410e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56168ac415a8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56168ac41560 <col:12> 'String::memo_t *' lvalue ->memo 0x56168ac28ad8
| |   | | `-CXXThisExpr 0x56168ac41550 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56168ac41590 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56168ac41520 <col:12> 'String::memo_t *const' lvalue .memo 0x56168ac28ad8
| |   |     `-DeclRefExpr 0x56168ac41500 <col:12> 'const String::rep_t' lvalue ParmVar 0x56168ac410e8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56168ac415f0 <col:12>
| |     `-UnaryOperator 0x56168ac415d8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56168ac415c8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56168ac41158 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56168ac41158
|   `-ParmVarDecl 0x56168ac41268 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56168ac28b50 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56168ac28d98 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56168ac28bb8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56168ac28c38 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56168ac28cb0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56168ac2c9e0 <col:79, line:261:5>
|   |-BinaryOperator 0x56168ac2c658 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56168ac2c5f0 <col:2, col:5> 'const char *' lvalue .data 0x56168ac289e0
|   | | `-MemberExpr 0x56168ac2c5c0 <col:2> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|   | |   `-CXXThisExpr 0x56168ac2c5b0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56168ac2c640 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56168ac2c620 <col:12> 'const char *' lvalue ParmVar 0x56168ac28bb8 'data' 'const char *'
|   |-BinaryOperator 0x56168ac2c720 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56168ac2c6b8 <col:2, col:5> 'int' lvalue .length 0x56168ac28a48
|   | | `-MemberExpr 0x56168ac2c688 <col:2> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|   | |   `-CXXThisExpr 0x56168ac2c678 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56168ac2c708 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56168ac2c6e8 <col:14> 'int' lvalue ParmVar 0x56168ac28c38 'length' 'int'
|   `-IfStmt 0x56168ac2c9c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56168ac2c840 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56168ac2c828 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56168ac2c808 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56168ac2c7e8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56168ac2c780 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|     |       | `-MemberExpr 0x56168ac2c750 <col:7> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|     |       |   `-CXXThisExpr 0x56168ac2c740 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56168ac2c7d0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56168ac2c7b0 <col:17> 'String::memo_t *' lvalue ParmVar 0x56168ac28cb0 'memo' 'String::memo_t *'
|     `-CallExpr 0x56168ac2c9a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56168ac2c988 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168ac2c890 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56168ac033e8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56168ac2c8f8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56168ac283a0
|         `-ImplicitCastExpr 0x56168ac2c8e0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56168ac2c8c0 <col:27> 'String::memo_t *' lvalue ParmVar 0x56168ac28cb0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56168ac29048 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56168ac28e68 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56168ac28ee8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56168ac28f60 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56168ac28b50 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56168ac2ce68 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168ac2cff8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56168ac2cf60 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56168ac2ced0 <col:2> '<bound member function type>' ->assign_memo 0x56168ac28d98
|     | `-ImplicitCastExpr 0x56168ac2cf98 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56168ac2cec0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56168ac2cfb0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56168ac2cf00 <col:14> 'const char *' lvalue ParmVar 0x56168ac28e68 'data' 'const char *'
|     |-ImplicitCastExpr 0x56168ac2cfc8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56168ac2cf20 <col:20> 'int' lvalue ParmVar 0x56168ac28ee8 'length' 'int'
|     `-ImplicitCastExpr 0x56168ac2cfe0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56168ac2cf40 <col:28> 'String::memo_t *' lvalue ParmVar 0x56168ac28f60 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56168ac291d8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56168ac29118 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56168ac2d250 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56168ac2d1d0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56168ac2d020 <col:2> '<bound member function type>' ->assign_memo 0x56168ac28d98
|     | `-CXXThisExpr 0x56168ac2d010 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56168ac2d208 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56168ac2d0a0 <col:14, col:19> 'const char *' lvalue .data 0x56168ac289e0
|     |   `-MemberExpr 0x56168ac2d070 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56168ac28b50
|     |     `-DeclRefExpr 0x56168ac2d050 <col:14> 'const String' lvalue ParmVar 0x56168ac29118 'x' 'const String &'
|     |-ImplicitCastExpr 0x56168ac2d220 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56168ac2d120 <col:25, col:30> 'int' lvalue .length 0x56168ac28a48
|     |   `-MemberExpr 0x56168ac2d0f0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56168ac28b50
|     |     `-DeclRefExpr 0x56168ac2d0d0 <col:25> 'const String' lvalue ParmVar 0x56168ac29118 'x' 'const String &'
|     `-ImplicitCastExpr 0x56168ac2d238 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56168ac2d1a0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|         `-MemberExpr 0x56168ac2d170 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56168ac28b50
|           `-DeclRefExpr 0x56168ac2d150 <col:38> 'const String' lvalue ParmVar 0x56168ac29118 'x' 'const String &'
|-CXXMethodDecl 0x56168ac292a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56168ac2e318 <col:31, line:278:5>
|   `-IfStmt 0x56168ac2e300 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56168ac2d2f0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56168ac2d2d8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56168ac2d2a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|     |     `-MemberExpr 0x56168ac2d278 <col:6> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|     |       `-CXXThisExpr 0x56168ac2d268 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56168ac2e2d8 <col:15, line:277:2>
|       |-ParenExpr 0x56168ac2d890 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56168ac2d860 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56168ac2d400 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56168ac2d3e8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56168ac2d3d0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56168ac2d390 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56168ac283a0
|       |   |       `-ImplicitCastExpr 0x56168ac2d378 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56168ac2d348 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|       |   |           `-MemberExpr 0x56168ac2d318 <col:27> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|       |   |             `-CXXThisExpr 0x56168ac2d308 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56168ac2d460 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56168ac2d440 <col:54> 'int' 0
|       |   `-CallExpr 0x56168ac2d7c0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56168ac2d7a8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56168ac2d730 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56168ac2d800 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56168ac2d548 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56168ac2d818 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56168ac2d5f8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56168ac2d830 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56168ac2d630 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56168ac2d848 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56168ac2d718 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56168ac2d700 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56168ac2d6c8 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56168ac2e1f8 <line:274:6, line:275:22>
|       | |-CallExpr 0x56168ac2daa0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56168ac2da88 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56168ac2da00 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56168ac07500 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56168ac2d9d0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56168ac283a0
|       | |   `-ImplicitCastExpr 0x56168ac2d9b8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56168ac2d988 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|       | |       `-MemberExpr 0x56168ac2d958 <col:40> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|       | |         `-CXXThisExpr 0x56168ac2d948 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56168ac2dba0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56168ac2db88 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56168ac2dac8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56168ac29f78 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56168ac2e1e0 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56168ac2db28 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|       |       `-MemberExpr 0x56168ac2daf8 <col:15> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|       |         `-CXXThisExpr 0x56168ac2dae8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56168ac2e2b8 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56168ac2e250 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56168ac28ad8
|         | `-MemberExpr 0x56168ac2e220 <col:6> 'String::rep_t' lvalue ->_r 0x56168ac28b50
|         |   `-CXXThisExpr 0x56168ac2e210 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56168ac2e2a0 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56168ac2e280 <col:16> 'int' 0
|-CXXMethodDecl 0x56168ac29538 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56168ac29358 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56168ac293d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56168ac29450 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56168ac29610 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56168ac29860 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56168ac296c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56168ac29748 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56168ac297c0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56168ac29a48 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56168ac29930 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56168ac299b0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56168ac29b48 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56168ac2e410 <col:41, line:286:5>
|   `-ReturnStmt 0x56168ac2e400 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56168ac2e3d0 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56168ac2e398 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56168ac2e380 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56168ac2e360 <col:46> 'int' 1
|-CXXMethodDecl 0x56168ac29de8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56168ac29c00 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56168ac29c80 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56168ac29d00 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56168ac29f78 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56168ac29eb0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56168ac2a048 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56168ac2a218 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56168ac2a100 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56168ac2a180 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56168ac2bbd0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56168ac2bd18 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56168ac2be58 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56168ac2bed0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56168ac2bf48 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56168ac2bfb0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56168ac2c0b0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56168ac2c100 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168ac2c090 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56168ac2c070 <col:22> 'int' 14
|-CXXMethodDecl 0x56168ac2c318 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56168ac2c130 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56168ac2c1b0 <col:38> col:41 'int'
| `-ParmVarDecl 0x56168ac2c230 <col:43> col:46 'int'
|-FriendDecl 0x56168ac2c420 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56168ac2c4b0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b0004d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x56168b000740 prev 0x56168b0004d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56168b0007d0 <col:46, col:52> col:46 public
|-TypedefDecl 0x56168b0007f8 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b002150 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x56168b002100 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x56168b0020e0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x56168b000a08 'type'
|     `-SubstTemplateTypeParmType 0x56168b0009d0 'String' sugar
|       |-TemplateTypeParmType 0x56168af18440 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af183f0 'T'
|       `-RecordType 0x56168ac1c5b0 'String'
|         `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b002208 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x56168b0021d0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x56168b0021b0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56168b002150 'type'
|     `-ElaboratedType 0x56168b002100 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x56168b0020e0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x56168b000a08 'type'
|         `-SubstTemplateTypeParmType 0x56168b0009d0 'String' sugar
|           |-TemplateTypeParmType 0x56168af18440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168af183f0 'T'
|           `-RecordType 0x56168ac1c5b0 'String'
|             `-CXXRecord 0x56168ac1c520 'String'
|-CXXMethodDecl 0x56168b002388 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x56168b002298 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x56168b002478 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56168b002558 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56168b002558
|-CXXMethodDecl 0x56168b002828 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56168b002730 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x56168b002a68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56168b0028e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b002958 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b002c38 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56168b002b28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b002ba0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b002d98 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56168b002e68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56168b0030b8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56168b002f28 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56168b002fa0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b003318 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x56168b003188 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56168b003200 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b0034d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56168b0033e8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b003698 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56168b0035a0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b003750 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b003800 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b003a38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56168b0038b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b003928 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56168b003cd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56168b003be0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x56168b003da0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x56168b003df0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56168b003e40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168ae93a00 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56168afff178 prev 0x56168ae93a00 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b000440 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x56168b0003f0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x56168b0003d0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56168b000280 'type'
|     `-SubstTemplateTypeParmType 0x56168b000110 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x56168acea4b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56168acea458 'F'
|       `-RecordType 0x56168afffd70 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x56168afffc90 'typed_array_memory'
|-FieldDecl 0x56168b003e90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x56168b003ee0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b003f18 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-RecordType 0x56168ac1c5b0 'String'
|     `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b003fa8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x56168b003f70 'String &'
|   `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168ac1c5b0 'String'
|       `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b004038 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x56168b004000 'const String &'
|   `-QualType 0x56168afff211 'const String' const
|     `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168ac1c5b0 'String'
|         `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b0040c8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x56168b004090 'String *'
|   `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168ac1c5b0 'String'
|       `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b004158 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x56168b004120 'const String *'
|   `-QualType 0x56168afff211 'const String' const
|     `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168ac1c5b0 'String'
|         `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b004db0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x56168b004d60 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x56168b004d40 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x56168b004c78 'type'
|     `-LValueReferenceType 0x56168b004c40 'const String &'
|       `-QualType 0x56168b0049e1 'const String' const
|         `-SubstTemplateTypeParmType 0x56168b0049e0 'String' sugar
|           |-TemplateTypeParmType 0x56168acf3140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168acf30e8 'T'
|           `-RecordType 0x56168ac1c5b0 'String'
|             `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b004e18 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x56168b004000 'const String &'
|   `-QualType 0x56168afff211 'const String' const
|     `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168ac1c5b0 'String'
|         `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b004e70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b004ed8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x56168b004090 'String *'
|   `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168ac1c5b0 'String'
|       `-CXXRecord 0x56168ac1c520 'String'
|-TypedefDecl 0x56168b004f40 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x56168b004120 'const String *'
|   `-QualType 0x56168afff211 'const String' const
|     `-SubstTemplateTypeParmType 0x56168afff210 'String' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168ac1c5b0 'String'
|         `-CXXRecord 0x56168ac1c520 'String'
|-EnumDecl 0x56168b004f98 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b005090 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b005070 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b005118 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b0053a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0051d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b005270 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x56168b005638 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x56168b005520 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x56168b0058f8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x56168b0057e0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x56168b005c10 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x56168b005af0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x56168b005f20 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x56168b005e00 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x56168b006210 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b006058 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0060d0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56168b006338 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56168b0063e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b006440 <col:30> Inherited
|-CXXMethodDecl 0x56168b006488 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56168b006538 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b006590 <col:30> Inherited
|-CXXMethodDecl 0x56168b006658 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56168b006708 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b006760 <col:30> Inherited
|-CXXMethodDecl 0x56168b0067a8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56168b006858 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0068b0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0068f8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56168b0069a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b006a00 <col:30> Inherited
|-CXXMethodDecl 0x56168b006a48 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56168b006af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b006b50 <col:30> Inherited
|-CXXMethodDecl 0x56168b006b78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b006c28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b006cd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b006e98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b006d88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b006e00 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56168b006fe8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b006f58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b007198 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x56168b0070a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b007250 <col:20>
| `-OptimizeNoneAttr 0x56168b0072a8 <col:30>
|-CXXMethodDecl 0x56168b0073c8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b0072d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b007480 <col:20>
| `-OptimizeNoneAttr 0x56168b0074d8 <col:30>
|-CXXMethodDecl 0x56168b007590 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b007500 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0076d8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b007648 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b007808 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x56168b007908 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x56168b0079d8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x56168b007aa8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x56168b007be8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b007b58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b007d30 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b007ca0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b007e78 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b007de8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b007f30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b008030 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b007fa0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0080e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b0081a8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x56168b0082a8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x56168b008428 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b008368 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x56168b008bd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b0084e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x56168b008b38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x56168b008a38 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x56168b008cb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b008e08 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b008d78 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56168b008ec0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b009108 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b008f80 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56168b008ff8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56168b009298 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x56168b0091d8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56168b0094a8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x56168b009360 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56168b0093d8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56168b009568 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0097c8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x56168b0096d0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x56168b009898 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b009898

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168af52830 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x56168af52a08 prev 0x56168af52830 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56168af52a98 <col:46, col:52> col:46 public
|-TypedefDecl 0x56168af52ac0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af54690 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x56168af54640 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x56168af52f70 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x56168af52e70 'type'
|     `-TemplateSpecializationType 0x56168af52e00 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56168af52ce0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x56168af52cc0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56168af52ca0 <col:24> 'unsigned long' 4
|       `-RecordType 0x56168af52de0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x56168af52d00 'char_array'
|-TypedefDecl 0x56168af54748 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x56168af54710 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x56168af546f0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x56168af54690 'type'
|     `-ElaboratedType 0x56168af54640 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x56168af52f70 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x56168af52e70 'type'
|         `-TemplateSpecializationType 0x56168af52e00 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56168af52ce0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x56168af52cc0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56168af52ca0 <col:24> 'unsigned long' 4
|           `-RecordType 0x56168af52de0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x56168af52d00 'char_array'
|-CXXMethodDecl 0x56168af548e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x56168af547f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x56168af549d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56168af54ab8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x56168af54d88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x56168af54c90 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x56168af54fc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56168af54e40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168af54eb8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af55198 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56168af55088 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168af55100 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af552f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x56168af553c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x56168af55618 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56168af55488 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x56168af55500 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af55878 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x56168af556e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x56168af55760 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af55a38 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x56168af55948 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af55bf8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x56168af55b00 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af55cb0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168af55d60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168af55f98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x56168af55e10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168af55e88 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x56168af56238 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x56168af56140 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x56168af56300 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x56168af56350 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56168af563a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168af51450 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x56168af51658 prev 0x56168af51450 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168af527a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56168af52750 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x56168af52730 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x56168af525e0 'type'
|     `-SubstTemplateTypeParmType 0x56168af52400 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168af51f50 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x56168af51e68 'sized_array_memory'
|-FieldDecl 0x56168af563f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56168af56440 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168af56478 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af56508 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x56168af564d0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af565c8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x56168af56590 'const unsigned int &'
|   `-QualType 0x56168af516f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af56658 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x56168af56620 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af566e8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x56168af566b0 'const unsigned int *'
|   `-QualType 0x56168af516f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af572d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x56168af57280 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x56168af57260 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x56168af571f0 'type'
|     `-SubstTemplateTypeParmType 0x56168af56fb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56168acf3870 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168acf3820 'T'
|       `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af57338 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x56168af56590 'const unsigned int &'
|   `-QualType 0x56168af516f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af57390 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af573f8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x56168af56620 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-BuiltinType 0x56168a9df620 'unsigned int'
|-TypedefDecl 0x56168af57460 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x56168af566b0 'const unsigned int *'
|   `-QualType 0x56168af516f1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x56168af516f0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df620 'unsigned int'
|-EnumDecl 0x56168af574b8 <line:134:5> col:5
| `-EnumConstantDecl 0x56168af575b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168af57590 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168af57638 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x56168af57888 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af576f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168af57790 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x56168af57b48 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56168af57a30 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x56168af57e08 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x56168af57cf0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x56168af58150 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56168af58030 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x56168af58460 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x56168af58340 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x56168af58ff0 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af58598 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168af58610 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56168af59118 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x56168af591f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af59250 <col:30> Inherited
|-CXXMethodDecl 0x56168af59298 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x56168af59348 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af593a0 <col:30> Inherited
|-CXXMethodDecl 0x56168af59438 <line:152:5, col:63> col:55 used begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56168af594e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af59540 <col:30> Inherited
|-CXXMethodDecl 0x56168af59588 <line:153:5, col:61> col:55 used end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56168af59638 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af59690 <col:30> Inherited
|-CXXMethodDecl 0x56168af596d8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56168af59788 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af597e0 <col:30> Inherited
|-CXXMethodDecl 0x56168af59828 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x56168af598d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af59930 <col:30> Inherited
|-CXXMethodDecl 0x56168af59958 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168af59a08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168af59ab8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168af59c78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af59b68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168af59be0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56168af59dc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168af59d38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af59f78 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x56168af59e80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168af5a030 <col:20>
| `-OptimizeNoneAttr 0x56168af5a088 <col:30>
|-CXXMethodDecl 0x56168af5a1a8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x56168af5a0b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168af5a260 <col:20>
| `-OptimizeNoneAttr 0x56168af5a2b8 <col:30>
|-CXXMethodDecl 0x56168af5a370 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168af5a2e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af5a4b8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168af5a428 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af5a5e8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x56168af5a718 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x56168af5a7e8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x56168af5a8b8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x56168af5a9f8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168af5a968 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af5ab40 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168af5aab0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af5ac88 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168af5abf8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168af5ad40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168af5ae40 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168af5adb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168af5aef8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168af5afb8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x56168af5b0b8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x56168af5b238 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x56168af5b178 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x56168af5b9f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168af5b2f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x56168af5b958 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x56168af5b858 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x56168af5bad8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168af5bc28 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x56168af5bb98 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56168af5bce0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168af5bf28 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af5bda0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x56168af5be18 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x56168af5c0e8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x56168af5bff8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x56168af5c338 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x56168af5c1b0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x56168af5c228 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x56168af5c3f8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168af5c658 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x56168af5c560 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x56168af5c728 <line:111:7> col:7 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x56168af5d2a0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168af3e0d0 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x56168af5e6b8 prev 0x56168af3e0d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168af5f6d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x56168af5f680 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x56168af5f660 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x56168af5f510 'type'
|     `-SubstTemplateTypeParmType 0x56168af52400 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168af51f50 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x56168af51e68 'sized_array_memory'
|-FieldDecl 0x56168af5f7d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x56168af5f820 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168af5f858 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af5f8e8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x56168af5f8b0 'int &'
|   `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af5f9a8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x56168af5f970 'const int &'
|   `-QualType 0x56168af5e751 'const int' const
|     `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af5fa38 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x56168af5fa00 'int *'
|   `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af5fac8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x56168af5fa90 'const int *'
|   `-QualType 0x56168af5e751 'const int' const
|     `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af606b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x56168af60660 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x56168af60640 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x56168af605d0 'type'
|     `-SubstTemplateTypeParmType 0x56168af60390 'int' sugar
|       |-TemplateTypeParmType 0x56168acf3870 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168acf3820 'T'
|       `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af60718 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x56168af5f970 'const int &'
|   `-QualType 0x56168af5e751 'const int' const
|     `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af60770 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af607d8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x56168af5fa00 'int *'
|   `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168af60840 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x56168af5fa90 'const int *'
|   `-QualType 0x56168af5e751 'const int' const
|     `-SubstTemplateTypeParmType 0x56168af5e750 'int' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-BuiltinType 0x56168a9df580 'int'
|-EnumDecl 0x56168af60898 <line:134:5> col:5
| `-EnumConstantDecl 0x56168af60990 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168af60970 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168af60a18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168af60c68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af60ad0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168af60b70 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x56168af60f28 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x56168af60e10 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x56168af63ed8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x56168af63dc0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x56168af641f0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x56168af640d0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x56168af64500 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x56168af643e0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x56168af647f0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af64638 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168af646b0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56168af64918 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56168af649f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af64a50 <col:30> Inherited
|-CXXMethodDecl 0x56168af64a98 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x56168af64b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af64ba0 <col:30> Inherited
|-CXXMethodDecl 0x56168af64c68 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56168af64d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af64d70 <col:30> Inherited
|-CXXMethodDecl 0x56168af64db8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56168af64e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af64ec0 <col:30> Inherited
|-CXXMethodDecl 0x56168af64f08 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56168af64fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af65010 <col:30> Inherited
|-CXXMethodDecl 0x56168af65058 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x56168af65108 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168af65160 <col:30> Inherited
|-CXXMethodDecl 0x56168af65188 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168af65238 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168af652e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168af654a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af65398 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168af65410 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56168af655f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168af65568 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af657a8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x56168af656b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168af65860 <col:20>
| `-OptimizeNoneAttr 0x56168af658b8 <col:30>
|-CXXMethodDecl 0x56168af659d8 <line:164:5, col:73> col:49 used operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x56168af658e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168af65a90 <col:20>
| `-OptimizeNoneAttr 0x56168af65ae8 <col:30>
|-CXXMethodDecl 0x56168af65ba0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168af65b10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af65ce8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168af65c58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af65e18 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x56168af65f48 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x56168af66018 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x56168af660e8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x56168af66228 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168af66198 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af66370 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168af662e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168af664b8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168af66428 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168af66570 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168af66670 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168af665e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168af66728 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168af667e8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x56168af668e8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x56168af66a68 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56168af669a8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x56168af67228 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168af66b20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x56168af67188 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x56168af67088 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x56168af67308 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168af67458 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x56168af673c8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56168af67510 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168af67758 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x56168af675d0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x56168af67648 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x56168af67918 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x56168af67828 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x56168af67b68 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x56168af679e0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x56168af67a58 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x56168af67c28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168af67e88 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x56168af67d90 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x56168af67f58 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168af67f58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b0bdc60 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56168b0bdd78 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x56168b0bde18 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x56168b0bde78 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x56168b0bdf10 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56168b0bdf10
| `-ParmVarDecl 0x56168b0be028 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56168b0be0c8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56168b0be0c8
| `-ParmVarDecl 0x56168b0be1d8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56168b0be278 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56168b0be278
| `-ParmVarDecl 0x56168b0be388 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56168b0be3f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56168b0be3f8
| `-ParmVarDecl 0x56168b0be508 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x56168b0be590 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x56168b0be590

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b0bfb20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x56168b0bfcf8 prev 0x56168b0bfb20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56168b0bfd88 <col:46, col:52> col:46 public
|-TypedefDecl 0x56168b0bfdb0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0c1770 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x56168b0c1720 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x56168b0c1700 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x56168b0bffc8 'type'
|     `-SubstTemplateTypeParmType 0x56168b0bff90 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56168af18440 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af183f0 'T'
|       `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|         `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c1828 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x56168b0c17f0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x56168b0c17d0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x56168b0c1770 'type'
|     `-ElaboratedType 0x56168b0c1720 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x56168b0c1700 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x56168b0bffc8 'type'
|         `-SubstTemplateTypeParmType 0x56168b0bff90 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x56168af18440 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168af183f0 'T'
|           `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|             `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-CXXMethodDecl 0x56168b0c19a8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x56168b0c18b8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x56168b0c1a98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56168b0c1b78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56168b0c1b78
|-CXXMethodDecl 0x56168b0c1e48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x56168b0c1d50 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x56168b0c2088 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56168b0c1f00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b0c1f78 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c2258 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56168b0c2148 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b0c21c0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c23b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x56168b0c2488 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x56168b0c26d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56168b0c2548 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x56168b0c25c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c2938 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x56168b0c27a8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x56168b0c2820 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c2af8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x56168b0c2a08 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c2cb8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x56168b0c2bc0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c2d70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b0c2e20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0c3058 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x56168b0c2ed0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b0c2f48 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x56168b0c32f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x56168b0c3200 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x56168b0c33c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x56168b0c3410 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56168b0c3460 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b0be680 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x56168b0be888 prev 0x56168b0be680 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b0bfa90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x56168b0bfa40 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x56168b0bfa20 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x56168b0bf8d0 'type'
|     `-SubstTemplateTypeParmType 0x56168b0bf760 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x56168acea4b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56168acea458 'F'
|       `-RecordType 0x56168b0bf3c0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x56168b0bf2e0 'typed_array_memory'
|-FieldDecl 0x56168b0c34b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x56168b0c3500 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b0c3538 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|     `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c35c8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x56168b0c3590 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|       `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c3658 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x56168b0c3620 'const Router::element_landmark_t &'
|   `-QualType 0x56168b0be921 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|         `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c36e8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x56168b0c36b0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|       `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c3778 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x56168b0c3740 'const Router::element_landmark_t *'
|   `-QualType 0x56168b0be921 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|         `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c43d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x56168b0c4380 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x56168b0c4360 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x56168b0c4298 'type'
|     `-LValueReferenceType 0x56168b0c4260 'const Router::element_landmark_t &'
|       `-QualType 0x56168b0c4001 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x56168b0c4000 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x56168acf3140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168acf30e8 'T'
|           `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|             `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c4438 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x56168b0c3620 'const Router::element_landmark_t &'
|   `-QualType 0x56168b0be921 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|         `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c4490 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0c44f8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x56168b0c36b0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|       `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-TypedefDecl 0x56168b0c4560 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x56168b0c3740 'const Router::element_landmark_t *'
|   `-QualType 0x56168b0be921 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x56168b0be920 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0bdcf0 'Router::element_landmark_t'
|         `-CXXRecord 0x56168b0bdc60 'element_landmark_t'
|-EnumDecl 0x56168b0c45b8 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b0c46b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b0c4690 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b0c4738 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b0c49c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0c47f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0c4890 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x56168b0c4c88 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56168b0c4b70 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x56168b0c8118 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56168b0c4e30 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56168b0c8460 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56168b0c8340 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x56168b0c8770 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x56168b0c8650 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x56168b0c8a60 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0c88a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0c8920 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56168b0c8b88 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56168b0c8c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0c8cc0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0c8d08 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x56168b0c8db8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0c8e10 <col:30> Inherited
|-CXXMethodDecl 0x56168b0c8ed8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56168b0c8f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0c8fe0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0c9028 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56168b0c90d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0c9130 <col:30> Inherited
|-CXXMethodDecl 0x56168b0c9178 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56168b0c9228 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0c9280 <col:30> Inherited
|-CXXMethodDecl 0x56168b0c92c8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x56168b0c9378 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0c93d0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0c93f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0c94a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0c9558 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b0c9718 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0c9608 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0c9680 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56168b0c9868 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0c97d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0c9a18 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x56168b0c9920 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0c9ad0 <col:20>
| `-OptimizeNoneAttr 0x56168b0c9b28 <col:30>
|-CXXMethodDecl 0x56168b0c9c48 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b0c9b50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0c9d00 <col:20>
| `-OptimizeNoneAttr 0x56168b0c9d58 <col:30>
|-CXXMethodDecl 0x56168b0c9e10 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0c9d80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0c9f58 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0c9ec8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0ca088 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56168b0ca1b8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56168b0ca288 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x56168b0ca358 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x56168b0ca498 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0ca408 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0ca5e0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0ca550 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0ca728 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b0ca698 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0ca7e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b0ca8e0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b0ca850 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0ca998 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b0caa58 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x56168b0cab58 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x56168b0cacd8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0cac18 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x56168b0cb468 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b0cad90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x56168b0cb3c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x56168b0cb2c8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x56168b0cb548 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b0cb698 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0cb608 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56168b0cb750 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b0cb998 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0cb810 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x56168b0cb888 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x56168b0cbb28 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x56168b0cba68 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x56168b0cbd38 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x56168b0cbbf0 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x56168b0cbc68 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x56168b0cbdf8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0cc058 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x56168b0cbf60 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x56168b0cc128 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b0cc128

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b03b790 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x56168b03b968 prev 0x56168b03b790 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56168b03b9f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56168b03ba20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b03d5f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x56168b03d5a0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x56168b03bed0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x56168b03bdd0 'type'
|     `-TemplateSpecializationType 0x56168b03bd60 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56168b03bc40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x56168b03bc20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56168b03bc00 <col:24> 'unsigned long' 16
|       `-RecordType 0x56168b03bd40 'char_array<16>'
|         `-ClassTemplateSpecialization 0x56168b03bc60 'char_array'
|-TypedefDecl 0x56168b03d6a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x56168b03d670 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x56168b03d650 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x56168b03d5f0 'type'
|     `-ElaboratedType 0x56168b03d5a0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x56168b03bed0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x56168b03bdd0 'type'
|         `-TemplateSpecializationType 0x56168b03bd60 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56168b03bc40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x56168b03bc20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56168b03bc00 <col:24> 'unsigned long' 16
|           `-RecordType 0x56168b03bd40 'char_array<16>'
|             `-ClassTemplateSpecialization 0x56168b03bc60 'char_array'
|-CXXMethodDecl 0x56168b03d828 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x56168b03d738 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x56168b03d918 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56168b03d9f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56168b03d9f8
|-CXXMethodDecl 0x56168b03dcc8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56168b03dbd0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x56168b03df08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56168b03dd80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b03ddf8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03e0d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56168b03dfc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b03e040 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03e238 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56168b03e308 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x56168b03e558 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56168b03e3c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56168b03e440 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03e7b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x56168b03e628 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x56168b03e6a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03e978 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56168b03e888 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03eb38 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x56168b03ea40 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03ebf0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b03eca0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b03eed8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x56168b03ed50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b03edc8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x56168b03f178 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x56168b03f080 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x56168b03f240 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x56168b03f290 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56168b03f2e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b0cc840 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x56168b0cca48 prev 0x56168b0cc840 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b0cdb10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56168b0cdac0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x56168b0cdaa0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x56168b0cd950 'type'
|     `-SubstTemplateTypeParmType 0x56168b03b360 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168b03aeb0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56168b03adc8 'sized_array_memory'
|-FieldDecl 0x56168b0cdc10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56168b0cdc60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b0cdc98 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-RecordType 0x56168b0afd70 'Router::Connection'
|     `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cdd58 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x56168b0cdd20 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b0afd70 'Router::Connection'
|       `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cdde8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x56168b0cddb0 'const Router::Connection &'
|   `-QualType 0x56168b0ccae1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0afd70 'Router::Connection'
|         `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cde78 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x56168b0cde40 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b0afd70 'Router::Connection'
|       `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cdf08 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x56168b0cded0 'const Router::Connection *'
|   `-QualType 0x56168b0ccae1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0afd70 'Router::Connection'
|         `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0ceb60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x56168b0ceb10 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x56168b0ceaf0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x56168b0cea28 'type'
|     `-LValueReferenceType 0x56168b0ce9f0 'const Router::Connection &'
|       `-QualType 0x56168b0ce791 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x56168b0ce790 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x56168acf3140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168acf30e8 'T'
|           `-RecordType 0x56168b0afd70 'Router::Connection'
|             `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cebc8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x56168b0cddb0 'const Router::Connection &'
|   `-QualType 0x56168b0ccae1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0afd70 'Router::Connection'
|         `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cec20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0cec88 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x56168b0cde40 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b0afd70 'Router::Connection'
|       `-CXXRecord 0x56168b0afcd8 'Connection'
|-TypedefDecl 0x56168b0cecf0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x56168b0cded0 'const Router::Connection *'
|   `-QualType 0x56168b0ccae1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x56168b0ccae0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b0afd70 'Router::Connection'
|         `-CXXRecord 0x56168b0afcd8 'Connection'
|-EnumDecl 0x56168b0ced48 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b0cee40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b0cee20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b0ceec8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b0cf158 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0cef80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0cf020 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x56168b0cf418 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56168b0cf300 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x56168b0cf6d8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x56168b0cf5c0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x56168b0cfa20 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56168b0cf900 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x56168b0cfd30 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x56168b0cfc10 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x56168b0d0020 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0cfe68 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0cfee0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56168b0d1078 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x56168b0d1158 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d11b0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d11f8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x56168b0d12a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d1300 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d13c8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56168b0d1478 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d14d0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d1518 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56168b0d15c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d1620 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d1668 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56168b0d1718 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d1770 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d17b8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x56168b0d1868 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d18c0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d18e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0d1998 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0d1a48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b0d1c08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0d1af8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0d1b70 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56168b0d1d58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0d1cc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0d1f08 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x56168b0d1e10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0d1fc0 <col:20>
| `-OptimizeNoneAttr 0x56168b0d2018 <col:30>
|-CXXMethodDecl 0x56168b0d2138 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b0d2040 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0d21f0 <col:20>
| `-OptimizeNoneAttr 0x56168b0d2248 <col:30>
|-CXXMethodDecl 0x56168b0d2300 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0d2270 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0d2448 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0d23b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0d2578 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x56168b0d26a8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x56168b0d2778 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x56168b0d2848 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x56168b0d2988 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0d28f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0d2ad0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0d2a40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0d2c18 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b0d2b88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0d2cd0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b0d2dd0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b0d2d40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0d2e88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b0d2f48 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x56168b0d3048 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x56168b0d31f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0d3108 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x56168b0d39b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b0d32b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x56168b0d3918 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x56168b0d3818 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x56168b0d3a98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b0d3be8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0d3b58 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56168b0d3ca0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b0d3ee8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0d3d60 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56168b0d3dd8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x56168b0d40a8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x56168b0d3fb8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56168b0d42f8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x56168b0d4170 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x56168b0d41e8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x56168b0d43b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0d4618 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x56168b0d4520 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x56168b0d46e8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b0d46e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168afc1d10 prev 0x56168af7e560 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168afc1e08 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x56168afc1e98 <col:22, col:28> col:22 public
|-EnumDecl 0x56168afc1ec0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x56168afc1fd8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc1fb8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x56168afc1fa0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56168afc1f80 <col:14> 'int' 999
| |-EnumConstantDecl 0x56168afc2080 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc2060 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x56168afc2048 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56168afc2028 <col:14> 'int' 1
| |-EnumConstantDecl 0x56168afc2110 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc20f0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x56168afc20d0 <col:17> 'int' 0
| |-EnumConstantDecl 0x56168afc21a0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc2180 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x56168afc2160 <col:13> 'int' 1
| |-EnumConstantDecl 0x56168afc2230 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc2210 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x56168afc21f0 <col:16> 'int' 2
| |-EnumConstantDecl 0x56168afc22c0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc22a0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x56168afc2280 <col:13> 'int' 3
| |-EnumConstantDecl 0x56168afc2350 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc2330 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x56168afc2310 <col:15> 'int' 4
| |-EnumConstantDecl 0x56168afc23e0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc23c0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x56168afc23a0 <col:14> 'int' 5
| |-EnumConstantDecl 0x56168afc2470 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x56168afc2450 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x56168afc2430 <col:12> 'int' 6
| `-EnumConstantDecl 0x56168afc2500 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x56168afc24e0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x56168afc24c0 <col:13> 'int' 7
|-VarDecl 0x56168afc2570 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x56168afc25f8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x56168afc2680 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x56168afc2708 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x56168afc2790 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x56168afc2818 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x56168afc28a0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x56168afc2928 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x56168afc29b0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x56168afc2a38 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x56168afc2ac0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x56168afc2bc0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56168afc7fc8 '_nerrors' 'int'
| | `-IntegerLiteral 0x56168afc8758 <line:128:13> 'int' 0
| `-CompoundStmt 0x56168afc87c8 <col:16, line:129:5>
|-CXXDestructorDecl 0x56168afc2cb0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56168afc87d8 <col:29, line:132:5>
|-CXXMethodDecl 0x56168afc2e68 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x56168afc2da0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168afc2f30 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56168afc3018 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56168afc8830 <col:44, line:161:5>
|   `-ReturnStmt 0x56168afc8820 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56168afc8808 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56168afc87e8 <col:9> 'ErrorHandler *' lvalue Var 0x56168afc8028 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x56168afc3188 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x56168afc30c8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168afc3250 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56168afc8890 <col:43, line:173:5>
|   `-ReturnStmt 0x56168afc8880 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56168afc8868 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56168afc8848 <col:9> 'ErrorHandler *' lvalue Var 0x56168afc80a0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x56168afc3308 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x56168afc3388 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x56168afc3498 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x56168afc3408 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56168afc35e8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x56168afc3558 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56168afc3740 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x56168afc36a8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x56168afc3898 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x56168afc3800 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56168afc39f0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x56168afc3958 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56168afc3c00 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56168afc3aa8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x56168afc3b28 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x56168afc3dd8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56168afc3cc0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x56168afc3d40 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x56168afc3ff8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56168afc3e98 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x56168afc3f18 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x56168afc41d8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56168afc40b8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56168afc4138 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56168afc43b8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56168afc4298 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56168afc4318 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56168afc4540 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x56168afc4478 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x56168afc4710 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x56168afc45f8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56168afc4670 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56168afc8ae8 <col:57, line:234:5>
|   `-ReturnStmt 0x56168afc8ad8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56168afc8ac0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56168afc8a68 <col:9, col:41> 'int'
|         |-MemberExpr 0x56168afc8a38 <col:9> '<bound member function type>' ->xmessage 0x56168afc4540
|         | `-CXXThisExpr 0x56168afc8a28 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56168afc8aa8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56168afc8a90 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56168afc8a08 <col:18, col:40> 'String' (CXXTemporary 0x56168afc8a08)
|               `-CallExpr 0x56168afc89d0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56168afc89b8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56168afc8930 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56168afc67b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56168afc8950 <col:31> 'const String' lvalue ParmVar 0x56168afc4670 'str' 'const String &'
|                 `-DeclRefExpr 0x56168afc8970 <col:36> 'const String' lvalue ParmVar 0x56168afc45f8 'anno' 'const String &'
|-CXXMethodDecl 0x56168afc4a50 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56168afc47d0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56168afc4850 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x56168afc4920 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56168afc8d78 <col:68, line:243:5>
|   `-ReturnStmt 0x56168afc8d68 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56168afc8d50 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56168afc8cf0 <col:9, col:41> 'int'
|         |-MemberExpr 0x56168afc8cc0 <col:9> '<bound member function type>' ->xmessage 0x56168afc4710
|         | `-CXXThisExpr 0x56168afc8cb0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56168afc8b88 <col:18> 'const String' lvalue ParmVar 0x56168afc47d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56168afc8d38 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56168afc8d20 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56168afc8c90 <col:24, col:40> 'String' (CXXTemporary 0x56168afc8c90)
|               `-CXXMemberCallExpr 0x56168afc8c28 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56168afc8bb8 <col:24> '<bound member function type>' ->vformat 0x56168afc5c50
|                 | `-CXXThisExpr 0x56168afc8ba8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56168afc8c58 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56168afc8be8 <col:32> 'const char *' lvalue ParmVar 0x56168afc4850 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56168afc8c70 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56168afc8c08 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56168afc4920 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56168afc4cf0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x56168afc4b18 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56168afc4b90 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56168afc4c08 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56168afc90b8 <col:23, line:254:5>
|   `-ReturnStmt 0x56168afc90a8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56168afc9090 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56168afc9030 <col:9, col:71> 'int'
|         |-MemberExpr 0x56168afc9000 <col:9> '<bound member function type>' ->xmessage 0x56168afc4710
|         | `-CXXThisExpr 0x56168afc8ff0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56168afc9078 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56168afc9060 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56168afc8fb0 <col:18, col:65> 'String' (CXXTemporary 0x56168afc8fb0)
|         |     `-CallExpr 0x56168afc8f48 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56168afc8f30 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56168afc8e18 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56168afc67b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56168afc8e38 <col:31> 'const String' lvalue ParmVar 0x56168afc4b90 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56168afc8f90 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56168afc8f78 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56168afc8f10 <col:37, col:64> 'String' (CXXTemporary 0x56168afc8f10)
|         |             `-CallExpr 0x56168afc8ee0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56168afc8ec8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56168afc8e58 <col:37> 'String (const String &)' lvalue CXXMethod 0x56168afc6e08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56168afc8e78 <col:56> 'const String' lvalue ParmVar 0x56168afc4b18 'landmark' 'const String &'
|         `-DeclRefExpr 0x56168afc8fd0 <col:68> 'const String' lvalue ParmVar 0x56168afc4c08 'str' 'const String &'
|-CXXMethodDecl 0x56168afc5070 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56168afc4db8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56168afc4e30 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56168afc4eb0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x56168afc4f28 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56168afc9370 <col:34, line:267:5>
|   `-ReturnStmt 0x56168afc9360 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56168afc9348 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56168afc92e0 <col:9, col:51> 'int'
|         |-MemberExpr 0x56168afc92b0 <col:9> '<bound member function type>' ->xmessage 0x56168afc4cf0
|         | `-CXXThisExpr 0x56168afc92a0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56168afc9158 <col:18> 'const String' lvalue ParmVar 0x56168afc4db8 'landmark' 'const String &'
|         |-DeclRefExpr 0x56168afc9178 <col:28> 'const String' lvalue ParmVar 0x56168afc4e30 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56168afc9330 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56168afc9318 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56168afc9280 <col:34, col:50> 'String' (CXXTemporary 0x56168afc9280)
|               `-CXXMemberCallExpr 0x56168afc9218 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56168afc91a8 <col:34> '<bound member function type>' ->vformat 0x56168afc5c50
|                 | `-CXXThisExpr 0x56168afc9198 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56168afc9248 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56168afc91d8 <col:42> 'const char *' lvalue ParmVar 0x56168afc4eb0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56168afc9260 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56168afc91f8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56168afc4f28 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56168afc5180 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56168afc93f0 <col:25, line:288:5>
|   `-ReturnStmt 0x56168afc93e0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56168afc93c8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56168afc9398 <col:9> 'const int' lvalue ->_nerrors 0x56168afc7fc8
|         `-CXXThisExpr 0x56168afc9388 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x56168afc5390 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x56168afc5238 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x56168afc52b8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x56168afc5678 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56168afc5458 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x56168afc54d8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x56168afc5550 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56168afc5810 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x56168afc5748 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x56168afc5a78 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56168afc58d0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x56168afc5948 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56168afc9650 <col:58, line:357:5>
|   `-ReturnStmt 0x56168afc9640 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56168afc9628 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56168afc95f8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56168afc95e0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56168afc95c0 <col:9, col:29> 'String' (CXXTemporary 0x56168afc95c0)
|             `-CallExpr 0x56168afc9550 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56168afc9538 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56168afc94b8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x56168afc5678 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56168afc9458 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56168afc9588 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56168afc9478 <col:21> 'const char *' lvalue ParmVar 0x56168afc58d0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56168afc95a0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56168afc9498 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56168afc5948 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56168afc5c50 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x56168afc5b40 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x56168afc5bb8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56168afc5da8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x56168afc5d18 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x56168afc5f28 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x56168afc5e60 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x56168afc61c0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x56168afc5fe0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x56168afc6060 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x56168afc60d8 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x56168afc6320 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x56168afc6290 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56168afc9768 <col:37, line:441:5>
|   `-IfStmt 0x56168afc9750 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56168afc96d8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56168afc96a8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56168afc9668 <col:6> 'int' lvalue ParmVar 0x56168afc6290 'level' 'int'
|     | `-ImplicitCastExpr 0x56168afc96c0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56168afc9688 <col:15> 'ErrorHandler::Level' EnumConstant 0x56168afc22c0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56168afc9738 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56168afc9708 <col:8> 'int' lvalue ->_nerrors 0x56168afc7fc8
|         `-CXXThisExpr 0x56168afc96f8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x56168afc63e8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x56168afc9800 <col:26, line:448:5>
|   `-BinaryOperator 0x56168afc97e0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56168afc9790 <col:2> 'int' lvalue ->_nerrors 0x56168afc7fc8
|     | `-CXXThisExpr 0x56168afc9780 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56168afc97c0 <col:13> 'int' 0
|-CXXMethodDecl 0x56168afc65b0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x56168afc64a0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56168afc6518 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x56168afc67b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x56168afc6670 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x56168afc66e8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x56168afc6a68 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x56168afc6878 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x56168afc68f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x56168afc6978 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x56168afc6b20 <col:59> 0 0
|-CXXMethodDecl 0x56168afc6cb8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x56168afc6b98 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x56168afc6c18 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56168afc9e70 <col:70, line:534:5>
|   |-DeclStmt 0x56168afc9970 <line:528:2, col:20>
|   | |-VarDecl 0x56168afc9828 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56168afc9890 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56168afc98c8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56168afc9930 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56168afc9a40 <line:529:2, col:23>
|   | `-VarDecl 0x56168afc99a0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56168afc9a28 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56168afc9a08 <col:18> 'const char *' lvalue ParmVar 0x56168afc6b98 'begin' 'const char *'
|   |-DoStmt 0x56168afc9e08 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56168afc9d38 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56168afc9d20 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56168afc9d00 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56168afc9a58 <col:6> 'const char *' lvalue Var 0x56168afc99a0 'x' 'const char *'
|   | |     `-CallExpr 0x56168afc9c50 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56168afc9c38 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56168afc9bf0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56168afc84a0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56168afc9cb8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56168afc9ca0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56168afc9b10 <col:20, col:27> 'String' (CXXTemporary 0x56168afc9b10)
|   | |       |     `-CXXTemporaryObjectExpr 0x56168afc9ad8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56168afc9cd0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56168afc9b30 <col:30> 'const char *' lvalue Var 0x56168afc99a0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56168afc9ce8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56168afc9b50 <col:33> 'const char *' lvalue ParmVar 0x56168afc6c18 'end' 'const char *'
|   | |       |-UnaryOperator 0x56168afc9b90 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56168afc9b70 <col:39> 'String' lvalue Var 0x56168afc9828 'name' 'String'
|   | |       |-UnaryOperator 0x56168afc9bc8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56168afc9ba8 <col:46> 'String' lvalue Var 0x56168afc98c8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56168afc9be0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56168afc9df0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56168afc9dd8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56168afc9db8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56168afc9d88 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56168ac206d8
|   |         `-ImplicitCastExpr 0x56168afc9d70 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56168afc9d50 <col:11> 'String' lvalue Var 0x56168afc9828 'name' 'String'
|   `-ReturnStmt 0x56168afc9e60 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56168afc9e48 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56168afc9e28 <col:9> 'const char *' lvalue Var 0x56168afc99a0 'x' 'const char *'
|-CXXMethodDecl 0x56168afc6e08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x56168afc6d78 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56168afca478 <col:55, line:550:5>
|   `-IfStmt 0x56168afca450 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56168afca0b0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56168afca098 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56168afca080 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56168afca060 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56168afca030 <col:6> '<bound member function type>' .operator int (String::*)() const 0x56168ac206d8
|     | |       `-DeclRefExpr 0x56168afc9ed0 <col:6> 'const String' lvalue ParmVar 0x56168afc6d78 'x' 'const String &'
|     | `-BinaryOperator 0x56168afca010 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56168afc9fe0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56168afc9f90 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56168afc9f78 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56168afc9f30 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x56168ac3b5c0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56168afc9ef0 <col:11> 'const String' lvalue ParmVar 0x56168afc6d78 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56168afc9f10 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56168afc9ff8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56168afc9fc8 <col:19> 'char' 123
|     |-ReturnStmt 0x56168afca120 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56168afca0f0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56168afca0d0 <col:13> 'const String' lvalue ParmVar 0x56168afc6d78 'x' 'const String &'
|     `-IfStmt 0x56168afca428 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56168afca1b8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56168afca1a0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56168afca180 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56168afca150 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56168ac206d8
|       |       `-DeclRefExpr 0x56168afca130 <col:11> 'const String' lvalue ParmVar 0x56168afc6d78 'x' 'const String &'
|       |-ReturnStmt 0x56168afca340 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56168afca328 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56168afca2f8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56168afca2e0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56168afca2c0 <col:13, col:29> 'String' (CXXTemporary 0x56168afca2c0)
|       |         `-CallExpr 0x56168afca270 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56168afca258 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56168afca1d0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x56168afc65b0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56168afca2a0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56168afca1f0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56168afca210 <col:28> 'const String' lvalue ParmVar 0x56168afc6d78 'x' 'const String &'
|       `-ReturnStmt 0x56168afca418 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56168afca400 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56168afca3d0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56168afca3b8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56168afca398 <col:13, col:20> 'String' (CXXTemporary 0x56168afca398)
|                 `-CXXTemporaryObjectExpr 0x56168afca360 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x56168afc7008 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x56168afc6ec0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x56168afc6f38 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168afc8748 <col:71> 'bool' false
|-CXXRecordDecl 0x56168afc70b8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x56168afc73b8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x56168afc7350 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x56168afc72f0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x56168afc72b0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x56168ac1c5b0 'String'
|       | `-CXXRecord 0x56168ac1c520 'String'
|       |-BuiltinType 0x56168a9df580 'int'
|       `-DecayedType 0x56168afc48f0 '__va_list_tag *' sugar
|         |-TypedefType 0x56168afc48c0 'va_list' sugar
|         | |-Typedef 0x56168ac535d0 'va_list'
|         | `-TypedefType 0x56168ac53580 '__gnuc_va_list' sugar
|         |   |-Typedef 0x56168ac4e958 '__gnuc_va_list'
|         |   `-TypedefType 0x56168ac4e8c0 '__builtin_va_list' sugar
|         |     |-Typedef 0x56168aa20d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x56168aa20ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x56168a9e02d0 '__va_list_tag'
|         |         `-CXXRecord 0x56168a9e0238 '__va_list_tag'
|         `-PointerType 0x56168ac59150 '__va_list_tag *'
|           `-RecordType 0x56168a9e02d0 '__va_list_tag'
|             `-CXXRecord 0x56168a9e0238 '__va_list_tag'
|-EnumDecl 0x56168afc7410 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56168afc7510 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7a70 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc74f0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56168afc74d0 <col:16> 'int' 1
| |-EnumConstantDecl 0x56168afc75a0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7a88 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc7580 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56168afc7560 <col:21> 'int' 2
| |-EnumConstantDecl 0x56168afc7630 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7aa0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc7610 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56168afc75f0 <col:22> 'int' 4
| |-EnumConstantDecl 0x56168afc76c0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7ab8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc76a0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56168afc7680 <col:17> 'int' 8
| |-EnumConstantDecl 0x56168afc7750 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7ad0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc7730 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56168afc7710 <col:22> 'int' 16
| |-EnumConstantDecl 0x56168afc77e0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7ae8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc77c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56168afc77a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x56168afc7870 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7b00 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc7850 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56168afc7830 <col:17> 'int' 64
| |-EnumConstantDecl 0x56168afc7900 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7b18 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc78e0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56168afc78c0 <col:14> 'int' 128
| |-EnumConstantDecl 0x56168afc7990 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56168afc7b30 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afc7970 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56168afc7950 <col:16> 'int' 256
| `-EnumConstantDecl 0x56168afc7a20 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56168afc7b48 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168afc7a00 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56168afc79e0 <col:12> 'int' 1024
|-CXXMethodDecl 0x56168afc7d58 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56168afc7b70 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56168afc7c10 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56168afc7ee0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56168afc7e18 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56168afc7f88 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56168afc7fc8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56168afc8028 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56168afc80a0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56168afc84a0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56168afc8118 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56168afc8198 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56168afc8218 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56168afc8290 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56168afc8308 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56168afc8380 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56168afc85c8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56168afc85c8
| `-ParmVarDecl 0x56168afc86d8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56168afca7d8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56168afca7d8
  `-ParmVarDecl 0x56168afca8e8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168af79ce0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56168af79e30 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x56168af79eb0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x56168af7aca8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56168af7aca8
| `-ParmVarDecl 0x56168af7adb8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x56168af7ae58 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7ae58
| `-ParmVarDecl 0x56168af7af68 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x56168af7afd8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168af7afd8
|-CXXMethodDecl 0x56168af7b8a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56168af7b8a8
| `-ParmVarDecl 0x56168af7b9b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x56168af7ba28 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7ba28
| `-ParmVarDecl 0x56168af7bb38 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x56168b0edc00 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x56168b0edce0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168af79fe0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56168af7a108 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x56168af7a190 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x56168af7b108 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56168af7b108
| `-ParmVarDecl 0x56168af7b218 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x56168af7b2b8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7b2b8
| `-ParmVarDecl 0x56168af7b3c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x56168af7b438 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168af7b438
|-CXXMethodDecl 0x56168af7bbd8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56168af7bbd8
| `-ParmVarDecl 0x56168af7bce8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x56168af7bd58 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7bd58
| `-ParmVarDecl 0x56168af7be68 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x56168b0edd40 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x56168aec0bd0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168af75648 prev 0x56168af74b70 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56168af75740 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x56168af757d0 <col:17, col:23> col:17 public
|-EnumDecl 0x56168af757f8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x56168af75900 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76650 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af758e0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x56168af758c0 <col:11> 'int' 1
| |-EnumConstantDecl 0x56168af75990 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76668 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75970 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x56168af75950 <col:12> 'int' 2
| |-EnumConstantDecl 0x56168af75a20 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76680 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75a00 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x56168af759e0 <col:17> 'int' 4
| |-EnumConstantDecl 0x56168af75ab0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76698 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75a90 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x56168af75a70 <col:16> 'int' 0
| |-EnumConstantDecl 0x56168af75b40 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af766b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75b20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56168af75b00 <col:19> 'int' 32
| |-EnumConstantDecl 0x56168af75bd0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af766c8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75bb0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x56168af75b90 <col:10> 'int' 64
| |-EnumConstantDecl 0x56168af75c60 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af766e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75c40 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x56168af75c20 <col:19> 'int' 128
| |-EnumConstantDecl 0x56168af75cf0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af766f8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75cd0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x56168af75cb0 <col:20> 'int' 256
| |-EnumConstantDecl 0x56168af75d80 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76710 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75d60 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x56168af75d40 <col:17> 'int' 512
| |-EnumConstantDecl 0x56168af75e10 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76728 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75df0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x56168af75dd0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x56168af75ea0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76740 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75e80 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x56168af75e60 <col:11> 'int' 2048
| |-EnumConstantDecl 0x56168af75f30 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76758 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75f10 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x56168af75ef0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x56168af75fc0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76770 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af75fa0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x56168af75f80 <col:13> 'int' 8192
| |-EnumConstantDecl 0x56168af76050 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af76788 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af76030 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x56168af76010 <col:15> 'int' 16384
| |-EnumConstantDecl 0x56168af76120 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x56168af76100 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x56168af760e0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56168af760a0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x56168af760c0 <col:20> 'int' 26
| |-EnumConstantDecl 0x56168af761f0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x56168af761d0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x56168af761b0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56168af76170 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x56168af76190 <col:27> 'int' 27
| |-EnumConstantDecl 0x56168af76280 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af767a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af76260 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x56168af76240 <col:17> 'int' 28
| |-EnumConstantDecl 0x56168af76350 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x56168af76330 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x56168af76310 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56168af762d0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x56168af762f0 <col:18> 'int' EnumConstant 0x56168af76280 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af763e0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af767b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af763c0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x56168af763a0 <col:25> 'int' 8
| |-EnumConstantDecl 0x56168af76470 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x56168af767d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af76450 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x56168af76430 <col:26> 'int' 16
| `-EnumConstantDecl 0x56168af76600 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x56168af767e8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168af765e0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x56168af765c0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x56168af76580 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x56168af76540 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x56168af76500 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x56168af764c0 <col:14> 'int' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x56168af764e0 <col:23> 'int' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x56168af76520 <col:33> 'int' EnumConstant 0x56168af75a20 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x56168af76560 <col:48> 'int' EnumConstant 0x56168af763e0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x56168af765a0 <col:71> 'int' EnumConstant 0x56168af76470 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x56168af76848 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x56168af7c288 <col:39, line:64:5>
|   `-ReturnStmt 0x56168af7c278 <line:63:2, col:9>
|     `-MemberExpr 0x56168af7c248 <col:9> 'const String' lvalue ->_name 0x56168af79c90
|       `-CXXThisExpr 0x56168af7c238 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56168af76908 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x56168af7c308 <col:35, line:71:5>
|   `-ReturnStmt 0x56168af7c2f8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x56168af7c2e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56168af7c2b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|         `-CXXThisExpr 0x56168af7c2a0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56168af76a58 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x56168af769c0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x56168af7c488 <col:42, line:77:5>
|   `-ReturnStmt 0x56168af7c478 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x56168af7c460 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x56168af7c430 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x56168af7c390 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x56168af7c360 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56168af7c320 <col:9> 'int' lvalue ParmVar 0x56168af769c0 'op' 'int'
|         | `-ImplicitCastExpr 0x56168af7c378 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x56168af7c340 <col:15> 'Handler::Flags' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x56168af7c3c0 <col:25> 'void *const' lvalue ->_write_user_data 0x56168af7a340
|         | `-CXXThisExpr 0x56168af7c3b0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x56168af7c400 <col:44> 'void *const' lvalue ->_read_user_data 0x56168af7a2d8
|           `-CXXThisExpr 0x56168af7c3f0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x56168af76b28 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x56168af7c508 <col:41, line:82:5>
|   `-ReturnStmt 0x56168af7c4f8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x56168af7c4e0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56168af7c4b0 <col:9> 'void *const' lvalue ->_read_user_data 0x56168af7a2d8
|         `-CXXThisExpr 0x56168af7c4a0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56168af76bf0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x56168af7c588 <col:42, line:87:5>
|   `-ReturnStmt 0x56168af7c578 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x56168af7c560 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56168af7c530 <col:9> 'void *const' lvalue ->_write_user_data 0x56168af7a340
|         `-CXXThisExpr 0x56168af7c520 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x56168af76cb8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x56168af76d58 <col:52> "" ""
|-CXXMethodDecl 0x56168af76df0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x56168af76e90 <col:52> "" ""
|-CXXMethodDecl 0x56168af76f20 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x56168af7c678 <col:34, line:98:5>
|   `-ReturnStmt 0x56168af7c668 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x56168af7c650 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56168af7c630 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56168af7c600 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56168af7c5b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|         |   `-CXXThisExpr 0x56168af7c5a0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56168af7c618 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56168af7c5e0 <col:18> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x56168af76fe0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x56168af7c768 <col:36, line:104:5>
|   `-ReturnStmt 0x56168af7c758 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x56168af7c740 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56168af7c720 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56168af7c6f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56168af7c6a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|         |   `-CXXThisExpr 0x56168af7c690 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56168af7c708 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56168af7c6d0 <col:18> 'Handler::Flags' EnumConstant 0x56168af75a20 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x56168af770a0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x56168af7c948 <col:38, line:113:5>
|   `-ReturnStmt 0x56168af7c938 <line:112:2, col:49>
|     `-BinaryOperator 0x56168af7c918 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x56168af7c8c0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x56168af7c8a0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56168af7c870 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56168af7c790 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|       |   |   `-CXXThisExpr 0x56168af7c780 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x56168af7c888 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x56168af7c850 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x56168af7c830 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x56168af7c800 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x56168af7c7c0 <col:20> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x56168af7c818 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x56168af7c7e0 <col:29> 'Handler::Flags' EnumConstant 0x56168af75c60 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x56168af7c900 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x56168af7c8e0 <col:49> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x56168af77160 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x56168af7ca38 <col:34, line:118:5>
|   `-ReturnStmt 0x56168af7ca28 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x56168af7ca10 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56168af7c9f0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56168af7c9c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56168af7c970 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|         |   `-CXXThisExpr 0x56168af7c960 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56168af7c9d8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56168af7c9a0 <col:18> 'Handler::Flags' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x56168af77220 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x56168af7cc18 <col:39, line:127:5>
|   `-ReturnStmt 0x56168af7cc08 <line:126:2, col:51>
|     `-BinaryOperator 0x56168af7cbe8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x56168af7cb90 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x56168af7cb70 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56168af7cb40 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56168af7ca60 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|       |   |   `-CXXThisExpr 0x56168af7ca50 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x56168af7cb58 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x56168af7cb20 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x56168af7cb00 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x56168af7cad0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x56168af7ca90 <col:20> 'Handler::Flags' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x56168af7cae8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x56168af7cab0 <col:30> 'Handler::Flags' EnumConstant 0x56168af75cf0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x56168af7cbd0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x56168af7cbb0 <col:51> 'Handler::Flags' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x56168af772e0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x56168af7cd20 <col:33, line:132:5>
|   `-ReturnStmt 0x56168af7cd10 <line:131:2, col:41>
|     `-BinaryOperator 0x56168af7ccf0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x56168af7cc70 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x56168af7cc40 <col:9> '<bound member function type>' ->read_visible 0x56168af770a0
|       |   `-CXXThisExpr 0x56168af7cc30 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x56168af7ccd0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x56168af7cca0 <col:27> '<bound member function type>' ->write_visible 0x56168af77220
|           `-CXXThisExpr 0x56168af7cc90 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x56168af773a0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x56168af7ce30 <col:51, line:138:5>
|   `-ReturnStmt 0x56168af7ce20 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x56168af7ce08 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x56168af7cde8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x56168af7cdc8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x56168af7cd98 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x56168af7cd48 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|           |   `-CXXThisExpr 0x56168af7cd38 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x56168af7cdb0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x56168af7cd78 <col:26> 'Handler::Flags' EnumConstant 0x56168af75b40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56168af77460 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x56168af7cf40 <col:50, line:144:5>
|   `-ReturnStmt 0x56168af7cf30 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x56168af7cf18 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x56168af7cef8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x56168af7ced8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x56168af7cea8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x56168af7ce58 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|           |   `-CXXThisExpr 0x56168af7ce48 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x56168af7cec0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x56168af7ce88 <col:26> 'Handler::Flags' EnumConstant 0x56168af75b40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56168af77520 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x56168af7d030 <col:29, line:166:5>
|   `-ReturnStmt 0x56168af7d020 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x56168af7d008 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x56168af7cfe8 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x56168af7cfb8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x56168af7cf68 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|         |   `-CXXThisExpr 0x56168af7cf58 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x56168af7cfd0 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x56168af7cf98 <col:18> 'Handler::Flags' EnumConstant 0x56168af75bd0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x56168af777a8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x56168af775d0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x56168af77648 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x56168af776c0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168af779b8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x56168af77870 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x56168af778e8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x56168af7c170 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x56168af7c150 <col:62> 'int' 0
| `-CompoundStmt 0x56168af7d2d0 <col:71, line:188:5>
|   `-ReturnStmt 0x56168af7d2c0 <line:187:2, col:36>
|     `-ExprWithCleanups 0x56168af7d2a8 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x56168af7d278 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56168af7d260 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56168af7d240 <col:9, col:36> 'String' (CXXTemporary 0x56168af7d240)
|             `-CXXMemberCallExpr 0x56168af7d1a0 <col:9, col:36> 'String'
|               |-MemberExpr 0x56168af7d170 <col:9> '<bound member function type>' ->call_read 0x56168af777a8
|               | `-CXXThisExpr 0x56168af7d160 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x56168af7d1d8 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x56168af7d0b8 <col:19> 'Element *' lvalue ParmVar 0x56168af77870 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x56168af7d208 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x56168af7d1f0 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x56168af7d120 <col:22, col:29> 'String' (CXXTemporary 0x56168af7d120)
|               |     `-CXXTemporaryObjectExpr 0x56168af7d0e8 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x56168af7d220 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x56168af7d140 <col:32> 'ErrorHandler *' lvalue ParmVar 0x56168af778e8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x56168af77c50 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x56168af77a78 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x56168af77af0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56168af77b68 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168af77dd8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x56168af77d18 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x56168af78008 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x56168af77e90 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x56168af77f08 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x56168af78108 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x56168af7d330 <col:50, line:225:5>
|   `-ReturnStmt 0x56168af7d320 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x56168af7d308 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x56168af7d2e8 <col:9> 'const Handler *' lvalue Var 0x56168af7a4d0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x56168af781a8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x56168af782b0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78e70 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78290 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56168af78270 <col:11> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78340 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78e88 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78320 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56168af78300 <col:12> 'Handler::Flags' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af783d0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78ea0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af783b0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x56168af78390 <col:17> 'Handler::Flags' EnumConstant 0x56168af75a20 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78460 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78eb8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78440 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x56168af78420 <col:16> 'Handler::Flags' EnumConstant 0x56168af75ab0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af784f0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78ed0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af784d0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x56168af784b0 <col:19> 'Handler::Flags' EnumConstant 0x56168af75b40 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78580 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78ee8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78560 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x56168af78540 <col:10> 'Handler::Flags' EnumConstant 0x56168af75bd0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78610 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af785f0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x56168af785d0 <col:19> 'Handler::Flags' EnumConstant 0x56168af75c60 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af786a0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f18 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78680 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x56168af78660 <col:20> 'Handler::Flags' EnumConstant 0x56168af75cf0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78730 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f30 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78710 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x56168af786f0 <col:17> 'Handler::Flags' EnumConstant 0x56168af75d80 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af787c0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f48 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af787a0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x56168af78780 <col:15> 'Handler::Flags' EnumConstant 0x56168af75e10 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78850 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f60 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78830 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x56168af78810 <col:11> 'Handler::Flags' EnumConstant 0x56168af75ea0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78910 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f78 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af788c0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x56168af788a0 <col:16> 'Handler::Flags' EnumConstant 0x56168af75f30 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af789a0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78f90 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78980 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x56168af78960 <col:13> 'Handler::Flags' EnumConstant 0x56168af75fc0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78a30 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78fa8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78a10 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x56168af789f0 <col:15> 'Handler::Flags' EnumConstant 0x56168af76050 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78ac0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78fc0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78aa0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x56168af78a80 <col:20> 'Handler::Flags' EnumConstant 0x56168af76120 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78b50 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78fd8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78b30 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x56168af78b10 <col:27> 'Handler::Flags' EnumConstant 0x56168af761f0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78be0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af78ff0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78bc0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x56168af78ba0 <col:22> 'Handler::Flags' EnumConstant 0x56168af76280 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78c70 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af79008 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78c50 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x56168af78c30 <col:18> 'Handler::Flags' EnumConstant 0x56168af76350 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78d00 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af79020 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78ce0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x56168af78cc0 <col:25> 'Handler::Flags' EnumConstant 0x56168af763e0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af78d90 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x56168af79038 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af78d70 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x56168af78d50 <col:26> 'Handler::Flags' EnumConstant 0x56168af76470 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x56168af78e20 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x56168af79050 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168af78e00 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x56168af78de0 <col:20> 'Handler::Flags' EnumConstant 0x56168af76600 'f_special' 'Handler::Flags'
|-EnumDecl 0x56168af79068 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x56168af79170 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af796d0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79150 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x56168af79130 <col:12> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af79200 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af796e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af791e0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x56168af791c0 <col:13> 'Handler::Flags' EnumConstant 0x56168af75990 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af79290 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79700 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79270 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x56168af79250 <col:15> 'Handler::Flags' EnumConstant 0x56168af75a20 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af79320 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79718 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79300 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x56168af792e0 <col:8> 'Handler::Flags' EnumConstant 0x56168af75bd0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af793b0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79730 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79390 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x56168af79370 <col:9> 'Handler::Flags' EnumConstant 0x56168af75ea0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af79440 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79748 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79420 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x56168af79400 <col:14> 'Handler::Flags' EnumConstant 0x56168af75f30 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af794d0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79760 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af794b0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x56168af79490 <col:11> 'Handler::Flags' EnumConstant 0x56168af75fc0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af79560 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79778 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79540 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x56168af79520 <col:13> 'Handler::Flags' EnumConstant 0x56168af76050 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x56168af795f0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x56168af79790 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af795d0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x56168af795b0 <col:20> 'Handler::Flags' EnumConstant 0x56168af76280 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x56168af79680 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x56168af797a8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168af79660 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x56168af79640 <col:16> 'Handler::Flags' EnumConstant 0x56168af76350 'f_user0' 'Handler::Flags'
|-EnumDecl 0x56168af797c0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x56168af79880 <col:25> "" ""
| |-EnumConstantDecl 0x56168af79930 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x56168af79a10 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af79910 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x56168af798f0 <col:14> 'Handler::Flags' EnumConstant 0x56168af75ab0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x56168af799c0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x56168af79a28 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168af799a0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x56168af79980 <col:17> 'Handler::Flags' EnumConstant 0x56168af75b40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x56168af79ba8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x56168af79a50 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x56168af79ad0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x56168af7d9f0 <col:70, line:284:5>
|   |-ParenExpr 0x56168af7d810 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x56168af7d7e0 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x56168af7d510 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168af7d4e0 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x56168af7d488 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x56168af7d468 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x56168af7d438 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x56168af7d358 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x56168af7a3a0
|   |   |   |   |   `-CXXThisExpr 0x56168af7d348 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x56168af7d450 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x56168af7d418 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x56168af7d3f8 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x56168af7d3c8 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x56168af7d388 <col:34> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x56168af7d3e0 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x56168af7d3a8 <col:43> 'Handler::Flags' EnumConstant 0x56168af763e0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x56168af7d4c8 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x56168af7d4a8 <col:69> 'Handler::Flags' EnumConstant 0x56168af75900 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x56168af7d570 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168af7d550 <col:85> 'int' 0
|   |   `-CallExpr 0x56168af7d740 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x56168af7d728 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168af7d708 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168af7d780 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168af7d5e0 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x56168af7d798 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168af7d630 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x56168af7d7b0 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168af7d668 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x56168af7d7c8 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168af7d6f0 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168af7d6d8 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168af7d688 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x56168af7d9e0 <line:283:2, col:38>
|     `-ExprWithCleanups 0x56168af7d9c8 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x56168af7d998 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56168af7d980 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56168af7d960 <col:9, col:38> 'String' (CXXTemporary 0x56168af7d960)
|             `-CallExpr 0x56168af7d8f8 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x56168af7d8e0 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x56168af7d870 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x56168af79eb0
|               |   `-MemberExpr 0x56168af7d840 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x56168af79f78
|               |     `-CXXThisExpr 0x56168af7d830 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x56168af7d928 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x56168af7d8a0 <col:22> 'Element *' lvalue ParmVar 0x56168af79a50 'e' 'Element *'
|               `-ImplicitCastExpr 0x56168af7d940 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x56168af7d8c0 <col:25> 'void *' lvalue ParmVar 0x56168af79ad0 'new_user_data' 'void *'
|-AccessSpecDecl 0x56168af79c58 <line:287:3, col:10> col:3 private
|-FieldDecl 0x56168af79c90 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x56168af79ce0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56168af79e30 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x56168af79eb0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x56168af7aca8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56168af7aca8
| | `-ParmVarDecl 0x56168af7adb8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x56168af7ae58 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7ae58
| | `-ParmVarDecl 0x56168af7af68 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x56168af7afd8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168af7afd8
| |-CXXMethodDecl 0x56168af7b8a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x56168af7b8a8
| | `-ParmVarDecl 0x56168af7b9b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x56168af7ba28 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7ba28
| | `-ParmVarDecl 0x56168af7bb38 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x56168b0edc00 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56168b0edce0 <col:5>
|-FieldDecl 0x56168af79f78 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x56168af79fe0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56168af7a108 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x56168af7a190 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x56168af7b108 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56168af7b108
| | `-ParmVarDecl 0x56168af7b218 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x56168af7b2b8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7b2b8
| | `-ParmVarDecl 0x56168af7b3c8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x56168af7b438 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168af7b438
| |-CXXMethodDecl 0x56168af7bbd8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x56168af7bbd8
| | `-ParmVarDecl 0x56168af7bce8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x56168af7bd58 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x56168af7bd58
| | `-ParmVarDecl 0x56168af7be68 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x56168b0edd40 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56168aec0bd0 <col:5>
|-FieldDecl 0x56168af7a258 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x56168af7a2d8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x56168af7a340 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x56168af7a3a0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x56168af7a408 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x56168af7a470 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x56168af7a4d0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x56168af7a5f0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x56168af7a548 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x56168af7c220 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56168af7c208 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x56168af7c1f0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56168af7c1d0 <col:30, col:37> 'String' (CXXTemporary 0x56168af7c1d0)
|           `-CXXTemporaryObjectExpr 0x56168af7c198 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x56168af7a798 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x56168af7a6d8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x56168af7a918 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x56168af7a850 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x56168af7aad8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x56168af7ab18 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x56168af7ab18
| `-ParmVarDecl 0x56168af7abf8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x56168af7b548 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x56168af7b548
| `-ParmVarDecl 0x56168af7b658 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x56168af7b6f8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x56168af7b6f8
| `-ParmVarDecl 0x56168af7b808 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x56168af7bed8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x56168af7bed8
| `-ParmVarDecl 0x56168af7bfe8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x56168af7c070 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x56168af7c070

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b0d5258 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x56168b0d5468 prev 0x56168b0d5258 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b0d6480 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56168b0d6430 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x56168b0d6410 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x56168b0d62c0 'type'
|     `-SubstTemplateTypeParmType 0x56168b046040 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168b045b90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56168b045aa8 'sized_array_memory'
|-FieldDecl 0x56168b0d6580 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56168b0d65d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b0d6608 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-PointerType 0x56168a9dfce0 'void *'
|     `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d6698 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x56168b0d6660 'void *&'
|   `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168a9dfce0 'void *'
|       `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d6758 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x56168b0d6720 'void *const &'
|   `-QualType 0x56168b0d5501 'void *const' const
|     `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168a9dfce0 'void *'
|         `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d67e8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x56168b0d67b0 'void **'
|   `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168a9dfce0 'void *'
|       `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d6878 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x56168b0d6840 'void *const *'
|   `-QualType 0x56168b0d5501 'void *const' const
|     `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168a9dfce0 'void *'
|         `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d7460 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x56168b0d7410 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x56168b0d73f0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x56168b0d7380 'type'
|     `-SubstTemplateTypeParmType 0x56168b0d7140 'void *' sugar
|       |-TemplateTypeParmType 0x56168acf3870 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168acf3820 'T'
|       `-PointerType 0x56168a9dfce0 'void *'
|         `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d74c8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x56168b0d6720 'void *const &'
|   `-QualType 0x56168b0d5501 'void *const' const
|     `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168a9dfce0 'void *'
|         `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d7520 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0d7588 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x56168b0d67b0 'void **'
|   `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168a9dfce0 'void *'
|       `-BuiltinType 0x56168a9df4e0 'void'
|-TypedefDecl 0x56168b0d75f0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x56168b0d6840 'void *const *'
|   `-QualType 0x56168b0d5501 'void *const' const
|     `-SubstTemplateTypeParmType 0x56168b0d5500 'void *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168a9dfce0 'void *'
|         `-BuiltinType 0x56168a9df4e0 'void'
|-EnumDecl 0x56168b0d7648 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b0d7740 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b0d7720 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b0d77c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b0d7a18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0d7880 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0d7920 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x56168b0d7cd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x56168b0d7bc0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x56168b0d7f98 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x56168b0d7e80 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56168b0d82e0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x56168b0d81c0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x56168b0d85f0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x56168b0d84d0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x56168b0d88e0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0d8728 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0d87a0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56168b0d8a38 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56168b0d8b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d8b70 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d8bb8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x56168b0d8c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d8cc0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d8d88 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0d8e38 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0d8e90 <col:30> Inherited
|-CXXMethodDecl 0x56168b0d8ed8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0d8f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0da780 <col:30> Inherited
|-CXXMethodDecl 0x56168b0da7c8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0da878 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0da8d0 <col:30> Inherited
|-CXXMethodDecl 0x56168b0da918 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x56168b0da9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0daa20 <col:30> Inherited
|-CXXMethodDecl 0x56168b0daa48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0daaf8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0daba8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b0dad68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0dac58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0dacd0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56168b0daeb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0dae28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0db068 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x56168b0daf70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0db120 <col:20>
| `-OptimizeNoneAttr 0x56168b0db178 <col:30>
|-CXXMethodDecl 0x56168b0db298 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b0db1a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b0db350 <col:20>
| `-OptimizeNoneAttr 0x56168b0db3a8 <col:30>
|-CXXMethodDecl 0x56168b0db460 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0db3d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0db5a8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0db518 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0db6d8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x56168b0db808 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x56168b0db8d8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x56168b0db9a8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x56168b0dbae8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b0dba58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0dbc30 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0dbba0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b0dbd78 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b0dbce8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0dbe30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b0dbf30 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b0dbea0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0dbfe8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b0dc0a8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x56168b0dc1a8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x56168b0dc328 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0dc268 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x56168b0dcae8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b0dc3e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x56168b0dca48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x56168b0dc948 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x56168b0dcbc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b0dcd18 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0dcc88 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56168b0dcdd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b0dd018 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0dce90 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x56168b0dcf08 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x56168b0dd1d8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x56168b0dd0e8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x56168b0dd428 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x56168b0dd2a0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x56168b0dd318 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x56168b0dd4e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0dd748 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x56168b0dd650 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x56168b0dd818 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b0dd818

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b0dda10 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56168b0ddb28 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x56168b0ddbb8 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x56168b0ddcc0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x56168b0ddd10 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168b0ddca0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x56168b0ddc80 <col:27> 'int' 4096
|-FieldDecl 0x56168b0ddd38 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x56168b0ddda0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x56168b0ddf98 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x56168b0de028 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x56168b0de1e8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x56168b0de088 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x56168b0de100 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x56168b0ddd38 'name' 'String'
| | `-CXXConstructExpr 0x56168b0e8c68 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x56168b0e8c28 <col:20> 'const String' lvalue ParmVar 0x56168b0de088 'n' 'const String &'
| |-CXXCtorInitializer Field 0x56168b0ddda0 'nsig' 'int'
| | `-IntegerLiteral 0x56168b0e8cc0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x56168b0ddf98 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x56168b0e8da8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56168b0de028 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x56168b0e8d68 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x56168b0e8d28 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x56168b0de100 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x56168b0e9038 <col:42, line:289:9>
|   `-CallExpr 0x56168b0e8fe8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x56168b0e8fd0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56168b0e8fb0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x56168ac0c628 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x56168b0e9020 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x56168b0e8ef8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x56168b0e8ed8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x56168b0e8ec0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56168b0e8e70 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x56168b0ddf98
|     |     |   `-CXXThisExpr 0x56168b0e8e60 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x56168b0e8ea0 <col:25> 'int' 0
|     |-IntegerLiteral 0x56168b0e8f10 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x56168b0e8f90 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x56168b0e8f70 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x56168b0e8f40 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x56168b0ddf98 non_odr_use_unevaluated
|           `-CXXThisExpr 0x56168b0e8f30 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x56168b0de2c8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56168b0de2c8
| `-ParmVarDecl 0x56168b0de3d8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x56168b0de478 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56168b0de478
| `-ParmVarDecl 0x56168b0de588 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x56168b0de628 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56168b0de628
| `-ParmVarDecl 0x56168b0de738 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x56168b0de7a8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56168b0de7a8
| `-ParmVarDecl 0x56168b0de8b8 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x56168b0de940 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x56168b0de940

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b0a0da0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168b0a0eb8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x56168b0a0f48 <col:21, col:27> col:21 public
|-EnumDecl 0x56168b0a0f70 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x56168b0a1088 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x56168b0a1068 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56168b0a1050 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56168b0a1030 <col:32> 'int' 1
| `-EnumConstantDecl 0x56168b0a1130 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x56168b0a1110 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56168b0a10f8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56168b0a10d8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x56168b0a11e0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x56168b0a1718 <col:19, col:21>
|-CXXDestructorDecl 0x56168b0a12d0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x56168b0a1728 <col:28, col:30>
|-CXXMethodDecl 0x56168b0a1490 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x56168b0a13c0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x56168b0a1598 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x56168b0a1598
  `-ParmVarDecl 0x56168b0a16a8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b0a1cd0 prev 0x56168b079510 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56168b0a1dc8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x56168b0a1e58 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x56168b0a1ec8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56168b0a1f88 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x56168b0a2048 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x56168b0a2108 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x56168b0a21c8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x56168b0a2268 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x56168b0a23c8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x56168b0a23a8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x56168b0a2388 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x56168b0a2350 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x56168b0a2330 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x56168b0a2368 <col:42> 'int' 1
|-CXXMethodDecl 0x56168b0a2438 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x56168b0a25a8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x56168b0a24e8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x56168b0a26f0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x56168b0a2660 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x56168b0a27b8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x56168b0a2ae0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x56168b0a2ba8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x56168b0a2d28 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x56168b0a2c60 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x56168b0a60c0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x56168b0a62c8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x56168b0a6170 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x56168b0a61f0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x56168b0a6420 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x56168b0a6390 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x56168b0a6570 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x56168b0a64e0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x56168b0a66c0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x56168b0a6630 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x56168b0a6810 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x56168b0a6780 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x56168b0a69e0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x56168b0a68d0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x56168b0a6948 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x56168b0a6be8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x56168b0a6aa0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x56168b0a6b18 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56168b0e21e0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56168b0e21c0 <col:60> 'int' 0
|-CXXMethodDecl 0x56168b0a6e78 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x56168b0a6ca8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x56168b0a6d20 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x56168b0a6d98 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56168b0e2218 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56168b0e21f8 <col:76> 'int' 0
|-CXXMethodDecl 0x56168b0a7118 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x56168b0a6f40 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x56168b0a6fb8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x56168b0a7030 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x56168b0e2250 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x56168b0e2230 <col:84> 'int' 0
|-CXXMethodDecl 0x56168b0a7470 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56168b0a71e0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x56168b0a7258 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x56168b0a72d8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x56168b0a7378 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56168b0a7720 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56168b0a7540 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x56168b0a75c0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x56168b0a7638 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56168b0a7988 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x56168b0a77e8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x56168b0a7868 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x56168b0a78e0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x56168b0a7e40 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x56168b0a7a50 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x56168b0a7ad0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x56168b0a7b78 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x56168b0a7cf0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x56168b0a7f00 <col:115> "" ""
|-CXXMethodDecl 0x56168b0a82c0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x56168b0a7f80 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x56168b0a8000 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x56168b0a8078 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x56168b0a81c0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x56168b0a8380 <col:113> "" ""
|-CXXMethodDecl 0x56168b0a84d0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x56168b0a8408 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x56168b0a86a0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x56168b0a8590 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x56168b0a8608 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x56168b0a88a8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x56168b0a8760 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x56168b0a87d8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x56168b0a8ca8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x56168b0a8968 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x56168b0a89e0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x56168b0a8a58 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56168b0a8ad8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x56168b0a8b50 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168b0e2288 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168b0e2268 <col:137> 'int' 0
|-CXXMethodDecl 0x56168b0a90b8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x56168b0a8d80 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x56168b0a8df8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x56168b0a8e70 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56168b0a8ef0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x56168b0a8f68 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168b0e22c0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168b0e22a0 <col:139> 'int' 0
|-CXXMethodDecl 0x56168b0a9568 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x56168b0a9190 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x56168b0a9208 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x56168b0a9280 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168b0a92f8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56168b0a9378 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x56168b0e22f8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x56168b0e22d8 <col:133> 'int' 0
| `-ParmVarDecl 0x56168b0a93f8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x56168b0e2330 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x56168b0e2310 <col:160> 'int' 0
|-CXXMethodDecl 0x56168b0a9900 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56168b0a9648 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x56168b0a96c0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x56168b0a9738 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56168b0a97b0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168b0e2368 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168b0e2348 <col:116> 'int' 0
|-EnumDecl 0x56168b0a99c0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x56168b0a9ac0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x56168b0a9b10 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168b0a9aa0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x56168b0a9a80 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x56168b0a9c90 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x56168b0a9b38 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x56168b0a9bb0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x56168b0a9ea8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x56168b0a9d50 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x56168b0a9dd0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x56168b0aa1d8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x56168b0a9f68 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x56168b0aa0c0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x56168b0aa360 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x56168b0aa298 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x56168b0aa510 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x56168b0aa418 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x56168b0aa720 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x56168b0aa5c8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x56168b0aa648 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x56168b0aa8a8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x56168b0aa7e0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x56168b0aa9c8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x56168b0aaab8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x56168b0aac28 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x56168b0aab68 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x56168b0aadb0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x56168b0aace0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x56168b0aafb8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x56168b0aae68 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x56168b0aaee8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x56168b0ab0e8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x56168b0ab1d8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x56168b0ab298 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x56168b0ab498 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56168b0ab348 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x56168b0ab3c0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56168b0e2418 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56168b0e2400 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x56168b0e23e8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56168b0e23c8 <col:58, col:65> 'String' (CXXTemporary 0x56168b0e23c8)
|           `-CXXTemporaryObjectExpr 0x56168b0e2390 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x56168b0ab668 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56168b0ab558 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x56168b0ab5d0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56168b0e24c8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56168b0e24b0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x56168b0e2498 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56168b0e2478 <col:71, col:78> 'String' (CXXTemporary 0x56168b0e2478)
|           `-CXXTemporaryObjectExpr 0x56168b0e2440 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x56168b0ab838 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56168b0ab728 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x56168b0ab7a0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56168b0e2578 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56168b0e2560 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x56168b0e2548 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56168b0e2528 <col:71, col:78> 'String' (CXXTemporary 0x56168b0e2528)
|           `-CXXTemporaryObjectExpr 0x56168b0e24f0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x56168b0aba08 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x56168b0ab8f8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x56168b0ab970 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x56168b0e2628 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56168b0e2610 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x56168b0e25f8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56168b0e25d8 <col:70, col:77> 'String' (CXXTemporary 0x56168b0e25d8)
|           `-CXXTemporaryObjectExpr 0x56168b0e25a0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x56168b0abb88 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x56168b0abac8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x56168b0abda8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x56168b0abc40 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x56168b0abcb8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x56168b0abea8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x56168b0abea8
|-CXXMethodDecl 0x56168b0abfb0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56168b0ac070 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56168b0ac130 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x56168b0ac1f0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x56168b0ac3e8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x56168b0ac2a0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x56168b0ac318 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x56168b0ac7a0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x56168b0ac4a8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x56168b0ac520 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x56168b0ac598 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x56168b0ac610 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x56168b0ac690 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x56168b0acb00 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x56168b0ac880 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x56168b0ac900 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x56168b0ac980 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x56168b0aca00 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x56168b0acbe0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x56168b0acd20 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x56168b0acc90 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x56168b0ace70 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56168b0acdd8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0ad078 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x56168b0acf28 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x56168b0acfa0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0ad1c8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x56168b0ad138 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0ad310 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x56168b0ad280 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x56168b0ad550 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x56168b0ad3d0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56168b0ad478 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x56168b0ad6d8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x56168b0ad610 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x56168b0ad780 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168b0ad898 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x56168b0ad940 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x56168b0ad9a8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x56168b0ada60 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x56168b0e2650 <col:16, line:150:9>
| |-CXXConstructorDecl 0x56168b0adc38 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x56168b0adb20 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x56168b0adba0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x56168b0ad940 'idx' 'int'
| | | `-ImplicitCastExpr 0x56168b0e26a0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56168b0e2660 <col:19> 'int' lvalue ParmVar 0x56168b0adb20 'i' 'int'
| | |-CXXCtorInitializer Field 0x56168b0ad9a8 'port' 'int'
| | | `-ImplicitCastExpr 0x56168b0e2720 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x56168b0e26e0 <col:28> 'int' lvalue ParmVar 0x56168b0adba0 'p' 'int'
| | `-CompoundStmt 0x56168b0e5e48 <col:31, line:153:9>
| |-CXXMethodDecl 0x56168b0ade18 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56168b0add28 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56168b0e6048 <col:46, line:157:9>
| |   `-ReturnStmt 0x56168b0e6038 <line:156:13, col:46>
| |     `-BinaryOperator 0x56168b0e6018 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x56168b0e5f18 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x56168b0e5ee8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56168b0e5e68 <col:20> 'const int' lvalue ->idx 0x56168b0ad940
| |       | |   `-CXXThisExpr 0x56168b0e5e58 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56168b0e5f00 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56168b0e5eb8 <col:27, col:29> 'const int' lvalue .idx 0x56168b0ad940
| |       |     `-DeclRefExpr 0x56168b0e5e98 <col:27> 'const Router::Port' lvalue ParmVar 0x56168b0add28 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x56168b0e5ff8 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x56168b0e5fc8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x56168b0e5f48 <col:36> 'const int' lvalue ->port 0x56168b0ad9a8
| |         |   `-CXXThisExpr 0x56168b0e5f38 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x56168b0e5fe0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x56168b0e5f98 <col:44, col:46> 'const int' lvalue .port 0x56168b0ad9a8
| |             `-DeclRefExpr 0x56168b0e5f78 <col:44> 'const Router::Port' lvalue ParmVar 0x56168b0add28 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56168b0adf60 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56168b0aded0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56168b0e6250 <col:46, line:160:9>
| |   `-ReturnStmt 0x56168b0e6240 <line:159:13, col:46>
| |     `-BinaryOperator 0x56168b0e6220 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x56168b0e6120 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x56168b0e60f0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56168b0e6070 <col:20> 'const int' lvalue ->idx 0x56168b0ad940
| |       | |   `-CXXThisExpr 0x56168b0e6060 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56168b0e6108 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56168b0e60c0 <col:27, col:29> 'const int' lvalue .idx 0x56168b0ad940
| |       |     `-DeclRefExpr 0x56168b0e60a0 <col:27> 'const Router::Port' lvalue ParmVar 0x56168b0aded0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x56168b0e6200 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x56168b0e61d0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x56168b0e6150 <col:36> 'const int' lvalue ->port 0x56168b0ad9a8
| |         |   `-CXXThisExpr 0x56168b0e6140 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x56168b0e61e8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x56168b0e61a0 <col:44, col:46> 'const int' lvalue .port 0x56168b0ad9a8
| |             `-DeclRefExpr 0x56168b0e6180 <col:44> 'const Router::Port' lvalue ParmVar 0x56168b0aded0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56168b0afad0 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56168b0ae018 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x56168b0e6578 <col:45, line:163:9>
| |   `-ReturnStmt 0x56168b0e6568 <line:162:13, col:65>
| |     `-BinaryOperator 0x56168b0e6548 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x56168b0e6328 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x56168b0e62f8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56168b0e6278 <col:20> 'const int' lvalue ->idx 0x56168b0ad940
| |       | |   `-CXXThisExpr 0x56168b0e6268 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56168b0e6310 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56168b0e62c8 <col:26, col:28> 'const int' lvalue .idx 0x56168b0ad940
| |       |     `-DeclRefExpr 0x56168b0e62a8 <col:26> 'const Router::Port' lvalue ParmVar 0x56168b0ae018 'x' 'const Router::Port &'
| |       `-ParenExpr 0x56168b0e6528 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x56168b0e6508 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x56168b0e6408 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x56168b0e63d8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x56168b0e6358 <col:36> 'const int' lvalue ->idx 0x56168b0ad940
| |           | |   `-CXXThisExpr 0x56168b0e6348 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x56168b0e63f0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x56168b0e63a8 <col:43, col:45> 'const int' lvalue .idx 0x56168b0ad940
| |           |     `-DeclRefExpr 0x56168b0e6388 <col:43> 'const Router::Port' lvalue ParmVar 0x56168b0ae018 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x56168b0e64e8 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x56168b0e64b8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x56168b0e6438 <col:52> 'const int' lvalue ->port 0x56168b0ad9a8
| |             |   `-CXXThisExpr 0x56168b0e6428 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x56168b0e64d0 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x56168b0e6488 <col:59, col:61> 'const int' lvalue .port 0x56168b0ad9a8
| |                 `-DeclRefExpr 0x56168b0e6468 <col:59> 'const Router::Port' lvalue ParmVar 0x56168b0ae018 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x56168b0afc18 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x56168b0afb88 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x56168b0e68a0 <col:46, line:166:9>
| |   `-ReturnStmt 0x56168b0e6890 <line:165:13, col:66>
| |     `-BinaryOperator 0x56168b0e6870 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x56168b0e6650 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x56168b0e6620 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x56168b0e65a0 <col:20> 'const int' lvalue ->idx 0x56168b0ad940
| |       | |   `-CXXThisExpr 0x56168b0e6590 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x56168b0e6638 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x56168b0e65f0 <col:26, col:28> 'const int' lvalue .idx 0x56168b0ad940
| |       |     `-DeclRefExpr 0x56168b0e65d0 <col:26> 'const Router::Port' lvalue ParmVar 0x56168b0afb88 'x' 'const Router::Port &'
| |       `-ParenExpr 0x56168b0e6850 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x56168b0e6830 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x56168b0e6730 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x56168b0e6700 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x56168b0e6680 <col:36> 'const int' lvalue ->idx 0x56168b0ad940
| |           | |   `-CXXThisExpr 0x56168b0e6670 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x56168b0e6718 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x56168b0e66d0 <col:43, col:45> 'const int' lvalue .idx 0x56168b0ad940
| |           |     `-DeclRefExpr 0x56168b0e66b0 <col:43> 'const Router::Port' lvalue ParmVar 0x56168b0afb88 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x56168b0e6810 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x56168b0e67e0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x56168b0e6760 <col:52> 'const int' lvalue ->port 0x56168b0ad9a8
| |             |   `-CXXThisExpr 0x56168b0e6750 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x56168b0e67f8 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x56168b0e67b0 <col:60, col:62> 'const int' lvalue .port 0x56168b0ad9a8
| |                 `-DeclRefExpr 0x56168b0e6790 <col:60> 'const Router::Port' lvalue ParmVar 0x56168b0afb88 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x56168b0e68b8 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x56168b0e68b8
| | `-ParmVarDecl 0x56168b0e69c8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x56168b0e6a68 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x56168b0e6a68
| | `-ParmVarDecl 0x56168b0e6b78 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x56168b0e6c10 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56168b0e6ee0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x56168b0e6ee0
| | `-ParmVarDecl 0x56168b0e6fe8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x56168b0e7058 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56168b0e7168 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x56168b0e7488 <col:12>
|     |-BinaryOperator 0x56168b0e7328 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56168b0e72e0 <col:12> 'int' lvalue ->idx 0x56168b0ad940
|     | | `-CXXThisExpr 0x56168b0e72d0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56168b0e7310 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56168b0e72a0 <col:12> 'int' xvalue .idx 0x56168b0ad940
|     |     `-CXXStaticCastExpr 0x56168b0e7270 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56168b0e7240 <col:12> 'Router::Port' lvalue ParmVar 0x56168b0e7168 '' 'Router::Port &&'
|     |-BinaryOperator 0x56168b0e7430 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x56168b0e73e8 <col:12> 'int' lvalue ->port 0x56168b0ad9a8
|     | | `-CXXThisExpr 0x56168b0e73d8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x56168b0e7418 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x56168b0e73a8 <col:12> 'int' xvalue .port 0x56168b0ad9a8
|     |     `-CXXStaticCastExpr 0x56168b0e7378 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x56168b0e7348 <col:12> 'Router::Port' lvalue ParmVar 0x56168b0e7168 '' 'Router::Port &&'
|     `-ReturnStmt 0x56168b0e7478 <col:12>
|       `-UnaryOperator 0x56168b0e7460 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56168b0e7450 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x56168b0afcd8 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168b0afdf8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x56168b0affe8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x56168b0b00a0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x56168b0affe8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56168b0e6be8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56168b0e6d20 <col:22, line:173:9>
| |-CXXConstructorDecl 0x56168b0b0388 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x56168b0b0160 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x56168b0b01e0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x56168b0b0260 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x56168b0b02e0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x56168b0affe8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x56168b0e6d30 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x56168b0e7768 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x56168b0e7558 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x56168b0e7520 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x56168b0e7508 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x56168b0e71f0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56168b0e7058 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x56168b0e6e00 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x56168b0e6de8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x56168b0e6d98 <col:13> 'Router::Port [2]' lvalue ->p 0x56168b0affe8
| |   |   | |   `-CXXThisExpr 0x56168b0e6d88 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x56168b0e6dc8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x56168b0e71d8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x56168b0e6ea0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x56168b0e6e70 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x56168b0e6e30 <col:25> 'int' lvalue ParmVar 0x56168b0b0260 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x56168b0e6e88 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x56168b0e6e50 <col:33> 'int' lvalue ParmVar 0x56168b0b02e0 'to_port' 'int'
| |   `-ExprWithCleanups 0x56168b0e7750 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x56168b0e7718 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56168b0e7700 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x56168b0e76e0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x56168b0e7058 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x56168b0e75e8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x56168b0e75d0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x56168b0e7580 <col:13> 'Router::Port [2]' lvalue ->p 0x56168b0affe8
| |       | |   `-CXXThisExpr 0x56168b0e7570 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x56168b0e75b0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x56168b0e76c8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x56168b0e7688 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x56168b0e7658 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x56168b0e7618 <col:25> 'int' lvalue ParmVar 0x56168b0b0160 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x56168b0e7670 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x56168b0e7638 <col:35> 'int' lvalue ParmVar 0x56168b0b01e0 'from_port' 'int'
| |-CXXMethodDecl 0x56168b0b0558 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x56168b0b0468 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x56168b0e7d28 <col:45, line:182:9>
| |   |-ParenExpr 0x56168b0e7c08 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56168b0e7bd8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56168b0e78a8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56168b0e7878 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56168b0e77e0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56168b0e77c8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56168b0e7788 <col:34> 'int' lvalue ParmVar 0x56168b0b0468 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56168b0e77a8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56168b0e7858 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56168b0e7840 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56168b0e7800 <col:44> 'int' lvalue ParmVar 0x56168b0b0468 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56168b0e7820 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56168b0e7908 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56168b0e78e8 <col:59> 'int' 0
| |   |   `-CallExpr 0x56168b0e7b38 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56168b0e7b20 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56168b0e7b00 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56168b0e7b78 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56168b0e7978 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56168b0e7b90 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56168b0e79a0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56168b0e7ba8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56168b0e79d8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x56168b0e7bc0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56168b0e7ae8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56168b0e7ad0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56168b0e7a78 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x56168b0e7d18 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x56168b0e7cf8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56168b0e7cc8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56168b0e7c38 <col:20> 'Router::Port const[2]' lvalue ->p 0x56168b0affe8
| |       |   `-CXXThisExpr 0x56168b0e7c28 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56168b0e7ce0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56168b0e7c68 <col:22> 'int' lvalue ParmVar 0x56168b0b0468 'i' 'int'
| |-CXXMethodDecl 0x56168b0b0708 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x56168b0b0618 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x56168b0e82a0 <col:33, line:186:9>
| |   |-ParenExpr 0x56168b0e81c0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x56168b0e8190 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x56168b0e7e68 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x56168b0e7e38 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x56168b0e7da0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x56168b0e7d88 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x56168b0e7d48 <col:34> 'int' lvalue ParmVar 0x56168b0b0618 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x56168b0e7d68 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x56168b0e7e18 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x56168b0e7e00 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x56168b0e7dc0 <col:44> 'int' lvalue ParmVar 0x56168b0b0618 'i' 'int'
| |   |   |     `-IntegerLiteral 0x56168b0e7de0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x56168b0e7ec8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x56168b0e7ea8 <col:59> 'int' 0
| |   |   `-CallExpr 0x56168b0e80f0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x56168b0e80d8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x56168b0e80b8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x56168b0e8130 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56168b0e7f38 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x56168b0e8148 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x56168b0e7f60 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x56168b0e8160 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x56168b0e7f98 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x56168b0e8178 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x56168b0e80a0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x56168b0e8088 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x56168b0e8038 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x56168b0e8290 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x56168b0e8270 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x56168b0e8240 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x56168b0e81f0 <col:20> 'Router::Port [2]' lvalue ->p 0x56168b0affe8
| |       |   `-CXXThisExpr 0x56168b0e81e0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x56168b0e8258 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x56168b0e8220 <col:22> 'int' lvalue ParmVar 0x56168b0b0618 'i' 'int'
| |-CXXMethodDecl 0x56168b0b08a8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x56168b0b07e8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x56168b0e8678 <col:52, line:190:9>
| |   `-ReturnStmt 0x56168b0e8668 <line:189:13, col:51>
| |     `-BinaryOperator 0x56168b0e8648 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x56168b0e8460 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x56168b0e8448 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x56168b0e8400 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56168b0ade18 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x56168b0e8338 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x56168b0e8320 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x56168b0e82d0 <col:20> 'Router::Port const[2]' lvalue ->p 0x56168b0affe8
| |       | | |   `-CXXThisExpr 0x56168b0e82c0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x56168b0e8300 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x56168b0e83e0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x56168b0e83c8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x56168b0e8378 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x56168b0affe8
| |       |   |   `-DeclRefExpr 0x56168b0e8358 <col:28> 'const Router::Connection' lvalue ParmVar 0x56168b0b07e8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x56168b0e83a8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x56168b0e8610 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x56168b0e85f8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x56168b0e85d8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56168b0ade18 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x56168b0e8510 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x56168b0e84f8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x56168b0e84a8 <col:38> 'Router::Port const[2]' lvalue ->p 0x56168b0affe8
| |         | |   `-CXXThisExpr 0x56168b0e8498 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x56168b0e84d8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x56168b0e85b8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x56168b0e85a0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x56168b0e8550 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x56168b0affe8
| |           |   `-DeclRefExpr 0x56168b0e8530 <col:46> 'const Router::Connection' lvalue ParmVar 0x56168b0b07e8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x56168b0e8580 <col:50> 'int' 1
| `-CXXMethodDecl 0x56168b0b09f0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x56168b0b0960 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x56168b0e8c10 <col:51, line:193:9>
|     `-ReturnStmt 0x56168b0e8c00 <line:192:13, col:69>
|       `-BinaryOperator 0x56168b0e8be0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x56168b0e8808 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x56168b0e87f0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x56168b0e87d0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56168b0afad0 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x56168b0e8708 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x56168b0e86f0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x56168b0e86a0 <col:20> 'Router::Port const[2]' lvalue ->p 0x56168b0affe8
|         | | |   `-CXXThisExpr 0x56168b0e8690 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x56168b0e86d0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x56168b0e87b0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x56168b0e8798 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x56168b0e8748 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x56168b0affe8
|         |   |   `-DeclRefExpr 0x56168b0e8728 <col:27> 'const Router::Connection' lvalue ParmVar 0x56168b0b0960 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x56168b0e8778 <col:31> 'int' 0
|         `-ParenExpr 0x56168b0e8bc0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x56168b0e8ba0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x56168b0e89b8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x56168b0e89a0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x56168b0e8980 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56168b0ade18 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x56168b0e88b8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x56168b0e88a0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x56168b0e8850 <col:38> 'Router::Port const[2]' lvalue ->p 0x56168b0affe8
|             | | |   `-CXXThisExpr 0x56168b0e8840 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x56168b0e8880 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x56168b0e8960 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x56168b0e8948 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x56168b0e88f8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x56168b0affe8
|             |   |   `-DeclRefExpr 0x56168b0e88d8 <col:46> 'const Router::Connection' lvalue ParmVar 0x56168b0b0960 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x56168b0e8928 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x56168b0e8b68 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x56168b0e8b50 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56168b0e8b30 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x56168b0afad0 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x56168b0e8a68 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x56168b0e8a50 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x56168b0e8a00 <col:56> 'Router::Port const[2]' lvalue ->p 0x56168b0affe8
|               | |   `-CXXThisExpr 0x56168b0e89f0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x56168b0e8a30 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x56168b0e8b10 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x56168b0e8af8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x56168b0e8aa8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x56168b0affe8
|                 |   `-DeclRefExpr 0x56168b0e8a88 <col:63> 'const Router::Connection' lvalue ParmVar 0x56168b0b0960 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x56168b0e8ad8 <col:67> 'int' 1
|-AccessSpecDecl 0x56168b0b0ab0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x56168b0b0ad8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x56168b0b0b90 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x56168b0b0c50 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56168b0b0ca0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56168b0b0cf0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x56168b0b0d40 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x56168b0b0d90 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x56168b0b0de0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x56168b0b0ef8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56168b0b0ed8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x56168b0b0ec0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x56168b0b0ea0 <col:25> 'int' 2
| |-EnumConstantDecl 0x56168b0b0fa0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56168b0b0f80 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x56168b0b0f68 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x56168b0b0f48 <col:48> 'int' 1
| |-EnumConstantDecl 0x56168b0b1030 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56168b0b1010 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x56168b0b0ff0 <col:71> 'int' 0
| |-EnumConstantDecl 0x56168b0b10c0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x56168b0b10a0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x56168b0b1080 <col:30> 'int' 1
| `-EnumConstantDecl 0x56168b0b1150 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x56168b0b1130 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x56168b0b1110 <col:50> 'int' 2
|-FieldDecl 0x56168b0b11b0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x56168b0b1210 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x56168b0b1278 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x56168b0b1318 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x56168b0b12f8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x56168b0b12c8 <col:30> 'int' 1
|-FieldDecl 0x56168b0b13b8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x56168b0b1398 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x56168b0b1368 <col:33> 'int' 1
|-FieldDecl 0x56168b0b1458 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x56168b0b1438 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x56168b0b1408 <col:32> 'int' 1
|-FieldDecl 0x56168b0b14c0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x56168b0b1520 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x56168b0bd800 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x56168b0bd900 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56168b0bda00 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56168b0bdb00 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x56168b0bdc10 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x56168b0bdc60 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56168b0bdd78 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x56168b0bde18 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x56168b0bde78 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x56168b0bdf10 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56168b0bdf10
| | `-ParmVarDecl 0x56168b0be028 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x56168b0be0c8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56168b0be0c8
| | `-ParmVarDecl 0x56168b0be1d8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x56168b0be278 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x56168b0be278
| | `-ParmVarDecl 0x56168b0be388 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x56168b0be3f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x56168b0be3f8
| | `-ParmVarDecl 0x56168b0be508 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x56168b0be590 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x56168b0be590
|-FieldDecl 0x56168b0cc210 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x56168b0cc270 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x56168b0cc380 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56168b0cc6d8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x56168b0cc7e0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56168b0d47d0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x56168b0d48e0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x56168b0d49e0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56168b0d4af0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56168b0d4c00 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56168b0d4d10 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56168b0d4e20 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x56168b0d4e70 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x56168b0d4f70 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x56168b0d4fc0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168b0d4f50 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x56168b0d4f30 <col:29> 'int' 256
|-FieldDecl 0x56168b0d5020 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x56168b0d5088 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x56168b0d50f0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x56168b0d51f0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56168b0dd900 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x56168b0dd960 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x56168b0dd9c0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x56168b0dda10 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x56168b0ddb28 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x56168b0ddbb8 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x56168b0ddcc0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x56168b0ddd10 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x56168b0ddca0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x56168b0ddc80 <col:27> 'int' 4096
| |-FieldDecl 0x56168b0ddd38 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x56168b0ddda0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x56168b0ddf98 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x56168b0de028 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x56168b0de1e8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x56168b0de088 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x56168b0de100 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x56168b0ddd38 'name' 'String'
| | | `-CXXConstructExpr 0x56168b0e8c68 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x56168b0e8c28 <col:20> 'const String' lvalue ParmVar 0x56168b0de088 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x56168b0ddda0 'nsig' 'int'
| | | `-IntegerLiteral 0x56168b0e8cc0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x56168b0ddf98 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x56168b0e8da8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x56168b0de028 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x56168b0e8d68 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56168b0e8d28 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x56168b0de100 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x56168b0e9038 <col:42, line:289:9>
| |   `-CallExpr 0x56168b0e8fe8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x56168b0e8fd0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x56168b0e8fb0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x56168ac0c628 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x56168b0e9020 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x56168b0e8ef8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x56168b0e8ed8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x56168b0e8ec0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x56168b0e8e70 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x56168b0ddf98
| |     |     |   `-CXXThisExpr 0x56168b0e8e60 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x56168b0e8ea0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x56168b0e8f10 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x56168b0e8f90 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x56168b0e8f70 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x56168b0e8f40 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x56168b0ddf98 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x56168b0e8f30 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x56168b0de2c8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56168b0de2c8
| | `-ParmVarDecl 0x56168b0de3d8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x56168b0de478 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56168b0de478
| | `-ParmVarDecl 0x56168b0de588 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x56168b0de628 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x56168b0de628
| | `-ParmVarDecl 0x56168b0de738 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x56168b0de7a8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x56168b0de7a8
| | `-ParmVarDecl 0x56168b0de8b8 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x56168b0de940 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x56168b0de940
|-FieldDecl 0x56168b0dea30 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x56168b0dea90 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x56168b0deaf0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x56168b0deb50 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x56168b0debb0 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x56168b0decc0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x56168b0dedc0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x56168b0dee20 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x56168b0def68 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x56168b0deea8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x56168b0df118 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x56168b0df028 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x56168b0df260 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x56168b0df1d0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x56168b0df608 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x56168b0df318 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x56168b0df390 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x56168b0df410 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x56168b0df488 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x56168b0df500 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168b0e2640 <col:57> 'bool' false
|-CXXMethodDecl 0x56168b0df778 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56168b0df6e0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0df8c8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56168b0df830 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0dfa18 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56168b0df980 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0dfb70 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x56168b0dfad8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x56168b0dfe90 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x56168b0dfc28 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x56168b0dfca0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x56168b0dfd20 <col:56> col:59 'int'
| `-ParmVarDecl 0x56168b0dfd98 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0dfff8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x56168b0dff60 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x56168b0e00c0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x56168b0e0180 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x56168b0e0380 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x56168b0e0230 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x56168b0e02a8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x56168b0e0450 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x56168b0e0598 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x56168b0e0500 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x56168b0e9240 <col:42, line:326:5>
|   `-ReturnStmt 0x56168b0e9230 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x56168b0e9218 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x56168b0e91f8 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x56168b0e91c8 <col:16, col:45> '<bound member function type>' .back 0x56168af660e8
|           `-ArraySubscriptExpr 0x56168b0e9148 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x56168b0e9118 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168b0e9060 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x56168b0cc6d8
|             |   `-CXXThisExpr 0x56168b0e9050 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x56168b0e9130 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x56168b0e9090 <col:38> 'bool' lvalue ParmVar 0x56168b0e0500 'isout' 'bool'
|-CXXMethodDecl 0x56168b0e0768 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x56168b0e0650 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x56168b0e06c8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x56168b0e08c0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x56168b0e0828 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x56168b0e0b68 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x56168b0e0978 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x56168b0e09f0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x56168b0e0a70 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x56168b0e0d40 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x56168b0e0c30 <col:30> col:34 'bool'
| `-ParmVarDecl 0x56168b0e0ca8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x56168b0e0ec8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x56168b0e0e08 <col:30> col:33 'int'
|-CXXMethodDecl 0x56168b0e1160 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x56168b0e0f88 <col:23> col:26 'int'
| |-ParmVarDecl 0x56168b0e1000 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x56168b0e1078 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x56168b0e1378 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x56168b0e1228 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x56168b0e12a0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x56168b0e1588 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x56168b0e1440 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x56168b0e14b8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x56168b0e1708 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x56168b0e1648 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x56168b0e1908 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x56168b0e17c0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x56168b0e1838 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x56168b0e1ae0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56168b0e19c8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x56168b0e1a48 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x56168b0e1dc0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56168b0e1ba0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x56168b0e1c18 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x56168b0e1c98 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x56168b0e1d10 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x56168b0e1ea0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56168b0e1f00 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x56168b0e2180 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x56168b0e2080 parent 0x56168af7e750 prev 0x56168af9efb8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x56168b0e1f60 <col:36> col:39 'int'
    `-ParmVarDecl 0x56168b0e1fe0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168af7e750 prev 0x56168af7e4d0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168af7e848 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56168af7e8d8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56168af7e938 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x56168af7ea28 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x56168af7eb28 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56168af7ecf8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56168af7eba8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56168af7ec20 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56168af7ee88 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56168af7edc0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56168af7ef30 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56168af7f068 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56168af7efa0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56168af7f208 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56168af7f148 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56168af7f3a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56168af7f2e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56168af7f450 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56168af7f550 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56168af7f630 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168af7f530 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56168af7f510 <col:26> 'int' 1
| `-EnumConstantDecl 0x56168af7f5e0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56168af7f648 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168af7f5c0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56168af7f5a0 <col:44> 'int' 2
|-CXXMethodDecl 0x56168af7f790 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56168af7f678 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56168af7f6f8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56168af7f8e8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56168af7f858 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56168af7fb28 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56168af7f9a8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56168af7fa20 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56168af7fbd8 <col:20>
| `-OptimizeNoneAttr 0x56168af7fc30 <col:30>
|-CXXMethodDecl 0x56168af7fd38 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56168af7fc70 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56168af7fde0 <col:20>
| `-OptimizeNoneAttr 0x56168af7fe38 <col:30>
|-CXXMethodDecl 0x56168af7fe88 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56168af7ff50 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56168af80068 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56168af800f0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56168af80178 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56168af80200 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56168af80288 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56168af80318 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56168af803d8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56168af80460 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x56168af804e8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56168af80570 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56168af805f8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56168af80680 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56168af80710 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56168af807d0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56168af80860 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56168ae93030 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56168ae92f98 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56168ae931c0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56168ae930f0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56168ae93460 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56168ae93278 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56168ae932f8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56168ae93378 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56168ae93518 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56168ae93620 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56168ae938b0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae93600 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56168ae935e0 <col:33> 'int' 0
| |-EnumConstantDecl 0x56168ae936b0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56168ae938c8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae93690 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56168ae93670 <col:32> 'int' 20
| |-EnumConstantDecl 0x56168ae93740 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56168ae938e0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae93720 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56168ae93700 <col:38> 'int' 90
| |-EnumConstantDecl 0x56168ae937d0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56168ae938f8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae937b0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56168ae93790 <col:35> 'int' 100
| `-EnumConstantDecl 0x56168ae93860 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56168ae93910 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168ae93840 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56168ae93820 <col:32> 'int' 2000
|-CXXMethodDecl 0x56168ae93950 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56168ae93d90 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56168ae93c00 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56168ae93c78 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168ae93e60 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56168ae93fe0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56168ae93f10 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168ae941e8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56168ae94098 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56168ae94110 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168ae942e8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56168ae94388 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56168ae94450 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56168ae944e0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56168ae94710 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae944c0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56168ae944a0 <col:36> 'int' EnumConstant 0x56168ae94450 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56168ae94530 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56168ae94580 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56168ae945d0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56168ae94620 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56168ae94670 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56168ae946c0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56168ae947f8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56168ae94738 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56168ae948c0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56168ae94980 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56168ae94a40 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56168ae94b00 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56168ae94c18 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56168ae94ce0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x56168ae94e60 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56168ae94d90 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56168ae94f88 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56168ae95188 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56168ae95038 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56168ae950b8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56168afa10a8 <col:54, line:127:5>
|   |-ParenExpr 0x56168afa0f58 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56168afa0f28 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56168afa0c18 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56168afa0bf0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56168afa0bd8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56168afa0bc0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56168afa0b90 <col:31> 'Router *' lvalue ->_router 0x56168af9ea70
|   |   |         `-CXXThisExpr 0x56168afa0b80 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56168afa0c78 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168afa0c58 <col:48> 'int' 0
|   |   `-CallExpr 0x56168afa0e88 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56168afa0e70 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168afa0e50 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168afa0ec8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168afa0ce8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56168afa0ee0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168afa0d08 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56168afa0ef8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168afa0d40 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56168afa0f10 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168afa0e38 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168afa0e20 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168afa0dd8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56168afa0ff0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56168afa0f88 <col:9> 'Router *' lvalue ->_router 0x56168af9ea70
|   | | `-CXXThisExpr 0x56168afa0f78 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56168afa0fd8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56168afa0fb8 <col:19> 'Router *' lvalue ParmVar 0x56168ae95038 'r' 'Router *'
|   `-BinaryOperator 0x56168afa1088 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56168afa1020 <col:9> 'int' lvalue ->_eindex 0x56168af9ead8
|     | `-CXXThisExpr 0x56168afa1010 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56168afa1070 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56168afa1050 <col:19> 'int' lvalue ParmVar 0x56168ae950b8 'eindex' 'int'
|-CXXMethodDecl 0x56168ae95310 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56168ae95248 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56168ae953e0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56168ae954a8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56168ae95548 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56168ae95798 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56168ae95610 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56168ae95690 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56168ae95848 <col:20>
| `-OptimizeNoneAttr 0x56168ae958a0 <col:30>
|-CXXMethodDecl 0x56168ae959a8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56168ae958e0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56168ae95a50 <col:20>
| `-OptimizeNoneAttr 0x56168ae95aa8 <col:30>
|-CXXMethodDecl 0x56168ae95b78 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56168ae95ae8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56168ae95c20 <col:20>
| `-OptimizeNoneAttr 0x56168ae95c78 <col:30>
|-CXXMethodDecl 0x56168ae95e08 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56168ae95cb0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56168ae95d30 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56168ae95f98 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56168ae95ed0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56168ae960e8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56168ae96058 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56168ae96238 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56168ae961a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56168ae96388 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56168ae962f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56168ae96648 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56168ae96440 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56168ae964c0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56168ae96568 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56168ae96720 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56168ae967e0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56168ae96ab0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56168ae96960 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56168ae969d8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56168ae96bd8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56168ae96db0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56168ae96c90 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56168ae96d10 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56168ae96f98 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56168ae96e78 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56168ae96ef8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56168ae97308 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56168ae97058 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56168ae970d0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56168ae97150 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56168afa0690 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56168afa0670 <col:106> 'int' 0
| `-ParmVarDecl 0x56168ae971c8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168afa06c8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168afa06a8 <col:126> 'int' 0
|-CXXMethodDecl 0x56168ae97688 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56168ae973d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56168ae97450 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56168ae974d0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56168ae97548 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168afa0700 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168afa06e0 <col:114> 'int' 0
|-CXXMethodDecl 0x56168ae97a18 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56168ae97760 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56168ae977d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56168ae97858 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56168afa0718 <col:96> 'int' 0
| `-ParmVarDecl 0x56168ae978d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168afa0758 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168afa0738 <col:116> 'int' 0
|-CXXMethodDecl 0x56168ae97d98 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56168ae97ae8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56168ae97b60 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56168ae97be0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56168afa0790 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56168afa0770 <col:109> 'int' 0
| `-ParmVarDecl 0x56168ae97c58 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168afa07c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168afa07a8 <col:129> 'int' 0
|-CXXMethodDecl 0x56168ae98118 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56168ae97e68 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56168ae97ee0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56168ae97f60 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56168ae97fd8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168afa0800 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168afa07e0 <col:117> 'int' 0
|-CXXMethodDecl 0x56168ae984a8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56168ae981f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168ae98268 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56168ae982e8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56168afa0818 <col:99> 'int' 0
| `-ParmVarDecl 0x56168ae98360 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56168afa0858 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56168afa0838 <col:119> 'int' 0
|-CXXMethodDecl 0x56168ae988c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56168ae98578 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56168ae985f8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56168ae98670 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56168ae986f0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56168afa0890 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56168afa0870 <col:108> 'int' 0
| `-ParmVarDecl 0x56168ae98770 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56168afa08c8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56168afa08a8 <col:141> 'int' 0
|-CXXMethodDecl 0x56168ae98ce8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56168ae989a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56168ae98a20 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56168ae98a98 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56168ae98b18 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56168ae98b98 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56168afa08e0 <col:121> 'int' 0
|-CXXMethodDecl 0x56168ae99118 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56168ae98dc8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56168ae98e48 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56168ae98ec0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56168ae98f40 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56168afa0900 <col:98> 'int' 0
| `-ParmVarDecl 0x56168ae98fc0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56168afa0920 <col:123> 'int' 0
|-CXXMethodDecl 0x56168ae993e0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56168ae991f0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56168ae99270 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56168ae992f0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56168afa0940 <col:80> 'int' 0
|-EnumDecl 0x56168ae99498 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56168ae995a0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56168ae99830 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae99580 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56168ae99560 <col:42> 'int' 1
| |-EnumConstantDecl 0x56168ae99630 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56168ae99848 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae99610 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56168ae995f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56168ae996c0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56168ae99860 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae996a0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56168ae99680 <col:44> 'int' 4
| |-EnumConstantDecl 0x56168ae99750 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56168ae99878 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168ae99730 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56168ae99710 <col:36> 'int' 7
| `-EnumConstantDecl 0x56168ae997e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56168ae99890 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168ae997c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56168ae997a0 <col:34> 'int' 6
|-CXXMethodDecl 0x56168ae99b48 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56168ae998b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56168ae99958 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56168ae999d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56168ae99a50 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56168afa09f8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56168afa09e0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56168afa09c8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56168afa09a8 <col:98, col:105> 'String' (CXXTemporary 0x56168afa09a8)
|           `-CXXTemporaryObjectExpr 0x56168afa0970 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56168ae99de8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56168ae99c18 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56168ae99c90 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56168ae99d08 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56168afa0aa8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56168afa0a90 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56168afa0a78 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56168afa0a58 <col:94, col:101> 'String' (CXXTemporary 0x56168afa0a58)
| |         `-CXXTemporaryObjectExpr 0x56168afa0a20 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56168afa1290 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56168afa1208 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56168afa11d8 <col:9> '<bound member function type>' ->add_task_handlers 0x56168ae99b48
|     | `-CXXThisExpr 0x56168afa11c8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56168afa1248 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56168afa1148 <col:27> 'Task *' lvalue ParmVar 0x56168ae99c18 'task' 'Task *'
|     |-ImplicitCastExpr 0x56168afa1260 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56168afa1168 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56168ae99c90 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56168afa1278 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56168afa1188 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56168ae997e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56168afa11a8 <col:62> 'const String' lvalue ParmVar 0x56168ae99d08 'prefix' 'const String &'
|-CXXMethodDecl 0x56168ae99ff8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56168ae99eb0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56168ae99f28 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56168afa0b58 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56168afa0b40 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56168afa0b28 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56168afa0b08 <col:70, col:77> 'String' (CXXTemporary 0x56168afa0b08)
| |         `-CXXTemporaryObjectExpr 0x56168afa0ad0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56168afa1468 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56168afa13e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56168afa13b0 <col:9> '<bound member function type>' ->add_task_handlers 0x56168ae99b48
|     | `-CXXThisExpr 0x56168afa13a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56168afa1420 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56168afa1320 <col:27> 'Task *' lvalue ParmVar 0x56168ae99eb0 'task' 'Task *'
|     |-ImplicitCastExpr 0x56168afa1438 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56168afa1340 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56168afa1450 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56168afa1360 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56168ae997e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56168afa1380 <col:57> 'const String' lvalue ParmVar 0x56168ae99f28 'prefix' 'const String &'
|-CXXMethodDecl 0x56168ae9a2d8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56168ae9a0c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168ae9a140 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168ae9a1b8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56168ae9a588 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56168ae9a3a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168ae9a428 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168ae9a4a8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56168ae9a878 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56168ae9a658 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168ae9a6d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168ae9a750 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56168ae9ab28 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56168ae9a948 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168ae9a9c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168ae9aa48 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56168ae9add8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56168ae9abf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168ae9ac78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168ae9acf8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56168af9a708 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56168ae9aea8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9a5b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9a628 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56168af9a9b8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56168af9a7d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9a858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9a8d8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56168af9ac68 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56168af9aa88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9ab08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9ab88 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56168af9af48 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56168af9ad38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9adb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9ae60 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56168af9b228 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56168af9b018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9b098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9b140 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56168af9b490 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56168af9b2f8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56168af9b378 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56168af9b3f0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56168af9b738 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56168af9b560 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56168af9b5e0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56168af9b658 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56168af9b9e8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56168af9b808 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9b888 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9b908 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56168af9bc98 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56168af9bab8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9bb38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9bbb0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56168af9bf48 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56168af9bd68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9bde8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9be60 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56168af9c218 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56168af9c018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9c098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56168af9c138 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56168af9c548 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56168af9c2e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56168af9c368 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56168af9c3e0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56168af9c458 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168afa0b70 <col:93> 'bool' false
|-CXXMethodDecl 0x56168af9c730 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56168af9c618 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56168af9c698 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56168af9c908 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56168af9c7f0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56168af9c870 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56168af9cbe8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56168af9c9c8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56168af9ca40 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56168af9cac0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56168af9cb38 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56168af9ced8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56168af9ccb8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56168af9cd30 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56168af9cdb0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56168af9ce28 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56168af9d110 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56168af9cfb0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56168af9d030 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56168af9d2f8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56168af9d1d8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56168af9d258 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56168af9d3a8 prev 0x56168ae95548 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168af9d4a0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56168af9d530 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56168af9d5a8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56168af9d668 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56168af9d730 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56168af9d8a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56168af9d7e0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56168af9d950 <col:24>
| | `-OptimizeNoneAttr 0x56168af9d9a8 <col:34>
| |-CXXMethodDecl 0x56168af9d9f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56168af9dca8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56168af9daa0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56168af9db18 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56168af9db98 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56168af9dd60 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56168af9dd98 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56168af9de00 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56168af9de88 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56168af9e1a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56168af9df40 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56168af9dfb8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56168af9e030 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56168af9e0b0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56168af9e2c0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56168afa5c58 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56168afa5c58
| | `-ParmVarDecl 0x56168afa5d68 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56168afa5e08 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56168afa5e08
| | `-ParmVarDecl 0x56168afa5f18 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56168aec0fc8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56168af9e338 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56168af9e3d8 <col:38> "" ""
|-CXXMethodDecl 0x56168af9e468 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56168af9e508 <col:44> "" ""
|-AccessSpecDecl 0x56168af9e578 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56168af9e5a0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56168af9e6a0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56168af9e6f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168af9e680 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56168af9e660 <col:27> 'int' 4
|-FieldDecl 0x56168af9e7a8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56168af9e958 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56168af9ea10 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56168af9ea70 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56168af9ead8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56168af9ec28 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56168af9eb68 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56168af9edd8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56168af9ece8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56168af9efb8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56168af9ee98 <col:20> col:23 'int'
| `-ParmVarDecl 0x56168af9ef18 <col:25> col:28 'int'
|-CXXMethodDecl 0x56168af9f260 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56168af9f080 <col:23> col:26 'int'
| |-ParmVarDecl 0x56168af9f100 <col:28> col:31 'int'
| `-ParmVarDecl 0x56168af9f178 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56168af9f318 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56168af9f3e0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56168af9f430 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56168af9f480 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56168af9f660 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56168af9f510 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56168af9f588 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168af9f908 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56168af9f728 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56168af9f7a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56168af9f820 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56168af9fb28 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56168af9f9d8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56168af9fa58 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56168af9fe60 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56168af9fbe8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56168af9fc68 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56168af9fce0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56168af9fd60 <col:57> col:60 'int'
|-CXXMethodDecl 0x56168afa0048 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56168af9ff30 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56168af9ffb0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56168afa0198 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56168afa0108 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56168afa0518 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56168afa0258 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56168afa02d8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56168afa0350 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56168afa03d0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56168afa0630 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Classification::Wordwise::CompressedProgram
         0 |   class Vector<unsigned int> _zprog
         0 |     class vector_memory<class sized_array_memory<4> > vm_
         0 |       vector_memory<class sized_array_memory<4> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   int _output_everything
        20 |   unsigned int _safe_length
        24 |   unsigned int _align_offset
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPFilter
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Classification::Wordwise::CompressedProgram _zprog
       112 |     class Vector<unsigned int> _zprog
       112 |       class vector_memory<class sized_array_memory<4> > vm_
       112 |         vector_memory<class sized_array_memory<4> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |     int _output_everything
       132 |     unsigned int _safe_length
       136 |     unsigned int _align_offset
           | [sizeof=144, dsize=144, align=8,
           |  nvsize=144, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168af507f8 <../elements/standard/classification.hh:238:1, line:276:1> line:238:7 referenced class CompressedProgram definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-CXXRecordDecl 0x56168af50918 <col:1, col:7> col:7 implicit referenced class CompressedProgram
|-AccessSpecDecl 0x56168af509a8 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x56168af50a30 <line:240:5, line:243:5> line:240:5 CompressedProgram 'void ()'
| |-CXXCtorInitializer Field 0x56168af5c810 '_zprog' 'Vector<uint32_t>':'Vector<unsigned int>'
| | `-CXXConstructExpr 0x56168af5d230 <col:5> 'Vector<uint32_t>':'Vector<unsigned int>' 'void ()'
| |-CXXCtorInitializer Field 0x56168af5c878 '_output_everything' 'int'
| | `-UnaryOperator 0x56168af5d078 <line:241:23, col:24> 'int' prefix '-'
| |   `-ImplicitCastExpr 0x56168af5d060 <col:24> 'int' <IntegralCast>
| |     `-DeclRefExpr 0x56168af5d040 <col:24> 'Classification::Jumps' EnumConstant 0x56168abf4278 'j_never' 'Classification::Jumps'
| |-CXXCtorInitializer Field 0x56168af5c8e0 '_safe_length' 'unsigned int'
| | `-CStyleCastExpr 0x56168af5d140 <col:47, col:59> 'unsigned int' <NoOp>
| |   `-ImplicitCastExpr 0x56168af5d128 <col:58, col:59> 'unsigned int' <IntegralCast> part_of_explicit_cast
| |     `-UnaryOperator 0x56168af5d0f8 <col:58, col:59> 'int' prefix '-'
| |       `-IntegerLiteral 0x56168af5d0d8 <col:59> 'int' 1
| |-CXXCtorInitializer Field 0x56168af5c948 '_align_offset' 'unsigned int'
| | `-ImplicitCastExpr 0x56168af5d1f0 <line:242:18> 'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168af5d1b0 <col:18> 'int' 0
| `-CompoundStmt 0x56168af5d2b0 <col:21, line:243:5>
|-CXXMethodDecl 0x56168af50b30 <line:245:5, line:247:5> line:245:14 align_offset 'unsigned int () const'
| `-CompoundStmt 0x56168af5d328 <col:35, line:247:5>
|   `-ReturnStmt 0x56168af5d318 <line:246:2, col:9>
|     `-ImplicitCastExpr 0x56168af5d300 <col:9> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56168af5d2d0 <col:9> 'const unsigned int' lvalue ->_align_offset 0x56168af5c948
|         `-CXXThisExpr 0x56168af5d2c0 <col:9> 'const Classification::Wordwise::CompressedProgram *' implicit this
|-CXXMethodDecl 0x56168af50bf8 <line:248:5, line:250:5> line:248:9 used output_everything 'int () const'
| `-CompoundStmt 0x56168af5d3a8 <col:35, line:250:5>
|   `-ReturnStmt 0x56168af5d398 <line:249:2, col:9>
|     `-ImplicitCastExpr 0x56168af5d380 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56168af5d350 <col:9> 'const int' lvalue ->_output_everything 0x56168af5c878
|         `-CXXThisExpr 0x56168af5d340 <col:9> 'const Classification::Wordwise::CompressedProgram *' implicit this
|-CXXMethodDecl 0x56168af50cc0 <line:251:5, line:253:5> line:251:14 used safe_length 'unsigned int () const'
| `-CompoundStmt 0x56168af5d428 <col:34, line:253:5>
|   `-ReturnStmt 0x56168af5d418 <line:252:2, col:9>
|     `-ImplicitCastExpr 0x56168af5d400 <col:9> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56168af5d3d0 <col:9> 'const unsigned int' lvalue ->_safe_length 0x56168af5c8e0
|         `-CXXThisExpr 0x56168af5d3c0 <col:9> 'const Classification::Wordwise::CompressedProgram *' implicit this
|-CXXMethodDecl 0x56168af50d80 <line:255:5, line:257:5> line:255:21 used begin 'const uint32_t *() const'
| `-CompoundStmt 0x56168af5d568 <col:35, line:257:5>
|   `-ReturnStmt 0x56168af5d558 <line:256:2, col:22>
|     `-CXXMemberCallExpr 0x56168af5d510 <col:9, col:22> 'Vector<unsigned int>::const_iterator':'const unsigned int *'
|       `-MemberExpr 0x56168af5d4e0 <col:9, col:16> '<bound member function type>' .begin 0x56168af59438
|         `-MemberExpr 0x56168af5d450 <col:9> 'const Vector<uint32_t>':'const Vector<unsigned int>' lvalue ->_zprog 0x56168af5c810
|           `-CXXThisExpr 0x56168af5d440 <col:9> 'const Classification::Wordwise::CompressedProgram *' implicit this
|-CXXMethodDecl 0x56168af50e40 <line:258:5, line:260:5> line:258:21 end 'const uint32_t *() const'
| `-CompoundStmt 0x56168af5d680 <col:33, line:260:5>
|   `-ReturnStmt 0x56168af5d670 <line:259:2, col:20>
|     `-CXXMemberCallExpr 0x56168af5d650 <col:9, col:20> 'Vector<unsigned int>::const_iterator':'const unsigned int *'
|       `-MemberExpr 0x56168af5d620 <col:9, col:16> '<bound member function type>' .end 0x56168af59588
|         `-MemberExpr 0x56168af5d590 <col:9> 'const Vector<uint32_t>':'const Vector<unsigned int>' lvalue ->_zprog 0x56168af5c810
|           `-CXXThisExpr 0x56168af5d580 <col:9> 'const Classification::Wordwise::CompressedProgram *' implicit this
|-CXXMethodDecl 0x56168af510c8 <line:262:5, line:263:30> line:262:10 compile 'void (const Classification::Wordwise::Program &, bool, unsigned int)'
| |-ParmVarDecl 0x56168af50ef0 <col:18, col:33> col:33 prog 'const Classification::Wordwise::Program &'
| |-ParmVarDecl 0x56168af50f68 <col:39, col:44> col:44 perform_binary_search 'bool'
| `-ParmVarDecl 0x56168af50fe8 <line:263:4, col:13> col:13 min_binary_search 'unsigned int'
|-CXXMethodDecl 0x56168af512a8 <line:265:5, col:64> col:10 warn_unused_outputs 'void (int, ErrorHandler *) const'
| |-ParmVarDecl 0x56168af51198 <col:30, col:34> col:34 noutputs 'int'
| `-ParmVarDecl 0x56168af51210 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168af51378 <line:267:5, col:22> col:12 unparse 'String () const'
|-AccessSpecDecl 0x56168af51418 <line:269:3, col:10> col:3 private
|-FieldDecl 0x56168af5c810 <line:271:5, col:22> col:22 referenced _zprog 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x56168af5c878 <line:272:5, col:9> col:9 referenced _output_everything 'int'
|-FieldDecl 0x56168af5c8e0 <line:273:5, col:14> col:14 referenced _safe_length 'unsigned int'
|-FieldDecl 0x56168af5c948 <line:274:5, col:14> col:14 referenced _align_offset 'unsigned int'
|-CXXConstructorDecl 0x56168af5c9c8 <line:238:7> col:7 implicit CompressedProgram 'void (const Classification::Wordwise::CompressedProgram &)' inline default noexcept-unevaluated 0x56168af5c9c8
| `-ParmVarDecl 0x56168af5cad8 <col:7> col:7 'const Classification::Wordwise::CompressedProgram &'
|-CXXConstructorDecl 0x56168af5cb78 <col:7> col:7 implicit CompressedProgram 'void (Classification::Wordwise::CompressedProgram &&)' inline default noexcept-unevaluated 0x56168af5cb78
| `-ParmVarDecl 0x56168af5cc88 <col:7> col:7 'Classification::Wordwise::CompressedProgram &&'
|-CXXMethodDecl 0x56168af5cd28 <col:7> col:7 implicit operator= 'Classification::Wordwise::CompressedProgram &(const Classification::Wordwise::CompressedProgram &)' inline default noexcept-unevaluated 0x56168af5cd28
| `-ParmVarDecl 0x56168af5ce38 <col:7> col:7 'const Classification::Wordwise::CompressedProgram &'
|-CXXMethodDecl 0x56168af5cea8 <col:7> col:7 implicit operator= 'Classification::Wordwise::CompressedProgram &(Classification::Wordwise::CompressedProgram &&)' inline default noexcept-unevaluated 0x56168af5cea8
| `-ParmVarDecl 0x56168af5cfb8 <col:7> col:7 'Classification::Wordwise::CompressedProgram &&'
`-CXXDestructorDecl 0x56168aec10b0 <col:7> col:7 implicit ~CompressedProgram 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%"class.Classification::Wordwise::CompressedProgram" = type <{ %class.Vector.2, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Classification::Wordwise::CompressedProgram.base" = type <{ %class.Vector.2, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168afa8db8 <../elements/ip/ipfilter.hh:110:1, line:301:1> line:110:7 referenced class IPFilter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56168afa8f18 <col:1, col:7> col:7 implicit referenced class IPFilter
|-AccessSpecDecl 0x56168afa8fa8 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x56168afa9030 <line:112:5, col:14> col:5 used IPFilter 'void ()'
|-CXXDestructorDecl 0x56168afa9120 <line:113:5, col:15> col:5 used ~IPFilter 'void () noexcept'
| `-Overrides: [ 0x56168af7ea28 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x56168afa9220 <line:115:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56168afa92e0 <line:116:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56168afa93d0 <line:118:5, col:57> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x56168af7fe88 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56168afb3a70 <col:36, col:57>
|   `-ReturnStmt 0x56168afb3a60 <col:38, col:45>
|     `-ImplicitCastExpr 0x56168afb3a48 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56168afb3a28 <col:45> 'const char [9]' lvalue "IPFilter"
|-CXXMethodDecl 0x56168afa9498 <line:119:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x56168af7ff50 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56168afb3ad0 <col:36, col:52>
|   `-ReturnStmt 0x56168afb3ac0 <col:38, col:45>
|     `-ImplicitCastExpr 0x56168afb3aa8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56168afb3a88 <col:45> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x56168afa9560 <line:120:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x56168af80318 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56168afb3b30 <col:36, col:51>
|   `-ReturnStmt 0x56168afb3b20 <col:38, col:45>
|     `-ImplicitCastExpr 0x56168afb3b08 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56168afb3ae8 <col:45> 'const char []' lvalue Var 0x56168af80460 'PUSH' 'const char []'
|-CXXMethodDecl 0x56168afa9628 <line:122:5, col:44> col:17 flags 'const char *() const'
| |-Overrides: [ 0x56168af80860 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x56168afb3bc8 <col:31, col:44>
|   `-ReturnStmt 0x56168afb3bb8 <col:33, col:40>
|     `-ImplicitCastExpr 0x56168afb3ba0 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56168afb3b88 <col:40> 'const char [1]' lvalue ""
|-CXXMethodDecl 0x56168afa96e8 <line:123:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x56168ae967e0 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x56168afb3c00 <col:39, col:54>
|   `-ReturnStmt 0x56168afb3bf0 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x56168afb3be0 <col:48> 'bool' true
|-CXXMethodDecl 0x56168afa99c0 <line:125:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56168ae93d90 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56168afa9870 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x56168afa98e8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x56168afa9a90 <line:126:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x56168ae93e60 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x56168afa9c58 <line:128:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x56168af7ecf8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56168afa9b48 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x56168afa9bc0 <col:25, col:32> col:33 'Packet *'
|-TypedefDecl 0x56168afa9dc0 <line:130:5, col:57> col:57 referenced IPFilterProgram 'Classification::Wordwise::CompressedProgram':'Classification::Wordwise::CompressedProgram'
| `-ElaboratedType 0x56168afa9d50 'Classification::Wordwise::CompressedProgram' sugar
|   `-RecordType 0x56168af50890 'Classification::Wordwise::CompressedProgram'
|     `-CXXRecord 0x56168af507f8 'CompressedProgram'
|-CXXMethodDecl 0x56168afaa2b8 <line:131:5, line:133:52> line:131:17 parse_program 'void (IPFilter::IPFilterProgram &, const Vector<String> &, int, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x56168afa9e78 <col:31, col:48> col:48 zprog 'IPFilter::IPFilterProgram &'
| |-ParmVarDecl 0x56168afa9ff0 <line:132:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x56168afaa070 <col:38, col:42> col:42 noutputs 'int'
| |-ParmVarDecl 0x56168afaa0e8 <line:133:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x56168afaa160 <col:34, col:48> col:48 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56168afaa550 <line:134:5, col:74> col:23 match 'int (const IPFilter::IPFilterProgram &, const Packet *)' static inline
| |-ParmVarDecl 0x56168afaa3b8 <col:29, col:52> col:52 zprog 'const IPFilter::IPFilterProgram &'
| `-ParmVarDecl 0x56168afaa430 <col:59, col:73> col:73 p 'const Packet *'
|-EnumDecl 0x56168afaa600 <line:136:5, line:176:5> line:136:5
| |-EnumConstantDecl 0x56168afaa700 <line:137:2, col:14> col:2 TYPE_NONE 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad760 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaa6e0 <col:14> 'int' Int: 0
| |     `-IntegerLiteral 0x56168afaa6c0 <col:14> 'int' 0
| |-EnumConstantDecl 0x56168afaa790 <line:138:2, col:14> col:2 TYPE_TYPE 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad778 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaa770 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56168afaa750 <col:14> 'int' 1
| |-EnumConstantDecl 0x56168afaa820 <line:139:2, col:16> col:2 TYPE_SYNTAX 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad790 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaa800 <col:16> 'int' Int: 2
| |     `-IntegerLiteral 0x56168afaa7e0 <col:16> 'int' 2
| |-EnumConstantDecl 0x56168afaa8b0 <line:140:2, col:13> col:2 TYPE_INT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad7a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaa890 <col:13> 'int' Int: 3
| |     `-IntegerLiteral 0x56168afaa870 <col:13> 'int' 3
| |-EnumConstantDecl 0x56168afaa940 <line:142:2, col:14> col:2 referenced TYPE_HOST 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad7c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaa920 <col:14> 'int' Int: 10
| |     `-IntegerLiteral 0x56168afaa900 <col:14> 'int' 10
| |-EnumConstantDecl 0x56168afaa9d0 <line:143:2, col:15> col:2 referenced TYPE_PROTO 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad7d8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaa9b0 <col:15> 'int' Int: 11
| |     `-IntegerLiteral 0x56168afaa990 <col:15> 'int' 11
| |-EnumConstantDecl 0x56168afaaa60 <line:144:2, col:16> col:2 referenced TYPE_IPFRAG 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad7f0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaaa40 <col:16> 'int' Int: 12
| |     `-IntegerLiteral 0x56168afaaa20 <col:16> 'int' 12
| |-EnumConstantDecl 0x56168afaaaf0 <line:145:2, col:14> col:2 TYPE_PORT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad808 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaaad0 <col:14> 'int' Int: 13
| |     `-IntegerLiteral 0x56168afaaab0 <col:14> 'int' 13
| |-EnumConstantDecl 0x56168afaab80 <line:146:2, col:16> col:2 TYPE_TCPOPT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad820 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaab60 <col:16> 'int' Int: 14
| |     `-IntegerLiteral 0x56168afaab40 <col:16> 'int' 14
| |-EnumConstantDecl 0x56168afaac10 <line:147:2, col:15> col:2 TYPE_ETHER 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad838 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaabf0 <col:15> 'int' Int: 15
| |     `-IntegerLiteral 0x56168afaabd0 <col:15> 'int' 15
| |-EnumConstantDecl 0x56168afaaca0 <line:149:2, col:13> col:2 TYPE_NET 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad850 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaac80 <col:13> 'int' Int: 30
| |     `-IntegerLiteral 0x56168afaac60 <col:13> 'int' 30
| |-EnumConstantDecl 0x56168afaad30 <line:150:2, col:18> col:2 TYPE_IPUNFRAG 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad868 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaad10 <col:18> 'int' Int: 31
| |     `-IntegerLiteral 0x56168afaacf0 <col:18> 'int' 31
| |-EnumConstantDecl 0x56168afaadc0 <line:151:2, col:15> col:2 TYPE_IPECT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad880 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaada0 <col:15> 'int' Int: 32
| |     `-IntegerLiteral 0x56168afaad80 <col:15> 'int' 32
| |-EnumConstantDecl 0x56168afaae50 <line:152:2, col:14> col:2 TYPE_IPCE 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad898 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaae30 <col:14> 'int' Int: 33
| |     `-IntegerLiteral 0x56168afaae10 <col:14> 'int' 33
| |-EnumConstantDecl 0x56168afaaee0 <line:154:2, col:15> col:2 referenced TYPE_FIELD 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad8b0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaaec0 <col:15> 'int' Int: 1073741824
| |     `-IntegerLiteral 0x56168afaaea0 <col:15> 'int' 1073741824
| |-EnumConstantDecl 0x56168afaaf70 <line:160:2, col:22> col:2 referenced FIELD_PROTO_SHIFT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad8c8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaaf50 <col:22> 'int' Int: 21
| |     `-IntegerLiteral 0x56168afaaf30 <col:22> 'int' 21
| |-EnumConstantDecl 0x56168afab060 <line:161:2, col:48> col:2 FIELD_PROTO_MASK 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad8e0 <col:21, col:48> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afab040 <col:21, col:48> 'int' Int: 1071644672
| |     `-ParenExpr 0x56168afab020 <col:21, col:48> 'int'
| |       `-BinaryOperator 0x56168afab000 <col:22, col:31> 'int' '<<'
| |         |-IntegerLiteral 0x56168afaafc0 <col:22> 'int' 511
| |         `-DeclRefExpr 0x56168afaafe0 <col:31> 'int' EnumConstant 0x56168afaaf70 'FIELD_PROTO_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |-EnumConstantDecl 0x56168afab0f0 <line:162:2, col:23> col:2 referenced FIELD_OFFSET_SHIFT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad8f8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afab0d0 <col:23> 'int' Int: 5
| |     `-IntegerLiteral 0x56168afab0b0 <col:23> 'int' 5
| |-EnumConstantDecl 0x56168afab1e0 <line:163:2, col:51> col:2 FIELD_OFFSET_MASK 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad910 <col:22, col:51> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afab1c0 <col:22, col:51> 'int' Int: 2097120
| |     `-ParenExpr 0x56168afab1a0 <col:22, col:51> 'int'
| |       `-BinaryOperator 0x56168afab180 <col:23, col:33> 'int' '<<'
| |         |-IntegerLiteral 0x56168afab140 <col:23> 'int' 65535
| |         `-DeclRefExpr 0x56168afab160 <col:33> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |-EnumConstantDecl 0x56168afab270 <line:164:2, col:23> col:2 referenced FIELD_LENGTH_SHIFT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad928 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afab250 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56168afab230 <col:23> 'int' 0
| |-EnumConstantDecl 0x56168afab360 <line:165:2, col:49> col:2 FIELD_LENGTH_MASK 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad940 <col:22, col:49> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afab340 <col:22, col:49> 'int' Int: 31
| |     `-ParenExpr 0x56168afab320 <col:22, col:49> 'int'
| |       `-BinaryOperator 0x56168afab300 <col:23, col:31> 'int' '<<'
| |         |-IntegerLiteral 0x56168afab2c0 <col:23> 'int' 31
| |         `-DeclRefExpr 0x56168afab2e0 <col:31> 'int' EnumConstant 0x56168afab270 'FIELD_LENGTH_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |-EnumConstantDecl 0x56168afab550 <line:166:2, col:64> col:2 FIELD_CSUM 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad958 <col:15, col:64> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afab530 <col:15, col:64> 'int' Int: 1073744399
| |     `-ParenExpr 0x56168afab510 <col:15, col:64> 'int'
| |       `-BinaryOperator 0x56168afab4f0 <col:16, col:62> 'int' '|'
| |         |-BinaryOperator 0x56168afab4b0 <col:16, col:58> 'int' '|'
| |         | |-DeclRefExpr 0x56168afab3b0 <col:16> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afab490 <col:29, col:58> 'int'
| |         |   `-BinaryOperator 0x56168afab470 <col:30, col:40> 'int' '<<'
| |         |     |-ParenExpr 0x56168afab430 <col:30, col:35> 'int'
| |         |     | `-BinaryOperator 0x56168afab410 <col:31, col:34> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afab3d0 <col:31> 'int' 10
| |         |     |   `-IntegerLiteral 0x56168afab3f0 <col:34> 'int' 8
| |         |     `-DeclRefExpr 0x56168afab450 <col:40> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afab4d0 <col:62> 'int' 15
| |-EnumConstantDecl 0x56168afac770 <line:167:2, col:64> col:2 FIELD_IPLEN 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad970 <col:16, col:64> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afac750 <col:16, col:64> 'int' Int: 1073742351
| |     `-ParenExpr 0x56168afac730 <col:16, col:64> 'int'
| |       `-BinaryOperator 0x56168afac710 <col:17, col:62> 'int' '|'
| |         |-BinaryOperator 0x56168afac6d0 <col:17, col:58> 'int' '|'
| |         | |-DeclRefExpr 0x56168afab5a0 <col:17> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afac6b0 <col:30, col:58> 'int'
| |         |   `-BinaryOperator 0x56168afac690 <col:31, col:40> 'int' '<<'
| |         |     |-ParenExpr 0x56168afac650 <col:31, col:35> 'int'
| |         |     | `-BinaryOperator 0x56168afac630 <col:32, col:34> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afac5f0 <col:32> 'int' 2
| |         |     |   `-IntegerLiteral 0x56168afac610 <col:34> 'int' 8
| |         |     `-DeclRefExpr 0x56168afac670 <col:40> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afac6f0 <col:62> 'int' 15
| |-EnumConstantDecl 0x56168afac960 <line:168:2, col:61> col:2 FIELD_ID 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad988 <col:13, col:61> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afac940 <col:13, col:61> 'int' Int: 1073742863
| |     `-ParenExpr 0x56168afac920 <col:13, col:61> 'int'
| |       `-BinaryOperator 0x56168afac900 <col:14, col:59> 'int' '|'
| |         |-BinaryOperator 0x56168afac8c0 <col:14, col:55> 'int' '|'
| |         | |-DeclRefExpr 0x56168afac7c0 <col:14> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afac8a0 <col:27, col:55> 'int'
| |         |   `-BinaryOperator 0x56168afac880 <col:28, col:37> 'int' '<<'
| |         |     |-ParenExpr 0x56168afac840 <col:28, col:32> 'int'
| |         |     | `-BinaryOperator 0x56168afac820 <col:29, col:31> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afac7e0 <col:29> 'int' 4
| |         |     |   `-IntegerLiteral 0x56168afac800 <col:31> 'int' 8
| |         |     `-DeclRefExpr 0x56168afac860 <col:37> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afac8e0 <col:59> 'int' 15
| |-EnumConstantDecl 0x56168afacaf0 <line:169:2, col:61> col:2 FIELD_VERSION 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad9a0 <col:18, col:61> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afacad0 <col:18, col:61> 'int' Int: 1073741827
| |     `-ParenExpr 0x56168afacab0 <col:18, col:61> 'int'
| |       `-BinaryOperator 0x56168afaca90 <col:19, col:60> 'int' '|'
| |         |-BinaryOperator 0x56168afaca50 <col:19, col:56> 'int' '|'
| |         | |-DeclRefExpr 0x56168afac9b0 <col:19> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afaca30 <col:32, col:56> 'int'
| |         |   `-BinaryOperator 0x56168afaca10 <col:33, col:38> 'int' '<<'
| |         |     |-IntegerLiteral 0x56168afac9d0 <col:33> 'int' 0
| |         |     `-DeclRefExpr 0x56168afac9f0 <col:38> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afaca70 <col:60> 'int' 3
| |-EnumConstantDecl 0x56168afacc80 <line:170:2, col:56> col:2 FIELD_HL 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad9b8 <col:13, col:56> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afacc60 <col:13, col:56> 'int' Int: 1073741955
| |     `-ParenExpr 0x56168afacc40 <col:13, col:56> 'int'
| |       `-BinaryOperator 0x56168afacc20 <col:14, col:55> 'int' '|'
| |         |-BinaryOperator 0x56168afacbe0 <col:14, col:51> 'int' '|'
| |         | |-DeclRefExpr 0x56168afacb40 <col:14> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afacbc0 <col:27, col:51> 'int'
| |         |   `-BinaryOperator 0x56168afacba0 <col:28, col:33> 'int' '<<'
| |         |     |-IntegerLiteral 0x56168afacb60 <col:28> 'int' 4
| |         |     `-DeclRefExpr 0x56168afacb80 <col:33> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afacc00 <col:55> 'int' 3
| |-EnumConstantDecl 0x56168aface70 <line:171:2, col:61> col:2 FIELD_TOS 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad9d0 <col:14, col:61> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aface50 <col:14, col:61> 'int' Int: 1073742087
| |     `-ParenExpr 0x56168aface30 <col:14, col:61> 'int'
| |       `-BinaryOperator 0x56168aface10 <col:15, col:60> 'int' '|'
| |         |-BinaryOperator 0x56168afacdd0 <col:15, col:56> 'int' '|'
| |         | |-DeclRefExpr 0x56168afaccd0 <col:15> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afacdb0 <col:28, col:56> 'int'
| |         |   `-BinaryOperator 0x56168afacd90 <col:29, col:38> 'int' '<<'
| |         |     |-ParenExpr 0x56168afacd50 <col:29, col:33> 'int'
| |         |     | `-BinaryOperator 0x56168afacd30 <col:30, col:32> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afaccf0 <col:30> 'int' 1
| |         |     |   `-IntegerLiteral 0x56168afacd10 <col:32> 'int' 8
| |         |     `-DeclRefExpr 0x56168afacd70 <col:38> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afacdf0 <col:60> 'int' 7
| |-EnumConstantDecl 0x56168afad060 <line:172:2, col:62> col:2 FIELD_DSCP 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afad9e8 <col:15, col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afad040 <col:15, col:62> 'int' Int: 1073742085
| |     `-ParenExpr 0x56168afad020 <col:15, col:62> 'int'
| |       `-BinaryOperator 0x56168afad000 <col:16, col:61> 'int' '|'
| |         |-BinaryOperator 0x56168afacfc0 <col:16, col:57> 'int' '|'
| |         | |-DeclRefExpr 0x56168afacec0 <col:16> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afacfa0 <col:29, col:57> 'int'
| |         |   `-BinaryOperator 0x56168afacf80 <col:30, col:39> 'int' '<<'
| |         |     |-ParenExpr 0x56168afacf40 <col:30, col:34> 'int'
| |         |     | `-BinaryOperator 0x56168afacf20 <col:31, col:33> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afacee0 <col:31> 'int' 1
| |         |     |   `-IntegerLiteral 0x56168afacf00 <col:33> 'int' 8
| |         |     `-DeclRefExpr 0x56168afacf60 <col:39> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afacfe0 <col:61> 'int' 5
| |-EnumConstantDecl 0x56168afad250 <line:173:2, col:61> col:2 FIELD_TTL 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afada00 <col:14, col:61> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afad230 <col:14, col:61> 'int' Int: 1073743879
| |     `-ParenExpr 0x56168afad210 <col:14, col:61> 'int'
| |       `-BinaryOperator 0x56168afad1f0 <col:15, col:60> 'int' '|'
| |         |-BinaryOperator 0x56168afad1b0 <col:15, col:56> 'int' '|'
| |         | |-DeclRefExpr 0x56168afad0b0 <col:15> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afad190 <col:28, col:56> 'int'
| |         |   `-BinaryOperator 0x56168afad170 <col:29, col:38> 'int' '<<'
| |         |     |-ParenExpr 0x56168afad130 <col:29, col:33> 'int'
| |         |     | `-BinaryOperator 0x56168afad110 <col:30, col:32> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afad0d0 <col:30> 'int' 8
| |         |     |   `-IntegerLiteral 0x56168afad0f0 <col:32> 'int' 8
| |         |     `-DeclRefExpr 0x56168afad150 <col:38> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afad1d0 <col:60> 'int' 7
| |-EnumConstantDecl 0x56168afad4e0 <line:174:2, col:94> col:2 FIELD_TCP_WIN 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| | `-ImplicitCastExpr 0x56168afada18 <col:18, col:94> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afad4c0 <col:18, col:94> 'int' Int: 1086328335
| |     `-ParenExpr 0x56168afad4a0 <col:18, col:94> 'int'
| |       `-BinaryOperator 0x56168afad480 <col:19, col:92> 'int' '|'
| |         |-BinaryOperator 0x56168afad440 <col:19, col:88> 'int' '|'
| |         | |-BinaryOperator 0x56168afad340 <col:19, col:55> 'int' '|'
| |         | | |-DeclRefExpr 0x56168afad2a0 <col:19> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | | `-ParenExpr 0x56168afad320 <col:32, col:55> 'int'
| |         | |   `-BinaryOperator 0x56168afad300 <col:33, col:38> 'int' '<<'
| |         | |     |-IntegerLiteral 0x56168afad2c0 <col:33> 'int' 6
| |         | |     `-DeclRefExpr 0x56168afad2e0 <col:38> 'int' EnumConstant 0x56168afaaf70 'FIELD_PROTO_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         | `-ParenExpr 0x56168afad420 <col:59, col:88> 'int'
| |         |   `-BinaryOperator 0x56168afad400 <col:60, col:70> 'int' '<<'
| |         |     |-ParenExpr 0x56168afad3c0 <col:60, col:65> 'int'
| |         |     | `-BinaryOperator 0x56168afad3a0 <col:61, col:64> 'int' '*'
| |         |     |   |-IntegerLiteral 0x56168afad360 <col:61> 'int' 14
| |         |     |   `-IntegerLiteral 0x56168afad380 <col:64> 'int' 8
| |         |     `-DeclRefExpr 0x56168afad3e0 <col:70> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
| |         `-IntegerLiteral 0x56168afad460 <col:92> 'int' 15
| `-EnumConstantDecl 0x56168afad710 <line:175:2, col:90> col:2 FIELD_ICMP_TYPE 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
|   `-ImplicitCastExpr 0x56168afada30 <col:20, col:90> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168afad6f0 <col:20, col:90> 'int' Int: 1075838983
|       `-ParenExpr 0x56168afad6d0 <col:20, col:90> 'int'
|         `-BinaryOperator 0x56168afad6b0 <col:21, col:89> 'int' '|'
|           |-BinaryOperator 0x56168afad670 <col:21, col:85> 'int' '|'
|           | |-BinaryOperator 0x56168afad5d0 <col:21, col:57> 'int' '|'
|           | | |-DeclRefExpr 0x56168afad530 <col:21> 'int' EnumConstant 0x56168afaaee0 'TYPE_FIELD' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
|           | | `-ParenExpr 0x56168afad5b0 <col:34, col:57> 'int'
|           | |   `-BinaryOperator 0x56168afad590 <col:35, col:40> 'int' '<<'
|           | |     |-IntegerLiteral 0x56168afad550 <col:35> 'int' 1
|           | |     `-DeclRefExpr 0x56168afad570 <col:40> 'int' EnumConstant 0x56168afaaf70 'FIELD_PROTO_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
|           | `-ParenExpr 0x56168afad650 <col:61, col:85> 'int'
|           |   `-BinaryOperator 0x56168afad630 <col:62, col:67> 'int' '<<'
|           |     |-IntegerLiteral 0x56168afad5f0 <col:62> 'int' 0
|           |     `-DeclRefExpr 0x56168afad610 <col:67> 'int' EnumConstant 0x56168afab0f0 'FIELD_OFFSET_SHIFT' 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:136:5)'
|           `-IntegerLiteral 0x56168afad690 <col:89> 'int' 7
|-EnumDecl 0x56168afada48 <line:178:5, line:180:5> line:178:5
| `-EnumConstantDecl 0x56168afadb68 <line:179:2, col:13> col:2 UNKNOWN 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:178:5)'
|   `-ConstantExpr 0x56168afadb48 <col:12, col:13> 'int' Int: -1000
|     `-UnaryOperator 0x56168afadb30 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x56168afadb10 <col:13> 'int' 1000
|-EnumDecl 0x56168afadbb8 <line:182:5, line:184:5> line:182:5
| |-EnumConstantDecl 0x56168afadcc0 <line:183:2, col:11> col:2 SD_SRC 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:182:5)'
| | `-ImplicitCastExpr 0x56168afadec0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afadca0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x56168afadc80 <col:11> 'int' 1
| |-EnumConstantDecl 0x56168afadd50 <col:14, col:23> col:14 SD_DST 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:182:5)'
| | `-ImplicitCastExpr 0x56168afaded8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afadd30 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56168afadd10 <col:23> 'int' 2
| |-EnumConstantDecl 0x56168afadde0 <col:26, col:35> col:26 SD_AND 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:182:5)'
| | `-ImplicitCastExpr 0x56168afadef0 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afaddc0 <col:35> 'int' Int: 3
| |     `-IntegerLiteral 0x56168afadda0 <col:35> 'int' 3
| `-EnumConstantDecl 0x56168afade70 <col:38, col:46> col:38 SD_OR 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:182:5)'
|   `-ImplicitCastExpr 0x56168afadf08 <col:46> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168afade50 <col:46> 'int' Int: 4
|       `-IntegerLiteral 0x56168afade30 <col:46> 'int' 4
|-EnumDecl 0x56168afadf20 <line:186:5, line:188:5> line:186:5
| |-EnumConstantDecl 0x56168afae020 <line:187:2, col:10> col:2 OP_EQ 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:186:5)'
| | `-ImplicitCastExpr 0x56168afae190 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afae000 <col:10> 'int' Int: 0
| |     `-IntegerLiteral 0x56168afadfe0 <col:10> 'int' 0
| |-EnumConstantDecl 0x56168afae0b0 <col:13, col:21> col:13 OP_GT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:186:5)'
| | `-ImplicitCastExpr 0x56168afae1a8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afae090 <col:21> 'int' Int: 1
| |     `-IntegerLiteral 0x56168afae070 <col:21> 'int' 1
| `-EnumConstantDecl 0x56168afae140 <col:24, col:32> col:24 OP_LT 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:186:5)'
|   `-ImplicitCastExpr 0x56168afae1c0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168afae120 <col:32> 'int' Int: 2
|       `-IntegerLiteral 0x56168afae100 <col:32> 'int' 2
|-EnumDecl 0x56168afae1d8 <line:190:5, line:195:5> line:190:5
| |-EnumConstantDecl 0x56168afae2e0 <line:192:2, col:15> col:2 offset_mac 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:190:5)'
| | `-ImplicitCastExpr 0x56168afae450 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afae2c0 <col:15> 'int' Int: 0
| |     `-IntegerLiteral 0x56168afae2a0 <col:15> 'int' 0
| |-EnumConstantDecl 0x56168afae370 <line:193:2, col:15> col:2 referenced offset_net 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:190:5)'
| | `-ImplicitCastExpr 0x56168afae468 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afae350 <col:15> 'int' Int: 256
| |     `-IntegerLiteral 0x56168afae330 <col:15> 'int' 256
| `-EnumConstantDecl 0x56168afae400 <line:194:2, col:18> col:2 referenced offset_transp 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:190:5)'
|   `-ImplicitCastExpr 0x56168afae480 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168afae3e0 <col:18> 'int' Int: 512
|       `-IntegerLiteral 0x56168afae3c0 <col:18> 'int' 512
|-EnumDecl 0x56168afae498 <line:197:5, line:200:5> line:197:5
| |-EnumConstantDecl 0x56168afae5a0 <line:198:2, col:26> col:2 referenced PERFORM_BINARY_SEARCH 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:197:5)'
| | `-ImplicitCastExpr 0x56168afae680 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168afae580 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56168afae560 <col:26> 'int' 1
| `-EnumConstantDecl 0x56168afae630 <line:199:2, col:22> col:2 referenced MIN_BINARY_SEARCH 'IPFilter::(anonymous enum at ../elements/ip/ipfilter.hh:197:5)'
|   `-ImplicitCastExpr 0x56168afae698 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168afae610 <col:22> 'int' Int: 7
|       `-IntegerLiteral 0x56168afae5f0 <col:22> 'int' 7
|-CXXRecordDecl 0x56168afae6b0 <line:202:5, line:207:5> line:202:11 referenced union PrimitiveData definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168afae7c8 <col:5, col:11> col:11 implicit union PrimitiveData
| |-FieldDecl 0x56168afae868 <line:203:2, col:11> col:11 u 'uint32_t':'unsigned int'
| |-FieldDecl 0x56168afae8c8 <line:204:2, col:10> col:10 i 'int32_t':'int'
| |-FieldDecl 0x56168afae938 <line:205:2, col:17> col:17 ip4 'struct in_addr':'in_addr'
| |-FieldDecl 0x56168afae9f0 <line:206:2, col:19> col:16 c 'unsigned char [8]'
| |-CXXConstructorDecl 0x56168afb3c30 <line:202:11> col:11 implicit used PrimitiveData 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56168afb4048 <col:11>
| |-CXXConstructorDecl 0x56168afb3d10 <col:11> col:11 implicit constexpr PrimitiveData 'void (const IPFilter::PrimitiveData &)' inline default trivial noexcept-unevaluated 0x56168afb3d10
| | `-ParmVarDecl 0x56168afb3e28 <col:11> col:11 'const IPFilter::PrimitiveData &'
| |-CXXConstructorDecl 0x56168afb3ec8 <col:11> col:11 implicit constexpr PrimitiveData 'void (IPFilter::PrimitiveData &&)' inline default trivial noexcept-unevaluated 0x56168afb3ec8
| | `-ParmVarDecl 0x56168afb3fd8 <col:11> col:11 'IPFilter::PrimitiveData &&'
| `-CXXDestructorDecl 0x56168afb4538 <col:11> col:11 implicit ~PrimitiveData 'void ()' inline default trivial noexcept-unevaluated 0x56168afb4538
|-CXXRecordDecl 0x56168afaea58 <line:209:5, line:251:5> line:209:12 referenced struct Primitive definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168afaeb78 <col:5, col:12> col:12 implicit referenced struct Primitive
| |-FieldDecl 0x56168afaec20 <line:211:2, col:6> col:6 referenced _type 'int'
| |-FieldDecl 0x56168afaec88 <line:212:2, col:6> col:6 _data 'int'
| |-FieldDecl 0x56168afaecf0 <line:214:2, col:6> col:6 _op 'int'
| |-FieldDecl 0x56168afaed50 <line:215:2, col:7> col:7 _op_negated 'bool'
| |-FieldDecl 0x56168afaedb8 <line:217:2, col:6> col:6 _srcdst 'int'
| |-FieldDecl 0x56168afaee20 <line:218:2, col:6> col:6 referenced _transp_proto 'int'
| |-FieldDecl 0x56168afaee80 <line:220:2, col:16> col:16 _u 'IPFilter::PrimitiveData'
| |-FieldDecl 0x56168afaeee0 <line:221:2, col:16> col:16 _mask 'IPFilter::PrimitiveData'
| |-CXXConstructorDecl 0x56168afaef90 <line:223:2, col:25> col:2 used Primitive 'void ()'
| | |-CXXCtorInitializer Field 0x56168afaee80 '_u' 'IPFilter::PrimitiveData'
| | | `-CXXConstructExpr 0x56168afb4058 <col:2> 'IPFilter::PrimitiveData' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x56168afaeee0 '_mask' 'IPFilter::PrimitiveData'
| | | `-CXXConstructExpr 0x56168afb40a8 <col:2> 'IPFilter::PrimitiveData' 'void () noexcept'
| | `-CompoundStmt 0x56168afb4168 <col:14, col:25>
| |   `-CXXMemberCallExpr 0x56168afb4148 <col:16, col:22> 'void'
| |     `-MemberExpr 0x56168afb4118 <col:16> '<bound member function type>' ->clear 0x56168afaf058
| |       `-CXXThisExpr 0x56168afb4108 <col:16> 'IPFilter::Primitive *' implicit this
| |-CXXMethodDecl 0x56168afaf058 <line:225:2, col:13> col:7 used clear 'void ()'
| |-CXXMethodDecl 0x56168afaf258 <line:226:2, col:35> col:7 set_type 'void (int, ErrorHandler *)'
| | |-ParmVarDecl 0x56168afaf110 <col:16> col:19 'int'
| | `-ParmVarDecl 0x56168afaf188 <col:21, col:34> col:35 'ErrorHandler *'
| |-CXXMethodDecl 0x56168afaf430 <line:227:2, col:37> col:7 set_srcdst 'void (int, ErrorHandler *)'
| | |-ParmVarDecl 0x56168afaf320 <col:18> col:21 'int'
| | `-ParmVarDecl 0x56168afaf398 <col:23, col:36> col:37 'ErrorHandler *'
| |-CXXMethodDecl 0x56168afaf608 <line:228:2, col:43> col:7 set_transp_proto 'void (int, ErrorHandler *)'
| | |-ParmVarDecl 0x56168afaf4f8 <col:24> col:27 'int'
| | `-ParmVarDecl 0x56168afaf570 <col:29, col:42> col:43 'ErrorHandler *'
| |-CXXMethodDecl 0x56168afaf980 <line:230:2, line:231:26> line:230:6 set_mask 'int (uint32_t, int, uint32_t, ErrorHandler *)'
| | |-ParmVarDecl 0x56168afaf6c8 <col:15, col:24> col:24 full_mask 'uint32_t':'unsigned int'
| | |-ParmVarDecl 0x56168afaf748 <col:35, col:39> col:39 shift 'int'
| | |-ParmVarDecl 0x56168afaf7c0 <col:46, col:55> col:55 provided_mask 'uint32_t':'unsigned int'
| | `-ParmVarDecl 0x56168afaf838 <line:231:8, col:22> col:22 errh 'ErrorHandler *'
| |-CXXMethodDecl 0x56168afafda0 <line:232:2, line:234:23> line:232:6 check 'int (const IPFilter::Primitive &, int, int, const IPFilter::PrimitiveData &, ErrorHandler *)'
| | |-ParmVarDecl 0x56168afafa78 <col:12, col:29> col:29 prev_prim 'const IPFilter::Primitive &'
| | |-ParmVarDecl 0x56168afafaf8 <col:40, col:44> col:44 level 'int'
| | |-ParmVarDecl 0x56168afafb78 <line:233:5, col:9> col:9 mask_dt 'int'
| | |-ParmVarDecl 0x56168afafc18 <col:18, col:39> col:39 mask 'const IPFilter::PrimitiveData &'
| | `-ParmVarDecl 0x56168afafc90 <line:234:5, col:19> col:19 errh 'ErrorHandler *'
| |-CXXMethodDecl 0x56168afb01b8 <line:235:2, col:72> col:7 compile 'void (Classification::Wordwise::Program &, Vector<int> &) const'
| | |-ParmVarDecl 0x56168afaff20 <col:15, col:50> col:50 p 'Classification::Wordwise::Program &'
| | `-ParmVarDecl 0x56168afb0070 <col:53, col:66> col:66 tree 'Vector<int> &'
| |-CXXMethodDecl 0x56168afb0288 <line:237:2, col:26> col:7 has_transp_proto 'bool () const'
| |-CXXMethodDecl 0x56168afb0348 <line:238:2, col:28> col:7 negation_is_simple 'bool () const'
| |-CXXMethodDecl 0x56168afb0408 <line:239:2, col:21> col:7 simple_negate 'void ()'
| |-CXXMethodDecl 0x56168afb04c8 <line:241:2, col:24> col:9 unparse_type 'String () const'
| |-CXXMethodDecl 0x56168afb0588 <line:242:2, col:22> col:9 unparse_op 'String () const'
| |-CXXMethodDecl 0x56168afb0798 <line:243:2, col:49> col:16 unparse_type 'String (int, int)' static
| | |-ParmVarDecl 0x56168afb0640 <col:29, col:33> col:33 srcdst 'int'
| | `-ParmVarDecl 0x56168afb06c0 <col:41, col:45> col:45 type 'int'
| |-CXXMethodDecl 0x56168afb08f0 <line:244:2, col:53> col:16 unparse_transp_proto 'String (int)' static
| | `-ParmVarDecl 0x56168afb0860 <col:37, col:41> col:41 transp_proto 'int'
| |-AccessSpecDecl 0x56168afb0998 <line:246:7, col:14> col:7 private
| |-CXXMethodDecl 0x56168afb0b30 <line:248:2, col:54> col:6 type_error 'int (ErrorHandler *, const char *) const'
| | |-ParmVarDecl 0x56168afb09d0 <col:17, col:31> col:31 errh 'ErrorHandler *'
| | `-ParmVarDecl 0x56168afb0a50 <col:37, col:49> col:49 msg 'const char *'
| |-CXXMethodDecl 0x56168afb10f8 <line:249:2, col:138> col:7 add_comparison_exprs 'void (Classification::Wordwise::Program &, Vector<int> &, int, int, bool, bool) const'
| | |-ParmVarDecl 0x56168afb0c40 <col:28, col:63> col:63 p 'Classification::Wordwise::Program &'
| | |-ParmVarDecl 0x56168afb0d90 <col:66, col:79> col:79 tree 'Vector<int> &'
| | |-ParmVarDecl 0x56168afb0e10 <col:85, col:89> col:89 offset 'int'
| | |-ParmVarDecl 0x56168afb0e90 <col:97, col:101> col:101 shift 'int'
| | |-ParmVarDecl 0x56168afb0f08 <col:108, col:113> col:113 swapped 'bool'
| | `-ParmVarDecl 0x56168afb0f80 <col:122, col:127> col:127 op_negate 'bool'
| |-CXXConstructorDecl 0x56168afb43b8 <line:209:12> col:12 implicit constexpr Primitive 'void (const IPFilter::Primitive &)' inline default trivial noexcept-unevaluated 0x56168afb43b8
| | `-ParmVarDecl 0x56168afb44c8 <col:12> col:12 'const IPFilter::Primitive &'
| `-CXXConstructorDecl 0x56168afbda18 <col:12> col:12 implicit constexpr Primitive 'void (IPFilter::Primitive &&)' inline default trivial noexcept-unevaluated 0x56168afbda18
|   `-ParmVarDecl 0x56168afbdb28 <col:12> col:12 'IPFilter::Primitive &&'
|-AccessSpecDecl 0x56168afb11e0 <line:253:3, col:12> col:3 protected
|-FieldDecl 0x56168afb1218 <line:255:5, col:21> col:21 _zprog 'IPFilter::IPFilterProgram':'Classification::Wordwise::CompressedProgram'
|-AccessSpecDecl 0x56168afb1268 <line:257:3, col:10> col:3 private
|-CXXMethodDecl 0x56168afb1680 <line:259:5, line:260:51> line:259:16 lookup 'int (String, int, int, uint32_t &, const Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x56168afb12a0 <col:23, col:30> col:30 word 'String' destroyed
| |-ParmVarDecl 0x56168afb1320 <col:36, col:40> col:40 type 'int'
| |-ParmVarDecl 0x56168afb13a0 <col:46, col:50> col:50 transp_proto 'int'
| |-ParmVarDecl 0x56168afb1418 <col:64, col:74> col:74 data 'uint32_t &'
| |-ParmVarDecl 0x56168afb1490 <line:260:9, col:24> col:24 context 'const Element *'
| `-ParmVarDecl 0x56168afb1508 <col:33, col:47> col:47 errh 'ErrorHandler *'
|-CXXRecordDecl 0x56168afb1750 <line:262:5, line:294:5> line:262:12 struct Parser definition
| |-DefinitionData pass_in_registers trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168afb1868 <col:5, col:12> col:12 implicit referenced struct Parser
| |-FieldDecl 0x56168afb19e0 <line:263:2, col:24> col:24 _words 'const Vector<String> &'
| |-FieldDecl 0x56168afb1b20 <line:264:2, col:15> col:15 _tree 'Vector<int> &'
| |-FieldDecl 0x56168afb1bd0 <line:265:2, col:37> col:37 _prog 'Classification::Wordwise::Program &'
| |-FieldDecl 0x56168afb1c30 <line:266:2, col:17> col:17 _context 'const Element *'
| |-FieldDecl 0x56168afb1c90 <line:267:2, col:16> col:16 _errh 'ErrorHandler *'
| |-FieldDecl 0x56168afb1cf0 <line:268:2, col:12> col:12 _prev_prim 'IPFilter::Primitive'
| |-CXXConstructorDecl 0x56168afb22b8 <line:270:2, line:275:2> line:270:2 Parser 'void (const Vector<String> &, Vector<int> &, Classification::Wordwise::Program &, const Element *, ErrorHandler *)'
| | |-ParmVarDecl 0x56168afb1e20 <col:9, col:31> col:31 used words 'const Vector<String> &'
| | |-ParmVarDecl 0x56168afb1f70 <col:38, col:51> col:51 used tree 'Vector<int> &'
| | |-ParmVarDecl 0x56168afb2038 <line:271:9, col:44> col:44 used prog 'Classification::Wordwise::Program &'
| | |-ParmVarDecl 0x56168afb20b0 <line:272:9, col:24> col:24 used context 'const Element *'
| | |-ParmVarDecl 0x56168afb2128 <col:33, col:47> col:47 used errh 'ErrorHandler *'
| | |-CXXCtorInitializer Field 0x56168afb19e0 '_words' 'const Vector<String> &'
| | | `-DeclRefExpr 0x56168afb4180 <line:273:15> 'const Vector<String>':'const Vector<String>' lvalue ParmVar 0x56168afb1e20 'words' 'const Vector<String> &'
| | |-CXXCtorInitializer Field 0x56168afb1b20 '_tree' 'Vector<int> &'
| | | `-DeclRefExpr 0x56168afb41e8 <col:29> 'Vector<int>':'Vector<int>' lvalue ParmVar 0x56168afb1f70 'tree' 'Vector<int> &'
| | |-CXXCtorInitializer Field 0x56168afb1bd0 '_prog' 'Classification::Wordwise::Program &'
| | | `-DeclRefExpr 0x56168afb4250 <col:42> 'Classification::Wordwise::Program':'Classification::Wordwise::Program' lvalue ParmVar 0x56168afb2038 'prog' 'Classification::Wordwise::Program &'
| | |-CXXCtorInitializer Field 0x56168afb1c30 '_context' 'const Element *'
| | | `-ImplicitCastExpr 0x56168afb42f8 <col:58> 'const Element *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56168afb42b8 <col:58> 'const Element *' lvalue ParmVar 0x56168afb20b0 'context' 'const Element *'
| | |-CXXCtorInitializer Field 0x56168afb1c90 '_errh' 'ErrorHandler *'
| | | `-ImplicitCastExpr 0x56168afb4378 <line:274:14> 'ErrorHandler *' <LValueToRValue>
| | |   `-DeclRefExpr 0x56168afb4338 <col:14> 'ErrorHandler *' lvalue ParmVar 0x56168afb2128 'errh' 'ErrorHandler *'
| | |-CXXCtorInitializer Field 0x56168afb1cf0 '_prev_prim' 'IPFilter::Primitive'
| | | `-CXXConstructExpr 0x56168afbdb98 <line:270:2> 'IPFilter::Primitive' 'void ()'
| | `-CompoundStmt 0x56168afbdc18 <line:274:20, line:275:2>
| |-CXXRecordDecl 0x56168afb2388 <line:277:2, line:283:2> line:277:9 struct parse_state definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x56168afb24a8 <col:2, col:9> col:9 implicit referenced struct parse_state
| | |-FieldDecl 0x56168afb2550 <line:278:6, col:10> col:10 state 'int'
| | |-FieldDecl 0x56168afb25b8 <line:279:6, col:10> col:10 last_pos 'int'
| | `-CXXConstructorDecl 0x56168afb26f8 <line:280:6, line:282:6> line:280:6 parse_state 'void (int)'
| |   |-ParmVarDecl 0x56168afb2620 <col:18, col:22> col:22 used s 'int'
| |   |-CXXCtorInitializer Field 0x56168afb2550 'state' 'int'
| |   | `-ImplicitCastExpr 0x56168afbdc68 <line:281:11> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x56168afbdc28 <col:11> 'int' lvalue ParmVar 0x56168afb2620 's' 'int'
| |   `-CompoundStmt 0x56168afbdcb0 <col:14, line:282:6>
| |-EnumDecl 0x56168afb27c0 <line:284:2, line:290:2> line:284:2
| | |-EnumConstantDecl 0x56168afb2880 <line:285:6> col:6 s_expr0 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb28d0 <col:15> col:15 s_expr1 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2920 <col:24> col:24 s_expr2 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2970 <line:286:6> col:6 s_orexpr0 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb29c0 <col:17> col:17 s_orexpr1 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2a10 <line:287:6> col:6 s_term0 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2a60 <col:15> col:15 s_term1 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2ab0 <col:24> col:24 s_term2 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2b00 <line:288:6> col:6 s_factor0 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2b50 <col:17> col:17 s_factor1 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2ba0 <col:28> col:28 s_factor2 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2bf0 <line:289:6> col:6 s_factor0_neg 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | |-EnumConstantDecl 0x56168afb2c40 <col:21> col:21 s_factor1_neg 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| | `-EnumConstantDecl 0x56168afb2c90 <col:36> col:36 s_factor2_neg 'IPFilter::Parser::(anonymous enum at ../elements/ip/ipfilter.hh:284:2)'
| |-CXXMethodDecl 0x56168afb2e10 <line:291:2, col:37> col:7 parse_slot 'void (int, int)'
| | |-ParmVarDecl 0x56168afb2cf8 <col:18, col:22> col:22 output 'int'
| | `-ParmVarDecl 0x56168afb2d78 <col:30, col:34> col:34 pos 'int'
| |-CXXMethodDecl 0x56168afb2f70 <line:292:2, col:34> col:6 parse_expr_iterative 'int (int)'
| | `-ParmVarDecl 0x56168afb2ed8 <col:27, col:31> col:31 pos 'int'
| `-CXXMethodDecl 0x56168afb3148 <line:293:2, col:38> col:6 parse_test 'int (int, bool)'
|   |-ParmVarDecl 0x56168afb3030 <col:17, col:21> col:21 pos 'int'
|   `-ParmVarDecl 0x56168afb30a8 <col:26, col:31> col:31 negated 'bool'
|-CXXMethodDecl 0x56168afb3440 <line:296:5, line:297:43> line:296:16 used length_checked_match 'int (const IPFilter::IPFilterProgram &, const Packet *, int)' static
| |-ParmVarDecl 0x56168afb3220 <col:37, col:60> col:60 zprog 'const IPFilter::IPFilterProgram &'
| |-ParmVarDecl 0x56168afb3298 <line:297:9, col:23> col:23 p 'const Packet *'
| `-ParmVarDecl 0x56168afb3318 <col:26, col:30> col:30 packet_length 'int'
|-CXXMethodDecl 0x56168afb3620 <line:299:5, col:61> col:19 program_string 'String (Element *, void *)' static
| |-ParmVarDecl 0x56168afb3508 <col:34, col:43> col:43 e 'Element *'
| `-ParmVarDecl 0x56168afb3588 <col:46, col:52> col:52 user_data 'void *'
|-CXXConstructorDecl 0x56168afb36f8 <line:110:7> col:7 implicit IPFilter 'void (const IPFilter &)' inline default_delete noexcept-unevaluated 0x56168afb36f8
| `-ParmVarDecl 0x56168afb3808 <col:7> col:7 'const IPFilter &'
`-CXXMethodDecl 0x56168afb38a8 <col:7> col:7 implicit operator= 'IPFilter &(const IPFilter &)' inline default_delete noexcept-unevaluated 0x56168afb38a8
  `-ParmVarDecl 0x56168afb39b8 <col:7> col:7 'const IPFilter &'

Layout: <CGRecordLayout
  LLVMType:%class.IPFilter = type { %class.Element.base, [4 x i8], %"class.Classification::Wordwise::CompressedProgram" }
  NonVirtualBaseLLVMType:%class.IPFilter = type { %class.Element.base, [4 x i8], %"class.Classification::Wordwise::CompressedProgram" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPClassifier
         0 |   class IPFilter (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class Classification::Wordwise::CompressedProgram _zprog
       112 |       class Vector<unsigned int> _zprog
       112 |         class vector_memory<class sized_array_memory<4> > vm_
       112 |           vector_memory<class sized_array_memory<4> >::type * l_
       120 |           vector_memory::size_type n_
       124 |           vector_memory::size_type capacity_
       128 |       int _output_everything
       132 |       unsigned int _safe_length
       136 |       unsigned int _align_offset
           | [sizeof=144, dsize=144, align=8,
           |  nvsize=144, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168afc0f50 <../elements/ip/ipclassifier.hh:238:1, line:249:1> line:238:7 class IPClassifier definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPFilter'
|-CXXRecordDecl 0x56168afc10a8 <col:1, col:7> col:7 implicit referenced class IPClassifier
|-AccessSpecDecl 0x56168afc1138 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x56168afc11c0 <line:240:3, col:16> col:3 IPClassifier 'void ()'
|-CXXDestructorDecl 0x56168afc12b0 <line:241:3, col:17> col:3 ~IPClassifier 'void ()' noexcept-unevaluated 0x56168afc12b0
| `-Overrides: [ 0x56168afa9120 IPFilter::~IPFilter 'void () noexcept' ]
|-CXXMethodDecl 0x56168afc13e0 <line:243:3, col:59> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56168afa93d0 IPFilter::class_name 'const char *() const' ]
| `-CompoundStmt 0x56168afc1c98 <col:34, col:59>
|   `-ReturnStmt 0x56168afc1c88 <col:36, col:43>
|     `-ImplicitCastExpr 0x56168afc1c70 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56168afc1c48 <col:43> 'const char [13]' lvalue "IPClassifier"
|-CXXMethodDecl 0x56168afc14a8 <line:244:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x56168afa9560 IPFilter::processing 'const char *() const' ]
| `-CompoundStmt 0x56168afc1cf8 <col:34, col:49>
|   `-ReturnStmt 0x56168afc1ce8 <col:36, col:43>
|     `-ImplicitCastExpr 0x56168afc1cd0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56168afc1cb0 <col:43> 'const char []' lvalue Var 0x56168af80460 'PUSH' 'const char []'
|-CXXMethodDecl 0x56168afc1780 <line:246:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x56168afa99c0 IPFilter::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x56168afc1630 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x56168afc16a8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x56168afc1850 <line:247:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x56168afa9a90 IPFilter::add_handlers 'void ()' ]
|-CXXConstructorDecl 0x56168afc1918 <line:238:7> col:7 implicit IPClassifier 'void (const IPClassifier &)' inline default_delete noexcept-unevaluated 0x56168afc1918
| `-ParmVarDecl 0x56168afc1a28 <col:7> col:7 'const IPClassifier &'
`-CXXMethodDecl 0x56168afc1ac8 <col:7> col:7 implicit operator= 'IPClassifier &(const IPClassifier &)' inline default_delete noexcept-unevaluated 0x56168afc1ac8
  `-ParmVarDecl 0x56168afc1bd8 <col:7> col:7 'const IPClassifier &'

Layout: <CGRecordLayout
  LLVMType:%class.IPClassifier = type { %class.IPFilter }
  NonVirtualBaseLLVMType:%class.IPClassifier = type { %class.IPFilter }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168aeece98 prev 0x56168aedc730 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168aeecf90 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56168aeed080 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56168aeed1a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56168aeed328 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56168aeed4a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56168aeed628 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56168aefe418 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56168aefec88 <col:11>
|-CXXDestructorDecl 0x56168aefe4f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56168aefe628 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56168aefe628
| `-ParmVarDecl 0x56168aefe738 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56168aefe7d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56168aefe7d8
| `-ParmVarDecl 0x56168aefe8e8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56168aee2538 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168aee2648 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56168aee28c8 <col:11>
|   `-ReturnStmt 0x56168aee28b8 <col:11>
|     `-UnaryOperator 0x56168aee28a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56168aee2890 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56168aee26b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56168aee26b8
  `-ParmVarDecl 0x56168aee27c8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168aeed690 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168aeed7a8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56168aeed848 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56168aeed8b0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56168aeed918 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56168aeed980 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56168aeed9e0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56168aeedaa0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56168aeedb00 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56168aeedb60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56168aefe328 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56168aeed848 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56168aefec98 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56168aefecf0 <col:12>
|-CXXConstructorDecl 0x56168aefe958 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56168aefe958
| `-ParmVarDecl 0x56168aefea68 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56168aefeb08 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56168aefeb08
| `-ParmVarDecl 0x56168aefec18 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56168aee1c20 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168aed5e50 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168aed5f68 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56168aed5ff8 <col:16, col:22> col:16 public
|-EnumDecl 0x56168aed6020 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56168aed6120 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56168aed6200 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aed6100 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56168aed60e0 <col:21> 'int' 28
| `-EnumConstantDecl 0x56168aed61b0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56168aed6218 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aed6190 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56168aed6170 <col:22> 'int' 64
|-CXXMethodDecl 0x56168aed6558 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56168aed6240 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168aed62c0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56168aed6338 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168aed63b0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56168aed6618 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56168aed6818 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56168aed6690 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56168aed6708 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56168aed68c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56168aed6a28 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56168aed6938 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56168aed6ad0 <col:72> warn_unused_result ""
|-TypedefDecl 0x56168aed6e00 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56168aed6d90 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56168aed6d30 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56168aed6cf0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56168a9df4e0 'void'
|       |-PointerType 0x56168ac353a0 'unsigned char *'
|       | `-BuiltinType 0x56168a9df5e0 'unsigned char'
|       |-TypedefType 0x56168aa873a0 'size_t' sugar
|       | |-Typedef 0x56168aa4fbe0 'size_t'
|       | `-BuiltinType 0x56168a9df640 'unsigned long'
|       `-PointerType 0x56168a9dfce0 'void *'
|         `-BuiltinType 0x56168a9df4e0 'void'
|-CXXMethodDecl 0x56168aed7278 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56168aed6e70 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56168aed6ee8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168aed6f80 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56168aed7000 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56168aeeeff0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56168aeeefd8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56168aeeefa0 <col:58> 'int' 0
| |-ParmVarDecl 0x56168aed7080 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56168aeef018 <col:76> 'int' 0
| |-ParmVarDecl 0x56168aed7100 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56168aeef038 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56168aed7348 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56168aed73c8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56168aed7488 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56168aed7528 <col:20>
| `-OptimizeNoneAttr 0x56168aed7580 <col:30>
|-CXXMethodDecl 0x56168aed75f8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56168aed7698 <col:20>
| `-OptimizeNoneAttr 0x56168aed76f0 <col:30>
|-CXXMethodDecl 0x56168aed7768 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56168aed7808 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56168aed78b8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56168aed7958 <col:20>
| |-OptimizeNoneAttr 0x56168aed79b0 <col:30>
| `-WarnUnusedResultAttr 0x56168aed79d8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56168aed7a30 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56168aed7ad0 <col:20>
| `-OptimizeNoneAttr 0x56168aed7b28 <col:30>
|-CXXMethodDecl 0x56168aed7b78 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56168aed7c18 <col:20>
| `-OptimizeNoneAttr 0x56168aed7c70 <col:30>
|-CXXMethodDecl 0x56168aed7cb8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x56168aed7d58 <col:20>
| `-OptimizeNoneAttr 0x56168aed7db0 <col:30>
|-CXXMethodDecl 0x56168aed7df8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aed7eb8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aed7f80 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56168aed8048 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56168aed8108 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aed8228 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56168aeef100 <col:54, line:99:5>
|   `-ReturnStmt 0x56168aeef0f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56168aeef0d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56168aeef0a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56168aeede98
|         `-CXXThisExpr 0x56168aeef098 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56168aed83c8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56168aed82d8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56168aeef1b0 <col:67, line:103:5>
|   `-BinaryOperator 0x56168aeef190 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56168aeef128 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56168aeede98
|     | `-CXXThisExpr 0x56168aeef118 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56168aeef178 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56168aeef158 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56168aed82d8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56168aed84c0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56168aeef230 <col:33, line:107:5>
|   `-ReturnStmt 0x56168aeef220 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56168aeef208 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56168aeef1d8 <col:16> 'void *' lvalue ->_destructor_argument 0x56168aeedf00
|         `-CXXThisExpr 0x56168aeef1c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56168aed8580 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56168aeef860 <col:25, line:113:5>
|   |-ParenExpr 0x56168aeef5a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56168aeef578 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56168aeef2e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56168aeef2c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56168aeef288 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56168aeef258 <col:24> '<bound member function type>' ->shared 0x56168aed75f8
|   |   |       `-ImplicitCastExpr 0x56168aeef2a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56168aeef248 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56168aeef348 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aeef328 <col:42> 'int' 0
|   |   `-CallExpr 0x56168aeef4d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56168aeef4c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aeef4a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aeef518 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aeef3b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56168aeef530 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aeef3e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aeef548 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aeef418 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56168aeef560 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aeef488 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aeef470 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aeef438 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56168aeef7a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56168aeef5d8 <col:2> 'unsigned char *' lvalue ->_head 0x56168aeedca0
|   | | `-CXXThisExpr 0x56168aeef5c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56168aeef790 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56168aeef770 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56168aeef618 <col:10> 'unsigned char *' lvalue ->_data 0x56168aeedd08
|   |     | `-CXXThisExpr 0x56168aeef608 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56168aeef758 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56168aeef738 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56168aeef658 <col:18> 'unsigned char *' lvalue ->_tail 0x56168aeedd70
|   |         | `-CXXThisExpr 0x56168aeef648 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56168aeef720 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56168aeef700 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56168aeef698 <col:26> 'unsigned char *' lvalue ->_end 0x56168aeeddd8
|   |             | `-CXXThisExpr 0x56168aeef688 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56168aeef6e8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56168aeef6c8 <col:33> 'int' 0
|   `-BinaryOperator 0x56168aeef840 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56168aeef7d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56168aeede98
|     | `-CXXThisExpr 0x56168aeef7c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56168aeef828 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56168aeef808 <col:16> 'int' 0
|-CXXMethodDecl 0x56168aed86c0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56168aed8630 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aed8768 <col:20>
| |-OptimizeNoneAttr 0x56168aed87c0 <col:30>
| `-WarnUnusedResultAttr 0x56168aed87e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56168aed88b8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56168aed8828 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aed8960 <col:20>
| |-OptimizeNoneAttr 0x56168aed89b8 <col:30>
| `-WarnUnusedResultAttr 0x56168aed89e0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56168aed8b18 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56168aed8a20 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56168aed8bf0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56168aed8cf0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56168aed8c60 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aed8d98 <col:20>
| `-OptimizeNoneAttr 0x56168aed8df0 <col:30>
|-CXXMethodDecl 0x56168aed8eb8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56168aed8e28 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56168aed8f60 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56168aed9060 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56168aed8fd0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56168aed9108 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56168aed9208 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56168aed9178 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aed92b0 <col:20>
| `-OptimizeNoneAttr 0x56168aed9308 <col:30>
|-CXXMethodDecl 0x56168aed9498 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56168aed9348 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56168aed93c0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56168aeef058 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56168aed9548 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56168aed9748 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56168aed95c0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56168aed9638 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aed9958 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56168aed9808 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56168aed9880 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aed9b68 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56168aed9a18 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56168aed9a98 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56168aeef068 <col:39> 'int' 0
|-CXXMethodDecl 0x56168aed9c38 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56168aed9d00 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56168aed9dc8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56168aed9e88 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aed9f50 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56168aeda098 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56168aeda008 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56168aeda268 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56168aeda158 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56168aeda1d0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aeda338 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56168aeda3f8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56168aeda498 <col:20>
| `-OptimizeNoneAttr 0x56168aeda4f0 <col:30>
|-CXXMethodDecl 0x56168aeda540 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56168aeda5e0 <col:20>
| `-OptimizeNoneAttr 0x56168aeda638 <col:30>
|-CXXMethodDecl 0x56168aeda688 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56168aeda748 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aeda810 <line:292:5, col:61> col:44 used network_length 'int () const'
| |-NoInlineAttr 0x56168aeda8b0 <col:20>
| `-OptimizeNoneAttr 0x56168aeda908 <col:30>
|-CXXMethodDecl 0x56168aedaa58 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56168aeda948 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56168aeda9c0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aedaba8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56168aedab18 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aedac70 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56168aedad30 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56168aedadd0 <col:20>
| `-OptimizeNoneAttr 0x56168aedae28 <col:30>
|-CXXMethodDecl 0x56168aedae78 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56168aedaf18 <col:20>
| `-OptimizeNoneAttr 0x56168aedaf70 <col:30>
|-CXXMethodDecl 0x56168aedafc0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56168aedb088 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56168aedb128 <col:20>
| `-OptimizeNoneAttr 0x56168aedb180 <col:30>
|-CXXMethodDecl 0x56168aedb1c8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56168aedb2e8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56168aedb458 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56168aedb398 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56168aedb548 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56168aedb5e8 <col:20>
| `-OptimizeNoneAttr 0x56168aedb640 <col:30>
|-CXXMethodDecl 0x56168aedb690 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56168aedb750 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aedb988 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56168aedb800 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56168aedb878 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aedba38 <col:20>
| `-OptimizeNoneAttr 0x56168aedba90 <col:30>
|-CXXMethodDecl 0x56168aedbb38 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56168aedbbd8 <col:20>
| `-OptimizeNoneAttr 0x56168aedbc30 <col:30>
|-CXXMethodDecl 0x56168aedbc80 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56168aedbd20 <col:20>
| `-OptimizeNoneAttr 0x56168aedbd78 <col:30>
|-CXXMethodDecl 0x56168aedbdc0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56168aedbe60 <col:20>
| `-OptimizeNoneAttr 0x56168aedbeb8 <col:30>
|-CXXMethodDecl 0x56168aedbfb8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56168aedbef0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56168aedc060 <col:20>
| `-OptimizeNoneAttr 0x56168aedc0b8 <col:30>
|-CXXMethodDecl 0x56168aedc278 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56168aedc0f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56168aedc168 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aedc328 <col:20>
| `-OptimizeNoneAttr 0x56168aedc380 <col:30>
|-CXXMethodDecl 0x56168aedc428 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56168aedc548 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56168aedc668 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56168aedc708 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56168aedc730 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56168aedc858 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56168aedc8f8 <col:20>
| `-OptimizeNoneAttr 0x56168aedc950 <col:30>
|-CXXMethodDecl 0x56168aedc9f8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56168aedca98 <col:20>
| `-OptimizeNoneAttr 0x56168aedcaf0 <col:30>
|-AccessSpecDecl 0x56168aedcb18 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56168aedcb40 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56168aedcc60 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56168aedccb0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aedcc40 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56168aedcc20 <col:14> 'int' 48
|-CXXMethodDecl 0x56168aedcd18 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56168aedcdb8 <col:20>
| `-OptimizeNoneAttr 0x56168aedce10 <col:30>
|-CXXMethodDecl 0x56168aedce88 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56168aedcf28 <col:20>
| `-OptimizeNoneAttr 0x56168aedcf80 <col:30>
|-CXXMethodDecl 0x56168aedd048 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56168aedcfb8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56168aedd1e8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56168aedd388 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56168aedd298 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56168aedd430 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56168aedd530 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56168aedd8e0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aedd510 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56168aedd4f0 <col:9> 'int' 0
| |-EnumConstantDecl 0x56168aedd5c0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56168aedd8f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aedd5a0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56168aedd580 <col:14> 'int' 1
| |-EnumConstantDecl 0x56168aedd650 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56168aedd910 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aedd630 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56168aedd610 <col:14> 'int' 2
| |-EnumConstantDecl 0x56168aedd6e0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56168aedd928 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aedd6c0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56168aedd6a0 <col:14> 'int' 3
| |-EnumConstantDecl 0x56168aedd770 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56168aedd940 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aedd750 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56168aedd730 <col:13> 'int' 4
| |-EnumConstantDecl 0x56168aedd800 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56168aedd958 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aedd7e0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56168aedd7c0 <col:13> 'int' 5
| `-EnumConstantDecl 0x56168aedd890 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56168aedd970 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aedd870 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56168aedd850 <col:14> 'int' 6
|-CXXMethodDecl 0x56168aedd9d8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56168aedda78 <col:20>
| `-OptimizeNoneAttr 0x56168aeddad0 <col:30>
|-CXXMethodDecl 0x56168aeddbc8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56168aeddb08 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56168aeddc70 <col:20>
| `-OptimizeNoneAttr 0x56168aeddcc8 <col:30>
|-CXXMethodDecl 0x56168aeddd38 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56168aedde60 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56168aeddfd8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56168aeddf10 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56168aede0a0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56168aede168 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56168aede2a8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56168aede218 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56168aede350 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56168aede450 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56168aede650 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aede430 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56168aede410 <col:23> 'int' 0
| |-EnumConstantDecl 0x56168aede4e0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56168aede668 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aede4c0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56168aede4a0 <col:45> 'int' 4
| |-EnumConstantDecl 0x56168aede570 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56168aede680 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aede550 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56168aede530 <col:24> 'int' 0
| `-EnumConstantDecl 0x56168aede600 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56168aede698 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aede5e0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56168aede5c0 <col:47> 'int' 16
|-CXXMethodDecl 0x56168aede6f8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56168aede868 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56168aede7a8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56168aede910 <col:20>
| `-OptimizeNoneAttr 0x56168aede968 <col:30>
|-CXXMethodDecl 0x56168aede9b8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56168aeef980 <col:18, col:36>
|   `-ReturnStmt 0x56168aeef970 <col:20, col:33>
|     `-ImplicitCastExpr 0x56168aeef958 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56168aeef938 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56168aeef908 <col:27> '<bound member function type>' ->xanno 0x56168aedc9f8
|           `-CXXThisExpr 0x56168aeef8f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56168aedeab0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56168aeefa90 <col:30, col:48>
|   `-ReturnStmt 0x56168aeefa80 <col:32, col:45>
|     `-ImplicitCastExpr 0x56168aeefa68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56168aeefa48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56168aeefa18 <col:39> '<bound member function type>' ->xanno 0x56168aedc858
|           `-CXXThisExpr 0x56168aeefa08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56168aedeb98 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56168aeefc28 <col:24, col:50>
|   `-ReturnStmt 0x56168aeefc18 <col:26, col:47>
|     `-UnaryOperator 0x56168aeefc00 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56168aeefbe0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56168aeefbc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56168aeefb78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56168aeed1a8
|         |   `-CXXMemberCallExpr 0x56168aeefb58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56168aeefb28 <col:34> '<bound member function type>' ->xanno 0x56168aedc9f8
|         |       `-CXXThisExpr 0x56168aeefb18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56168aeefba8 <col:46> 'int' 0
|-CXXMethodDecl 0x56168aedec88 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56168aeefdf8 <col:36, col:62>
|   `-ReturnStmt 0x56168aeefde8 <col:38, col:59>
|     `-UnaryOperator 0x56168aeefdd0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56168aeefdb0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56168aeefd98 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56168aeefd10 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56168aeed1a8
|         |   `-CXXMemberCallExpr 0x56168aeefcf0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56168aeefcc0 <col:46> '<bound member function type>' ->xanno 0x56168aedc858
|         |       `-CXXThisExpr 0x56168aeefcb0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56168aeefd40 <col:58> 'int' 0
|-CXXMethodDecl 0x56168aededa8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56168aeeff90 <col:26, col:53>
|   `-ReturnStmt 0x56168aeeff80 <col:28, col:50>
|     `-UnaryOperator 0x56168aeeff68 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56168aeeff48 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56168aeeff30 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56168aeefee0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56168aeed4a8
|         |   `-CXXMemberCallExpr 0x56168aeefec0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56168aeefe90 <col:36> '<bound member function type>' ->xanno 0x56168aedc9f8
|         |       `-CXXThisExpr 0x56168aeefe80 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56168aeeff10 <col:49> 'int' 0
|-CXXMethodDecl 0x56168aedeec8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56168aef0168 <col:38, col:65>
|   `-ReturnStmt 0x56168aef0158 <col:40, col:62>
|     `-UnaryOperator 0x56168aef0140 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56168aef0120 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56168aef0108 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56168aef0078 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56168aeed4a8
|         |   `-CXXMemberCallExpr 0x56168aef0058 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56168aef0028 <col:48> '<bound member function type>' ->xanno 0x56168aedc858
|         |       `-CXXThisExpr 0x56168aef0018 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56168aef00a8 <col:61> 'int' 0
|-CXXMethodDecl 0x56168aedf078 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56168aedef80 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56168aef0838 <col:34, line:463:5>
|   |-ParenExpr 0x56168aef0680 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56168aef0650 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56168aef02b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aef0288 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aef01d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aef01c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aef0180 <col:23> 'int' lvalue ParmVar 0x56168aedef80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aef01a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aef0268 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aef0238 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aef01f8 <col:33> 'int' lvalue ParmVar 0x56168aedef80 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56168aef0250 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56168aef0218 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56168aef0318 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aef02f8 <col:56> 'int' 0
|   |   `-CallExpr 0x56168aef05b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56168aef0598 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aef0578 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aef05f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef0408 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56168aef0608 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef0438 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aef0620 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aef0470 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56168aef0638 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aef0560 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aef0548 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aef0508 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56168aef0828 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56168aef0810 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56168aef07f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56168aef07c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56168aef0770 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56168aeed1a8
|         |   `-CXXMemberCallExpr 0x56168aef0750 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56168aef0720 <col:9> '<bound member function type>' ->xanno 0x56168aedc858
|         |       `-CXXThisExpr 0x56168aef0710 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56168aef07d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56168aef07a0 <col:21> 'int' lvalue ParmVar 0x56168aedef80 'i' 'int'
|-CXXMethodDecl 0x56168aedf2c8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56168aedf138 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56168aedf1b0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56168aef9198 <col:40, line:472:5>
|   |-ParenExpr 0x56168aef8fb0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56168aef8f80 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56168aef0990 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aef0960 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aef08b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aef0898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aef0858 <col:23> 'int' lvalue ParmVar 0x56168aedf138 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aef0878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aef0940 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aef0910 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aef08d0 <col:33> 'int' lvalue ParmVar 0x56168aedf138 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56168aef0928 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56168aef08f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56168aef09f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aef09d0 <col:56> 'int' 0
|   |   `-CallExpr 0x56168aef8ee0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56168aef8ec8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aef8ea8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aef8f20 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef8d30 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56168aef8f38 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef8d60 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aef8f50 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aef8d98 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56168aef8f68 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aef8e90 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aef8e78 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aef8e38 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56168aef9178 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56168aef9120 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56168aef90f0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56168aef90a0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56168aeed1a8
|     | |   `-CXXMemberCallExpr 0x56168aef9080 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56168aef9050 <col:2> '<bound member function type>' ->xanno 0x56168aedc9f8
|     | |       `-CXXThisExpr 0x56168aef9040 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56168aef9108 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56168aef90d0 <col:14> 'int' lvalue ParmVar 0x56168aedf138 'i' 'int'
|     `-ImplicitCastExpr 0x56168aef9160 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56168aef9140 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56168aedf1b0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56168aedf488 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56168aedf390 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56168aef9918 <col:36, line:485:5>
|   |-ParenExpr 0x56168aef9680 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aef9650 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aef9330 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aef9300 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aef9210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aef91f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aef91b8 <col:23> 'int' lvalue ParmVar 0x56168aedf390 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aef91d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aef92e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aef92c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aef9230 <col:33> 'int' lvalue ParmVar 0x56168aedf390 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aef92a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aef9290 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aef9250 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aef9270 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56168aef9390 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aef9370 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aef95b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aef9598 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aef9578 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aef95f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef9400 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56168aef9608 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef9438 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aef9620 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aef9470 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56168aef9638 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aef9560 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aef9548 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aef9508 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56168aef9908 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56168aef98f0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56168aef98d8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56168aef98a8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56168aef9848 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56168aef9818 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168aef9790 <col:61, col:70> 'char const[48]' lvalue ->c 0x56168aeed080
|             |   `-CXXMemberCallExpr 0x56168aef9770 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56168aef9740 <col:61> '<bound member function type>' ->xanno 0x56168aedc858
|             |       `-CXXThisExpr 0x56168aef9730 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56168aef9830 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56168aef97c0 <col:74> 'int' lvalue ParmVar 0x56168aedf390 'i' 'int'
|-CXXMethodDecl 0x56168aedf6d8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56168aedf548 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56168aedf5c0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56168aefa068 <col:42, line:500:5>
|   |-ParenExpr 0x56168aef9e00 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aef9dd0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aef9ab0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aef9a80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aef9990 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aef9978 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aef9938 <col:23> 'int' lvalue ParmVar 0x56168aedf548 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aef9958 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aef9a60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aef9a48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aef99b0 <col:33> 'int' lvalue ParmVar 0x56168aedf548 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aef9a28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aef9a10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aef99d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aef99f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56168aef9b10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aef9af0 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aef9d30 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aef9d18 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aef9cf8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aef9d70 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef9b80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56168aef9d88 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aef9bb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aef9da0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aef9bf0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56168aef9db8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aef9ce0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aef9cc8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aef9c88 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56168aefa048 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56168aef9ff8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56168aef9fc8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56168aef9f70 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56168aef9f40 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56168aef9ef0 <col:48, col:57> 'char [48]' lvalue ->c 0x56168aeed080
|     |     |   `-CXXMemberCallExpr 0x56168aef9ed0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56168aef9ea0 <col:48> '<bound member function type>' ->xanno 0x56168aedc9f8
|     |     |       `-CXXThisExpr 0x56168aef9e90 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56168aef9f58 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56168aef9f20 <col:61> 'int' lvalue ParmVar 0x56168aedf548 'i' 'int'
|     `-ImplicitCastExpr 0x56168aefa030 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56168aefa010 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56168aedf5c0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56168aedf898 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56168aedf7a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56168aefa7c8 <col:35, line:513:5>
|   |-ParenExpr 0x56168aefa4d8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefa4a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefa200 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefa1d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefa0e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefa0c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefa088 <col:23> 'int' lvalue ParmVar 0x56168aedf7a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefa0a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefa1b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefa198 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefa100 <col:33> 'int' lvalue ParmVar 0x56168aedf7a0 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefa178 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefa160 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefa120 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefa140 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56168aefa260 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefa240 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefa408 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefa3f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefa3d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefa448 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefa2d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56168aefa460 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefa308 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefa478 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefa340 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56168aefa490 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefa3b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefa3a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefa360 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56168aefa7b8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56168aefa7a0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56168aefa788 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56168aefa758 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56168aefa6d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56168aefa6a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168aefa650 <col:60, col:69> 'char const[48]' lvalue ->c 0x56168aeed080
|             |   `-CXXMemberCallExpr 0x56168aefa630 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56168aefa600 <col:60> '<bound member function type>' ->xanno 0x56168aedc858
|             |       `-CXXThisExpr 0x56168aefa5f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56168aefa6b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56168aefa680 <col:73> 'int' lvalue ParmVar 0x56168aedf7a0 'i' 'int'
|-CXXMethodDecl 0x56168aedfae8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56168aedf958 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56168aedf9d0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56168aefaed8 <col:41, line:528:5>
|   |-ParenExpr 0x56168aefac70 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefac40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefa960 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefa930 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefa840 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefa828 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefa7e8 <col:23> 'int' lvalue ParmVar 0x56168aedf958 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefa808 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefa910 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefa8f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefa860 <col:33> 'int' lvalue ParmVar 0x56168aedf958 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefa8d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefa8c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefa880 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefa8a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56168aefa9c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefa9a0 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefaba0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefab88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefab68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefabe0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefaa30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56168aefabf8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefaa68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefac10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefaaa0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56168aefac28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefab50 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefab38 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefaaf8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56168aefaeb8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56168aefae68 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56168aefae38 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56168aefade0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56168aefadb0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56168aefad60 <col:47, col:56> 'char [48]' lvalue ->c 0x56168aeed080
|     |     |   `-CXXMemberCallExpr 0x56168aefad40 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56168aefad10 <col:47> '<bound member function type>' ->xanno 0x56168aedc9f8
|     |     |       `-CXXThisExpr 0x56168aefad00 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56168aefadc8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56168aefad90 <col:60> 'int' lvalue ParmVar 0x56168aedf958 'i' 'int'
|     `-ImplicitCastExpr 0x56168aefaea0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56168aefae80 <col:65> 'int16_t':'short' lvalue ParmVar 0x56168aedf9d0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56168aedfca8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56168aedfbb0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56168aefb5a8 <col:36, line:541:5>
|   |-ParenExpr 0x56168aefb348 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefb318 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefb070 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefb040 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefaf50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefaf38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefaef8 <col:23> 'int' lvalue ParmVar 0x56168aedfbb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefaf18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefb020 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefb008 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefaf70 <col:33> 'int' lvalue ParmVar 0x56168aedfbb0 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefafe8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefafd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefaf90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefafb0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56168aefb0d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefb0b0 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefb278 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefb260 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefb240 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefb2b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefb140 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56168aefb2d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefb178 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefb2e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefb1b0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56168aefb300 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefb228 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefb210 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefb1d0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56168aefb598 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56168aefb580 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56168aefb568 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56168aefb538 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56168aefb4e0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56168aefb4b0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168aefb460 <col:61, col:70> 'char const[48]' lvalue ->c 0x56168aeed080
|             |   `-CXXMemberCallExpr 0x56168aefb440 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56168aefb410 <col:61> '<bound member function type>' ->xanno 0x56168aedc858
|             |       `-CXXThisExpr 0x56168aefb400 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56168aefb4c8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56168aefb490 <col:74> 'int' lvalue ParmVar 0x56168aedfbb0 'i' 'int'
|-CXXMethodDecl 0x56168aedfe78 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56168aedfd68 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56168aedfde0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56168aedff28 <col:20>
| `-OptimizeNoneAttr 0x56168aedff80 <col:30>
|-CXXMethodDecl 0x56168aee00b8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56168aedffc0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56168aefbc78 <col:35, line:562:5>
|   |-ParenExpr 0x56168aefba18 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefb9e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefb740 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefb710 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefb620 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefb608 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefb5c8 <col:23> 'int' lvalue ParmVar 0x56168aedffc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefb5e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefb6f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefb6d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefb640 <col:33> 'int' lvalue ParmVar 0x56168aedffc0 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefb6b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefb6a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefb660 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefb680 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56168aefb7a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefb780 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefb948 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefb930 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefb910 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefb988 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefb810 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56168aefb9a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefb848 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefb9b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefb880 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56168aefb9d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefb8f8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefb8e0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefb8a0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56168aefbc68 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56168aefbc50 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56168aefbc38 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56168aefbc08 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56168aefbbb0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56168aefbb80 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168aefbb30 <col:60, col:69> 'char const[48]' lvalue ->c 0x56168aeed080
|             |   `-CXXMemberCallExpr 0x56168aefbb10 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56168aefbae0 <col:60> '<bound member function type>' ->xanno 0x56168aedc858
|             |       `-CXXThisExpr 0x56168aefbad0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56168aefbb98 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56168aefbb60 <col:73> 'int' lvalue ParmVar 0x56168aedffc0 'i' 'int'
|-CXXMethodDecl 0x56168aee02c8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56168aee0178 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56168aee01f0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56168aefc358 <col:41, line:577:5>
|   |-ParenExpr 0x56168aefc0e8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefc0b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefbe10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefbde0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefbcf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefbcd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefbc98 <col:23> 'int' lvalue ParmVar 0x56168aee0178 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefbcb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefbdc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefbda8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefbd10 <col:33> 'int' lvalue ParmVar 0x56168aee0178 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefbd88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefbd70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefbd30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefbd50 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56168aefbe70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefbe50 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefc018 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefc000 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefbfe0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefc058 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefbee0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56168aefc070 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefbf18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefc088 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefbf50 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56168aefc0a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefbfc8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefbfb0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefbf70 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56168aefc338 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56168aefc2e8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56168aefc2b8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56168aefc258 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56168aefc228 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56168aefc1d8 <col:47, col:56> 'char [48]' lvalue ->c 0x56168aeed080
|     |     |   `-CXXMemberCallExpr 0x56168aefc1b8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56168aefc188 <col:47> '<bound member function type>' ->xanno 0x56168aedc9f8
|     |     |       `-CXXThisExpr 0x56168aefc178 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56168aefc240 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56168aefc208 <col:60> 'int' lvalue ParmVar 0x56168aee0178 'i' 'int'
|     `-ImplicitCastExpr 0x56168aefc320 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56168aefc300 <col:65> 'int32_t':'int' lvalue ParmVar 0x56168aee01f0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56168aee0488 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56168aee0390 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56168aefca88 <col:36, line:591:5>
|   |-ParenExpr 0x56168aefc7c8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefc798 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefc4f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefc4c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefc3d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefc3b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefc378 <col:23> 'int' lvalue ParmVar 0x56168aee0390 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefc398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefc4a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefc488 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefc3f0 <col:33> 'int' lvalue ParmVar 0x56168aee0390 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefc468 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefc450 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefc410 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefc430 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56168aefc550 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefc530 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefc6f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefc6e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefc6c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefc738 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefc5c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56168aefc750 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefc5f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefc768 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefc630 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56168aefc780 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefc6a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefc690 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefc650 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56168aefca78 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56168aefca60 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56168aefca48 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56168aefca18 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56168aefc990 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56168aefc960 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168aefc910 <col:61, col:70> 'char const[48]' lvalue ->c 0x56168aeed080
|             |   `-CXXMemberCallExpr 0x56168aefc8f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56168aefc8c0 <col:61> '<bound member function type>' ->xanno 0x56168aedc858
|             |       `-CXXThisExpr 0x56168aefc8b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56168aefc978 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56168aefc940 <col:74> 'int' lvalue ParmVar 0x56168aee0390 'i' 'int'
|-CXXMethodDecl 0x56168aee06d8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56168aee0548 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56168aee05c0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56168aefd178 <col:42, line:606:5>
|   |-ParenExpr 0x56168aefcf10 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56168aefcee0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefcc20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefcbf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefcb00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefcae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefcaa8 <col:23> 'int' lvalue ParmVar 0x56168aee0548 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefcac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefcbd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56168aefcbb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefcb20 <col:33> 'int' lvalue ParmVar 0x56168aee0548 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefcb98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefcb80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefcb40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56168aefcb60 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56168aefcc80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefcc60 <col:60> 'int' 0
|   |   `-CallExpr 0x56168aefce40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56168aefce28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefce08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefce80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefccf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56168aefce98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefcd40 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefceb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefcd78 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56168aefcec8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefcdf0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefcdd8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefcd98 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56168aefd158 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56168aefd108 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56168aefd0d8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56168aefd080 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56168aefd050 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56168aefd000 <col:48, col:57> 'char [48]' lvalue ->c 0x56168aeed080
|     |     |   `-CXXMemberCallExpr 0x56168aefcfe0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56168aefcfb0 <col:48> '<bound member function type>' ->xanno 0x56168aedc9f8
|     |     |       `-CXXThisExpr 0x56168aefcfa0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56168aefd068 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56168aefd030 <col:61> 'int' lvalue ParmVar 0x56168aee0548 'i' 'int'
|     `-ImplicitCastExpr 0x56168aefd140 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56168aefd120 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56168aee05c0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56168aee0870 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56168aee07a0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56168aefd9e8 <col:33, line:620:5>
|   |-ParenExpr 0x56168aefd760 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56168aefd730 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefd380 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefd350 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefd1f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefd1d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefd198 <col:23> 'int' lvalue ParmVar 0x56168aee07a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefd1b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefd330 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56168aefd318 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefd210 <col:33> 'int' lvalue ParmVar 0x56168aee07a0 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefd2f8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefd2e0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefd230 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56168aefd2b8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56168aefd2a0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56168aefd268 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56168aefd3e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefd3c0 <col:79> 'int' 0
|   |   `-CallExpr 0x56168aefd690 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56168aefd678 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefd658 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefd6d0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefd4c8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56168aefd6e8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefd510 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefd700 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefd548 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56168aefd718 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefd640 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefd628 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefd5e8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56168aefd9d8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56168aefd9c0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56168aefd9a8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56168aefd978 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56168aefd8f0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56168aefd8c0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56168aefd870 <col:67, col:76> 'char const[48]' lvalue ->c 0x56168aeed080
|             |   `-CXXMemberCallExpr 0x56168aefd850 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56168aefd820 <col:67> '<bound member function type>' ->xanno 0x56168aedc858
|             |       `-CXXThisExpr 0x56168aefd810 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56168aefd8d8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56168aefd8a0 <col:80> 'int' lvalue ParmVar 0x56168aee07a0 'i' 'int'
|-CXXMethodDecl 0x56168aee0a88 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56168aee0930 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56168aee09b0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56168aefe210 <col:45, line:635:5>
|   |-ParenExpr 0x56168aefdf58 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56168aefdf28 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56168aefdbf0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56168aefdbc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56168aefda60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56168aefda48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56168aefda08 <col:23> 'int' lvalue ParmVar 0x56168aee0930 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56168aefda28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56168aefdba0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56168aefdb88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56168aefda80 <col:33> 'int' lvalue ParmVar 0x56168aee0930 'i' 'int'
|   |   |     `-BinaryOperator 0x56168aefdb68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56168aefdb50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56168aefdaa0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56168aedcc60 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56168aefdb28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56168aefdb10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56168aefdad8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56168aefdc50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56168aefdc30 <col:79> 'int' 0
|   |   `-CallExpr 0x56168aefde88 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56168aefde70 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aefde50 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56168aefdec8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefdcc0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56168aefdee0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56168aefdd08 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56168aefdef8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56168aefdd40 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56168aefdf10 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56168aefde38 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56168aefde20 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56168aefddd8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56168aefe1f0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56168aefe158 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56168aefe128 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56168aefe0c8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56168aefe098 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56168aefe048 <col:54, col:63> 'char [48]' lvalue ->c 0x56168aeed080
|     |     |   `-CXXMemberCallExpr 0x56168aefe028 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56168aefdff8 <col:54> '<bound member function type>' ->xanno 0x56168aedc9f8
|     |     |       `-CXXThisExpr 0x56168aefdfe8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56168aefe0b0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56168aefe078 <col:67> 'int' lvalue ParmVar 0x56168aee0930 'i' 'int'
|     `-CXXConstCastExpr 0x56168aefe1c0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56168aefe1a8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56168aefe170 <col:91> 'const void *' lvalue ParmVar 0x56168aee09b0 'x' 'const void *'
|-CXXMethodDecl 0x56168aee0b58 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56168aefe298 <col:34, line:640:5>
|   `-ReturnStmt 0x56168aefe288 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56168aefe270 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56168aefe240 <col:16> 'Packet *' lvalue ->_data_packet 0x56168aeedc38
|         `-CXXThisExpr 0x56168aefe230 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56168aee7a00 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56168aee7970 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168aeef088 <col:46> 'bool' true
|-CXXMethodDecl 0x56168aee7b78 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56168aee7ab8 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56168aee7c20 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56168aee83d0 <line:660:22> "" ""
| |-EnumConstantDecl 0x56168aee7d20 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee8440 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee7d00 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56168aee7ce0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56168aed6120 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56168aee7db0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee8458 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee7d90 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56168aee7d70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56168aed61b0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56168aee7e40 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee8470 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee7e20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56168aee7e00 <col:21> 'int' 0
| |-EnumConstantDecl 0x56168aee7ed0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee8488 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee7eb0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56168aee7e90 <col:19> 'int' 16
| |-EnumConstantDecl 0x56168aee7f60 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee84a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee7f40 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56168aee7f20 <col:21> 'int' 16
| |-EnumConstantDecl 0x56168aee7ff0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee84b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee7fd0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56168aee7fb0 <col:19> 'int' 32
| |-EnumConstantDecl 0x56168aee8080 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee84d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee8060 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56168aee8040 <col:19> 'int' EnumConstant 0x56168aee7ed0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56168aee8110 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee84e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee80f0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56168aee80d0 <col:19> 'int' EnumConstant 0x56168aee7ff0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56168aee81e0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee8500 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee81c0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56168aee81a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56168aee8160 <col:23> 'int' EnumConstant 0x56168aee8110 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56168aee8180 <col:40> 'int' 2
| |-EnumConstantDecl 0x56168aee82b0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56168aee8518 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aee8290 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56168aee8270 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56168aee8230 <col:23> 'int' EnumConstant 0x56168aee8110 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56168aee8250 <col:40> 'int' 4
| `-EnumConstantDecl 0x56168aee8380 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56168aee8530 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aee8360 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56168aee8340 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56168aee8300 <col:23> 'int' EnumConstant 0x56168aee8110 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56168aee8320 <col:40> 'int' 8
|-CXXMethodDecl 0x56168aee8570 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56168aee8610 <col:68> "" ""
|-CXXMethodDecl 0x56168aee86a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56168aee8748 <col:45> "" ""
|-CXXMethodDecl 0x56168aee87e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56168aee8880 <col:57> "" ""
|-CXXMethodDecl 0x56168aee8918 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56168aee89b8 <col:45> "" ""
|-CXXMethodDecl 0x56168aee8a50 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56168aee8af0 <col:57> "" ""
|-CXXMethodDecl 0x56168aee8b80 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56168aee8c20 <col:51> "" ""
|-CXXMethodDecl 0x56168aee8cb0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56168aee8d50 <col:63> "" ""
|-CXXMethodDecl 0x56168aee8de0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56168aee8e80 <col:53> "" ""
|-CXXMethodDecl 0x56168aee8f10 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56168aee8fb0 <col:65> "" ""
|-CXXMethodDecl 0x56168aee90c8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56168aee9038 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56168aee9170 <col:61> "" ""
|-CXXMethodDecl 0x56168aee9308 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56168aee91f8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56168aee9270 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56168aee93b8 <col:67> "" ""
|-CXXMethodDecl 0x56168aee94d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56168aee9440 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56168aee9578 <col:63> "" ""
|-CXXMethodDecl 0x56168aee9710 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56168aee9600 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56168aee9678 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56168aee97c0 <col:69> "" ""
|-CXXMethodDecl 0x56168aee98d8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56168aee9848 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56168aee9980 <col:63> "" ""
|-CXXMethodDecl 0x56168aee9b18 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56168aee9a08 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56168aee9a80 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168aee9bc8 <col:69> "" ""
|-CXXMethodDecl 0x56168aee9ce0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56168aee9c50 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56168aee9d88 <col:62> "" ""
|-CXXMethodDecl 0x56168aee9f20 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56168aee9e10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56168aee9e88 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56168aee9fd0 <col:68> "" ""
|-CXXMethodDecl 0x56168aeea0e8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56168aeea058 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56168aeea190 <col:63> "" ""
|-CXXMethodDecl 0x56168aeea328 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56168aeea218 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56168aeea290 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56168aeea3d8 <col:69> "" ""
|-CXXMethodDecl 0x56168aeea468 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56168aeea508 <col:64> "" ""
|-CXXMethodDecl 0x56168aeea598 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56168aeea638 <col:52> "" ""
|-CXXMethodDecl 0x56168aeea6c8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56168aeea768 <col:67> "" ""
|-CXXMethodDecl 0x56168aeea7f8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56168aeea898 <col:55> "" ""
|-CXXMethodDecl 0x56168aeea9b0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56168aeea920 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56168aeeaa58 <col:58> "" ""
|-CXXMethodDecl 0x56168aeeabf0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56168aeeaae0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56168aeeab58 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56168aeeaca0 <col:62> "" ""
|-CXXMethodDecl 0x56168aeeadb8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56168aeead28 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56168aeeae60 <col:58> "" ""
|-CXXMethodDecl 0x56168aeeaff8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56168aeeaee8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56168aeeaf60 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56168aeeb0a8 <col:62> "" ""
|-CXXMethodDecl 0x56168aeeb1c0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56168aeeb130 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56168aeeb268 <col:60> "" ""
|-CXXMethodDecl 0x56168aeeb400 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56168aeeb2f0 <col:34> col:37 'int'
| |-ParmVarDecl 0x56168aeeb368 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56168aeeb4b0 <col:64> "" ""
|-CXXMethodDecl 0x56168aeeb5c8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56168aeeb538 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56168aeeb670 <col:58> "" ""
|-CXXMethodDecl 0x56168aeeb808 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56168aeeb6f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56168aeeb770 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56168aeeb8b8 <col:62> "" ""
|-CXXMethodDecl 0x56168aeecb10 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56168aeeca80 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56168aeecbb8 <col:59> "" ""
|-CXXMethodDecl 0x56168aeecd50 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56168aeecc40 <col:33> col:36 'int'
| |-ParmVarDecl 0x56168aeeccb8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168aeece00 <col:63> "" ""
|-AccessSpecDecl 0x56168aeece70 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56168aeece98 prev 0x56168aedc730 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168aeecf90 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56168aeed080 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56168aeed1a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56168aeed328 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56168aeed4a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56168aeed628 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56168aefe418 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56168aefec88 <col:11>
| |-CXXDestructorDecl 0x56168aefe4f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56168aefe628 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56168aefe628
| | `-ParmVarDecl 0x56168aefe738 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56168aefe7d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56168aefe7d8
| | `-ParmVarDecl 0x56168aefe8e8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56168aee2538 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56168aee2648 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56168aee28c8 <col:11>
| |   `-ReturnStmt 0x56168aee28b8 <col:11>
| |     `-UnaryOperator 0x56168aee28a0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56168aee2890 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56168aee26b8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56168aee26b8
|   `-ParmVarDecl 0x56168aee27c8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56168aeed690 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168aeed7a8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56168aeed848 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56168aeed8b0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56168aeed918 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56168aeed980 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56168aeed9e0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56168aeedaa0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56168aeedb00 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56168aeedb60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56168aefe328 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56168aeed848 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56168aefec98 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56168aefecf0 <col:12>
| |-CXXConstructorDecl 0x56168aefe958 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56168aefe958
| | `-ParmVarDecl 0x56168aefea68 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56168aefeb08 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56168aefeb08
| | `-ParmVarDecl 0x56168aefec18 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56168aee1c20 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56168aeedbd8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56168aeedc38 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56168aeedca0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56168aeedd08 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56168aeedd70 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56168aeeddd8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56168aeede38 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56168aeede98 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56168aeedf00 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56168aeedf88 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56168aeedbd8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56168aefe2c0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56168aeede38 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56168aefed00 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56168aefed60 <col:21, line:755:5>
|-CXXConstructorDecl 0x56168aeee128 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56168aeee068 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56168aeee220 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56168aeee408 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56168aeee310 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56168aeee6d8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56168aeee4c0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56168aeee538 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56168aeee5b0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aeee8f8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56168aeee7a8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56168aeee820 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56168aeeebc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56168aeee9b8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56168aeeea30 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56168aeeeaa8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56168aeeed20 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56168aeeec90 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aeeee68 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56168aeeedd8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56168aeeef60 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b029320 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168b029438 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x56168b029508 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x56168b029568 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x56168b0295d0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x56168b029658 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x56168b0298c0 <col:16, line:46:5>
|   |-BinaryOperator 0x56168b029808 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x56168b029728 <col:9> 'TaskLink *' lvalue ->_prev 0x56168b029508
|   | | `-CXXThisExpr 0x56168b029718 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x56168b0297f0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x56168b0297d0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x56168b029768 <col:17> 'TaskLink *' lvalue ->_next 0x56168b029568
|   |     | `-CXXThisExpr 0x56168b029758 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x56168b0297b8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x56168b029798 <col:25> 'int' 0
|   `-BinaryOperator 0x56168b0298a0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x56168b029838 <col:9> 'unsigned int' lvalue ->_pass 0x56168b0295d0
|     | `-CXXThisExpr 0x56168b029828 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x56168b029888 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56168b029868 <col:17> 'int' 0
|-CXXConstructorDecl 0x56168b093708 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x56168b093708
| `-ParmVarDecl 0x56168b093818 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x56168b0938b8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x56168b0938b8
| `-ParmVarDecl 0x56168b0939c8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x56168b093bb8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x56168b093bb8
|-CXXMethodDecl 0x56168b0943b8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x56168b0943b8
| `-ParmVarDecl 0x56168b0944c8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x56168b094538 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x56168b094538
  `-ParmVarDecl 0x56168b094648 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b02be28 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56168b02bf58 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x56168b02bfb8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x56168b02c018 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x56168b09c6f8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x56168b09c7d0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168b09c7d0
|-CXXConstructorDecl 0x56168b09ca88 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56168b09ca88
| `-ParmVarDecl 0x56168b09cb98 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x56168b09cc38 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56168b09cc38
  `-ParmVarDecl 0x56168b09cd48 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b02bc80 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56168b02bd98 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x56168b02be28 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56168b02bf58 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x56168b02bfb8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x56168b02c018 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x56168b09c6f8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x56168b09c7d0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168b09c7d0
| |-CXXConstructorDecl 0x56168b09ca88 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56168b09ca88
| | `-ParmVarDecl 0x56168b09cb98 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x56168b09cc38 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56168b09cc38
|   `-ParmVarDecl 0x56168b09cd48 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x56168b02c0d8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x56168b02c138 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x56168b02c0d8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56168b02bf58 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x56168b02c190 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x56168b02c0d8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56168b02bfb8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x56168b02c1e8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x56168b02c0d8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x56168b02c018 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x56168b02c240 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56168b09c600 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56168b09cf68 <col:11>
|-CXXConstructorDecl 0x56168b09c8d8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56168b09c8d8
| `-ParmVarDecl 0x56168b09c9e8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x56168b09cde8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56168b09cde8
  `-ParmVarDecl 0x56168b09cef8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168aea8070 prev 0x56168aea1e10 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168aea8168 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56168aea8208 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56168aeafe28 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56168aeb0208 <col:11>
|-CXXConstructorDecl 0x56168aeaff00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168aeaffe8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56168aeb0950 <col:11>
|-CXXConstructorDecl 0x56168aeb0088 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56168aeb0198 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56168aebcee8 <col:11>
|-CXXDestructorDecl 0x56168aeb14b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56168af011e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168af012f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56168af01bc0 <col:11>
|   `-ReturnStmt 0x56168af01bb0 <col:11>
|     `-UnaryOperator 0x56168af01b98 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56168af01b88 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56168af01368 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56168af01478 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x56168b020180 <col:11>
    `-ReturnStmt 0x56168b020170 <col:11>
      `-UnaryOperator 0x56168b020158 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56168b020148 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168aea0fc8 prev 0x56168aea0cd8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168aea10c0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56168aea1150 <col:19, col:25> col:19 public
|-TypedefDecl 0x56168aea1188 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56168ab37730 'int32_t' sugar
|   |-Typedef 0x56168aa48328 'int32_t'
|   `-TypedefType 0x56168aa21510 '__int32_t' sugar
|     |-Typedef 0x56168aa21128 '__int32_t'
|     `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168aea11f0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56168ab378f0 'int64_t' sugar
|   |-Typedef 0x56168aa48390 'int64_t'
|   `-TypedefType 0x56168aa21630 '__int64_t' sugar
|     |-Typedef 0x56168aa21208 '__int64_t'
|     `-BuiltinType 0x56168a9df5a0 'long'
|-EnumDecl 0x56168aea1248 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56168aea13c0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56168aea13a0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56168aea1378 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56168aea1360 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56168aea1330 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56168aea14b8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56168aea1498 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56168aea1470 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56168aea1458 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56168aea1430 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56168aea1410 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56168aea1508 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56168aea1610 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1b60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea15f0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56168aea15d0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56168aea16a0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1b78 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea1680 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56168aea1660 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56168aea1730 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1b90 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea1710 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56168aea16f0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56168aea17c0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1ba8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea17a0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56168aea1780 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56168aea1850 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1bc0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea1830 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56168aea1810 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56168aea18e0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1bd8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea18c0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56168aea18a0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56168aea1970 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1bf0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea1950 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56168aea1930 <col:26> 'int' EnumConstant 0x56168aea1610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56168aea1a40 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56168aea1c08 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea1a20 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56168aea1a00 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56168aea19c0 <col:27> 'int' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56168aea19e0 <col:44> 'int' EnumConstant 0x56168aea18e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56168aea1b10 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56168aea1c20 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aea1af0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56168aea1ad0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56168aea1a90 <col:27> 'int' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56168aea1ab0 <col:44> 'int' EnumConstant 0x56168aea17c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56168aea1c38 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56168aea1d40 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56168aea1d90 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aea1d20 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56168aea1d00 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56168aea1db8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56168ab37360 'uninitialized_type'
|   `-CXXRecord 0x56168ab372c8 'uninitialized_type'
|-CXXRecordDecl 0x56168aea1e10 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56168aea1f20 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb0218 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168aeb0338 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56168aeb02f0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56168aeb0280 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aeb0270 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56168aeb02b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56168aeb0320 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56168aeb02d0 <col:19> 'int' 0
|-CXXConstructorDecl 0x56168aea2168 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56168aea1fe0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56168aea2058 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56168aeafcc0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168aeafca0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb0350 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168aeb04a0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56168aeb0428 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56168aeb03b8 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aeb03a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56168aeb0470 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56168aeb0458 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56168aeb03e8 <col:16> 'long' lvalue ParmVar 0x56168aea1fe0 'sec' 'long'
|     `-ImplicitCastExpr 0x56168aeb0488 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56168aeb0408 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea2058 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56168aea23c8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56168aea2238 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56168aea22b0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56168aeafcf8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168aeafcd8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb04b8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168aeb05f0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56168aeb0590 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56168aeb0520 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aeb0510 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56168aeb05c0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56168aeb0550 <col:16> 'int' lvalue ParmVar 0x56168aea2238 'sec' 'int'
|     `-ImplicitCastExpr 0x56168aeb05d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56168aeb0570 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea22b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56168aea2628 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56168aea2498 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56168aea2510 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56168aeafd30 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168aeafd10 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb0608 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168aeb0758 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56168aeb06e0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56168aeb0670 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aeb0660 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56168aeb0728 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56168aeb0710 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56168aeb06a0 <col:16> 'unsigned long' lvalue ParmVar 0x56168aea2498 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56168aeb0740 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56168aeb06c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea2510 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56168aea2888 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56168aea26f8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56168aea2770 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56168aeafd68 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168aeafd48 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb0770 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168aeb08c0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56168aeb0848 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56168aeb07d8 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aeb07c8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56168aeb0890 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56168aeb0878 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56168aeb0808 <col:16> 'unsigned int' lvalue ParmVar 0x56168aea26f8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56168aeb08a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56168aeb0828 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea2770 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56168aea29e8 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56168aea2958 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56168aea2b88 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56168aea2ac0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56168aea2db8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56168aea2cc0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56168aea2f68 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56168aea2ea8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb0960 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56168aeb08d8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56168aea2ea8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56168aeb09c0 <col:19, line:214:5>
|-CXXConstructorDecl 0x56168aea3138 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56168aea3078 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aeb09d0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56168aeb0a80 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56168aeb0a58 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56168aeb0a28 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56168aea3078 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56168aea3328 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56168aea32a0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56168aea0d70 'Timestamp'
|   | `-CXXRecord 0x56168aea0fc8 'Timestamp'
|   `-ParenType 0x56168aea3240 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56168aea3210 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56168aea1310 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56168aea1188 'seconds_type'
|         `-TypedefType 0x56168ab37730 'int32_t' sugar
|           |-Typedef 0x56168aa48328 'int32_t'
|           `-TypedefType 0x56168aa21510 '__int32_t' sugar
|             |-Typedef 0x56168aa21128 '__int32_t'
|             `-BuiltinType 0x56168a9df580 'int'
|-CXXConversionDecl 0x56168aea3468 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56168aea3538 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x56168aeb0b88 <col:37, line:231:5>
|   `-ReturnStmt 0x56168aeb0b78 <line:227:9, col:23>
|     `-BinaryOperator 0x56168aeb0b58 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56168aeb0b28 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56168aeb0ad8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56168aea8208
|       |   `-MemberExpr 0x56168aeb0aa8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56168aeae178
|       |     `-CXXThisExpr 0x56168aeb0a98 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56168aeb0b40 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56168aeb0b08 <col:23> 'int' 0
|-CXXMethodDecl 0x56168aea35f8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56168aea36b8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aea3778 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aea3838 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aea38f8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56168aea3a68 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56168aea39a8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56168aea3bb0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56168aea3b20 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea3c78 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56168aea3d18 <col:54> "" ""
|-CXXMethodDecl 0x56168aea3da8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56168aea3e48 <col:54> "" ""
|-CXXMethodDecl 0x56168aea3ed8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56168aea3f78 <col:54> "" ""
|-CXXMethodDecl 0x56168aea4078 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56168aea4148 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56168aea4278 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56168aea4370 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56168aea44a8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56168aeb0da0 <col:39, line:271:5>
|   `-ReturnStmt 0x56168aeb0d90 <line:267:9, col:61>
|     `-CallExpr 0x56168aeb0d30 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56168aeb0d18 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168aeb0ba0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56168aeae4a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56168aeb0d60 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56168aeb0c00 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56168aea8208
|       |   `-MemberExpr 0x56168aeb0bd0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56168aeae178
|       |     `-CXXThisExpr 0x56168aeb0bc0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56168aeb0d78 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56168aeb0ca0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56168aeb0c70 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56168aeb0c30 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56168aeb0c88 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56168aeb0c50 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea18e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea4568 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56168aeb0f60 <col:39, line:279:5>
|   `-ReturnStmt 0x56168aeb0f50 <line:275:9, col:61>
|     `-CallExpr 0x56168aeb0ef0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56168aeb0ed8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168aeb0db8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56168aeae4a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56168aeb0f20 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56168aeb0e18 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56168aea8208
|       |   `-MemberExpr 0x56168aeb0de8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56168aeae178
|       |     `-CXXThisExpr 0x56168aeb0dd8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56168aeb0f38 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56168aeb0eb8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56168aeb0e88 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56168aeb0e48 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56168aeb0ea0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56168aeb0e68 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea17c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea4628 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56168aeb10f8 <col:39, line:287:5>
|   `-ReturnStmt 0x56168aeb10e8 <line:283:9, col:53>
|     `-BinaryOperator 0x56168aeb10c8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56168aeb1098 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56168aeb0fb8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56168aea8208
|       |   `-MemberExpr 0x56168aeb0f88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56168aeae178
|       |     `-CXXThisExpr 0x56168aeb0f78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56168aeb10b0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56168aeb1078 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56168aeb1058 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56168aeb1028 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aeb0fe8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aeb1040 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aeb1008 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea4718 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56168aebd0d0 <col:40, line:293:5>
|   |-DeclStmt 0x56168aeb1240 <line:291:9, col:48>
|   | `-VarDecl 0x56168aeb1120 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56168aeb1220 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56168aeb11c8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56168aeb1198 <col:22> '<bound member function type>' ->subsec 0x56168aea36b8
|   |     |   `-CXXThisExpr 0x56168aeb1188 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56168aeb1208 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56168aeb11e8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1a40 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56168aebd0c0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56168aebd0a8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebd078 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebd060 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56168aebd040 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56168aebd010 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56168aebcda8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56168aebcd90 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56168aeb1258 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56168aeb1120 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56168aebcfb0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56168aebcf98 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56168aebcf68 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56168aebcdc0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56168aebcd30 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56168aebcd18 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56168aebccc8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56168aea0f18 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56168aebcc68 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56168aeb1288 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56168aeb1278 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56168aebccb0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56168aebcc98 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56168aeb1748 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56168aeb12b0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56168aeb1340 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56168aeb1310 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56168aeb12d0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1a40 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56168aeb1328 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56168aeb12f0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56168aeb1120 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56168aebcfe0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56168aebcd78 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56168aebcd68 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56168aea47d8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56168aebd628 <col:40, line:302:5>
|   |-DeclStmt 0x56168aebd220 <line:297:9, col:48>
|   | `-VarDecl 0x56168aebd100 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56168aebd200 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56168aebd1a8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56168aebd178 <col:22> '<bound member function type>' ->subsec 0x56168aea36b8
|   |     |   `-CXXThisExpr 0x56168aebd168 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56168aebd1e8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56168aebd1c8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1b10 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56168aebd618 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56168aebd600 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebd5d0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebd5b8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56168aebd598 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56168aebd568 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56168aebd490 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56168aebd478 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56168aebd238 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56168aebd100 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56168aebd508 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56168aebd4f0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56168aebd4c0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56168aebd4a8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56168aebd418 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56168aebd400 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56168aebd3e0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56168aea0f18 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56168aebd380 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56168aebd268 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56168aebd258 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56168aebd3c8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56168aebd3b0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56168aebd340 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56168aebd290 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56168aebd320 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56168aebd2f0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56168aebd2b0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1b10 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56168aebd308 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56168aebd2d0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56168aebd100 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56168aebd538 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56168aebd460 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56168aebd450 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56168aea4ef0 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56168aebd6b0 <col:40, line:306:5>
|   `-ReturnStmt 0x56168aebd6a0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56168aebd670 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56168aebd658 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56168aebd648 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56168aea5098 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56168aea4fa0 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56168aea5268 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56168aea5170 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56168aea5358 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56168aea54c8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56168aea5408 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56168aebd7f8 <col:56, line:320:5>
|   `-ReturnStmt 0x56168aebd7e8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56168aebd7d0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebd7a0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebd788 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56168aebd748 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56168aebd718 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56168aebd6d8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea5408 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56168aebd730 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56168aebd6f8 <col:31> 'int' 0
|-CXXMethodDecl 0x56168aea5708 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56168aea5580 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea55f8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebd9c8 <col:72, line:326:5>
|   `-ReturnStmt 0x56168aebd9b8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56168aebd9a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebd970 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebd958 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56168aebd918 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56168aebd900 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56168aebd820 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea5580 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56168aebd8c0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56168aebd8a8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56168aebd840 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56168aea7960 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56168aebd8e8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56168aebd860 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea55f8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea58b8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56168aea57c8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56168aebe090 <col:56, line:337:5>
|   |-DeclStmt 0x56168aebdcc8 <line:329:9, col:51>
|   | `-VarDecl 0x56168aebd9f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56168aebdcb0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56168aebdc80 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56168aebdc68 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56168aebdc50 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56168aebdc20 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56168aebdc08 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56168aebdbf0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56168aebdae0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56168aebde80 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56168aebdd30 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56168aea8208
|   | | `-MemberExpr 0x56168aebdd00 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56168aeae178
|   | |   `-DeclRefExpr 0x56168aebdce0 <col:9> 'Timestamp' lvalue Var 0x56168aebd9f0 't' 'Timestamp'
|   | `-BinaryOperator 0x56168aebde60 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56168aebde30 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56168aebdd60 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56168aea57c8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56168aebde48 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56168aebde10 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56168aebddf0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56168aebddc0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56168aebdd80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56168aebddd8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56168aebdda0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea18e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56168aebe078 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56168aebe048 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56168aebe030 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56168aebe010 <col:16> 'Timestamp' lvalue Var 0x56168aebd9f0 't' 'Timestamp'
|-CXXMethodDecl 0x56168aea5a80 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56168aea5970 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea59e8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebe248 <col:72, line:343:5>
|   `-ReturnStmt 0x56168aebe238 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56168aebe220 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebe1f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebe1d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56168aebe198 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56168aebe180 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56168aebe0c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea5970 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56168aebe140 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56168aebe128 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56168aebe0e8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56168aea7aa8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56168aebe168 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56168aebe108 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea59e8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea5bd0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56168aea5b40 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56168aebe690 <col:56, line:354:5>
|   |-DeclStmt 0x56168aebe438 <line:346:9, col:51>
|   | `-VarDecl 0x56168aebe270 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56168aebe420 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56168aebe3f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56168aebe3d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56168aebe3c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56168aebe390 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56168aebe378 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56168aebe360 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56168aebe330 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56168aebe5f0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56168aebe4a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56168aea8208
|   | | `-MemberExpr 0x56168aebe470 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56168aeae178
|   | |   `-DeclRefExpr 0x56168aebe450 <col:9> 'Timestamp' lvalue Var 0x56168aebe270 't' 'Timestamp'
|   | `-BinaryOperator 0x56168aebe5d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56168aebe5a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56168aebe4d0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56168aea5b40 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56168aebe5b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56168aebe580 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56168aebe560 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56168aebe530 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56168aebe4f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56168aebe548 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56168aebe510 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea17c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56168aebe678 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56168aebe648 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56168aebe630 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56168aebe610 <col:16> 'Timestamp' lvalue Var 0x56168aebe270 't' 'Timestamp'
|-CXXMethodDecl 0x56168aea5d98 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56168aea5c88 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea5d00 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebe848 <col:72, line:360:5>
|   `-ReturnStmt 0x56168aebe838 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56168aebe820 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebe7f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebe7d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56168aebe798 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56168aebe780 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56168aebe6c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea5c88 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56168aebe740 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56168aebe728 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56168aebe6e8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56168aea7bf0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56168aebe768 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56168aebe708 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea5d00 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea5ee8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56168aea5e58 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56168aebecb8 <col:56, line:371:5>
|   |-DeclStmt 0x56168aebea38 <line:363:9, col:51>
|   | `-VarDecl 0x56168aebe870 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56168aebea20 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56168aebe9f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56168aebe9d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56168aebe9c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56168aebe990 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56168aebe978 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56168aebe960 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56168aebe930 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56168aebec18 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56168aebeaa0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56168aea8208
|   | | `-MemberExpr 0x56168aebea70 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56168aeae178
|   | |   `-DeclRefExpr 0x56168aebea50 <col:9> 'Timestamp' lvalue Var 0x56168aebe870 't' 'Timestamp'
|   | `-CallExpr 0x56168aebebb8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56168aebeba0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56168aebead0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56168aeae4a8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56168aebebe8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56168aebeaf0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56168aea5e58 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56168aebec00 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56168aebeb80 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56168aebeb50 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56168aebeb10 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56168aebeb68 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56168aebeb30 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56168aebeca0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56168aebec70 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56168aebec58 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56168aebec38 <col:16> 'Timestamp' lvalue Var 0x56168aebe870 't' 'Timestamp'
|-CXXMethodDecl 0x56168aea5fd8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56168aebedf8 <col:39, line:377:5>
|   `-ReturnStmt 0x56168aebede8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56168aebedd0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56168aebeda0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168aebed88 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56168aebed48 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56168aebecf0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56168aebed30 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56168aebed10 <col:29> 'int' 1
|-CXXMethodDecl 0x56168aea6098 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56168aebeed8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56168aebee90 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56168aebee20 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aebee10 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56168aebee50 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56168aebeec0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56168aebee70 <col:19> 'int' 0
|-CXXMethodDecl 0x56168aea6298 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56168aea6148 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea61c0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56168aeafda0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168aeafd80 <col:60> 'int' 0
| `-CompoundStmt 0x56168aebf0d0 <col:63, line:395:5>
|   `-BinaryOperator 0x56168aebf0b0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56168aebef30 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56168aea8208
|     | `-MemberExpr 0x56168aebef00 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56168aeae178
|     |   `-CXXThisExpr 0x56168aebeef0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56168aebf090 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56168aebf020 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56168aebefc0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56168aebefa8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56168aebef90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56168aebef60 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea6148 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56168aebf008 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56168aebefe8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56168aebf078 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56168aebf060 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56168aebf040 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea61c0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea6468 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56168aea6358 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea63d0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf228 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56168aebf1e0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56168aebf0f8 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aebf0e8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56168aebf210 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56168aebf128 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea6358 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56168aebf1a0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56168aebf188 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168aebf148 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56168aea7aa8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56168aebf1c8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56168aebf168 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea63d0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea6638 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56168aea6528 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea65a0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf380 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56168aebf338 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56168aebf250 <col:9> '<bound member function type>' ->assign 0x56168aea6298
|     | `-CXXThisExpr 0x56168aebf240 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56168aebf368 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56168aebf280 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56168aea6528 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56168aebf2f8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56168aebf2e0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168aebf2a0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56168aea7bf0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56168aebf320 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56168aebf2c0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea65a0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aea6808 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56168aea66f8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea6770 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56168aeafdd8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56168aeafdb8 <col:57> 'int' 0
| `-DeprecatedAttr 0x56168aea68b8 <col:75> "" ""
|-CXXMethodDecl 0x56168aea6a48 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56168aea6938 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea69b0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168aea6af8 <col:74> "" ""
|-CXXMethodDecl 0x56168aea6c88 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56168aea6b78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56168aea6bf0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168aea6d38 <col:74> "" ""
|-CXXMethodDecl 0x56168aea6dc8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56168aea6e68 <col:42> "" ""
|-CXXMethodDecl 0x56168aea7010 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56168aea6ef0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56168aea6f70 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56168aea70e0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56168aea71a0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56168aea7240 <col:20>
| `-OptimizeNoneAttr 0x56168aea7298 <col:30>
|-CXXMethodDecl 0x56168aea72e0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56168aea73a0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56168aea7460 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56168aea7520 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56168aea75e0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56168aea76a0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56168aea7760 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56168aea7820 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56168aea7960 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56168aea78d0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf4c8 <col:58, line:512:5>
|   `-ReturnStmt 0x56168aebf4b8 <line:511:9, col:53>
|     `-BinaryOperator 0x56168aebf498 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56168aebf468 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebf398 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea78d0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56168aebf480 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56168aebf448 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56168aebf428 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56168aebf3f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aebf3b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aebf410 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aebf3d8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea18e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea7aa8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56168aea7a18 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf610 <col:58, line:516:5>
|   `-ReturnStmt 0x56168aebf600 <line:515:9, col:53>
|     `-BinaryOperator 0x56168aebf5e0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56168aebf5b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebf4e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea7a18 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56168aebf5c8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56168aebf590 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56168aebf570 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56168aebf540 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aebf500 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aebf558 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aebf520 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea17c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea7bf0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56168aea7b60 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf758 <col:58, line:520:5>
|   `-ReturnStmt 0x56168aebf748 <line:519:9, col:53>
|     `-BinaryOperator 0x56168aebf728 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56168aebf6f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebf628 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea7b60 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56168aebf710 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56168aebf6d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56168aebf6b8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56168aebf688 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aebf648 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aebf6a0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aebf668 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea7d38 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56168aea7ca8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf8a0 <col:60, line:524:5>
|   `-ReturnStmt 0x56168aebf890 <line:523:9, col:55>
|     `-BinaryOperator 0x56168aebf870 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56168aebf840 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebf770 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea7ca8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56168aebf858 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56168aebf820 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56168aebf800 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56168aebf7d0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aebf790 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aebf7e8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aebf7b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea18e0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea7e80 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56168aea7df0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebf9e8 <col:60, line:528:5>
|   `-ReturnStmt 0x56168aebf9d8 <line:527:9, col:55>
|     `-BinaryOperator 0x56168aebf9b8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56168aebf988 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebf8b8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea7df0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56168aebf9a0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56168aebf968 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56168aebf948 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56168aebf918 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aebf8d8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aebf930 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aebf8f8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea17c0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56168aea7fc8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56168aea7f38 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebfb30 <col:60, line:532:5>
|   `-ReturnStmt 0x56168aebfb20 <line:531:9, col:55>
|     `-BinaryOperator 0x56168aebfb00 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56168aebfad0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebfa00 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aea7f38 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56168aebfae8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56168aebfab0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56168aebfa90 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56168aebfa60 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56168aebfa20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1610 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56168aebfa78 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56168aebfa40 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56168aea1970 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56168aea8070 prev 0x56168aea1e10 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168aea8168 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56168aea8208 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56168aeafe28 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56168aeb0208 <col:11>
| |-CXXConstructorDecl 0x56168aeaff00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56168aeaffe8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56168aeb0950 <col:11>
| |-CXXConstructorDecl 0x56168aeb0088 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56168aeb0198 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56168aebcee8 <col:11>
| |-CXXDestructorDecl 0x56168aeb14b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56168af011e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56168af012f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56168af01bc0 <col:11>
| |   `-ReturnStmt 0x56168af01bb0 <col:11>
| |     `-UnaryOperator 0x56168af01b98 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56168af01b88 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56168af01368 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x56168af01478 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x56168b020180 <col:11>
|     `-ReturnStmt 0x56168b020170 <col:11>
|       `-UnaryOperator 0x56168b020158 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56168b020148 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x56168aea8270 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56168aea8370 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56168aea8570 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea8350 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56168aea8330 <col:21> 'int' 0
| |-EnumConstantDecl 0x56168aea8400 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56168aea8588 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea83e0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56168aea83c0 <col:23> 'int' 1
| |-EnumConstantDecl 0x56168aea8490 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56168aea85a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168aea8470 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56168aea8450 <col:23> 'int' 2
| `-EnumConstantDecl 0x56168aea8520 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56168aea85b8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168aea8500 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56168aea84e0 <col:27> 'int' 3
|-CXXMethodDecl 0x56168aea85f8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56168aea86c0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56168aea88c8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56168aea8770 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56168aea87f0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56168aeafdf0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56168aea8ad8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56168aea8988 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56168aea8a00 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56168aea8ba8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56168aea8c68 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56168aea8dd8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56168aea8d18 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56168aeade60 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56168aeadf20 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56168aeadfe0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56168aeae0a0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56168aeae140 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56168aeae178 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56168aeae1e8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56168aebfb48 <col:27, line:684:5>
|-CXXMethodDecl 0x56168aeae2a8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56168aebfb58 <col:27, line:696:5>
|-CXXMethodDecl 0x56168aeae4a8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56168aeae358 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56168aeae3d0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aebfce0 <col:66, line:700:5>
|   `-ReturnStmt 0x56168aebfcd0 <line:699:9, col:31>
|     `-CallExpr 0x56168aebfc70 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56168aebfc58 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168aebfc08 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56168ad2e378 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56168aebfca0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56168aebfbc8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56168aeae358 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56168aebfcb8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56168aebfbe8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aeae3d0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168aeae818 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56168aeae568 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56168aeae5e0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56168aeae658 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56168aeae6d0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168aec0030 <col:64, line:707:5>
|   |-DeclStmt 0x56168aebfd70 <line:704:9, col:24>
|   | `-VarDecl 0x56168aebfd08 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56168aebff80 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56168aebfd88 <col:9> 'int32_t':'int' lvalue ParmVar 0x56168aeae5e0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56168aebff68 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56168aebff00 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56168aebfee8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56168aebfe68 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56168ad33cf8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56168aebff38 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56168aebfe08 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56168aeae658 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56168aebff50 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56168aebfe28 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168aeae6d0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56168aebfe48 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56168aebfd08 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56168aec0010 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56168aebffa0 <col:9> 'int32_t':'int' lvalue ParmVar 0x56168aeae568 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56168aebfff8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56168aebffe0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56168aebffc0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56168aebfd08 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56168aeaeab8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56168aeae8e8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56168aeae960 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56168aeae9d8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56168aeaed58 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56168aeaeb80 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56168aeaebf8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56168aeaec70 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56168aeaeee8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56168aeaee20 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56168aeaf0e8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56168aeaefa0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56168aeaf018 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56168aeaf3b8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56168aeaf2f8 parent 0x56168a9df488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56168aeaf1a8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56168aeaf220 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56168aeaf5d8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56168aeaf518 parent 0x56168a9df488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56168aeaf408 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56168aeaf480 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56168aeaf7a0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56168aeaf6e8 parent 0x56168a9df488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56168aeaf628 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56168aeafa28 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56168aeaf968 parent 0x56168a9df488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56168aeaf818 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56168aeaf890 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56168aeafc48 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56168aeafb88 parent 0x56168a9df488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56168aeafa78 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56168aeafaf0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56168aeb1360 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168aeb1448 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aebcbf8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56168aebcbb0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56168aeae178
| |     `-DeclRefExpr 0x56168aebcb90 <col:7> 'const Timestamp' lvalue ParmVar 0x56168aeb1448 '' 'const Timestamp &'
| `-CompoundStmt 0x56168aebcc58 <col:7>
|-CXXConstructorDecl 0x56168aeb15c8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56168aeb16d8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56168aeae178 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56168aebcef8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56168aebcea0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56168aeae178
| |     `-CXXStaticCastExpr 0x56168aebce70 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56168aebce40 <col:7> 'Timestamp' lvalue ParmVar 0x56168aeb16d8 '' 'Timestamp &&'
| `-CompoundStmt 0x56168aebcf58 <col:7>
|-CXXDestructorDecl 0x56168aeb1788 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56168af01040 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56168af01148 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56168af01c38 <col:7>
|   |-CXXMemberCallExpr 0x56168af01bd8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56168af01b18 <col:7> '<bound member function type>' .operator= 0x56168af011e8
|   | | `-MemberExpr 0x56168af01a28 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56168aeae178
|   | |   `-CXXThisExpr 0x56168af01a18 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56168af01ae8 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56168aeae178
|   |   `-DeclRefExpr 0x56168af01ac8 <col:7> 'const Timestamp' lvalue ParmVar 0x56168af01148 '' 'const Timestamp &'
|   `-ReturnStmt 0x56168af01c28 <col:7>
|     `-UnaryOperator 0x56168af01c10 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56168af01c00 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56168af014e8 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56168af015f8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x56168b0201f8 <col:7>
    |-CXXMemberCallExpr 0x56168b020198 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x56168b020100 <col:7> '<bound member function type>' .operator= 0x56168af01368
    | | `-MemberExpr 0x56168b01ffd0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56168aeae178
    | |   `-CXXThisExpr 0x56168b01ffc0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x56168b0200d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56168aeae178
    |   `-CXXStaticCastExpr 0x56168b0200a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x56168b020070 <col:7> 'Timestamp' lvalue ParmVar 0x56168af015f8 '' 'Timestamp &&'
    `-ReturnStmt 0x56168b0201e8 <col:7>
      `-UnaryOperator 0x56168b0201d0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56168b0201c0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b030258 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x56168b03a500 prev 0x56168b030258 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b03b700 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x56168b03b6b0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x56168b03b690 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x56168b03b540 'type'
|     `-SubstTemplateTypeParmType 0x56168b03b360 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168b03aeb0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x56168b03adc8 'sized_array_memory'
|-FieldDecl 0x56168b03f330 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x56168b03f380 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b03f3b8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|     `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b03f478 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x56168b03f440 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|       `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b03f508 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56168b03f4d0 'const TimerSet::heap_element &'
|   `-QualType 0x56168b03a591 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|         `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b03f598 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x56168b03f560 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|       `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b03f658 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x56168b03f620 'const TimerSet::heap_element *'
|   `-QualType 0x56168b03a591 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|         `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b0402b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x56168b040260 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x56168b040240 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x56168b040178 'type'
|     `-LValueReferenceType 0x56168b040140 'const TimerSet::heap_element &'
|       `-QualType 0x56168b03fee1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x56168b03fee0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x56168acf3140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168acf30e8 'T'
|           `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|             `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b040318 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x56168b03f4d0 'const TimerSet::heap_element &'
|   `-QualType 0x56168b03a591 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|         `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b040370 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b0403d8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x56168b03f560 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|       `-CXXRecord 0x56168b02f3d0 'heap_element'
|-TypedefDecl 0x56168b040440 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x56168b03f620 'const TimerSet::heap_element *'
|   `-QualType 0x56168b03a591 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x56168b03a590 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b02f460 'TimerSet::heap_element'
|         `-CXXRecord 0x56168b02f3d0 'heap_element'
|-EnumDecl 0x56168b040498 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b040590 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b040570 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b040618 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b0408a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0406d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b040770 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x56168b040b68 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56168b040a50 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x56168b040e28 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56168b040d10 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56168b041170 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56168b041050 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x56168b041480 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x56168b041360 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x56168b041770 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0415b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b041630 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56168b0418c8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56168b0419a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b041a00 <col:30> Inherited
|-CXXMethodDecl 0x56168b041a48 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x56168b041af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b041b50 <col:30> Inherited
|-CXXMethodDecl 0x56168b041c18 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56168b041cc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b041d20 <col:30> Inherited
|-CXXMethodDecl 0x56168b041d68 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56168b041e18 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b041e70 <col:30> Inherited
|-CXXMethodDecl 0x56168b041eb8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56168b041f68 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b041fc0 <col:30> Inherited
|-CXXMethodDecl 0x56168b042008 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x56168b0420b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b042110 <col:30> Inherited
|-CXXMethodDecl 0x56168b042138 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0421e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b042298 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56168b042458 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b042348 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b0423c0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56168b0425c0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b042530 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b042768 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x56168b042678 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b042820 <col:20>
| `-OptimizeNoneAttr 0x56168b042878 <col:30>
|-CXXMethodDecl 0x56168b042998 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b0428a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b042a50 <col:20>
| `-OptimizeNoneAttr 0x56168b042aa8 <col:30>
|-CXXMethodDecl 0x56168b042b60 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b042ad0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b042ca8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b042c18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b042dd8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56168b042f08 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56168b042fd8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x56168b0430a8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x56168b0431e8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b043158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b043330 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b0432a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b043478 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b0433e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b043530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b043630 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b0435a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b0436e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b0437a8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x56168b0438a8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x56168b043a58 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b043968 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x56168b044218 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b043b10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x56168b044178 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x56168b044078 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x56168b0442f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b044448 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0443b8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56168b044500 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b044748 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b0445c0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56168b044638 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x56168b044908 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x56168b044818 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56168b044b58 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x56168b0449d0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x56168b044a48 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x56168b044c18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b044e78 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x56168b044d80 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x56168b044f48 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b044f48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b045090 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x56168b045298 prev 0x56168b045090 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b0463e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56168b046390 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x56168b046370 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x56168b046220 'type'
|     `-SubstTemplateTypeParmType 0x56168b046040 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168b045b90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56168b045aa8 'sized_array_memory'
|-FieldDecl 0x56168b04a010 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56168b04a060 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b04a098 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-PointerType 0x56168af7f2b0 'Timer *'
|     `-RecordType 0x56168af7e400 'Timer'
|       `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04a158 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x56168b04a120 'Timer *&'
|   `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168af7f2b0 'Timer *'
|       `-RecordType 0x56168af7e400 'Timer'
|         `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04a218 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x56168b04a1e0 'Timer *const &'
|   `-QualType 0x56168b045331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af7f2b0 'Timer *'
|         `-RecordType 0x56168af7e400 'Timer'
|           `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04a2d8 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x56168b04a2a0 'Timer **'
|   `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168af7f2b0 'Timer *'
|       `-RecordType 0x56168af7e400 'Timer'
|         `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04a398 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x56168b04a360 'Timer *const *'
|   `-QualType 0x56168b045331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af7f2b0 'Timer *'
|         `-RecordType 0x56168af7e400 'Timer'
|           `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04afa0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x56168b04af50 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x56168b04af30 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x56168b04aec0 'type'
|     `-SubstTemplateTypeParmType 0x56168b04ac80 'Timer *' sugar
|       |-TemplateTypeParmType 0x56168acf3870 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168acf3820 'T'
|       `-PointerType 0x56168af7f2b0 'Timer *'
|         `-RecordType 0x56168af7e400 'Timer'
|           `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04b008 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x56168b04a1e0 'Timer *const &'
|   `-QualType 0x56168b045331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af7f2b0 'Timer *'
|         `-RecordType 0x56168af7e400 'Timer'
|           `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04b060 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b04b0c8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x56168b04a2a0 'Timer **'
|   `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-PointerType 0x56168af7f2b0 'Timer *'
|       `-RecordType 0x56168af7e400 'Timer'
|         `-CXXRecord 0x56168b019a78 'Timer'
|-TypedefDecl 0x56168b04b130 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x56168b04a360 'Timer *const *'
|   `-QualType 0x56168b045331 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x56168b045330 'Timer *' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-PointerType 0x56168af7f2b0 'Timer *'
|         `-RecordType 0x56168af7e400 'Timer'
|           `-CXXRecord 0x56168b019a78 'Timer'
|-EnumDecl 0x56168b04b188 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b04b280 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b04b260 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b04b308 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b04b598 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b04b3c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b04b460 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x56168b04b858 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56168b04b740 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x56168b04bb18 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56168b04ba00 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56168b04be60 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56168b04bd40 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x56168b04c170 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x56168b04c050 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x56168b04c460 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b04c2a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b04c320 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56168b04c5b8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56168b04c698 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b04c6f0 <col:30> Inherited
|-CXXMethodDecl 0x56168b04c738 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x56168b04c7e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b04c840 <col:30> Inherited
|-CXXMethodDecl 0x56168b04c908 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56168b04c9b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b04ca10 <col:30> Inherited
|-CXXMethodDecl 0x56168b04ca58 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56168b04cb08 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b04cb60 <col:30> Inherited
|-CXXMethodDecl 0x56168b04cba8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56168b04cc58 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b04ccb0 <col:30> Inherited
|-CXXMethodDecl 0x56168b04ccf8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x56168b04cda8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b04ce00 <col:30> Inherited
|-CXXMethodDecl 0x56168b04ce28 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b04ced8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b04cf88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b04d148 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b04d038 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b04d0b0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56168b04d298 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b04d208 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b04d448 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x56168b04d350 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b04d500 <col:20>
| `-OptimizeNoneAttr 0x56168b04d558 <col:30>
|-CXXMethodDecl 0x56168b04d678 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b04d580 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b04d730 <col:20>
| `-OptimizeNoneAttr 0x56168b04d788 <col:30>
|-CXXMethodDecl 0x56168b04d840 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b04d7b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b04d988 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b04d8f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b04dab8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x56168b04dbe8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x56168b04dcb8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x56168b04dd88 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x56168b04dec8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b04de38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b04e010 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b04df80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b04e158 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b04e0c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b04e210 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b04e310 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b04e280 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b04e3c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b04e488 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x56168b04e588 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x56168b04e708 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b04e648 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x56168b04eec8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b04e7c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x56168b04ee28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x56168b04ed28 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x56168b04efa8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b04f0f8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b04f068 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56168b04f1b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b04f3f8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b04f270 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56168b04f2e8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x56168b04f5b8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x56168b04f4c8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56168b04f808 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x56168b04f680 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x56168b04f6f8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x56168b04f8c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b04fb28 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x56168b04fa30 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x56168b04fbf8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b04fbf8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b015bc0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168b015cd8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x56168b015d68 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x56168b015df0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x56168b015ee0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56168b015fe0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x56168b0160a0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x56168b016160 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x56168b016288 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56168b016288
| `-ParmVarDecl 0x56168b016398 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x56168b0509a8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x56168b0509a8
  `-ParmVarDecl 0x56168b050ab8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b02e550 prev 0x56168b01dc88 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x56168b02e648 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x56168b02e6d8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56168b02e760 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x56168b02e858 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x56168b050e20 <col:43, col:67>
|   `-ReturnStmt 0x56168b050e10 <col:45, col:52>
|     `-CXXConstructExpr 0x56168b050de0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x56168b050db0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x56168b030040
|         `-CXXThisExpr 0x56168b050da0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56168b02e918 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x56168b02eb20 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x56168b02e9c8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x56168b02ea40 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x56168b02ec18 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x56168b02ece0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56168b050ea0 <col:39, col:67>
|   `-ReturnStmt 0x56168b050e90 <col:41, col:48>
|     `-ImplicitCastExpr 0x56168b050e78 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56168b050e48 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x56168b030128
|         `-CXXThisExpr 0x56168b050e38 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56168b02eda8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x56168b050f20 <col:35, col:59>
|   `-ReturnStmt 0x56168b050f10 <col:37, col:44>
|     `-ImplicitCastExpr 0x56168b050ef8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56168b050ec8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x56168b030190
|         `-CXXThisExpr 0x56168b050eb8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x56168b02eef0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x56168b02ee60 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x56168b02f038 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56168b02efa8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56168b02f238 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x56168b02f0f0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x56168b02f168 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x56168b02f308 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56168b02f3a8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x56168b02f3d0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168b02f4e8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x56168b02f588 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x56168b02f5e8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x56168b02f718 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x56168b02f648 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x56168b02f588 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x56168b050ff8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x56168b050fa0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x56168b050f70 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x56168b01b0e8
|   |       `-ImplicitCastExpr 0x56168b050fc0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x56168b050f58 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x56168b050f38 <col:17> 'Timer *' lvalue ParmVar 0x56168b02f648 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x56168b02f5e8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x56168b051090 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56168b051050 <col:41> 'Timer *' lvalue ParmVar 0x56168b02f648 't_' 'Timer *'
|   `-CompoundStmt 0x56168b0510e0 <col:45, line:44:2>
|-CXXRecordDecl 0x56168b02f7e0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168b02f8f8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x56168b02fb48 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x56168b02f9c8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x56168b02fa40 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x56168b051210 <col:71, line:49:2>
|     `-ReturnStmt 0x56168b051200 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x56168b0511c8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x56168b0511b0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56168b051190 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x56168aecccd0 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x56168b051110 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x56168b02f588
|         | `-DeclRefExpr 0x56168b0510f0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x56168b02f9c8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x56168b051160 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x56168b02f588
|           `-DeclRefExpr 0x56168b051140 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x56168b02fa40 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x56168b02fc10 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168b02fd28 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x56168b02ff48 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x56168b02fdc8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x56168b02fe40 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x56168b051418 <col:63, line:54:2>
|     `-BinaryOperator 0x56168b0513f8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x56168b0512a8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x56168b01d128
|       | `-ImplicitCastExpr 0x56168b051290 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x56168b051260 <col:6, col:9> 'Timer *' lvalue ->t 0x56168b02f5e8
|       |     `-ImplicitCastExpr 0x56168b051248 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x56168b051228 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x56168b02fe40 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x56168b0513e0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x56168b0513c0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x56168b051368 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x56168b051348 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x56168b051318 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56168b0512d8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x56168b02fe40 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x56168b051330 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x56168b0512f8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x56168b02fdc8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x56168b0513a8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x56168b051388 <col:39> 'int' 1
|-FieldDecl 0x56168b030040 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x56168b0300b0 <col:44, col:53> aligned
|   `-ConstantExpr 0x56168b030090 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x56168b030010 <col:52> 'int' 8
|-FieldDecl 0x56168b030128 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x56168b030190 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x56168b0301f8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x56168b045030 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x56168b04fce0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x56168b04fd40 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x56168b04fda0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x56168b04fe00 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168b04fef0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x56168b04fe60 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x56168b04ffb8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x56168b051870 <col:29, line:81:5>
|   `-IfStmt 0x56168b051848 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x56168b051500 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x56168b0514a0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x56168b051470 <col:6, col:18> '<bound member function type>' .size 0x56168b042138
|     |     `-ImplicitCastExpr 0x56168b0514e8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x56168b051440 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56168b045030
|     |         `-CXXThisExpr 0x56168b051430 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x56168b0516f0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x56168b0516d8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x56168b0516b8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x56168af01040 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x56168b051528 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56168b030040
|     | | `-CXXThisExpr 0x56168b051518 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x56168b0516a0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x56168b051670 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x56168b02f588
|     |     `-CXXMemberCallExpr 0x56168b051648 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x56168b051618 <col:22, col:34> '<bound member function type>' .unchecked_at 0x56168b0431e8
|     |       | `-MemberExpr 0x56168b051568 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x56168b045030
|     |       |   `-CXXThisExpr 0x56168b051558 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x56168b0515f8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x56168b051830 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x56168b0517f8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x56168b0517e0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56168b0517c0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56168af014e8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x56168b051738 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x56168b030040
|         | `-CXXThisExpr 0x56168b051728 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x56168b0517a8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56168b051778 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56168b0500f8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x56168b050068 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x56168b0501c0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x56168b050280 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x56168b050340 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x56168b050430 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x56168b050498 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x56168b050498
| `-ParmVarDecl 0x56168b0505a8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x56168b050648 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x56168b050648
| `-ParmVarDecl 0x56168b050758 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x56168b0507f8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x56168b0507f8
| `-ParmVarDecl 0x56168b050908 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x56168b050b28 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x56168b050b28
| `-ParmVarDecl 0x56168b050c38 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x56168b050cc0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x56168b050cc0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b07a978 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x56168b07ab88 prev 0x56168b07a978 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b07bc60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x56168b07bc10 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x56168b07bbf0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x56168b07baa0 'type'
|     `-SubstTemplateTypeParmType 0x56168b046040 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168b045b90 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x56168b045aa8 'sized_array_memory'
|-FieldDecl 0x56168b07bd60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x56168b07bdb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b07bde8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-RecordType 0x56168b078a30 'pollfd'
|     `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07bea8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x56168b07be70 'pollfd &'
|   `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b078a30 'pollfd'
|       `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07bf68 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x56168b07bf30 'const pollfd &'
|   `-QualType 0x56168b07ac21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b078a30 'pollfd'
|         `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07bff8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x56168b07bfc0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b078a30 'pollfd'
|       `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07c0b8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x56168b07c080 'const pollfd *'
|   `-QualType 0x56168b07ac21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b078a30 'pollfd'
|         `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07cc90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x56168b07cc40 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x56168b07cc20 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x56168b07cbb0 'type'
|     `-SubstTemplateTypeParmType 0x56168b07c970 'pollfd' sugar
|       |-TemplateTypeParmType 0x56168acf3870 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168acf3820 'T'
|       `-RecordType 0x56168b078a30 'pollfd'
|         `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07ccf8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x56168b07bf30 'const pollfd &'
|   `-QualType 0x56168b07ac21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b078a30 'pollfd'
|         `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07cd50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b07cdb8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x56168b07bfc0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b078a30 'pollfd'
|       `-CXXRecord 0x56168b0789a0 'pollfd'
|-TypedefDecl 0x56168b07ce20 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x56168b07c080 'const pollfd *'
|   `-QualType 0x56168b07ac21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x56168b07ac20 'pollfd' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b078a30 'pollfd'
|         `-CXXRecord 0x56168b0789a0 'pollfd'
|-EnumDecl 0x56168b07ce78 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b07cf70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b07cf50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b07cff8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b07d288 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b07d0b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b07d150 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x56168b07d548 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56168b07d430 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x56168b07d808 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56168b07d6f0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56168b07db50 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56168b07da30 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x56168b07de60 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x56168b07dd40 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x56168b07e150 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b07df98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b07e010 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56168b07e2a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56168b07e388 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b07e3e0 <col:30> Inherited
|-CXXMethodDecl 0x56168b07e428 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x56168b07e4d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b07e530 <col:30> Inherited
|-CXXMethodDecl 0x56168b07e5f8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56168b07e6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b07e700 <col:30> Inherited
|-CXXMethodDecl 0x56168b07e748 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56168b07e7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b07e850 <col:30> Inherited
|-CXXMethodDecl 0x56168b07e898 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56168b07e948 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b07e9a0 <col:30> Inherited
|-CXXMethodDecl 0x56168b07e9e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x56168b07ea98 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b07eaf0 <col:30> Inherited
|-CXXMethodDecl 0x56168b07eb18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b07ebc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b07ec78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b07ee38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b07ed28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b07eda0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56168b07ef88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b07eef8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b07f138 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x56168b07f040 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b07f1f0 <col:20>
| `-OptimizeNoneAttr 0x56168b07f248 <col:30>
|-CXXMethodDecl 0x56168b07f3f0 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b07f270 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b07f4a8 <col:20>
| `-OptimizeNoneAttr 0x56168b07f500 <col:30>
|-CXXMethodDecl 0x56168b07f5b8 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b07f528 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b07f700 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b07f670 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b07f838 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x56168b07f968 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x56168b07fa38 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x56168b07fb08 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x56168b07fc48 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b07fbb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b07fd90 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b07fd00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b07fed8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b07fe48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b07ff90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b080090 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b080000 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b080148 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b080208 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x56168b080308 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x56168b0804b8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b0803c8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x56168b080c78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b080570 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x56168b080bd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x56168b080ad8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x56168b080d58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b080ea8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b080e18 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56168b080f60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b0811a8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b081020 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56168b081098 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x56168b081368 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x56168b081278 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56168b0815b8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x56168b081430 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x56168b0814a8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x56168b081678 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0818d8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x56168b0817e0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x56168b0819a8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b0819a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b082e90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x56168b083068 prev 0x56168b082e90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56168b0830f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56168b083120 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b084cf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x56168b084ca0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x56168b0835d0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x56168b0834d0 'type'
|     `-TemplateSpecializationType 0x56168b083460 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x56168b083340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x56168b083320 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x56168b083300 <col:24> 'unsigned long' 24
|       `-RecordType 0x56168b083440 'char_array<24>'
|         `-ClassTemplateSpecialization 0x56168b083360 'char_array'
|-TypedefDecl 0x56168b084da8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x56168b084d70 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x56168b084d50 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x56168b084cf0 'type'
|     `-ElaboratedType 0x56168b084ca0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x56168b0835d0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x56168b0834d0 'type'
|         `-TemplateSpecializationType 0x56168b083460 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x56168b083340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x56168b083320 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x56168b083300 <col:24> 'unsigned long' 24
|           `-RecordType 0x56168b083440 'char_array<24>'
|             `-ClassTemplateSpecialization 0x56168b083360 'char_array'
|-CXXMethodDecl 0x56168b084f28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x56168b084e38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x56168b085018 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56168b0850f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56168b0850f8
|-CXXMethodDecl 0x56168b0853c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56168b0852d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x56168b085608 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56168b085480 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b0854f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b0857d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56168b0856c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b085740 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b085938 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56168b085a08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x56168b085c58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56168b085ac8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56168b085b40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b085eb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x56168b085d28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x56168b085da0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b086078 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56168b085f88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b086238 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x56168b086140 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b0862f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b0863a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b0865d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x56168b086450 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56168b0864c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x56168b086878 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x56168b086780 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x56168b086940 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x56168b086990 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56168b0869e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b081af0 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x56168b081cf8 prev 0x56168b081af0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56168b082e00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x56168b082db0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x56168b082d90 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x56168b082c40 'type'
|     `-SubstTemplateTypeParmType 0x56168b082a60 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x56168ace9d30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168ace9cd8 'T'
|       `-RecordType 0x56168afffbf0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x56168afffb08 'sized_array_memory'
|-FieldDecl 0x56168b086a30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x56168b086a80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56168b086ab8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56168af21b98 'T'
|   `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b086b78 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56168b086b40 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b086c38 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56168b086c00 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56168b081d91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b086cc8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x56168b086c90 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b086d88 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56168b086d50 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56168b081d91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b087a00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x56168b0879b0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x56168b087990 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x56168b0878c8 'type'
|     `-LValueReferenceType 0x56168b087890 'const SelectSet::SelectorInfo &'
|       `-QualType 0x56168b087631 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x56168b087630 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x56168acf3140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56168acf30e8 'T'
|           `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b087a68 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x56168b086c00 'const SelectSet::SelectorInfo &'
|   `-QualType 0x56168b081d91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b087ac0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-TypedefDecl 0x56168b087b28 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x56168b086c90 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56168af21b98 'T'
|     `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-TypedefDecl 0x56168b087b90 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x56168b086d50 'const SelectSet::SelectorInfo *'
|   `-QualType 0x56168b081d91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x56168b081d90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x56168af21bf0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56168af21b98 'T'
|       `-RecordType 0x56168b07a4e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x56168b07a450 'SelectorInfo'
|-EnumDecl 0x56168b087be8 <line:134:5> col:5
| `-EnumConstantDecl 0x56168b087ce0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56168b087cc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56168af22c28 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56168af22c00 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56168af22be0 <col:40> 'int' 1
|-CXXConstructorDecl 0x56168b087d68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56168b087ff8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b087e20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b087ec0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x56168b0882b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56168b0881a0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x56168b088578 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56168b088460 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56168b0888c0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56168b0887a0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x56168b088bd0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x56168b088ab0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x56168b088ec0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b088d08 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b088d80 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56168b089018 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56168b0890f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b089150 <col:30> Inherited
|-CXXMethodDecl 0x56168b089198 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x56168b089248 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0892a0 <col:30> Inherited
|-CXXMethodDecl 0x56168b089368 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56168b089418 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b089470 <col:30> Inherited
|-CXXMethodDecl 0x56168b0894b8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56168b089568 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b0895c0 <col:30> Inherited
|-CXXMethodDecl 0x56168b089608 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56168b0896b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b089710 <col:30> Inherited
|-CXXMethodDecl 0x56168b089758 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x56168b089808 <col:20> Inherited
| `-OptimizeNoneAttr 0x56168b089860 <col:30> Inherited
|-CXXMethodDecl 0x56168b089888 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b089938 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56168b0899e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56168b089ba8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b089a98 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56168b089b10 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56168b089cf8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56168b089c68 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b089ea8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x56168b089db0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b089f60 <col:20>
| `-OptimizeNoneAttr 0x56168b089fb8 <col:30>
|-CXXMethodDecl 0x56168b08a0d8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x56168b089fe0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56168b08a190 <col:20>
| `-OptimizeNoneAttr 0x56168b08a1e8 <col:30>
|-CXXMethodDecl 0x56168b08a2a0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b08a210 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b08a3e8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b08a358 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b08a518 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56168b08a648 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56168b08a718 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x56168b08a7e8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x56168b08a928 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x56168b08a898 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b08aa70 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56168b08a9e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56168b08abb8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x56168b08ab28 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b08ac70 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56168b08ad70 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56168b08ace0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56168b08ae28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56168b08aee8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x56168b08afe8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x56168b08b198 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b08b0a8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x56168b08b958 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56168b08b250 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x56168b08b8b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x56168b08b7b8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x56168b08ba38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56168b08bb88 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x56168b08baf8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56168b08bc40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56168b08be88 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x56168b08bd00 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56168b08bd78 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x56168b08c048 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x56168b08bf58 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56168b08c298 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x56168b08c110 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x56168b08c188 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x56168b08c358 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56168b08c5b8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x56168b08c4c0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x56168b08c688 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56168b08c688

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b079630 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168b079748 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x56168b0797d8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x56168b079860 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x56168b079950 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x56168b079950
|-CXXMethodDecl 0x56168b079a50 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x56168b079cf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56168b079b08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x56168b079b80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x56168b079c00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x56168b079f60 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x56168b079dc0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x56168b079e38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x56168b079eb8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x56168b07a0b8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x56168b07a028 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x56168b07a180 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x56168b08dd38 <col:34, line:50:5>
|   |-BinaryOperator 0x56168b08d708 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x56168b08d6c8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x56168b07a908
|   | | `-CXXThisExpr 0x56168b08d6b8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x56168b08d6f8 <col:23> 'bool' true
|   `-CallExpr 0x56168b08dd10 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x56168b08dcf8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56168b08dc78 <col:2> 'void (long)' lvalue Function 0x56168b08db78 'ignore_result' 'void (long)' (FunctionTemplate 0x56168abfc1a8 'ignore_result')
|     `-CallExpr 0x56168b08d920 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x56168b08d908 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168b08d888 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x56168b0562f8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x56168b08d958 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x56168b08d830 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x56168b08d818 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x56168b08d7c8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x56168b07a8a8
|       |   |   `-CXXThisExpr 0x56168b08d7b8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x56168b08d7f8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x56168b08d988 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x56168b08d970 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x56168b08d850 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x56168b08d9a0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56168b08d868 <col:41> 'int' 1
|-CXXMethodDecl 0x56168b07a2c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56168b07a230 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56168b07a388 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x56168b07a428 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x56168b07a450 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168b07a568 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x56168b07a608 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x56168b07a668 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x56168b07a6d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x56168b07a780 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x56168b07a608 'read' 'Element *'
|   | `-ImplicitCastExpr 0x56168b08dd98 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56168b08dd58 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x56168b07a668 'write' 'Element *'
|   | `-ImplicitCastExpr 0x56168b08de18 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x56168b08ddd8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x56168b07a6d0 'pollfd' 'int'
|   | `-UnaryOperator 0x56168b08de78 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x56168b08de58 <col:35> 'int' 1
|   `-CompoundStmt 0x56168b08def0 <line:64:2, line:65:2>
|-FieldDecl 0x56168b07a8a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x56168b07a908 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x56168b081a90 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x56168b08c770 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x56168b08c9a8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x56168b08c7d8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x56168b08c850 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x56168b08c8c8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x56168b08cb90 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x56168b08ca78 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x56168b08caf8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x56168b08cdd8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x56168b08cc58 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x56168b08ccd8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x56168b08cfe8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x56168b08ce98 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x56168b08cf10 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x56168b08d138 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x56168b08d0a8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x56168b08d200 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x56168b08d2c0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x56168b08d388 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x56168b08d388
| `-ParmVarDecl 0x56168b08d498 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x56168b08d538 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x56168b08d538
  `-ParmVarDecl 0x56168b08d648 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b014b28 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168b014c48 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x56168b014cd8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x56168b014d60 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x56168b014e50 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x56168b014f50 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x56168b015010 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x56168b0150d0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x56168b0151b8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x56168b0152d8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x56168b0152d8
| `-ParmVarDecl 0x56168b0153e8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x56168b0946e8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x56168b0946e8
  `-ParmVarDecl 0x56168b0947f8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b02c4f8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168b02c618 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x56168b02c6b8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x56168b02c718 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x56168b093ce8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56168b093ce8
| `-ParmVarDecl 0x56168b093df8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x56168b093e98 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56168b093e98
| `-ParmVarDecl 0x56168b093fa8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x56168b094018 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56168b094018
|-CXXMethodDecl 0x56168b094898 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56168b094898
| `-ParmVarDecl 0x56168b0949a8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x56168b094a18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56168b094a18
| `-ParmVarDecl 0x56168b094b28 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x56168b09cfc8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x56168b09d0a0 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b016a20 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56168b016b38 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x56168b016bc8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x56168b016c50 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x56168b016d10 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x56168a9df580 'int'
|-CXXMethodDecl 0x56168b016dd8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x56168b016e78 <col:45> always_inline
|-CXXMethodDecl 0x56168b016fa8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x56168b016ee0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x56168b017050 <col:49> always_inline
|-CXXConstructorDecl 0x56168b017148 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56168b017148
| `-ParmVarDecl 0x56168b017258 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x56168b0172f8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56168b0172f8
| `-ParmVarDecl 0x56168b017408 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x56168b094100 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x56168b094100
|-CXXMethodDecl 0x56168b094bc8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x56168b094bc8
| `-ParmVarDecl 0x56168b094cd8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x56168b094d48 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x56168b094d48
  `-ParmVarDecl 0x56168b094e58 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b08e360 prev 0x56168b0795a0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x56168b08e458 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x56168b08e4e8 <col:22, col:28> col:22 public
|-EnumDecl 0x56168b08e510 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x56168b08e628 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x56168b08e608 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x56168b08e5f0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x56168b08e5d0 <col:32> 'int' 1
| `-EnumConstantDecl 0x56168b08e6d0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x56168b08e6b0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x56168b08e698 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x56168b08e678 <col:53> 'int' 1000
|-CXXMethodDecl 0x56168b08e770 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x56168b08e830 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56168b08e918 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x56168b094f18 <col:34, col:52>
|   `-ReturnStmt 0x56168b094f08 <col:36, col:43>
|     `-MemberExpr 0x56168b094ed8 <col:43> 'TimerSet' lvalue ->_timers 0x56168b0921e8
|       `-CXXThisExpr 0x56168b094ec8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56168b08ea08 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x56168b094f80 <col:46, col:64>
|   `-ReturnStmt 0x56168b094f70 <col:48, col:55>
|     `-MemberExpr 0x56168b094f40 <col:55> 'const TimerSet' lvalue ->_timers 0x56168b0921e8
|       `-CXXThisExpr 0x56168b094f30 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56168b08eaf8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x56168b094fe8 <col:36, col:55>
|   `-ReturnStmt 0x56168b094fd8 <col:38, col:45>
|     `-MemberExpr 0x56168b094fa8 <col:45> 'SelectSet' lvalue ->_selects 0x56168b092248
|       `-CXXThisExpr 0x56168b094f98 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x56168b08ebe8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x56168b095050 <col:48, col:67>
|   `-ReturnStmt 0x56168b095040 <col:50, col:57>
|     `-MemberExpr 0x56168b095010 <col:57> 'const SelectSet' lvalue ->_selects 0x56168b092248
|       `-CXXThisExpr 0x56168b095000 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56168b08eca8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x56168b08ed98 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x56168b08ef08 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x56168b08ee48 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x56168b08efd0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x56168b091020 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x56168b08f080 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x56168b08f300 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x56168b0910f0 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x56168b0911b0 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x56168b091270 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x56168b0913b0 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x56168b091320 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x56168b091478 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x56168b091538 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x56168b0915f8 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x56168b0916b8 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x56168b0917f8 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x56168b091768 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x56168b0918c0 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x56168b091980 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x56168b091a20 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x56168b091ae0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091b30 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091b80 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091bd0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091c20 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091c70 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091cc0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091d10 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091d60 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x56168b091db0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x56168b091e00 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x56168b091ef8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x56168b091e68 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x56168b092048 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x56168b091fb8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x56168b0920f0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x56168b092128 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x56168b092188 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x56168b0921e8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x56168b092248 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x56168b0922c8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x56168b092338 <col:40, col:50> aligned
|   `-ConstantExpr 0x56168b092318 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x56168b092298 <col:48> 'int' 64
|-FieldDecl 0x56168b0923a8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x56168b092408 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x56168b092500 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x56168b092610 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x56168b092670 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x56168b0926f0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x56168b092760 <col:36, col:46> aligned
|   `-ConstantExpr 0x56168b092740 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x56168b0926c0 <col:44> 'int' 64
|-FieldDecl 0x56168b0927d8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x56168b092838 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x56168b092888 <line:170:3, col:9> col:3 public
|-FieldDecl 0x56168b0928c8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x56168b092930 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x56168b092980 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x56168b092b28 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x56168b0929b8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x56168b092a38 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x56168b092c28 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x56168b092c28
|-CXXMethodDecl 0x56168b092d30 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x56168b092df8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x56168b095148 <col:34, line:217:5>
|   `-ReturnStmt 0x56168b095138 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x56168b095120 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56168b0950f0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x56168b0295d0
|         `-ImplicitCastExpr 0x56168b0950d8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x56168b0950a8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x56168b029568
|             `-MemberExpr 0x56168b095078 <col:16> 'const TaskLink' lvalue ->_task_link 0x56168b092128
|               `-CXXThisExpr 0x56168b095068 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x56168b092eb8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x56168b092f78 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x56168b095870 <col:39, line:226:5>
|   |-DeclStmt 0x56168b095398 <line:223:9, col:68>
|   | `-VarDecl 0x56168b095170 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x56168b095350 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x56168b095320 <col:24, col:38> '<bound member function type>' .compare_swap 0x56168ac08510
|   |     | `-MemberExpr 0x56168b0951e8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x56168b0923a8
|   |     |   `-CXXThisExpr 0x56168b0951d8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x56168b0952d8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x56168b0952c0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x56168b095298 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x56168b095278 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x56168b095380 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x56168b095300 <col:66> 'int' 0
|   |-CStyleCastExpr 0x56168b0953e0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56168b0953b0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x56168b095170 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x56168b095850 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x56168b095820 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x56168b0954f8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x56168b0954c8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x56168b0954b0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x56168b095408 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x56168b095170 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x56168b095488 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x56168b095470 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x56168b095448 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x56168b095428 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x56168b095558 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x56168b095538 <col:60> 'int' 0
|       `-CallExpr 0x56168b095780 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x56168b095768 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56168b095748 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56168aa7e100 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x56168b0957c0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56168b095648 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x56168b0957d8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x56168b095678 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x56168b0957f0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x56168b0956b8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x56168b095808 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x56168b095730 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x56168b095718 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x56168b0956d8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x56168b0930c0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x56168b093030 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x56168b093188 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x56168b093248 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x56168b093308 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x56168b0933c8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x56168b093488 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x56168b093580 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x56168b0935e0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x56168b093670 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x56168b093a38 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x56168b093a38
| `-ParmVarDecl 0x56168b093b48 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x56168b094208 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x56168b094208
  `-ParmVarDecl 0x56168b094318 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b0298e0 prev 0x56168af7e2c0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x56168b029a18 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x56168b029aa8 <col:33, col:39> col:33 public
|-EnumDecl 0x56168b029ad0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x56168b029c10 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x56168b029bf0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x56168b029bd0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x56168b029b90 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x56168b029bb0 <col:26> 'int' 16
| `-EnumConstantDecl 0x56168b029ce0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x56168b029cc0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x56168b029ca0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x56168b029c60 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x56168b029c80 <col:47> 'int' 31
|-EnumDecl 0x56168b029d30 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x56168b029e70 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x56168b029f90 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56168b029e50 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x56168b029e30 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x56168b029df0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x56168b029e10 <col:29> 'int' 15
| `-EnumConstantDecl 0x56168b029f40 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x56168b029fa8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168b029f20 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x56168b029f00 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x56168b029ec0 <col:51> 'int' 1
|         `-IntegerLiteral 0x56168b029ee0 <col:54> 'int' 10
|-CXXConstructorDecl 0x56168b02a178 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x56168b029fd0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x56168b02a050 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x56168b02a2d0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x56168b02a240 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x56168b02a3c8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x56168b02a3c8
|-CXXMethodDecl 0x56168b02a558 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x56168b02d658 <col:42, line:100:5>
|   `-ReturnStmt 0x56168b02d648 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x56168b02d630 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x56168b02d600 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x56168b02c380
|         `-CXXThisExpr 0x56168b02d5f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56168b02a620 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x56168b02d6d8 <col:36, line:105:5>
|   `-ReturnStmt 0x56168b02d6c8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x56168b02d6b0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56168b02d680 <col:16> 'void *const' lvalue ->_thunk 0x56168b02c3e8
|         `-CXXThisExpr 0x56168b02d670 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56168b02a6e0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x56168b02d758 <col:37, line:110:5>
|   `-ReturnStmt 0x56168b02d748 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x56168b02d730 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56168b02d700 <col:16> 'Element *const' lvalue ->_owner 0x56168b02c4a8
|         `-CXXThisExpr 0x56168b02d6f0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56168b02a7a0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x56168b02a868 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x56168b02a928 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x56168b02a9e8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x56168b02d840 <col:35, line:137:5>
|   `-ReturnStmt 0x56168b02d830 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x56168b02d7f8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x56168b02d7c8 <col:16, col:24> '<bound member function type>' ->router 0x56168afa1710
|         `-ImplicitCastExpr 0x56168b02d818 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56168b02d7b0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56168b02d780 <col:16> 'Element *const' lvalue ->_owner 0x56168b02c4a8
|               `-CXXThisExpr 0x56168b02d770 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56168b02aaa8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x56168b02ac68 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56168b02ab58 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56168b02abd0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56168b02ae78 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x56168b02ad28 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x56168b02ada0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x56168b02af48 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x56168b02d950 <col:35, line:181:5>
|   `-ReturnStmt 0x56168b02d940 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x56168b02d928 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x56168b02d910 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x56168b02d8e0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x56168b02bfb8
|           `-MemberExpr 0x56168b02d898 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|             `-MemberExpr 0x56168b02d868 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x56168b02c308
|               `-CXXThisExpr 0x56168b02d858 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x56168b02b008 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x56168b02da68 <col:30, line:192:5>
|   `-BinaryOperator 0x56168b02da48 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56168b02d9f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56168b02bfb8
|     | `-MemberExpr 0x56168b02d9a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|     |   `-MemberExpr 0x56168b02d978 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56168b02c308
|     |     `-CXXThisExpr 0x56168b02d968 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56168b02da30 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56168b02da20 <col:32> 'bool' false
|-CXXMethodDecl 0x56168b02b0c8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x56168b02ddb8 <col:30, line:206:5>
|   |-BinaryOperator 0x56168b02db60 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56168b02db08 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56168b02bfb8
|   | | `-MemberExpr 0x56168b02dac0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|   | |   `-MemberExpr 0x56168b02da90 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56168b02c308
|   | |     `-CXXThisExpr 0x56168b02da80 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56168b02db48 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56168b02db38 <col:32> 'bool' true
|   |-CallExpr 0x56168b02dc00 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x56168b02dbe8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56168b02dbc8 <col:9> 'void ()' lvalue Function 0x56168b0146e0 'click_fence' 'void ()'
|   `-IfStmt 0x56168b02dda0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x56168b02dce0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x56168b02dcb0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x56168b02dc60 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x56168b02c718
|     | |   `-MemberExpr 0x56168b02dc30 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x56168b02c790
|     | |     `-CXXThisExpr 0x56168b02dc20 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x56168b02dcc8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x56168b02dc90 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x56168b02dd60 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x56168b02dd10 <col:13> '<bound member function type>' ->complete_schedule 0x56168b02d190
|       | `-CXXThisExpr 0x56168b02dd00 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x56168b02dd88 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x56168b02dd40 <col:31> 'int' 0
|-CXXMethodDecl 0x56168b02b188 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x56168b02dee0 <col:35, line:240:5>
|   `-BinaryOperator 0x56168b02dec0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56168b02de68 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56168b02bfb8
|     | `-MemberExpr 0x56168b02de20 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|     |   `-MemberExpr 0x56168b02ddf0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56168b02c308
|     |     `-CXXThisExpr 0x56168b02dde0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56168b02dea8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56168b02de98 <col:32> 'bool' true
|-CXXMethodDecl 0x56168b02b248 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x56168b02e0f8 <col:37, line:253:5>
|   |-BinaryOperator 0x56168b02dfd8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56168b02df80 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x56168b02bfb8
|   | | `-MemberExpr 0x56168b02df38 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|   | |   `-MemberExpr 0x56168b02df08 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56168b02c308
|   | |     `-CXXThisExpr 0x56168b02def8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56168b02dfc0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56168b02dfb0 <col:32> 'bool' false
|   `-BinaryOperator 0x56168b02e0d8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x56168b02e080 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56168b02c018
|     | `-MemberExpr 0x56168b02e038 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|     |   `-MemberExpr 0x56168b02e008 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56168b02c308
|     |     `-CXXThisExpr 0x56168b02dff8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x56168b02e0c0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x56168b02e0b0 <col:41> 'bool' true
|-CXXMethodDecl 0x56168b02b308 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x56168b02e278 <col:37, line:264:5>
|   |-BinaryOperator 0x56168b02e1f8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x56168b02e1a0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x56168b02c018
|   | | `-MemberExpr 0x56168b02e158 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x56168b02c0d8
|   | |   `-MemberExpr 0x56168b02e128 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x56168b02c308
|   | |     `-CXXThisExpr 0x56168b02e118 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x56168b02e1e0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x56168b02e1d0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x56168b02e258 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x56168b02e228 <col:9> '<bound member function type>' ->reschedule 0x56168b02b0c8
|       `-CXXThisExpr 0x56168b02e218 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x56168b02b450 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x56168b02b3c0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x56168b02b520 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x56168b02b668 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x56168b02b5d8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x56168b02b7b8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x56168b02b728 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x56168b02b880 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x56168b02b940 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x56168b02b9e0 <col:53> "" ""
|-CXXMethodDecl 0x56168b02ba78 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x56168b02bb18 <col:47> "" ""
|-AccessSpecDecl 0x56168b02bb88 <line:303:3, col:10> col:3 private
|-FieldDecl 0x56168b02bbc8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x56168b02bc30 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x56168b02bc80 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56168b02bd98 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x56168b02be28 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x56168b02bf58 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x56168b02bfb8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x56168b02c018 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x56168b09c6f8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x56168b09c7d0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56168b09c7d0
| | |-CXXConstructorDecl 0x56168b09ca88 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x56168b09ca88
| | | `-ParmVarDecl 0x56168b09cb98 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x56168b09cc38 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x56168b09cc38
| |   `-ParmVarDecl 0x56168b09cd48 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x56168b02c0d8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x56168b02c138 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x56168b02c0d8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56168b02bf58 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x56168b02c190 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x56168b02c0d8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56168b02bfb8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x56168b02c1e8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x56168b02c0d8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x56168b02c018 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x56168b02c240 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x56168b09c600 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56168b09cf68 <col:11>
| |-CXXConstructorDecl 0x56168b09c8d8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x56168b09c8d8
| | `-ParmVarDecl 0x56168b09c9e8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x56168b09cde8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x56168b09cde8
|   `-ParmVarDecl 0x56168b09cef8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x56168b02c308 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x56168b02c380 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x56168b02c3e8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56168b02c448 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x56168b02c4a8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x56168b02c4f8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56168b02c618 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x56168b02c6b8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x56168b02c718 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x56168b093ce8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56168b093ce8
| | `-ParmVarDecl 0x56168b093df8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x56168b093e98 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56168b093e98
| | `-ParmVarDecl 0x56168b093fa8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x56168b094018 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x56168b094018
| |-CXXMethodDecl 0x56168b094898 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x56168b094898
| | `-ParmVarDecl 0x56168b0949a8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x56168b094a18 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x56168b094a18
| | `-ParmVarDecl 0x56168b094b28 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x56168b09cfc8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x56168b09d0a0 <col:11>
|-FieldDecl 0x56168b02c790 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x56168b02c8d8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x56168b02c818 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x56168b02ca88 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x56168b02c998 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x56168b02cb50 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x56168b02cc10 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x56168b02ccd0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x56168b02e388 <col:41, line:355:5>
|   `-ReturnStmt 0x56168b02e378 <line:354:9, col:38>
|     `-BinaryOperator 0x56168b02e358 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x56168b02e328 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x56168b02e2d8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x56168b02c718
|       |   `-MemberExpr 0x56168b02e2a8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x56168b02c790
|       |     `-CXXThisExpr 0x56168b02e298 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x56168b02e340 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x56168b02e308 <col:38> 'int' 0
|-CXXMethodDecl 0x56168b02cd90 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x56168b02ced0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x56168b02ce40 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x56168b02d048 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x56168b02cf88 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x56168b02d190 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x56168b02d100 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x56168b02d258 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x56168b02d420 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x56168b02d308 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x56168b02d388 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x56168b02d520 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x56168b02d5b0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b01d1d8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56168b01d308 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x56168b01ddf8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56168b019a78 prev 0x56168af7e370 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56168b019b70 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x56168b019c00 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x56168b019c60 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x56168b019d08 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x56168b019e28 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x56168b019fc8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x56168b019f08 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x56168b01a218 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x56168b01a088 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x56168b01a108 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x56168b01a3a8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x56168b01a2e0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x56168b01a528 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x56168b01a468 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x56168b01a6d8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x56168b01a618 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x56168b01a7d0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x56168b01dfd0 <col:21, line:58:5>
|   `-IfStmt 0x56168b01dfb8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x56168b01df20 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x56168b01def0 <col:6> '<bound member function type>' ->scheduled 0x56168b01b028
|     |   `-ImplicitCastExpr 0x56168b01df40 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x56168b01dee0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x56168b01df98 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x56168b01df68 <col:6> '<bound member function type>' ->unschedule 0x56168b01c680
|         `-CXXThisExpr 0x56168b01df58 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x56168b01a8d0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x56168b01e170 <col:26, line:65:5>
|   |-BinaryOperator 0x56168b01e090 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56168b01e028 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56168b01d308
|   | | `-MemberExpr 0x56168b01dff8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56168b01d3c8
|   | |   `-CXXThisExpr 0x56168b01dfe8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56168b01e078 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56168b01e058 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56168b01d828 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56168b01e150 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x56168b01e0c0 <col:2> 'void *' lvalue ->_thunk 0x56168b01d448
|     | `-CXXThisExpr 0x56168b01e0b0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x56168b01e128 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x56168b01e0f0 <col:20> 'int' 1
|-CXXMethodDecl 0x56168b01aa10 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x56168b01a980 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x56168b01e2d0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x56168b01e1c0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x56168b01e190 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x56168b01a980 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x56168b01e2b0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x56168b01e280 <col:2> '<bound member function type>' ->assign 0x56168b01a8d0
|       `-CXXThisExpr 0x56168b01e270 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x56168b01abe0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x56168b01aac8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x56168b01ab48 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x56168b01e450 <col:58, line:79:5>
|   |-BinaryOperator 0x56168b01e398 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56168b01e330 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56168b01d308
|   | | `-MemberExpr 0x56168b01e300 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56168b01d3c8
|   | |   `-CXXThisExpr 0x56168b01e2f0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56168b01e380 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x56168b01e360 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x56168b01aac8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x56168b01e430 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56168b01e3c8 <col:2> 'void *' lvalue ->_thunk 0x56168b01d448
|     | `-CXXThisExpr 0x56168b01e3b8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56168b01e418 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x56168b01e3f8 <col:11> 'void *' lvalue ParmVar 0x56168b01ab48 'user_data' 'void *'
|-CXXMethodDecl 0x56168b01ad30 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x56168b01aca0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x56168b01e5e8 <col:35, line:87:5>
|   |-BinaryOperator 0x56168b01e518 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56168b01e4b0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56168b01d308
|   | | `-MemberExpr 0x56168b01e480 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56168b01d3c8
|   | |   `-CXXThisExpr 0x56168b01e470 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56168b01e500 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56168b01e4e0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56168b01da00 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56168b01e5c8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56168b01e548 <col:2> 'void *' lvalue ->_thunk 0x56168b01d448
|     | `-CXXThisExpr 0x56168b01e538 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56168b01e5b0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56168b01e598 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x56168b01e578 <col:11> 'Element *' lvalue ParmVar 0x56168b01aca0 'element' 'Element *'
|-CXXMethodDecl 0x56168b01ae78 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x56168b01ade8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x56168b01e780 <col:29, line:94:5>
|   |-BinaryOperator 0x56168b01e6b0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x56168b01e648 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x56168b01d308
|   | | `-MemberExpr 0x56168b01e618 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x56168b01d3c8
|   | |   `-CXXThisExpr 0x56168b01e608 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x56168b01e698 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56168b01e678 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x56168b01dbd8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x56168b01e760 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x56168b01e6e0 <col:2> 'void *' lvalue ->_thunk 0x56168b01d448
|     | `-CXXThisExpr 0x56168b01e6d0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x56168b01e748 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x56168b01e730 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x56168b01e710 <col:11> 'Task *' lvalue ParmVar 0x56168b01ade8 'task' 'Task *'
|-CXXMethodDecl 0x56168b01af68 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x56168b01e860 <col:37, line:100:5>
|   `-ReturnStmt 0x56168b01e850 <line:99:2, col:19>
|     `-BinaryOperator 0x56168b01e830 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x56168b01e800 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x56168b01e7b0 <col:9> 'Element *const' lvalue ->_owner 0x56168b01d4a8
|       |   `-CXXThisExpr 0x56168b01e7a0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x56168b01e818 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x56168b01e7e0 <col:19> 'int' 0
|-CXXMethodDecl 0x56168b01b028 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x56168b01e920 <col:35, line:105:5>
|   `-ReturnStmt 0x56168b01e910 <line:104:2, col:23>
|     `-BinaryOperator 0x56168b01e8f0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x56168b01e8d8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x56168b01e888 <col:9> 'const int' lvalue ->_schedpos1 0x56168b01d128
|       |   `-CXXThisExpr 0x56168b01e878 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x56168b01e8b8 <col:23> 'int' 0
|-CXXMethodDecl 0x56168b01b0e8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x56168b01e988 <col:51, line:118:5>
|   `-ReturnStmt 0x56168b01e978 <line:117:2, col:9>
|     `-MemberExpr 0x56168b01e948 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x56168b01d188
|       `-CXXThisExpr 0x56168b01e938 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56168b01b1a8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x56168b01eee0 <col:37, line:136:5>
|   `-IfStmt 0x56168b01eeb8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x56168b01ea48 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x56168b01ea30 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x56168b01ea10 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x56168b01e9e0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x56168aea3468
|     |       `-MemberExpr 0x56168b01e9b0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x56168b01d188
|     |         `-CXXThisExpr 0x56168b01e9a0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x56168b01ee28 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x56168b01ee10 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x56168b01ede0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x56168b01edc8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x56168b01ed90 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x56168b01ed78 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x56168b01ed58 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56168aecf240 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x56168b01ecf8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x56168b01ece0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x56168b01ec08 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x56168b01ebf0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x56168b01ebd0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56168aeceef8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x56168b01eb70 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x56168b01ea70 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56168b01d188
|     |         |     |   `-CXXThisExpr 0x56168b01ea60 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x56168b01ebb8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x56168b01eba0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x56168b01eb50 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x56168b01eb38 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x56168b01ead8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x56168ad20490 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x56168b01ed40 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x56168b01ed28 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x56168b01ecc0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x56168b01eca8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x56168b01ec78 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x56168ad21160 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x56168b01eea8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x56168b01ee78 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x56168b01ee48 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x56168b01d188
|           `-CXXThisExpr 0x56168b01ee38 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x56168b01b268 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x56168b01efc8 <col:35, line:141:5>
|   `-ReturnStmt 0x56168b01efb8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x56168b01ef80 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x56168b01ef50 <col:9, col:17> '<bound member function type>' ->router 0x56168afa1710
|         `-ImplicitCastExpr 0x56168b01efa0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x56168b01ef38 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x56168b01ef08 <col:9> 'Element *const' lvalue ->_owner 0x56168b01d4a8
|               `-CXXThisExpr 0x56168b01eef8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56168b01b328 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x56168b01f048 <col:37, line:146:5>
|   `-ReturnStmt 0x56168b01f038 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x56168b01f020 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x56168b01eff0 <col:9> 'Element *const' lvalue ->_owner 0x56168b01d4a8
|         `-CXXThisExpr 0x56168b01efe0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56168b01b3e8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x56168b01f0c8 <col:41, line:151:5>
|   `-ReturnStmt 0x56168b01f0b8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x56168b01f0a0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x56168b01f070 <col:9> 'RouterThread *const' lvalue ->_thread 0x56168b01d508
|         `-CXXThisExpr 0x56168b01f060 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x56168b01b4b0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x56168b01b6a8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x56168b01b560 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x56168b01b5d8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56168b01dde8 <col:50> 'bool' false
|-CXXMethodDecl 0x56168b01b828 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x56168b01b768 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x56168b01b970 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56168b01b8e0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56168b01bab8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x56168b01ba28 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x56168b01bc00 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56168b01bb70 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x56168b01bd48 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56168b01bcb8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x56168b01be10 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x56168b01f230 <col:32, line:223:5>
|   `-ExprWithCleanups 0x56168b01f218 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x56168b01f1c0 <col:2, col:47> 'void'
|       |-MemberExpr 0x56168b01f0f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x56168b01b970
|       | `-CXXThisExpr 0x56168b01f0e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01f200 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56168b01f1e8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56168b01f1a0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x56168b01f188 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x56168b01f158 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x56168ad21160 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x56168b01bf50 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x56168b01bec0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x56168b01c098 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01c008 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168b01f3b8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x56168b01f3a0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x56168b01f348 <col:2, col:40> 'void'
|       |-MemberExpr 0x56168b01f258 <col:2> '<bound member function type>' ->schedule_after 0x56168b01bf50
|       | `-CXXThisExpr 0x56168b01f248 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01f388 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56168b01f370 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56168b01f308 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x56168b01f2d8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x56168b01f298 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168b01c008 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x56168b01f2f0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56168b01f2b8 <col:38> 'int' 0
|-CXXMethodDecl 0x56168b01c1e0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01c150 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168b01f628 <col:58, line:249:5>
|   `-ExprWithCleanups 0x56168b01f610 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x56168b01f5b8 <col:2, col:49> 'void'
|       |-MemberExpr 0x56168b01f3e0 <col:2> '<bound member function type>' ->schedule_after 0x56168b01bf50
|       | `-CXXThisExpr 0x56168b01f3d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01f5f8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56168b01f5e0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x56168b01f560 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x56168b01f548 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56168b01f4b8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56168aea58b8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56168b01f5a0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x56168b01f588 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56168b01f498 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168b01c150 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168b01c328 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x56168b01c298 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x56168b01f808 <col:58, line:261:5>
|   `-ExprWithCleanups 0x56168b01f7f0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x56168b01f798 <col:2, col:38> 'void'
|       |-MemberExpr 0x56168b01f650 <col:2> '<bound member function type>' ->schedule_at_steady 0x56168b01b970
|       | `-CXXThisExpr 0x56168b01f640 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01f7d8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56168b01f7c0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56168b01f760 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56168b01f748 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56168b01f728 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56168aeceef8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56168b01f6f8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56168b01f6e0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56168b01f690 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56168b01d188
|             |     `-CXXThisExpr 0x56168b01f680 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x56168b01f6c0 <col:33> 'const Timestamp' lvalue ParmVar 0x56168b01c298 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x56168b01c470 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01c3e0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168b01fae0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x56168b01fac8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x56168b01fa70 <col:2, col:79> 'void'
|       |-MemberExpr 0x56168b01f830 <col:2> '<bound member function type>' ->schedule_at_steady 0x56168b01b970
|       | `-CXXThisExpr 0x56168b01f820 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01fab0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56168b01fa98 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x56168b01fa30 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x56168b01f968 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x56168b01f950 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x56168b01f8e0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x56168b01f8b0 <col:31, col:41> '<bound member function type>' .sec 0x56168aec8db8
|             | |     `-ImplicitCastExpr 0x56168b01f900 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x56168b01f880 <col:31> 'Timestamp' lvalue ->_expiry_s 0x56168b01d188
|             | |         `-CXXThisExpr 0x56168b01f870 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x56168b01f938 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x56168b01f918 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168b01c3e0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x56168b01f9f8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x56168b01f9c8 <col:60, col:70> '<bound member function type>' .subsec 0x56168aec94b0
|                 `-ImplicitCastExpr 0x56168b01fa18 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x56168b01f998 <col:60> 'Timestamp' lvalue ->_expiry_s 0x56168b01d188
|                     `-CXXThisExpr 0x56168b01f988 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x56168b01c5b8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01c528 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56168b01fe18 <col:60, line:279:5>
|   `-ExprWithCleanups 0x56168b01fe00 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x56168b01fda8 <col:2, col:65> 'void'
|       |-MemberExpr 0x56168b01fb08 <col:2> '<bound member function type>' ->schedule_at_steady 0x56168b01b970
|       | `-CXXThisExpr 0x56168b01faf8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01fde8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x56168b01fdd0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x56168b01fd70 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x56168b01fd58 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56168b01fd38 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56168aeceef8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x56168b01fcd8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x56168b01fcc0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x56168b01fb48 <col:21> 'Timestamp' lvalue ->_expiry_s 0x56168b01d188
|             |     `-CXXThisExpr 0x56168b01fb38 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x56168b01fd20 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x56168b01fd08 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x56168b01fc68 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x56168b01fc50 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x56168b01fc20 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56168aea58b8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x56168b01fca8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x56168b01fc90 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x56168b01fc00 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x56168b01c528 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56168b01c680 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x56168b01c740 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x56168b0202e0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x56168b01fe70 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x56168b01fe40 <col:2> '<bound member function type>' ->unschedule 0x56168b01c680
|   |   `-CXXThisExpr 0x56168b01fe30 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x56168b0202c8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x56168b020290 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x56168b020278 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56168b01ff28 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x56168af014e8 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x56168b01fea0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x56168b01d188
|       | `-CXXThisExpr 0x56168b01fe90 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x56168b01ff10 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x56168b01fee0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x56168b01c800 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x56168b020638 <col:42, line:310:5>
|   |-IfStmt 0x56168b020480 <line:306:2, line:307:23>
|   | |-CallExpr 0x56168b0203b0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x56168b020398 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x56168b020338 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x56168aec0a30 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x56168b020470 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x56168b020458 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x56168b020428 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56168b020410 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x56168b0203e0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x56168b020628 <line:309:2, col:33>
|     `-ExprWithCleanups 0x56168b020610 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x56168b0205e0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56168b0205c8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x56168b020588 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x56168b020570 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x56168b020540 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x56168aea5bd0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x56168b0205b0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x56168b020520 <col:30> 'int' 500
|-CXXMethodDecl 0x56168b01c940 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01c8b0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168b01c9e8 <col:69> "" ""
|-CXXMethodDecl 0x56168b01caf8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01ca68 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168b01cba0 <col:70> "" ""
|-CXXMethodDecl 0x56168b01ccb0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01cc20 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168b01cd58 <col:71> "" ""
|-CXXMethodDecl 0x56168b01ce68 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x56168b01cdd8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56168b01cf10 <col:72> "" ""
|-EnumDecl 0x56168b01cf80 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x56168b01d080 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x56168b01d0d0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56168b01d060 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x56168b01d040 <col:25> 'int' 1
|-AccessSpecDecl 0x56168b01d0e8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x56168b01d128 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x56168b01d188 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x56168b01d1d8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56168b01d308 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x56168b01ddf8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x56168b01d3c8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x56168b01d448 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x56168b01d4a8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x56168b01d508 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x56168b01d658 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x56168b01d568 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x56168b01d828 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56168b01d710 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x56168b01d790 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x56168b01da00 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56168b01d8e8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x56168b01d968 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x56168b01dbd8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x56168b01dac0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x56168b01db40 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x56168b01dda8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<4>
         0 |   char [4] x
           | [sizeof=4, dsize=4, align=1,
           |  nvsize=4, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168af52d00 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 4
|-PackedAttr 0x56168aec7be8 <line:167:18>
|-CXXRecordDecl 0x56168aec7ca8 prev 0x56168af52d00 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56168aec7db8 <line:166:5, col:13> col:10 x 'char [4]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.4 = type { [4 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.4 = type { [4 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56168b03bc60 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x56168b133770 <line:167:18>
|-CXXRecordDecl 0x56168b133830 prev 0x56168b03bc60 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x56168b133940 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
